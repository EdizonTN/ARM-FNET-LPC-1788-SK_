
ARM_FNET_LPC1788-SK.elf:     file format elf32-littlearm
ARM_FNET_LPC1788-SK.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00012015

Program Header:
0x70000001 off    0x00022fe8 vaddr 0x0001afe8 paddr 0x0001afe8 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x0001aff0 memsz 0x0001aff0 flags r-x
    LOAD off    0x00028000 vaddr 0x10000000 paddr 0x0001aff0 align 2**15
         filesz 0x0000071c memsz 0x0000bb54 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .text         0001afe8  00000000  00000000  00008000  2**3  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0001afe8  0001afe8  00022fe8  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000718  10000000  0001aff0  00028000  2**3  CONTENTS, ALLOC, LOAD, DATA
  3 .jcr          00000004  10000718  0001b708  00028718  2**2  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          0000b438  1000071c  0001b70c  0002871c  2**2  ALLOC
  5 .heap         00000d00  1000bb58  1000bb58  00028720  2**3  CONTENTS, READONLY
  6 .stack_dummy  00000400  1000bb58  1000bb58  00029420  2**3  CONTENTS, READONLY
  7 .ARM.attributes 00000029  00000000  00000000  00029820  2**0  CONTENTS, READONLY
  8 .comment      00000070  00000000  00000000  00029849  2**0  CONTENTS, READONLY
  9 .debug_info   0001b365  00000000  00000000  000298b9  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00005505  00000000  00000000  00044c1e  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00001868  00000000  00000000  0004a128  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000011b8  00000000  00000000  0004b990  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000d7cf  00000000  00000000  0004cb48  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0002bf1c  00000000  00000000  0005a317  2**0  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0001ecf5  00000000  00000000  00086233  2**0  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00004318  00000000  00000000  000a4f28  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
0001afe8 l    d  .ARM.exidx	00000000 .ARM.exidx
10000000 l    d  .data	00000000 .data
10000718 l    d  .jcr	00000000 .jcr
1000071c l    d  .bss	00000000 .bss
1000bb58 l    d  .heap	00000000 .heap
1000bb58 l    d  .stack_dummy	00000000 .stack_dummy
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 ./Chip/Core/Source/Template/GCC/startup_LPC177x_8x.o
00000400 l       *ABS*	00000000 Stack_Size
00000d00 l       *ABS*	00000000 Heap_Size
0001201a l       .text	00000000 .flash_to_ram_loop
00000000 l    df *ABS*	00000000 c:/embedded/tools/gcc-arm/bin/../lib/gcc/arm-none-eabi/4.8.4/armv7-m/crti.o
00000000 l    df *ABS*	00000000 crtstuff.c
0001afe4 l     O .text	00000000 __EH_FRAME_BEGIN__
10000718 l     O .jcr	00000000 __JCR_LIST__
000000e4 l     F .text	00000000 __do_global_dtors_aux
1000071c l       .bss	00000000 completed.7860
10000714 l     O .data	00000000 __do_global_dtors_aux_fini_array_entry
00000108 l     F .text	00000000 frame_dummy
10000720 l       .bss	00000000 object.7865
10000710 l     O .data	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 c:/embedded/tools/gcc-arm/bin/../lib/gcc/arm-none-eabi/4.8.4/../../../../arm-none-eabi/lib/armv7-m/crt0.o
00000000 l    df *ABS*	00000000 fnet_arp.c
00000268 l     F .text	000000a0 fnet_arp_timer
00000900 l     F .text	00000014 fnet_arp_ip_duplicated
00000308 l     F .text	000001ae fnet_arp_add_entry
000004b8 l     F .text	00000088 fnet_arp_update_entry
00000000 l    df *ABS*	00000000 fnet_checksum.c
0000099c l     F .text	00000192 fnet_checksum_low
00000b30 l     F .text	000000be fnet_checksum_nb
00000000 l    df *ABS*	00000000 fnet_error.c
10000738 l     O .bss	00000004 FNET_ERR_NUMBER
00000000 l    df *ABS*	00000000 fnet_eth.c
00013f44 l     O .text	00000010 fnet_eth_prot_if_list
00001064 l     F .text	00000040 fnet_eth_timer
00000000 l    df *ABS*	00000000 fnet_icmp.c
00001164 l     F .text	00000232 fnet_icmp_input
00001398 l     F .text	0000005c fnet_icmp_output
00000000 l    df *ABS*	00000000 fnet_icmp6.c
00000000 l    df *ABS*	00000000 fnet_igmp.c
00000000 l    df *ABS*	00000000 fnet_inet.c
00001808 l     F .text	00000074 fnet_inet_ntop_ip4
0000172c l     F .text	000000dc fnet_inet_pton_ip4
00000000 l    df *ABS*	00000000 fnet_ip.c
10000740 l     O .bss	00000008 ip_queue
10000748 l     O .bss	00000004 ip_event
00001aac l     F .text	00000082 fnet_ip_netif_output
1000074c l     O .bss	00000002 ip_id.5857
00000000 l    df *ABS*	00000000 fnet_ip6.c
00000000 l    df *ABS*	00000000 fnet_isr.c
10000750 l     O .bss	00000004 fnet_locked
10000754 l     O .bss	00000004 fnet_isr_table
10000028 l     O .data	00000004 fnet_event_desc_last
0000215c l     F .text	00000070 fnet_isr_register
00000000 l    df *ABS*	00000000 fnet_loop.c
00000000 l    df *ABS*	00000000 fnet_mempool.c
00000000 l    df *ABS*	00000000 fnet_nd6.c
00000000 l    df *ABS*	00000000 fnet_netbuf.c
10000758 l     O .bss	00000004 fnet_mempool_main
00000000 l    df *ABS*	00000000 fnet_netif.c
1000075c l     O .bss	00000004 fnet_netif_default
10000760 l     O .bss	00000004 fnet_netif_dupip_handler
00003a28 l     F .text	00000058 fnet_netif_assign_scope_id
00000000 l    df *ABS*	00000000 fnet_prot.c
00013ff0 l     O .text	00000010 fnet_prot_if_list
00000000 l    df *ABS*	00000000 fnet_raw.c
00014000 l     O .text	0000002c fnet_raw_socket_api
00003f28 l     F .text	00000036 fnet_raw_attach
00003f60 l     F .text	00000028 fnet_raw_detach
00003fd0 l     F .text	00000048 fnet_raw_connect
000040e4 l     F .text	00000094 fnet_raw_rcv
00004018 l     F .text	000000ca fnet_raw_snd
00003f88 l     F .text	00000046 fnet_raw_shutdown
00003c94 l     F .text	00000020 fnet_raw_release
00003cb4 l     F .text	0000006a fnet_raw_output
00003d88 l     F .text	000001a0 fnet_raw_input
00000000 l    df *ABS*	00000000 fnet_socket.c
10000050 l     O .data	00000002 fnet_port_last
10000768 l     O .bss	00000028 fnet_socket_desc
00004248 l     F .text	00000054 fnet_socket_desc_alloc
0000429c l     F .text	00000028 fnet_socket_desc_set
000042c4 l     F .text	00000020 fnet_socket_desc_free
000042e4 l     F .text	00000048 fnet_socket_desc_find
000055a0 l     F .text	0000004c fnet_socket_addr_check_len
00000000 l    df *ABS*	00000000 fnet_stack.c
00005834 l     F .text	00000048 fnet_stack_init
10000790 l     O .bss	00003c00 heap.5744
0000587c l     F .text	00000016 fnet_stack_release
00000000 l    df *ABS*	00000000 fnet_stdlib.c
000061cc l     F .text	00000034 fnet_tolower
00000000 l    df *ABS*	00000000 fnet_tcp.c
10000054 l     O .data	00000004 fnet_tcp_isntime
10004390 l     O .bss	00000004 fnet_tcp_fasttimer
10004394 l     O .bss	00000004 fnet_tcp_slowtimer
0001402c l     O .text	0000002c fnet_tcp_socket_api
00006744 l     F .text	00000086 fnet_tcp_attach
000067cc l     F .text	00000144 fnet_tcp_close
00006910 l     F .text	000000f0 fnet_tcp_connect
00006a00 l     F .text	0000005a fnet_tcp_accept
00006a5c l     F .text	00000194 fnet_tcp_rcv
00006bf0 l     F .text	00000270 fnet_tcp_snd
00006e60 l     F .text	00000074 fnet_tcp_shutdown
00006ed4 l     F .text	00000132 fnet_tcp_setsockopt
00007008 l     F .text	00000114 fnet_tcp_getsockopt
0000711c l     F .text	0000009e fnet_tcp_listen
000063d0 l     F .text	00000068 fnet_tcp_init
00006438 l     F .text	0000006c fnet_tcp_release
000064a4 l     F .text	0000005c fnet_tcp_input_ip4
00006648 l     F .text	000000fc fnet_tcp_ctrlinput
000071bc l     F .text	00000070 fnet_tcp_drain
00008990 l     F .text	00000050 fnet_tcp_fasttimo
0000890c l     F .text	00000084 fnet_tcp_slowtimo
000096b8 l     F .text	0000004c fnet_tcp_abortsk
00006500 l     F .text	00000146 fnet_tcp_input
0000953c l     F .text	000000d6 fnet_tcp_sendrst
000099d4 l     F .text	00000140 fnet_tcp_findsk
00007320 l     F .text	00000844 fnet_tcp_inputsk
00009b80 l     F .text	00000074 fnet_tcp_closesk
000083f0 l     F .text	00000294 fnet_tcp_sendanydata
0000722c l     F .text	000000f4 fnet_tcp_initconnection
000098e0 l     F .text	000000a6 fnet_tcp_setsynopt
00009044 l     F .text	000001be fnet_tcp_sendheadseg
00009488 l     F .text	000000b2 fnet_tcp_sendack
00009cc4 l     F .text	0000004a fnet_tcp_hit
00009c68 l     F .text	00000038 fnet_tcp_deletetmpbuf
00009d10 l     F .text	00000032 fnet_tcp_getsize
000097c0 l     F .text	00000120 fnet_tcp_getopt
00009988 l     F .text	0000004a fnet_tcp_getsynopt
00009b14 l     F .text	0000002c fnet_tcp_addpartialsk
00009b40 l     F .text	00000040 fnet_tcp_movesk2incominglist
00007b64 l     F .text	00000478 fnet_tcp_dataprocess
00009204 l     F .text	00000284 fnet_tcp_senddataseg
00007fdc l     F .text	00000414 fnet_tcp_addinpbuf
00008684 l     F .text	0000019a fnet_tcp_urgprocessing
00008820 l     F .text	0000007c fnet_tcp_finprocessing
0000889c l     F .text	0000006e fnet_tcp_getrcvwnd
000089e0 l     F .text	0000016e fnet_tcp_slowtimosk
00008b50 l     F .text	00000052 fnet_tcp_fasttimosk
00008ba4 l     F .text	00000174 fnet_tcp_rtimeo
00008d18 l     F .text	000000c6 fnet_tcp_ktimeo
00008de0 l     F .text	0000009c fnet_tcp_ptimeo
00008e7c l     F .text	000001c6 fnet_tcp_sendseg
00009704 l     F .text	000000ba fnet_tcp_addopt
00009614 l     F .text	000000a2 fnet_tcp_sendrstsk
00009bf4 l     F .text	00000026 fnet_tcp_delpartialsk
00009c1c l     F .text	00000026 fnet_tcp_delincomingsk
00009ca0 l     F .text	00000022 fnet_tcp_delsk
00009c44 l     F .text	00000022 fnet_tcp_delcb
00000000 l    df *ABS*	00000000 fnet_timer.c
10004398 l     O .bss	00000004 fnet_tl_head
1000439c l     O .bss	00000004 fnet_current_time
00000000 l    df *ABS*	00000000 fnet_udp.c
00014058 l     O .text	0000002c fnet_udp_socket_api
0000a3b0 l     F .text	00000036 fnet_udp_attach
0000a3e8 l     F .text	00000028 fnet_udp_detach
0000a458 l     F .text	00000038 fnet_udp_connect
0000a58c l     F .text	000000a2 fnet_udp_rcv
0000a490 l     F .text	000000fa fnet_udp_snd
0000a410 l     F .text	00000046 fnet_udp_shutdown
00009fe0 l     F .text	00000020 fnet_udp_release
0000a0e4 l     F .text	0000005c fnet_udp_input_ip4
0000a630 l     F .text	000000f8 fnet_udp_control_input
0000a000 l     F .text	000000e2 fnet_udp_output
0000a140 l     F .text	00000270 fnet_udp_input
00000000 l    df *ABS*	00000000 fnet_tftp_cln.c
00000000 l    df *ABS*	00000000 fnet_tftp_srv.c
00000000 l    df *ABS*	00000000 fnet_telnet.c
100043a0 l     O .bss	000000d8 telnet_if_list
0000a728 l     F .text	0000002c tx_buffer_write
0000a754 l     F .text	0000001c tx_buffer_free_space
0000a770 l     F .text	0000003e rx_buffer_write
0000a7b0 l     F .text	00000040 rx_buffer_read
0000a7f0 l     F .text	00000032 rx_buffer_free_space
0000a824 l     F .text	0000003c fnet_telnet_putchar
0000a8a8 l     F .text	00000088 fnet_telnet_send
0000a860 l     F .text	0000002e fnet_telnet_getchar
0000a890 l     F .text	00000018 fnet_telnet_flush
0000a930 l     F .text	0000003e fnet_telnet_send_cmd
0000a970 l     F .text	000002c8 fnet_telnet_state_machine
00000000 l    df *ABS*	00000000 fnet_shell.c
10004478 l     O .bss	00000068 shell_if_list
0000afcc l     F .text	00000024 fnet_shell_echo
0000aff0 l     F .text	00000340 fnet_shell_state_machine
0000b4b8 l     F .text	00000124 fnet_shell_make_argv
0000b460 l     F .text	00000058 fnet_shell_esc_clear
00000000 l    df *ABS*	00000000 fnet_serial.c
0000b890 l     F .text	00000100 fnet_serial_printk_mknumstr
0000b990 l     F .text	00000040 fnet_serial_printk_pad
0000c094 l     F .text	0000003e fnet_serial_buffer_putchar
00000000 l    df *ABS*	00000000 fnet_poll.c
100044e0 l     O .bss	0000002c fnet_poll_if
00000000 l    df *ABS*	00000000 fnet_ping.c
1000450c l     O .bss	0000007c fnet_ping_if
0000c43c l     F .text	00000278 fnet_ping_state_machine
00000000 l    df *ABS*	00000000 fnet_http.c
100000a0 l     O .data	00000008 fnet_http_method_list
100000a8 l     O .data	0000000c fnet_http_file_handler_list
000142c4 l     O .text	00000010 fnet_http_default_handler
10004588 l     O .bss	000074c4 http_if_list
0000c6f8 l     F .text	0000046c fnet_http_state_machine
0000d46c l     F .text	000000c4 fnet_http_version_parse
0000d530 l     F .text	00000030 fnet_http_status_ok
0000ce50 l     F .text	00000220 fnet_http_tx_status_line
00000000 l    df *ABS*	00000000 fnet_http_auth.c
00000000 l    df *ABS*	00000000 fnet_http_cgi.c
0000d560 l     F .text	000000c8 fnet_http_cgi_handle
0000d628 l     F .text	00000056 fnet_http_cgi_send
00000000 l    df *ABS*	00000000 fnet_http_get.c
0000d680 l     F .text	00000056 fnet_http_get_handle
0000d6d8 l     F .text	00000042 fnet_http_get_send
0000d71c l     F .text	00000036 fnet_http_get_close
00000000 l    df *ABS*	00000000 fnet_http_post.c
00000000 l    df *ABS*	00000000 fnet_http_ssi.c
00014320 l     O .text	00000005 fnet_http_ssi_head
00014328 l     O .text	00000003 fnet_http_ssi_tail
0000d754 l     F .text	0000002a fnet_http_ssi_handle
0000d780 l     F .text	000002ac fnet_http_ssi_send
00000000 l    df *ABS*	00000000 fnet_fs.c
1000ba4c l     O .bss	0000003c fnet_fs_desc_list
1000ba88 l     O .bss	00000004 fnet_fs_list
0000dce0 l     F .text	00000068 fnet_fs_find_mount
00000000 l    df *ABS*	00000000 fnet_fs_rom.c
00014350 l     O .text	00000008 fnet_fs_rom_dir_operations
00014358 l     O .text	00000010 fnet_fs_rom_file_operations
00014368 l     O .text	00000008 fnet_fs_rom_operations
10000148 l     O .data	00000018 fnet_fs_rom
1000ba8c l     O .bss	00000004 fnet_fs_rom_registered
0000e380 l     F .text	000000ae fnet_fs_rom_find
0000e488 l     F .text	0000003c fnet_fs_rom_fill_dirent
00000000 l    df *ABS*	00000000 fnet_fs_root.c
0001437c l     O .text	00000008 fnet_fs_root_dir_operations
10000160 l     O .data	00000018 fnet_fs_root
1000ba90 l     O .bss	00000004 fnet_fs_root_registered
00000000 l    df *ABS*	00000000 fnet_flash.c
00000000 l    df *ABS*	00000000 fnet_dns.c
00000000 l    df *ABS*	00000000 fnet_dhcp.c
00000000 l    df *ABS*	00000000 fnet_freertos.c
00000000 l    df *ABS*	00000000 fnet_brtos.c
00000000 l    df *ABS*	00000000 fnet_lpc.c
00000000 l    df *ABS*	00000000 fnet_lpc1768_serial.c
00000000 l    df *ABS*	00000000 fnet_lpc1768_timer.c
0000ea3c l     F .text	00000030 NVIC_EnableIRQ
00000000 l    df *ABS*	00000000 fnet_lpc_eth.c
0000ebc4 l     F .text	00000030 NVIC_EnableIRQ
00000000 l    df *ABS*	00000000 fnet_fec.c
00000000 l    df *ABS*	00000000 fnet_cpu.c
00000000 l    df *ABS*	00000000 fapp_fs_image.c
00014498 l     O .text	00000464 node_2
000148fc l     O .text	0000057e node_3
00014e7c l     O .text	00001271 node_4
000160f0 l     O .text	00000a52 node_5
00016b44 l     O .text	00000c6b node_6
000177b0 l     O .text	0000066e node_7
00017e20 l     O .text	00000b41 node_8
00018964 l     O .text	0000081e node_9
00019184 l     O .text	00000885 node_10
00019a0c l     O .text	0000046a node_11
00019e78 l     O .text	00000ccd node_12
00000000 l    df *ABS*	00000000 fapp_fs_image_http09.c
00000000 l    df *ABS*	00000000 fapp_http_cgi.c
0001ad80 l     O .text	00000024 fapp_cgi_table
0000f5f4 l     F .text	000000b8 fapp_http_cgi_stdata_handle
0000f748 l     F .text	00000072 fapp_http_string_buffer_respond
0000f6e0 l     F .text	00000068 fapp_http_cgi_graph_handle
1000baa8 l     O .bss	00000037 fapp_http_cgi_buffer
1000bae0 l     O .bss	00000004 fapp_http_cgi_rand_next
0000f6ac l     F .text	00000034 fapp_http_cgi_rand
00000000 l    df *ABS*	00000000 fnet_main.c
00000000 l    df *ABS*	00000000 debug_frmwrk.c
00000000 l    df *ABS*	00000000 lpc177x_8x_adc.c
00000000 l    df *ABS*	00000000 lpc177x_8x_bod.c
00000000 l    df *ABS*	00000000 lpc177x_8x_can.c
00000000 l    df *ABS*	00000000 lpc177x_8x_clkpwr.c
00000000 l    df *ABS*	00000000 lpc177x_8x_crc.c
00000000 l    df *ABS*	00000000 lpc177x_8x_dac.c
00000000 l    df *ABS*	00000000 lpc177x_8x_eeprom.c
00000000 l    df *ABS*	00000000 lpc177x_8x_emac.c
00000000 l    df *ABS*	00000000 lpc177x_8x_emc.c
00000000 l    df *ABS*	00000000 lpc177x_8x_exti.c
00000000 l    df *ABS*	00000000 lpc177x_8x_gpdma.c
00000000 l    df *ABS*	00000000 lpc177x_8x_gpio.c
0000fa68 l     F .text	00000080 GPIO_GetPointer
0000fae8 l     F .text	00000080 FIO_HalfWordGetPointer
0000fb68 l     F .text	00000080 FIO_ByteGetPointer
00000000 l    df *ABS*	00000000 lpc177x_8x_i2c.c
00000000 l    df *ABS*	00000000 lpc177x_8x_i2s.c
00000000 l    df *ABS*	00000000 lpc177x_8x_iap.c
00000000 l    df *ABS*	00000000 lpc177x_8x_lcd.c
00000000 l    df *ABS*	00000000 lpc177x_8x_mci.c
00000000 l    df *ABS*	00000000 lpc177x_8x_mcpwm.c
00000000 l    df *ABS*	00000000 lpc177x_8x_nvic.c
00000000 l    df *ABS*	00000000 lpc177x_8x_pinsel.c
000103d0 l     F .text	00000034 PIN_GetPointer
00000000 l    df *ABS*	00000000 lpc177x_8x_pwm.c
00000000 l    df *ABS*	00000000 lpc177x_8x_qei.c
00000000 l    df *ABS*	00000000 lpc177x_8x_rtc.c
00000000 l    df *ABS*	00000000 lpc177x_8x_ssp.c
00000000 l    df *ABS*	00000000 lpc177x_8x_systick.c
00000000 l    df *ABS*	00000000 lpc177x_8x_timer.c
00000000 l    df *ABS*	00000000 lpc177x_8x_uart.c
00010acc l     F .text	000002d8 uart_set_divisors
00010da4 l     F .text	0000004c uart_get_pointer
00000000 l    df *ABS*	00000000 lpc177x_8x_wwdt.c
00000000 l    df *ABS*	00000000 system_LPC177x_8x.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _arm_muldivsf3.o
00000000 l    df *ABS*	00000000 _arm_fixunssfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 bpabi.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 impure.c
100002e0 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00013cf4 l     F .text	00000014 register_fini
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 crtstuff.c
0001afe4 l     O .text	00000000 __FRAME_END__
10000718 l     O .jcr	00000000 __JCR_END__
00000000 l    df *ABS*	00000000 c:/embedded/tools/gcc-arm/bin/../lib/gcc/arm-none-eabi/4.8.4/armv7-m/crtn.o
00000000 l    df *ABS*	00000000 _exit.c
00000000 l    df *ABS*	00000000 
10000718 l       .data	00000000 __fini_array_end
10000714 l       .data	00000000 __fini_array_start
10000714 l       .data	00000000 __init_array_end
1000070c l       .data	00000000 __preinit_array_end
1000070c l       .data	00000000 __init_array_start
1000070c l       .data	00000000 __preinit_array_start
000120a8  w    F .text	00000002 GPIO_IRQHandler
0000b5dc g     F .text	00000048 fnet_shell_printf
0000312c g     F .text	0000003c fnet_heap_init
00000d30 g     F .text	00000056 fnet_checksum_pseudo_end
1000bb58 g       .heap	00000d00 __HeapBase
0000fc58 g     F .text	00000028 GPIO_SetValue
00001df0 g     F .text	00000038 fnet_ip_maximum_packet
0001368c g     F .text	00000030 .hidden __gnu_uldivmod_helper
00003d20 g     F .text	00000066 fnet_raw_input_ip4
0000e158 g     F .text	00000034 fnet_fs_feof
0000385c g     F .text	00000022 fnet_netif_set_ip4_addr_automatic
0000ea9c g     F .text	00000012 TIMER2_IRQHandler
0000c12c g     F .text	00000070 fnet_snprintf
00012054  w    F .text	00000002 DebugMon_Handler
0000d390 g     F .text	000000dc fnet_http_uri_parse
000136c0 g     F .text	000002a0 .hidden __divdi3
10000000 g       .data	00000000 __data_start__
0000359c g     F .text	0000005c fnet_netif_release
00012c14 g     F .text	0000005a .hidden __floatdidf
0000432c g     F .text	0000003a fnet_socket_release
00012070  w    F .text	00000002 I2C0_IRQHandler
1000bb18 g     O .bss	00000001 PINSEL3_DEFS
0000c2d0 g     F .text	0000016c fnet_ping_request
000125b0 g     F .text	0000006a HW_initialize_ETH
00010520 g     F .text	00000068 PINSEL_ConfigPin
00010020 g     F .text	0000008c FIO_HalfWordSetMask
000142ec g     O .text	00000008 fnet_http_content_js
00012590 g     F .text	0000001e HardFault_Handler
1000073c g     O .bss	00000004 fnet_eth_number
00002b00 g     F .text	0000004a fnet_netbuf_free_chain
0000f994 g     F .text	0000004c CLKPWR_ConfigPPWR
00004d30 g     F .text	0000002c recv
00004718 g     F .text	0000018c connect
0000b724 g     F .text	00000028 fnet_shell_script_release
1000bb1c g     O .bss	00000004 PINSEL2_DEFS
1000bb20 g     O .bss	00000002 BASIC_STATUS_REGISTER_BITS
0000e430 g     F .text	00000058 fnet_fs_rom_opendir
00010588 g     F .text	00000084 PINSEL_SetPinMode
00005c78 g     F .text	00000054 fnet_strcmp
00009df8 g     F .text	0000001c fnet_timer_ticks_inc
000134b8 g     F .text	00000136 .hidden __divsf3
00012518 g     F .text	0000001c SysTick_Handler
0001209e  w    F .text	00000002 USBActivity_IRQHandler
0000ce24 g     F .text	0000002c fnet_http_enabled
0001206e  w    F .text	00000002 PWM1_IRQHandler
00012096  w    F .text	00000002 SDIO_IRQHandler
0000fc80 g     F .text	00000028 GPIO_ClearValue
0000fc10 g     F .text	00000048 GPIO_SetDir
0000562c g     F .text	00000038 fnet_socket_addr_is_broadcast
0000535c g     F .text	0000004e fnet_socket_buffer_release
00012056  w    F .text	00000002 PendSV_Handler
00011570 g     F .text	00000118 UART_IntConfig
00012048  w    F .text	00000002 NMI_Handler
0000e678 g     F .text	00000098 fnet_fs_rom_fseek
0001aff0 g       .ARM.exidx	00000000 __exidx_end
1000baa4 g     O .bss	00000001 isTxDone
000101cc g     F .text	00000070 FIO_ByteSetMask
1000ba9e g     O .bss	00000001 isTransmittingFrame
0000fe6c g     F .text	00000024 FIO_SetDir
00003c50 g     F .text	00000044 fnet_prot_drain
00012072  w    F .text	00000002 I2C1_IRQHandler
00012084  w    F .text	00000002 EINT2_IRQHandler
00012068  w    F .text	00000002 UART1_IRQHandler
0001aff0 g       .ARM.exidx	00000000 __etext
00003748 g     F .text	0000002a fnet_netif_set_ip4_gateway
000026cc g     F .text	000000b2 fnet_netbuf_new
00012086  w    F .text	00000002 EINT3_IRQHandler
000041c4 g     F .text	0000003c fnet_socket_list_add
0001178c g     F .text	000000a4 UART_CheckBusy
000120a0  w    F .text	00000002 CANActivity_IRQHandler
00000f98 g     F .text	00000054 fnet_eth_init
0000101c g     F .text	00000014 fnet_eth_drain
0000df44 g     F .text	0000014c fnet_fs_fopen_re
000031ac g     F .text	00000018 fnet_free_mem_status_netbuf
10000284 g     O .data	00000048 fnet_eth0_if
10000178 g     O .data	0000010c fnet_lpceth_eth0_if
1000baec g     O .bss	00000004 fnet_netif_list
00001688 g     F .text	0000002e fnet_inet_ntop
000055ec g     F .text	00000040 fnet_socket_addr_is_multicast
00013140 g     F .text	00000160 .hidden __aeabi_fadd
00010df0 g     F .text	000002fc UART_Init
0001313c g     F .text	00000164 .hidden __subsf3
0000f9fc g     F .text	00000024 CLKPWR_DeepSleep
00003018 g     F .text	00000062 fnet_netbuf_concat
0000e920 g     F .text	00000044 fnet_cpu_serial_putchar
00002510 g     F .text	000000ea fnet_mempool_malloc
0000b330 g     F .text	00000100 fnet_shell_init
100000c8 g     O .data	00000080 fnet_http_status_list
00000540 g     F .text	00000080 fnet_arp_lookup
0000d264 g     F .text	0000012a fnet_http_query_unencode
0000190c g     F .text	00000030 fnet_ip_will_fragment
0001084c g     F .text	00000088 PINSEL_SetOpenDrainMode
00002cbc g     F .text	00000138 fnet_netbuf_trim
00012064  w    F .text	00000002 TIMER3_IRQHandler
0000ac38 g     F .text	000002a4 fnet_telnet_init
00012066  w    F .text	00000002 UART0_IRQHandler
1000bb24 g     O .bss	00000008 txDescriptorStatus
1000bb2c g     O .bss	00000002 BASIC_CONTROL_REGISTER_SETTINGS
00003264 g     F .text	00000014 fnet_mem_release
00000690 g     F .text	000001b8 fnet_arp_input
1000bb30 g     O .bss	00000004 PHYIDS
000143b4 g     O .text	0000002c fnet_lpceth_api
00000cdc g     F .text	00000052 fnet_checksum_pseudo_start
000108d4 g     F .text	0000007c PINSEL_SetAnalogPinMode
00010404 g     F .text	0000011a PINSEL_GetPinType
00012ba4 g     F .text	00000022 .hidden __floatsidf
00010a50 g     F .text	0000007c PINSEL_SetI2CFilter
000037dc g     F .text	00000026 fnet_netif_get_ip4_gateway
000140fc g     O .text	00000010 fnet_serial_stream_port2
00003420 g     F .text	00000044 fnet_netif_get_by_ip4_addr
00002df4 g     F .text	00000222 fnet_netbuf_cut_center
1000007c g     O .data	00000024 fnet_udp_prot_if
00013630 g     F .text	00000000 .hidden __aeabi_uldivmod
000053ac g     F .text	00000058 fnet_socket_buffer_append_record
0000f7bc g     F .text	0000009c FNET_START
0000e908 g     F .text	00000018 fnet_cpu_isr_install
0000f858 g     F .text	000000dc CLKPWR_SetCLKDiv
00003af0 g     F .text	0000007c fnet_prot_init
0000193c g     F .text	00000170 fnet_ip_output
100002cc g     O .data	00000004 SystemCoreClock
0000af6c g     F .text	00000034 fnet_telnet_close_session
00013ef8 g     O .text	00000006 fnet_eth_null_addr
00004514 g     F .text	00000078 fnet_socket_get_uniqueport
1000ba98 g     O .bss	00000004 sentPackets
0000307c g     F .text	0000003e fnet_netbuf_add_chain
0000f3c4 g     F .text	00000030 fnet_lpceth_get_statistics
00000000  w      *UND*	00000000 malloc
0000e774 g     F .text	00000024 fnet_fs_root_unregister
00003b6c g     F .text	00000048 fnet_prot_release
00003aac g     F .text	00000044 fnet_netif_get_by_scope_id
000132a8 g     F .text	0000001c .hidden __aeabi_i2f
00000c2c g     F .text	0000003c fnet_checksum_buf
00012050  w    F .text	00000002 UsageFault_Handler
00005c0c g     F .text	0000001a fnet_memset_zero
1000bb34 g     O .bss	00000002 AUTONEG_PARTNER_BITS
0000eb98 g     F .text	0000002c fnet_cpu_timer_release
0000f36c g     F .text	00000058 fnet_lpceth_set_hw_addr
000142dc g     O .text	00000008 fnet_http_content_jpg
00000f34 g     F .text	00000064 fnet_eth_prot_input
00004d5c g     F .text	000000de recvfrom
000033dc g     F .text	00000044 fnet_netif_get_by_number
0000e798 g     F .text	00000038 fnet_fs_root_opendir
00005dc0 g     F .text	00000048 fnet_strcpy
00003834 g     F .text	00000026 fnet_netif_get_ip4_addr_automatic
0000fbe8 g     F .text	00000012 GPIO_Init
0000aedc g     F .text	0000008e fnet_telnet_release
1000c858 g       .heap	00000000 __HeapLimit
1000071c g       .bss	00000000 __bss_start__
0000f054 g     F .text	00000138 fnet_lpceth_input
0000fbfc g     F .text	00000012 GPIO_Deinit
10000000 g     O .data	00000000 .hidden __dso_handle
00012b84 g     F .text	0000001e .hidden __aeabi_ui2d
0000c024 g     F .text	0000002c fnet_printf
000005c0 g     F .text	000000d0 fnet_arp_resolve
0000c220 g     F .text	00000078 fnet_poll_service_register
00011688 g     F .text	00000078 UART_GetLineStatus
0000e318 g     F .text	00000024 fnet_fs_rom_unregister
00012900 g     F .text	00000000 .hidden __aeabi_drsub
00005e08 g     F .text	0000005a fnet_strncpy
0000fe34 g     F .text	00000038 GPIO_ClearInt
0000feac g     F .text	0000001c FIO_ClearValue
0000f040 g     F .text	00000012 fnet_lpceth_release
00005894 g     F .text	0000033a fnet_memcpy
0001023c g     F .text	00000038 FIO_ByteSetValue
00004614 g     F .text	00000104 socket
0001abfc g     O .text	000000e0 fnet_fs_image_nodes
00003a04 g     F .text	00000024 fnet_netif_dupip_handler_signal
0000afa0 g     F .text	0000002c fnet_telnet_enabled
00002660 g     F .text	0000006c fnet_mempool_malloc_max
1000bb36 g     O .bss	00000001 LAN8720_REGISTERS
0001207c  w    F .text	00000002 PLL0_IRQHandler
00005664 g     F .text	0000003c fnet_socket_addr_is_unspecified
0000338c g     F .text	00000050 fnet_netif_get_by_name
1000bb37 g     O .bss	00000001 MII_CLK_DIVS
0001208e  w    F .text	00000002 CAN_IRQHandler
0001412c g     O .text	00000010 fnet_serial_stream_port5
000001ac g     F .text	00000090 fnet_arp_init
10000058 g     O .data	00000024 fnet_tcp_prot_if
0001209c  w    F .text	00000002 PLL1_IRQHandler
0000b624 g     F .text	0000005c fnet_shell_println
0000b84c g     F .text	0000001e fnet_serial_getchar
00013f00 g     O .text	00000006 fnet_eth_broadcast
00012bc8 g     F .text	0000003a .hidden __extendsfdf2
00012ec4 g     F .text	000001d0 .hidden __aeabi_ddiv
00009fbc g     F .text	00000024 fnet_timer_ms2ticks
1000baa0 g     O .bss	00000004 lastInterruptStatus
00012078  w    F .text	00000002 SSP0_IRQHandler
00002368 g     F .text	00000020 fnet_isr_init
00011188 g     F .text	00000078 UART_SendByte
0000f3f4 g     F .text	00000018 fnet_lpceth_is_connected
0001290c g     F .text	00000276 .hidden __adddf3
000103b4 g     F .text	0000001c NVIC_SetVTOR
0001afe8 g       .text	00000000 __exidx_start
1000bb38 g     O .bss	00000004 txFragmentPtr
1000bb3c g     O .bss	00000004 rxFragmentPtr
00012c70 g     F .text	00000254 .hidden __aeabi_dmul
00011930 g     F .text	0000002a UART_FIFOConfigStructInit
00009e14 g     F .text	00000060 fnet_timer_handler_bottom
0001afe0 g     O .text	00000004 _global_impure_ptr
00001030 g     F .text	00000034 fnet_eth_change_addr_notify
000031dc g     F .text	00000014 fnet_mem_release_netbuf
00013c10 g     F .text	00000050 __libc_init_array
00013960 g     F .text	00000290 .hidden __udivdi3
0000361c g     F .text	000000e2 fnet_netif_set_ip4_addr
00004c28 g     F .text	0000002c send
00000138 g     F .text	00000000 _mainCRTStartup
00004200 g     F .text	00000046 fnet_socket_list_del
0000cd8c g     F .text	00000096 fnet_http_release
00012b84 g     F .text	0000001e .hidden __floatunsidf
00011700 g     F .text	0000008c UART_GetIntId
1000002c g     O .data	00000024 fnet_raw_prot_if
0000ec44 g     F .text	0000005c fnet_lpceth_read_from_phy
0000ed34 g     F .text	000001cc fnet_lpceth_init
0000b82c g     F .text	0000001e fnet_serial_putchar
00012092  w    F .text	00000002 I2S_IRQHandler
0000eca0 g     F .text	00000094 fnet_eth_io_init
00013ee0 g     F .text	00000000 _init
00001b30 g     F .text	00000048 fnet_ip_input
00012074  w    F .text	00000002 I2C2_IRQHandler
00005fc8 g     F .text	00000062 fnet_strncmp
00002250 g     F .text	0000001c fnet_isr_lock
0000de6c g     F .text	0000002e fnet_fs_closedir
1000ba9d g     O .bss	00000001 recvPacketsWaiting
000029b8 g     F .text	000000fc fnet_netbuf_to_buf
00013094 g     F .text	0000009e .hidden __aeabi_d2f
00004b2c g     F .text	000000fa accept
0001313c g     F .text	00000164 .hidden __aeabi_fsub
100000b4 g     O .data	00000014 fnet_http_content_type_list
00013e04 g     F .text	00000030 __libc_fini_array
0001207e  w    F .text	00000002 RTC_IRQHandler
00005d08 g     F .text	0000004e fnet_strcat
0000d0e8 g     F .text	0000007c fnet_http_find_content_type
0001060c g     F .text	00000080 PINSEL_SetHysMode
0001205e  w    F .text	00000002 TIMER0_IRQHandler
00011ea0 g     F .text	00000064 UART_RS485ReceiverCmd
0000dae0 g     F .text	0000004c fnet_fs_unregister
00012014 g     F .text	00000034 Reset_Handler
0000ef00 g     F .text	00000140 fnet_lpceth_init_dma
0000626c g     F .text	000000a8 fnet_strcmp_splitter
00012076  w    F .text	00000002 SPI_IRQHandler
0000f18c g     F .text	0000016c fnet_lpceth_output
100002d8 g     O .data	00000004 USBClock
000120a6  w    F .text	00000002 LCD_IRQHandler
0000e888 g     F .text	00000044 fnet_cpu_irq_disable
0000242c g     F .text	000000e2 fnet_mempool_free
000132d4 g     F .text	0000007c .hidden __floatdisf
00005768 g     F .text	00000032 fnet_socket_addr_route
0001430c g     O .text	00000014 fnet_http_method_get
0000c050 g     F .text	00000044 fnet_println
1000bb4c g     O .bss	00000004 fapp_default_netif
1000baf0 g     O .bss	00000028 fnet_fs_mount_list
0000e18c g     F .text	00000070 fnet_fs_fgetc
0001290c g     F .text	00000276 .hidden __aeabi_dadd
0000da68 g     F .text	00000038 fnet_fs_release
00005e64 g     F .text	0000006c fnet_strrchr
000048a4 g     F .text	0000012e bind
00012c04 g     F .text	0000006a .hidden __aeabi_ul2d
00009da0 g     F .text	00000018 fnet_timer_ticks
00001ff8 g     F .text	00000060 fnet_ip_queue_read
00012082  w    F .text	00000002 EINT1_IRQHandler
00012060  w    F .text	00000002 TIMER1_IRQHandler
00000000  w      *UND*	00000000 __deregister_frame_info
00002ab4 g     F .text	0000004c fnet_netbuf_free
00011d88 g     F .text	00000118 UART_RS485Config
000110ec g     F .text	0000006e UART_DeInit
1000bb58 g       .heap	00000000 end
00011278 g     F .text	00000148 UART_Send
0000334c g     F .text	00000040 fnet_netif_drain
0000fcdc g     F .text	0000002a GPIO_ReadValue
0001206a  w    F .text	00000002 UART2_IRQHandler
0000fa20 g     F .text	00000024 CLKPWR_PowerDown
000056a0 g     F .text	00000054 fnet_socket_addr_are_equal
0000378c g     F .text	00000026 fnet_netif_get_ip4_addr
0000579c g     F .text	00000054 fnet_init
10000004 g     O .data	00000024 fnet_icmp_prot_if
00009d68 g     F .text	00000038 fnet_timer_release
00004f58 g     F .text	0000017a setsockopt
10000718 g       .data	00000000 __data_end__
00009ddc g     F .text	0000001c fnet_timer_ms
00003a80 g     F .text	0000002a fnet_netif_get_scope_id
0000e0e4 g     F .text	00000074 fnet_fs_fread
0000e2f4 g     F .text	00000024 fnet_fs_rom_register
000120a2  w    F .text	00000002 UART4_IRQHandler
00004178 g     F .text	00000014 fnet_socket_init
000020e4 g     F .text	00000036 fnet_isr_vector_init
000030bc g     F .text	00000070 fnet_netbuf_del_chain
0000bff8 g     F .text	0000002a fnet_serial_printf
1000bb54 g       .bss	00000000 __bss_end__
00003880 g     F .text	00000060 fnet_netif_get_hw_addr
00003bb4 g     F .text	0000009c fnet_prot_find
00013d08 g     F .text	000000f0 __call_exitprocs
00012908 g     F .text	0000027a .hidden __aeabi_dsub
0000602c g     F .text	000001a0 fnet_strtoul
0001205a  w    F .text	00000002 Default_Handler
00000138 g     F .text	00000000 _start
00006314 g     F .text	000000bc fnet_strtok_r
000018c4 g     F .text	00000048 fnet_ip_route
00012c04 g     F .text	0000006a .hidden __floatundidf
000025fc g     F .text	00000062 fnet_mempool_free_mem_status
00009d44 g     F .text	00000024 fnet_timer_init
00001b78 g     F .text	000001a4 fnet_ip_input_low
1000bb50 g     O .bss	00000004 SysTickCnt
000010a4 g     F .text	000000c0 fnet_eth_output_ip4
000132a8 g     F .text	0000001c .hidden __floatsisf
000142e4 g     O .text	00000008 fnet_http_content_gif
0000396c g     F .text	00000038 fnet_netif_connected
00013e34 g     F .text	000000a8 __register_exitproc
00009db8 g     F .text	00000024 fnet_timer_seconds
00011a98 g     F .text	0000005c UART_ABClearIntPending
000102ac g     F .text	0000003a FIO_ByteReadValue
100002d0 g     O .data	00000004 PeripheralClock
0000ff94 g     F .text	0000008c FIO_HalfWordSetDir
00002b4c g     F .text	00000170 fnet_netbuf_pullup
00012088  w    F .text	00000002 ADC_IRQHandler
0000c6e0 g     F .text	00000018 fnet_ping_state
00001648 g     F .text	00000020 fnet_inet_ntoa
0000e264 g     F .text	0000002c fnet_fs_ftell
00003188 g     F .text	00000024 fnet_malloc_netbuf
00003168 g     F .text	00000020 fnet_free_netbuf
0000393c g     F .text	0000002e fnet_netif_type
0001410c g     O .text	00000010 fnet_serial_stream_port3
0000b680 g     F .text	00000030 fnet_shell_putchar
00011830 g     F .text	00000100 UART_FIFOConfig
1000bae8 g     O .bss	00000004 dm_nb
00004c54 g     F .text	000000da sendto
0000ff4c g     F .text	00000048 FIO_SetMask
0000dc38 g     F .text	000000a6 fnet_fs_path_cmp
0001207a  w    F .text	00000002 SSP1_IRQHandler
000037b4 g     F .text	00000026 fnet_netif_get_ip4_subnet_mask
00005404 g     F .text	00000084 fnet_socket_buffer_append_address
00000000  w      *UND*	00000000 software_init_hook
00010124 g     F .text	0000003e FIO_HalfWordReadValue
0000e8cc g     F .text	0000003c fnet_cpu_irq_enable
00000c68 g     F .text	00000072 fnet_checksum_pseudo_buf
00011bd4 g     F .text	00000044 UART_IrDACmd
0000d164 g     F .text	000000a0 fnet_http_default_handle
0001115c g     F .text	0000002c UART_ConfigStructInit
000039a4 g     F .text	00000044 fnet_netif_get_statistics
000134b8 g     F .text	00000136 .hidden __aeabi_fdiv
00012ba4 g     F .text	00000022 .hidden __aeabi_i2d
0000c298 g     F .text	00000038 fnet_poll_service_unregister
00001d4c g     F .text	000000a4 fnet_ip_addr_is_broadcast
0000ea88 g     F .text	00000014 fnet_cpu_timer_handler_bottom
00004a94 g     F .text	00000098 listen
00003700 g     F .text	00000048 fnet_netif_set_ip4_subnet_mask
0001208c  w    F .text	00000002 USB_IRQHandler
000132c4 g     F .text	0000008c .hidden __floatundisf
000136bc  w    F .text	00000002 .hidden __aeabi_ldiv0
0000e964 g     F .text	00000034 fnet_cpu_serial_getchar
00009e74 g     F .text	00000060 fnet_timer_new
00012ec4 g     F .text	000001d0 .hidden __divdf3
0000b74c g     F .text	00000044 fnet_shell_help
0001208a  w    F .text	00000002 BOD_IRQHandler
000132a0 g     F .text	00000024 .hidden __aeabi_ui2f
00012c70 g     F .text	00000254 .hidden __muldf3
0000e710 g     F .text	0000003e fnet_fs_rom_finfo
00002410 g     F .text	0000001c fnet_mempool_release
00011c68 g     F .text	00000078 UART_FullModemForcePinState
0000e0c0 g     F .text	00000022 fnet_fs_rewind
0001068c g     F .text	0000007c PINSEL_SetInvertInput
0000fd78 g     F .text	000000bc GPIO_GetIntStatus
0000fe90 g     F .text	0000001c FIO_SetValue
0000da2c g     F .text	0000003c fnet_fs_init
000114d0 g     F .text	000000a0 UART_ForceBreak
0000c6b4 g     F .text	0000002c fnet_ping_release
0000c20c g     F .text	00000014 fnet_poll_services_release
00009f2c g     F .text	00000034 fnet_timer_reset_all
00000da0 g     F .text	0000001c fnet_error_set
0000f934 g     F .text	00000060 CLKPWR_GetCLK
000140dc g     O .text	00000010 fnet_serial_stream_port0
00013c60 g     F .text	00000094 memset
0001204c  w    F .text	00000002 MemManage_Handler
00000000 g       .text	000000e4 __isr_vector
00010274 g     F .text	00000038 FIO_ByteClearValue
000126f4 g     F .text	0000020c main
0000e5d8 g     F .text	000000a0 fnet_fs_rom_fread
000132d4 g     F .text	0000007c .hidden __aeabi_l2f
00009f60 g     F .text	0000002c fnet_timer_get_interval
000142d4 g     O .text	00000008 fnet_http_content_css
0001205c  w    F .text	00000002 WDT_IRQHandler
00011d5c g     F .text	0000002c UART_FullModemGetStatus
1000bae4 g     O .bss	00000004 USBFrequency
00012052  w    F .text	00000002 SVC_Handler
0000b9d0 g     F .text	00000628 fnet_serial_vprintf
000113c0 g     F .text	00000110 UART_Receive
0000d204 g     F .text	00000030 fnet_http_default_send
00013094 g     F .text	0000009e .hidden __truncdfsf2
00011ce0 g     F .text	0000007c UART_FullModemConfigMode
00011fec g     F .text	00000026 UART_RS485SendData
00010340 g     F .text	00000074 NVIC_SCBDeInit
00012c14 g     F .text	0000005a .hidden __aeabi_l2d
00000000  w      *UND*	00000000 hardware_init_hook
00003278 g     F .text	00000090 fnet_netif_init_all
1000bb58 g       .heap	00000000 __end__
00000000  w      *UND*	00000000 __libc_fini
00002388 g     F .text	00000086 fnet_mempool_init
000132c4 g     F .text	0000008c .hidden __aeabi_ul2f
00010950 g     F .text	00000080 PINSEL_DacEnable
0000eab0 g     F .text	000000e4 fnet_cpu_timer_init
0000e998 g     F .text	000000a4 fnet_cpu_serial_init
0000c19c g     F .text	00000016 fnet_putchar
00013350 g     F .text	00000168 .hidden __mulsf3
0000e750 g     F .text	00000024 fnet_fs_root_register
1000bb40 g     O .bss	00000001 MAC2_DEFS
0000e1fc g     F .text	00000068 fnet_fs_fseek
000057f0 g     F .text	00000028 fnet_init_static
00004a34 g     F .text	0000005e shutdown
0001195c g     F .text	0000013c UART_ABCmd
00011200 g     F .text	00000078 UART_ReceiveByte
0000df00 g     F .text	00000022 fnet_fs_rewinddir
0000d234 g     F .text	0000002e fnet_http_default_close
0001242c g     F .text	000000ec SystemInit
0001209a  w    F .text	00000002 QEI_IRQHandler
0000e55c g     F .text	0000007c fnet_fs_rom_fopen
0001acdc g     O .text	0000000c fnet_fs_image
0000211c g     F .text	00000040 fnet_event_init
1000bb44 g     O .bss	00000000 fnet_lpceth0_if
00013eec g     F .text	00000000 _fini
0000ea6c g     F .text	0000001c fnet_cpu_timer_handler_top
0000e4c4 g     F .text	00000098 fnet_fs_rom_readdir
000054f8 g     F .text	000000a6 fnet_socket_buffer_read_address
000109d0 g     F .text	00000080 PINSEL_SetFilter
000039e8 g     F .text	0000001c fnet_netif_dupip_handler_init
00011b88 g     F .text	0000004c UART_IrDAInvtInputCmd
000049d4 g     F .text	0000005e closesocket
00003498 g     F .text	00000104 fnet_netif_init
00001f84 g     F .text	00000074 fnet_ip_queue_append
0000b6e0 g     F .text	00000042 fnet_shell_script
0000ebf4 g     F .text	00000050 fnet_lpceth_write_to_phy
1000bb44 g     O .bss	00000002 intStatus_bits
00013df8 g     F .text	0000000c atexit
00000bf0 g     F .text	0000003a fnet_checksum
00004ecc g     F .text	0000008a getpeername
00013134 g     F .text	0000016c .hidden __aeabi_frsub
1000ba94 g     O .bss	00000004 recvPackets
00012080  w    F .text	00000002 EINT0_IRQHandler
0000b790 g     F .text	00000032 fnet_shell_ctrlc
10010000 g       *ABS*	00000000 __StackTop
00005488 g     F .text	00000070 fnet_socket_buffer_read_record
00000d88 g     F .text	00000018 fnet_error_get
10000708 g     O .data	00000004 _impure_ptr
000056f4 g     F .text	00000040 fnet_socket_ip_addr_copy
00014334 g     O .text	00000010 fnet_http_ssi_handler
000120aa  w    F .text	00000002 PWM0_IRQHandler
0000df24 g     F .text	0000001e fnet_fs_fopen
00013350 g     F .text	00000168 .hidden __aeabi_fmul
00002980 g     F .text	00000036 fnet_netbuf_from_buf
000021cc g     F .text	00000084 fnet_isr_vector_release
000031c4 g     F .text	00000018 fnet_malloc_max_netbuf
00000e10 g     F .text	00000122 fnet_str_to_mac
0000ddb0 g     F .text	000000bc fnet_fs_opendir
00002058 g     F .text	0000008c fnet_isr_handler
000016f4 g     F .text	00000036 fnet_inet_ptos
00011f04 g     F .text	000000c4 UART_RS485Send
0000db2c g     F .text	0000004c fnet_fs_find_name
1000bb46 g     O .bss	00000002 MAC1_DEFS
00003464 g     F .text	00000032 fnet_netif_get_by_sockaddr
00012564 g     F .text	0000002c Delay
0000e290 g     F .text	00000062 fnet_fs_finfo
0000fee4 g     F .text	00000024 FIO_IntCmd
00000fec g     F .text	00000030 fnet_eth_release
0000f54c g     F .text	00000036 fnet_htonl
000050d4 g     F .text	00000288 getsockopt
00003234 g     F .text	00000018 fnet_free_mem_status
0000fca8 g     F .text	00000032 GPIO_OutputValue
0000ff08 g     F .text	00000028 FIO_GetIntStatus
0000f584 g     F .text	00000070 init_http
0000e7d0 g     F .text	000000b8 fnet_fs_root_readdir
000022d4 g     F .text	00000094 fnet_event_raise
000100e8 g     F .text	0000003c FIO_HalfWordClearValue
0000fd08 g     F .text	00000070 GPIO_IntCmd
0000cb64 g     F .text	00000228 fnet_http_init
000038e0 g     F .text	0000005a fnet_netif_set_hw_addr
000120a4  w    F .text	00000002 SSP2_IRQHandler
000100ac g     F .text	0000003c FIO_HalfWordSetValue
0000458c g     F .text	00000086 fnet_socket_copy
10010000 g       *ABS*	00000000 __stack
1000ba9c g     O .bss	00000001 usedTxDescr
0000de9c g     F .text	00000062 fnet_fs_readdir
00009ed4 g     F .text	00000058 fnet_timer_free
0000e33c g     F .text	00000044 fnet_fs_rom_mount
0001261c g     F .text	000000d8 Initialize_UART
0000f520 g     F .text	0000002c fnet_htons
10000764 g     O .bss	00000004 fnet_enabled
000013f4 g     F .text	00000254 fnet_icmp_error
0000187c g     F .text	0000003c fnet_ip_init
000142f8 g     O .text	00000010 fnet_http_cgi_handler
000120ac  w    F .text	00000002 EEPROM_IRQHandler
0000c0d4 g     F .text	00000058 fnet_sprintf
0000c1b4 g     F .text	00000010 fnet_getchar
00001668 g     F .text	0000001e fnet_inet_aton
0000f9e0 g     F .text	0000001c CLKPWR_Sleep
000135f0 g     F .text	0000003e .hidden __aeabi_f2uiz
1000fc00 g       *ABS*	00000400 __StackLimit
0000023c g     F .text	0000002a fnet_arp_release
00005c28 g     F .text	0000004e fnet_memcmp
0000226c g     F .text	00000068 fnet_isr_unlock
00005d58 g     F .text	00000068 fnet_strncat
00013bf0 g     F .text	00000020 exit
0000b7c4 g     F .text	00000042 fnet_shell_block
000120b0 g     F .text	0000037c SystemCoreClockUpdate
000132a0 g     F .text	00000024 .hidden __floatunsisf
00011c18 g     F .text	00000050 UART_IrDAPulseDivConfig
00011fc8 g     F .text	00000024 UART_RS485SendSlvAddr
0000ff30 g     F .text	0000001c FIO_ClearInt
1000bb48 g     O .bss	00000002 COMMAND_DEFS
00012090  w    F .text	00000002 DMA_IRQHandler
100002d4 g     O .data	00000004 EMCClock
0000d070 g     F .text	00000078 fnet_http_find_handler
00001ec8 g     F .text	000000ba fnet_ip_getsockopt
000016b8 g     F .text	0000003a fnet_inet_pton
00005ed0 g     F .text	0000005e fnet_strchr
000035f8 g     F .text	00000024 fnet_netif_set_default
00005734 g     F .text	00000032 fnet_socket_addr_copy
00005bd0 g     F .text	0000003a fnet_memset
0000b430 g     F .text	00000030 fnet_shell_release
000136bc  w    F .text	00000002 .hidden __aeabi_idiv0
0000c1c4 g     F .text	00000048 fnet_poll_services
0000db78 g     F .text	000000c0 fnet_fs_mount
00001d1c g     F .text	00000030 fnet_ip_drain
000135f0 g     F .text	0000003e .hidden __fixunssfsi
00013edc g     F .text	00000002 _exit
0000b6b0 g     F .text	00000030 fnet_shell_getchar
0000f4e4 g     F .text	00000030 fnet_lpceth_interrupt_handler_bottom
00003210 g     F .text	00000024 fnet_malloc
0001204e  w    F .text	00000002 BusFault_Handler
00005f30 g     F .text	00000096 fnet_strstr
0000dd48 g     F .text	00000066 fnet_fs_unmount
00002780 g     F .text	00000200 fnet_netbuf_copy
00004408 g     F .text	0000010c fnet_socket_lookup
000018b8 g     F .text	0000000a fnet_ip_release
0001206c  w    F .text	00000002 UART3_IRQHandler
00003774 g     F .text	00000018 fnet_netif_get_default
00012098  w    F .text	00000002 MCPWM_IRQHandler
00012534 g     F .text	0000002e cpu_serial_init
0001365c g     F .text	00000030 .hidden __gnu_ldivmod_helper
00010788 g     F .text	000000c4 PINSEL_SetI2CMode
00006200 g     F .text	0000006a fnet_strcasecmp
00003308 g     F .text	00000044 fnet_netif_release_all
00000dbc g     F .text	00000054 fnet_mac_to_str
00012bc8 g     F .text	0000003a .hidden __aeabi_f2d
0000f2f8 g     F .text	00000074 fnet_lpceth_get_hw_addr
0000daa0 g     F .text	00000040 fnet_fs_register
00010708 g     F .text	00000080 PINSEL_SetSlewMode
00005ccc g     F .text	0000003c fnet_strlen
00000000  w      *UND*	00000000 _Jv_RegisterClasses
0000e090 g     F .text	0000002e fnet_fs_fclose
00000914 g     F .text	00000086 fnet_arp_drain
00012908 g     F .text	0000027a .hidden __subdf3
0000b86c g     F .text	00000022 fnet_serial_flush
00009f8c g     F .text	00000030 fnet_timer_delay
0001411c g     O .text	00000010 fnet_serial_stream_port4
000140ec g     O .text	00000010 fnet_serial_stream_port1
0000418c g     F .text	00000036 fnet_socket_set_error
0000324c g     F .text	00000018 fnet_malloc_max
0000b808 g     F .text	00000024 fnet_shell_unblock
00000000  w      *UND*	00000000 __register_frame_info
0000f514 g     F .text	0000000c ENET_IRQHandler
00013140 g     F .text	00000160 .hidden __addsf3
000031f0 g     F .text	00000020 fnet_free
0000fec8 g     F .text	0000001c FIO_ReadValue
0000f40c g     F .text	000000d8 fnet_lpceth_interrupt_handler_top
000102e8 g     F .text	00000058 NVIC_DeInit
00003804 g     F .text	00000030 fnet_netif_get_name
1000baa5 g     O .bss	00000001 processingRxPacket
00011af4 g     F .text	00000094 UART_TxCmd
00012094  w    F .text	00000002 FNET_ENET_IRQHandler
00004368 g     F .text	0000009e fnet_socket_conflict
00005818 g     F .text	0000001c fnet_release
00000000  w      *UND*	00000000 free
0000fa44 g     F .text	00000024 CLKPWR_DeepPowerDown
00000848 g     F .text	000000b8 fnet_arp_request
00001e28 g     F .text	000000a0 fnet_ip_setsockopt
1000bb4a g     O .bss	00000001 BASIC_EXTENDED_REGISTERS
00004e3c g     F .text	0000008e getsockname
00010164 g     F .text	00000068 FIO_ByteSetDir



Disassembly of section .text:

00000000 <__isr_vector>:
__isr_vector():
       0:	10010000 	.word	0x10010000
       4:	00012015 	.word	0x00012015
       8:	00012049 	.word	0x00012049
       c:	00012591 	.word	0x00012591
      10:	0001204d 	.word	0x0001204d
      14:	0001204f 	.word	0x0001204f
      18:	00012051 	.word	0x00012051
	...
      2c:	00012053 	.word	0x00012053
      30:	00012055 	.word	0x00012055
      34:	00000000 	.word	0x00000000
      38:	00012057 	.word	0x00012057
      3c:	00012519 	.word	0x00012519
      40:	0001205d 	.word	0x0001205d
      44:	0001205f 	.word	0x0001205f
      48:	00012061 	.word	0x00012061
      4c:	0000ea9d 	.word	0x0000ea9d
      50:	00012065 	.word	0x00012065
      54:	00012067 	.word	0x00012067
      58:	00012069 	.word	0x00012069
      5c:	0001206b 	.word	0x0001206b
      60:	0001206d 	.word	0x0001206d
      64:	0001206f 	.word	0x0001206f
      68:	00012071 	.word	0x00012071
      6c:	00012073 	.word	0x00012073
      70:	00012075 	.word	0x00012075
      74:	00012077 	.word	0x00012077
      78:	00012079 	.word	0x00012079
      7c:	0001207b 	.word	0x0001207b
      80:	0001207d 	.word	0x0001207d
      84:	0001207f 	.word	0x0001207f
      88:	00012081 	.word	0x00012081
      8c:	00012083 	.word	0x00012083
      90:	00012085 	.word	0x00012085
      94:	00012087 	.word	0x00012087
      98:	00012089 	.word	0x00012089
      9c:	0001208b 	.word	0x0001208b
      a0:	0001208d 	.word	0x0001208d
      a4:	0001208f 	.word	0x0001208f
      a8:	00012091 	.word	0x00012091
      ac:	00012093 	.word	0x00012093
      b0:	0000f515 	.word	0x0000f515
      b4:	00012097 	.word	0x00012097
      b8:	00012099 	.word	0x00012099
      bc:	0001209b 	.word	0x0001209b
      c0:	0001209d 	.word	0x0001209d
      c4:	0001209f 	.word	0x0001209f
      c8:	000120a1 	.word	0x000120a1
      cc:	000120a3 	.word	0x000120a3
      d0:	000120a5 	.word	0x000120a5
      d4:	000120a7 	.word	0x000120a7
      d8:	000120a9 	.word	0x000120a9
      dc:	000120ab 	.word	0x000120ab
      e0:	000120ad 	.word	0x000120ad

000000e4 <__do_global_dtors_aux>:
$t():
      e4:	b510      	push	{r4, lr}
      e6:	4c05      	ldr	r4, [pc, #20]	; (fc <__do_global_dtors_aux+0x18>)
      e8:	7823      	ldrb	r3, [r4, #0]
      ea:	b933      	cbnz	r3, fa <__do_global_dtors_aux+0x16>
      ec:	4b04      	ldr	r3, [pc, #16]	; (100 <__do_global_dtors_aux+0x1c>)
      ee:	b113      	cbz	r3, f6 <__do_global_dtors_aux+0x12>
      f0:	4804      	ldr	r0, [pc, #16]	; (104 <__do_global_dtors_aux+0x20>)
      f2:	f3af 8000 	nop.w
      f6:	2301      	movs	r3, #1
      f8:	7023      	strb	r3, [r4, #0]
      fa:	bd10      	pop	{r4, pc}
$d():
      fc:	1000071c 	.word	0x1000071c
     100:	00000000 	.word	0x00000000
     104:	0001afe4 	.word	0x0001afe4

00000108 <frame_dummy>:
$t():
     108:	b508      	push	{r3, lr}
     10a:	4b06      	ldr	r3, [pc, #24]	; (124 <frame_dummy+0x1c>)
     10c:	b11b      	cbz	r3, 116 <frame_dummy+0xe>
     10e:	4806      	ldr	r0, [pc, #24]	; (128 <frame_dummy+0x20>)
     110:	4906      	ldr	r1, [pc, #24]	; (12c <frame_dummy+0x24>)
     112:	f3af 8000 	nop.w
     116:	4806      	ldr	r0, [pc, #24]	; (130 <frame_dummy+0x28>)
     118:	6803      	ldr	r3, [r0, #0]
     11a:	b113      	cbz	r3, 122 <frame_dummy+0x1a>
     11c:	4b05      	ldr	r3, [pc, #20]	; (134 <frame_dummy+0x2c>)
     11e:	b103      	cbz	r3, 122 <frame_dummy+0x1a>
     120:	4798      	blx	r3
     122:	bd08      	pop	{r3, pc}
$d():
     124:	00000000 	.word	0x00000000
     128:	0001afe4 	.word	0x0001afe4
     12c:	10000720 	.word	0x10000720
     130:	10000718 	.word	0x10000718
     134:	00000000 	.word	0x00000000

00000138 <_mainCRTStartup>:
$t():
     138:	4b15      	ldr	r3, [pc, #84]	; (190 <_mainCRTStartup+0x58>)
     13a:	2b00      	cmp	r3, #0
     13c:	bf08      	it	eq
     13e:	4b13      	ldreq	r3, [pc, #76]	; (18c <_mainCRTStartup+0x54>)
     140:	469d      	mov	sp, r3
     142:	f5a3 3a80 	sub.w	sl, r3, #65536	; 0x10000
     146:	2100      	movs	r1, #0
     148:	468b      	mov	fp, r1
     14a:	460f      	mov	r7, r1
     14c:	4813      	ldr	r0, [pc, #76]	; (19c <_mainCRTStartup+0x64>)
     14e:	4a14      	ldr	r2, [pc, #80]	; (1a0 <_mainCRTStartup+0x68>)
     150:	1a12      	subs	r2, r2, r0
     152:	f013 fd85 	bl	13c60 <memset>
     156:	4b0f      	ldr	r3, [pc, #60]	; (194 <_mainCRTStartup+0x5c>)
     158:	2b00      	cmp	r3, #0
     15a:	d000      	beq.n	15e <_mainCRTStartup+0x26>
     15c:	4798      	blx	r3
     15e:	4b0e      	ldr	r3, [pc, #56]	; (198 <_mainCRTStartup+0x60>)
     160:	2b00      	cmp	r3, #0
     162:	d000      	beq.n	166 <_mainCRTStartup+0x2e>
     164:	4798      	blx	r3
     166:	2000      	movs	r0, #0
     168:	2100      	movs	r1, #0
     16a:	0004      	movs	r4, r0
     16c:	000d      	movs	r5, r1
     16e:	480d      	ldr	r0, [pc, #52]	; (1a4 <_mainCRTStartup+0x6c>)
     170:	2800      	cmp	r0, #0
     172:	d002      	beq.n	17a <_mainCRTStartup+0x42>
     174:	480c      	ldr	r0, [pc, #48]	; (1a8 <_mainCRTStartup+0x70>)
     176:	f013 fe3f 	bl	13df8 <atexit>
     17a:	f013 fd49 	bl	13c10 <__libc_init_array>
     17e:	0020      	movs	r0, r4
     180:	0029      	movs	r1, r5
     182:	f012 fab7 	bl	126f4 <main>
     186:	f013 fd33 	bl	13bf0 <exit>
     18a:	bf00      	nop
$d():
     18c:	00080000 	.word	0x00080000
     190:	10010000 	.word	0x10010000
	...
     19c:	1000071c 	.word	0x1000071c
     1a0:	1000bb54 	.word	0x1000bb54
     1a4:	00013df9 	.word	0x00013df9
     1a8:	00013e05 	.word	0x00013e05

000001ac <fnet_arp_init>:
fnet_arp_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:93
* NAME: fnet_arp_init
*
* DESCRIPTION: ARP module initialization.
*************************************************************************/
int fnet_arp_init( fnet_netif_t *netif )
{
     1ac:	b580      	push	{r7, lr}
     1ae:	b086      	sub	sp, #24
     1b0:	af00      	add	r7, sp, #0
     1b2:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:94
    fnet_arp_if_t  *arpif = &(((fnet_eth_if_t *)(netif->if_ptr))->arp_if); 
     1b4:	687b      	ldr	r3, [r7, #4]
     1b6:	695b      	ldr	r3, [r3, #20]
     1b8:	3314      	adds	r3, #20
     1ba:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:96
    int            i;
    int            result= FNET_ERR;
     1bc:	f04f 33ff 	mov.w	r3, #4294967295
     1c0:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:98

    for (i = 0; i < FNET_ARP_TABLE_SIZE; i++)
     1c2:	2300      	movs	r3, #0
     1c4:	617b      	str	r3, [r7, #20]
     1c6:	e00d      	b.n	1e4 <fnet_arp_init+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:99 (discriminator 2)
      fnet_memset_zero(&(arpif->arp_table[i]), sizeof(fnet_arp_entry_t));
     1c8:	697a      	ldr	r2, [r7, #20]
     1ca:	4613      	mov	r3, r2
     1cc:	005b      	lsls	r3, r3, #1
     1ce:	4413      	add	r3, r2
     1d0:	00db      	lsls	r3, r3, #3
     1d2:	68fa      	ldr	r2, [r7, #12]
     1d4:	4413      	add	r3, r2
     1d6:	4618      	mov	r0, r3
     1d8:	2118      	movs	r1, #24
     1da:	f005 fd17 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:98 (discriminator 2)
{
    fnet_arp_if_t  *arpif = &(((fnet_eth_if_t *)(netif->if_ptr))->arp_if); 
    int            i;
    int            result= FNET_ERR;

    for (i = 0; i < FNET_ARP_TABLE_SIZE; i++)
     1de:	697b      	ldr	r3, [r7, #20]
     1e0:	3301      	adds	r3, #1
     1e2:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:98 (discriminator 1)
     1e4:	697b      	ldr	r3, [r7, #20]
     1e6:	2b09      	cmp	r3, #9
     1e8:	ddee      	ble.n	1c8 <fnet_arp_init+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:101
      fnet_memset_zero(&(arpif->arp_table[i]), sizeof(fnet_arp_entry_t));

    arpif->arp_tmr = fnet_timer_new((FNET_ARP_TIMER_PERIOD / FNET_TIMER_PERIOD_MS), 
     1ea:	f640 30b8 	movw	r0, #3000	; 0xbb8
     1ee:	4911      	ldr	r1, [pc, #68]	; (234 <fnet_arp_init+0x88>)
     1f0:	68fa      	ldr	r2, [r7, #12]
     1f2:	f009 fe3f 	bl	9e74 <fnet_timer_new>
     1f6:	4602      	mov	r2, r0
     1f8:	68fb      	ldr	r3, [r7, #12]
     1fa:	f8c3 20f0 	str.w	r2, [r3, #240]	; 0xf0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:104
                        fnet_arp_timer, arpif);

    if(arpif->arp_tmr)
     1fe:	68fb      	ldr	r3, [r7, #12]
     200:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
     204:	2b00      	cmp	r3, #0
     206:	d00f      	beq.n	228 <fnet_arp_init+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:107
    {
        /* Install event Handler. */
    	arpif->arp_event = fnet_event_init(fnet_arp_ip_duplicated, netif);
     208:	480b      	ldr	r0, [pc, #44]	; (238 <fnet_arp_init+0x8c>)
     20a:	6879      	ldr	r1, [r7, #4]
     20c:	f001 ff86 	bl	211c <fnet_event_init>
     210:	4602      	mov	r2, r0
     212:	68fb      	ldr	r3, [r7, #12]
     214:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:108
    	if(arpif->arp_event != FNET_ERR)
     218:	68fb      	ldr	r3, [r7, #12]
     21a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
     21e:	f1b3 3fff 	cmp.w	r3, #4294967295
     222:	d001      	beq.n	228 <fnet_arp_init+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:109
    	    result = FNET_OK;
     224:	2300      	movs	r3, #0
     226:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:112
    }
        
    return result;
     228:	693b      	ldr	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:113
}
     22a:	4618      	mov	r0, r3
     22c:	3718      	adds	r7, #24
     22e:	46bd      	mov	sp, r7
     230:	bd80      	pop	{r7, pc}
     232:	bf00      	nop
     234:	00000269 	.word	0x00000269
     238:	00000901 	.word	0x00000901

0000023c <fnet_arp_release>:
fnet_arp_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:121
* NAME: fnet_arp_release
*
* DESCRIPTION: ARP module release.
*************************************************************************/
void fnet_arp_release( fnet_netif_t *netif )
{
     23c:	b580      	push	{r7, lr}
     23e:	b084      	sub	sp, #16
     240:	af00      	add	r7, sp, #0
     242:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:122
    fnet_arp_if_t *arpif = &(((fnet_eth_if_t *)(netif->if_ptr))->arp_if);
     244:	687b      	ldr	r3, [r7, #4]
     246:	695b      	ldr	r3, [r3, #20]
     248:	3314      	adds	r3, #20
     24a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:124

    fnet_timer_free(arpif->arp_tmr);
     24c:	68fb      	ldr	r3, [r7, #12]
     24e:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
     252:	4618      	mov	r0, r3
     254:	f009 fe3e 	bl	9ed4 <fnet_timer_free>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:126

    arpif->arp_tmr = 0;
     258:	68fb      	ldr	r3, [r7, #12]
     25a:	2200      	movs	r2, #0
     25c:	f8c3 20f0 	str.w	r2, [r3, #240]	; 0xf0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:127
}
     260:	3710      	adds	r7, #16
     262:	46bd      	mov	sp, r7
     264:	bd80      	pop	{r7, pc}
     266:	bf00      	nop

00000268 <fnet_arp_timer>:
fnet_arp_timer():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:135
* NAME: fnet_arp_timer
*
* DESCRIPTION: ARP timer.
*************************************************************************/
static void fnet_arp_timer( void *cookie )
{
     268:	b580      	push	{r7, lr}
     26a:	b084      	sub	sp, #16
     26c:	af00      	add	r7, sp, #0
     26e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:136
    fnet_arp_if_t *arpif =  (fnet_arp_if_t *)cookie;
     270:	687b      	ldr	r3, [r7, #4]
     272:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:139
    int i;

    for (i = 0; i < FNET_ARP_TABLE_SIZE; i++)
     274:	2300      	movs	r3, #0
     276:	60fb      	str	r3, [r7, #12]
     278:	e040      	b.n	2fc <fnet_arp_timer+0x94>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:141
    {
        if((arpif->arp_table[i].prot_addr)
     27a:	68b9      	ldr	r1, [r7, #8]
     27c:	68fa      	ldr	r2, [r7, #12]
     27e:	4613      	mov	r3, r2
     280:	005b      	lsls	r3, r3, #1
     282:	4413      	add	r3, r2
     284:	00db      	lsls	r3, r3, #3
     286:	440b      	add	r3, r1
     288:	3308      	adds	r3, #8
     28a:	681b      	ldr	r3, [r3, #0]
     28c:	2b00      	cmp	r3, #0
     28e:	d032      	beq.n	2f6 <fnet_arp_timer+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:142
             && ((fnet_timer_ticks() - arpif->arp_table[i].cr_time))
     290:	f009 fd86 	bl	9da0 <fnet_timer_ticks>
     294:	4601      	mov	r1, r0
     296:	68b8      	ldr	r0, [r7, #8]
     298:	68fa      	ldr	r2, [r7, #12]
     29a:	4613      	mov	r3, r2
     29c:	005b      	lsls	r3, r3, #1
     29e:	4413      	add	r3, r2
     2a0:	00db      	lsls	r3, r3, #3
     2a2:	4403      	add	r3, r0
     2a4:	3308      	adds	r3, #8
     2a6:	685b      	ldr	r3, [r3, #4]
     2a8:	1aca      	subs	r2, r1, r3
     2aa:	f642 63e0 	movw	r3, #12000	; 0x2ee0
     2ae:	429a      	cmp	r2, r3
     2b0:	d921      	bls.n	2f6 <fnet_arp_timer+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:145
                              > (unsigned long)(FNET_ARP_TIMEOUT / FNET_TIMER_PERIOD_MS))
        {
            if(arpif->arp_table[i].hold)
     2b2:	68b9      	ldr	r1, [r7, #8]
     2b4:	68fa      	ldr	r2, [r7, #12]
     2b6:	4613      	mov	r3, r2
     2b8:	005b      	lsls	r3, r3, #1
     2ba:	4413      	add	r3, r2
     2bc:	00db      	lsls	r3, r3, #3
     2be:	440b      	add	r3, r1
     2c0:	3310      	adds	r3, #16
     2c2:	681b      	ldr	r3, [r3, #0]
     2c4:	2b00      	cmp	r3, #0
     2c6:	d00b      	beq.n	2e0 <fnet_arp_timer+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:146
                fnet_netbuf_free_chain(arpif->arp_table[i].hold);
     2c8:	68b9      	ldr	r1, [r7, #8]
     2ca:	68fa      	ldr	r2, [r7, #12]
     2cc:	4613      	mov	r3, r2
     2ce:	005b      	lsls	r3, r3, #1
     2d0:	4413      	add	r3, r2
     2d2:	00db      	lsls	r3, r3, #3
     2d4:	440b      	add	r3, r1
     2d6:	3310      	adds	r3, #16
     2d8:	681b      	ldr	r3, [r3, #0]
     2da:	4618      	mov	r0, r3
     2dc:	f002 fc10 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:148

            fnet_memset_zero(&(arpif->arp_table[i]), sizeof(fnet_arp_entry_t));
     2e0:	68fa      	ldr	r2, [r7, #12]
     2e2:	4613      	mov	r3, r2
     2e4:	005b      	lsls	r3, r3, #1
     2e6:	4413      	add	r3, r2
     2e8:	00db      	lsls	r3, r3, #3
     2ea:	68ba      	ldr	r2, [r7, #8]
     2ec:	4413      	add	r3, r2
     2ee:	4618      	mov	r0, r3
     2f0:	2118      	movs	r1, #24
     2f2:	f005 fc8b 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:139
static void fnet_arp_timer( void *cookie )
{
    fnet_arp_if_t *arpif =  (fnet_arp_if_t *)cookie;
    int i;

    for (i = 0; i < FNET_ARP_TABLE_SIZE; i++)
     2f6:	68fb      	ldr	r3, [r7, #12]
     2f8:	3301      	adds	r3, #1
     2fa:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:139 (discriminator 1)
     2fc:	68fb      	ldr	r3, [r7, #12]
     2fe:	2b09      	cmp	r3, #9
     300:	ddbb      	ble.n	27a <fnet_arp_timer+0x12>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:152

            fnet_memset_zero(&(arpif->arp_table[i]), sizeof(fnet_arp_entry_t));
        }
    }

}
     302:	3710      	adds	r7, #16
     304:	46bd      	mov	sp, r7
     306:	bd80      	pop	{r7, pc}

00000308 <fnet_arp_add_entry>:
fnet_arp_add_entry():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:161
*
* DESCRIPTION: Adds entry to the ARP table.
*************************************************************************/
static fnet_arp_entry_t *fnet_arp_add_entry( fnet_netif_t *netif, fnet_ip4_addr_t ipaddr, 
                                        const fnet_mac_addr_t ethaddr )
{
     308:	b580      	push	{r7, lr}
     30a:	b088      	sub	sp, #32
     30c:	af00      	add	r7, sp, #0
     30e:	60f8      	str	r0, [r7, #12]
     310:	60b9      	str	r1, [r7, #8]
     312:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:162
    fnet_arp_if_t *arpif = &(((fnet_eth_if_t *)(netif->if_ptr))->arp_if);
     314:	68fb      	ldr	r3, [r7, #12]
     316:	695b      	ldr	r3, [r3, #20]
     318:	3314      	adds	r3, #20
     31a:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:167
    int i, j;
    unsigned long max_time;

    /* Find an entry to update. */
    for (i = 0; i < FNET_ARP_TABLE_SIZE; ++i)
     31c:	2300      	movs	r3, #0
     31e:	61fb      	str	r3, [r7, #28]
     320:	e027      	b.n	372 <fnet_arp_add_entry+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:171
    {
        /* Check if the source IP address of the incoming packet matches
         * the IP address in this ARP table entry.*/
        if(ipaddr == arpif->arp_table[i].prot_addr)
     322:	6939      	ldr	r1, [r7, #16]
     324:	69fa      	ldr	r2, [r7, #28]
     326:	4613      	mov	r3, r2
     328:	005b      	lsls	r3, r3, #1
     32a:	4413      	add	r3, r2
     32c:	00db      	lsls	r3, r3, #3
     32e:	440b      	add	r3, r1
     330:	3308      	adds	r3, #8
     332:	681a      	ldr	r2, [r3, #0]
     334:	68bb      	ldr	r3, [r7, #8]
     336:	429a      	cmp	r2, r3
     338:	d118      	bne.n	36c <fnet_arp_add_entry+0x64>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:174
        {
            /* Update this and return. */
            fnet_memcpy(arpif->arp_table[i].hard_addr, ethaddr, sizeof(fnet_mac_addr_t));
     33a:	69fa      	ldr	r2, [r7, #28]
     33c:	4613      	mov	r3, r2
     33e:	005b      	lsls	r3, r3, #1
     340:	4413      	add	r3, r2
     342:	00db      	lsls	r3, r3, #3
     344:	693a      	ldr	r2, [r7, #16]
     346:	4413      	add	r3, r2
     348:	4618      	mov	r0, r3
     34a:	6879      	ldr	r1, [r7, #4]
     34c:	2206      	movs	r2, #6
     34e:	f005 faa1 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:175
            arpif->arp_table[i].cr_time = fnet_timer_ticks();
     352:	f009 fd25 	bl	9da0 <fnet_timer_ticks>
     356:	4601      	mov	r1, r0
     358:	6938      	ldr	r0, [r7, #16]
     35a:	69fa      	ldr	r2, [r7, #28]
     35c:	4613      	mov	r3, r2
     35e:	005b      	lsls	r3, r3, #1
     360:	4413      	add	r3, r2
     362:	00db      	lsls	r3, r3, #3
     364:	4403      	add	r3, r0
     366:	3308      	adds	r3, #8
     368:	6059      	str	r1, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:176
            goto ADDED;
     36a:	e099      	b.n	4a0 <Stack_Size+0xa0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:167
    fnet_arp_if_t *arpif = &(((fnet_eth_if_t *)(netif->if_ptr))->arp_if);
    int i, j;
    unsigned long max_time;

    /* Find an entry to update. */
    for (i = 0; i < FNET_ARP_TABLE_SIZE; ++i)
     36c:	69fb      	ldr	r3, [r7, #28]
     36e:	3301      	adds	r3, #1
     370:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:167 (discriminator 1)
     372:	69fb      	ldr	r3, [r7, #28]
     374:	2b09      	cmp	r3, #9
     376:	ddd4      	ble.n	322 <fnet_arp_add_entry+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:183
    }

    /* If we get here, no existing ARP table entry was found. */

    /* Find an unused entry in the ARP table. */
    for (i = 0; i < FNET_ARP_TABLE_SIZE; ++i)
     378:	2300      	movs	r3, #0
     37a:	61fb      	str	r3, [r7, #28]
     37c:	e00e      	b.n	39c <fnet_arp_add_entry+0x94>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:185
    {
        if(arpif->arp_table[i].prot_addr == 0)
     37e:	6939      	ldr	r1, [r7, #16]
     380:	69fa      	ldr	r2, [r7, #28]
     382:	4613      	mov	r3, r2
     384:	005b      	lsls	r3, r3, #1
     386:	4413      	add	r3, r2
     388:	00db      	lsls	r3, r3, #3
     38a:	440b      	add	r3, r1
     38c:	3308      	adds	r3, #8
     38e:	681b      	ldr	r3, [r3, #0]
     390:	2b00      	cmp	r3, #0
     392:	d100      	bne.n	396 <fnet_arp_add_entry+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:187
        {
            break;
     394:	e005      	b.n	3a2 <fnet_arp_add_entry+0x9a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:183
    }

    /* If we get here, no existing ARP table entry was found. */

    /* Find an unused entry in the ARP table. */
    for (i = 0; i < FNET_ARP_TABLE_SIZE; ++i)
     396:	69fb      	ldr	r3, [r7, #28]
     398:	3301      	adds	r3, #1
     39a:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:183 (discriminator 1)
     39c:	69fb      	ldr	r3, [r7, #28]
     39e:	2b09      	cmp	r3, #9
     3a0:	dded      	ble.n	37e <fnet_arp_add_entry+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:192
            break;
        }
    }

    /* If no unused entry is found, we try to find the oldest entry and throw it away.*/
    if(i == FNET_ARP_TABLE_SIZE)
     3a2:	69fb      	ldr	r3, [r7, #28]
     3a4:	2b0a      	cmp	r3, #10
     3a6:	d12e      	bne.n	406 <Stack_Size+0x6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:194
    {
        max_time = 0;
     3a8:	2300      	movs	r3, #0
     3aa:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:195
        j = 0;
     3ac:	2300      	movs	r3, #0
     3ae:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:197

        for (i = 0; i < FNET_ARP_TABLE_SIZE; ++i)
     3b0:	2300      	movs	r3, #0
     3b2:	61fb      	str	r3, [r7, #28]
     3b4:	e022      	b.n	3fc <fnet_arp_add_entry+0xf4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:199
        {
            if((fnet_timer_ticks() - arpif->arp_table[i].cr_time) > max_time)
     3b6:	f009 fcf3 	bl	9da0 <fnet_timer_ticks>
     3ba:	4601      	mov	r1, r0
     3bc:	6938      	ldr	r0, [r7, #16]
     3be:	69fa      	ldr	r2, [r7, #28]
     3c0:	4613      	mov	r3, r2
     3c2:	005b      	lsls	r3, r3, #1
     3c4:	4413      	add	r3, r2
     3c6:	00db      	lsls	r3, r3, #3
     3c8:	4403      	add	r3, r0
     3ca:	3308      	adds	r3, #8
     3cc:	685b      	ldr	r3, [r3, #4]
     3ce:	1aca      	subs	r2, r1, r3
     3d0:	697b      	ldr	r3, [r7, #20]
     3d2:	429a      	cmp	r2, r3
     3d4:	d90f      	bls.n	3f6 <fnet_arp_add_entry+0xee>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:201
            {
                max_time = fnet_timer_ticks() - arpif->arp_table[i].cr_time;
     3d6:	f009 fce3 	bl	9da0 <fnet_timer_ticks>
     3da:	4601      	mov	r1, r0
     3dc:	6938      	ldr	r0, [r7, #16]
     3de:	69fa      	ldr	r2, [r7, #28]
     3e0:	4613      	mov	r3, r2
     3e2:	005b      	lsls	r3, r3, #1
     3e4:	4413      	add	r3, r2
     3e6:	00db      	lsls	r3, r3, #3
     3e8:	4403      	add	r3, r0
     3ea:	3308      	adds	r3, #8
     3ec:	685b      	ldr	r3, [r3, #4]
     3ee:	1acb      	subs	r3, r1, r3
     3f0:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:202
                j = i;
     3f2:	69fb      	ldr	r3, [r7, #28]
     3f4:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:197
    if(i == FNET_ARP_TABLE_SIZE)
    {
        max_time = 0;
        j = 0;

        for (i = 0; i < FNET_ARP_TABLE_SIZE; ++i)
     3f6:	69fb      	ldr	r3, [r7, #28]
     3f8:	3301      	adds	r3, #1
     3fa:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:197 (discriminator 1)
     3fc:	69fb      	ldr	r3, [r7, #28]
     3fe:	2b09      	cmp	r3, #9
     400:	ddd9      	ble.n	3b6 <fnet_arp_add_entry+0xae>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:206
                max_time = fnet_timer_ticks() - arpif->arp_table[i].cr_time;
                j = i;
            }
        }

        i = j;
     402:	69bb      	ldr	r3, [r7, #24]
     404:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:210
    }

    /* Now, it is the ARP table entry which we will fill with the new information. */
    if(arpif->arp_table[i].hold)
     406:	6939      	ldr	r1, [r7, #16]
     408:	69fa      	ldr	r2, [r7, #28]
     40a:	4613      	mov	r3, r2
     40c:	005b      	lsls	r3, r3, #1
     40e:	4413      	add	r3, r2
     410:	00db      	lsls	r3, r3, #3
     412:	440b      	add	r3, r1
     414:	3310      	adds	r3, #16
     416:	681b      	ldr	r3, [r3, #0]
     418:	2b00      	cmp	r3, #0
     41a:	d01f      	beq.n	45c <Stack_Size+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:212
    {
        fnet_netbuf_free_chain(arpif->arp_table[i].hold);
     41c:	6939      	ldr	r1, [r7, #16]
     41e:	69fa      	ldr	r2, [r7, #28]
     420:	4613      	mov	r3, r2
     422:	005b      	lsls	r3, r3, #1
     424:	4413      	add	r3, r2
     426:	00db      	lsls	r3, r3, #3
     428:	440b      	add	r3, r1
     42a:	3310      	adds	r3, #16
     42c:	681b      	ldr	r3, [r3, #0]
     42e:	4618      	mov	r0, r3
     430:	f002 fb66 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:213
        arpif->arp_table[i].hold = 0;
     434:	6939      	ldr	r1, [r7, #16]
     436:	69fa      	ldr	r2, [r7, #28]
     438:	4613      	mov	r3, r2
     43a:	005b      	lsls	r3, r3, #1
     43c:	4413      	add	r3, r2
     43e:	00db      	lsls	r3, r3, #3
     440:	440b      	add	r3, r1
     442:	3310      	adds	r3, #16
     444:	2200      	movs	r2, #0
     446:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:214
        arpif->arp_table[i].hold_time = 0;
     448:	6939      	ldr	r1, [r7, #16]
     44a:	69fa      	ldr	r2, [r7, #28]
     44c:	4613      	mov	r3, r2
     44e:	005b      	lsls	r3, r3, #1
     450:	4413      	add	r3, r2
     452:	00db      	lsls	r3, r3, #3
     454:	440b      	add	r3, r1
     456:	3310      	adds	r3, #16
     458:	2200      	movs	r2, #0
     45a:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:217
    }

    arpif->arp_table[i].prot_addr = ipaddr;
     45c:	6939      	ldr	r1, [r7, #16]
     45e:	69fa      	ldr	r2, [r7, #28]
     460:	4613      	mov	r3, r2
     462:	005b      	lsls	r3, r3, #1
     464:	4413      	add	r3, r2
     466:	00db      	lsls	r3, r3, #3
     468:	440b      	add	r3, r1
     46a:	3308      	adds	r3, #8
     46c:	68ba      	ldr	r2, [r7, #8]
     46e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:218
    fnet_memcpy(arpif->arp_table[i].hard_addr, ethaddr, sizeof(fnet_mac_addr_t));
     470:	69fa      	ldr	r2, [r7, #28]
     472:	4613      	mov	r3, r2
     474:	005b      	lsls	r3, r3, #1
     476:	4413      	add	r3, r2
     478:	00db      	lsls	r3, r3, #3
     47a:	693a      	ldr	r2, [r7, #16]
     47c:	4413      	add	r3, r2
     47e:	4618      	mov	r0, r3
     480:	6879      	ldr	r1, [r7, #4]
     482:	2206      	movs	r2, #6
     484:	f005 fa06 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:220
    
    arpif->arp_table[i].cr_time = fnet_timer_ticks();
     488:	f009 fc8a 	bl	9da0 <fnet_timer_ticks>
     48c:	4601      	mov	r1, r0
     48e:	6938      	ldr	r0, [r7, #16]
     490:	69fa      	ldr	r2, [r7, #28]
     492:	4613      	mov	r3, r2
     494:	005b      	lsls	r3, r3, #1
     496:	4413      	add	r3, r2
     498:	00db      	lsls	r3, r3, #3
     49a:	4403      	add	r3, r0
     49c:	3308      	adds	r3, #8
     49e:	6059      	str	r1, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:222
ADDED:
    return ( &arpif->arp_table[i]);
     4a0:	69fa      	ldr	r2, [r7, #28]
     4a2:	4613      	mov	r3, r2
     4a4:	005b      	lsls	r3, r3, #1
     4a6:	4413      	add	r3, r2
     4a8:	00db      	lsls	r3, r3, #3
     4aa:	693a      	ldr	r2, [r7, #16]
     4ac:	4413      	add	r3, r2
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:223
}
     4ae:	4618      	mov	r0, r3
     4b0:	3720      	adds	r7, #32
     4b2:	46bd      	mov	sp, r7
     4b4:	bd80      	pop	{r7, pc}
     4b6:	bf00      	nop

000004b8 <fnet_arp_update_entry>:
fnet_arp_update_entry():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:233
*
* DESCRIPTION: Upates ARP table.
*************************************************************************/
static fnet_arp_entry_t *fnet_arp_update_entry( fnet_netif_t *netif, fnet_ip4_addr_t ipaddr, 
                                            fnet_mac_addr_t ethaddr )
{
     4b8:	b580      	push	{r7, lr}
     4ba:	b086      	sub	sp, #24
     4bc:	af00      	add	r7, sp, #0
     4be:	60f8      	str	r0, [r7, #12]
     4c0:	60b9      	str	r1, [r7, #8]
     4c2:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:234
    fnet_arp_if_t *arpif = &(((fnet_eth_if_t *)(netif->if_ptr))->arp_if); //PFI
     4c4:	68fb      	ldr	r3, [r7, #12]
     4c6:	695b      	ldr	r3, [r3, #20]
     4c8:	3314      	adds	r3, #20
     4ca:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:238
    int i;

    /* Find an entry to update. */
    for (i = 0; i < FNET_ARP_TABLE_SIZE; ++i)
     4cc:	2300      	movs	r3, #0
     4ce:	617b      	str	r3, [r7, #20]
     4d0:	e02e      	b.n	530 <fnet_arp_update_entry+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:242
    {
        /* Check if the source IP address of the incoming packet matches
         * the IP address in this ARP table entry.*/
        if(ipaddr == arpif->arp_table[i].prot_addr)
     4d2:	6939      	ldr	r1, [r7, #16]
     4d4:	697a      	ldr	r2, [r7, #20]
     4d6:	4613      	mov	r3, r2
     4d8:	005b      	lsls	r3, r3, #1
     4da:	4413      	add	r3, r2
     4dc:	00db      	lsls	r3, r3, #3
     4de:	440b      	add	r3, r1
     4e0:	3308      	adds	r3, #8
     4e2:	681a      	ldr	r2, [r3, #0]
     4e4:	68bb      	ldr	r3, [r7, #8]
     4e6:	429a      	cmp	r2, r3
     4e8:	d11f      	bne.n	52a <fnet_arp_update_entry+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:245
        {
            /* Update this and return. */
            fnet_memcpy(arpif->arp_table[i].hard_addr, ethaddr, sizeof(fnet_mac_addr_t));
     4ea:	697a      	ldr	r2, [r7, #20]
     4ec:	4613      	mov	r3, r2
     4ee:	005b      	lsls	r3, r3, #1
     4f0:	4413      	add	r3, r2
     4f2:	00db      	lsls	r3, r3, #3
     4f4:	693a      	ldr	r2, [r7, #16]
     4f6:	4413      	add	r3, r2
     4f8:	4618      	mov	r0, r3
     4fa:	6879      	ldr	r1, [r7, #4]
     4fc:	2206      	movs	r2, #6
     4fe:	f005 f9c9 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:246
            arpif->arp_table[i].cr_time = fnet_timer_ticks();
     502:	f009 fc4d 	bl	9da0 <fnet_timer_ticks>
     506:	4601      	mov	r1, r0
     508:	6938      	ldr	r0, [r7, #16]
     50a:	697a      	ldr	r2, [r7, #20]
     50c:	4613      	mov	r3, r2
     50e:	005b      	lsls	r3, r3, #1
     510:	4413      	add	r3, r2
     512:	00db      	lsls	r3, r3, #3
     514:	4403      	add	r3, r0
     516:	3308      	adds	r3, #8
     518:	6059      	str	r1, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:247
            return ( &arpif->arp_table[i]);
     51a:	697a      	ldr	r2, [r7, #20]
     51c:	4613      	mov	r3, r2
     51e:	005b      	lsls	r3, r3, #1
     520:	4413      	add	r3, r2
     522:	00db      	lsls	r3, r3, #3
     524:	693a      	ldr	r2, [r7, #16]
     526:	4413      	add	r3, r2
     528:	e006      	b.n	538 <fnet_arp_update_entry+0x80>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:238
{
    fnet_arp_if_t *arpif = &(((fnet_eth_if_t *)(netif->if_ptr))->arp_if); //PFI
    int i;

    /* Find an entry to update. */
    for (i = 0; i < FNET_ARP_TABLE_SIZE; ++i)
     52a:	697b      	ldr	r3, [r7, #20]
     52c:	3301      	adds	r3, #1
     52e:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:238 (discriminator 1)
     530:	697b      	ldr	r3, [r7, #20]
     532:	2b09      	cmp	r3, #9
     534:	ddcd      	ble.n	4d2 <fnet_arp_update_entry+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:251
            arpif->arp_table[i].cr_time = fnet_timer_ticks();
            return ( &arpif->arp_table[i]);
        }
    }

    return FNET_NULL;
     536:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:252
}
     538:	4618      	mov	r0, r3
     53a:	3718      	adds	r7, #24
     53c:	46bd      	mov	sp, r7
     53e:	bd80      	pop	{r7, pc}

00000540 <fnet_arp_lookup>:
fnet_arp_lookup():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:261
*
* DESCRIPTION: This function looks up an entry corresponding to
*              the destination IP address
*************************************************************************/
fnet_mac_addr_t *fnet_arp_lookup( fnet_netif_t *netif, fnet_ip4_addr_t ipaddr )
{
     540:	b580      	push	{r7, lr}
     542:	b086      	sub	sp, #24
     544:	af00      	add	r7, sp, #0
     546:	6078      	str	r0, [r7, #4]
     548:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:262
    fnet_arp_if_t   *arpif = &(((fnet_eth_if_t *)(netif->if_ptr))->arp_if); //PFI
     54a:	687b      	ldr	r3, [r7, #4]
     54c:	695b      	ldr	r3, [r3, #20]
     54e:	3314      	adds	r3, #20
     550:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:264
    int             i;
    fnet_mac_addr_t *result = FNET_NULL;
     552:	2300      	movs	r3, #0
     554:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:267

    /* Find an entry. */
    for (i = 0; i < FNET_ARP_TABLE_SIZE; ++i)
     556:	2300      	movs	r3, #0
     558:	617b      	str	r3, [r7, #20]
     55a:	e027      	b.n	5ac <fnet_arp_lookup+0x6c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:269
    {
        if(ipaddr == arpif->arp_table[i].prot_addr)
     55c:	68f9      	ldr	r1, [r7, #12]
     55e:	697a      	ldr	r2, [r7, #20]
     560:	4613      	mov	r3, r2
     562:	005b      	lsls	r3, r3, #1
     564:	4413      	add	r3, r2
     566:	00db      	lsls	r3, r3, #3
     568:	440b      	add	r3, r1
     56a:	3308      	adds	r3, #8
     56c:	681a      	ldr	r2, [r3, #0]
     56e:	683b      	ldr	r3, [r7, #0]
     570:	429a      	cmp	r2, r3
     572:	d118      	bne.n	5a6 <fnet_arp_lookup+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:271
        {
            if(fnet_memcmp(arpif->arp_table[i].hard_addr, 
     574:	697a      	ldr	r2, [r7, #20]
     576:	4613      	mov	r3, r2
     578:	005b      	lsls	r3, r3, #1
     57a:	4413      	add	r3, r2
     57c:	00db      	lsls	r3, r3, #3
     57e:	68fa      	ldr	r2, [r7, #12]
     580:	4413      	add	r3, r2
     582:	4618      	mov	r0, r3
     584:	490d      	ldr	r1, [pc, #52]	; (5bc <fnet_arp_lookup+0x7c>)
     586:	2206      	movs	r2, #6
     588:	f005 fb4e 	bl	5c28 <fnet_memcmp>
     58c:	4603      	mov	r3, r0
     58e:	2b00      	cmp	r3, #0
     590:	d008      	beq.n	5a4 <fnet_arp_lookup+0x64>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:274
                            fnet_eth_null_addr, sizeof(fnet_mac_addr_t)))
            {
                result = &arpif->arp_table[i].hard_addr;
     592:	697a      	ldr	r2, [r7, #20]
     594:	4613      	mov	r3, r2
     596:	005b      	lsls	r3, r3, #1
     598:	4413      	add	r3, r2
     59a:	00db      	lsls	r3, r3, #3
     59c:	68fa      	ldr	r2, [r7, #12]
     59e:	4413      	add	r3, r2
     5a0:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:277
            }
            /* Else => not found */
            break;
     5a2:	e006      	b.n	5b2 <fnet_arp_lookup+0x72>
     5a4:	e005      	b.n	5b2 <fnet_arp_lookup+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:267
    fnet_arp_if_t   *arpif = &(((fnet_eth_if_t *)(netif->if_ptr))->arp_if); //PFI
    int             i;
    fnet_mac_addr_t *result = FNET_NULL;

    /* Find an entry. */
    for (i = 0; i < FNET_ARP_TABLE_SIZE; ++i)
     5a6:	697b      	ldr	r3, [r7, #20]
     5a8:	3301      	adds	r3, #1
     5aa:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:267 (discriminator 1)
     5ac:	697b      	ldr	r3, [r7, #20]
     5ae:	2b09      	cmp	r3, #9
     5b0:	ddd4      	ble.n	55c <fnet_arp_lookup+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:281
            /* Else => not found */
            break;
        }
    }
//NOTFOUND:
    return result;
     5b2:	693b      	ldr	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:282
}
     5b4:	4618      	mov	r0, r3
     5b6:	3718      	adds	r7, #24
     5b8:	46bd      	mov	sp, r7
     5ba:	bd80      	pop	{r7, pc}
     5bc:	00013ef8 	.word	0x00013ef8

000005c0 <fnet_arp_resolve>:
fnet_arp_resolve():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:292
* DESCRIPTION: This function finds the first unused or the oldest
*              ARP table entry and makes a new entry
*              to prepare it for an ARP reply.
*************************************************************************/
void fnet_arp_resolve( fnet_netif_t *netif, fnet_ip4_addr_t ipaddr, fnet_netbuf_t *nb )
{
     5c0:	b580      	push	{r7, lr}
     5c2:	b088      	sub	sp, #32
     5c4:	af00      	add	r7, sp, #0
     5c6:	60f8      	str	r0, [r7, #12]
     5c8:	60b9      	str	r1, [r7, #8]
     5ca:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:293
    fnet_arp_if_t *arpif = &(((fnet_eth_if_t *)(netif->if_ptr))->arp_if); //PFI
     5cc:	68fb      	ldr	r3, [r7, #12]
     5ce:	695b      	ldr	r3, [r3, #20]
     5d0:	3314      	adds	r3, #20
     5d2:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:297
    int i;
    fnet_arp_entry_t *entry;

    for (i = 0; i < FNET_ARP_TABLE_SIZE; i++)
     5d4:	2300      	movs	r3, #0
     5d6:	61fb      	str	r3, [r7, #28]
     5d8:	e00f      	b.n	5fa <fnet_arp_resolve+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:299
    {
        if(ipaddr == arpif->arp_table[i].prot_addr)
     5da:	6979      	ldr	r1, [r7, #20]
     5dc:	69fa      	ldr	r2, [r7, #28]
     5de:	4613      	mov	r3, r2
     5e0:	005b      	lsls	r3, r3, #1
     5e2:	4413      	add	r3, r2
     5e4:	00db      	lsls	r3, r3, #3
     5e6:	440b      	add	r3, r1
     5e8:	3308      	adds	r3, #8
     5ea:	681a      	ldr	r2, [r3, #0]
     5ec:	68bb      	ldr	r3, [r7, #8]
     5ee:	429a      	cmp	r2, r3
     5f0:	d100      	bne.n	5f4 <fnet_arp_resolve+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:301
        {
            break;
     5f2:	e005      	b.n	600 <fnet_arp_resolve+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:297
{
    fnet_arp_if_t *arpif = &(((fnet_eth_if_t *)(netif->if_ptr))->arp_if); //PFI
    int i;
    fnet_arp_entry_t *entry;

    for (i = 0; i < FNET_ARP_TABLE_SIZE; i++)
     5f4:	69fb      	ldr	r3, [r7, #28]
     5f6:	3301      	adds	r3, #1
     5f8:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:297 (discriminator 1)
     5fa:	69fb      	ldr	r3, [r7, #28]
     5fc:	2b09      	cmp	r3, #9
     5fe:	ddec      	ble.n	5da <fnet_arp_resolve+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:306
            break;
        }
    }

    /* If no unused entry is found, create it. */
    if(i == FNET_ARP_TABLE_SIZE)
     600:	69fb      	ldr	r3, [r7, #28]
     602:	2b0a      	cmp	r3, #10
     604:	d106      	bne.n	614 <fnet_arp_resolve+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:307
        entry = fnet_arp_add_entry(netif, ipaddr, fnet_eth_null_addr);
     606:	68f8      	ldr	r0, [r7, #12]
     608:	68b9      	ldr	r1, [r7, #8]
     60a:	4a20      	ldr	r2, [pc, #128]	; (68c <fnet_arp_resolve+0xcc>)
     60c:	f7ff fe7c 	bl	308 <fnet_arp_add_entry>
     610:	61b8      	str	r0, [r7, #24]
     612:	e007      	b.n	624 <fnet_arp_resolve+0x64>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:309
    else
        entry = &arpif->arp_table[i];
     614:	69fa      	ldr	r2, [r7, #28]
     616:	4613      	mov	r3, r2
     618:	005b      	lsls	r3, r3, #1
     61a:	4413      	add	r3, r2
     61c:	00db      	lsls	r3, r3, #3
     61e:	697a      	ldr	r2, [r7, #20]
     620:	4413      	add	r3, r2
     622:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:311

    if(entry->hold)
     624:	69bb      	ldr	r3, [r7, #24]
     626:	691b      	ldr	r3, [r3, #16]
     628:	2b00      	cmp	r3, #0
     62a:	d004      	beq.n	636 <fnet_arp_resolve+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:313
    {
        fnet_netbuf_free_chain(entry->hold);
     62c:	69bb      	ldr	r3, [r7, #24]
     62e:	691b      	ldr	r3, [r3, #16]
     630:	4618      	mov	r0, r3
     632:	f002 fa65 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:316
    }

    if((i == FNET_ARP_TABLE_SIZE)||
     636:	69fb      	ldr	r3, [r7, #28]
     638:	2b0a      	cmp	r3, #10
     63a:	d013      	beq.n	664 <fnet_arp_resolve+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:317 (discriminator 1)
        ((entry->hold)&&(((fnet_timer_ticks()-entry->hold_time)*FNET_TIMER_PERIOD_MS)>1000))||
     63c:	69bb      	ldr	r3, [r7, #24]
     63e:	691b      	ldr	r3, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:316 (discriminator 1)
    if(entry->hold)
    {
        fnet_netbuf_free_chain(entry->hold);
    }

    if((i == FNET_ARP_TABLE_SIZE)||
     640:	2b00      	cmp	r3, #0
     642:	d00b      	beq.n	65c <fnet_arp_resolve+0x9c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:317
        ((entry->hold)&&(((fnet_timer_ticks()-entry->hold_time)*FNET_TIMER_PERIOD_MS)>1000))||
     644:	f009 fbac 	bl	9da0 <fnet_timer_ticks>
     648:	4602      	mov	r2, r0
     64a:	69bb      	ldr	r3, [r7, #24]
     64c:	695b      	ldr	r3, [r3, #20]
     64e:	1ad3      	subs	r3, r2, r3
     650:	2264      	movs	r2, #100	; 0x64
     652:	fb02 f303 	mul.w	r3, r2, r3
     656:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
     65a:	d803      	bhi.n	664 <fnet_arp_resolve+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:318 (discriminator 1)
        (!entry->hold))
     65c:	69bb      	ldr	r3, [r7, #24]
     65e:	691b      	ldr	r3, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:317 (discriminator 1)
    {
        fnet_netbuf_free_chain(entry->hold);
    }

    if((i == FNET_ARP_TABLE_SIZE)||
        ((entry->hold)&&(((fnet_timer_ticks()-entry->hold_time)*FNET_TIMER_PERIOD_MS)>1000))||
     660:	2b00      	cmp	r3, #0
     662:	d10c      	bne.n	67e <fnet_arp_resolve+0xbe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:320
        (!entry->hold))
    {
        entry->hold_time = fnet_timer_ticks();
     664:	f009 fb9c 	bl	9da0 <fnet_timer_ticks>
     668:	4602      	mov	r2, r0
     66a:	69bb      	ldr	r3, [r7, #24]
     66c:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:321
        entry->hold = nb;
     66e:	69bb      	ldr	r3, [r7, #24]
     670:	687a      	ldr	r2, [r7, #4]
     672:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:322
        fnet_arp_request(netif, ipaddr);
     674:	68f8      	ldr	r0, [r7, #12]
     676:	68b9      	ldr	r1, [r7, #8]
     678:	f000 f8e6 	bl	848 <fnet_arp_request>
     67c:	e002      	b.n	684 <fnet_arp_resolve+0xc4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:325
    }
    else
        entry->hold = nb;
     67e:	69bb      	ldr	r3, [r7, #24]
     680:	687a      	ldr	r2, [r7, #4]
     682:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:326
}
     684:	3720      	adds	r7, #32
     686:	46bd      	mov	sp, r7
     688:	bd80      	pop	{r7, pc}
     68a:	bf00      	nop
     68c:	00013ef8 	.word	0x00013ef8

00000690 <fnet_arp_input>:
fnet_arp_input():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:334
* NAME: fnet_arp_input
*
* DESCRIPTION: ARP input function.
*************************************************************************/
void fnet_arp_input( fnet_netif_t *netif, fnet_netbuf_t *nb )
{
     690:	b590      	push	{r4, r7, lr}
     692:	b08b      	sub	sp, #44	; 0x2c
     694:	af00      	add	r7, sp, #0
     696:	6078      	str	r0, [r7, #4]
     698:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:335
	fnet_arp_if_t       *arpif = &(((fnet_eth_if_t *)(netif->if_ptr))->arp_if);
     69a:	687b      	ldr	r3, [r7, #4]
     69c:	695b      	ldr	r3, [r3, #20]
     69e:	3314      	adds	r3, #20
     6a0:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:336
    fnet_arp_header_t   *arp_hdr = nb->data_ptr;
     6a2:	683b      	ldr	r3, [r7, #0]
     6a4:	68db      	ldr	r3, [r3, #12]
     6a6:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:340
    fnet_mac_addr_t     local_addr;
    fnet_arp_entry_t    *entry;

    if(!((nb == 0) /* The packet is wrong. */
     6a8:	683b      	ldr	r3, [r7, #0]
     6aa:	2b00      	cmp	r3, #0
     6ac:	f000 80c2 	beq.w	834 <fnet_arp_input+0x1a4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:341
    || (nb->total_length < sizeof(fnet_arp_header_t)) || (arp_hdr->hard_type != FNET_HTONS(FNET_ARP_HARD_TYPE))
     6b0:	683b      	ldr	r3, [r7, #0]
     6b2:	695b      	ldr	r3, [r3, #20]
     6b4:	2b1b      	cmp	r3, #27
     6b6:	f240 80bd 	bls.w	834 <fnet_arp_input+0x1a4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:341 (discriminator 1)
     6ba:	69fb      	ldr	r3, [r7, #28]
     6bc:	881b      	ldrh	r3, [r3, #0]
     6be:	b29b      	uxth	r3, r3
     6c0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
     6c4:	f040 80b6 	bne.w	834 <fnet_arp_input+0x1a4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:342
             || (arp_hdr->hard_size != FNET_ARP_HARD_SIZE) || (arp_hdr->prot_type != FNET_HTONS(FNET_ETH_TYPE_IP4))
     6c8:	69fb      	ldr	r3, [r7, #28]
     6ca:	791b      	ldrb	r3, [r3, #4]
     6cc:	2b06      	cmp	r3, #6
     6ce:	f040 80b1 	bne.w	834 <fnet_arp_input+0x1a4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:342 (discriminator 1)
     6d2:	69fb      	ldr	r3, [r7, #28]
     6d4:	885b      	ldrh	r3, [r3, #2]
     6d6:	b29b      	uxth	r3, r3
     6d8:	2b08      	cmp	r3, #8
     6da:	f040 80ab 	bne.w	834 <fnet_arp_input+0x1a4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:343
             || (arp_hdr->prot_size != FNET_ARP_PROT_SIZE)))
     6de:	69fb      	ldr	r3, [r7, #28]
     6e0:	795b      	ldrb	r3, [r3, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:340
	fnet_arp_if_t       *arpif = &(((fnet_eth_if_t *)(netif->if_ptr))->arp_if);
    fnet_arp_header_t   *arp_hdr = nb->data_ptr;
    fnet_mac_addr_t     local_addr;
    fnet_arp_entry_t    *entry;

    if(!((nb == 0) /* The packet is wrong. */
     6e2:	2b04      	cmp	r3, #4
     6e4:	f040 80a6 	bne.w	834 <fnet_arp_input+0x1a4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:346
    || (nb->total_length < sizeof(fnet_arp_header_t)) || (arp_hdr->hard_type != FNET_HTONS(FNET_ARP_HARD_TYPE))
             || (arp_hdr->hard_size != FNET_ARP_HARD_SIZE) || (arp_hdr->prot_type != FNET_HTONS(FNET_ETH_TYPE_IP4))
             || (arp_hdr->prot_size != FNET_ARP_PROT_SIZE)))
    {

        if(nb->total_length > sizeof(fnet_arp_header_t)) 
     6e8:	683b      	ldr	r3, [r7, #0]
     6ea:	695b      	ldr	r3, [r3, #20]
     6ec:	2b1c      	cmp	r3, #28
     6ee:	d908      	bls.n	702 <fnet_arp_input+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:349
        {
            /* Logical size and the physical size of the packet should be the same.*/
            fnet_netbuf_trim(&nb, (int)(sizeof(fnet_arp_header_t) - nb->total_length)); 
     6f0:	683b      	ldr	r3, [r7, #0]
     6f2:	695b      	ldr	r3, [r3, #20]
     6f4:	f1c3 031c 	rsb	r3, r3, #28
     6f8:	463a      	mov	r2, r7
     6fa:	4610      	mov	r0, r2
     6fc:	4619      	mov	r1, r3
     6fe:	f002 fadd 	bl	2cbc <fnet_netbuf_trim>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:354
        }
        
        fnet_arp_trace("RX", arp_hdr); /* Print ARP header. */
        
        fnet_netif_get_hw_addr(netif, local_addr, sizeof(fnet_mac_addr_t));
     702:	f107 030c 	add.w	r3, r7, #12
     706:	6878      	ldr	r0, [r7, #4]
     708:	4619      	mov	r1, r3
     70a:	2206      	movs	r2, #6
     70c:	f003 f8b8 	bl	3880 <fnet_netif_get_hw_addr>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:356

        if(!(!fnet_memcmp(arp_hdr->sender_hard_addr, local_addr, sizeof(fnet_mac_addr_t)) /* It's from me => ignore it.*/
     710:	69fb      	ldr	r3, [r7, #28]
     712:	f103 0208 	add.w	r2, r3, #8
     716:	f107 030c 	add.w	r3, r7, #12
     71a:	4610      	mov	r0, r2
     71c:	4619      	mov	r1, r3
     71e:	2206      	movs	r2, #6
     720:	f005 fa82 	bl	5c28 <fnet_memcmp>
     724:	4603      	mov	r3, r0
     726:	2b00      	cmp	r3, #0
     728:	f000 8084 	beq.w	834 <fnet_arp_input+0x1a4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:357 (discriminator 1)
        || !fnet_memcmp(arp_hdr->sender_hard_addr, fnet_eth_broadcast, sizeof(fnet_mac_addr_t)))  /* It's broadcast=> error. */
     72c:	69fb      	ldr	r3, [r7, #28]
     72e:	3308      	adds	r3, #8
     730:	4618      	mov	r0, r3
     732:	4944      	ldr	r1, [pc, #272]	; (844 <fnet_arp_input+0x1b4>)
     734:	2206      	movs	r2, #6
     736:	f005 fa77 	bl	5c28 <fnet_memcmp>
     73a:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:356 (discriminator 1)
        
        fnet_arp_trace("RX", arp_hdr); /* Print ARP header. */
        
        fnet_netif_get_hw_addr(netif, local_addr, sizeof(fnet_mac_addr_t));

        if(!(!fnet_memcmp(arp_hdr->sender_hard_addr, local_addr, sizeof(fnet_mac_addr_t)) /* It's from me => ignore it.*/
     73c:	2b00      	cmp	r3, #0
     73e:	d079      	beq.n	834 <fnet_arp_input+0x1a4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:360
        || !fnet_memcmp(arp_hdr->sender_hard_addr, fnet_eth_broadcast, sizeof(fnet_mac_addr_t)))  /* It's broadcast=> error. */
        )
        {
            fnet_ip4_addr_t sender_prot_addr = arp_hdr->sender_prot_addr;
     740:	69fb      	ldr	r3, [r7, #28]
     742:	f8d3 300e 	ldr.w	r3, [r3, #14]
     746:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:361
            fnet_ip4_addr_t targer_prot_addr = arp_hdr->targer_prot_addr;
     748:	69fb      	ldr	r3, [r7, #28]
     74a:	699b      	ldr	r3, [r3, #24]
     74c:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:363
           
            if(sender_prot_addr != netif->ip4_addr.address)     /* Check Duplicate IP address.*/
     74e:	687b      	ldr	r3, [r7, #4]
     750:	6a5a      	ldr	r2, [r3, #36]	; 0x24
     752:	69bb      	ldr	r3, [r7, #24]
     754:	429a      	cmp	r2, r3
     756:	d02d      	beq.n	7b4 <fnet_arp_input+0x124>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:365
            {
                if(targer_prot_addr == netif->ip4_addr.address) /* It's for me.*/
     758:	687b      	ldr	r3, [r7, #4]
     75a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
     75c:	697b      	ldr	r3, [r7, #20]
     75e:	429a      	cmp	r2, r3
     760:	d108      	bne.n	774 <fnet_arp_input+0xe4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:367
                {
                    entry = fnet_arp_add_entry(netif, sender_prot_addr, arp_hdr->sender_hard_addr);
     762:	69fb      	ldr	r3, [r7, #28]
     764:	3308      	adds	r3, #8
     766:	6878      	ldr	r0, [r7, #4]
     768:	69b9      	ldr	r1, [r7, #24]
     76a:	461a      	mov	r2, r3
     76c:	f7ff fdcc 	bl	308 <fnet_arp_add_entry>
     770:	6278      	str	r0, [r7, #36]	; 0x24
     772:	e007      	b.n	784 <fnet_arp_input+0xf4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:371
                }
                else
                {
                    entry = fnet_arp_update_entry(netif, sender_prot_addr, arp_hdr->sender_hard_addr);
     774:	69fb      	ldr	r3, [r7, #28]
     776:	3308      	adds	r3, #8
     778:	6878      	ldr	r0, [r7, #4]
     77a:	69b9      	ldr	r1, [r7, #24]
     77c:	461a      	mov	r2, r3
     77e:	f7ff fe9b 	bl	4b8 <fnet_arp_update_entry>
     782:	6278      	str	r0, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:374
                }

                if(entry && entry->hold)
     784:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     786:	2b00      	cmp	r3, #0
     788:	d01a      	beq.n	7c0 <fnet_arp_input+0x130>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:374 (discriminator 1)
     78a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     78c:	691b      	ldr	r3, [r3, #16]
     78e:	2b00      	cmp	r3, #0
     790:	d016      	beq.n	7c0 <fnet_arp_input+0x130>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:377
                {
                    /* Send waiting data.*/
                    ((fnet_eth_if_t *)(netif->if_ptr))->output(netif, FNET_ETH_TYPE_IP4, entry->hard_addr, entry->hold);
     792:	687b      	ldr	r3, [r7, #4]
     794:	695b      	ldr	r3, [r3, #20]
     796:	689c      	ldr	r4, [r3, #8]
     798:	6a7a      	ldr	r2, [r7, #36]	; 0x24
     79a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     79c:	691b      	ldr	r3, [r3, #16]
     79e:	6878      	ldr	r0, [r7, #4]
     7a0:	f44f 6100 	mov.w	r1, #2048	; 0x800
     7a4:	47a0      	blx	r4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:379

                    entry->hold = 0;
     7a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     7a8:	2200      	movs	r2, #0
     7aa:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:380
                    entry->hold_time = 0;
     7ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     7ae:	2200      	movs	r2, #0
     7b0:	615a      	str	r2, [r3, #20]
     7b2:	e005      	b.n	7c0 <fnet_arp_input+0x130>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:386
                }
            }
            else
            {
                /* IP is duplicated. */
                fnet_event_raise(arpif->arp_event);
     7b4:	6a3b      	ldr	r3, [r7, #32]
     7b6:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
     7ba:	4618      	mov	r0, r3
     7bc:	f001 fd8a 	bl	22d4 <fnet_event_raise>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:390
            }

            /* ARP request. If it asked for our address, we send out a reply.*/
            if((arp_hdr->op == FNET_HTONS(FNET_ARP_OP_REQUEST)) && (targer_prot_addr == netif->ip4_addr.address))
     7c0:	69fb      	ldr	r3, [r7, #28]
     7c2:	88db      	ldrh	r3, [r3, #6]
     7c4:	b29b      	uxth	r3, r3
     7c6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
     7ca:	d133      	bne.n	834 <fnet_arp_input+0x1a4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:390 (discriminator 1)
     7cc:	687b      	ldr	r3, [r7, #4]
     7ce:	6a5a      	ldr	r2, [r3, #36]	; 0x24
     7d0:	697b      	ldr	r3, [r7, #20]
     7d2:	429a      	cmp	r2, r3
     7d4:	d12e      	bne.n	834 <fnet_arp_input+0x1a4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:392
            {
                arp_hdr->op = FNET_HTONS(FNET_ARP_OP_REPLY); /* Opcode */
     7d6:	69fb      	ldr	r3, [r7, #28]
     7d8:	2200      	movs	r2, #0
     7da:	719a      	strb	r2, [r3, #6]
     7dc:	2200      	movs	r2, #0
     7de:	f042 0202 	orr.w	r2, r2, #2
     7e2:	71da      	strb	r2, [r3, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:394

                fnet_memcpy(arp_hdr->target_hard_addr, arp_hdr->sender_hard_addr, sizeof(fnet_mac_addr_t));
     7e4:	69fb      	ldr	r3, [r7, #28]
     7e6:	f103 0212 	add.w	r2, r3, #18
     7ea:	69fb      	ldr	r3, [r7, #28]
     7ec:	3308      	adds	r3, #8
     7ee:	4610      	mov	r0, r2
     7f0:	4619      	mov	r1, r3
     7f2:	2206      	movs	r2, #6
     7f4:	f005 f84e 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:395
                fnet_memcpy(arp_hdr->sender_hard_addr, local_addr, sizeof(fnet_mac_addr_t));
     7f8:	69fb      	ldr	r3, [r7, #28]
     7fa:	f103 0208 	add.w	r2, r3, #8
     7fe:	f107 030c 	add.w	r3, r7, #12
     802:	4610      	mov	r0, r2
     804:	4619      	mov	r1, r3
     806:	2206      	movs	r2, #6
     808:	f005 f844 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:397

                arp_hdr->targer_prot_addr = arp_hdr->sender_prot_addr;
     80c:	69fb      	ldr	r3, [r7, #28]
     80e:	f8d3 200e 	ldr.w	r2, [r3, #14]
     812:	69fb      	ldr	r3, [r7, #28]
     814:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:398
                arp_hdr->sender_prot_addr = netif->ip4_addr.address;
     816:	687b      	ldr	r3, [r7, #4]
     818:	6a5a      	ldr	r2, [r3, #36]	; 0x24
     81a:	69fb      	ldr	r3, [r7, #28]
     81c:	f8c3 200e 	str.w	r2, [r3, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:402
                
                fnet_arp_trace("TX Reply", arp_hdr); /* Print ARP header. */
                
                ((fnet_eth_if_t *)(netif->if_ptr))->output(netif, FNET_ETH_TYPE_ARP, fnet_eth_broadcast, nb);
     820:	687b      	ldr	r3, [r7, #4]
     822:	695b      	ldr	r3, [r3, #20]
     824:	689c      	ldr	r4, [r3, #8]
     826:	683b      	ldr	r3, [r7, #0]
     828:	6878      	ldr	r0, [r7, #4]
     82a:	f640 0106 	movw	r1, #2054	; 0x806
     82e:	4a05      	ldr	r2, [pc, #20]	; (844 <fnet_arp_input+0x1b4>)
     830:	47a0      	blx	r4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:403
                return;
     832:	e003      	b.n	83c <fnet_arp_input+0x1ac>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:408
            }
        }
    }

    fnet_netbuf_free_chain(nb);
     834:	683b      	ldr	r3, [r7, #0]
     836:	4618      	mov	r0, r3
     838:	f002 f962 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:409
}
     83c:	372c      	adds	r7, #44	; 0x2c
     83e:	46bd      	mov	sp, r7
     840:	bd90      	pop	{r4, r7, pc}
     842:	bf00      	nop
     844:	00013f00 	.word	0x00013f00

00000848 <fnet_arp_request>:
fnet_arp_request():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:417
* NAME: fnet_arp_request
*
* DESCRIPTION: Sends ARP request.
*************************************************************************/
void fnet_arp_request( fnet_netif_t *netif, fnet_ip4_addr_t ipaddr )
{
     848:	b590      	push	{r4, r7, lr}
     84a:	b087      	sub	sp, #28
     84c:	af00      	add	r7, sp, #0
     84e:	6078      	str	r0, [r7, #4]
     850:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:423
    fnet_arp_header_t *arp_hdr;
    fnet_mac_addr_t sender_addr;

    fnet_netbuf_t *nb;

    if((nb = fnet_netbuf_new(sizeof(fnet_arp_header_t), FNET_TRUE)) != 0)
     852:	201c      	movs	r0, #28
     854:	2101      	movs	r1, #1
     856:	f001 ff39 	bl	26cc <fnet_netbuf_new>
     85a:	6178      	str	r0, [r7, #20]
     85c:	697b      	ldr	r3, [r7, #20]
     85e:	2b00      	cmp	r3, #0
     860:	d046      	beq.n	8f0 <fnet_arp_request+0xa8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:425
    {
        arp_hdr = nb->data_ptr;
     862:	697b      	ldr	r3, [r7, #20]
     864:	68db      	ldr	r3, [r3, #12]
     866:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:426
        arp_hdr->hard_type = FNET_HTONS(FNET_ARP_HARD_TYPE); /* The type of hardware address (=1 for Ethernet).*/
     868:	693b      	ldr	r3, [r7, #16]
     86a:	2200      	movs	r2, #0
     86c:	701a      	strb	r2, [r3, #0]
     86e:	2200      	movs	r2, #0
     870:	f042 0201 	orr.w	r2, r2, #1
     874:	705a      	strb	r2, [r3, #1]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:427
        arp_hdr->prot_type = FNET_HTONS(FNET_ETH_TYPE_IP4);   /* The type of protocol address (=0x0800 for IP). */
     876:	693b      	ldr	r3, [r7, #16]
     878:	2200      	movs	r2, #0
     87a:	f042 0208 	orr.w	r2, r2, #8
     87e:	709a      	strb	r2, [r3, #2]
     880:	2200      	movs	r2, #0
     882:	70da      	strb	r2, [r3, #3]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:428
        arp_hdr->hard_size = FNET_ARP_HARD_SIZE; /* The size in bytes of the hardware address (=6). */
     884:	693b      	ldr	r3, [r7, #16]
     886:	2206      	movs	r2, #6
     888:	711a      	strb	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:429
        arp_hdr->prot_size = FNET_ARP_PROT_SIZE; /* The size in bytes of the protocol address (=4). */
     88a:	693b      	ldr	r3, [r7, #16]
     88c:	2204      	movs	r2, #4
     88e:	715a      	strb	r2, [r3, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:430
        arp_hdr->op = FNET_HTONS(FNET_ARP_OP_REQUEST);       /* Opcode. */
     890:	693b      	ldr	r3, [r7, #16]
     892:	2200      	movs	r2, #0
     894:	719a      	strb	r2, [r3, #6]
     896:	2200      	movs	r2, #0
     898:	f042 0201 	orr.w	r2, r2, #1
     89c:	71da      	strb	r2, [r3, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:432

        fnet_netif_get_hw_addr(netif, sender_addr, sizeof(fnet_mac_addr_t));
     89e:	f107 0308 	add.w	r3, r7, #8
     8a2:	6878      	ldr	r0, [r7, #4]
     8a4:	4619      	mov	r1, r3
     8a6:	2206      	movs	r2, #6
     8a8:	f002 ffea 	bl	3880 <fnet_netif_get_hw_addr>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:434

        fnet_memcpy(arp_hdr->target_hard_addr, fnet_eth_null_addr, sizeof(fnet_mac_addr_t));
     8ac:	693b      	ldr	r3, [r7, #16]
     8ae:	3312      	adds	r3, #18
     8b0:	4618      	mov	r0, r3
     8b2:	4911      	ldr	r1, [pc, #68]	; (8f8 <fnet_arp_request+0xb0>)
     8b4:	2206      	movs	r2, #6
     8b6:	f004 ffed 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:435
        fnet_memcpy(arp_hdr->sender_hard_addr, sender_addr, sizeof(fnet_mac_addr_t));
     8ba:	693b      	ldr	r3, [r7, #16]
     8bc:	f103 0208 	add.w	r2, r3, #8
     8c0:	f107 0308 	add.w	r3, r7, #8
     8c4:	4610      	mov	r0, r2
     8c6:	4619      	mov	r1, r3
     8c8:	2206      	movs	r2, #6
     8ca:	f004 ffe3 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:437

        arp_hdr->targer_prot_addr = ipaddr;              /* Protocol address of target of this packet.*/
     8ce:	693b      	ldr	r3, [r7, #16]
     8d0:	683a      	ldr	r2, [r7, #0]
     8d2:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:438
        arp_hdr->sender_prot_addr = netif->ip4_addr.address; /* Protocol address of sender of this packet.*/
     8d4:	687b      	ldr	r3, [r7, #4]
     8d6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
     8d8:	693b      	ldr	r3, [r7, #16]
     8da:	f8c3 200e 	str.w	r2, [r3, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:442

        fnet_arp_trace("TX", arp_hdr); /* Print ARP header. */        
        
        ((fnet_eth_if_t *)(netif->if_ptr))->output(netif, FNET_ETH_TYPE_ARP, fnet_eth_broadcast, nb);
     8de:	687b      	ldr	r3, [r7, #4]
     8e0:	695b      	ldr	r3, [r3, #20]
     8e2:	689c      	ldr	r4, [r3, #8]
     8e4:	6878      	ldr	r0, [r7, #4]
     8e6:	f640 0106 	movw	r1, #2054	; 0x806
     8ea:	4a04      	ldr	r2, [pc, #16]	; (8fc <fnet_arp_request+0xb4>)
     8ec:	697b      	ldr	r3, [r7, #20]
     8ee:	47a0      	blx	r4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:444
    }
}
     8f0:	371c      	adds	r7, #28
     8f2:	46bd      	mov	sp, r7
     8f4:	bd90      	pop	{r4, r7, pc}
     8f6:	bf00      	nop
     8f8:	00013ef8 	.word	0x00013ef8
     8fc:	00013f00 	.word	0x00013f00

00000900 <fnet_arp_ip_duplicated>:
fnet_arp_ip_duplicated():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:453
*
* DESCRIPTION: This function is called on the IP address
*              duplication event.
*************************************************************************/
static void fnet_arp_ip_duplicated(void *cookie)
{
     900:	b580      	push	{r7, lr}
     902:	b082      	sub	sp, #8
     904:	af00      	add	r7, sp, #0
     906:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:457
	
    FNET_DEBUG_ARP("");
    FNET_DEBUG_ARP("\33[31mARP: Duplicate IP address.\33[0m");
    fnet_netif_dupip_handler_signal((fnet_netif_t *)cookie); 
     908:	6878      	ldr	r0, [r7, #4]
     90a:	f003 f87b 	bl	3a04 <fnet_netif_dupip_handler_signal>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:458
}
     90e:	3708      	adds	r7, #8
     910:	46bd      	mov	sp, r7
     912:	bd80      	pop	{r7, pc}

00000914 <fnet_arp_drain>:
fnet_arp_drain():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:467
*
* DESCRIPTION: This function tries to free not critical parts 
*              of memory used by ARP protocol.
*************************************************************************/
void fnet_arp_drain(fnet_netif_t *netif)
{
     914:	b580      	push	{r7, lr}
     916:	b084      	sub	sp, #16
     918:	af00      	add	r7, sp, #0
     91a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:469
   int i;
   fnet_arp_if_t * arpif = &(((fnet_eth_if_t *)(netif->if_ptr))->arp_if); //PFI
     91c:	687b      	ldr	r3, [r7, #4]
     91e:	695b      	ldr	r3, [r3, #20]
     920:	3314      	adds	r3, #20
     922:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:471
     
   fnet_isr_lock();
     924:	f001 fc94 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:474
   
   /* ARP table drain.*/
   for(i=0;i<FNET_ARP_TABLE_SIZE;i++)
     928:	2300      	movs	r3, #0
     92a:	60fb      	str	r3, [r7, #12]
     92c:	e02d      	b.n	98a <fnet_arp_drain+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:476
   {
      if(arpif->arp_table[i].hold)
     92e:	68b9      	ldr	r1, [r7, #8]
     930:	68fa      	ldr	r2, [r7, #12]
     932:	4613      	mov	r3, r2
     934:	005b      	lsls	r3, r3, #1
     936:	4413      	add	r3, r2
     938:	00db      	lsls	r3, r3, #3
     93a:	440b      	add	r3, r1
     93c:	3310      	adds	r3, #16
     93e:	681b      	ldr	r3, [r3, #0]
     940:	2b00      	cmp	r3, #0
     942:	d01f      	beq.n	984 <fnet_arp_drain+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:478
      {
         fnet_netbuf_free_chain(arpif->arp_table[i].hold);
     944:	68b9      	ldr	r1, [r7, #8]
     946:	68fa      	ldr	r2, [r7, #12]
     948:	4613      	mov	r3, r2
     94a:	005b      	lsls	r3, r3, #1
     94c:	4413      	add	r3, r2
     94e:	00db      	lsls	r3, r3, #3
     950:	440b      	add	r3, r1
     952:	3310      	adds	r3, #16
     954:	681b      	ldr	r3, [r3, #0]
     956:	4618      	mov	r0, r3
     958:	f002 f8d2 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:479
         arpif->arp_table[i].hold=0;
     95c:	68b9      	ldr	r1, [r7, #8]
     95e:	68fa      	ldr	r2, [r7, #12]
     960:	4613      	mov	r3, r2
     962:	005b      	lsls	r3, r3, #1
     964:	4413      	add	r3, r2
     966:	00db      	lsls	r3, r3, #3
     968:	440b      	add	r3, r1
     96a:	3310      	adds	r3, #16
     96c:	2200      	movs	r2, #0
     96e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:480
         arpif->arp_table[i].hold_time=0;
     970:	68b9      	ldr	r1, [r7, #8]
     972:	68fa      	ldr	r2, [r7, #12]
     974:	4613      	mov	r3, r2
     976:	005b      	lsls	r3, r3, #1
     978:	4413      	add	r3, r2
     97a:	00db      	lsls	r3, r3, #3
     97c:	440b      	add	r3, r1
     97e:	3310      	adds	r3, #16
     980:	2200      	movs	r2, #0
     982:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:474
   fnet_arp_if_t * arpif = &(((fnet_eth_if_t *)(netif->if_ptr))->arp_if); //PFI
     
   fnet_isr_lock();
   
   /* ARP table drain.*/
   for(i=0;i<FNET_ARP_TABLE_SIZE;i++)
     984:	68fb      	ldr	r3, [r7, #12]
     986:	3301      	adds	r3, #1
     988:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:474 (discriminator 1)
     98a:	68fb      	ldr	r3, [r7, #12]
     98c:	2b09      	cmp	r3, #9
     98e:	ddce      	ble.n	92e <fnet_arp_drain+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:484
         arpif->arp_table[i].hold=0;
         arpif->arp_table[i].hold_time=0;
      }
   }
  
   fnet_isr_unlock();
     990:	f001 fc6c 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_arp.c:485
}
     994:	3710      	adds	r7, #16
     996:	46bd      	mov	sp, r7
     998:	bd80      	pop	{r7, pc}
     99a:	bf00      	nop

0000099c <fnet_checksum_low>:
fnet_checksum_low():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:71
*
*************************************************************************/
#if !FNET_CFG_OVERLOAD_CHECKSUM_LOW

static unsigned long fnet_checksum_low(unsigned long sum, int current_length, unsigned short *d_ptr)
{
     99c:	b480      	push	{r7}
     99e:	b087      	sub	sp, #28
     9a0:	af00      	add	r7, sp, #0
     9a2:	60f8      	str	r0, [r7, #12]
     9a4:	60b9      	str	r1, [r7, #8]
     9a6:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:74
        unsigned short p_byte1;
        
        while((current_length -= 32) >= 0)
     9a8:	e06f      	b.n	a8a <fnet_checksum_low+0xee>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:76
        {
            sum += *d_ptr++;
     9aa:	687b      	ldr	r3, [r7, #4]
     9ac:	1c9a      	adds	r2, r3, #2
     9ae:	607a      	str	r2, [r7, #4]
     9b0:	881b      	ldrh	r3, [r3, #0]
     9b2:	68fa      	ldr	r2, [r7, #12]
     9b4:	4413      	add	r3, r2
     9b6:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:77
            sum += *d_ptr++;
     9b8:	687b      	ldr	r3, [r7, #4]
     9ba:	1c9a      	adds	r2, r3, #2
     9bc:	607a      	str	r2, [r7, #4]
     9be:	881b      	ldrh	r3, [r3, #0]
     9c0:	68fa      	ldr	r2, [r7, #12]
     9c2:	4413      	add	r3, r2
     9c4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:78
            sum += *d_ptr++;
     9c6:	687b      	ldr	r3, [r7, #4]
     9c8:	1c9a      	adds	r2, r3, #2
     9ca:	607a      	str	r2, [r7, #4]
     9cc:	881b      	ldrh	r3, [r3, #0]
     9ce:	68fa      	ldr	r2, [r7, #12]
     9d0:	4413      	add	r3, r2
     9d2:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:79
            sum += *d_ptr++;
     9d4:	687b      	ldr	r3, [r7, #4]
     9d6:	1c9a      	adds	r2, r3, #2
     9d8:	607a      	str	r2, [r7, #4]
     9da:	881b      	ldrh	r3, [r3, #0]
     9dc:	68fa      	ldr	r2, [r7, #12]
     9de:	4413      	add	r3, r2
     9e0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:80
            sum += *d_ptr++;
     9e2:	687b      	ldr	r3, [r7, #4]
     9e4:	1c9a      	adds	r2, r3, #2
     9e6:	607a      	str	r2, [r7, #4]
     9e8:	881b      	ldrh	r3, [r3, #0]
     9ea:	68fa      	ldr	r2, [r7, #12]
     9ec:	4413      	add	r3, r2
     9ee:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:81
            sum += *d_ptr++;
     9f0:	687b      	ldr	r3, [r7, #4]
     9f2:	1c9a      	adds	r2, r3, #2
     9f4:	607a      	str	r2, [r7, #4]
     9f6:	881b      	ldrh	r3, [r3, #0]
     9f8:	68fa      	ldr	r2, [r7, #12]
     9fa:	4413      	add	r3, r2
     9fc:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:82
            sum += *d_ptr++;
     9fe:	687b      	ldr	r3, [r7, #4]
     a00:	1c9a      	adds	r2, r3, #2
     a02:	607a      	str	r2, [r7, #4]
     a04:	881b      	ldrh	r3, [r3, #0]
     a06:	68fa      	ldr	r2, [r7, #12]
     a08:	4413      	add	r3, r2
     a0a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:83
            sum += *d_ptr++;
     a0c:	687b      	ldr	r3, [r7, #4]
     a0e:	1c9a      	adds	r2, r3, #2
     a10:	607a      	str	r2, [r7, #4]
     a12:	881b      	ldrh	r3, [r3, #0]
     a14:	68fa      	ldr	r2, [r7, #12]
     a16:	4413      	add	r3, r2
     a18:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:84
            sum += *d_ptr++;
     a1a:	687b      	ldr	r3, [r7, #4]
     a1c:	1c9a      	adds	r2, r3, #2
     a1e:	607a      	str	r2, [r7, #4]
     a20:	881b      	ldrh	r3, [r3, #0]
     a22:	68fa      	ldr	r2, [r7, #12]
     a24:	4413      	add	r3, r2
     a26:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:85
            sum += *d_ptr++;
     a28:	687b      	ldr	r3, [r7, #4]
     a2a:	1c9a      	adds	r2, r3, #2
     a2c:	607a      	str	r2, [r7, #4]
     a2e:	881b      	ldrh	r3, [r3, #0]
     a30:	68fa      	ldr	r2, [r7, #12]
     a32:	4413      	add	r3, r2
     a34:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:86
            sum += *d_ptr++;
     a36:	687b      	ldr	r3, [r7, #4]
     a38:	1c9a      	adds	r2, r3, #2
     a3a:	607a      	str	r2, [r7, #4]
     a3c:	881b      	ldrh	r3, [r3, #0]
     a3e:	68fa      	ldr	r2, [r7, #12]
     a40:	4413      	add	r3, r2
     a42:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:87
            sum += *d_ptr++;
     a44:	687b      	ldr	r3, [r7, #4]
     a46:	1c9a      	adds	r2, r3, #2
     a48:	607a      	str	r2, [r7, #4]
     a4a:	881b      	ldrh	r3, [r3, #0]
     a4c:	68fa      	ldr	r2, [r7, #12]
     a4e:	4413      	add	r3, r2
     a50:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:88
            sum += *d_ptr++;
     a52:	687b      	ldr	r3, [r7, #4]
     a54:	1c9a      	adds	r2, r3, #2
     a56:	607a      	str	r2, [r7, #4]
     a58:	881b      	ldrh	r3, [r3, #0]
     a5a:	68fa      	ldr	r2, [r7, #12]
     a5c:	4413      	add	r3, r2
     a5e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:89
            sum += *d_ptr++;
     a60:	687b      	ldr	r3, [r7, #4]
     a62:	1c9a      	adds	r2, r3, #2
     a64:	607a      	str	r2, [r7, #4]
     a66:	881b      	ldrh	r3, [r3, #0]
     a68:	68fa      	ldr	r2, [r7, #12]
     a6a:	4413      	add	r3, r2
     a6c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:90
            sum += *d_ptr++;
     a6e:	687b      	ldr	r3, [r7, #4]
     a70:	1c9a      	adds	r2, r3, #2
     a72:	607a      	str	r2, [r7, #4]
     a74:	881b      	ldrh	r3, [r3, #0]
     a76:	68fa      	ldr	r2, [r7, #12]
     a78:	4413      	add	r3, r2
     a7a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:91
            sum += *d_ptr++;
     a7c:	687b      	ldr	r3, [r7, #4]
     a7e:	1c9a      	adds	r2, r3, #2
     a80:	607a      	str	r2, [r7, #4]
     a82:	881b      	ldrh	r3, [r3, #0]
     a84:	68fa      	ldr	r2, [r7, #12]
     a86:	4413      	add	r3, r2
     a88:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:74 (discriminator 1)

static unsigned long fnet_checksum_low(unsigned long sum, int current_length, unsigned short *d_ptr)
{
        unsigned short p_byte1;
        
        while((current_length -= 32) >= 0)
     a8a:	68bb      	ldr	r3, [r7, #8]
     a8c:	3b20      	subs	r3, #32
     a8e:	60bb      	str	r3, [r7, #8]
     a90:	68bb      	ldr	r3, [r7, #8]
     a92:	2b00      	cmp	r3, #0
     a94:	da89      	bge.n	9aa <fnet_checksum_low+0xe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:93
            sum += *d_ptr++;
            sum += *d_ptr++;
            sum += *d_ptr++;
            sum += *d_ptr++;
        }
        current_length += 32;
     a96:	68bb      	ldr	r3, [r7, #8]
     a98:	3320      	adds	r3, #32
     a9a:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:95

        while((current_length -= 8) >= 0)
     a9c:	e01b      	b.n	ad6 <fnet_checksum_low+0x13a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:97
        {
            sum += *d_ptr++;
     a9e:	687b      	ldr	r3, [r7, #4]
     aa0:	1c9a      	adds	r2, r3, #2
     aa2:	607a      	str	r2, [r7, #4]
     aa4:	881b      	ldrh	r3, [r3, #0]
     aa6:	68fa      	ldr	r2, [r7, #12]
     aa8:	4413      	add	r3, r2
     aaa:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:98
            sum += *d_ptr++;
     aac:	687b      	ldr	r3, [r7, #4]
     aae:	1c9a      	adds	r2, r3, #2
     ab0:	607a      	str	r2, [r7, #4]
     ab2:	881b      	ldrh	r3, [r3, #0]
     ab4:	68fa      	ldr	r2, [r7, #12]
     ab6:	4413      	add	r3, r2
     ab8:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:99
            sum += *d_ptr++;
     aba:	687b      	ldr	r3, [r7, #4]
     abc:	1c9a      	adds	r2, r3, #2
     abe:	607a      	str	r2, [r7, #4]
     ac0:	881b      	ldrh	r3, [r3, #0]
     ac2:	68fa      	ldr	r2, [r7, #12]
     ac4:	4413      	add	r3, r2
     ac6:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:100
            sum += *d_ptr++;
     ac8:	687b      	ldr	r3, [r7, #4]
     aca:	1c9a      	adds	r2, r3, #2
     acc:	607a      	str	r2, [r7, #4]
     ace:	881b      	ldrh	r3, [r3, #0]
     ad0:	68fa      	ldr	r2, [r7, #12]
     ad2:	4413      	add	r3, r2
     ad4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:95 (discriminator 1)
            sum += *d_ptr++;
            sum += *d_ptr++;
        }
        current_length += 32;

        while((current_length -= 8) >= 0)
     ad6:	68bb      	ldr	r3, [r7, #8]
     ad8:	3b08      	subs	r3, #8
     ada:	60bb      	str	r3, [r7, #8]
     adc:	68bb      	ldr	r3, [r7, #8]
     ade:	2b00      	cmp	r3, #0
     ae0:	dadd      	bge.n	a9e <fnet_checksum_low+0x102>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:102
            sum += *d_ptr++;
            sum += *d_ptr++;
            sum += *d_ptr++;
            sum += *d_ptr++;
        }
        current_length += 8;
     ae2:	68bb      	ldr	r3, [r7, #8]
     ae4:	3308      	adds	r3, #8
     ae6:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:104

        while((current_length -= 2) >= 0)
     ae8:	e006      	b.n	af8 <fnet_checksum_low+0x15c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:105
            sum += *d_ptr++;  
     aea:	687b      	ldr	r3, [r7, #4]
     aec:	1c9a      	adds	r2, r3, #2
     aee:	607a      	str	r2, [r7, #4]
     af0:	881b      	ldrh	r3, [r3, #0]
     af2:	68fa      	ldr	r2, [r7, #12]
     af4:	4413      	add	r3, r2
     af6:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:104 (discriminator 1)
            sum += *d_ptr++;
            sum += *d_ptr++;
        }
        current_length += 8;

        while((current_length -= 2) >= 0)
     af8:	68bb      	ldr	r3, [r7, #8]
     afa:	3b02      	subs	r3, #2
     afc:	60bb      	str	r3, [r7, #8]
     afe:	68bb      	ldr	r3, [r7, #8]
     b00:	2b00      	cmp	r3, #0
     b02:	daf2      	bge.n	aea <fnet_checksum_low+0x14e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:107
            sum += *d_ptr++;  
            
        if(current_length += 2)
     b04:	68bb      	ldr	r3, [r7, #8]
     b06:	3302      	adds	r3, #2
     b08:	60bb      	str	r3, [r7, #8]
     b0a:	68bb      	ldr	r3, [r7, #8]
     b0c:	2b00      	cmp	r3, #0
     b0e:	d007      	beq.n	b20 <fnet_checksum_low+0x184>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:109
        {
            p_byte1 = (unsigned short)((*((unsigned short *)d_ptr)) & FNET_NTOHS(0xFF00));
     b10:	687b      	ldr	r3, [r7, #4]
     b12:	881b      	ldrh	r3, [r3, #0]
     b14:	b2db      	uxtb	r3, r3
     b16:	82fb      	strh	r3, [r7, #22]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:111
           
            sum += (unsigned short)p_byte1;
     b18:	8afb      	ldrh	r3, [r7, #22]
     b1a:	68fa      	ldr	r2, [r7, #12]
     b1c:	4413      	add	r3, r2
     b1e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:113
        }
        return sum;
     b20:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:114
} 
     b22:	4618      	mov	r0, r3
     b24:	371c      	adds	r7, #28
     b26:	46bd      	mov	sp, r7
     b28:	f85d 7b04 	ldr.w	r7, [sp], #4
     b2c:	4770      	bx	lr
     b2e:	bf00      	nop

00000b30 <fnet_checksum_nb>:
fnet_checksum_nb():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:122
extern unsigned long fnet_checksum_low(unsigned long sum, int current_length, unsigned short *d_ptr);

#endif

static unsigned long fnet_checksum_nb(fnet_netbuf_t * nb, int len)
{
     b30:	b580      	push	{r7, lr}
     b32:	b088      	sub	sp, #32
     b34:	af00      	add	r7, sp, #0
     b36:	6078      	str	r0, [r7, #4]
     b38:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:126
    fnet_netbuf_t   *tmp_nb;
    unsigned short  *d_ptr;
    unsigned short  p_byte2;
    unsigned long   sum = 0;
     b3a:	2300      	movs	r3, #0
     b3c:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:129
    int             current_length;

    tmp_nb = nb;
     b3e:	687b      	ldr	r3, [r7, #4]
     b40:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:131

    d_ptr = tmp_nb->data_ptr;        /* Store the data pointer of the 1st net_buf.*/
     b42:	69fb      	ldr	r3, [r7, #28]
     b44:	68db      	ldr	r3, [r3, #12]
     b46:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:133

    if(nb->length > len)
     b48:	687b      	ldr	r3, [r7, #4]
     b4a:	691a      	ldr	r2, [r3, #16]
     b4c:	683b      	ldr	r3, [r7, #0]
     b4e:	429a      	cmp	r2, r3
     b50:	d902      	bls.n	b58 <fnet_checksum_nb+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:134
        current_length = len;        /* If no more net_bufs to proceed.*/
     b52:	683b      	ldr	r3, [r7, #0]
     b54:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:138
    else
        current_length = (int)nb->length; /* Or full first net_buf.*/

    while(len)
     b56:	e042      	b.n	bde <fnet_checksum_nb+0xae>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:136
    d_ptr = tmp_nb->data_ptr;        /* Store the data pointer of the 1st net_buf.*/

    if(nb->length > len)
        current_length = len;        /* If no more net_bufs to proceed.*/
    else
        current_length = (int)nb->length; /* Or full first net_buf.*/
     b58:	687b      	ldr	r3, [r7, #4]
     b5a:	691b      	ldr	r3, [r3, #16]
     b5c:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:138

    while(len)
     b5e:	e03e      	b.n	bde <fnet_checksum_nb+0xae>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:140
    {
        len -= current_length;       /* current_length bytes should be proceeded.*/
     b60:	683a      	ldr	r2, [r7, #0]
     b62:	693b      	ldr	r3, [r7, #16]
     b64:	1ad3      	subs	r3, r2, r3
     b66:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:142

        sum = fnet_checksum_low(sum, current_length, d_ptr); 
     b68:	6978      	ldr	r0, [r7, #20]
     b6a:	6939      	ldr	r1, [r7, #16]
     b6c:	69ba      	ldr	r2, [r7, #24]
     b6e:	f7ff ff15 	bl	99c <fnet_checksum_low>
     b72:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:145
        
        
        tmp_nb = tmp_nb->next;
     b74:	69fb      	ldr	r3, [r7, #28]
     b76:	681b      	ldr	r3, [r3, #0]
     b78:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:146
        d_ptr = tmp_nb->data_ptr;
     b7a:	69fb      	ldr	r3, [r7, #28]
     b7c:	68db      	ldr	r3, [r3, #12]
     b7e:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:148
        
        if(current_length & 1)
     b80:	693b      	ldr	r3, [r7, #16]
     b82:	f003 0301 	and.w	r3, r3, #1
     b86:	2b00      	cmp	r3, #0
     b88:	d01a      	beq.n	bc0 <fnet_checksum_nb+0x90>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:150
        {
            if(len)
     b8a:	683b      	ldr	r3, [r7, #0]
     b8c:	2b00      	cmp	r3, #0
     b8e:	d014      	beq.n	bba <fnet_checksum_nb+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:153
            {
                /* If previous fragment was odd, add in first byte in lower 8 bits. */
                p_byte2 = fnet_ntohs((unsigned short)((*((unsigned char *)d_ptr)) & 0x00FF));
     b90:	69bb      	ldr	r3, [r7, #24]
     b92:	781b      	ldrb	r3, [r3, #0]
     b94:	4618      	mov	r0, r3
     b96:	f00e fcc3 	bl	f520 <fnet_htons>
     b9a:	4603      	mov	r3, r0
     b9c:	81fb      	strh	r3, [r7, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:154
                d_ptr = (unsigned short *)((unsigned char *)d_ptr + 1);
     b9e:	69bb      	ldr	r3, [r7, #24]
     ba0:	3301      	adds	r3, #1
     ba2:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:156
                
                sum += (unsigned short)p_byte2;
     ba4:	89fb      	ldrh	r3, [r7, #14]
     ba6:	697a      	ldr	r2, [r7, #20]
     ba8:	4413      	add	r3, r2
     baa:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:157
                len--;
     bac:	683b      	ldr	r3, [r7, #0]
     bae:	3b01      	subs	r3, #1
     bb0:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:158
                current_length = -1;
     bb2:	f04f 33ff 	mov.w	r3, #4294967295
     bb6:	613b      	str	r3, [r7, #16]
     bb8:	e004      	b.n	bc4 <fnet_checksum_nb+0x94>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:161
            }
            else
                current_length = 0;
     bba:	2300      	movs	r3, #0
     bbc:	613b      	str	r3, [r7, #16]
     bbe:	e001      	b.n	bc4 <fnet_checksum_nb+0x94>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:165
        }
        else
        {
            current_length = 0;
     bc0:	2300      	movs	r3, #0
     bc2:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:169
        }
          

        if(tmp_nb->length > len)
     bc4:	69fb      	ldr	r3, [r7, #28]
     bc6:	691a      	ldr	r2, [r3, #16]
     bc8:	683b      	ldr	r3, [r7, #0]
     bca:	429a      	cmp	r2, r3
     bcc:	d902      	bls.n	bd4 <fnet_checksum_nb+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:170
            current_length = len;
     bce:	683b      	ldr	r3, [r7, #0]
     bd0:	613b      	str	r3, [r7, #16]
     bd2:	e004      	b.n	bde <fnet_checksum_nb+0xae>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:172
        else
            current_length += tmp_nb->length;
     bd4:	69fb      	ldr	r3, [r7, #28]
     bd6:	691a      	ldr	r2, [r3, #16]
     bd8:	693b      	ldr	r3, [r7, #16]
     bda:	4413      	add	r3, r2
     bdc:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:138 (discriminator 1)
    if(nb->length > len)
        current_length = len;        /* If no more net_bufs to proceed.*/
    else
        current_length = (int)nb->length; /* Or full first net_buf.*/

    while(len)
     bde:	683b      	ldr	r3, [r7, #0]
     be0:	2b00      	cmp	r3, #0
     be2:	d1bd      	bne.n	b60 <fnet_checksum_nb+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:175
            current_length = len;
        else
            current_length += tmp_nb->length;
    }

    return sum;
     be4:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:176
}
     be6:	4618      	mov	r0, r3
     be8:	3720      	adds	r7, #32
     bea:	46bd      	mov	sp, r7
     bec:	bd80      	pop	{r7, pc}
     bee:	bf00      	nop

00000bf0 <fnet_checksum>:
fnet_checksum():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:185
*
* DESCRIPTION: Calculates one's complement (Internet) checksum.
*
*************************************************************************/
unsigned short fnet_checksum(fnet_netbuf_t * nb, int len)
{
     bf0:	b580      	push	{r7, lr}
     bf2:	b084      	sub	sp, #16
     bf4:	af00      	add	r7, sp, #0
     bf6:	6078      	str	r0, [r7, #4]
     bf8:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:186
    unsigned long sum = fnet_checksum_nb(nb, len);
     bfa:	6878      	ldr	r0, [r7, #4]
     bfc:	6839      	ldr	r1, [r7, #0]
     bfe:	f7ff ff97 	bl	b30 <fnet_checksum_nb>
     c02:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:190

    /* Add potential carries - no branches. */

    sum = (sum >> 16) + (sum & 0xffff); /* Add in accumulated carries */
     c04:	68fb      	ldr	r3, [r7, #12]
     c06:	0c1a      	lsrs	r2, r3, #16
     c08:	68fb      	ldr	r3, [r7, #12]
     c0a:	b29b      	uxth	r3, r3
     c0c:	4413      	add	r3, r2
     c0e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:191
    sum += sum >> 16;                   /* Add potential last carry   */
     c10:	68fb      	ldr	r3, [r7, #12]
     c12:	0c1b      	lsrs	r3, r3, #16
     c14:	68fa      	ldr	r2, [r7, #12]
     c16:	4413      	add	r3, r2
     c18:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:193

    return (unsigned short)(0xffff & ~sum);
     c1a:	68fb      	ldr	r3, [r7, #12]
     c1c:	b29b      	uxth	r3, r3
     c1e:	43db      	mvns	r3, r3
     c20:	b29b      	uxth	r3, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:194
}
     c22:	4618      	mov	r0, r3
     c24:	3710      	adds	r7, #16
     c26:	46bd      	mov	sp, r7
     c28:	bd80      	pop	{r7, pc}
     c2a:	bf00      	nop

00000c2c <fnet_checksum_buf>:
fnet_checksum_buf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:204
* DESCRIPTION: Calculates one's complement (Internet) checksum 
*              for a buffer.
*
*************************************************************************/
unsigned short fnet_checksum_buf(char *buf, int buf_len)
{
     c2c:	b580      	push	{r7, lr}
     c2e:	b084      	sub	sp, #16
     c30:	af00      	add	r7, sp, #0
     c32:	6078      	str	r0, [r7, #4]
     c34:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:205
    unsigned long sum = fnet_checksum_low(0, buf_len, (unsigned short *)buf); 
     c36:	2000      	movs	r0, #0
     c38:	6839      	ldr	r1, [r7, #0]
     c3a:	687a      	ldr	r2, [r7, #4]
     c3c:	f7ff feae 	bl	99c <fnet_checksum_low>
     c40:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:207

    sum = (sum >> 16) + (sum & 0xffff); /* Add in accumulated carries */
     c42:	68fb      	ldr	r3, [r7, #12]
     c44:	0c1a      	lsrs	r2, r3, #16
     c46:	68fb      	ldr	r3, [r7, #12]
     c48:	b29b      	uxth	r3, r3
     c4a:	4413      	add	r3, r2
     c4c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:208
    sum += sum >> 16;                   /* Add potential last carry   */
     c4e:	68fb      	ldr	r3, [r7, #12]
     c50:	0c1b      	lsrs	r3, r3, #16
     c52:	68fa      	ldr	r2, [r7, #12]
     c54:	4413      	add	r3, r2
     c56:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:210

    return (unsigned short)(0xffff & ~sum);
     c58:	68fb      	ldr	r3, [r7, #12]
     c5a:	b29b      	uxth	r3, r3
     c5c:	43db      	mvns	r3, r3
     c5e:	b29b      	uxth	r3, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:211
}
     c60:	4618      	mov	r0, r3
     c62:	3710      	adds	r7, #16
     c64:	46bd      	mov	sp, r7
     c66:	bd80      	pop	{r7, pc}

00000c68 <fnet_checksum_pseudo_buf>:
fnet_checksum_pseudo_buf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:221
* DESCRIPTION: Calculates one's complement (Internet) checksum of 
*              the IP pseudo header, for a buffer.
*
*************************************************************************/
unsigned short fnet_checksum_pseudo_buf(char *buf, unsigned short buf_len, unsigned short protocol, char *ip_src, char *ip_dest, int addr_size )
{
     c68:	b590      	push	{r4, r7, lr}
     c6a:	b087      	sub	sp, #28
     c6c:	af00      	add	r7, sp, #0
     c6e:	60f8      	str	r0, [r7, #12]
     c70:	607b      	str	r3, [r7, #4]
     c72:	460b      	mov	r3, r1
     c74:	817b      	strh	r3, [r7, #10]
     c76:	4613      	mov	r3, r2
     c78:	813b      	strh	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:222
    unsigned long sum = fnet_checksum_low(0, buf_len, (unsigned short *)buf); 
     c7a:	897b      	ldrh	r3, [r7, #10]
     c7c:	2000      	movs	r0, #0
     c7e:	4619      	mov	r1, r3
     c80:	68fa      	ldr	r2, [r7, #12]
     c82:	f7ff fe8b 	bl	99c <fnet_checksum_low>
     c86:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:223
    sum += protocol + fnet_htons(buf_len);
     c88:	893c      	ldrh	r4, [r7, #8]
     c8a:	897b      	ldrh	r3, [r7, #10]
     c8c:	4618      	mov	r0, r3
     c8e:	f00e fc47 	bl	f520 <fnet_htons>
     c92:	4603      	mov	r3, r0
     c94:	4423      	add	r3, r4
     c96:	697a      	ldr	r2, [r7, #20]
     c98:	4413      	add	r3, r2
     c9a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:224
    sum = fnet_checksum_low(sum, addr_size, (unsigned short *)ip_src); 
     c9c:	6978      	ldr	r0, [r7, #20]
     c9e:	6af9      	ldr	r1, [r7, #44]	; 0x2c
     ca0:	687a      	ldr	r2, [r7, #4]
     ca2:	f7ff fe7b 	bl	99c <fnet_checksum_low>
     ca6:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:225
    sum = fnet_checksum_low(sum, addr_size, (unsigned short *)ip_dest);
     ca8:	6978      	ldr	r0, [r7, #20]
     caa:	6af9      	ldr	r1, [r7, #44]	; 0x2c
     cac:	6aba      	ldr	r2, [r7, #40]	; 0x28
     cae:	f7ff fe75 	bl	99c <fnet_checksum_low>
     cb2:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:227

    sum = (sum >> 16) + (sum & 0xffff); /* Add in accumulated carries */
     cb4:	697b      	ldr	r3, [r7, #20]
     cb6:	0c1a      	lsrs	r2, r3, #16
     cb8:	697b      	ldr	r3, [r7, #20]
     cba:	b29b      	uxth	r3, r3
     cbc:	4413      	add	r3, r2
     cbe:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:228
    sum += sum >> 16;                   /* Add potential last carry   */
     cc0:	697b      	ldr	r3, [r7, #20]
     cc2:	0c1b      	lsrs	r3, r3, #16
     cc4:	697a      	ldr	r2, [r7, #20]
     cc6:	4413      	add	r3, r2
     cc8:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:230

    return (unsigned short)(0xffff & ~sum);
     cca:	697b      	ldr	r3, [r7, #20]
     ccc:	b29b      	uxth	r3, r3
     cce:	43db      	mvns	r3, r3
     cd0:	b29b      	uxth	r3, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:231
}
     cd2:	4618      	mov	r0, r3
     cd4:	371c      	adds	r7, #28
     cd6:	46bd      	mov	sp, r7
     cd8:	bd90      	pop	{r4, r7, pc}
     cda:	bf00      	nop

00000cdc <fnet_checksum_pseudo_start>:
fnet_checksum_pseudo_start():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:242
*              the IP pseudo header
*
*************************************************************************/
unsigned short fnet_checksum_pseudo_start( fnet_netbuf_t *nb,
                                           unsigned short protocol, unsigned short protocol_len )
{
     cdc:	b590      	push	{r4, r7, lr}
     cde:	b085      	sub	sp, #20
     ce0:	af00      	add	r7, sp, #0
     ce2:	6078      	str	r0, [r7, #4]
     ce4:	4613      	mov	r3, r2
     ce6:	460a      	mov	r2, r1
     ce8:	807a      	strh	r2, [r7, #2]
     cea:	803b      	strh	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:243
    unsigned long sum = fnet_checksum_nb(nb, protocol_len);
     cec:	883b      	ldrh	r3, [r7, #0]
     cee:	6878      	ldr	r0, [r7, #4]
     cf0:	4619      	mov	r1, r3
     cf2:	f7ff ff1d 	bl	b30 <fnet_checksum_nb>
     cf6:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:244
    sum += protocol + fnet_htons(protocol_len);
     cf8:	887c      	ldrh	r4, [r7, #2]
     cfa:	883b      	ldrh	r3, [r7, #0]
     cfc:	4618      	mov	r0, r3
     cfe:	f00e fc0f 	bl	f520 <fnet_htons>
     d02:	4603      	mov	r3, r0
     d04:	4423      	add	r3, r4
     d06:	68fa      	ldr	r2, [r7, #12]
     d08:	4413      	add	r3, r2
     d0a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:246

    sum = (sum >> 16) + (sum & 0xffff); /* Add in accumulated carries */
     d0c:	68fb      	ldr	r3, [r7, #12]
     d0e:	0c1a      	lsrs	r2, r3, #16
     d10:	68fb      	ldr	r3, [r7, #12]
     d12:	b29b      	uxth	r3, r3
     d14:	4413      	add	r3, r2
     d16:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:247
    sum += sum >> 16;                   /* Add potential last carry   */
     d18:	68fb      	ldr	r3, [r7, #12]
     d1a:	0c1b      	lsrs	r3, r3, #16
     d1c:	68fa      	ldr	r2, [r7, #12]
     d1e:	4413      	add	r3, r2
     d20:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:249

    return (unsigned short)(sum);
     d22:	68fb      	ldr	r3, [r7, #12]
     d24:	b29b      	uxth	r3, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:250
}
     d26:	4618      	mov	r0, r3
     d28:	3714      	adds	r7, #20
     d2a:	46bd      	mov	sp, r7
     d2c:	bd90      	pop	{r4, r7, pc}
     d2e:	bf00      	nop

00000d30 <fnet_checksum_pseudo_end>:
fnet_checksum_pseudo_end():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:260
* DESCRIPTION: Calculates  one's complement (Internet) checksum of 
*              the IP pseudo header
*
*************************************************************************/
unsigned short fnet_checksum_pseudo_end( unsigned short sum_s, char *ip_src, char *ip_dest, int addr_size )
{
     d30:	b580      	push	{r7, lr}
     d32:	b086      	sub	sp, #24
     d34:	af00      	add	r7, sp, #0
     d36:	60b9      	str	r1, [r7, #8]
     d38:	607a      	str	r2, [r7, #4]
     d3a:	603b      	str	r3, [r7, #0]
     d3c:	4603      	mov	r3, r0
     d3e:	81fb      	strh	r3, [r7, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:261
    unsigned long sum = 0;
     d40:	2300      	movs	r3, #0
     d42:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:263
    
    sum = sum_s;
     d44:	89fb      	ldrh	r3, [r7, #14]
     d46:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:265

    sum = fnet_checksum_low(sum, addr_size, (unsigned short *)ip_src); 
     d48:	6978      	ldr	r0, [r7, #20]
     d4a:	6839      	ldr	r1, [r7, #0]
     d4c:	68ba      	ldr	r2, [r7, #8]
     d4e:	f7ff fe25 	bl	99c <fnet_checksum_low>
     d52:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:266
    sum = fnet_checksum_low(sum, addr_size, (unsigned short *)ip_dest);
     d54:	6978      	ldr	r0, [r7, #20]
     d56:	6839      	ldr	r1, [r7, #0]
     d58:	687a      	ldr	r2, [r7, #4]
     d5a:	f7ff fe1f 	bl	99c <fnet_checksum_low>
     d5e:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:268

    sum = (sum >> 16) + (sum & 0xffff); /* Add in accumulated carries */
     d60:	697b      	ldr	r3, [r7, #20]
     d62:	0c1a      	lsrs	r2, r3, #16
     d64:	697b      	ldr	r3, [r7, #20]
     d66:	b29b      	uxth	r3, r3
     d68:	4413      	add	r3, r2
     d6a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:269
    sum += sum >> 16;                   /* Add potential last carry   */
     d6c:	697b      	ldr	r3, [r7, #20]
     d6e:	0c1b      	lsrs	r3, r3, #16
     d70:	697a      	ldr	r2, [r7, #20]
     d72:	4413      	add	r3, r2
     d74:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:271

    return (unsigned short)(0xffff & ~sum);
     d76:	697b      	ldr	r3, [r7, #20]
     d78:	b29b      	uxth	r3, r3
     d7a:	43db      	mvns	r3, r3
     d7c:	b29b      	uxth	r3, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_checksum.c:272
}
     d7e:	4618      	mov	r0, r3
     d80:	3718      	adds	r7, #24
     d82:	46bd      	mov	sp, r7
     d84:	bd80      	pop	{r7, pc}
     d86:	bf00      	nop

00000d88 <fnet_error_get>:
fnet_error_get():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_error.c:57
* NAME: fnet_error_get
*
* DESCRIPTION: This function returns the last error that occurred. 
*************************************************************************/
int fnet_error_get( void )
{
     d88:	b480      	push	{r7}
     d8a:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_error.c:58
    return (FNET_ERR_NUMBER);
     d8c:	4b03      	ldr	r3, [pc, #12]	; (d9c <fnet_error_get+0x14>)
     d8e:	681b      	ldr	r3, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_error.c:59
}
     d90:	4618      	mov	r0, r3
     d92:	46bd      	mov	sp, r7
     d94:	f85d 7b04 	ldr.w	r7, [sp], #4
     d98:	4770      	bx	lr
     d9a:	bf00      	nop
     d9c:	10000738 	.word	0x10000738

00000da0 <fnet_error_set>:
fnet_error_set():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_error.c:68
*
* DESCRIPTION: This function sets the error code that can 
*              be retrieved through the fnet_error_get(). 
*************************************************************************/
void fnet_error_set( int error )
{
     da0:	b480      	push	{r7}
     da2:	b083      	sub	sp, #12
     da4:	af00      	add	r7, sp, #0
     da6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_error.c:69
    FNET_ERR_NUMBER = error;
     da8:	4b03      	ldr	r3, [pc, #12]	; (db8 <fnet_error_set+0x18>)
     daa:	687a      	ldr	r2, [r7, #4]
     dac:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_error.c:70
}
     dae:	370c      	adds	r7, #12
     db0:	46bd      	mov	sp, r7
     db2:	f85d 7b04 	ldr.w	r7, [sp], #4
     db6:	4770      	bx	lr
     db8:	10000738 	.word	0x10000738

00000dbc <fnet_mac_to_str>:
fnet_mac_to_str():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:74
* NAME: fnet_mac_to_str
*
* DESCRIPTION: Converts MAC address to an null-terminated string.
*************************************************************************/
void fnet_mac_to_str( fnet_mac_addr_t addr, char *str_mac )
{
     dbc:	b5b0      	push	{r4, r5, r7, lr}
     dbe:	b088      	sub	sp, #32
     dc0:	af04      	add	r7, sp, #16
     dc2:	6078      	str	r0, [r7, #4]
     dc4:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:77
    unsigned char *p;

    p = (unsigned char *)addr;
     dc6:	687b      	ldr	r3, [r7, #4]
     dc8:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:78
    fnet_sprintf(str_mac, "%02X:%02X:%02X:%02X:%02X:%02X", p[0], p[1], p[2],
     dca:	68fb      	ldr	r3, [r7, #12]
     dcc:	781b      	ldrb	r3, [r3, #0]
     dce:	461a      	mov	r2, r3
     dd0:	68fb      	ldr	r3, [r7, #12]
     dd2:	3301      	adds	r3, #1
     dd4:	781b      	ldrb	r3, [r3, #0]
     dd6:	68f9      	ldr	r1, [r7, #12]
     dd8:	3102      	adds	r1, #2
     dda:	7809      	ldrb	r1, [r1, #0]
     ddc:	460d      	mov	r5, r1
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:79
                        p[3], p[4], p[5]);
     dde:	68f9      	ldr	r1, [r7, #12]
     de0:	3103      	adds	r1, #3
     de2:	7809      	ldrb	r1, [r1, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:78
void fnet_mac_to_str( fnet_mac_addr_t addr, char *str_mac )
{
    unsigned char *p;

    p = (unsigned char *)addr;
    fnet_sprintf(str_mac, "%02X:%02X:%02X:%02X:%02X:%02X", p[0], p[1], p[2],
     de4:	460c      	mov	r4, r1
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:79
                        p[3], p[4], p[5]);
     de6:	68f9      	ldr	r1, [r7, #12]
     de8:	3104      	adds	r1, #4
     dea:	7809      	ldrb	r1, [r1, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:78
void fnet_mac_to_str( fnet_mac_addr_t addr, char *str_mac )
{
    unsigned char *p;

    p = (unsigned char *)addr;
    fnet_sprintf(str_mac, "%02X:%02X:%02X:%02X:%02X:%02X", p[0], p[1], p[2],
     dec:	4608      	mov	r0, r1
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:79
                        p[3], p[4], p[5]);
     dee:	68f9      	ldr	r1, [r7, #12]
     df0:	3105      	adds	r1, #5
     df2:	7809      	ldrb	r1, [r1, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:78
void fnet_mac_to_str( fnet_mac_addr_t addr, char *str_mac )
{
    unsigned char *p;

    p = (unsigned char *)addr;
    fnet_sprintf(str_mac, "%02X:%02X:%02X:%02X:%02X:%02X", p[0], p[1], p[2],
     df4:	9500      	str	r5, [sp, #0]
     df6:	9401      	str	r4, [sp, #4]
     df8:	9002      	str	r0, [sp, #8]
     dfa:	9103      	str	r1, [sp, #12]
     dfc:	6838      	ldr	r0, [r7, #0]
     dfe:	4903      	ldr	r1, [pc, #12]	; (e0c <fnet_mac_to_str+0x50>)
     e00:	f00b f968 	bl	c0d4 <fnet_sprintf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:80
                        p[3], p[4], p[5]);
}
     e04:	3710      	adds	r7, #16
     e06:	46bd      	mov	sp, r7
     e08:	bdb0      	pop	{r4, r5, r7, pc}
     e0a:	bf00      	nop
     e0c:	00013f08 	.word	0x00013f08

00000e10 <fnet_str_to_mac>:
fnet_str_to_mac():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:88
* NAME: fnet_str_to_mac
*
* DESCRIPTION: This function interprets the character string into MAC addr.
*************************************************************************/
int fnet_str_to_mac( char *str_mac, fnet_mac_addr_t addr )
{
     e10:	b480      	push	{r7}
     e12:	b08d      	sub	sp, #52	; 0x34
     e14:	af00      	add	r7, sp, #0
     e16:	6078      	str	r0, [r7, #4]
     e18:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:91
    unsigned long val;
    int c;
    unsigned long octet[6], *octetptr = octet;
     e1a:	f107 0308 	add.w	r3, r7, #8
     e1e:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:96
    int i;

    while(1)
    {
        val = 0;
     e20:	2300      	movs	r3, #0
     e22:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:98

        while((c = *str_mac) != 0)
     e24:	e031      	b.n	e8a <fnet_str_to_mac+0x7a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:100
        {
            if((c >= '0') && (c <= '9'))
     e26:	6a3b      	ldr	r3, [r7, #32]
     e28:	2b2f      	cmp	r3, #47	; 0x2f
     e2a:	dd0c      	ble.n	e46 <fnet_str_to_mac+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:100 (discriminator 1)
     e2c:	6a3b      	ldr	r3, [r7, #32]
     e2e:	2b39      	cmp	r3, #57	; 0x39
     e30:	dc09      	bgt.n	e46 <fnet_str_to_mac+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:102
            {
                val = (val * 16) + (c - '0');
     e32:	6afb      	ldr	r3, [r7, #44]	; 0x2c
     e34:	011a      	lsls	r2, r3, #4
     e36:	6a3b      	ldr	r3, [r7, #32]
     e38:	4413      	add	r3, r2
     e3a:	3b30      	subs	r3, #48	; 0x30
     e3c:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:103
                str_mac++;
     e3e:	687b      	ldr	r3, [r7, #4]
     e40:	3301      	adds	r3, #1
     e42:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:104
                continue;
     e44:	e021      	b.n	e8a <fnet_str_to_mac+0x7a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:106
            }
            else if(((c >= 'a') && (c <= 'f')) || ((c >= 'A') && (c <= 'F')))
     e46:	6a3b      	ldr	r3, [r7, #32]
     e48:	2b60      	cmp	r3, #96	; 0x60
     e4a:	dd02      	ble.n	e52 <fnet_str_to_mac+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:106 (discriminator 1)
     e4c:	6a3b      	ldr	r3, [r7, #32]
     e4e:	2b66      	cmp	r3, #102	; 0x66
     e50:	dd05      	ble.n	e5e <fnet_str_to_mac+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:106 (discriminator 2)
     e52:	6a3b      	ldr	r3, [r7, #32]
     e54:	2b40      	cmp	r3, #64	; 0x40
     e56:	dd17      	ble.n	e88 <fnet_str_to_mac+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:106 (discriminator 1)
     e58:	6a3b      	ldr	r3, [r7, #32]
     e5a:	2b46      	cmp	r3, #70	; 0x46
     e5c:	dc14      	bgt.n	e88 <fnet_str_to_mac+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:108
            {
                val = (val << 4) + (c + 10 - (((c >= 'a') && (c <= 'f')) ? 'a' : 'A'));
     e5e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
     e60:	011a      	lsls	r2, r3, #4
     e62:	6a3b      	ldr	r3, [r7, #32]
     e64:	f103 010a 	add.w	r1, r3, #10
     e68:	6a3b      	ldr	r3, [r7, #32]
     e6a:	2b60      	cmp	r3, #96	; 0x60
     e6c:	dd04      	ble.n	e78 <fnet_str_to_mac+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:108 (discriminator 1)
     e6e:	6a3b      	ldr	r3, [r7, #32]
     e70:	2b66      	cmp	r3, #102	; 0x66
     e72:	dc01      	bgt.n	e78 <fnet_str_to_mac+0x68>
     e74:	2361      	movs	r3, #97	; 0x61
     e76:	e000      	b.n	e7a <fnet_str_to_mac+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:108 (discriminator 2)
     e78:	2341      	movs	r3, #65	; 0x41
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:108 (discriminator 3)
     e7a:	1acb      	subs	r3, r1, r3
     e7c:	4413      	add	r3, r2
     e7e:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:109 (discriminator 3)
                str_mac++;
     e80:	687b      	ldr	r3, [r7, #4]
     e82:	3301      	adds	r3, #1
     e84:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:110 (discriminator 3)
                continue;
     e86:	e000      	b.n	e8a <fnet_str_to_mac+0x7a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:113
            }

            break;
     e88:	e006      	b.n	e98 <fnet_str_to_mac+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:98 (discriminator 1)

    while(1)
    {
        val = 0;

        while((c = *str_mac) != 0)
     e8a:	687b      	ldr	r3, [r7, #4]
     e8c:	781b      	ldrb	r3, [r3, #0]
     e8e:	b25b      	sxtb	r3, r3
     e90:	623b      	str	r3, [r7, #32]
     e92:	6a3b      	ldr	r3, [r7, #32]
     e94:	2b00      	cmp	r3, #0
     e96:	d1c6      	bne.n	e26 <fnet_str_to_mac+0x16>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:116
            }

            break;
        }

        if(*str_mac == ':')
     e98:	687b      	ldr	r3, [r7, #4]
     e9a:	781b      	ldrb	r3, [r3, #0]
     e9c:	b25b      	sxtb	r3, r3
     e9e:	2b3a      	cmp	r3, #58	; 0x3a
     ea0:	d10f      	bne.n	ec2 <fnet_str_to_mac+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:118
        {
            *octetptr++ = val;
     ea2:	6abb      	ldr	r3, [r7, #40]	; 0x28
     ea4:	1d1a      	adds	r2, r3, #4
     ea6:	62ba      	str	r2, [r7, #40]	; 0x28
     ea8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
     eaa:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:119
            str_mac++;
     eac:	687b      	ldr	r3, [r7, #4]
     eae:	3301      	adds	r3, #1
     eb0:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:121

            if(octetptr >= octet + 6)
     eb2:	f107 0308 	add.w	r3, r7, #8
     eb6:	3318      	adds	r3, #24
     eb8:	6aba      	ldr	r2, [r7, #40]	; 0x28
     eba:	429a      	cmp	r2, r3
     ebc:	d300      	bcc.n	ec0 <fnet_str_to_mac+0xb0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:122
                goto ERROR;
     ebe:	e030      	b.n	f22 <fnet_str_to_mac+0x112>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:128

            continue;
        }

        break;
    }
     ec0:	e7ae      	b.n	e20 <fnet_str_to_mac+0x10>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:127
                goto ERROR;

            continue;
        }

        break;
     ec2:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:130
    }
    /* Check for trailing characters. */
    if(*str_mac && !(*str_mac == ' '))
     ec4:	687b      	ldr	r3, [r7, #4]
     ec6:	781b      	ldrb	r3, [r3, #0]
     ec8:	2b00      	cmp	r3, #0
     eca:	d005      	beq.n	ed8 <fnet_str_to_mac+0xc8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:130 (discriminator 1)
     ecc:	687b      	ldr	r3, [r7, #4]
     ece:	781b      	ldrb	r3, [r3, #0]
     ed0:	b25b      	sxtb	r3, r3
     ed2:	2b20      	cmp	r3, #32
     ed4:	d000      	beq.n	ed8 <fnet_str_to_mac+0xc8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:131
        goto ERROR;
     ed6:	e024      	b.n	f22 <fnet_str_to_mac+0x112>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:133

    *octetptr++ = val;
     ed8:	6abb      	ldr	r3, [r7, #40]	; 0x28
     eda:	1d1a      	adds	r2, r3, #4
     edc:	62ba      	str	r2, [r7, #40]	; 0x28
     ede:	6afa      	ldr	r2, [r7, #44]	; 0x2c
     ee0:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:135

    if((octetptr - octet) == 6)
     ee2:	6aba      	ldr	r2, [r7, #40]	; 0x28
     ee4:	f107 0308 	add.w	r3, r7, #8
     ee8:	1ad3      	subs	r3, r2, r3
     eea:	3b18      	subs	r3, #24
     eec:	2b03      	cmp	r3, #3
     eee:	d815      	bhi.n	f1c <fnet_str_to_mac+0x10c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:137
    {
        for (i = 0; i < 6; i++)
     ef0:	2300      	movs	r3, #0
     ef2:	627b      	str	r3, [r7, #36]	; 0x24
     ef4:	e00e      	b.n	f14 <fnet_str_to_mac+0x104>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:138 (discriminator 2)
          addr[i] = (unsigned char)octet[i];
     ef6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     ef8:	683a      	ldr	r2, [r7, #0]
     efa:	441a      	add	r2, r3
     efc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     efe:	009b      	lsls	r3, r3, #2
     f00:	f107 0130 	add.w	r1, r7, #48	; 0x30
     f04:	440b      	add	r3, r1
     f06:	f853 3c28 	ldr.w	r3, [r3, #-40]
     f0a:	b2db      	uxtb	r3, r3
     f0c:	7013      	strb	r3, [r2, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:137 (discriminator 2)

    *octetptr++ = val;

    if((octetptr - octet) == 6)
    {
        for (i = 0; i < 6; i++)
     f0e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     f10:	3301      	adds	r3, #1
     f12:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:137 (discriminator 1)
     f14:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     f16:	2b05      	cmp	r3, #5
     f18:	dded      	ble.n	ef6 <fnet_str_to_mac+0xe6>
     f1a:	e000      	b.n	f1e <fnet_str_to_mac+0x10e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:141
          addr[i] = (unsigned char)octet[i];
    }
    else
        goto ERROR;
     f1c:	e001      	b.n	f22 <fnet_str_to_mac+0x112>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:143

    return (FNET_OK);
     f1e:	2300      	movs	r3, #0
     f20:	e001      	b.n	f26 <fnet_str_to_mac+0x116>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:145
ERROR:
    return (FNET_ERR);
     f22:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:146
}
     f26:	4618      	mov	r0, r3
     f28:	3734      	adds	r7, #52	; 0x34
     f2a:	46bd      	mov	sp, r7
     f2c:	f85d 7b04 	ldr.w	r7, [sp], #4
     f30:	4770      	bx	lr
     f32:	bf00      	nop

00000f34 <fnet_eth_prot_input>:
fnet_eth_prot_input():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:225
* NAME: fnet_eth_prot_input
*
* DESCRIPTION: Eth. network-layer input function.
*************************************************************************/
void fnet_eth_prot_input( fnet_netif_t *netif, fnet_netbuf_t *nb, unsigned short protocol )
{
     f34:	b580      	push	{r7, lr}
     f36:	b086      	sub	sp, #24
     f38:	af00      	add	r7, sp, #0
     f3a:	60f8      	str	r0, [r7, #12]
     f3c:	60b9      	str	r1, [r7, #8]
     f3e:	4613      	mov	r3, r2
     f40:	80fb      	strh	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:228
    int i;
    
    if(netif && nb)
     f42:	68fb      	ldr	r3, [r7, #12]
     f44:	2b00      	cmp	r3, #0
     f46:	d021      	beq.n	f8c <fnet_eth_prot_input+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:228 (discriminator 1)
     f48:	68bb      	ldr	r3, [r7, #8]
     f4a:	2b00      	cmp	r3, #0
     f4c:	d01e      	beq.n	f8c <fnet_eth_prot_input+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:231
    {
        /* Find Network-layer protocol.*/
        for(i=0; i<FNET_ETH_PROT_IF_LIST_SIZE; i++)
     f4e:	2300      	movs	r3, #0
     f50:	617b      	str	r3, [r7, #20]
     f52:	e012      	b.n	f7a <fnet_eth_prot_input+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:233
        {
            if( protocol == fnet_eth_prot_if_list[i].protocol)
     f54:	4b0f      	ldr	r3, [pc, #60]	; (f94 <fnet_eth_prot_input+0x60>)
     f56:	697a      	ldr	r2, [r7, #20]
     f58:	f833 3032 	ldrh.w	r3, [r3, r2, lsl #3]
     f5c:	88fa      	ldrh	r2, [r7, #6]
     f5e:	429a      	cmp	r2, r3
     f60:	d108      	bne.n	f74 <fnet_eth_prot_input+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:236
            {
                /* Call the protocol-input function.*/
                fnet_eth_prot_if_list[i].input(netif, nb); 
     f62:	4a0c      	ldr	r2, [pc, #48]	; (f94 <fnet_eth_prot_input+0x60>)
     f64:	697b      	ldr	r3, [r7, #20]
     f66:	00db      	lsls	r3, r3, #3
     f68:	4413      	add	r3, r2
     f6a:	685b      	ldr	r3, [r3, #4]
     f6c:	68f8      	ldr	r0, [r7, #12]
     f6e:	68b9      	ldr	r1, [r7, #8]
     f70:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:237
                break;
     f72:	e005      	b.n	f80 <fnet_eth_prot_input+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:231
    int i;
    
    if(netif && nb)
    {
        /* Find Network-layer protocol.*/
        for(i=0; i<FNET_ETH_PROT_IF_LIST_SIZE; i++)
     f74:	697b      	ldr	r3, [r7, #20]
     f76:	3301      	adds	r3, #1
     f78:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:231 (discriminator 1)
     f7a:	697b      	ldr	r3, [r7, #20]
     f7c:	2b01      	cmp	r3, #1
     f7e:	d9e9      	bls.n	f54 <fnet_eth_prot_input+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:241
                fnet_eth_prot_if_list[i].input(netif, nb); 
                break;
            }
        }
        
        if(i == FNET_ETH_PROT_IF_LIST_SIZE)
     f80:	697b      	ldr	r3, [r7, #20]
     f82:	2b02      	cmp	r3, #2
     f84:	d102      	bne.n	f8c <fnet_eth_prot_input+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:244
        { 
            /* No procol found */
            fnet_netbuf_free_chain(nb); 
     f86:	68b8      	ldr	r0, [r7, #8]
     f88:	f001 fdba 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:247
        }
    }
}
     f8c:	3718      	adds	r7, #24
     f8e:	46bd      	mov	sp, r7
     f90:	bd80      	pop	{r7, pc}
     f92:	bf00      	nop
     f94:	00013f44 	.word	0x00013f44

00000f98 <fnet_eth_init>:
fnet_eth_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:255
* NAME: fnet_eth_init
*
* DESCRIPTION: Do initialization for an Ethernet-type interface.
*************************************************************************/
int fnet_eth_init( fnet_netif_t *netif)
{
     f98:	b590      	push	{r4, r7, lr}
     f9a:	b085      	sub	sp, #20
     f9c:	af00      	add	r7, sp, #0
     f9e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:264
    /* Clear Ethernet statistics. */
    fnet_memset_zero(&((fnet_eth_if_t *)(netif->if_ptr))->statistics, sizeof(struct fnet_netif_statistics));
#endif 

#if FNET_CFG_IP4   
    result = fnet_arp_init(netif); /* Init ARP for this interface.*/
     fa0:	6878      	ldr	r0, [r7, #4]
     fa2:	f7ff f903 	bl	1ac <fnet_arp_init>
     fa6:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:269
#else
    result = FNET_OK;    
#endif /* FNET_CFG_IP4 */

    if(result == FNET_OK)
     fa8:	68fb      	ldr	r3, [r7, #12]
     faa:	2b00      	cmp	r3, #0
     fac:	d114      	bne.n	fd8 <fnet_eth_init+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:314
            fnet_nd6_rd_start(netif); 
        }    
    #endif /* FNET_CFG_IP6 */
        
        /* Set connection flag. */
        ((fnet_eth_if_t *)(netif->if_ptr))->connection_flag = fnet_netif_connected(netif);
     fae:	687b      	ldr	r3, [r7, #4]
     fb0:	695c      	ldr	r4, [r3, #20]
     fb2:	6878      	ldr	r0, [r7, #4]
     fb4:	f002 fcda 	bl	396c <fnet_netif_connected>
     fb8:	4603      	mov	r3, r0
     fba:	60e3      	str	r3, [r4, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:316
        
        ((fnet_eth_if_t *)(netif->if_ptr))->eth_timer = 
     fbc:	687b      	ldr	r3, [r7, #4]
     fbe:	695c      	ldr	r4, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:317
                            fnet_timer_new((FNET_ETH_TIMER_PERIOD / FNET_TIMER_PERIOD_MS), fnet_eth_timer, netif);
     fc0:	2028      	movs	r0, #40	; 0x28
     fc2:	4908      	ldr	r1, [pc, #32]	; (fe4 <fnet_eth_init+0x4c>)
     fc4:	687a      	ldr	r2, [r7, #4]
     fc6:	f008 ff55 	bl	9e74 <fnet_timer_new>
     fca:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:316
    #endif /* FNET_CFG_IP6 */
        
        /* Set connection flag. */
        ((fnet_eth_if_t *)(netif->if_ptr))->connection_flag = fnet_netif_connected(netif);
        
        ((fnet_eth_if_t *)(netif->if_ptr))->eth_timer = 
     fcc:	6123      	str	r3, [r4, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:319
                            fnet_timer_new((FNET_ETH_TIMER_PERIOD / FNET_TIMER_PERIOD_MS), fnet_eth_timer, netif);
        
        fnet_eth_number++;
     fce:	4b06      	ldr	r3, [pc, #24]	; (fe8 <fnet_eth_init+0x50>)
     fd0:	681b      	ldr	r3, [r3, #0]
     fd2:	1c5a      	adds	r2, r3, #1
     fd4:	4b04      	ldr	r3, [pc, #16]	; (fe8 <fnet_eth_init+0x50>)
     fd6:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:322
    }
    
    return result;
     fd8:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:323
}
     fda:	4618      	mov	r0, r3
     fdc:	3714      	adds	r7, #20
     fde:	46bd      	mov	sp, r7
     fe0:	bd90      	pop	{r4, r7, pc}
     fe2:	bf00      	nop
     fe4:	00001065 	.word	0x00001065
     fe8:	1000073c 	.word	0x1000073c

00000fec <fnet_eth_release>:
fnet_eth_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:331
* NAME: fnet_eth_release
*
* DESCRIPTION: Do relaese for an Ethernet-type interface.
*************************************************************************/
void fnet_eth_release( fnet_netif_t *netif)
{
     fec:	b580      	push	{r7, lr}
     fee:	b082      	sub	sp, #8
     ff0:	af00      	add	r7, sp, #0
     ff2:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:343
    
    fnet_nd6_release(netif);
    
#endif /* FNET_CFG_IP6 */        

    fnet_timer_free(((fnet_eth_if_t *)(netif->if_ptr))->eth_timer);
     ff4:	687b      	ldr	r3, [r7, #4]
     ff6:	695b      	ldr	r3, [r3, #20]
     ff8:	691b      	ldr	r3, [r3, #16]
     ffa:	4618      	mov	r0, r3
     ffc:	f008 ff6a 	bl	9ed4 <fnet_timer_free>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:346

#if FNET_CFG_IP4    
    fnet_arp_release(netif);
    1000:	6878      	ldr	r0, [r7, #4]
    1002:	f7ff f91b 	bl	23c <fnet_arp_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:349
#endif

    fnet_eth_number--;
    1006:	4b04      	ldr	r3, [pc, #16]	; (1018 <fnet_eth_release+0x2c>)
    1008:	681b      	ldr	r3, [r3, #0]
    100a:	1e5a      	subs	r2, r3, #1
    100c:	4b02      	ldr	r3, [pc, #8]	; (1018 <fnet_eth_release+0x2c>)
    100e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:350
}
    1010:	3708      	adds	r7, #8
    1012:	46bd      	mov	sp, r7
    1014:	bd80      	pop	{r7, pc}
    1016:	bf00      	nop
    1018:	1000073c 	.word	0x1000073c

0000101c <fnet_eth_drain>:
fnet_eth_drain():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:359
*
* DESCRIPTION: This function tries to free not critical parts 
*              of memory in the Ethernet driver.
*************************************************************************/
void fnet_eth_drain(fnet_netif_t *netif)
{
    101c:	b580      	push	{r7, lr}
    101e:	b082      	sub	sp, #8
    1020:	af00      	add	r7, sp, #0
    1022:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:361
#if FNET_CFG_IP4
    fnet_arp_drain(netif);
    1024:	6878      	ldr	r0, [r7, #4]
    1026:	f7ff fc75 	bl	914 <fnet_arp_drain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:365
#else
    FNET_COMP_UNUSED_ARG(netif);
#endif /* FNET_CFG_IP4 */
}
    102a:	3708      	adds	r7, #8
    102c:	46bd      	mov	sp, r7
    102e:	bd80      	pop	{r7, pc}

00001030 <fnet_eth_change_addr_notify>:
fnet_eth_change_addr_notify():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:374
*
* DESCRIPTION:  This function is called on IP address change.
*               It issues a gratuitous ARP request.
*************************************************************************/
void fnet_eth_change_addr_notify(fnet_netif_t *netif)
{
    1030:	b580      	push	{r7, lr}
    1032:	b082      	sub	sp, #8
    1034:	af00      	add	r7, sp, #0
    1036:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:376
#if FNET_CFG_IP4
fnet_printf("ETH - Change IP4 to: %x\n", netif->ip4_addr.address);
    1038:	687b      	ldr	r3, [r7, #4]
    103a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    103c:	4808      	ldr	r0, [pc, #32]	; (1060 <fnet_eth_change_addr_notify+0x30>)
    103e:	4619      	mov	r1, r3
    1040:	f00a fff0 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:378

    if(netif->ip4_addr.address)
    1044:	687b      	ldr	r3, [r7, #4]
    1046:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    1048:	2b00      	cmp	r3, #0
    104a:	d005      	beq.n	1058 <fnet_eth_change_addr_notify+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:379
    	fnet_arp_request(netif, netif->ip4_addr.address); /* Gratuitous ARP request.*/
    104c:	687b      	ldr	r3, [r7, #4]
    104e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    1050:	6878      	ldr	r0, [r7, #4]
    1052:	4619      	mov	r1, r3
    1054:	f7ff fbf8 	bl	848 <fnet_arp_request>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:383
#else
    FNET_COMP_UNUSED_ARG(netif);
#endif /* FNET_CFG_IP4 */   
}
    1058:	3708      	adds	r7, #8
    105a:	46bd      	mov	sp, r7
    105c:	bd80      	pop	{r7, pc}
    105e:	bf00      	nop
    1060:	00013f28 	.word	0x00013f28

00001064 <fnet_eth_timer>:
fnet_eth_timer():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:391
* NAME: fnet_eth_timer
*
* DESCRIPTION: 
*************************************************************************/
static void fnet_eth_timer( void *cookie )
{
    1064:	b580      	push	{r7, lr}
    1066:	b084      	sub	sp, #16
    1068:	af00      	add	r7, sp, #0
    106a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:392
    fnet_netif_t *netif = (fnet_netif_t *) cookie;
    106c:	687b      	ldr	r3, [r7, #4]
    106e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:393
    int connection_flag = ((fnet_eth_if_t *)(netif->if_ptr))->connection_flag;
    1070:	68fb      	ldr	r3, [r7, #12]
    1072:	695b      	ldr	r3, [r3, #20]
    1074:	68db      	ldr	r3, [r3, #12]
    1076:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:396


    if(fnet_netif_connected(netif) != connection_flag) /* Is any change in connection. */
    1078:	68f8      	ldr	r0, [r7, #12]
    107a:	f002 fc77 	bl	396c <fnet_netif_connected>
    107e:	4602      	mov	r2, r0
    1080:	68bb      	ldr	r3, [r7, #8]
    1082:	429a      	cmp	r2, r3
    1084:	d00b      	beq.n	109e <fnet_eth_timer+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:398
    {
        if(connection_flag == 0)  /* Connected. */
    1086:	68bb      	ldr	r3, [r7, #8]
    1088:	2b00      	cmp	r3, #0
    108a:	d102      	bne.n	1092 <fnet_eth_timer+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:400
        {
            fnet_eth_change_addr_notify(netif);
    108c:	68f8      	ldr	r0, [r7, #12]
    108e:	f7ff ffcf 	bl	1030 <fnet_eth_change_addr_notify>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:403
        }
            
        ((fnet_eth_if_t *)(netif->if_ptr))->connection_flag = connection_flag ^ 1;
    1092:	68fb      	ldr	r3, [r7, #12]
    1094:	695b      	ldr	r3, [r3, #20]
    1096:	68ba      	ldr	r2, [r7, #8]
    1098:	f082 0201 	eor.w	r2, r2, #1
    109c:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:405
    }
}
    109e:	3710      	adds	r7, #16
    10a0:	46bd      	mov	sp, r7
    10a2:	bd80      	pop	{r7, pc}

000010a4 <fnet_eth_output_ip4>:
fnet_eth_output_ip4():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:414
*
* DESCRIPTION: Ethernet IPv4 output function.
*************************************************************************/
#if FNET_CFG_IP4
void fnet_eth_output_ip4(fnet_netif_t *netif, fnet_ip4_addr_t dest_ip_addr, fnet_netbuf_t* nb)
{
    10a4:	b590      	push	{r4, r7, lr}
    10a6:	b089      	sub	sp, #36	; 0x24
    10a8:	af00      	add	r7, sp, #0
    10aa:	60f8      	str	r0, [r7, #12]
    10ac:	60b9      	str	r1, [r7, #8]
    10ae:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:422
  
    /* Construct Ethernet header. Start with looking up deciding which
    * MAC address to use as a destination address. Broadcasts and
    * multicasts are special, all other addresses are looked up in the
    * ARP table. */
    if(fnet_ip_addr_is_broadcast (dest_ip_addr, netif))
    10b0:	68b8      	ldr	r0, [r7, #8]
    10b2:	68f9      	ldr	r1, [r7, #12]
    10b4:	f000 fe4a 	bl	1d4c <fnet_ip_addr_is_broadcast>
    10b8:	4603      	mov	r3, r0
    10ba:	2b00      	cmp	r3, #0
    10bc:	d007      	beq.n	10ce <fnet_eth_output_ip4+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:424
    {
        fnet_memcpy (destination_addr, fnet_eth_broadcast, sizeof(fnet_mac_addr_t));
    10be:	f107 0314 	add.w	r3, r7, #20
    10c2:	4618      	mov	r0, r3
    10c4:	4926      	ldr	r1, [pc, #152]	; (1160 <fnet_eth_output_ip4+0xbc>)
    10c6:	2206      	movs	r2, #6
    10c8:	f004 fbe4 	bl	5894 <fnet_memcpy>
    10cc:	e038      	b.n	1140 <fnet_eth_output_ip4+0x9c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:426
    }
    else if(FNET_IP4_ADDR_IS_MULTICAST(dest_ip_addr))
    10ce:	68bb      	ldr	r3, [r7, #8]
    10d0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    10d4:	2be0      	cmp	r3, #224	; 0xe0
    10d6:	d11d      	bne.n	1114 <fnet_eth_output_ip4+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:429
    {
        /* Hash IP multicast address to MAC address. */
        destination_addr[0] = 0x01;
    10d8:	2301      	movs	r3, #1
    10da:	753b      	strb	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:430
        destination_addr[1] = 0x0;
    10dc:	2300      	movs	r3, #0
    10de:	757b      	strb	r3, [r7, #21]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:431
        destination_addr[2] = 0x5e;
    10e0:	235e      	movs	r3, #94	; 0x5e
    10e2:	75bb      	strb	r3, [r7, #22]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:432
        destination_addr[3] = (unsigned char)(FNET_IP4_ADDR2(dest_ip_addr)& 0x7f);
    10e4:	68b8      	ldr	r0, [r7, #8]
    10e6:	f00e fa31 	bl	f54c <fnet_htonl>
    10ea:	4603      	mov	r3, r0
    10ec:	0c1b      	lsrs	r3, r3, #16
    10ee:	b2db      	uxtb	r3, r3
    10f0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
    10f4:	b2db      	uxtb	r3, r3
    10f6:	75fb      	strb	r3, [r7, #23]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:433
        destination_addr[4] = (unsigned char)(FNET_IP4_ADDR3(dest_ip_addr));
    10f8:	68b8      	ldr	r0, [r7, #8]
    10fa:	f00e fa27 	bl	f54c <fnet_htonl>
    10fe:	4603      	mov	r3, r0
    1100:	0a1b      	lsrs	r3, r3, #8
    1102:	b2db      	uxtb	r3, r3
    1104:	763b      	strb	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:434
        destination_addr[5] = (unsigned char)(FNET_IP4_ADDR4(dest_ip_addr));
    1106:	68b8      	ldr	r0, [r7, #8]
    1108:	f00e fa20 	bl	f54c <fnet_htonl>
    110c:	4603      	mov	r3, r0
    110e:	b2db      	uxtb	r3, r3
    1110:	767b      	strb	r3, [r7, #25]
    1112:	e015      	b.n	1140 <fnet_eth_output_ip4+0x9c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:440
        //TBD Use macro
    }
    else
    /* Unicast address. */
    {
        if((dest_ptr = fnet_arp_lookup(netif, dest_ip_addr))!=0)
    1114:	68f8      	ldr	r0, [r7, #12]
    1116:	68b9      	ldr	r1, [r7, #8]
    1118:	f7ff fa12 	bl	540 <fnet_arp_lookup>
    111c:	61f8      	str	r0, [r7, #28]
    111e:	69fb      	ldr	r3, [r7, #28]
    1120:	2b00      	cmp	r3, #0
    1122:	d007      	beq.n	1134 <fnet_eth_output_ip4+0x90>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:442
        {
            fnet_memcpy (destination_addr, *dest_ptr, sizeof(fnet_mac_addr_t));
    1124:	f107 0314 	add.w	r3, r7, #20
    1128:	4618      	mov	r0, r3
    112a:	69f9      	ldr	r1, [r7, #28]
    112c:	2206      	movs	r2, #6
    112e:	f004 fbb1 	bl	5894 <fnet_memcpy>
    1132:	e005      	b.n	1140 <fnet_eth_output_ip4+0x9c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:446
        }
        else
        {
            fnet_arp_resolve(netif, dest_ip_addr, nb);
    1134:	68f8      	ldr	r0, [r7, #12]
    1136:	68b9      	ldr	r1, [r7, #8]
    1138:	687a      	ldr	r2, [r7, #4]
    113a:	f7ff fa41 	bl	5c0 <fnet_arp_resolve>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:447
            goto EXIT;
    113e:	e00a      	b.n	1156 <fnet_eth_output_ip4+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:452
        }
    }

    /* Send Ethernet frame. */
    ((fnet_eth_if_t *)(netif->if_ptr))->output(netif, FNET_ETH_TYPE_IP4, destination_addr, nb);
    1140:	68fb      	ldr	r3, [r7, #12]
    1142:	695b      	ldr	r3, [r3, #20]
    1144:	689c      	ldr	r4, [r3, #8]
    1146:	f107 0314 	add.w	r3, r7, #20
    114a:	68f8      	ldr	r0, [r7, #12]
    114c:	f44f 6100 	mov.w	r1, #2048	; 0x800
    1150:	461a      	mov	r2, r3
    1152:	687b      	ldr	r3, [r7, #4]
    1154:	47a0      	blx	r4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:454
EXIT:
    return;    
    1156:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_eth.c:455
}
    1158:	3724      	adds	r7, #36	; 0x24
    115a:	46bd      	mov	sp, r7
    115c:	bd90      	pop	{r4, r7, pc}
    115e:	bf00      	nop
    1160:	00013f00 	.word	0x00013f00

00001164 <fnet_icmp_input>:
fnet_icmp_input():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:99
* NAME: fnet_icmp_input
*
* DESCRIPTION: ICMP input function.
*************************************************************************/
static void fnet_icmp_input( fnet_netif_t *netif, fnet_ip4_addr_t src_ip, fnet_ip4_addr_t dest_ip, fnet_netbuf_t *nb, fnet_netbuf_t *ip4_nb )
{
    1164:	b580      	push	{r7, lr}
    1166:	b08a      	sub	sp, #40	; 0x28
    1168:	af00      	add	r7, sp, #0
    116a:	60f8      	str	r0, [r7, #12]
    116c:	60b9      	str	r1, [r7, #8]
    116e:	607a      	str	r2, [r7, #4]
    1170:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:106
    fnet_icmp_err_header_t  *hdr_err;
    fnet_prot_notify_t      prot_cmd;
    fnet_prot_if_t          *protocol;
    fnet_netbuf_t           *tmp_nb;
    
    fnet_netbuf_free_chain(ip4_nb);
    1172:	6b38      	ldr	r0, [r7, #48]	; 0x30
    1174:	f001 fcc4 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:108
    
    if((netif != 0) && (nb != 0) )
    1178:	68fb      	ldr	r3, [r7, #12]
    117a:	2b00      	cmp	r3, #0
    117c:	f000 8104 	beq.w	1388 <fnet_icmp_input+0x224>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:108 (discriminator 1)
    1180:	683b      	ldr	r3, [r7, #0]
    1182:	2b00      	cmp	r3, #0
    1184:	f000 8100 	beq.w	1388 <fnet_icmp_input+0x224>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:110
    {
        if((tmp_nb = fnet_netbuf_pullup(nb, sizeof(fnet_icmp_header_t))) == 0) /* The header must reside in contiguous area of memory. */
    1188:	683b      	ldr	r3, [r7, #0]
    118a:	4618      	mov	r0, r3
    118c:	2104      	movs	r1, #4
    118e:	f001 fcdd 	bl	2b4c <fnet_netbuf_pullup>
    1192:	6238      	str	r0, [r7, #32]
    1194:	6a3b      	ldr	r3, [r7, #32]
    1196:	2b00      	cmp	r3, #0
    1198:	d100      	bne.n	119c <fnet_icmp_input+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:112
        {
            goto DISCARD;
    119a:	e0f5      	b.n	1388 <fnet_icmp_input+0x224>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:115
        }

        nb = tmp_nb;
    119c:	6a3b      	ldr	r3, [r7, #32]
    119e:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:117

        hdr = nb->data_ptr;
    11a0:	683b      	ldr	r3, [r7, #0]
    11a2:	68db      	ldr	r3, [r3, #12]
    11a4:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:123

        if(
        #if FNET_CFG_CPU_ETH_HW_RX_PROTOCOL_CHECKSUM || FNET_CFG_CPU_ETH_HW_TX_PROTOCOL_CHECKSUM
            ((nb->flags & FNET_NETBUF_FLAG_HW_PROTOCOL_CHECKSUM) == 0) &&
        #endif
            fnet_checksum(nb, (int)nb->total_length) 
    11a6:	683a      	ldr	r2, [r7, #0]
    11a8:	683b      	ldr	r3, [r7, #0]
    11aa:	695b      	ldr	r3, [r3, #20]
    11ac:	4610      	mov	r0, r2
    11ae:	4619      	mov	r1, r3
    11b0:	f7ff fd1e 	bl	bf0 <fnet_checksum>
    11b4:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:119

        nb = tmp_nb;

        hdr = nb->data_ptr;

        if(
    11b6:	2b00      	cmp	r3, #0
    11b8:	f040 80e6 	bne.w	1388 <fnet_icmp_input+0x224>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:124
        #if FNET_CFG_CPU_ETH_HW_RX_PROTOCOL_CHECKSUM || FNET_CFG_CPU_ETH_HW_TX_PROTOCOL_CHECKSUM
            ((nb->flags & FNET_NETBUF_FLAG_HW_PROTOCOL_CHECKSUM) == 0) &&
        #endif
            fnet_checksum(nb, (int)nb->total_length) 
            || fnet_ip_addr_is_broadcast(src_ip, netif)
    11bc:	68b8      	ldr	r0, [r7, #8]
    11be:	68f9      	ldr	r1, [r7, #12]
    11c0:	f000 fdc4 	bl	1d4c <fnet_ip_addr_is_broadcast>
    11c4:	4603      	mov	r3, r0
    11c6:	2b00      	cmp	r3, #0
    11c8:	f040 80de 	bne.w	1388 <fnet_icmp_input+0x224>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:125
            || FNET_IP4_ADDR_IS_MULTICAST(src_ip))
    11cc:	68bb      	ldr	r3, [r7, #8]
    11ce:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    11d2:	2be0      	cmp	r3, #224	; 0xe0
    11d4:	f000 80d8 	beq.w	1388 <fnet_icmp_input+0x224>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:132
            goto DISCARD;
        }
        
        fnet_icmp_trace("RX", hdr); 
        
        switch(hdr->type)
    11d8:	69fb      	ldr	r3, [r7, #28]
    11da:	781b      	ldrb	r3, [r3, #0]
    11dc:	3b03      	subs	r3, #3
    11de:	2b09      	cmp	r3, #9
    11e0:	f200 80cf 	bhi.w	1382 <fnet_icmp_input+0x21e>
    11e4:	a201      	add	r2, pc, #4	; (adr r2, 11ec <fnet_icmp_input+0x88>)
    11e6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    11ea:	bf00      	nop
    11ec:	00001251 	.word	0x00001251
    11f0:	000012f9 	.word	0x000012f9
    11f4:	00001383 	.word	0x00001383
    11f8:	00001383 	.word	0x00001383
    11fc:	00001383 	.word	0x00001383
    1200:	00001215 	.word	0x00001215
    1204:	00001383 	.word	0x00001383
    1208:	00001383 	.word	0x00001383
    120c:	000012c7 	.word	0x000012c7
    1210:	000012e7 	.word	0x000012e7
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:138
        {
            /**************************
             * ICMP Request Processing
             **************************/
            case FNET_ICMP_ECHO:
                if((nb->total_length < sizeof(fnet_icmp_echo_header_t)) ||
    1214:	683b      	ldr	r3, [r7, #0]
    1216:	695b      	ldr	r3, [r3, #20]
    1218:	2b07      	cmp	r3, #7
    121a:	f240 80b5 	bls.w	1388 <fnet_icmp_input+0x224>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:141 (discriminator 1)
                /* An ICMP Echo Request destined to an IP broadcast or IP
                * multicast address MAY be silently discarded.(RFC1122)*/
                fnet_ip_addr_is_broadcast(dest_ip, netif) || FNET_IP4_ADDR_IS_MULTICAST(dest_ip))
    121e:	6878      	ldr	r0, [r7, #4]
    1220:	68f9      	ldr	r1, [r7, #12]
    1222:	f000 fd93 	bl	1d4c <fnet_ip_addr_is_broadcast>
    1226:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:138 (discriminator 1)
        {
            /**************************
             * ICMP Request Processing
             **************************/
            case FNET_ICMP_ECHO:
                if((nb->total_length < sizeof(fnet_icmp_echo_header_t)) ||
    1228:	2b00      	cmp	r3, #0
    122a:	f040 80ad 	bne.w	1388 <fnet_icmp_input+0x224>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:141
                /* An ICMP Echo Request destined to an IP broadcast or IP
                * multicast address MAY be silently discarded.(RFC1122)*/
                fnet_ip_addr_is_broadcast(dest_ip, netif) || FNET_IP4_ADDR_IS_MULTICAST(dest_ip))
    122e:	687b      	ldr	r3, [r7, #4]
    1230:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    1234:	2be0      	cmp	r3, #224	; 0xe0
    1236:	f000 80a7 	beq.w	1388 <fnet_icmp_input+0x224>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:146
                {
                    goto DISCARD;
                }

                hdr->type = FNET_ICMP_ECHOREPLY;
    123a:	69fb      	ldr	r3, [r7, #28]
    123c:	2200      	movs	r2, #0
    123e:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:148

                fnet_icmp_output(netif, dest_ip, src_ip, nb);
    1240:	683b      	ldr	r3, [r7, #0]
    1242:	68f8      	ldr	r0, [r7, #12]
    1244:	6879      	ldr	r1, [r7, #4]
    1246:	68ba      	ldr	r2, [r7, #8]
    1248:	f000 f8a6 	bl	1398 <fnet_icmp_output>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:149
                break;
    124c:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:310
            case FNET_ICMP_MASKREPLY:*/
            default:
                goto DISCARD;
                
        }/* switch(hdr->type) */
    }
    124e:	e09f      	b.n	1390 <fnet_icmp_input+0x22c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:203
#endif                
            /**************************
             * ICMP Error Processing
             **************************/
            case FNET_ICMP_UNREACHABLE:
                switch(hdr->code)
    1250:	69fb      	ldr	r3, [r7, #28]
    1252:	785b      	ldrb	r3, [r3, #1]
    1254:	2b0c      	cmp	r3, #12
    1256:	f200 8096 	bhi.w	1386 <fnet_icmp_input+0x222>
    125a:	a201      	add	r2, pc, #4	; (adr r2, 1260 <fnet_icmp_input+0xfc>)
    125c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    1260:	00001295 	.word	0x00001295
    1264:	0000129d 	.word	0x0000129d
    1268:	000012a5 	.word	0x000012a5
    126c:	000012ad 	.word	0x000012ad
    1270:	000012bd 	.word	0x000012bd
    1274:	000012b5 	.word	0x000012b5
    1278:	00001295 	.word	0x00001295
    127c:	0000129d 	.word	0x0000129d
    1280:	0000129d 	.word	0x0000129d
    1284:	00001295 	.word	0x00001295
    1288:	0000129d 	.word	0x0000129d
    128c:	00001295 	.word	0x00001295
    1290:	0000129d 	.word	0x0000129d
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:209
                {
                    case FNET_ICMP_UNREACHABLE_NET:           /* net unreachable */
                    case FNET_ICMP_UNREACHABLE_NET_UNKNOWN:   /* unknown net */
                    case FNET_ICMP_UNREACHABLE_NET_PROHIB:    /* prohibited access */
                    case FNET_ICMP_UNREACHABLE_TOSNET:        /* bad tos for net */
                        prot_cmd = FNET_PROT_NOTIFY_UNREACH_NET;
    1294:	2306      	movs	r3, #6
    1296:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:210
                        break;
    129a:	e013      	b.n	12c4 <fnet_icmp_input+0x160>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:217
                    case FNET_ICMP_UNREACHABLE_HOST:          /* host unreachable */
                    case FNET_ICMP_UNREACHABLE_HOST_UNKNOWN:  /* unknown host */
                    case FNET_ICMP_UNREACHABLE_ISOLATED:      /* src host isolated */
                    case FNET_ICMP_UNREACHABLE_HOST_PROHIB:   /* ditto */
                    case FNET_ICMP_UNREACHABLE_TOSHOST:       /* bad tos for host */
                        prot_cmd = FNET_PROT_NOTIFY_UNREACH_HOST;
    129c:	2302      	movs	r3, #2
    129e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:218
                        break;
    12a2:	e00f      	b.n	12c4 <fnet_icmp_input+0x160>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:221

                    case FNET_ICMP_UNREACHABLE_PROTOCOL:      /* protocol unreachable */
                        prot_cmd = FNET_PROT_NOTIFY_UNREACH_PROTOCOL;
    12a4:	2303      	movs	r3, #3
    12a6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:222
                        break;
    12aa:	e00b      	b.n	12c4 <fnet_icmp_input+0x160>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:225

                    case FNET_ICMP_UNREACHABLE_PORT:          /* port unreachable */
                        prot_cmd = FNET_PROT_NOTIFY_UNREACH_PORT;
    12ac:	2304      	movs	r3, #4
    12ae:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:226
                        break;
    12b2:	e007      	b.n	12c4 <fnet_icmp_input+0x160>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:229

                    case FNET_ICMP_UNREACHABLE_SRCFAIL:       /* source route failed */
                        prot_cmd = FNET_PROT_NOTIFY_UNREACH_SRCFAIL;
    12b4:	2305      	movs	r3, #5
    12b6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:230
                        break;
    12ba:	e003      	b.n	12c4 <fnet_icmp_input+0x160>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:233

                    case FNET_ICMP_UNREACHABLE_NEEDFRAG:      /* fragmentation needed and DF set*/
                        prot_cmd = FNET_PROT_NOTIFY_MSGSIZE;
    12bc:	2301      	movs	r3, #1
    12be:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:234
                        break;
    12c2:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:239

                    default:
                        goto DISCARD;
                }
                goto NOTIFY_PROT;
    12c4:	e020      	b.n	1308 <fnet_icmp_input+0x1a4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:242

            case FNET_ICMP_TIMXCEED:
                switch(hdr->code)
    12c6:	69fb      	ldr	r3, [r7, #28]
    12c8:	785b      	ldrb	r3, [r3, #1]
    12ca:	2b00      	cmp	r3, #0
    12cc:	d002      	beq.n	12d4 <fnet_icmp_input+0x170>
    12ce:	2b01      	cmp	r3, #1
    12d0:	d004      	beq.n	12dc <fnet_icmp_input+0x178>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:253
                    case FNET_ICMP_TIMXCEED_REASS:            /* fragment reassembly time exceeded (ttl==0)*/
                        prot_cmd = FNET_PROT_NOTIFY_TIMXCEED_REASS;
                        break;

                    default:
                        goto DISCARD;
    12d2:	e059      	b.n	1388 <fnet_icmp_input+0x224>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:245

            case FNET_ICMP_TIMXCEED:
                switch(hdr->code)
                {
                    case FNET_ICMP_TIMXCEED_INTRANS:          /* time to live exceeded in transit (ttl==0)*/
                        prot_cmd = FNET_PROT_NOTIFY_TIMXCEED_INTRANS;
    12d4:	2307      	movs	r3, #7
    12d6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:246
                        break;
    12da:	e003      	b.n	12e4 <fnet_icmp_input+0x180>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:249

                    case FNET_ICMP_TIMXCEED_REASS:            /* fragment reassembly time exceeded (ttl==0)*/
                        prot_cmd = FNET_PROT_NOTIFY_TIMXCEED_REASS;
    12dc:	2308      	movs	r3, #8
    12de:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:250
                        break;
    12e2:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:256

                    default:
                        goto DISCARD;
                }

                goto NOTIFY_PROT;
    12e4:	e010      	b.n	1308 <fnet_icmp_input+0x1a4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:259

            case FNET_ICMP_PARAMPROB:                       /* Parameter Problem Message.*/
                if(hdr->code > 1)
    12e6:	69fb      	ldr	r3, [r7, #28]
    12e8:	785b      	ldrb	r3, [r3, #1]
    12ea:	2b01      	cmp	r3, #1
    12ec:	d900      	bls.n	12f0 <fnet_icmp_input+0x18c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:260
                    goto DISCARD;
    12ee:	e04b      	b.n	1388 <fnet_icmp_input+0x224>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:262

                prot_cmd = FNET_PROT_NOTIFY_PARAMPROB;
    12f0:	2309      	movs	r3, #9
    12f2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:263
                goto NOTIFY_PROT;
    12f6:	e007      	b.n	1308 <fnet_icmp_input+0x1a4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:266

            case FNET_ICMP_SOURCEQUENCH:                    /* Source Quench Message; packet lost, slow down.*/
                if(hdr->code)
    12f8:	69fb      	ldr	r3, [r7, #28]
    12fa:	785b      	ldrb	r3, [r3, #1]
    12fc:	2b00      	cmp	r3, #0
    12fe:	d000      	beq.n	1302 <fnet_icmp_input+0x19e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:267
                    goto DISCARD;
    1300:	e042      	b.n	1388 <fnet_icmp_input+0x224>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:269

                prot_cmd = FNET_PROT_NOTIFY_QUENCH;
    1302:	2300      	movs	r3, #0
    1304:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:272

    NOTIFY_PROT: /* Protocol notification.*/
                if(nb->total_length < (sizeof(fnet_icmp_err_header_t) + 8))
    1308:	683b      	ldr	r3, [r7, #0]
    130a:	695b      	ldr	r3, [r3, #20]
    130c:	2b23      	cmp	r3, #35	; 0x23
    130e:	d800      	bhi.n	1312 <fnet_icmp_input+0x1ae>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:273
                    goto DISCARD;
    1310:	e03a      	b.n	1388 <fnet_icmp_input+0x224>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:275

                if(nb->total_length > (sizeof(fnet_icmp_err_header_t) + 8))
    1312:	683b      	ldr	r3, [r7, #0]
    1314:	695b      	ldr	r3, [r3, #20]
    1316:	2b24      	cmp	r3, #36	; 0x24
    1318:	d908      	bls.n	132c <fnet_icmp_input+0x1c8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:276
                    fnet_netbuf_trim(&nb, (int)((sizeof(fnet_icmp_err_header_t) + 8) - nb->total_length));
    131a:	683b      	ldr	r3, [r7, #0]
    131c:	695b      	ldr	r3, [r3, #20]
    131e:	f1c3 0324 	rsb	r3, r3, #36	; 0x24
    1322:	463a      	mov	r2, r7
    1324:	4610      	mov	r0, r2
    1326:	4619      	mov	r1, r3
    1328:	f001 fcc8 	bl	2cbc <fnet_netbuf_trim>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:278

                if((tmp_nb = fnet_netbuf_pullup(nb, (int)nb->total_length)) == 0) /* The header must reside in contiguous area of memory.*/
    132c:	683a      	ldr	r2, [r7, #0]
    132e:	683b      	ldr	r3, [r7, #0]
    1330:	695b      	ldr	r3, [r3, #20]
    1332:	4610      	mov	r0, r2
    1334:	4619      	mov	r1, r3
    1336:	f001 fc09 	bl	2b4c <fnet_netbuf_pullup>
    133a:	6238      	str	r0, [r7, #32]
    133c:	6a3b      	ldr	r3, [r7, #32]
    133e:	2b00      	cmp	r3, #0
    1340:	d100      	bne.n	1344 <fnet_icmp_input+0x1e0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:280
                {
                    goto DISCARD;
    1342:	e021      	b.n	1388 <fnet_icmp_input+0x224>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:283
                }

                nb = tmp_nb;
    1344:	6a3b      	ldr	r3, [r7, #32]
    1346:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:285

                hdr_err = (fnet_icmp_err_header_t *)nb->data_ptr;
    1348:	683b      	ldr	r3, [r7, #0]
    134a:	68db      	ldr	r3, [r3, #12]
    134c:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:288
              

                if((protocol = fnet_prot_find(AF_INET, SOCK_UNSPEC, hdr_err->ip.protocol)) != 0)
    134e:	69bb      	ldr	r3, [r7, #24]
    1350:	7c5b      	ldrb	r3, [r3, #17]
    1352:	2001      	movs	r0, #1
    1354:	2100      	movs	r1, #0
    1356:	461a      	mov	r2, r3
    1358:	f002 fc2c 	bl	3bb4 <fnet_prot_find>
    135c:	6178      	str	r0, [r7, #20]
    135e:	697b      	ldr	r3, [r7, #20]
    1360:	2b00      	cmp	r3, #0
    1362:	d00d      	beq.n	1380 <fnet_icmp_input+0x21c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:290
                {
                    if(protocol->prot_control_input)
    1364:	697b      	ldr	r3, [r7, #20]
    1366:	699b      	ldr	r3, [r3, #24]
    1368:	2b00      	cmp	r3, #0
    136a:	d009      	beq.n	1380 <fnet_icmp_input+0x21c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:291
                        protocol->prot_control_input(prot_cmd, (void *)(&hdr_err->ip));
    136c:	697b      	ldr	r3, [r7, #20]
    136e:	699b      	ldr	r3, [r3, #24]
    1370:	69ba      	ldr	r2, [r7, #24]
    1372:	3208      	adds	r2, #8
    1374:	f897 1027 	ldrb.w	r1, [r7, #39]	; 0x27
    1378:	4608      	mov	r0, r1
    137a:	4611      	mov	r1, r2
    137c:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:293
                }
                goto DISCARD;
    137e:	e003      	b.n	1388 <fnet_icmp_input+0x224>
    1380:	e002      	b.n	1388 <fnet_icmp_input+0x224>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:307
            case FNET_ICMP_ROUTERSOLICIT:
            case FNET_ICMP_TSTAMPREPLY:
            case FNET_ICMP_IREQREPLY:
            case FNET_ICMP_MASKREPLY:*/
            default:
                goto DISCARD;
    1382:	bf00      	nop
    1384:	e000      	b.n	1388 <fnet_icmp_input+0x224>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:237
                    case FNET_ICMP_UNREACHABLE_NEEDFRAG:      /* fragmentation needed and DF set*/
                        prot_cmd = FNET_PROT_NOTIFY_MSGSIZE;
                        break;

                    default:
                        goto DISCARD;
    1386:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:314
        }/* switch(hdr->type) */
    }
    else
    {
DISCARD:
        fnet_netbuf_free_chain(nb);
    1388:	683b      	ldr	r3, [r7, #0]
    138a:	4618      	mov	r0, r3
    138c:	f001 fbb8 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:316
    }
}
    1390:	3728      	adds	r7, #40	; 0x28
    1392:	46bd      	mov	sp, r7
    1394:	bd80      	pop	{r7, pc}
$t():
    1396:	bf00      	nop

00001398 <fnet_icmp_output>:
fnet_icmp_output():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:325
*
* DESCRIPTION: ICMP output function.
*************************************************************************/
static void fnet_icmp_output( fnet_netif_t *netif, fnet_ip4_addr_t src_ip, 
                                fnet_ip4_addr_t dest_ip, fnet_netbuf_t *nb )
{
    1398:	b580      	push	{r7, lr}
    139a:	b08c      	sub	sp, #48	; 0x30
    139c:	af06      	add	r7, sp, #24
    139e:	60f8      	str	r0, [r7, #12]
    13a0:	60b9      	str	r1, [r7, #8]
    13a2:	607a      	str	r2, [r7, #4]
    13a4:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:326
    fnet_icmp_header_t *hdr = nb->data_ptr;
    13a6:	683b      	ldr	r3, [r7, #0]
    13a8:	68db      	ldr	r3, [r3, #12]
    13aa:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:328

    hdr->checksum = 0;
    13ac:	697b      	ldr	r3, [r7, #20]
    13ae:	2200      	movs	r2, #0
    13b0:	709a      	strb	r2, [r3, #2]
    13b2:	2200      	movs	r2, #0
    13b4:	70da      	strb	r2, [r3, #3]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:338
    {
        nb->flags |= FNET_NETBUF_FLAG_HW_PROTOCOL_CHECKSUM;
    }
    else
#endif
        hdr->checksum = fnet_checksum(nb, (int)nb->total_length);
    13b6:	683b      	ldr	r3, [r7, #0]
    13b8:	695b      	ldr	r3, [r3, #20]
    13ba:	6838      	ldr	r0, [r7, #0]
    13bc:	4619      	mov	r1, r3
    13be:	f7ff fc17 	bl	bf0 <fnet_checksum>
    13c2:	4603      	mov	r3, r0
    13c4:	461a      	mov	r2, r3
    13c6:	697b      	ldr	r3, [r7, #20]
    13c8:	805a      	strh	r2, [r3, #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:340

    fnet_ip_output(netif, src_ip, dest_ip, FNET_IP_PROTOCOL_ICMP, FNET_ICMP_TOS, FNET_ICMP_TTL, nb, 0, 0, 0);
    13ca:	2300      	movs	r3, #0
    13cc:	9300      	str	r3, [sp, #0]
    13ce:	2340      	movs	r3, #64	; 0x40
    13d0:	9301      	str	r3, [sp, #4]
    13d2:	683b      	ldr	r3, [r7, #0]
    13d4:	9302      	str	r3, [sp, #8]
    13d6:	2300      	movs	r3, #0
    13d8:	9303      	str	r3, [sp, #12]
    13da:	2300      	movs	r3, #0
    13dc:	9304      	str	r3, [sp, #16]
    13de:	2300      	movs	r3, #0
    13e0:	9305      	str	r3, [sp, #20]
    13e2:	68f8      	ldr	r0, [r7, #12]
    13e4:	68b9      	ldr	r1, [r7, #8]
    13e6:	687a      	ldr	r2, [r7, #4]
    13e8:	2301      	movs	r3, #1
    13ea:	f000 faa7 	bl	193c <fnet_ip_output>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:341
}
    13ee:	3718      	adds	r7, #24
    13f0:	46bd      	mov	sp, r7
    13f2:	bd80      	pop	{r7, pc}

000013f4 <fnet_icmp_error>:
fnet_icmp_error():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:350
*
* DESCRIPTION: Sends ICMP error message.
*************************************************************************/
void fnet_icmp_error( fnet_netif_t *netif, unsigned char type, 
                        unsigned char code, fnet_netbuf_t *nb )
{
    13f4:	b580      	push	{r7, lr}
    13f6:	b08a      	sub	sp, #40	; 0x28
    13f8:	af00      	add	r7, sp, #0
    13fa:	60f8      	str	r0, [r7, #12]
    13fc:	607b      	str	r3, [r7, #4]
    13fe:	460b      	mov	r3, r1
    1400:	72fb      	strb	r3, [r7, #11]
    1402:	4613      	mov	r3, r2
    1404:	72bb      	strb	r3, [r7, #10]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:358
    fnet_icmp_err_header_t  *icmpheader;
    fnet_ip4_addr_t          source_addr;
    fnet_ip4_addr_t          destination_addr;
    

    if(nb)
    1406:	687b      	ldr	r3, [r7, #4]
    1408:	2b00      	cmp	r3, #0
    140a:	f000 811a 	beq.w	1642 <fnet_icmp_error+0x24e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:360
    {
        ipheader = nb->data_ptr;
    140e:	687b      	ldr	r3, [r7, #4]
    1410:	68db      	ldr	r3, [r3, #12]
    1412:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:362
        
        source_addr = ipheader->source_addr;
    1414:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1416:	68db      	ldr	r3, [r3, #12]
    1418:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:363
        destination_addr = ipheader->desination_addr;
    141a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    141c:	691b      	ldr	r3, [r3, #16]
    141e:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:366

        /* Do not send error if not the first fragment of message (RFC1122)*/
        if((FNET_IP_HEADER_GET_OFFSET(ipheader)) ||
    1420:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1422:	88db      	ldrh	r3, [r3, #6]
    1424:	b29b      	uxth	r3, r3
    1426:	461a      	mov	r2, r3
    1428:	f64f 731f 	movw	r3, #65311	; 0xff1f
    142c:	4013      	ands	r3, r2
    142e:	2b00      	cmp	r3, #0
    1430:	f040 8103 	bne.w	163a <fnet_icmp_error+0x246>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:368 (discriminator 1)
            /* Do not send error on ICMP error messages*/
            ((ipheader->protocol == FNET_IP_PROTOCOL_ICMP)
    1434:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1436:	7a5b      	ldrb	r3, [r3, #9]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:366 (discriminator 1)
        
        source_addr = ipheader->source_addr;
        destination_addr = ipheader->desination_addr;

        /* Do not send error if not the first fragment of message (RFC1122)*/
        if((FNET_IP_HEADER_GET_OFFSET(ipheader)) ||
    1438:	2b01      	cmp	r3, #1
    143a:	d16e      	bne.n	151a <fnet_icmp_error+0x126>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:369
            /* Do not send error on ICMP error messages*/
            ((ipheader->protocol == FNET_IP_PROTOCOL_ICMP)
                 && (!FNET_ICMP_IS_QUERY_TYPE(((fnet_icmp_header_t *)((unsigned char *)nb->data_ptr
    143c:	687b      	ldr	r3, [r7, #4]
    143e:	68da      	ldr	r2, [r3, #12]
    1440:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1442:	781b      	ldrb	r3, [r3, #0]
    1444:	f003 030f 	and.w	r3, r3, #15
    1448:	009b      	lsls	r3, r3, #2
    144a:	4413      	add	r3, r2
    144c:	781b      	ldrb	r3, [r3, #0]
    144e:	2b08      	cmp	r3, #8
    1450:	d063      	beq.n	151a <fnet_icmp_error+0x126>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:369 (discriminator 1)
    1452:	687b      	ldr	r3, [r7, #4]
    1454:	68da      	ldr	r2, [r3, #12]
    1456:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1458:	781b      	ldrb	r3, [r3, #0]
    145a:	f003 030f 	and.w	r3, r3, #15
    145e:	009b      	lsls	r3, r3, #2
    1460:	4413      	add	r3, r2
    1462:	781b      	ldrb	r3, [r3, #0]
    1464:	2b00      	cmp	r3, #0
    1466:	d058      	beq.n	151a <fnet_icmp_error+0x126>
    1468:	687b      	ldr	r3, [r7, #4]
    146a:	68da      	ldr	r2, [r3, #12]
    146c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    146e:	781b      	ldrb	r3, [r3, #0]
    1470:	f003 030f 	and.w	r3, r3, #15
    1474:	009b      	lsls	r3, r3, #2
    1476:	4413      	add	r3, r2
    1478:	781b      	ldrb	r3, [r3, #0]
    147a:	2b0d      	cmp	r3, #13
    147c:	d04d      	beq.n	151a <fnet_icmp_error+0x126>
    147e:	687b      	ldr	r3, [r7, #4]
    1480:	68da      	ldr	r2, [r3, #12]
    1482:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1484:	781b      	ldrb	r3, [r3, #0]
    1486:	f003 030f 	and.w	r3, r3, #15
    148a:	009b      	lsls	r3, r3, #2
    148c:	4413      	add	r3, r2
    148e:	781b      	ldrb	r3, [r3, #0]
    1490:	2b0e      	cmp	r3, #14
    1492:	d042      	beq.n	151a <fnet_icmp_error+0x126>
    1494:	687b      	ldr	r3, [r7, #4]
    1496:	68da      	ldr	r2, [r3, #12]
    1498:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    149a:	781b      	ldrb	r3, [r3, #0]
    149c:	f003 030f 	and.w	r3, r3, #15
    14a0:	009b      	lsls	r3, r3, #2
    14a2:	4413      	add	r3, r2
    14a4:	781b      	ldrb	r3, [r3, #0]
    14a6:	2b0f      	cmp	r3, #15
    14a8:	d037      	beq.n	151a <fnet_icmp_error+0x126>
    14aa:	687b      	ldr	r3, [r7, #4]
    14ac:	68da      	ldr	r2, [r3, #12]
    14ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    14b0:	781b      	ldrb	r3, [r3, #0]
    14b2:	f003 030f 	and.w	r3, r3, #15
    14b6:	009b      	lsls	r3, r3, #2
    14b8:	4413      	add	r3, r2
    14ba:	781b      	ldrb	r3, [r3, #0]
    14bc:	2b10      	cmp	r3, #16
    14be:	d02c      	beq.n	151a <fnet_icmp_error+0x126>
    14c0:	687b      	ldr	r3, [r7, #4]
    14c2:	68da      	ldr	r2, [r3, #12]
    14c4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    14c6:	781b      	ldrb	r3, [r3, #0]
    14c8:	f003 030f 	and.w	r3, r3, #15
    14cc:	009b      	lsls	r3, r3, #2
    14ce:	4413      	add	r3, r2
    14d0:	781b      	ldrb	r3, [r3, #0]
    14d2:	2b11      	cmp	r3, #17
    14d4:	d021      	beq.n	151a <fnet_icmp_error+0x126>
    14d6:	687b      	ldr	r3, [r7, #4]
    14d8:	68da      	ldr	r2, [r3, #12]
    14da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    14dc:	781b      	ldrb	r3, [r3, #0]
    14de:	f003 030f 	and.w	r3, r3, #15
    14e2:	009b      	lsls	r3, r3, #2
    14e4:	4413      	add	r3, r2
    14e6:	781b      	ldrb	r3, [r3, #0]
    14e8:	2b12      	cmp	r3, #18
    14ea:	d016      	beq.n	151a <fnet_icmp_error+0x126>
    14ec:	687b      	ldr	r3, [r7, #4]
    14ee:	68da      	ldr	r2, [r3, #12]
    14f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    14f2:	781b      	ldrb	r3, [r3, #0]
    14f4:	f003 030f 	and.w	r3, r3, #15
    14f8:	009b      	lsls	r3, r3, #2
    14fa:	4413      	add	r3, r2
    14fc:	781b      	ldrb	r3, [r3, #0]
    14fe:	2b09      	cmp	r3, #9
    1500:	d00b      	beq.n	151a <fnet_icmp_error+0x126>
    1502:	687b      	ldr	r3, [r7, #4]
    1504:	68da      	ldr	r2, [r3, #12]
    1506:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1508:	781b      	ldrb	r3, [r3, #0]
    150a:	f003 030f 	and.w	r3, r3, #15
    150e:	009b      	lsls	r3, r3, #2
    1510:	4413      	add	r3, r2
    1512:	781b      	ldrb	r3, [r3, #0]
    1514:	2b0a      	cmp	r3, #10
    1516:	f040 8090 	bne.w	163a <fnet_icmp_error+0x246>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:375
                      + (FNET_IP_HEADER_GET_HEADER_LENGTH(ipheader) << 2)))->type))) 
            /* Do not send error on a datagram whose source address does not define a single
             * host -- e.g., a zero address, a loopback address, a
             * broadcast address, a multicast address, or a Class E
             * address.*/
            ||(fnet_ip_addr_is_broadcast(source_addr, netif)
    151a:	6a38      	ldr	r0, [r7, #32]
    151c:	68f9      	ldr	r1, [r7, #12]
    151e:	f000 fc15 	bl	1d4c <fnet_ip_addr_is_broadcast>
    1522:	4603      	mov	r3, r0
    1524:	2b00      	cmp	r3, #0
    1526:	f040 8088 	bne.w	163a <fnet_icmp_error+0x246>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:376
            || FNET_IP4_ADDR_IS_MULTICAST(source_addr) 
    152a:	6a3b      	ldr	r3, [r7, #32]
    152c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    1530:	2be0      	cmp	r3, #224	; 0xe0
    1532:	f000 8082 	beq.w	163a <fnet_icmp_error+0x246>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:377
            || FNET_IP4_CLASS_E(source_addr))
    1536:	6a3b      	ldr	r3, [r7, #32]
    1538:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    153c:	2bf0      	cmp	r3, #240	; 0xf0
    153e:	d07c      	beq.n	163a <fnet_icmp_error+0x246>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:379
            /* Do not send error on a datagram destined to an IP broadcast or IP multicast address*/
            ||(fnet_ip_addr_is_broadcast(destination_addr, netif)
    1540:	69f8      	ldr	r0, [r7, #28]
    1542:	68f9      	ldr	r1, [r7, #12]
    1544:	f000 fc02 	bl	1d4c <fnet_ip_addr_is_broadcast>
    1548:	4603      	mov	r3, r0
    154a:	2b00      	cmp	r3, #0
    154c:	d175      	bne.n	163a <fnet_icmp_error+0x246>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:380
            || FNET_IP4_ADDR_IS_MULTICAST(destination_addr)
    154e:	69fb      	ldr	r3, [r7, #28]
    1550:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    1554:	2be0      	cmp	r3, #224	; 0xe0
    1556:	d070      	beq.n	163a <fnet_icmp_error+0x246>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:382
             /* Do not send error on datagram sent as a link-layer broadcast or multicast.*/
            ||(nb->flags & FNET_NETBUF_FLAG_BROADCAST) || (nb->flags & FNET_NETBUF_FLAG_MULTICAST))
    1558:	687b      	ldr	r3, [r7, #4]
    155a:	699b      	ldr	r3, [r3, #24]
    155c:	f003 0302 	and.w	r3, r3, #2
    1560:	2b00      	cmp	r3, #0
    1562:	d16a      	bne.n	163a <fnet_icmp_error+0x246>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:382 (discriminator 1)
    1564:	687b      	ldr	r3, [r7, #4]
    1566:	699b      	ldr	r3, [r3, #24]
    1568:	f003 0304 	and.w	r3, r3, #4
    156c:	2b00      	cmp	r3, #0
    156e:	d164      	bne.n	163a <fnet_icmp_error+0x246>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:389
        {
            goto FREE_NB;
        }

        /* Construct ICMP error header*/
        if((nb_header = fnet_netbuf_new((sizeof(fnet_icmp_err_header_t)
    1570:	2008      	movs	r0, #8
    1572:	2100      	movs	r1, #0
    1574:	f001 f8aa 	bl	26cc <fnet_netbuf_new>
    1578:	61b8      	str	r0, [r7, #24]
    157a:	69bb      	ldr	r3, [r7, #24]
    157c:	2b00      	cmp	r3, #0
    157e:	d100      	bne.n	1582 <fnet_icmp_error+0x18e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:391
                                             - sizeof(fnet_ip_header_t)), FNET_FALSE)) == 0)
            goto FREE_NB;
    1580:	e05b      	b.n	163a <fnet_icmp_error+0x246>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:393

        icmpheader = nb_header->data_ptr;
    1582:	69bb      	ldr	r3, [r7, #24]
    1584:	68db      	ldr	r3, [r3, #12]
    1586:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:394
        icmpheader->fields.unused = 0;
    1588:	697b      	ldr	r3, [r7, #20]
    158a:	2200      	movs	r2, #0
    158c:	711a      	strb	r2, [r3, #4]
    158e:	2200      	movs	r2, #0
    1590:	715a      	strb	r2, [r3, #5]
    1592:	2200      	movs	r2, #0
    1594:	719a      	strb	r2, [r3, #6]
    1596:	2200      	movs	r2, #0
    1598:	71da      	strb	r2, [r3, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:396

        if(type == FNET_ICMP_PARAMPROB)
    159a:	7afb      	ldrb	r3, [r7, #11]
    159c:	2b0c      	cmp	r3, #12
    159e:	d10b      	bne.n	15b8 <fnet_icmp_error+0x1c4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:398
        {
            icmpheader->fields.ptr = fnet_htons((unsigned short)code);
    15a0:	7abb      	ldrb	r3, [r7, #10]
    15a2:	b29b      	uxth	r3, r3
    15a4:	4618      	mov	r0, r3
    15a6:	f00d ffbb 	bl	f520 <fnet_htons>
    15aa:	4603      	mov	r3, r0
    15ac:	461a      	mov	r2, r3
    15ae:	697b      	ldr	r3, [r7, #20]
    15b0:	809a      	strh	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:399
            code = 0;
    15b2:	2300      	movs	r3, #0
    15b4:	72bb      	strb	r3, [r7, #10]
    15b6:	e012      	b.n	15de <fnet_icmp_error+0x1ea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:401
        }
        else if((type == FNET_ICMP_PARAMPROB) && (code == FNET_ICMP_UNREACHABLE_NEEDFRAG) && netif)
    15b8:	7afb      	ldrb	r3, [r7, #11]
    15ba:	2b0c      	cmp	r3, #12
    15bc:	d10f      	bne.n	15de <fnet_icmp_error+0x1ea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:401 (discriminator 1)
    15be:	7abb      	ldrb	r3, [r7, #10]
    15c0:	2b04      	cmp	r3, #4
    15c2:	d10c      	bne.n	15de <fnet_icmp_error+0x1ea>
    15c4:	68fb      	ldr	r3, [r7, #12]
    15c6:	2b00      	cmp	r3, #0
    15c8:	d009      	beq.n	15de <fnet_icmp_error+0x1ea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:402
            icmpheader->fields.mtu = fnet_htons((unsigned short)netif->mtu);
    15ca:	68fb      	ldr	r3, [r7, #12]
    15cc:	691b      	ldr	r3, [r3, #16]
    15ce:	b29b      	uxth	r3, r3
    15d0:	4618      	mov	r0, r3
    15d2:	f00d ffa5 	bl	f520 <fnet_htons>
    15d6:	4603      	mov	r3, r0
    15d8:	461a      	mov	r2, r3
    15da:	697b      	ldr	r3, [r7, #20]
    15dc:	809a      	strh	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:404

        icmpheader->header.type = type;
    15de:	697b      	ldr	r3, [r7, #20]
    15e0:	7afa      	ldrb	r2, [r7, #11]
    15e2:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:405
        icmpheader->header.code = code;
    15e4:	697b      	ldr	r3, [r7, #20]
    15e6:	7aba      	ldrb	r2, [r7, #10]
    15e8:	705a      	strb	r2, [r3, #1]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:407

        if(((FNET_IP_HEADER_GET_HEADER_LENGTH(ipheader) << 2) + 8) < nb->total_length)
    15ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    15ec:	781b      	ldrb	r3, [r3, #0]
    15ee:	f003 030f 	and.w	r3, r3, #15
    15f2:	009b      	lsls	r3, r3, #2
    15f4:	3308      	adds	r3, #8
    15f6:	461a      	mov	r2, r3
    15f8:	687b      	ldr	r3, [r7, #4]
    15fa:	695b      	ldr	r3, [r3, #20]
    15fc:	429a      	cmp	r2, r3
    15fe:	d20e      	bcs.n	161e <fnet_icmp_error+0x22a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:408
            fnet_netbuf_trim(&nb, (int)(((FNET_IP_HEADER_GET_HEADER_LENGTH(ipheader) << 2) + 8) - nb->total_length));
    1600:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1602:	781b      	ldrb	r3, [r3, #0]
    1604:	f003 030f 	and.w	r3, r3, #15
    1608:	009b      	lsls	r3, r3, #2
    160a:	461a      	mov	r2, r3
    160c:	687b      	ldr	r3, [r7, #4]
    160e:	695b      	ldr	r3, [r3, #20]
    1610:	1ad3      	subs	r3, r2, r3
    1612:	3308      	adds	r3, #8
    1614:	1d3a      	adds	r2, r7, #4
    1616:	4610      	mov	r0, r2
    1618:	4619      	mov	r1, r3
    161a:	f001 fb4f 	bl	2cbc <fnet_netbuf_trim>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:410

        nb = fnet_netbuf_concat(nb_header, nb);
    161e:	687b      	ldr	r3, [r7, #4]
    1620:	69b8      	ldr	r0, [r7, #24]
    1622:	4619      	mov	r1, r3
    1624:	f001 fcf8 	bl	3018 <fnet_netbuf_concat>
    1628:	4603      	mov	r3, r0
    162a:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:412

        fnet_icmp_output(netif, destination_addr, source_addr, nb);
    162c:	687b      	ldr	r3, [r7, #4]
    162e:	68f8      	ldr	r0, [r7, #12]
    1630:	69f9      	ldr	r1, [r7, #28]
    1632:	6a3a      	ldr	r2, [r7, #32]
    1634:	f7ff feb0 	bl	1398 <fnet_icmp_output>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:414

        return;
    1638:	e003      	b.n	1642 <fnet_icmp_error+0x24e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:417

FREE_NB:
        fnet_netbuf_free_chain(nb);
    163a:	687b      	ldr	r3, [r7, #4]
    163c:	4618      	mov	r0, r3
    163e:	f001 fa5f 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_icmp.c:419
    }
}
    1642:	3728      	adds	r7, #40	; 0x28
    1644:	46bd      	mov	sp, r7
    1646:	bd80      	pop	{r7, pc}

00001648 <fnet_inet_ntoa>:
fnet_inet_ntoa():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:67
*
* DESCRIPTION:The function converts an (IPv4) Internet network address 
*             into a string in Internet standard dotted format.
*************************************************************************/
char *fnet_inet_ntoa( struct in_addr addr, char *res_str )
{
    1648:	b580      	push	{r7, lr}
    164a:	b082      	sub	sp, #8
    164c:	af00      	add	r7, sp, #0
    164e:	6078      	str	r0, [r7, #4]
    1650:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:68
    return  fnet_inet_ntop_ip4(&addr.s_addr, res_str, FNET_IP4_ADDR_STR_SIZE);
    1652:	1d3b      	adds	r3, r7, #4
    1654:	4618      	mov	r0, r3
    1656:	6839      	ldr	r1, [r7, #0]
    1658:	2210      	movs	r2, #16
    165a:	f000 f8d5 	bl	1808 <fnet_inet_ntop_ip4>
    165e:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:69
}
    1660:	4618      	mov	r0, r3
    1662:	3708      	adds	r7, #8
    1664:	46bd      	mov	sp, r7
    1666:	bd80      	pop	{r7, pc}

00001668 <fnet_inet_aton>:
fnet_inet_aton():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:79
* DESCRIPTION:The function converts a string containing an (IPv4) 
*             Internet Protocol dotted address into a suitable binary 
*             representation of the Internet address.
*************************************************************************/
int fnet_inet_aton( char *cp, struct in_addr *addr )
{
    1668:	b580      	push	{r7, lr}
    166a:	b082      	sub	sp, #8
    166c:	af00      	add	r7, sp, #0
    166e:	6078      	str	r0, [r7, #4]
    1670:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:80
    return fnet_inet_pton_ip4(cp, &addr->s_addr);
    1672:	683b      	ldr	r3, [r7, #0]
    1674:	6878      	ldr	r0, [r7, #4]
    1676:	4619      	mov	r1, r3
    1678:	f000 f858 	bl	172c <fnet_inet_pton_ip4>
    167c:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:81
}
    167e:	4618      	mov	r0, r3
    1680:	3708      	adds	r7, #8
    1682:	46bd      	mov	sp, r7
    1684:	bd80      	pop	{r7, pc}
    1686:	bf00      	nop

00001688 <fnet_inet_ntop>:
fnet_inet_ntop():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:90
*
* DESCRIPTION:The function converts network format IPv4 and IPv6 address 
*               to presentation/text format (string).
*************************************************************************/ 
char *fnet_inet_ntop(fnet_address_family_t family, const void *addr, char *str, int str_len)
{
    1688:	b580      	push	{r7, lr}
    168a:	b084      	sub	sp, #16
    168c:	af00      	add	r7, sp, #0
    168e:	60b9      	str	r1, [r7, #8]
    1690:	607a      	str	r2, [r7, #4]
    1692:	603b      	str	r3, [r7, #0]
    1694:	4603      	mov	r3, r0
    1696:	81fb      	strh	r3, [r7, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:91
	switch (family)
    1698:	89fb      	ldrh	r3, [r7, #14]
    169a:	2b01      	cmp	r3, #1
    169c:	d106      	bne.n	16ac <fnet_inet_ntop+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:95
	{
    #if FNET_CFG_IP4         
    	case AF_INET:
    		return (fnet_inet_ntop_ip4((fnet_ip4_addr_t *)addr, str, str_len));
    169e:	68b8      	ldr	r0, [r7, #8]
    16a0:	6879      	ldr	r1, [r7, #4]
    16a2:	683a      	ldr	r2, [r7, #0]
    16a4:	f000 f8b0 	bl	1808 <fnet_inet_ntop_ip4>
    16a8:	4603      	mov	r3, r0
    16aa:	e000      	b.n	16ae <fnet_inet_ntop+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:102
    #if FNET_CFG_IP6 
    	case AF_INET6:
    		return (fnet_inet_ntop_ip6((fnet_ip6_addr_t *)addr, str, str_len));
    #endif 
    	default:
    		return (FNET_NULL);
    16ac:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:104
	}
}
    16ae:	4618      	mov	r0, r3
    16b0:	3710      	adds	r7, #16
    16b2:	46bd      	mov	sp, r7
    16b4:	bd80      	pop	{r7, pc}
    16b6:	bf00      	nop

000016b8 <fnet_inet_pton>:
fnet_inet_pton():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:113
*
* DESCRIPTION:The function converts from presentation format (string)
*	        to network format.
*************************************************************************/
int fnet_inet_pton(fnet_address_family_t family, const char *str, void *addr, int addr_len)
{   
    16b8:	b580      	push	{r7, lr}
    16ba:	b084      	sub	sp, #16
    16bc:	af00      	add	r7, sp, #0
    16be:	60b9      	str	r1, [r7, #8]
    16c0:	607a      	str	r2, [r7, #4]
    16c2:	603b      	str	r3, [r7, #0]
    16c4:	4603      	mov	r3, r0
    16c6:	81fb      	strh	r3, [r7, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:114
    switch (family)
    16c8:	89fb      	ldrh	r3, [r7, #14]
    16ca:	2b01      	cmp	r3, #1
    16cc:	d10b      	bne.n	16e6 <fnet_inet_pton+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:118
    {
#if FNET_CFG_IP4 
        case AF_INET:
            if(addr_len < sizeof(fnet_ip4_addr_t))
    16ce:	683b      	ldr	r3, [r7, #0]
    16d0:	2b03      	cmp	r3, #3
    16d2:	d802      	bhi.n	16da <fnet_inet_pton+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:120
            {
                return FNET_ERR;
    16d4:	f04f 33ff 	mov.w	r3, #4294967295
    16d8:	e007      	b.n	16ea <fnet_inet_pton+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:122
            }
            return fnet_inet_pton_ip4(str, addr);
    16da:	68b8      	ldr	r0, [r7, #8]
    16dc:	6879      	ldr	r1, [r7, #4]
    16de:	f000 f825 	bl	172c <fnet_inet_pton_ip4>
    16e2:	4603      	mov	r3, r0
    16e4:	e001      	b.n	16ea <fnet_inet_pton+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:133
                return FNET_ERR;   	
            }
            return fnet_inet_pton_ip6(str, addr);
#endif /* FNET_CFG_IP6 */             
        default:
            return FNET_ERR;
    16e6:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:135
    }
}
    16ea:	4618      	mov	r0, r3
    16ec:	3710      	adds	r7, #16
    16ee:	46bd      	mov	sp, r7
    16f0:	bd80      	pop	{r7, pc}
    16f2:	bf00      	nop

000016f4 <fnet_inet_ptos>:
fnet_inet_ptos():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:144
*
* DESCRIPTION:The function converts from presentation format (string)
*	        to struct sockaddr.
*************************************************************************/
int fnet_inet_ptos (char *str, struct sockaddr *addr)
{   
    16f4:	b580      	push	{r7, lr}
    16f6:	b082      	sub	sp, #8
    16f8:	af00      	add	r7, sp, #0
    16fa:	6078      	str	r0, [r7, #4]
    16fc:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:146
#if FNET_CFG_IP4    
    if(fnet_inet_pton(AF_INET, str, addr->sa_data, sizeof(addr->sa_data)) == FNET_OK)
    16fe:	683b      	ldr	r3, [r7, #0]
    1700:	3304      	adds	r3, #4
    1702:	2001      	movs	r0, #1
    1704:	6879      	ldr	r1, [r7, #4]
    1706:	461a      	mov	r2, r3
    1708:	2304      	movs	r3, #4
    170a:	f7ff ffd5 	bl	16b8 <fnet_inet_pton>
    170e:	4603      	mov	r3, r0
    1710:	2b00      	cmp	r3, #0
    1712:	d104      	bne.n	171e <fnet_inet_ptos+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:147
        addr->sa_family = AF_INET;
    1714:	683b      	ldr	r3, [r7, #0]
    1716:	2201      	movs	r2, #1
    1718:	801a      	strh	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:157
        addr->sa_family = AF_INET6;
    else    
#endif /* FNET_CFG_IP6 */ 
        return FNET_ERR;
        
    return FNET_OK;    
    171a:	2300      	movs	r3, #0
    171c:	e001      	b.n	1722 <fnet_inet_ptos+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:155
#if FNET_CFG_IP6 
    if(fnet_inet_pton(AF_INET6, str, addr->sa_data, sizeof(addr->sa_data)) == FNET_OK)
        addr->sa_family = AF_INET6;
    else    
#endif /* FNET_CFG_IP6 */ 
        return FNET_ERR;
    171e:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:158
        
    return FNET_OK;    
}
    1722:	4618      	mov	r0, r3
    1724:	3708      	adds	r7, #8
    1726:	46bd      	mov	sp, r7
    1728:	bd80      	pop	{r7, pc}
    172a:	bf00      	nop

0000172c <fnet_inet_pton_ip4>:
fnet_inet_pton_ip4():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:167
*
* DESCRIPTION:The function converts from presentation format (string)
*	        to IPv4 address.
*************************************************************************/ 
static int fnet_inet_pton_ip4( const char *str, fnet_ip4_addr_t *addr)
{
    172c:	b580      	push	{r7, lr}
    172e:	b088      	sub	sp, #32
    1730:	af00      	add	r7, sp, #0
    1732:	6078      	str	r0, [r7, #4]
    1734:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:168
	int                 is_digit = 0;
    1736:	2300      	movs	r3, #0
    1738:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:169
	int                 octets = 0;
    173a:	2300      	movs	r3, #0
    173c:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:175
	int                 ch;
	unsigned char       tmp[sizeof(*addr)];
	unsigned char       *tp;
	unsigned int        val;

	*(tp = tmp) = 0;
    173e:	f107 0308 	add.w	r3, r7, #8
    1742:	617b      	str	r3, [r7, #20]
    1744:	697b      	ldr	r3, [r7, #20]
    1746:	2200      	movs	r2, #0
    1748:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:177
	
	while ((ch = *str++) != '\0')
    174a:	e041      	b.n	17d0 <fnet_inet_pton_ip4+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:180
	{
	    /* If "c" is digit. */
        if((ch >= '0') && (ch <= '9'))
    174c:	693b      	ldr	r3, [r7, #16]
    174e:	2b2f      	cmp	r3, #47	; 0x2f
    1750:	dd2c      	ble.n	17ac <fnet_inet_pton_ip4+0x80>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:180 (discriminator 1)
    1752:	693b      	ldr	r3, [r7, #16]
    1754:	2b39      	cmp	r3, #57	; 0x39
    1756:	dc29      	bgt.n	17ac <fnet_inet_pton_ip4+0x80>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:182
		{
	        val = (unsigned int)(*tp * 10 + (ch - '0'));		    
    1758:	697b      	ldr	r3, [r7, #20]
    175a:	781b      	ldrb	r3, [r3, #0]
    175c:	461a      	mov	r2, r3
    175e:	4613      	mov	r3, r2
    1760:	009b      	lsls	r3, r3, #2
    1762:	4413      	add	r3, r2
    1764:	005b      	lsls	r3, r3, #1
    1766:	461a      	mov	r2, r3
    1768:	693b      	ldr	r3, [r7, #16]
    176a:	3b30      	subs	r3, #48	; 0x30
    176c:	4413      	add	r3, r2
    176e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:184

			if (is_digit && *tp == 0)
    1770:	69fb      	ldr	r3, [r7, #28]
    1772:	2b00      	cmp	r3, #0
    1774:	d004      	beq.n	1780 <fnet_inet_pton_ip4+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:184 (discriminator 1)
    1776:	697b      	ldr	r3, [r7, #20]
    1778:	781b      	ldrb	r3, [r3, #0]
    177a:	2b00      	cmp	r3, #0
    177c:	d100      	bne.n	1780 <fnet_inet_pton_ip4+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:185
                goto ERROR;
    177e:	e03d      	b.n	17fc <fnet_inet_pton_ip4+0xd0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:187
				
			if (val > 255)
    1780:	68fb      	ldr	r3, [r7, #12]
    1782:	2bff      	cmp	r3, #255	; 0xff
    1784:	d900      	bls.n	1788 <fnet_inet_pton_ip4+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:188
                goto ERROR;
    1786:	e039      	b.n	17fc <fnet_inet_pton_ip4+0xd0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:190
				
			*tp = (unsigned char)val;
    1788:	68fb      	ldr	r3, [r7, #12]
    178a:	b2da      	uxtb	r2, r3
    178c:	697b      	ldr	r3, [r7, #20]
    178e:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:192
			
			if (!is_digit)
    1790:	69fb      	ldr	r3, [r7, #28]
    1792:	2b00      	cmp	r3, #0
    1794:	d109      	bne.n	17aa <fnet_inet_pton_ip4+0x7e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:194
			{
				if (++octets > 4)
    1796:	69bb      	ldr	r3, [r7, #24]
    1798:	3301      	adds	r3, #1
    179a:	61bb      	str	r3, [r7, #24]
    179c:	69bb      	ldr	r3, [r7, #24]
    179e:	2b04      	cmp	r3, #4
    17a0:	dd00      	ble.n	17a4 <fnet_inet_pton_ip4+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:195
                    goto ERROR;
    17a2:	e02b      	b.n	17fc <fnet_inet_pton_ip4+0xd0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:197
					
				is_digit = 1;
    17a4:	2301      	movs	r3, #1
    17a6:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:192
			if (val > 255)
                goto ERROR;
				
			*tp = (unsigned char)val;
			
			if (!is_digit)
    17a8:	e012      	b.n	17d0 <fnet_inet_pton_ip4+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:192 (discriminator 1)
    17aa:	e011      	b.n	17d0 <fnet_inet_pton_ip4+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:200
                    goto ERROR;
					
				is_digit = 1;
			}
		} 
		else if (ch == '.' && is_digit)
    17ac:	693b      	ldr	r3, [r7, #16]
    17ae:	2b2e      	cmp	r3, #46	; 0x2e
    17b0:	d124      	bne.n	17fc <fnet_inet_pton_ip4+0xd0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:200 (discriminator 1)
    17b2:	69fb      	ldr	r3, [r7, #28]
    17b4:	2b00      	cmp	r3, #0
    17b6:	d021      	beq.n	17fc <fnet_inet_pton_ip4+0xd0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:202
		{
			if (octets == 4)
    17b8:	69bb      	ldr	r3, [r7, #24]
    17ba:	2b04      	cmp	r3, #4
    17bc:	d100      	bne.n	17c0 <fnet_inet_pton_ip4+0x94>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:203
                goto ERROR;
    17be:	e01d      	b.n	17fc <fnet_inet_pton_ip4+0xd0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:205
				
			*++tp = 0;
    17c0:	697b      	ldr	r3, [r7, #20]
    17c2:	3301      	adds	r3, #1
    17c4:	617b      	str	r3, [r7, #20]
    17c6:	697b      	ldr	r3, [r7, #20]
    17c8:	2200      	movs	r2, #0
    17ca:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:206
			is_digit = 0;
    17cc:	2300      	movs	r3, #0
    17ce:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:177 (discriminator 1)
	unsigned char       *tp;
	unsigned int        val;

	*(tp = tmp) = 0;
	
	while ((ch = *str++) != '\0')
    17d0:	687b      	ldr	r3, [r7, #4]
    17d2:	1c5a      	adds	r2, r3, #1
    17d4:	607a      	str	r2, [r7, #4]
    17d6:	781b      	ldrb	r3, [r3, #0]
    17d8:	b25b      	sxtb	r3, r3
    17da:	613b      	str	r3, [r7, #16]
    17dc:	693b      	ldr	r3, [r7, #16]
    17de:	2b00      	cmp	r3, #0
    17e0:	d1b4      	bne.n	174c <fnet_inet_pton_ip4+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:211
			is_digit = 0;
		} 
		else
		    goto ERROR;
	}
	if (octets < 4)
    17e2:	69bb      	ldr	r3, [r7, #24]
    17e4:	2b03      	cmp	r3, #3
    17e6:	dc00      	bgt.n	17ea <fnet_inet_pton_ip4+0xbe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:212
		goto ERROR;
    17e8:	e008      	b.n	17fc <fnet_inet_pton_ip4+0xd0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:214
		
	fnet_memcpy(addr, tmp, sizeof(*addr));
    17ea:	f107 0308 	add.w	r3, r7, #8
    17ee:	6838      	ldr	r0, [r7, #0]
    17f0:	4619      	mov	r1, r3
    17f2:	2204      	movs	r2, #4
    17f4:	f004 f84e 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:216
	
	return (FNET_OK);
    17f8:	2300      	movs	r3, #0
    17fa:	e001      	b.n	1800 <fnet_inet_pton_ip4+0xd4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:218
ERROR:	
    return (FNET_ERR);	
    17fc:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:219
}
    1800:	4618      	mov	r0, r3
    1802:	3720      	adds	r7, #32
    1804:	46bd      	mov	sp, r7
    1806:	bd80      	pop	{r7, pc}

00001808 <fnet_inet_ntop_ip4>:
fnet_inet_ntop_ip4():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:340
*
* DESCRIPTION:The function converts IPv4 address 
*               to presentation format (string).
*************************************************************************/  
static char *fnet_inet_ntop_ip4 ( fnet_ip4_addr_t *addr, char *str, int str_len)
{
    1808:	b590      	push	{r4, r7, lr}
    180a:	b08f      	sub	sp, #60	; 0x3c
    180c:	af04      	add	r7, sp, #16
    180e:	60f8      	str	r0, [r7, #12]
    1810:	60b9      	str	r1, [r7, #8]
    1812:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:343
	char                tmp[FNET_IP4_ADDR_STR_SIZE];
	int                 length;
	unsigned char       *ptr = (unsigned char *) addr;
    1814:	68fb      	ldr	r3, [r7, #12]
    1816:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:345

    length=fnet_snprintf(tmp, sizeof(tmp), "%d.%d.%d.%d", ptr[0], ptr[1], ptr[2], ptr[3]);
    1818:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    181a:	781b      	ldrb	r3, [r3, #0]
    181c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    181e:	3201      	adds	r2, #1
    1820:	7812      	ldrb	r2, [r2, #0]
    1822:	4614      	mov	r4, r2
    1824:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    1826:	3202      	adds	r2, #2
    1828:	7812      	ldrb	r2, [r2, #0]
    182a:	4610      	mov	r0, r2
    182c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    182e:	3203      	adds	r2, #3
    1830:	7812      	ldrb	r2, [r2, #0]
    1832:	4611      	mov	r1, r2
    1834:	f107 0210 	add.w	r2, r7, #16
    1838:	9400      	str	r4, [sp, #0]
    183a:	9001      	str	r0, [sp, #4]
    183c:	9102      	str	r1, [sp, #8]
    183e:	4610      	mov	r0, r2
    1840:	2110      	movs	r1, #16
    1842:	4a0d      	ldr	r2, [pc, #52]	; (1878 <fnet_inet_ntop_ip4+0x70>)
    1844:	f00a fc72 	bl	c12c <fnet_snprintf>
    1848:	6238      	str	r0, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:347
    
	if ((length <= 0) || (length >= str_len))
    184a:	6a3b      	ldr	r3, [r7, #32]
    184c:	2b00      	cmp	r3, #0
    184e:	dd03      	ble.n	1858 <fnet_inet_ntop_ip4+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:347 (discriminator 1)
    1850:	6a3a      	ldr	r2, [r7, #32]
    1852:	687b      	ldr	r3, [r7, #4]
    1854:	429a      	cmp	r2, r3
    1856:	db01      	blt.n	185c <fnet_inet_ntop_ip4+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:349
	{
		return (FNET_NULL);
    1858:	2300      	movs	r3, #0
    185a:	e008      	b.n	186e <fnet_inet_ntop_ip4+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:353
	}
	else
	{
	    fnet_strncpy(str, tmp, (unsigned long)str_len);
    185c:	687b      	ldr	r3, [r7, #4]
    185e:	f107 0210 	add.w	r2, r7, #16
    1862:	68b8      	ldr	r0, [r7, #8]
    1864:	4611      	mov	r1, r2
    1866:	461a      	mov	r2, r3
    1868:	f004 face 	bl	5e08 <fnet_strncpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:355

	    return (str);
    186c:	68bb      	ldr	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_inet.c:357
	}
}
    186e:	4618      	mov	r0, r3
    1870:	372c      	adds	r7, #44	; 0x2c
    1872:	46bd      	mov	sp, r7
    1874:	bd90      	pop	{r4, r7, pc}
    1876:	bf00      	nop
    1878:	00013f54 	.word	0x00013f54

0000187c <fnet_ip_init>:
fnet_ip_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:110
* NAME: fnet_ip_init
*
* DESCRIPTION: This function makes initialization of the IP layer. 
*************************************************************************/
int fnet_ip_init( void )
{
    187c:	b580      	push	{r7, lr}
    187e:	b082      	sub	sp, #8
    1880:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:111
    int result = FNET_ERR;
    1882:	f04f 33ff 	mov.w	r3, #4294967295
    1886:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:128
        /* Clear the multicast list.*/
        fnet_memset_zero( fnet_ip_multicast_list, sizeof(fnet_ip_multicast_list_entry_t)*FNET_CFG_MULTICAST_MAX );
    #endif /* FNET_CFG_MULTICAST */
        
        /* Install SW Interrupt handler. */
    	ip_event = fnet_event_init(fnet_ip_input_low, 0);
    1888:	4809      	ldr	r0, [pc, #36]	; (18b0 <fnet_ip_init+0x34>)
    188a:	2100      	movs	r1, #0
    188c:	f000 fc46 	bl	211c <fnet_event_init>
    1890:	4602      	mov	r2, r0
    1892:	4b08      	ldr	r3, [pc, #32]	; (18b4 <fnet_ip_init+0x38>)
    1894:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:129
    	if(ip_event != FNET_ERR)
    1896:	4b07      	ldr	r3, [pc, #28]	; (18b4 <fnet_ip_init+0x38>)
    1898:	681b      	ldr	r3, [r3, #0]
    189a:	f1b3 3fff 	cmp.w	r3, #4294967295
    189e:	d001      	beq.n	18a4 <fnet_ip_init+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:130
    		result = FNET_OK;
    18a0:	2300      	movs	r3, #0
    18a2:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:136
        
#if FNET_CFG_IP4_FRAGMENTATION
    }
#endif    
    
    return result;
    18a4:	687b      	ldr	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:137
}
    18a6:	4618      	mov	r0, r3
    18a8:	3708      	adds	r7, #8
    18aa:	46bd      	mov	sp, r7
    18ac:	bd80      	pop	{r7, pc}
    18ae:	bf00      	nop
    18b0:	00001b79 	.word	0x00001b79
    18b4:	10000748 	.word	0x10000748

000018b8 <fnet_ip_release>:
fnet_ip_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:146
*
* DESCRIPTION: This function makes release of the all resources 
*              allocated for IP layer module.
*************************************************************************/
void fnet_ip_release( void )
{
    18b8:	b580      	push	{r7, lr}
    18ba:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:147
    fnet_ip_drain();
    18bc:	f000 fa2e 	bl	1d1c <fnet_ip_drain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:154

    fnet_timer_free(ip_timer_ptr);
    ip_timer_ptr = 0;

#endif
}
    18c0:	bd80      	pop	{r7, pc}
    18c2:	bf00      	nop

000018c4 <fnet_ip_route>:
fnet_ip_route():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:163
*
* DESCRIPTION: This function performs IP routing 
*              on an outgoing IP packet. 
*************************************************************************/
fnet_netif_t *fnet_ip_route( fnet_ip4_addr_t dest_ip )
{
    18c4:	b580      	push	{r7, lr}
    18c6:	b084      	sub	sp, #16
    18c8:	af00      	add	r7, sp, #0
    18ca:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:165
    fnet_netif_t    *netif;
    fnet_netif_t    *res_netif = fnet_netif_get_default() ;
    18cc:	f001 ff52 	bl	3774 <fnet_netif_get_default>
    18d0:	60b8      	str	r0, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:167

    for (netif = fnet_netif_list; netif != 0; netif = netif->next)
    18d2:	4b0d      	ldr	r3, [pc, #52]	; (1908 <fnet_ip_route+0x44>)
    18d4:	681b      	ldr	r3, [r3, #0]
    18d6:	60fb      	str	r3, [r7, #12]
    18d8:	e00e      	b.n	18f8 <fnet_ip_route+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:169
    {
        if((dest_ip & netif->ip4_addr.subnetmask) == (netif->ip4_addr.address & netif->ip4_addr.subnetmask))
    18da:	68fb      	ldr	r3, [r7, #12]
    18dc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    18de:	687b      	ldr	r3, [r7, #4]
    18e0:	405a      	eors	r2, r3
    18e2:	68fb      	ldr	r3, [r7, #12]
    18e4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    18e6:	4013      	ands	r3, r2
    18e8:	2b00      	cmp	r3, #0
    18ea:	d102      	bne.n	18f2 <fnet_ip_route+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:171
        {
            res_netif = netif;
    18ec:	68fb      	ldr	r3, [r7, #12]
    18ee:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:172
            break;
    18f0:	e005      	b.n	18fe <fnet_ip_route+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:167
fnet_netif_t *fnet_ip_route( fnet_ip4_addr_t dest_ip )
{
    fnet_netif_t    *netif;
    fnet_netif_t    *res_netif = fnet_netif_get_default() ;

    for (netif = fnet_netif_list; netif != 0; netif = netif->next)
    18f2:	68fb      	ldr	r3, [r7, #12]
    18f4:	681b      	ldr	r3, [r3, #0]
    18f6:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:167 (discriminator 1)
    18f8:	68fb      	ldr	r3, [r7, #12]
    18fa:	2b00      	cmp	r3, #0
    18fc:	d1ed      	bne.n	18da <fnet_ip_route+0x16>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:185
        res_netif = FNET_LOOP_IF;
    }
#endif /* FNET_CFG_LOOPBACK */


    return res_netif;
    18fe:	68bb      	ldr	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:186
}
    1900:	4618      	mov	r0, r3
    1902:	3710      	adds	r7, #16
    1904:	46bd      	mov	sp, r7
    1906:	bd80      	pop	{r7, pc}
    1908:	1000baec 	.word	0x1000baec

0000190c <fnet_ip_will_fragment>:
fnet_ip_will_fragment():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:195
*
* DESCRIPTION: This function returns FNET_TRUE if the protocol message 
*              will be fragmented by IPv4, and FNET_FALSE otherwise.
*************************************************************************/
int fnet_ip_will_fragment( fnet_netif_t *netif, unsigned long protocol_message_size)
{
    190c:	b480      	push	{r7}
    190e:	b085      	sub	sp, #20
    1910:	af00      	add	r7, sp, #0
    1912:	6078      	str	r0, [r7, #4]
    1914:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:198
    int res;

    if((protocol_message_size + sizeof(fnet_ip_header_t)) > netif->mtu)
    1916:	683b      	ldr	r3, [r7, #0]
    1918:	f103 0214 	add.w	r2, r3, #20
    191c:	687b      	ldr	r3, [r7, #4]
    191e:	691b      	ldr	r3, [r3, #16]
    1920:	429a      	cmp	r2, r3
    1922:	d902      	bls.n	192a <fnet_ip_will_fragment+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:199
        res = FNET_TRUE;
    1924:	2301      	movs	r3, #1
    1926:	60fb      	str	r3, [r7, #12]
    1928:	e001      	b.n	192e <fnet_ip_will_fragment+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:201
    else
        res = FNET_FALSE;
    192a:	2300      	movs	r3, #0
    192c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:203

    return res;
    192e:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:204
}
    1930:	4618      	mov	r0, r3
    1932:	3714      	adds	r7, #20
    1934:	46bd      	mov	sp, r7
    1936:	f85d 7b04 	ldr.w	r7, [sp], #4
    193a:	4770      	bx	lr

0000193c <fnet_ip_output>:
fnet_ip_output():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:220
*************************************************************************/
int fnet_ip_output( fnet_netif_t *netif,    fnet_ip4_addr_t src_ip, fnet_ip4_addr_t dest_ip,
                    unsigned char protocol, unsigned char tos,     unsigned char ttl,
                    fnet_netbuf_t *nb,      int DF, int do_not_route,
                    FNET_COMP_PACKED_VAR unsigned short *checksum )
{
    193c:	b580      	push	{r7, lr}
    193e:	b088      	sub	sp, #32
    1940:	af00      	add	r7, sp, #0
    1942:	60f8      	str	r0, [r7, #12]
    1944:	60b9      	str	r1, [r7, #8]
    1946:	607a      	str	r2, [r7, #4]
    1948:	70fb      	strb	r3, [r7, #3]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:227
    fnet_netbuf_t           *nb_header;
    fnet_ip_header_t        *ipheader;
    unsigned long           total_length;
    int                     error_code;

    if(netif == 0)
    194a:	68fb      	ldr	r3, [r7, #12]
    194c:	2b00      	cmp	r3, #0
    194e:	d10a      	bne.n	1966 <fnet_ip_output+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:228
        if((netif = fnet_ip_route(dest_ip)) == 0) /* No route */
    1950:	687b      	ldr	r3, [r7, #4]
    1952:	4618      	mov	r0, r3
    1954:	f7ff ffb6 	bl	18c4 <fnet_ip_route>
    1958:	60f8      	str	r0, [r7, #12]
    195a:	68fb      	ldr	r3, [r7, #12]
    195c:	2b00      	cmp	r3, #0
    195e:	d102      	bne.n	1966 <fnet_ip_output+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:230
        {
            error_code = FNET_ERR_NETUNREACH;
    1960:	2310      	movs	r3, #16
    1962:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:231
            goto DROP;
    1964:	e097      	b.n	1a96 <fnet_ip_output+0x15a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:235
        }

    /* If source address not specified, use address of outgoing interface */
    if(src_ip == INADDR_ANY)
    1966:	68bb      	ldr	r3, [r7, #8]
    1968:	2b00      	cmp	r3, #0
    196a:	d102      	bne.n	1972 <fnet_ip_output+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:237
    {
        src_ip = netif->ip4_addr.address;
    196c:	68fb      	ldr	r3, [r7, #12]
    196e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    1970:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:240
    };

    if((nb->total_length + sizeof(fnet_ip_header_t)) > FNET_IP_MAX_PACKET)
    1972:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    1974:	695b      	ldr	r3, [r3, #20]
    1976:	3314      	adds	r3, #20
    1978:	f5b3 5f20 	cmp.w	r3, #10240	; 0x2800
    197c:	d902      	bls.n	1984 <fnet_ip_output+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:242
    {
        error_code = FNET_ERR_MSGSIZE;
    197e:	2308      	movs	r3, #8
    1980:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:243
        goto DROP;
    1982:	e088      	b.n	1a96 <fnet_ip_output+0x15a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:247
    }

    /* Construct IP header */
    if((nb_header = fnet_netbuf_new(sizeof(fnet_ip_header_t), FNET_TRUE)) == 0)
    1984:	2014      	movs	r0, #20
    1986:	2101      	movs	r1, #1
    1988:	f000 fea0 	bl	26cc <fnet_netbuf_new>
    198c:	61b8      	str	r0, [r7, #24]
    198e:	69bb      	ldr	r3, [r7, #24]
    1990:	2b00      	cmp	r3, #0
    1992:	d102      	bne.n	199a <fnet_ip_output+0x5e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:249
    {
        error_code = FNET_ERR_NOMEM;   
    1994:	2303      	movs	r3, #3
    1996:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:250
        goto DROP;
    1998:	e07d      	b.n	1a96 <fnet_ip_output+0x15a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:254
    }
    
    /* Pseudo checksum. */
    if(checksum)
    199a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    199c:	2b00      	cmp	r3, #0
    199e:	d00e      	beq.n	19be <fnet_ip_output+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:255
        *checksum = fnet_checksum_pseudo_end( *checksum, (char *)&src_ip, (char *)&dest_ip, sizeof(fnet_ip4_addr_t) );
    19a0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    19a2:	8819      	ldrh	r1, [r3, #0]
    19a4:	f107 0208 	add.w	r2, r7, #8
    19a8:	1d3b      	adds	r3, r7, #4
    19aa:	4608      	mov	r0, r1
    19ac:	4611      	mov	r1, r2
    19ae:	461a      	mov	r2, r3
    19b0:	2304      	movs	r3, #4
    19b2:	f7ff f9bd 	bl	d30 <fnet_checksum_pseudo_end>
    19b6:	4603      	mov	r3, r0
    19b8:	461a      	mov	r2, r3
    19ba:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    19bc:	801a      	strh	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:257
    
    ipheader = nb_header->data_ptr;
    19be:	69bb      	ldr	r3, [r7, #24]
    19c0:	68db      	ldr	r3, [r3, #12]
    19c2:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:259

    FNET_IP_HEADER_SET_VERSION(ipheader, (unsigned char)FNET_IP_VERSION); /* version =4 */
    19c4:	697b      	ldr	r3, [r7, #20]
    19c6:	781b      	ldrb	r3, [r3, #0]
    19c8:	b2db      	uxtb	r3, r3
    19ca:	f003 030f 	and.w	r3, r3, #15
    19ce:	b2db      	uxtb	r3, r3
    19d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    19d4:	b2db      	uxtb	r3, r3
    19d6:	b2da      	uxtb	r2, r3
    19d8:	697b      	ldr	r3, [r7, #20]
    19da:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:260
    ipheader->id = fnet_htons(ip_id++);              /* Id */
    19dc:	4b32      	ldr	r3, [pc, #200]	; (1aa8 <fnet_ip_output+0x16c>)
    19de:	881b      	ldrh	r3, [r3, #0]
    19e0:	1c5a      	adds	r2, r3, #1
    19e2:	b291      	uxth	r1, r2
    19e4:	4a30      	ldr	r2, [pc, #192]	; (1aa8 <fnet_ip_output+0x16c>)
    19e6:	8011      	strh	r1, [r2, #0]
    19e8:	4618      	mov	r0, r3
    19ea:	f00d fd99 	bl	f520 <fnet_htons>
    19ee:	4603      	mov	r3, r0
    19f0:	461a      	mov	r2, r3
    19f2:	697b      	ldr	r3, [r7, #20]
    19f4:	809a      	strh	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:262

    ipheader->tos = tos;                 /* Type of service */
    19f6:	697b      	ldr	r3, [r7, #20]
    19f8:	f897 2028 	ldrb.w	r2, [r7, #40]	; 0x28
    19fc:	705a      	strb	r2, [r3, #1]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:263
    total_length = (unsigned short)(nb->total_length + sizeof(fnet_ip_header_t)); /* total length*/
    19fe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    1a00:	695b      	ldr	r3, [r3, #20]
    1a02:	b29b      	uxth	r3, r3
    1a04:	3314      	adds	r3, #20
    1a06:	b29b      	uxth	r3, r3
    1a08:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:264
    FNET_IP_HEADER_SET_HEADER_LENGTH(ipheader, sizeof(fnet_ip_header_t) >> 2);
    1a0a:	697b      	ldr	r3, [r7, #20]
    1a0c:	781b      	ldrb	r3, [r3, #0]
    1a0e:	f023 030f 	bic.w	r3, r3, #15
    1a12:	b2db      	uxtb	r3, r3
    1a14:	f043 0305 	orr.w	r3, r3, #5
    1a18:	b2da      	uxtb	r2, r3
    1a1a:	697b      	ldr	r3, [r7, #20]
    1a1c:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:265
    ipheader->flags_fragment_offset = 0x0000; /* flags & fragment offset field */
    1a1e:	697b      	ldr	r3, [r7, #20]
    1a20:	2200      	movs	r2, #0
    1a22:	719a      	strb	r2, [r3, #6]
    1a24:	2200      	movs	r2, #0
    1a26:	71da      	strb	r2, [r3, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:267

    if(DF)
    1a28:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    1a2a:	2b00      	cmp	r3, #0
    1a2c:	d007      	beq.n	1a3e <fnet_ip_output+0x102>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:268
        ipheader->flags_fragment_offset |= FNET_HTONS(FNET_IP_DF);
    1a2e:	697b      	ldr	r3, [r7, #20]
    1a30:	88db      	ldrh	r3, [r3, #6]
    1a32:	b29b      	uxth	r3, r3
    1a34:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    1a38:	b29a      	uxth	r2, r3
    1a3a:	697b      	ldr	r3, [r7, #20]
    1a3c:	80da      	strh	r2, [r3, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:270

    ipheader->ttl = ttl;                 /* time to live */
    1a3e:	697b      	ldr	r3, [r7, #20]
    1a40:	f897 202c 	ldrb.w	r2, [r7, #44]	; 0x2c
    1a44:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:271
    ipheader->protocol = protocol;       /* protocol */
    1a46:	697b      	ldr	r3, [r7, #20]
    1a48:	78fa      	ldrb	r2, [r7, #3]
    1a4a:	725a      	strb	r2, [r3, #9]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:272
    ipheader->source_addr = src_ip;      /* source address */
    1a4c:	68ba      	ldr	r2, [r7, #8]
    1a4e:	697b      	ldr	r3, [r7, #20]
    1a50:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:273
    ipheader->desination_addr = dest_ip; /* destination address */
    1a52:	687a      	ldr	r2, [r7, #4]
    1a54:	697b      	ldr	r3, [r7, #20]
    1a56:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:275

    ipheader->total_length = fnet_htons((unsigned short)total_length);
    1a58:	693b      	ldr	r3, [r7, #16]
    1a5a:	b29b      	uxth	r3, r3
    1a5c:	4618      	mov	r0, r3
    1a5e:	f00d fd5f 	bl	f520 <fnet_htons>
    1a62:	4603      	mov	r3, r0
    1a64:	461a      	mov	r2, r3
    1a66:	697b      	ldr	r3, [r7, #20]
    1a68:	805a      	strh	r2, [r3, #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:277
    
    nb = fnet_netbuf_concat(nb_header, nb);
    1a6a:	69b8      	ldr	r0, [r7, #24]
    1a6c:	6b39      	ldr	r1, [r7, #48]	; 0x30
    1a6e:	f001 fad3 	bl	3018 <fnet_netbuf_concat>
    1a72:	6338      	str	r0, [r7, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:279

    if(total_length > netif->mtu) /* IP Fragmentation. */ 
    1a74:	68fb      	ldr	r3, [r7, #12]
    1a76:	691a      	ldr	r2, [r3, #16]
    1a78:	693b      	ldr	r3, [r7, #16]
    1a7a:	429a      	cmp	r2, r3
    1a7c:	d202      	bcs.n	1a84 <fnet_ip_output+0x148>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:381
                fnet_netbuf_free_chain(nb);
        }

#else

        error_code = FNET_ERR_MSGSIZE;   /* Discard datagram.*/
    1a7e:	2308      	movs	r3, #8
    1a80:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:382
        goto DROP; 
    1a82:	e008      	b.n	1a96 <fnet_ip_output+0x15a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:389
#endif  /* FNET_CFG_IP4_FRAGMENTATION */

    }
    else
    {
        fnet_ip_netif_output(netif, dest_ip, nb, do_not_route);
    1a84:	687b      	ldr	r3, [r7, #4]
    1a86:	68f8      	ldr	r0, [r7, #12]
    1a88:	4619      	mov	r1, r3
    1a8a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    1a8c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    1a8e:	f000 f80d 	bl	1aac <fnet_ip_netif_output>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:392
    }

    return (FNET_OK);
    1a92:	2300      	movs	r3, #0
    1a94:	e003      	b.n	1a9e <fnet_ip_output+0x162>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:395

DROP:
    fnet_netbuf_free_chain(nb);           /* Discard datagram */ 
    1a96:	6b38      	ldr	r0, [r7, #48]	; 0x30
    1a98:	f001 f832 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:397
           
    return (error_code);
    1a9c:	69fb      	ldr	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:399
    
}
    1a9e:	4618      	mov	r0, r3
    1aa0:	3720      	adds	r7, #32
    1aa2:	46bd      	mov	sp, r7
    1aa4:	bd80      	pop	{r7, pc}
    1aa6:	bf00      	nop
    1aa8:	1000074c 	.word	0x1000074c

00001aac <fnet_ip_netif_output>:
fnet_ip_netif_output():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:407
* NAME: fnet_ip_netif_output
*
* DESCRIPTION:
*************************************************************************/
static void fnet_ip_netif_output(struct fnet_netif *netif, fnet_ip4_addr_t dest_ip_addr, fnet_netbuf_t* nb, int do_not_route)
{
    1aac:	b580      	push	{r7, lr}
    1aae:	b086      	sub	sp, #24
    1ab0:	af00      	add	r7, sp, #0
    1ab2:	60f8      	str	r0, [r7, #12]
    1ab4:	60b9      	str	r1, [r7, #8]
    1ab6:	607a      	str	r2, [r7, #4]
    1ab8:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:408
    fnet_ip_header_t        *ipheader = (fnet_ip_header_t *)nb->data_ptr;
    1aba:	687b      	ldr	r3, [r7, #4]
    1abc:	68db      	ldr	r3, [r3, #12]
    1abe:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:411
    
    /* IPv4 Header Checksum*/
    ipheader->checksum = 0;
    1ac0:	697b      	ldr	r3, [r7, #20]
    1ac2:	2200      	movs	r2, #0
    1ac4:	729a      	strb	r2, [r3, #10]
    1ac6:	2200      	movs	r2, #0
    1ac8:	72da      	strb	r2, [r3, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:418
#if FNET_CFG_CPU_ETH_HW_TX_IP_CHECKSUM 
    if(netif->features & FNET_NETIF_FEATURE_HW_TX_IP_CHECKSUM)
        nb->flags |= FNET_NETBUF_FLAG_HW_IP_CHECKSUM;
    else
#endif    
        ipheader->checksum = fnet_checksum(nb, FNET_IP_HEADER_GET_HEADER_LENGTH(ipheader) << 2); /* IP checksum*/
    1aca:	697b      	ldr	r3, [r7, #20]
    1acc:	781b      	ldrb	r3, [r3, #0]
    1ace:	f003 030f 	and.w	r3, r3, #15
    1ad2:	009b      	lsls	r3, r3, #2
    1ad4:	6878      	ldr	r0, [r7, #4]
    1ad6:	4619      	mov	r1, r3
    1ad8:	f7ff f88a 	bl	bf0 <fnet_checksum>
    1adc:	4603      	mov	r3, r0
    1ade:	461a      	mov	r2, r3
    1ae0:	697b      	ldr	r3, [r7, #20]
    1ae2:	815a      	strh	r2, [r3, #10]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:422

     
    if( /* Datagrams sent to a broadcast address */
        (fnet_ip_addr_is_broadcast (dest_ip_addr, netif)
    1ae4:	68b8      	ldr	r0, [r7, #8]
    1ae6:	68f9      	ldr	r1, [r7, #12]
    1ae8:	f000 f930 	bl	1d4c <fnet_ip_addr_is_broadcast>
    1aec:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:421
    else
#endif    
        ipheader->checksum = fnet_checksum(nb, FNET_IP_HEADER_GET_HEADER_LENGTH(ipheader) << 2); /* IP checksum*/

     
    if( /* Datagrams sent to a broadcast address */
    1aee:	2b00      	cmp	r3, #0
    1af0:	d113      	bne.n	1b1a <fnet_ip_netif_output+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:424
        (fnet_ip_addr_is_broadcast (dest_ip_addr, netif)
        /* Datagrams sent to a multicast address. */
        ||FNET_IP4_ADDR_IS_MULTICAST(dest_ip_addr)) )
    1af2:	68bb      	ldr	r3, [r7, #8]
    1af4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    1af8:	2be0      	cmp	r3, #224	; 0xe0
    1afa:	d00e      	beq.n	1b1a <fnet_ip_netif_output+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:441
        }
#endif /* FNET_CFG_LOOPBACK && (FNET_CFG_LOOPBACK_MULTICAST || FNET_CFG_LOOPBACK_BROADCAST) */            
    }
    else
    {
        if(!((do_not_route) || ((dest_ip_addr & netif->ip4_addr.subnetmask) == (netif->ip4_addr.address & netif->ip4_addr.subnetmask))))
    1afc:	683b      	ldr	r3, [r7, #0]
    1afe:	2b00      	cmp	r3, #0
    1b00:	d10b      	bne.n	1b1a <fnet_ip_netif_output+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:441 (discriminator 1)
    1b02:	68fb      	ldr	r3, [r7, #12]
    1b04:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1b06:	68bb      	ldr	r3, [r7, #8]
    1b08:	405a      	eors	r2, r3
    1b0a:	68fb      	ldr	r3, [r7, #12]
    1b0c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    1b0e:	4013      	ands	r3, r2
    1b10:	2b00      	cmp	r3, #0
    1b12:	d002      	beq.n	1b1a <fnet_ip_netif_output+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:444
        {
            /* Use the default router as the address to send.*/
            dest_ip_addr = netif->ip4_addr.gateway;
    1b14:	68fb      	ldr	r3, [r7, #12]
    1b16:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    1b18:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:449
        }
    }
   
    /* Send to Interface.*/
    netif->api->output_ip4(netif, dest_ip_addr, nb);
    1b1a:	68fb      	ldr	r3, [r7, #12]
    1b1c:	699b      	ldr	r3, [r3, #24]
    1b1e:	691b      	ldr	r3, [r3, #16]
    1b20:	68f8      	ldr	r0, [r7, #12]
    1b22:	68b9      	ldr	r1, [r7, #8]
    1b24:	687a      	ldr	r2, [r7, #4]
    1b26:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:450
}
    1b28:	3718      	adds	r7, #24
    1b2a:	46bd      	mov	sp, r7
    1b2c:	bd80      	pop	{r7, pc}
    1b2e:	bf00      	nop

00001b30 <fnet_ip_input>:
fnet_ip_input():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:458
* NAME: fnet_ip_input
*
* DESCRIPTION: IP input function.
*************************************************************************/
void fnet_ip_input( fnet_netif_t *netif, fnet_netbuf_t *nb )
{
    1b30:	b580      	push	{r7, lr}
    1b32:	b082      	sub	sp, #8
    1b34:	af00      	add	r7, sp, #0
    1b36:	6078      	str	r0, [r7, #4]
    1b38:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:459
    if(netif && nb)
    1b3a:	687b      	ldr	r3, [r7, #4]
    1b3c:	2b00      	cmp	r3, #0
    1b3e:	d013      	beq.n	1b68 <fnet_ip_input+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:459 (discriminator 1)
    1b40:	683b      	ldr	r3, [r7, #0]
    1b42:	2b00      	cmp	r3, #0
    1b44:	d010      	beq.n	1b68 <fnet_ip_input+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:462
    {

        if(fnet_ip_queue_append(&ip_queue, netif, nb) != FNET_OK)
    1b46:	480a      	ldr	r0, [pc, #40]	; (1b70 <fnet_ip_input+0x40>)
    1b48:	6879      	ldr	r1, [r7, #4]
    1b4a:	683a      	ldr	r2, [r7, #0]
    1b4c:	f000 fa1a 	bl	1f84 <fnet_ip_queue_append>
    1b50:	4603      	mov	r3, r0
    1b52:	2b00      	cmp	r3, #0
    1b54:	d003      	beq.n	1b5e <fnet_ip_input+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:464
        {
            fnet_netbuf_free_chain(nb);
    1b56:	6838      	ldr	r0, [r7, #0]
    1b58:	f000 ffd2 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:465
            return;
    1b5c:	e004      	b.n	1b68 <fnet_ip_input+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:469
        }

        /* Initiate S/W Interrupt*/
        fnet_event_raise(ip_event);
    1b5e:	4b05      	ldr	r3, [pc, #20]	; (1b74 <fnet_ip_input+0x44>)
    1b60:	681b      	ldr	r3, [r3, #0]
    1b62:	4618      	mov	r0, r3
    1b64:	f000 fbb6 	bl	22d4 <fnet_event_raise>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:471
    }
}
    1b68:	3708      	adds	r7, #8
    1b6a:	46bd      	mov	sp, r7
    1b6c:	bd80      	pop	{r7, pc}
    1b6e:	bf00      	nop
    1b70:	10000740 	.word	0x10000740
    1b74:	10000748 	.word	0x10000748

00001b78 <fnet_ip_input_low>:
fnet_ip_input_low():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:479
* NAME: fnet_ip_input_low
*
* DESCRIPTION: This function performs handling of incoming datagrams.
*************************************************************************/
void fnet_ip_input_low( void *cookie )
{
    1b78:	b590      	push	{r4, r7, lr}
    1b7a:	b08f      	sub	sp, #60	; 0x3c
    1b7c:	af02      	add	r7, sp, #8
    1b7e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:493
    unsigned long       total_length;
    unsigned long       header_length;

    FNET_COMP_UNUSED_ARG(cookie);
    
    fnet_isr_lock();
    1b80:	f000 fb66 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:495
 
    while((nb = fnet_ip_queue_read(&ip_queue, &netif)) != 0)
    1b84:	e0b7      	b.n	1cf6 <fnet_ip_input_low+0x17e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:497
    {
        nb->next_chain = 0;
    1b86:	68bb      	ldr	r3, [r7, #8]
    1b88:	2200      	movs	r2, #0
    1b8a:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:500

        /* The header must reside in contiguous area of memory. */
        if((tmp_nb = fnet_netbuf_pullup(nb, sizeof(fnet_ip_header_t)))  == 0 )
    1b8c:	68bb      	ldr	r3, [r7, #8]
    1b8e:	4618      	mov	r0, r3
    1b90:	2114      	movs	r1, #20
    1b92:	f000 ffdb 	bl	2b4c <fnet_netbuf_pullup>
    1b96:	62f8      	str	r0, [r7, #44]	; 0x2c
    1b98:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    1b9a:	2b00      	cmp	r3, #0
    1b9c:	d104      	bne.n	1ba8 <fnet_ip_input_low+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:502
        {
            fnet_netbuf_free_chain(nb);
    1b9e:	68bb      	ldr	r3, [r7, #8]
    1ba0:	4618      	mov	r0, r3
    1ba2:	f000 ffad 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:503
            continue;
    1ba6:	e0a6      	b.n	1cf6 <fnet_ip_input_low+0x17e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:506
        }

        nb = tmp_nb;
    1ba8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    1baa:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:508

        hdr = nb->data_ptr;
    1bac:	68bb      	ldr	r3, [r7, #8]
    1bae:	68db      	ldr	r3, [r3, #12]
    1bb0:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:509
        destination_addr = hdr->desination_addr;
    1bb2:	6abb      	ldr	r3, [r7, #40]	; 0x28
    1bb4:	691b      	ldr	r3, [r3, #16]
    1bb6:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:510
        source_addr = hdr->source_addr;
    1bb8:	6abb      	ldr	r3, [r7, #40]	; 0x28
    1bba:	68db      	ldr	r3, [r3, #12]
    1bbc:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:511
        total_length = fnet_ntohs(hdr->total_length);
    1bbe:	6abb      	ldr	r3, [r7, #40]	; 0x28
    1bc0:	885b      	ldrh	r3, [r3, #2]
    1bc2:	b29b      	uxth	r3, r3
    1bc4:	4618      	mov	r0, r3
    1bc6:	f00d fcab 	bl	f520 <fnet_htons>
    1bca:	4603      	mov	r3, r0
    1bcc:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:512
        header_length = (unsigned long)FNET_IP_HEADER_GET_HEADER_LENGTH(hdr) << 2;
    1bce:	6abb      	ldr	r3, [r7, #40]	; 0x28
    1bd0:	781b      	ldrb	r3, [r3, #0]
    1bd2:	f003 030f 	and.w	r3, r3, #15
    1bd6:	009b      	lsls	r3, r3, #2
    1bd8:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:516
        
        fnet_ip_trace("RX", hdr); /* Print IP header. */
        
        if((nb->total_length >= total_length)                           /* Check the amount of data*/
    1bda:	68bb      	ldr	r3, [r7, #8]
    1bdc:	695a      	ldr	r2, [r3, #20]
    1bde:	69fb      	ldr	r3, [r7, #28]
    1be0:	429a      	cmp	r2, r3
    1be2:	f0c0 8084 	bcc.w	1cee <fnet_ip_input_low+0x176>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:517
            && (nb->total_length >= sizeof(fnet_ip_header_t)) 
    1be6:	68bb      	ldr	r3, [r7, #8]
    1be8:	695b      	ldr	r3, [r3, #20]
    1bea:	2b13      	cmp	r3, #19
    1bec:	d97f      	bls.n	1cee <fnet_ip_input_low+0x176>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:518
            && (FNET_IP_HEADER_GET_VERSION(hdr) == 4)                   /* Check the IP Version*/
    1bee:	6abb      	ldr	r3, [r7, #40]	; 0x28
    1bf0:	781b      	ldrb	r3, [r3, #0]
    1bf2:	091b      	lsrs	r3, r3, #4
    1bf4:	b2db      	uxtb	r3, r3
    1bf6:	2b04      	cmp	r3, #4
    1bf8:	d179      	bne.n	1cee <fnet_ip_input_low+0x176>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:519
            && (header_length >= sizeof(fnet_ip_header_t))              /* Check the IP header length*/
    1bfa:	69bb      	ldr	r3, [r7, #24]
    1bfc:	2b13      	cmp	r3, #19
    1bfe:	d976      	bls.n	1cee <fnet_ip_input_low+0x176>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:525
    #if FNET_CFG_CPU_ETH_HW_TX_IP_CHECKSUM || FNET_CFG_CPU_ETH_HW_RX_IP_CHECKSUM
            && ((netif->features | FNET_NETIF_FEATURE_HW_RX_IP_CHECKSUM) 
                || (nb->flags | FNET_NETBUF_FLAG_HW_IP_CHECKSUM)
                || (fnet_checksum(nb, (int)header_length) == 0) )       /* Checksum*/
    #else
            && (fnet_checksum(nb, (int)header_length) == 0)             /* Checksum*/
    1c00:	68ba      	ldr	r2, [r7, #8]
    1c02:	69bb      	ldr	r3, [r7, #24]
    1c04:	4610      	mov	r0, r2
    1c06:	4619      	mov	r1, r3
    1c08:	f7fe fff2 	bl	bf0 <fnet_checksum>
    1c0c:	4603      	mov	r3, r0
    1c0e:	2b00      	cmp	r3, #0
    1c10:	d16d      	bne.n	1cee <fnet_ip_input_low+0x176>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:527
    #endif
            && ((destination_addr == netif->ip4_addr.address)           /* It is final destination*/                            
    1c12:	68fb      	ldr	r3, [r7, #12]
    1c14:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1c16:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    1c18:	429a      	cmp	r2, r3
    1c1a:	d007      	beq.n	1c2c <fnet_ip_input_low+0xb4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:528
                || fnet_ip_addr_is_broadcast(destination_addr, netif) 
    1c1c:	68fb      	ldr	r3, [r7, #12]
    1c1e:	6a78      	ldr	r0, [r7, #36]	; 0x24
    1c20:	4619      	mov	r1, r3
    1c22:	f000 f893 	bl	1d4c <fnet_ip_addr_is_broadcast>
    1c26:	4603      	mov	r3, r0
    1c28:	2b00      	cmp	r3, #0
    1c2a:	d060      	beq.n	1cee <fnet_ip_input_low+0x176>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:535
                || (FNET_IP4_ADDR_IS_MULTICAST(destination_addr))
    #endif                
                ) 
        )
        {   
            if(nb->total_length > total_length) 
    1c2c:	68bb      	ldr	r3, [r7, #8]
    1c2e:	695a      	ldr	r2, [r3, #20]
    1c30:	69fb      	ldr	r3, [r7, #28]
    1c32:	429a      	cmp	r2, r3
    1c34:	d909      	bls.n	1c4a <fnet_ip_input_low+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:538
            {
                /* Logical size and the physical size of the packet should be the same.*/
                fnet_netbuf_trim(&nb, (int)(total_length - nb->total_length)); 
    1c36:	68bb      	ldr	r3, [r7, #8]
    1c38:	695b      	ldr	r3, [r3, #20]
    1c3a:	69fa      	ldr	r2, [r7, #28]
    1c3c:	1ad3      	subs	r3, r2, r3
    1c3e:	f107 0208 	add.w	r2, r7, #8
    1c42:	4610      	mov	r0, r2
    1c44:	4619      	mov	r1, r3
    1c46:	f001 f839 	bl	2cbc <fnet_netbuf_trim>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:542
            }

            /* Reassembly.*/
            if(hdr->flags_fragment_offset & ~FNET_HTONS(FNET_IP_DF)) /* the MF bit or fragment offset is nonzero.*/
    1c4a:	6abb      	ldr	r3, [r7, #40]	; 0x28
    1c4c:	88db      	ldrh	r3, [r3, #6]
    1c4e:	b29b      	uxth	r3, r3
    1c50:	f023 0340 	bic.w	r3, r3, #64	; 0x40
    1c54:	2b00      	cmp	r3, #0
    1c56:	d004      	beq.n	1c62 <fnet_ip_input_low+0xea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:551
                    continue;

                hdr = nb->data_ptr;
                header_length = (unsigned long)FNET_IP_HEADER_GET_HEADER_LENGTH(hdr) << 2;
    #else
                fnet_netbuf_free_chain(nb);
    1c58:	68bb      	ldr	r3, [r7, #8]
    1c5a:	4618      	mov	r0, r3
    1c5c:	f000 ff50 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:552
                continue;
    1c60:	e049      	b.n	1cf6 <fnet_ip_input_low+0x17e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:567
                {
                    nb->flags |= FNET_NETBUF_FLAG_HW_PROTOCOL_CHECKSUM;
                }
            }
    #endif
            if(nb->total_length > FNET_IP_MAX_PACKET)
    1c62:	68bb      	ldr	r3, [r7, #8]
    1c64:	695b      	ldr	r3, [r3, #20]
    1c66:	f5b3 5f20 	cmp.w	r3, #10240	; 0x2800
    1c6a:	d904      	bls.n	1c76 <fnet_ip_input_low+0xfe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:569
            {
                fnet_netbuf_free_chain(nb); /* Discard datagram */
    1c6c:	68bb      	ldr	r3, [r7, #8]
    1c6e:	4618      	mov	r0, r3
    1c70:	f000 ff46 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:570
                continue;
    1c74:	e03f      	b.n	1cf6 <fnet_ip_input_low+0x17e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:573
            }

            ip4_nb = fnet_netbuf_copy(nb, 0, (int)(header_length + 8), 0);
    1c76:	68ba      	ldr	r2, [r7, #8]
    1c78:	69bb      	ldr	r3, [r7, #24]
    1c7a:	3308      	adds	r3, #8
    1c7c:	4610      	mov	r0, r2
    1c7e:	2100      	movs	r1, #0
    1c80:	461a      	mov	r2, r3
    1c82:	2300      	movs	r3, #0
    1c84:	f000 fd7c 	bl	2780 <fnet_netbuf_copy>
    1c88:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:575

            fnet_netbuf_trim(&nb, (int)header_length);
    1c8a:	69bb      	ldr	r3, [r7, #24]
    1c8c:	f107 0208 	add.w	r2, r7, #8
    1c90:	4610      	mov	r0, r2
    1c92:	4619      	mov	r1, r3
    1c94:	f001 f812 	bl	2cbc <fnet_netbuf_trim>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:582
            /**************************************
             *  Send to upper layers. 
             **************************************/
#if FNET_CFG_RAW
            /* RAW Sockets inpput.*/
            fnet_raw_input_ip4(netif, source_addr, destination_addr, nb, ip4_nb);                         
    1c98:	68fa      	ldr	r2, [r7, #12]
    1c9a:	68bb      	ldr	r3, [r7, #8]
    1c9c:	6979      	ldr	r1, [r7, #20]
    1c9e:	9100      	str	r1, [sp, #0]
    1ca0:	4610      	mov	r0, r2
    1ca2:	6a39      	ldr	r1, [r7, #32]
    1ca4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    1ca6:	f002 f83b 	bl	3d20 <fnet_raw_input_ip4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:586
#endif            

            /* Find transport protocol.*/
            if((protocol = fnet_prot_find(AF_INET, SOCK_UNSPEC, hdr->protocol)) != FNET_NULL)
    1caa:	6abb      	ldr	r3, [r7, #40]	; 0x28
    1cac:	7a5b      	ldrb	r3, [r3, #9]
    1cae:	2001      	movs	r0, #1
    1cb0:	2100      	movs	r1, #0
    1cb2:	461a      	mov	r2, r3
    1cb4:	f001 ff7e 	bl	3bb4 <fnet_prot_find>
    1cb8:	6138      	str	r0, [r7, #16]
    1cba:	693b      	ldr	r3, [r7, #16]
    1cbc:	2b00      	cmp	r3, #0
    1cbe:	d00a      	beq.n	1cd6 <fnet_ip_input_low+0x15e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:588
            {
                protocol->prot_input_ip4(netif, source_addr, destination_addr, nb, ip4_nb);
    1cc0:	693b      	ldr	r3, [r7, #16]
    1cc2:	695c      	ldr	r4, [r3, #20]
    1cc4:	68fa      	ldr	r2, [r7, #12]
    1cc6:	68bb      	ldr	r3, [r7, #8]
    1cc8:	6979      	ldr	r1, [r7, #20]
    1cca:	9100      	str	r1, [sp, #0]
    1ccc:	4610      	mov	r0, r2
    1cce:	6a39      	ldr	r1, [r7, #32]
    1cd0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    1cd2:	47a0      	blx	r4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:586
            /* RAW Sockets inpput.*/
            fnet_raw_input_ip4(netif, source_addr, destination_addr, nb, ip4_nb);                         
#endif            

            /* Find transport protocol.*/
            if((protocol = fnet_prot_find(AF_INET, SOCK_UNSPEC, hdr->protocol)) != FNET_NULL)
    1cd4:	e00f      	b.n	1cf6 <fnet_ip_input_low+0x17e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:594
                /* After that nb may point to wrong place. Do not use it.*/
            }
            else 
            /* No protocol found.*/                                  
            {
                fnet_netbuf_free_chain(nb);
    1cd6:	68bb      	ldr	r3, [r7, #8]
    1cd8:	4618      	mov	r0, r3
    1cda:	f000 ff11 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:595
                fnet_icmp_error(netif, FNET_ICMP_UNREACHABLE, FNET_ICMP_UNREACHABLE_PROTOCOL, ip4_nb);
    1cde:	68fb      	ldr	r3, [r7, #12]
    1ce0:	4618      	mov	r0, r3
    1ce2:	2103      	movs	r1, #3
    1ce4:	2202      	movs	r2, #2
    1ce6:	697b      	ldr	r3, [r7, #20]
    1ce8:	f7ff fb84 	bl	13f4 <fnet_icmp_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:586
            /* RAW Sockets inpput.*/
            fnet_raw_input_ip4(netif, source_addr, destination_addr, nb, ip4_nb);                         
#endif            

            /* Find transport protocol.*/
            if((protocol = fnet_prot_find(AF_INET, SOCK_UNSPEC, hdr->protocol)) != FNET_NULL)
    1cec:	e003      	b.n	1cf6 <fnet_ip_input_low+0x17e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:600
                fnet_icmp_error(netif, FNET_ICMP_UNREACHABLE, FNET_ICMP_UNREACHABLE_PROTOCOL, ip4_nb);
            }
        }
        else
        {
            fnet_netbuf_free_chain(nb);
    1cee:	68bb      	ldr	r3, [r7, #8]
    1cf0:	4618      	mov	r0, r3
    1cf2:	f000 ff05 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:495 (discriminator 1)

    FNET_COMP_UNUSED_ARG(cookie);
    
    fnet_isr_lock();
 
    while((nb = fnet_ip_queue_read(&ip_queue, &netif)) != 0)
    1cf6:	f107 030c 	add.w	r3, r7, #12
    1cfa:	4807      	ldr	r0, [pc, #28]	; (1d18 <fnet_ip_input_low+0x1a0>)
    1cfc:	4619      	mov	r1, r3
    1cfe:	f000 f97b 	bl	1ff8 <fnet_ip_queue_read>
    1d02:	4603      	mov	r3, r0
    1d04:	60bb      	str	r3, [r7, #8]
    1d06:	68bb      	ldr	r3, [r7, #8]
    1d08:	2b00      	cmp	r3, #0
    1d0a:	f47f af3c 	bne.w	1b86 <fnet_ip_input_low+0xe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:604
        {
            fnet_netbuf_free_chain(nb);
        }
    } /* while end */
    
    fnet_isr_unlock();
    1d0e:	f000 faad 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:605
}
    1d12:	3734      	adds	r7, #52	; 0x34
    1d14:	46bd      	mov	sp, r7
    1d16:	bd90      	pop	{r4, r7, pc}
    1d18:	10000740 	.word	0x10000740

00001d1c <fnet_ip_drain>:
fnet_ip_drain():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:831
*
* DESCRIPTION: This function tries to free not critical parts 
*              of memory occupied by the IP module.
*************************************************************************/
void fnet_ip_drain( void )
{
    1d1c:	b580      	push	{r7, lr}
    1d1e:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:832
    fnet_isr_lock();
    1d20:	f000 fa96 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:843
        fnet_ip_frag_list_free(ip_frag_list_head);
    }

#endif

    while(((volatile fnet_netbuf_t *)ip_queue.head) != 0)
    1d24:	e005      	b.n	1d32 <fnet_ip_drain+0x16>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:845
    {
        fnet_netbuf_del_chain(&ip_queue.head, ip_queue.head);
    1d26:	4b08      	ldr	r3, [pc, #32]	; (1d48 <fnet_ip_drain+0x2c>)
    1d28:	681b      	ldr	r3, [r3, #0]
    1d2a:	4807      	ldr	r0, [pc, #28]	; (1d48 <fnet_ip_drain+0x2c>)
    1d2c:	4619      	mov	r1, r3
    1d2e:	f001 f9c5 	bl	30bc <fnet_netbuf_del_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:843 (discriminator 1)
        fnet_ip_frag_list_free(ip_frag_list_head);
    }

#endif

    while(((volatile fnet_netbuf_t *)ip_queue.head) != 0)
    1d32:	4b05      	ldr	r3, [pc, #20]	; (1d48 <fnet_ip_drain+0x2c>)
    1d34:	681b      	ldr	r3, [r3, #0]
    1d36:	2b00      	cmp	r3, #0
    1d38:	d1f5      	bne.n	1d26 <fnet_ip_drain+0xa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:848
    {
        fnet_netbuf_del_chain(&ip_queue.head, ip_queue.head);
    }

    ip_queue.count = 0;
    1d3a:	4b03      	ldr	r3, [pc, #12]	; (1d48 <fnet_ip_drain+0x2c>)
    1d3c:	2200      	movs	r2, #0
    1d3e:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:850

    fnet_isr_unlock();
    1d40:	f000 fa94 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:851
}
    1d44:	bd80      	pop	{r7, pc}
    1d46:	bf00      	nop
    1d48:	10000740 	.word	0x10000740

00001d4c <fnet_ip_addr_is_broadcast>:
fnet_ip_addr_is_broadcast():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1062
* NAME: fnet_ip_addr_is_broadcast
*
* DESCRIPTION: Is the address is broadcast?
*************************************************************************/
int fnet_ip_addr_is_broadcast( fnet_ip4_addr_t addr, fnet_netif_t *netif )
{
    1d4c:	b480      	push	{r7}
    1d4e:	b085      	sub	sp, #20
    1d50:	af00      	add	r7, sp, #0
    1d52:	6078      	str	r0, [r7, #4]
    1d54:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1064
    fnet_netif_ip4_addr_t   *netif_addr;
    int                     result = FNET_FALSE;
    1d56:	2300      	movs	r3, #0
    1d58:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1067
    
    
    if(addr == INADDR_BROADCAST || addr == INADDR_ANY) /* Limited broadcast */
    1d5a:	687b      	ldr	r3, [r7, #4]
    1d5c:	f1b3 3fff 	cmp.w	r3, #4294967295
    1d60:	d002      	beq.n	1d68 <fnet_ip_addr_is_broadcast+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1067 (discriminator 1)
    1d62:	687b      	ldr	r3, [r7, #4]
    1d64:	2b00      	cmp	r3, #0
    1d66:	d102      	bne.n	1d6e <fnet_ip_addr_is_broadcast+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1069
    {
        result = FNET_TRUE;
    1d68:	2301      	movs	r3, #1
    1d6a:	60fb      	str	r3, [r7, #12]
    1d6c:	e037      	b.n	1dde <fnet_ip_addr_is_broadcast+0x92>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1071
    }
    else if(netif == FNET_NULL)
    1d6e:	683b      	ldr	r3, [r7, #0]
    1d70:	2b00      	cmp	r3, #0
    1d72:	d120      	bne.n	1db6 <fnet_ip_addr_is_broadcast+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1074
    {
        fnet_os_mutex_lock();
        for (netif = fnet_netif_list; netif != 0; netif = netif->next)
    1d74:	4b1d      	ldr	r3, [pc, #116]	; (1dec <fnet_ip_addr_is_broadcast+0xa0>)
    1d76:	681b      	ldr	r3, [r3, #0]
    1d78:	603b      	str	r3, [r7, #0]
    1d7a:	e018      	b.n	1dae <fnet_ip_addr_is_broadcast+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1076
        {
            netif_addr = &(netif->ip4_addr);
    1d7c:	683b      	ldr	r3, [r7, #0]
    1d7e:	3324      	adds	r3, #36	; 0x24
    1d80:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1078
            
            if(addr == netif_addr->netbroadcast ||          /* Net-directed broadcast */
    1d82:	68bb      	ldr	r3, [r7, #8]
    1d84:	695a      	ldr	r2, [r3, #20]
    1d86:	687b      	ldr	r3, [r7, #4]
    1d88:	429a      	cmp	r2, r3
    1d8a:	d009      	beq.n	1da0 <fnet_ip_addr_is_broadcast+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1079 (discriminator 1)
                addr == netif_addr->subnetbroadcast ||      /* Subnet-directed broadcast */
    1d8c:	68bb      	ldr	r3, [r7, #8]
    1d8e:	699a      	ldr	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1078 (discriminator 1)
        fnet_os_mutex_lock();
        for (netif = fnet_netif_list; netif != 0; netif = netif->next)
        {
            netif_addr = &(netif->ip4_addr);
            
            if(addr == netif_addr->netbroadcast ||          /* Net-directed broadcast */
    1d90:	687b      	ldr	r3, [r7, #4]
    1d92:	429a      	cmp	r2, r3
    1d94:	d004      	beq.n	1da0 <fnet_ip_addr_is_broadcast+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1080
                addr == netif_addr->subnetbroadcast ||      /* Subnet-directed broadcast */
                addr == netif_addr->subnet)
    1d96:	68bb      	ldr	r3, [r7, #8]
    1d98:	68da      	ldr	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1079
        for (netif = fnet_netif_list; netif != 0; netif = netif->next)
        {
            netif_addr = &(netif->ip4_addr);
            
            if(addr == netif_addr->netbroadcast ||          /* Net-directed broadcast */
                addr == netif_addr->subnetbroadcast ||      /* Subnet-directed broadcast */
    1d9a:	687b      	ldr	r3, [r7, #4]
    1d9c:	429a      	cmp	r2, r3
    1d9e:	d103      	bne.n	1da8 <fnet_ip_addr_is_broadcast+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1082
                addr == netif_addr->subnet)
            {
                result = FNET_TRUE;
    1da0:	2301      	movs	r3, #1
    1da2:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1083
                break;
    1da4:	bf00      	nop
    1da6:	e01a      	b.n	1dde <fnet_ip_addr_is_broadcast+0x92>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1074
        result = FNET_TRUE;
    }
    else if(netif == FNET_NULL)
    {
        fnet_os_mutex_lock();
        for (netif = fnet_netif_list; netif != 0; netif = netif->next)
    1da8:	683b      	ldr	r3, [r7, #0]
    1daa:	681b      	ldr	r3, [r3, #0]
    1dac:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1074 (discriminator 1)
    1dae:	683b      	ldr	r3, [r7, #0]
    1db0:	2b00      	cmp	r3, #0
    1db2:	d1e3      	bne.n	1d7c <fnet_ip_addr_is_broadcast+0x30>
    1db4:	e013      	b.n	1dde <fnet_ip_addr_is_broadcast+0x92>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1090
        }
        fnet_os_mutex_unlock();
    }
    else
    {
        netif_addr = &(netif->ip4_addr);
    1db6:	683b      	ldr	r3, [r7, #0]
    1db8:	3324      	adds	r3, #36	; 0x24
    1dba:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1092
        
        if(addr == netif_addr->netbroadcast ||              /* Net-directed broadcast */
    1dbc:	68bb      	ldr	r3, [r7, #8]
    1dbe:	695a      	ldr	r2, [r3, #20]
    1dc0:	687b      	ldr	r3, [r7, #4]
    1dc2:	429a      	cmp	r2, r3
    1dc4:	d009      	beq.n	1dda <fnet_ip_addr_is_broadcast+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1093 (discriminator 1)
            addr == netif_addr->subnetbroadcast ||          /* Subnet-directed broadcast */
    1dc6:	68bb      	ldr	r3, [r7, #8]
    1dc8:	699a      	ldr	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1092 (discriminator 1)
    }
    else
    {
        netif_addr = &(netif->ip4_addr);
        
        if(addr == netif_addr->netbroadcast ||              /* Net-directed broadcast */
    1dca:	687b      	ldr	r3, [r7, #4]
    1dcc:	429a      	cmp	r2, r3
    1dce:	d004      	beq.n	1dda <fnet_ip_addr_is_broadcast+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1094
            addr == netif_addr->subnetbroadcast ||          /* Subnet-directed broadcast */
            addr == netif_addr->subnet)
    1dd0:	68bb      	ldr	r3, [r7, #8]
    1dd2:	68da      	ldr	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1093
    else
    {
        netif_addr = &(netif->ip4_addr);
        
        if(addr == netif_addr->netbroadcast ||              /* Net-directed broadcast */
            addr == netif_addr->subnetbroadcast ||          /* Subnet-directed broadcast */
    1dd4:	687b      	ldr	r3, [r7, #4]
    1dd6:	429a      	cmp	r2, r3
    1dd8:	d101      	bne.n	1dde <fnet_ip_addr_is_broadcast+0x92>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1096
            addr == netif_addr->subnet)
        {    
           result = FNET_TRUE;
    1dda:	2301      	movs	r3, #1
    1ddc:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1099
        }
    }
    return result;
    1dde:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1100
}
    1de0:	4618      	mov	r0, r3
    1de2:	3714      	adds	r7, #20
    1de4:	46bd      	mov	sp, r7
    1de6:	f85d 7b04 	ldr.w	r7, [sp], #4
    1dea:	4770      	bx	lr
    1dec:	1000baec 	.word	0x1000baec

00001df0 <fnet_ip_maximum_packet>:
fnet_ip_maximum_packet():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1107

//TBD ???
/*Todo path MTU discovery feature
 *Todo get MTU from a routing table, depending on destination MTU*/
unsigned long fnet_ip_maximum_packet( fnet_ip4_addr_t dest_ip ) 
{
    1df0:	b580      	push	{r7, lr}
    1df2:	b084      	sub	sp, #16
    1df4:	af00      	add	r7, sp, #0
    1df6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1115
#if FNET_CFG_IP4_FRAGMENTATION == 0

    {
        fnet_netif_t *netif;

        if((netif = fnet_ip_route(dest_ip)) == 0) /* No route*/
    1df8:	6878      	ldr	r0, [r7, #4]
    1dfa:	f7ff fd63 	bl	18c4 <fnet_ip_route>
    1dfe:	60b8      	str	r0, [r7, #8]
    1e00:	68bb      	ldr	r3, [r7, #8]
    1e02:	2b00      	cmp	r3, #0
    1e04:	d103      	bne.n	1e0e <fnet_ip_maximum_packet+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1116
            result = FNET_IP_MAX_PACKET;
    1e06:	f44f 5320 	mov.w	r3, #10240	; 0x2800
    1e0a:	60fb      	str	r3, [r7, #12]
    1e0c:	e002      	b.n	1e14 <fnet_ip_maximum_packet+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1118
        else
            result = netif->mtu;
    1e0e:	68bb      	ldr	r3, [r7, #8]
    1e10:	691b      	ldr	r3, [r3, #16]
    1e12:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1129

    result = FNET_IP_MAX_PACKET;

#endif

    result = (result - (FNET_IP_MAX_OPTIONS + sizeof(fnet_ip_header_t))) & (~0x3L);
    1e14:	68fb      	ldr	r3, [r7, #12]
    1e16:	3b3c      	subs	r3, #60	; 0x3c
    1e18:	f023 0303 	bic.w	r3, r3, #3
    1e1c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1131

    return result;
    1e1e:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1132
}
    1e20:	4618      	mov	r0, r3
    1e22:	3710      	adds	r7, #16
    1e24:	46bd      	mov	sp, r7
    1e26:	bd80      	pop	{r7, pc}

00001e28 <fnet_ip_setsockopt>:
fnet_ip_setsockopt():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1181
* NAME: fnet_ip_setsockopt
*
* DESCRIPTION: This function sets the value of IP socket option. 
*************************************************************************/
int fnet_ip_setsockopt( fnet_socket_t *sock, int level, int optname, char *optval, int optlen )
{
    1e28:	b580      	push	{r7, lr}
    1e2a:	b086      	sub	sp, #24
    1e2c:	af00      	add	r7, sp, #0
    1e2e:	60f8      	str	r0, [r7, #12]
    1e30:	60b9      	str	r1, [r7, #8]
    1e32:	607a      	str	r2, [r7, #4]
    1e34:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1184
    int error;

    if((optval) && (optlen))
    1e36:	683b      	ldr	r3, [r7, #0]
    1e38:	2b00      	cmp	r3, #0
    1e3a:	d036      	beq.n	1eaa <fnet_ip_setsockopt+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1184 (discriminator 1)
    1e3c:	6a3b      	ldr	r3, [r7, #32]
    1e3e:	2b00      	cmp	r3, #0
    1e40:	d033      	beq.n	1eaa <fnet_ip_setsockopt+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1187
    {
#if FNET_CFG_IP4    
        if((level == IPPROTO_IP) && (sock->protocol_interface->family & AF_INET))
    1e42:	68bb      	ldr	r3, [r7, #8]
    1e44:	2b00      	cmp	r3, #0
    1e46:	d12d      	bne.n	1ea4 <fnet_ip_setsockopt+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1187 (discriminator 1)
    1e48:	68fb      	ldr	r3, [r7, #12]
    1e4a:	695b      	ldr	r3, [r3, #20]
    1e4c:	889b      	ldrh	r3, [r3, #4]
    1e4e:	f003 0301 	and.w	r3, r3, #1
    1e52:	2b00      	cmp	r3, #0
    1e54:	d026      	beq.n	1ea4 <fnet_ip_setsockopt+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1189
        {
            switch(optname)      /* Socket options processing. */
    1e56:	687b      	ldr	r3, [r7, #4]
    1e58:	2b03      	cmp	r3, #3
    1e5a:	d002      	beq.n	1e62 <fnet_ip_setsockopt+0x3a>
    1e5c:	2b04      	cmp	r3, #4
    1e5e:	d00d      	beq.n	1e7c <fnet_ip_setsockopt+0x54>
    1e60:	e019      	b.n	1e96 <fnet_ip_setsockopt+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1193
            {
                /******************************/
                case IP_TOS: /* Set IP TOS for outgoing datagrams. */
                  if(optlen != sizeof(int))
    1e62:	6a3b      	ldr	r3, [r7, #32]
    1e64:	2b04      	cmp	r3, #4
    1e66:	d002      	beq.n	1e6e <fnet_ip_setsockopt+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1195
                  {
                      error = FNET_ERR_INVAL;
    1e68:	2306      	movs	r3, #6
    1e6a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1196
                      goto ERROR_SOCK;
    1e6c:	e020      	b.n	1eb0 <fnet_ip_setsockopt+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1199
                  }

                  sock->options.ip_opt.tos = (unsigned char) (*((int *)(optval)));
    1e6e:	683b      	ldr	r3, [r7, #0]
    1e70:	681b      	ldr	r3, [r3, #0]
    1e72:	b2da      	uxtb	r2, r3
    1e74:	68fb      	ldr	r3, [r7, #12]
    1e76:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1200
                  break;
    1e7a:	e00f      	b.n	1e9c <fnet_ip_setsockopt+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1203
                /******************************/
                case IP_TTL: /* Set IP TTL for outgoing datagrams. */
                  if(optlen != sizeof(int))
    1e7c:	6a3b      	ldr	r3, [r7, #32]
    1e7e:	2b04      	cmp	r3, #4
    1e80:	d002      	beq.n	1e88 <fnet_ip_setsockopt+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1205
                  {
                      error = FNET_ERR_INVAL;
    1e82:	2306      	movs	r3, #6
    1e84:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1206
                      goto ERROR_SOCK;
    1e86:	e013      	b.n	1eb0 <fnet_ip_setsockopt+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1209
                  }

                  sock->options.ip_opt.ttl = (unsigned char) (*((int *)(optval)));
    1e88:	683b      	ldr	r3, [r7, #0]
    1e8a:	681b      	ldr	r3, [r3, #0]
    1e8c:	b2da      	uxtb	r2, r3
    1e8e:	68fb      	ldr	r3, [r7, #12]
    1e90:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1210
                  break;
    1e94:	e002      	b.n	1e9c <fnet_ip_setsockopt+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1322
                    }
                    break;
    #endif /* FNET_CFG_MULTICAST */ 
                /******************************/               
                default:
                    error = FNET_ERR_NOPROTOOPT; /* The option is unknown or unsupported. */
    1e96:	2309      	movs	r3, #9
    1e98:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1323
                    goto ERROR_SOCK;
    1e9a:	e009      	b.n	1eb0 <fnet_ip_setsockopt+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1325
            }
        }
    1e9c:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1187
    int error;

    if((optval) && (optlen))
    {
#if FNET_CFG_IP4    
        if((level == IPPROTO_IP) && (sock->protocol_interface->family & AF_INET))
    1e9e:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1363
    {
        error = FNET_ERR_INVAL; /* Invalid argument.*/
        goto ERROR_SOCK;
    }

    return (FNET_OK);
    1ea0:	2300      	movs	r3, #0
    1ea2:	e00d      	b.n	1ec0 <fnet_ip_setsockopt+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1353
        }
        else

#endif          
        {
            error = FNET_ERR_INVAL; /* Invalid argument.*/
    1ea4:	2306      	movs	r3, #6
    1ea6:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1354
            goto ERROR_SOCK;        
    1ea8:	e002      	b.n	1eb0 <fnet_ip_setsockopt+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1359
        }
    }
    else
    {
        error = FNET_ERR_INVAL; /* Invalid argument.*/
    1eaa:	2306      	movs	r3, #6
    1eac:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1360
        goto ERROR_SOCK;
    1eae:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1366
    }

    return (FNET_OK);

ERROR_SOCK:
    sock->options.error = error;
    1eb0:	68fb      	ldr	r3, [r7, #12]
    1eb2:	697a      	ldr	r2, [r7, #20]
    1eb4:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1368

    fnet_error_set(error);
    1eb6:	6978      	ldr	r0, [r7, #20]
    1eb8:	f7fe ff72 	bl	da0 <fnet_error_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1369
    return (SOCKET_ERROR);
    1ebc:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1370
}
    1ec0:	4618      	mov	r0, r3
    1ec2:	3718      	adds	r7, #24
    1ec4:	46bd      	mov	sp, r7
    1ec6:	bd80      	pop	{r7, pc}

00001ec8 <fnet_ip_getsockopt>:
fnet_ip_getsockopt():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1378
*
* DESCRIPTION: This function retrieves the current value 
*              of IP socket option.
*************************************************************************/
int fnet_ip_getsockopt( fnet_socket_t *sock, int level, int optname, char *optval, int *optlen )
{
    1ec8:	b580      	push	{r7, lr}
    1eca:	b086      	sub	sp, #24
    1ecc:	af00      	add	r7, sp, #0
    1ece:	60f8      	str	r0, [r7, #12]
    1ed0:	60b9      	str	r1, [r7, #8]
    1ed2:	607a      	str	r2, [r7, #4]
    1ed4:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1381
    int error;

    if((optval) && (optlen) && ( *optlen))
    1ed6:	683b      	ldr	r3, [r7, #0]
    1ed8:	2b00      	cmp	r3, #0
    1eda:	d043      	beq.n	1f64 <fnet_ip_getsockopt+0x9c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1381 (discriminator 1)
    1edc:	6a3b      	ldr	r3, [r7, #32]
    1ede:	2b00      	cmp	r3, #0
    1ee0:	d040      	beq.n	1f64 <fnet_ip_getsockopt+0x9c>
    1ee2:	6a3b      	ldr	r3, [r7, #32]
    1ee4:	681b      	ldr	r3, [r3, #0]
    1ee6:	2b00      	cmp	r3, #0
    1ee8:	d03c      	beq.n	1f64 <fnet_ip_getsockopt+0x9c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1385
    {
    
    #if FNET_CFG_IP4    
        if((level == IPPROTO_IP) && (sock->protocol_interface->family & AF_INET))
    1eea:	68bb      	ldr	r3, [r7, #8]
    1eec:	2b00      	cmp	r3, #0
    1eee:	d136      	bne.n	1f5e <fnet_ip_getsockopt+0x96>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1385 (discriminator 1)
    1ef0:	68fb      	ldr	r3, [r7, #12]
    1ef2:	695b      	ldr	r3, [r3, #20]
    1ef4:	889b      	ldrh	r3, [r3, #4]
    1ef6:	f003 0301 	and.w	r3, r3, #1
    1efa:	2b00      	cmp	r3, #0
    1efc:	d02f      	beq.n	1f5e <fnet_ip_getsockopt+0x96>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1388
        {
    
            switch(optname)      /* Socket options processing. */
    1efe:	687b      	ldr	r3, [r7, #4]
    1f00:	2b03      	cmp	r3, #3
    1f02:	d002      	beq.n	1f0a <fnet_ip_getsockopt+0x42>
    1f04:	2b04      	cmp	r3, #4
    1f06:	d011      	beq.n	1f2c <fnet_ip_getsockopt+0x64>
    1f08:	e022      	b.n	1f50 <fnet_ip_getsockopt+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1391
            {
                case IP_TOS: /* Get IP TOS for outgoing datagrams.*/
                    if(*optlen < sizeof(int))
    1f0a:	6a3b      	ldr	r3, [r7, #32]
    1f0c:	681b      	ldr	r3, [r3, #0]
    1f0e:	2b03      	cmp	r3, #3
    1f10:	d802      	bhi.n	1f18 <fnet_ip_getsockopt+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1393
                    {
                        error = FNET_ERR_INVAL;
    1f12:	2306      	movs	r3, #6
    1f14:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1394
                        goto ERROR_SOCK;
    1f16:	e028      	b.n	1f6a <fnet_ip_getsockopt+0xa2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1397
                    }

                    *((int*)optval) = sock->options.ip_opt.tos;
    1f18:	68fb      	ldr	r3, [r7, #12]
    1f1a:	f893 3065 	ldrb.w	r3, [r3, #101]	; 0x65
    1f1e:	461a      	mov	r2, r3
    1f20:	683b      	ldr	r3, [r7, #0]
    1f22:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1398
                    *optlen = sizeof(int);
    1f24:	6a3b      	ldr	r3, [r7, #32]
    1f26:	2204      	movs	r2, #4
    1f28:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1399
                    break;
    1f2a:	e014      	b.n	1f56 <fnet_ip_getsockopt+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1401
                case IP_TTL: /* Get IP TTL for outgoing datagrams.*/
                    if(*optlen < sizeof(int))
    1f2c:	6a3b      	ldr	r3, [r7, #32]
    1f2e:	681b      	ldr	r3, [r3, #0]
    1f30:	2b03      	cmp	r3, #3
    1f32:	d802      	bhi.n	1f3a <fnet_ip_getsockopt+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1403
                    {
                        error = FNET_ERR_INVAL;
    1f34:	2306      	movs	r3, #6
    1f36:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1404
                        goto ERROR_SOCK;
    1f38:	e017      	b.n	1f6a <fnet_ip_getsockopt+0xa2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1407
                    }

                    *((int*)optval) = (char)sock->options.ip_opt.ttl;
    1f3a:	68fb      	ldr	r3, [r7, #12]
    1f3c:	f893 3064 	ldrb.w	r3, [r3, #100]	; 0x64
    1f40:	b2db      	uxtb	r3, r3
    1f42:	b25a      	sxtb	r2, r3
    1f44:	683b      	ldr	r3, [r7, #0]
    1f46:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1408
                    *optlen = sizeof(int);
    1f48:	6a3b      	ldr	r3, [r7, #32]
    1f4a:	2204      	movs	r2, #4
    1f4c:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1409
                    break;
    1f4e:	e002      	b.n	1f56 <fnet_ip_getsockopt+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1423
                    *((int*)optval) = (char)sock->options.ip_opt.ttl_multicast;
                    *optlen = sizeof(int);
                    break;
    #endif /* FNET_CFG_MULTICAST */
                default:
                    error = FNET_ERR_NOPROTOOPT; /* The option is unknown or unsupported.*/
    1f50:	2309      	movs	r3, #9
    1f52:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1424
                    goto ERROR_SOCK;
    1f54:	e009      	b.n	1f6a <fnet_ip_getsockopt+0xa2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1426
            }
        }
    1f56:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1385

    if((optval) && (optlen) && ( *optlen))
    {
    
    #if FNET_CFG_IP4    
        if((level == IPPROTO_IP) && (sock->protocol_interface->family & AF_INET))
    1f58:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1462
    {
        error = FNET_ERR_INVAL; /* Invalid argument.*/
        goto ERROR_SOCK;
    }

    return (FNET_OK);
    1f5a:	2300      	movs	r3, #0
    1f5c:	e00d      	b.n	1f7a <fnet_ip_getsockopt+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1452
            }                                                
        }
        else
#endif
        {
            error = FNET_ERR_INVAL; /* Invalid argument.*/
    1f5e:	2306      	movs	r3, #6
    1f60:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1453
            goto ERROR_SOCK;        
    1f62:	e002      	b.n	1f6a <fnet_ip_getsockopt+0xa2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1458
        }            
    }    
    else
    {
        error = FNET_ERR_INVAL; /* Invalid argument.*/
    1f64:	2306      	movs	r3, #6
    1f66:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1459
        goto ERROR_SOCK;
    1f68:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1465
    }

    return (FNET_OK);

ERROR_SOCK:
    sock->options.error = error;
    1f6a:	68fb      	ldr	r3, [r7, #12]
    1f6c:	697a      	ldr	r2, [r7, #20]
    1f6e:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1467

    fnet_error_set(error);
    1f70:	6978      	ldr	r0, [r7, #20]
    1f72:	f7fe ff15 	bl	da0 <fnet_error_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1468
    return (SOCKET_ERROR);
    1f76:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1469
}
    1f7a:	4618      	mov	r0, r3
    1f7c:	3718      	adds	r7, #24
    1f7e:	46bd      	mov	sp, r7
    1f80:	bd80      	pop	{r7, pc}
    1f82:	bf00      	nop

00001f84 <fnet_ip_queue_append>:
fnet_ip_queue_append():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1477
* NAME: ip_append_queue
*
* DESCRIPTION: Appends IP input queue.
*************************************************************************/
int fnet_ip_queue_append( fnet_ip_queue_t *queue, fnet_netif_t *netif, fnet_netbuf_t *nb )
{
    1f84:	b580      	push	{r7, lr}
    1f86:	b086      	sub	sp, #24
    1f88:	af00      	add	r7, sp, #0
    1f8a:	60f8      	str	r0, [r7, #12]
    1f8c:	60b9      	str	r1, [r7, #8]
    1f8e:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1480
    fnet_netbuf_t *nb_netif;

    fnet_isr_lock();
    1f90:	f000 f95e 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1482

    if((nb->total_length + queue->count) > FNET_IP_QUEUE_COUNT_MAX)
    1f94:	687b      	ldr	r3, [r7, #4]
    1f96:	695a      	ldr	r2, [r3, #20]
    1f98:	68fb      	ldr	r3, [r7, #12]
    1f9a:	685b      	ldr	r3, [r3, #4]
    1f9c:	4413      	add	r3, r2
    1f9e:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
    1fa2:	d900      	bls.n	1fa6 <fnet_ip_queue_append+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1484
    {
        goto ERROR;
    1fa4:	e020      	b.n	1fe8 <fnet_ip_queue_append+0x64>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1487
    }

    if((nb_netif = fnet_netbuf_new(sizeof(fnet_netif_t *), FNET_FALSE)) == 0)
    1fa6:	2004      	movs	r0, #4
    1fa8:	2100      	movs	r1, #0
    1faa:	f000 fb8f 	bl	26cc <fnet_netbuf_new>
    1fae:	6178      	str	r0, [r7, #20]
    1fb0:	697b      	ldr	r3, [r7, #20]
    1fb2:	2b00      	cmp	r3, #0
    1fb4:	d100      	bne.n	1fb8 <fnet_ip_queue_append+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1489
    {
        goto ERROR;
    1fb6:	e017      	b.n	1fe8 <fnet_ip_queue_append+0x64>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1492
    }

    nb_netif->data_ptr = (void *)netif;
    1fb8:	697b      	ldr	r3, [r7, #20]
    1fba:	68ba      	ldr	r2, [r7, #8]
    1fbc:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1494

    queue->count += nb->total_length;
    1fbe:	68fb      	ldr	r3, [r7, #12]
    1fc0:	685a      	ldr	r2, [r3, #4]
    1fc2:	687b      	ldr	r3, [r7, #4]
    1fc4:	695b      	ldr	r3, [r3, #20]
    1fc6:	441a      	add	r2, r3
    1fc8:	68fb      	ldr	r3, [r7, #12]
    1fca:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1496

    nb = fnet_netbuf_concat(nb_netif, nb);
    1fcc:	6978      	ldr	r0, [r7, #20]
    1fce:	6879      	ldr	r1, [r7, #4]
    1fd0:	f001 f822 	bl	3018 <fnet_netbuf_concat>
    1fd4:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1497
    fnet_netbuf_add_chain(&queue->head, nb);
    1fd6:	68fb      	ldr	r3, [r7, #12]
    1fd8:	4618      	mov	r0, r3
    1fda:	6879      	ldr	r1, [r7, #4]
    1fdc:	f001 f84e 	bl	307c <fnet_netbuf_add_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1498
    fnet_isr_unlock();
    1fe0:	f000 f944 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1500

    return FNET_OK;
    1fe4:	2300      	movs	r3, #0
    1fe6:	e003      	b.n	1ff0 <fnet_ip_queue_append+0x6c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1503

ERROR:
    fnet_isr_unlock();
    1fe8:	f000 f940 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1504
    return FNET_ERR;
    1fec:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1505
}
    1ff0:	4618      	mov	r0, r3
    1ff2:	3718      	adds	r7, #24
    1ff4:	46bd      	mov	sp, r7
    1ff6:	bd80      	pop	{r7, pc}

00001ff8 <fnet_ip_queue_read>:
fnet_ip_queue_read():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1513
* NAME: ip_read_queue
*
* DESCRIPTION: Reads a IP datagram from IP input queue.
*************************************************************************/
fnet_netbuf_t *fnet_ip_queue_read( fnet_ip_queue_t *queue, fnet_netif_t ** netif )
{
    1ff8:	b580      	push	{r7, lr}
    1ffa:	b084      	sub	sp, #16
    1ffc:	af00      	add	r7, sp, #0
    1ffe:	6078      	str	r0, [r7, #4]
    2000:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1517
    fnet_netbuf_t *nb;
    fnet_netbuf_t *nb_netif;

    if((nb_netif = queue->head) != 0)
    2002:	687b      	ldr	r3, [r7, #4]
    2004:	681b      	ldr	r3, [r3, #0]
    2006:	60bb      	str	r3, [r7, #8]
    2008:	68bb      	ldr	r3, [r7, #8]
    200a:	2b00      	cmp	r3, #0
    200c:	d01d      	beq.n	204a <fnet_ip_queue_read+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1519
    {
        nb = nb_netif->next;
    200e:	68bb      	ldr	r3, [r7, #8]
    2010:	681b      	ldr	r3, [r3, #0]
    2012:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1521

        *netif = ((fnet_netif_t *)(nb_netif->data_ptr));
    2014:	68bb      	ldr	r3, [r7, #8]
    2016:	68da      	ldr	r2, [r3, #12]
    2018:	683b      	ldr	r3, [r7, #0]
    201a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1523

        fnet_isr_lock();
    201c:	f000 f918 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1525

        if(nb)
    2020:	68fb      	ldr	r3, [r7, #12]
    2022:	2b00      	cmp	r3, #0
    2024:	d006      	beq.n	2034 <fnet_ip_queue_read+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1526
            queue->count -= nb->total_length;
    2026:	687b      	ldr	r3, [r7, #4]
    2028:	685a      	ldr	r2, [r3, #4]
    202a:	68fb      	ldr	r3, [r7, #12]
    202c:	695b      	ldr	r3, [r3, #20]
    202e:	1ad2      	subs	r2, r2, r3
    2030:	687b      	ldr	r3, [r7, #4]
    2032:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1528

        nb_netif->next = 0;
    2034:	68bb      	ldr	r3, [r7, #8]
    2036:	2200      	movs	r2, #0
    2038:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1529
        fnet_netbuf_del_chain(&queue->head, nb_netif);
    203a:	687b      	ldr	r3, [r7, #4]
    203c:	4618      	mov	r0, r3
    203e:	68b9      	ldr	r1, [r7, #8]
    2040:	f001 f83c 	bl	30bc <fnet_netbuf_del_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1530
        fnet_isr_unlock();
    2044:	f000 f912 	bl	226c <fnet_isr_unlock>
    2048:	e001      	b.n	204e <fnet_ip_queue_read+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1533
    }
    else
        nb = 0;
    204a:	2300      	movs	r3, #0
    204c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1535

    return nb;
    204e:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_ip.c:1536
}
    2050:	4618      	mov	r0, r3
    2052:	3710      	adds	r7, #16
    2054:	46bd      	mov	sp, r7
    2056:	bd80      	pop	{r7, pc}

00002058 <fnet_isr_handler>:
fnet_isr_handler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:100
* DESCRIPTION: This handler is envoked by fnet_cpu_isr().
*              If fnet_locked == 0 - executes the
*              corresponding handler; else - marks it as pended.
*************************************************************************/
void fnet_isr_handler( int vector_number )
{
    2058:	b580      	push	{r7, lr}
    205a:	b084      	sub	sp, #16
    205c:	af00      	add	r7, sp, #0
    205e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:112
     * Else, clears this interrupt's "pended" flag, executes handler_bottom() and exits.
     * NOTE: fnet_locked is incremented by fnet_isr_lock() and
     * decremented by fnet_isr_unlock().
     */

    for (isr_cur = fnet_isr_table; isr_cur; isr_cur = isr_cur->next)
    2060:	4b1e      	ldr	r3, [pc, #120]	; (20dc <fnet_isr_handler+0x84>)
    2062:	681b      	ldr	r3, [r3, #0]
    2064:	60fb      	str	r3, [r7, #12]
    2066:	e032      	b.n	20ce <fnet_isr_handler+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:114
    {
        if(isr_cur->vector_number == vector_number) /* we got it. */
    2068:	68fb      	ldr	r3, [r7, #12]
    206a:	685a      	ldr	r2, [r3, #4]
    206c:	687b      	ldr	r3, [r7, #4]
    206e:	429a      	cmp	r2, r3
    2070:	d12a      	bne.n	20c8 <fnet_isr_handler+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:116
        {
            if(isr_cur->handler_top)
    2072:	68fb      	ldr	r3, [r7, #12]
    2074:	689b      	ldr	r3, [r3, #8]
    2076:	2b00      	cmp	r3, #0
    2078:	d005      	beq.n	2086 <fnet_isr_handler+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:117
                isr_cur->handler_top(isr_cur->cookie);         /* Call "top half" handler; */
    207a:	68fb      	ldr	r3, [r7, #12]
    207c:	689b      	ldr	r3, [r3, #8]
    207e:	68fa      	ldr	r2, [r7, #12]
    2080:	6952      	ldr	r2, [r2, #20]
    2082:	4610      	mov	r0, r2
    2084:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:119

            if(fnet_locked)
    2086:	4b16      	ldr	r3, [pc, #88]	; (20e0 <fnet_isr_handler+0x88>)
    2088:	681b      	ldr	r3, [r3, #0]
    208a:	2b00      	cmp	r3, #0
    208c:	d008      	beq.n	20a0 <fnet_isr_handler+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:121
            {
                isr_cur->pended = 1;
    208e:	68fb      	ldr	r3, [r7, #12]
    2090:	2201      	movs	r2, #1
    2092:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:123
#if 1
                isr_cur->num_of_times_pended++;
    2094:	68fb      	ldr	r3, [r7, #12]
    2096:	699b      	ldr	r3, [r3, #24]
    2098:	1c5a      	adds	r2, r3, #1
    209a:	68fb      	ldr	r3, [r7, #12]
    209c:	619a      	str	r2, [r3, #24]
    209e:	e012      	b.n	20c6 <fnet_isr_handler+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:128
#endif
            }
            else
            {
                isr_cur->pended = 0;
    20a0:	68fb      	ldr	r3, [r7, #12]
    20a2:	2200      	movs	r2, #0
    20a4:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:130

                if(isr_cur->handler_bottom) {
    20a6:	68fb      	ldr	r3, [r7, #12]
    20a8:	68db      	ldr	r3, [r3, #12]
    20aa:	2b00      	cmp	r3, #0
    20ac:	d00b      	beq.n	20c6 <fnet_isr_handler+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:131
                    isr_cur->handler_bottom(isr_cur->cookie); /* Call "bottom half" handler;*/
    20ae:	68fb      	ldr	r3, [r7, #12]
    20b0:	68db      	ldr	r3, [r3, #12]
    20b2:	68fa      	ldr	r2, [r7, #12]
    20b4:	6952      	ldr	r2, [r2, #20]
    20b6:	4610      	mov	r0, r2
    20b8:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:133
#if 1
                    isr_cur->num_of_times_serviced++;
    20ba:	68fb      	ldr	r3, [r7, #12]
    20bc:	69db      	ldr	r3, [r3, #28]
    20be:	1c5a      	adds	r2, r3, #1
    20c0:	68fb      	ldr	r3, [r7, #12]
    20c2:	61da      	str	r2, [r3, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:138
#endif
                }
            }

            break;
    20c4:	e006      	b.n	20d4 <fnet_isr_handler+0x7c>
    20c6:	e005      	b.n	20d4 <fnet_isr_handler+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:112
     * Else, clears this interrupt's "pended" flag, executes handler_bottom() and exits.
     * NOTE: fnet_locked is incremented by fnet_isr_lock() and
     * decremented by fnet_isr_unlock().
     */

    for (isr_cur = fnet_isr_table; isr_cur; isr_cur = isr_cur->next)
    20c8:	68fb      	ldr	r3, [r7, #12]
    20ca:	681b      	ldr	r3, [r3, #0]
    20cc:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:112 (discriminator 1)
    20ce:	68fb      	ldr	r3, [r7, #12]
    20d0:	2b00      	cmp	r3, #0
    20d2:	d1c9      	bne.n	2068 <fnet_isr_handler+0x10>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:141
            }

            break;
        }
    }
}
    20d4:	3710      	adds	r7, #16
    20d6:	46bd      	mov	sp, r7
    20d8:	bd80      	pop	{r7, pc}
    20da:	bf00      	nop
    20dc:	10000754 	.word	0x10000754
    20e0:	10000750 	.word	0x10000750

000020e4 <fnet_isr_vector_init>:
fnet_isr_vector_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:152
*              'vector_number' at the internal vector queue and interrupt 
*              handler 'fnet_cpu_isr' at the real vector table
*************************************************************************/
int fnet_isr_vector_init( unsigned int vector_number, void (*handler_top)(void *cookie),
                                   void (*handler_bottom)(void *cookie), unsigned int priority, void *cookie )
{
    20e4:	b580      	push	{r7, lr}
    20e6:	b086      	sub	sp, #24
    20e8:	af00      	add	r7, sp, #0
    20ea:	60f8      	str	r0, [r7, #12]
    20ec:	60b9      	str	r1, [r7, #8]
    20ee:	607a      	str	r2, [r7, #4]
    20f0:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:156
    int result;

    /* CPU-specific initalisation. */
    result = fnet_cpu_isr_install(vector_number, priority);
    20f2:	68f8      	ldr	r0, [r7, #12]
    20f4:	6839      	ldr	r1, [r7, #0]
    20f6:	f00c fc07 	bl	e908 <fnet_cpu_isr_install>
    20fa:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:158

    if(result == FNET_OK)
    20fc:	697b      	ldr	r3, [r7, #20]
    20fe:	2b00      	cmp	r3, #0
    2100:	d106      	bne.n	2110 <fnet_isr_vector_init+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:160
    {
        result = fnet_isr_register(vector_number, handler_top, handler_bottom, cookie);
    2102:	68f8      	ldr	r0, [r7, #12]
    2104:	68b9      	ldr	r1, [r7, #8]
    2106:	687a      	ldr	r2, [r7, #4]
    2108:	6a3b      	ldr	r3, [r7, #32]
    210a:	f000 f827 	bl	215c <fnet_isr_register>
    210e:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:163
    }

    return result;
    2110:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:164
}
    2112:	4618      	mov	r0, r3
    2114:	3718      	adds	r7, #24
    2116:	46bd      	mov	sp, r7
    2118:	bd80      	pop	{r7, pc}
    211a:	bf00      	nop

0000211c <fnet_event_init>:
fnet_event_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:172
* NAME: fnet_event_init
*
* DESCRIPTION: Register the event handler.
*************************************************************************/
fnet_event_desc_t fnet_event_init( void (*event_handler)(void *cookie), void *cookie)
{
    211c:	b580      	push	{r7, lr}
    211e:	b084      	sub	sp, #16
    2120:	af00      	add	r7, sp, #0
    2122:	6078      	str	r0, [r7, #4]
    2124:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:173
    unsigned int    vector_number = (unsigned int)(fnet_event_desc_last++);
    2126:	4b0c      	ldr	r3, [pc, #48]	; (2158 <fnet_event_init+0x3c>)
    2128:	681b      	ldr	r3, [r3, #0]
    212a:	1c59      	adds	r1, r3, #1
    212c:	4a0a      	ldr	r2, [pc, #40]	; (2158 <fnet_event_init+0x3c>)
    212e:	6011      	str	r1, [r2, #0]
    2130:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:175

    if( fnet_isr_register(vector_number, 0, event_handler, cookie) == FNET_ERR)
    2132:	68f8      	ldr	r0, [r7, #12]
    2134:	2100      	movs	r1, #0
    2136:	687a      	ldr	r2, [r7, #4]
    2138:	683b      	ldr	r3, [r7, #0]
    213a:	f000 f80f 	bl	215c <fnet_isr_register>
    213e:	4603      	mov	r3, r0
    2140:	f1b3 3fff 	cmp.w	r3, #4294967295
    2144:	d102      	bne.n	214c <fnet_event_init+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:177
    {
    	return FNET_ERR;    	
    2146:	f04f 33ff 	mov.w	r3, #4294967295
    214a:	e000      	b.n	214e <fnet_event_init+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:180
    }
    else
    	return (fnet_event_desc_t)vector_number;
    214c:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:181
}
    214e:	4618      	mov	r0, r3
    2150:	3710      	adds	r7, #16
    2152:	46bd      	mov	sp, r7
    2154:	bd80      	pop	{r7, pc}
    2156:	bf00      	nop
    2158:	10000028 	.word	0x10000028

0000215c <fnet_isr_register>:
fnet_isr_register():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:189
* NAME: fnet_isr_register
*
* DESCRIPTION: Register 'handler' at the isr table.
*************************************************************************/
static int fnet_isr_register( unsigned int vector_number, void (*handler_top)(void *cookie), void (*handler_bottom)(void *cookie), void *cookie )
{
    215c:	b580      	push	{r7, lr}
    215e:	b086      	sub	sp, #24
    2160:	af00      	add	r7, sp, #0
    2162:	60f8      	str	r0, [r7, #12]
    2164:	60b9      	str	r1, [r7, #8]
    2166:	607a      	str	r2, [r7, #4]
    2168:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:193
    int                 result;
    fnet_isr_entry_t    *isr_temp;

    isr_temp = (fnet_isr_entry_t *)fnet_malloc(sizeof(fnet_isr_entry_t));
    216a:	2020      	movs	r0, #32
    216c:	f001 f850 	bl	3210 <fnet_malloc>
    2170:	6138      	str	r0, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:195

    if(isr_temp)
    2172:	693b      	ldr	r3, [r7, #16]
    2174:	2b00      	cmp	r3, #0
    2176:	d01e      	beq.n	21b6 <fnet_isr_register+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:197
    {
        isr_temp->vector_number = vector_number;
    2178:	693b      	ldr	r3, [r7, #16]
    217a:	68fa      	ldr	r2, [r7, #12]
    217c:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:198
        isr_temp->handler_top = (void (*)(void *cookie))handler_top;
    217e:	693b      	ldr	r3, [r7, #16]
    2180:	68ba      	ldr	r2, [r7, #8]
    2182:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:199
        isr_temp->handler_bottom = (void (*)(void *cookie))handler_bottom;
    2184:	693b      	ldr	r3, [r7, #16]
    2186:	687a      	ldr	r2, [r7, #4]
    2188:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:200
        isr_temp->next = fnet_isr_table;
    218a:	4b0f      	ldr	r3, [pc, #60]	; (21c8 <fnet_isr_register+0x6c>)
    218c:	681a      	ldr	r2, [r3, #0]
    218e:	693b      	ldr	r3, [r7, #16]
    2190:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:201
        isr_temp->pended = 0;
    2192:	693b      	ldr	r3, [r7, #16]
    2194:	2200      	movs	r2, #0
    2196:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:202
        isr_temp->cookie = cookie;
    2198:	693b      	ldr	r3, [r7, #16]
    219a:	683a      	ldr	r2, [r7, #0]
    219c:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:203
        isr_temp->num_of_times_pended = 0;
    219e:	693b      	ldr	r3, [r7, #16]
    21a0:	2200      	movs	r2, #0
    21a2:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:204
        isr_temp->num_of_times_serviced = 0;
    21a4:	693b      	ldr	r3, [r7, #16]
    21a6:	2200      	movs	r2, #0
    21a8:	61da      	str	r2, [r3, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:205
        fnet_isr_table = isr_temp;
    21aa:	4b07      	ldr	r3, [pc, #28]	; (21c8 <fnet_isr_register+0x6c>)
    21ac:	693a      	ldr	r2, [r7, #16]
    21ae:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:207
        
        result = FNET_OK;
    21b0:	2300      	movs	r3, #0
    21b2:	617b      	str	r3, [r7, #20]
    21b4:	e002      	b.n	21bc <fnet_isr_register+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:210
    }
    else
        result = FNET_ERR;
    21b6:	f04f 33ff 	mov.w	r3, #4294967295
    21ba:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:212

    return result;
    21bc:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:213
}
    21be:	4618      	mov	r0, r3
    21c0:	3718      	adds	r7, #24
    21c2:	46bd      	mov	sp, r7
    21c4:	bd80      	pop	{r7, pc}
    21c6:	bf00      	nop
    21c8:	10000754 	.word	0x10000754

000021cc <fnet_isr_vector_release>:
fnet_isr_vector_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:224
*              with number 'vector_number' at the exception vector table but 
*              destroys info about old interrupt handler and removes
*              information from 'fnet_isr_table' queue
*************************************************************************/
void fnet_isr_vector_release( unsigned int vector_number)
{
    21cc:	b580      	push	{r7, lr}
    21ce:	b084      	sub	sp, #16
    21d0:	af00      	add	r7, sp, #0
    21d2:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:227
    fnet_isr_entry_t *isr_temp;

    isr_temp = fnet_isr_table;
    21d4:	4b1d      	ldr	r3, [pc, #116]	; (224c <fnet_isr_vector_release+0x80>)
    21d6:	681b      	ldr	r3, [r3, #0]
    21d8:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:229

    while(isr_temp != 0)
    21da:	e008      	b.n	21ee <fnet_isr_vector_release+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:231
    {
        if(isr_temp->vector_number == vector_number)
    21dc:	68fb      	ldr	r3, [r7, #12]
    21de:	685a      	ldr	r2, [r3, #4]
    21e0:	687b      	ldr	r3, [r7, #4]
    21e2:	429a      	cmp	r2, r3
    21e4:	d100      	bne.n	21e8 <fnet_isr_vector_release+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:232
            break;
    21e6:	e005      	b.n	21f4 <fnet_isr_vector_release+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:234

        isr_temp = isr_temp->next;
    21e8:	68fb      	ldr	r3, [r7, #12]
    21ea:	681b      	ldr	r3, [r3, #0]
    21ec:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:229 (discriminator 1)
{
    fnet_isr_entry_t *isr_temp;

    isr_temp = fnet_isr_table;

    while(isr_temp != 0)
    21ee:	68fb      	ldr	r3, [r7, #12]
    21f0:	2b00      	cmp	r3, #0
    21f2:	d1f3      	bne.n	21dc <fnet_isr_vector_release+0x10>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:237
            break;

        isr_temp = isr_temp->next;
    }

    if(isr_temp != 0)       /* if handler wasn't registered in queue */
    21f4:	68fb      	ldr	r3, [r7, #12]
    21f6:	2b00      	cmp	r3, #0
    21f8:	d025      	beq.n	2246 <fnet_isr_vector_release+0x7a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:240
    {

        fnet_free(isr_temp);
    21fa:	68f8      	ldr	r0, [r7, #12]
    21fc:	f000 fff8 	bl	31f0 <fnet_free>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:242

        if(fnet_isr_table->vector_number == vector_number)
    2200:	4b12      	ldr	r3, [pc, #72]	; (224c <fnet_isr_vector_release+0x80>)
    2202:	681b      	ldr	r3, [r3, #0]
    2204:	685a      	ldr	r2, [r3, #4]
    2206:	687b      	ldr	r3, [r7, #4]
    2208:	429a      	cmp	r2, r3
    220a:	d105      	bne.n	2218 <fnet_isr_vector_release+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:244
        {
            fnet_isr_table = fnet_isr_table->next;
    220c:	4b0f      	ldr	r3, [pc, #60]	; (224c <fnet_isr_vector_release+0x80>)
    220e:	681b      	ldr	r3, [r3, #0]
    2210:	681a      	ldr	r2, [r3, #0]
    2212:	4b0e      	ldr	r3, [pc, #56]	; (224c <fnet_isr_vector_release+0x80>)
    2214:	601a      	str	r2, [r3, #0]
    2216:	e016      	b.n	2246 <fnet_isr_vector_release+0x7a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:248
        }
        else
        {
            isr_temp = fnet_isr_table;
    2218:	4b0c      	ldr	r3, [pc, #48]	; (224c <fnet_isr_vector_release+0x80>)
    221a:	681b      	ldr	r3, [r3, #0]
    221c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:250

            while(isr_temp->next != 0)
    221e:	e00e      	b.n	223e <fnet_isr_vector_release+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:252
            {
                if(isr_temp->next->vector_number == vector_number)
    2220:	68fb      	ldr	r3, [r7, #12]
    2222:	681b      	ldr	r3, [r3, #0]
    2224:	685a      	ldr	r2, [r3, #4]
    2226:	687b      	ldr	r3, [r7, #4]
    2228:	429a      	cmp	r2, r3
    222a:	d105      	bne.n	2238 <fnet_isr_vector_release+0x6c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:254
                {
                    isr_temp->next = isr_temp->next->next;
    222c:	68fb      	ldr	r3, [r7, #12]
    222e:	681b      	ldr	r3, [r3, #0]
    2230:	681a      	ldr	r2, [r3, #0]
    2232:	68fb      	ldr	r3, [r7, #12]
    2234:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:255
                    break;
    2236:	e006      	b.n	2246 <fnet_isr_vector_release+0x7a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:258
                }

                isr_temp = isr_temp->next;
    2238:	68fb      	ldr	r3, [r7, #12]
    223a:	681b      	ldr	r3, [r3, #0]
    223c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:250 (discriminator 1)
        }
        else
        {
            isr_temp = fnet_isr_table;

            while(isr_temp->next != 0)
    223e:	68fb      	ldr	r3, [r7, #12]
    2240:	681b      	ldr	r3, [r3, #0]
    2242:	2b00      	cmp	r3, #0
    2244:	d1ec      	bne.n	2220 <fnet_isr_vector_release+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:262

                isr_temp = isr_temp->next;
            }
        }
    }
}
    2246:	3710      	adds	r7, #16
    2248:	46bd      	mov	sp, r7
    224a:	bd80      	pop	{r7, pc}
    224c:	10000754 	.word	0x10000754

00002250 <fnet_isr_lock>:
fnet_isr_lock():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:271
*
* DESCRIPTION: After execution of this routine all interrupts will be 
*              pended
*************************************************************************/
void fnet_isr_lock( void )
{
    2250:	b480      	push	{r7}
    2252:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:272
    fnet_locked++;
    2254:	4b04      	ldr	r3, [pc, #16]	; (2268 <fnet_isr_lock+0x18>)
    2256:	681b      	ldr	r3, [r3, #0]
    2258:	1c5a      	adds	r2, r3, #1
    225a:	4b03      	ldr	r3, [pc, #12]	; (2268 <fnet_isr_lock+0x18>)
    225c:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:273
}
    225e:	46bd      	mov	sp, r7
    2260:	f85d 7b04 	ldr.w	r7, [sp], #4
    2264:	4770      	bx	lr
    2266:	bf00      	nop
    2268:	10000750 	.word	0x10000750

0000226c <fnet_isr_unlock>:
fnet_isr_unlock():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:317

    --fnet_locked;
}
#else /* new one.*/ 
void fnet_isr_unlock( void )
{
    226c:	b580      	push	{r7, lr}
    226e:	b082      	sub	sp, #8
    2270:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:329
    * Clear pended status and call associated handler_bottom().
    * Continue to do this until all pended interrupts have been handled.
    *Always exits by decrementing fnet_locked so as to bump up a lock level.
	*/	
        
    --fnet_locked;
    2272:	4b16      	ldr	r3, [pc, #88]	; (22cc <fnet_isr_unlock+0x60>)
    2274:	681b      	ldr	r3, [r3, #0]
    2276:	1e5a      	subs	r2, r3, #1
    2278:	4b14      	ldr	r3, [pc, #80]	; (22cc <fnet_isr_unlock+0x60>)
    227a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:331

    if(fnet_locked == 0)
    227c:	4b13      	ldr	r3, [pc, #76]	; (22cc <fnet_isr_unlock+0x60>)
    227e:	681b      	ldr	r3, [r3, #0]
    2280:	2b00      	cmp	r3, #0
    2282:	d11f      	bne.n	22c4 <fnet_isr_unlock+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:333
    {
        isr_temp = fnet_isr_table;
    2284:	4b12      	ldr	r3, [pc, #72]	; (22d0 <fnet_isr_unlock+0x64>)
    2286:	681b      	ldr	r3, [r3, #0]
    2288:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:335

        while(isr_temp != 0)
    228a:	e018      	b.n	22be <fnet_isr_unlock+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:337
        {
            if(isr_temp->pended)
    228c:	687b      	ldr	r3, [r7, #4]
    228e:	691b      	ldr	r3, [r3, #16]
    2290:	2b00      	cmp	r3, #0
    2292:	d011      	beq.n	22b8 <fnet_isr_unlock+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:339
            {
                isr_temp->pended = 0;
    2294:	687b      	ldr	r3, [r7, #4]
    2296:	2200      	movs	r2, #0
    2298:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:341

                if(isr_temp->handler_bottom)
    229a:	687b      	ldr	r3, [r7, #4]
    229c:	68db      	ldr	r3, [r3, #12]
    229e:	2b00      	cmp	r3, #0
    22a0:	d005      	beq.n	22ae <fnet_isr_unlock+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:342
                    isr_temp->handler_bottom(isr_temp->cookie);
    22a2:	687b      	ldr	r3, [r7, #4]
    22a4:	68db      	ldr	r3, [r3, #12]
    22a6:	687a      	ldr	r2, [r7, #4]
    22a8:	6952      	ldr	r2, [r2, #20]
    22aa:	4610      	mov	r0, r2
    22ac:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:344
#if 1
                isr_temp->num_of_times_serviced++;
    22ae:	687b      	ldr	r3, [r7, #4]
    22b0:	69db      	ldr	r3, [r3, #28]
    22b2:	1c5a      	adds	r2, r3, #1
    22b4:	687b      	ldr	r3, [r7, #4]
    22b6:	61da      	str	r2, [r3, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:348
#endif
            }

            isr_temp = isr_temp->next;
    22b8:	687b      	ldr	r3, [r7, #4]
    22ba:	681b      	ldr	r3, [r3, #0]
    22bc:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:335 (discriminator 1)

    if(fnet_locked == 0)
    {
        isr_temp = fnet_isr_table;

        while(isr_temp != 0)
    22be:	687b      	ldr	r3, [r7, #4]
    22c0:	2b00      	cmp	r3, #0
    22c2:	d1e3      	bne.n	228c <fnet_isr_unlock+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:351
            }

            isr_temp = isr_temp->next;
        }
    }
}
    22c4:	3708      	adds	r7, #8
    22c6:	46bd      	mov	sp, r7
    22c8:	bd80      	pop	{r7, pc}
    22ca:	bf00      	nop
    22cc:	10000750 	.word	0x10000750
    22d0:	10000754 	.word	0x10000754

000022d4 <fnet_event_raise>:
fnet_event_raise():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:360
* NAME: fnet_event_raise
*
* DESCRIPTION: This function raise registerted event. 
*************************************************************************/
void fnet_event_raise( fnet_event_desc_t event_number )
{
    22d4:	b580      	push	{r7, lr}
    22d6:	b084      	sub	sp, #16
    22d8:	af00      	add	r7, sp, #0
    22da:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:361
    unsigned int        vector_number = (unsigned int)(event_number);
    22dc:	687b      	ldr	r3, [r7, #4]
    22de:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:364
    fnet_isr_entry_t    *isr_temp;

    isr_temp = fnet_isr_table;
    22e0:	4b1f      	ldr	r3, [pc, #124]	; (2360 <fnet_event_raise+0x8c>)
    22e2:	681b      	ldr	r3, [r3, #0]
    22e4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:366

    fnet_isr_lock();
    22e6:	f7ff ffb3 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:368

    while(isr_temp != 0)
    22ea:	e031      	b.n	2350 <fnet_event_raise+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:370
    {
        if(isr_temp->vector_number == vector_number)
    22ec:	68fb      	ldr	r3, [r7, #12]
    22ee:	685a      	ldr	r2, [r3, #4]
    22f0:	68bb      	ldr	r3, [r7, #8]
    22f2:	429a      	cmp	r2, r3
    22f4:	d129      	bne.n	234a <fnet_event_raise+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:372
        {
            if(isr_temp->handler_top)
    22f6:	68fb      	ldr	r3, [r7, #12]
    22f8:	689b      	ldr	r3, [r3, #8]
    22fa:	2b00      	cmp	r3, #0
    22fc:	d005      	beq.n	230a <fnet_event_raise+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:373
                isr_temp->handler_top(isr_temp->cookie);
    22fe:	68fb      	ldr	r3, [r7, #12]
    2300:	689b      	ldr	r3, [r3, #8]
    2302:	68fa      	ldr	r2, [r7, #12]
    2304:	6952      	ldr	r2, [r2, #20]
    2306:	4610      	mov	r0, r2
    2308:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:375

            if(fnet_locked == 1)
    230a:	4b16      	ldr	r3, [pc, #88]	; (2364 <fnet_event_raise+0x90>)
    230c:	681b      	ldr	r3, [r3, #0]
    230e:	2b01      	cmp	r3, #1
    2310:	d112      	bne.n	2338 <fnet_event_raise+0x64>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:377
            {
                isr_temp->pended = 0;
    2312:	68fb      	ldr	r3, [r7, #12]
    2314:	2200      	movs	r2, #0
    2316:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:379

                if(isr_temp->handler_bottom)
    2318:	68fb      	ldr	r3, [r7, #12]
    231a:	68db      	ldr	r3, [r3, #12]
    231c:	2b00      	cmp	r3, #0
    231e:	d005      	beq.n	232c <fnet_event_raise+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:380
                    isr_temp->handler_bottom(isr_temp->cookie);
    2320:	68fb      	ldr	r3, [r7, #12]
    2322:	68db      	ldr	r3, [r3, #12]
    2324:	68fa      	ldr	r2, [r7, #12]
    2326:	6952      	ldr	r2, [r2, #20]
    2328:	4610      	mov	r0, r2
    232a:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:382
#if 1
                isr_temp->num_of_times_serviced++;
    232c:	68fb      	ldr	r3, [r7, #12]
    232e:	69db      	ldr	r3, [r3, #28]
    2330:	1c5a      	adds	r2, r3, #1
    2332:	68fb      	ldr	r3, [r7, #12]
    2334:	61da      	str	r2, [r3, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:389
            }
            else {
                isr_temp->pended = 1;
                isr_temp->num_of_times_pended++;
            }
            break;
    2336:	e00e      	b.n	2356 <fnet_event_raise+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:386
#if 1
                isr_temp->num_of_times_serviced++;
#endif
            }
            else {
                isr_temp->pended = 1;
    2338:	68fb      	ldr	r3, [r7, #12]
    233a:	2201      	movs	r2, #1
    233c:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:387
                isr_temp->num_of_times_pended++;
    233e:	68fb      	ldr	r3, [r7, #12]
    2340:	699b      	ldr	r3, [r3, #24]
    2342:	1c5a      	adds	r2, r3, #1
    2344:	68fb      	ldr	r3, [r7, #12]
    2346:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:389
            }
            break;
    2348:	e005      	b.n	2356 <fnet_event_raise+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:392
        }

        isr_temp = isr_temp->next;
    234a:	68fb      	ldr	r3, [r7, #12]
    234c:	681b      	ldr	r3, [r3, #0]
    234e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:368 (discriminator 1)

    isr_temp = fnet_isr_table;

    fnet_isr_lock();

    while(isr_temp != 0)
    2350:	68fb      	ldr	r3, [r7, #12]
    2352:	2b00      	cmp	r3, #0
    2354:	d1ca      	bne.n	22ec <fnet_event_raise+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:395
        }

        isr_temp = isr_temp->next;
    }

    fnet_isr_unlock();
    2356:	f7ff ff89 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:396
}
    235a:	3710      	adds	r7, #16
    235c:	46bd      	mov	sp, r7
    235e:	bd80      	pop	{r7, pc}
    2360:	10000754 	.word	0x10000754
    2364:	10000750 	.word	0x10000750

00002368 <fnet_isr_init>:
fnet_isr_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:405
*
* DESCRIPTION: This function inits ISR module
*
*************************************************************************/
void fnet_isr_init()
{
    2368:	b480      	push	{r7}
    236a:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:406
    fnet_locked = 0;
    236c:	4b04      	ldr	r3, [pc, #16]	; (2380 <fnet_isr_init+0x18>)
    236e:	2200      	movs	r2, #0
    2370:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:407
    fnet_isr_table = 0;
    2372:	4b04      	ldr	r3, [pc, #16]	; (2384 <fnet_isr_init+0x1c>)
    2374:	2200      	movs	r2, #0
    2376:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_isr.c:411
#if 0
    fnet_timer_new(20,&debug_pending_interrupts,0);
#endif
}
    2378:	46bd      	mov	sp, r7
    237a:	f85d 7b04 	ldr.w	r7, [sp], #4
    237e:	4770      	bx	lr
    2380:	10000750 	.word	0x10000750
    2384:	10000754 	.word	0x10000754

00002388 <fnet_mempool_init>:
fnet_mempool_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:78
* NAME: fnet_mempool_init
*
* DESCRIPTION:  
*************************************************************************/
fnet_mempool_desc_t fnet_mempool_init( void *pool_ptr, unsigned long pool_size, fnet_mempool_align_t alignment )
{
    2388:	b480      	push	{r7}
    238a:	b089      	sub	sp, #36	; 0x24
    238c:	af00      	add	r7, sp, #0
    238e:	60f8      	str	r0, [r7, #12]
    2390:	60b9      	str	r1, [r7, #8]
    2392:	4613      	mov	r3, r2
    2394:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:79
    struct fnet_mempool * mempool = 0;
    2396:	2300      	movs	r3, #0
    2398:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:81
    
    if(alignment < FNET_MEMPOOL_ALIGN_8)
    239a:	79fb      	ldrb	r3, [r7, #7]
    239c:	2b06      	cmp	r3, #6
    239e:	d801      	bhi.n	23a4 <fnet_mempool_init+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:82
          alignment = FNET_MEMPOOL_ALIGN_8; /* Set default alignment. */ 
    23a0:	2307      	movs	r3, #7
    23a2:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:84
    
    if(pool_ptr && (pool_size>(alignment+sizeof(struct fnet_mempool))))
    23a4:	68fb      	ldr	r3, [r7, #12]
    23a6:	2b00      	cmp	r3, #0
    23a8:	d02a      	beq.n	2400 <fnet_mempool_init+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:84 (discriminator 1)
    23aa:	79fb      	ldrb	r3, [r7, #7]
    23ac:	f103 0208 	add.w	r2, r3, #8
    23b0:	68bb      	ldr	r3, [r7, #8]
    23b2:	429a      	cmp	r2, r3
    23b4:	d224      	bcs.n	2400 <fnet_mempool_init+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:88
    {
        fnet_mempool_unit_header_t *p;
        
        unsigned char *heap_ptr = (unsigned char *)(((unsigned long)(pool_ptr)+sizeof(struct fnet_mempool)+(alignment+1))
    23b6:	79fa      	ldrb	r2, [r7, #7]
    23b8:	68fb      	ldr	r3, [r7, #12]
    23ba:	4413      	add	r3, r2
    23bc:	f103 0209 	add.w	r2, r3, #9
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:89
                                                            & (0xffffffff-alignment));
    23c0:	79fb      	ldrb	r3, [r7, #7]
    23c2:	43db      	mvns	r3, r3
    23c4:	4013      	ands	r3, r2
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:88
    
    if(pool_ptr && (pool_size>(alignment+sizeof(struct fnet_mempool))))
    {
        fnet_mempool_unit_header_t *p;
        
        unsigned char *heap_ptr = (unsigned char *)(((unsigned long)(pool_ptr)+sizeof(struct fnet_mempool)+(alignment+1))
    23c6:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:90
                                                            & (0xffffffff-alignment));
        unsigned long heap_size = pool_size - ((unsigned long)heap_ptr - (unsigned long)pool_ptr);
    23c8:	68fa      	ldr	r2, [r7, #12]
    23ca:	69bb      	ldr	r3, [r7, #24]
    23cc:	1ad2      	subs	r2, r2, r3
    23ce:	68bb      	ldr	r3, [r7, #8]
    23d0:	4413      	add	r3, r2
    23d2:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:92
        
        mempool = (struct fnet_mempool *) pool_ptr;
    23d4:	68fb      	ldr	r3, [r7, #12]
    23d6:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:94
        
        mempool->unit_size = (unsigned char)(alignment+1);
    23d8:	79fb      	ldrb	r3, [r7, #7]
    23da:	3301      	adds	r3, #1
    23dc:	b2da      	uxtb	r2, r3
    23de:	69fb      	ldr	r3, [r7, #28]
    23e0:	711a      	strb	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:97
        
        
        p = (fnet_mempool_unit_header_t *)heap_ptr;
    23e2:	69bb      	ldr	r3, [r7, #24]
    23e4:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:98
        p->size = (heap_size / mempool->unit_size);
    23e6:	69fb      	ldr	r3, [r7, #28]
    23e8:	791b      	ldrb	r3, [r3, #4]
    23ea:	697a      	ldr	r2, [r7, #20]
    23ec:	fbb2 f2f3 	udiv	r2, r2, r3
    23f0:	693b      	ldr	r3, [r7, #16]
    23f2:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:99
        p->ptr = p;
    23f4:	693b      	ldr	r3, [r7, #16]
    23f6:	693a      	ldr	r2, [r7, #16]
    23f8:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:100
        mempool->free_ptr = p;
    23fa:	69fb      	ldr	r3, [r7, #28]
    23fc:	693a      	ldr	r2, [r7, #16]
    23fe:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:103
    }
    
    return (fnet_mempool_desc_t)mempool;
    2400:	69fb      	ldr	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:104
}
    2402:	4618      	mov	r0, r3
    2404:	3724      	adds	r7, #36	; 0x24
    2406:	46bd      	mov	sp, r7
    2408:	f85d 7b04 	ldr.w	r7, [sp], #4
    240c:	4770      	bx	lr
    240e:	bf00      	nop

00002410 <fnet_mempool_release>:
fnet_mempool_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:113
*
* DESCRIPTION: Release the mempool.
*              
*************************************************************************/
void fnet_mempool_release( fnet_mempool_desc_t mpool )
{
    2410:	b480      	push	{r7}
    2412:	b085      	sub	sp, #20
    2414:	af00      	add	r7, sp, #0
    2416:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:114
    struct fnet_mempool * mempool = (struct fnet_mempool *)mpool;
    2418:	687b      	ldr	r3, [r7, #4]
    241a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:115
    mempool->free_ptr = 0;
    241c:	68fb      	ldr	r3, [r7, #12]
    241e:	2200      	movs	r2, #0
    2420:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:116
}
    2422:	3714      	adds	r7, #20
    2424:	46bd      	mov	sp, r7
    2426:	f85d 7b04 	ldr.w	r7, [sp], #4
    242a:	4770      	bx	lr

0000242c <fnet_mempool_free>:
fnet_mempool_free():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:125
*
* DESCRIPTION: Frees memory in the mempool.
*              
*************************************************************************/
void fnet_mempool_free( fnet_mempool_desc_t mpool, void *ap )
{
    242c:	b580      	push	{r7, lr}
    242e:	b086      	sub	sp, #24
    2430:	af00      	add	r7, sp, #0
    2432:	6078      	str	r0, [r7, #4]
    2434:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:126
    struct fnet_mempool * mempool = (struct fnet_mempool *)mpool;
    2436:	687b      	ldr	r3, [r7, #4]
    2438:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:130
    
    fnet_mempool_unit_header_t *bp, *p;

    if(ap != 0)
    243a:	683b      	ldr	r3, [r7, #0]
    243c:	2b00      	cmp	r3, #0
    243e:	d063      	beq.n	2508 <fnet_mempool_free+0xdc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:132
    {
        fnet_isr_lock();
    2440:	f7ff ff06 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:135
      
        /* Block pointer = allocated memory block addr - allocation unit size.*/
        bp = (fnet_mempool_unit_header_t *)((unsigned long)ap - mempool->unit_size); /* Point to block header. */ 
    2444:	683a      	ldr	r2, [r7, #0]
    2446:	693b      	ldr	r3, [r7, #16]
    2448:	791b      	ldrb	r3, [r3, #4]
    244a:	1ad3      	subs	r3, r2, r3
    244c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:167
        if( i==DEBUG_ALLOCATED_ADDR_MAX)
            fnet_println ("This addr never allocated before!!!!!!!!");
    }
#endif

        for (p = mempool->free_ptr; !((bp > p) && (bp < p->ptr)); p = p->ptr)
    244e:	693b      	ldr	r3, [r7, #16]
    2450:	681b      	ldr	r3, [r3, #0]
    2452:	617b      	str	r3, [r7, #20]
    2454:	e010      	b.n	2478 <fnet_mempool_free+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:180
                return; 
            }
#endif            
                
            
            if((p >= p->ptr) && ((bp > p) || (bp < p->ptr)))
    2456:	697b      	ldr	r3, [r7, #20]
    2458:	685a      	ldr	r2, [r3, #4]
    245a:	697b      	ldr	r3, [r7, #20]
    245c:	429a      	cmp	r2, r3
    245e:	d808      	bhi.n	2472 <fnet_mempool_free+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:180 (discriminator 1)
    2460:	68fa      	ldr	r2, [r7, #12]
    2462:	697b      	ldr	r3, [r7, #20]
    2464:	429a      	cmp	r2, r3
    2466:	d810      	bhi.n	248a <fnet_mempool_free+0x5e>
    2468:	697b      	ldr	r3, [r7, #20]
    246a:	685a      	ldr	r2, [r3, #4]
    246c:	68fb      	ldr	r3, [r7, #12]
    246e:	429a      	cmp	r2, r3
    2470:	d80b      	bhi.n	248a <fnet_mempool_free+0x5e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:167
        if( i==DEBUG_ALLOCATED_ADDR_MAX)
            fnet_println ("This addr never allocated before!!!!!!!!");
    }
#endif

        for (p = mempool->free_ptr; !((bp > p) && (bp < p->ptr)); p = p->ptr)
    2472:	697b      	ldr	r3, [r7, #20]
    2474:	685b      	ldr	r3, [r3, #4]
    2476:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:167 (discriminator 1)
    2478:	68fa      	ldr	r2, [r7, #12]
    247a:	697b      	ldr	r3, [r7, #20]
    247c:	429a      	cmp	r2, r3
    247e:	d9ea      	bls.n	2456 <fnet_mempool_free+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:167 (discriminator 2)
    2480:	697b      	ldr	r3, [r7, #20]
    2482:	685a      	ldr	r2, [r3, #4]
    2484:	68fb      	ldr	r3, [r7, #12]
    2486:	429a      	cmp	r2, r3
    2488:	d9e5      	bls.n	2456 <fnet_mempool_free+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:186
            {
                break; /* Freed block at start or end of arena. */
            }
        }

        if((fnet_mempool_unit_header_t *)((unsigned long)bp + bp->size*mempool->unit_size) == p->ptr)
    248a:	68fb      	ldr	r3, [r7, #12]
    248c:	681b      	ldr	r3, [r3, #0]
    248e:	693a      	ldr	r2, [r7, #16]
    2490:	7912      	ldrb	r2, [r2, #4]
    2492:	fb02 f203 	mul.w	r2, r2, r3
    2496:	68fb      	ldr	r3, [r7, #12]
    2498:	4413      	add	r3, r2
    249a:	461a      	mov	r2, r3
    249c:	697b      	ldr	r3, [r7, #20]
    249e:	685b      	ldr	r3, [r3, #4]
    24a0:	429a      	cmp	r2, r3
    24a2:	d10d      	bne.n	24c0 <fnet_mempool_free+0x94>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:188
        {
            bp->size += p->ptr->size;
    24a4:	68fb      	ldr	r3, [r7, #12]
    24a6:	681a      	ldr	r2, [r3, #0]
    24a8:	697b      	ldr	r3, [r7, #20]
    24aa:	685b      	ldr	r3, [r3, #4]
    24ac:	681b      	ldr	r3, [r3, #0]
    24ae:	441a      	add	r2, r3
    24b0:	68fb      	ldr	r3, [r7, #12]
    24b2:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:189
            bp->ptr = p->ptr->ptr;
    24b4:	697b      	ldr	r3, [r7, #20]
    24b6:	685b      	ldr	r3, [r3, #4]
    24b8:	685a      	ldr	r2, [r3, #4]
    24ba:	68fb      	ldr	r3, [r7, #12]
    24bc:	605a      	str	r2, [r3, #4]
    24be:	e003      	b.n	24c8 <fnet_mempool_free+0x9c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:193
        }
        else
        {
            bp->ptr = p->ptr;
    24c0:	697b      	ldr	r3, [r7, #20]
    24c2:	685a      	ldr	r2, [r3, #4]
    24c4:	68fb      	ldr	r3, [r7, #12]
    24c6:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:196
        }

        if((fnet_mempool_unit_header_t *)((unsigned long)p + p->size*mempool->unit_size) == bp)
    24c8:	697b      	ldr	r3, [r7, #20]
    24ca:	681b      	ldr	r3, [r3, #0]
    24cc:	693a      	ldr	r2, [r7, #16]
    24ce:	7912      	ldrb	r2, [r2, #4]
    24d0:	fb02 f203 	mul.w	r2, r2, r3
    24d4:	697b      	ldr	r3, [r7, #20]
    24d6:	4413      	add	r3, r2
    24d8:	461a      	mov	r2, r3
    24da:	68fb      	ldr	r3, [r7, #12]
    24dc:	429a      	cmp	r2, r3
    24de:	d10b      	bne.n	24f8 <fnet_mempool_free+0xcc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:198
        {
            p->size += bp->size;
    24e0:	697b      	ldr	r3, [r7, #20]
    24e2:	681a      	ldr	r2, [r3, #0]
    24e4:	68fb      	ldr	r3, [r7, #12]
    24e6:	681b      	ldr	r3, [r3, #0]
    24e8:	441a      	add	r2, r3
    24ea:	697b      	ldr	r3, [r7, #20]
    24ec:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:199
            p->ptr = bp->ptr;
    24ee:	68fb      	ldr	r3, [r7, #12]
    24f0:	685a      	ldr	r2, [r3, #4]
    24f2:	697b      	ldr	r3, [r7, #20]
    24f4:	605a      	str	r2, [r3, #4]
    24f6:	e002      	b.n	24fe <fnet_mempool_free+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:203
        }
        else
        {
            p->ptr = bp;
    24f8:	697b      	ldr	r3, [r7, #20]
    24fa:	68fa      	ldr	r2, [r7, #12]
    24fc:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:206
        }
        
        mempool->free_ptr = p;
    24fe:	693b      	ldr	r3, [r7, #16]
    2500:	697a      	ldr	r2, [r7, #20]
    2502:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:208
 
        fnet_isr_unlock();
    2504:	f7ff feb2 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:211
    }

}
    2508:	3718      	adds	r7, #24
    250a:	46bd      	mov	sp, r7
    250c:	bd80      	pop	{r7, pc}
    250e:	bf00      	nop

00002510 <fnet_mempool_malloc>:
fnet_mempool_malloc():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:221
* DESCRIPTION: Allocates memory in the memory pool.
*              
*************************************************************************/
#if FNET_MEMPOOL_MALLOC_BEST_CHOICE /* Choose the best. */
void *fnet_mempool_malloc(fnet_mempool_desc_t mpool, unsigned nbytes )
{
    2510:	b580      	push	{r7, lr}
    2512:	b08a      	sub	sp, #40	; 0x28
    2514:	af00      	add	r7, sp, #0
    2516:	6078      	str	r0, [r7, #4]
    2518:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:222
    struct fnet_mempool * mempool = (struct fnet_mempool *)mpool;
    251a:	687b      	ldr	r3, [r7, #4]
    251c:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:224
    fnet_mempool_unit_header_t *p, *prevp;
    fnet_mempool_unit_header_t *best_p =0;
    251e:	2300      	movs	r3, #0
    2520:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:225
    fnet_mempool_unit_header_t *best_p_prev =0;
    2522:	2300      	movs	r3, #0
    2524:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:229
    unsigned nunits;
    void * res;

    fnet_isr_lock();
    2526:	f7ff fe93 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:231

    nunits = ((nbytes + mempool->unit_size - 1) / mempool->unit_size) + 1;
    252a:	693b      	ldr	r3, [r7, #16]
    252c:	791b      	ldrb	r3, [r3, #4]
    252e:	461a      	mov	r2, r3
    2530:	683b      	ldr	r3, [r7, #0]
    2532:	4413      	add	r3, r2
    2534:	1e5a      	subs	r2, r3, #1
    2536:	693b      	ldr	r3, [r7, #16]
    2538:	791b      	ldrb	r3, [r3, #4]
    253a:	fbb2 f3f3 	udiv	r3, r2, r3
    253e:	3301      	adds	r3, #1
    2540:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:233

    prevp = mempool->free_ptr;
    2542:	693b      	ldr	r3, [r7, #16]
    2544:	681b      	ldr	r3, [r3, #0]
    2546:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:235
    
    best_p_prev = prevp;
    2548:	6a3b      	ldr	r3, [r7, #32]
    254a:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:238
    
    /* Find the best one. */
    for(p = prevp->ptr; ; prevp = p, p = p->ptr)
    254c:	6a3b      	ldr	r3, [r7, #32]
    254e:	685b      	ldr	r3, [r3, #4]
    2550:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:240
    {
        if( (p->size >= nunits) && ( (best_p==0) || ((best_p)&&(best_p->size > p->size)) ) )
    2552:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2554:	681a      	ldr	r2, [r3, #0]
    2556:	68fb      	ldr	r3, [r7, #12]
    2558:	429a      	cmp	r2, r3
    255a:	d30f      	bcc.n	257c <fnet_mempool_malloc+0x6c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:240 (discriminator 1)
    255c:	69fb      	ldr	r3, [r7, #28]
    255e:	2b00      	cmp	r3, #0
    2560:	d008      	beq.n	2574 <fnet_mempool_malloc+0x64>
    2562:	69fb      	ldr	r3, [r7, #28]
    2564:	2b00      	cmp	r3, #0
    2566:	d009      	beq.n	257c <fnet_mempool_malloc+0x6c>
    2568:	69fb      	ldr	r3, [r7, #28]
    256a:	681a      	ldr	r2, [r3, #0]
    256c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    256e:	681b      	ldr	r3, [r3, #0]
    2570:	429a      	cmp	r2, r3
    2572:	d903      	bls.n	257c <fnet_mempool_malloc+0x6c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:242
        {
            best_p_prev = prevp;
    2574:	6a3b      	ldr	r3, [r7, #32]
    2576:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:243
            best_p = p;  
    2578:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    257a:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:246
        }
        
        if(p == mempool->free_ptr)
    257c:	693b      	ldr	r3, [r7, #16]
    257e:	681a      	ldr	r2, [r3, #0]
    2580:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2582:	429a      	cmp	r2, r3
    2584:	d104      	bne.n	2590 <fnet_mempool_malloc+0x80>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:247
            break; /* End of list is reached. */
    2586:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:250
    }

    if(best_p)
    2588:	69fb      	ldr	r3, [r7, #28]
    258a:	2b00      	cmp	r3, #0
    258c:	d02c      	beq.n	25e8 <fnet_mempool_malloc+0xd8>
    258e:	e005      	b.n	259c <fnet_mempool_malloc+0x8c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:238
    prevp = mempool->free_ptr;
    
    best_p_prev = prevp;
    
    /* Find the best one. */
    for(p = prevp->ptr; ; prevp = p, p = p->ptr)
    2590:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2592:	623b      	str	r3, [r7, #32]
    2594:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2596:	685b      	ldr	r3, [r3, #4]
    2598:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:248
            best_p = p;  
        }
        
        if(p == mempool->free_ptr)
            break; /* End of list is reached. */
    }
    259a:	e7da      	b.n	2552 <fnet_mempool_malloc+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:252

    if(best_p)
    {
        if(best_p->size == nunits)
    259c:	69fb      	ldr	r3, [r7, #28]
    259e:	681a      	ldr	r2, [r3, #0]
    25a0:	68fb      	ldr	r3, [r7, #12]
    25a2:	429a      	cmp	r2, r3
    25a4:	d104      	bne.n	25b0 <fnet_mempool_malloc+0xa0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:254
        {
            best_p_prev->ptr = best_p->ptr;
    25a6:	69fb      	ldr	r3, [r7, #28]
    25a8:	685a      	ldr	r2, [r3, #4]
    25aa:	69bb      	ldr	r3, [r7, #24]
    25ac:	605a      	str	r2, [r3, #4]
    25ae:	e011      	b.n	25d4 <fnet_mempool_malloc+0xc4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:258
        }
        else
        {
            best_p->size -= nunits; /* Put to the top. */
    25b0:	69fb      	ldr	r3, [r7, #28]
    25b2:	681a      	ldr	r2, [r3, #0]
    25b4:	68fb      	ldr	r3, [r7, #12]
    25b6:	1ad2      	subs	r2, r2, r3
    25b8:	69fb      	ldr	r3, [r7, #28]
    25ba:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:259
            best_p = (fnet_mempool_unit_header_t *)((unsigned long)best_p + best_p->size*mempool->unit_size);
    25bc:	69fb      	ldr	r3, [r7, #28]
    25be:	681b      	ldr	r3, [r3, #0]
    25c0:	693a      	ldr	r2, [r7, #16]
    25c2:	7912      	ldrb	r2, [r2, #4]
    25c4:	fb02 f203 	mul.w	r2, r2, r3
    25c8:	69fb      	ldr	r3, [r7, #28]
    25ca:	4413      	add	r3, r2
    25cc:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:260
            best_p->size = nunits;
    25ce:	69fb      	ldr	r3, [r7, #28]
    25d0:	68fa      	ldr	r2, [r7, #12]
    25d2:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:263 (discriminator 1)
        }

        mempool->free_ptr = best_p_prev;
    25d4:	693b      	ldr	r3, [r7, #16]
    25d6:	69ba      	ldr	r2, [r7, #24]
    25d8:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:264 (discriminator 1)
        res = (void *)((unsigned long)best_p + mempool->unit_size);
    25da:	693b      	ldr	r3, [r7, #16]
    25dc:	791b      	ldrb	r3, [r3, #4]
    25de:	461a      	mov	r2, r3
    25e0:	69fb      	ldr	r3, [r7, #28]
    25e2:	4413      	add	r3, r2
    25e4:	617b      	str	r3, [r7, #20]
    25e6:	e001      	b.n	25ec <fnet_mempool_malloc+0xdc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:272
#endif  
    }
    else
    {
		/* Break here to detect allocation errors */
        res = 0;
    25e8:	2300      	movs	r3, #0
    25ea:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:297
        if( i==DEBUG_ALLOCATED_ADDR_MAX)
            fnet_println ("Addr_table_overload!!!");
    }
#endif
    
    fnet_isr_unlock();
    25ec:	f7ff fe3e 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:299
    
    return res;
    25f0:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:300
}
    25f2:	4618      	mov	r0, r3
    25f4:	3728      	adds	r7, #40	; 0x28
    25f6:	46bd      	mov	sp, r7
    25f8:	bd80      	pop	{r7, pc}
    25fa:	bf00      	nop

000025fc <fnet_mempool_free_mem_status>:
fnet_mempool_free_mem_status():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:359
*
* DESCRIPTION: Returns a quantity of free memory (for debug needs)
*              
*************************************************************************/
unsigned long fnet_mempool_free_mem_status( fnet_mempool_desc_t mpool)
{
    25fc:	b580      	push	{r7, lr}
    25fe:	b086      	sub	sp, #24
    2600:	af00      	add	r7, sp, #0
    2602:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:360
    struct fnet_mempool * mempool = (struct fnet_mempool *)mpool;
    2604:	687b      	ldr	r3, [r7, #4]
    2606:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:361
    unsigned long total_size = 0;
    2608:	2300      	movs	r3, #0
    260a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:364
    fnet_mempool_unit_header_t *t_mem;

    fnet_isr_lock();
    260c:	f7ff fe20 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:366

    t_mem = mempool->free_ptr;
    2610:	68fb      	ldr	r3, [r7, #12]
    2612:	681b      	ldr	r3, [r3, #0]
    2614:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:368

    if(t_mem == 0)
    2616:	693b      	ldr	r3, [r7, #16]
    2618:	2b00      	cmp	r3, #0
    261a:	d101      	bne.n	2620 <fnet_mempool_free_mem_status+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:369
        return 0;
    261c:	2300      	movs	r3, #0
    261e:	e01a      	b.n	2656 <fnet_mempool_free_mem_status+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:371

    total_size += t_mem->size;
    2620:	693b      	ldr	r3, [r7, #16]
    2622:	681b      	ldr	r3, [r3, #0]
    2624:	697a      	ldr	r2, [r7, #20]
    2626:	4413      	add	r3, r2
    2628:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:374
    /* FNET_DEBUG("%d,",t_mem->size*sizeof(FNET_ALLOC_HDR_T));*/

    while(t_mem->ptr != mempool->free_ptr)
    262a:	e007      	b.n	263c <fnet_mempool_free_mem_status+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:376
    {
        t_mem = t_mem->ptr;
    262c:	693b      	ldr	r3, [r7, #16]
    262e:	685b      	ldr	r3, [r3, #4]
    2630:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:377
        total_size += t_mem->size;
    2632:	693b      	ldr	r3, [r7, #16]
    2634:	681b      	ldr	r3, [r3, #0]
    2636:	697a      	ldr	r2, [r7, #20]
    2638:	4413      	add	r3, r2
    263a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:374 (discriminator 1)
        return 0;

    total_size += t_mem->size;
    /* FNET_DEBUG("%d,",t_mem->size*sizeof(FNET_ALLOC_HDR_T));*/

    while(t_mem->ptr != mempool->free_ptr)
    263c:	693b      	ldr	r3, [r7, #16]
    263e:	685a      	ldr	r2, [r3, #4]
    2640:	68fb      	ldr	r3, [r7, #12]
    2642:	681b      	ldr	r3, [r3, #0]
    2644:	429a      	cmp	r2, r3
    2646:	d1f1      	bne.n	262c <fnet_mempool_free_mem_status+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:383
    /* FNET_DEBUG("%d,",t_mem->size*sizeof(FNET_ALLOC_HDR_T));*/
    }
    /*FNET_DEBUG("");*/


    fnet_isr_unlock();
    2648:	f7ff fe10 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:385

    return (total_size * mempool->unit_size);
    264c:	68fb      	ldr	r3, [r7, #12]
    264e:	791b      	ldrb	r3, [r3, #4]
    2650:	697a      	ldr	r2, [r7, #20]
    2652:	fb02 f303 	mul.w	r3, r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:386
}
    2656:	4618      	mov	r0, r3
    2658:	3718      	adds	r7, #24
    265a:	46bd      	mov	sp, r7
    265c:	bd80      	pop	{r7, pc}
    265e:	bf00      	nop

00002660 <fnet_mempool_malloc_max>:
fnet_mempool_malloc_max():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:395
*
* DESCRIPTION: Returns a maximum size of posible allocated memory chunk.
*              
*************************************************************************/
unsigned long fnet_mempool_malloc_max( fnet_mempool_desc_t mpool )
{
    2660:	b580      	push	{r7, lr}
    2662:	b086      	sub	sp, #24
    2664:	af00      	add	r7, sp, #0
    2666:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:396
    struct fnet_mempool * mempool = (struct fnet_mempool *)mpool;
    2668:	687b      	ldr	r3, [r7, #4]
    266a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:397
    unsigned long max = 0;
    266c:	2300      	movs	r3, #0
    266e:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:400
    fnet_mempool_unit_header_t *t_mem;

    fnet_isr_lock();
    2670:	f7ff fdee 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:402

    t_mem = mempool->free_ptr;
    2674:	68fb      	ldr	r3, [r7, #12]
    2676:	681b      	ldr	r3, [r3, #0]
    2678:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:404

    if(t_mem == 0)
    267a:	693b      	ldr	r3, [r7, #16]
    267c:	2b00      	cmp	r3, #0
    267e:	d101      	bne.n	2684 <fnet_mempool_malloc_max+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:405
        return 0;
    2680:	2300      	movs	r3, #0
    2682:	e01f      	b.n	26c4 <fnet_mempool_malloc_max+0x64>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:407

    max = t_mem->size;
    2684:	693b      	ldr	r3, [r7, #16]
    2686:	681b      	ldr	r3, [r3, #0]
    2688:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:410
    /*FNET_DEBUG("%d,", t_mem->size * sizeof(FNET_ALLOC_HDR_T));*/

    while(t_mem->ptr && (t_mem->ptr != mempool->free_ptr))
    268a:	e00a      	b.n	26a2 <fnet_mempool_malloc_max+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:412
    {
        t_mem = t_mem->ptr;
    268c:	693b      	ldr	r3, [r7, #16]
    268e:	685b      	ldr	r3, [r3, #4]
    2690:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:414

        if(t_mem->size > max)
    2692:	693b      	ldr	r3, [r7, #16]
    2694:	681a      	ldr	r2, [r3, #0]
    2696:	697b      	ldr	r3, [r7, #20]
    2698:	429a      	cmp	r2, r3
    269a:	d902      	bls.n	26a2 <fnet_mempool_malloc_max+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:415
            max = t_mem->size;
    269c:	693b      	ldr	r3, [r7, #16]
    269e:	681b      	ldr	r3, [r3, #0]
    26a0:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:410 (discriminator 1)
        return 0;

    max = t_mem->size;
    /*FNET_DEBUG("%d,", t_mem->size * sizeof(FNET_ALLOC_HDR_T));*/

    while(t_mem->ptr && (t_mem->ptr != mempool->free_ptr))
    26a2:	693b      	ldr	r3, [r7, #16]
    26a4:	685b      	ldr	r3, [r3, #4]
    26a6:	2b00      	cmp	r3, #0
    26a8:	d005      	beq.n	26b6 <fnet_mempool_malloc_max+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:410 (discriminator 2)
    26aa:	693b      	ldr	r3, [r7, #16]
    26ac:	685a      	ldr	r2, [r3, #4]
    26ae:	68fb      	ldr	r3, [r7, #12]
    26b0:	681b      	ldr	r3, [r3, #0]
    26b2:	429a      	cmp	r2, r3
    26b4:	d1ea      	bne.n	268c <fnet_mempool_malloc_max+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:422
        /*FNET_DEBUG("%d,", t_mem->size * sizeof(FNET_ALLOC_HDR_T));*/
    }

    /*FNET_DEBUG("");*/

    fnet_isr_unlock();
    26b6:	f7ff fdd9 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:424

    return (max * mempool->unit_size);
    26ba:	68fb      	ldr	r3, [r7, #12]
    26bc:	791b      	ldrb	r3, [r3, #4]
    26be:	697a      	ldr	r2, [r7, #20]
    26c0:	fb02 f303 	mul.w	r3, r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_mempool.c:425
}
    26c4:	4618      	mov	r0, r3
    26c6:	3718      	adds	r7, #24
    26c8:	46bd      	mov	sp, r7
    26ca:	bd80      	pop	{r7, pc}

000026cc <fnet_netbuf_new>:
fnet_netbuf_new():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:77
*
* DESCRIPTION: Creates a new net_buf and allocates memory
*              for a new data buffer. 
*************************************************************************/
fnet_netbuf_t *fnet_netbuf_new( int len, int drain )
{
    26cc:	b580      	push	{r7, lr}
    26ce:	b084      	sub	sp, #16
    26d0:	af00      	add	r7, sp, #0
    26d2:	6078      	str	r0, [r7, #4]
    26d4:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:81
    fnet_netbuf_t   *nb;
    void            *nb_d;

    if(len < 0)
    26d6:	687b      	ldr	r3, [r7, #4]
    26d8:	2b00      	cmp	r3, #0
    26da:	da01      	bge.n	26e0 <fnet_netbuf_new+0x14>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:82
        return (fnet_netbuf_t *)0;
    26dc:	2300      	movs	r3, #0
    26de:	e04a      	b.n	2776 <fnet_netbuf_new+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:85


    nb = (fnet_netbuf_t *)fnet_malloc_netbuf(sizeof(fnet_netbuf_t));
    26e0:	201c      	movs	r0, #28
    26e2:	f000 fd51 	bl	3188 <fnet_malloc_netbuf>
    26e6:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:87

    if((nb == 0) && drain)
    26e8:	68fb      	ldr	r3, [r7, #12]
    26ea:	2b00      	cmp	r3, #0
    26ec:	d108      	bne.n	2700 <fnet_netbuf_new+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:87 (discriminator 1)
    26ee:	683b      	ldr	r3, [r7, #0]
    26f0:	2b00      	cmp	r3, #0
    26f2:	d005      	beq.n	2700 <fnet_netbuf_new+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:89
    {
        fnet_prot_drain();
    26f4:	f001 faac 	bl	3c50 <fnet_prot_drain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:90
        nb = (fnet_netbuf_t *)fnet_malloc_netbuf(sizeof(fnet_netbuf_t));
    26f8:	201c      	movs	r0, #28
    26fa:	f000 fd45 	bl	3188 <fnet_malloc_netbuf>
    26fe:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:93
    }

    if(nb == 0) /* If FNET_NETBUF_MALLOC_NOWAIT and no free memory for a new net_buf*/
    2700:	68fb      	ldr	r3, [r7, #12]
    2702:	2b00      	cmp	r3, #0
    2704:	d101      	bne.n	270a <fnet_netbuf_new+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:95
    {
        return (fnet_netbuf_t *)0;
    2706:	2300      	movs	r3, #0
    2708:	e035      	b.n	2776 <fnet_netbuf_new+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:99
    }


    nb_d = fnet_malloc_netbuf((unsigned int)len + sizeof(int)/* For reference_counter */);
    270a:	687b      	ldr	r3, [r7, #4]
    270c:	3304      	adds	r3, #4
    270e:	4618      	mov	r0, r3
    2710:	f000 fd3a 	bl	3188 <fnet_malloc_netbuf>
    2714:	60b8      	str	r0, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:101

    if((nb_d == 0) && drain )
    2716:	68bb      	ldr	r3, [r7, #8]
    2718:	2b00      	cmp	r3, #0
    271a:	d10a      	bne.n	2732 <fnet_netbuf_new+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:101 (discriminator 1)
    271c:	683b      	ldr	r3, [r7, #0]
    271e:	2b00      	cmp	r3, #0
    2720:	d007      	beq.n	2732 <fnet_netbuf_new+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:103
    {
        fnet_prot_drain();
    2722:	f001 fa95 	bl	3c50 <fnet_prot_drain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:104
        nb_d = fnet_malloc_netbuf((unsigned int)len + sizeof(int)/* For reference_counter */);
    2726:	687b      	ldr	r3, [r7, #4]
    2728:	3304      	adds	r3, #4
    272a:	4618      	mov	r0, r3
    272c:	f000 fd2c 	bl	3188 <fnet_malloc_netbuf>
    2730:	60b8      	str	r0, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:108
    }


    if(nb_d == 0) /* If FNET_NETBUF_MALLOC_NOWAIT and no free memory for data.*/
    2732:	68bb      	ldr	r3, [r7, #8]
    2734:	2b00      	cmp	r3, #0
    2736:	d104      	bne.n	2742 <fnet_netbuf_new+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:110
    {
        fnet_free_netbuf(nb);
    2738:	68f8      	ldr	r0, [r7, #12]
    273a:	f000 fd15 	bl	3168 <fnet_free_netbuf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:111
        return (fnet_netbuf_t *)0;
    273e:	2300      	movs	r3, #0
    2740:	e019      	b.n	2776 <fnet_netbuf_new+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:114
    }

    nb->next = (fnet_netbuf_t *)0;
    2742:	68fb      	ldr	r3, [r7, #12]
    2744:	2200      	movs	r2, #0
    2746:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:115
    nb->next_chain = (fnet_netbuf_t *)0;
    2748:	68fb      	ldr	r3, [r7, #12]
    274a:	2200      	movs	r2, #0
    274c:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:119

    /* In memory net_buf's data is after the descriptor "data".*/
    
    ((int *)nb_d)[0] = 1; /* First element is used by the reference_counter.*/
    274e:	68bb      	ldr	r3, [r7, #8]
    2750:	2201      	movs	r2, #1
    2752:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:120
    nb->data = &((int *)nb_d)[0];
    2754:	68fb      	ldr	r3, [r7, #12]
    2756:	68ba      	ldr	r2, [r7, #8]
    2758:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:121
    nb->data_ptr = &((int *)nb_d)[1];
    275a:	68bb      	ldr	r3, [r7, #8]
    275c:	1d1a      	adds	r2, r3, #4
    275e:	68fb      	ldr	r3, [r7, #12]
    2760:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:122
    nb->length = (unsigned long)len;
    2762:	687a      	ldr	r2, [r7, #4]
    2764:	68fb      	ldr	r3, [r7, #12]
    2766:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:123
    nb->total_length = (unsigned long)len;
    2768:	687a      	ldr	r2, [r7, #4]
    276a:	68fb      	ldr	r3, [r7, #12]
    276c:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:124
    nb->flags = 0;
    276e:	68fb      	ldr	r3, [r7, #12]
    2770:	2200      	movs	r2, #0
    2772:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:126

    return (nb);
    2774:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:127
}
    2776:	4618      	mov	r0, r3
    2778:	3710      	adds	r7, #16
    277a:	46bd      	mov	sp, r7
    277c:	bd80      	pop	{r7, pc}
    277e:	bf00      	nop

00002780 <fnet_netbuf_copy>:
fnet_netbuf_copy():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:136
*
* DESCRIPTION: Creates a new net_buf using data buffer, 
*              which was created before for another net_buf. 
*************************************************************************/
fnet_netbuf_t *fnet_netbuf_copy( fnet_netbuf_t *nb, int offset, int len, int drain )
{
    2780:	b580      	push	{r7, lr}
    2782:	b08a      	sub	sp, #40	; 0x28
    2784:	af00      	add	r7, sp, #0
    2786:	60f8      	str	r0, [r7, #12]
    2788:	60b9      	str	r1, [r7, #8]
    278a:	607a      	str	r2, [r7, #4]
    278c:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:138
    fnet_netbuf_t *loc_nb, *loc_nb_head, *tmp_nb;
    long tot_len = 0, tot_offset = 0;
    278e:	2300      	movs	r3, #0
    2790:	61bb      	str	r3, [r7, #24]
    2792:	2300      	movs	r3, #0
    2794:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:140

    tmp_nb = nb;
    2796:	68fb      	ldr	r3, [r7, #12]
    2798:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:144 (discriminator 1)

    do /* Calculate the total length of the buf for current net_buf chain.*/
    {
        tot_len += tmp_nb->length;
    279a:	69fb      	ldr	r3, [r7, #28]
    279c:	691a      	ldr	r2, [r3, #16]
    279e:	69bb      	ldr	r3, [r7, #24]
    27a0:	4413      	add	r3, r2
    27a2:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:145 (discriminator 1)
        tmp_nb = tmp_nb->next;
    27a4:	69fb      	ldr	r3, [r7, #28]
    27a6:	681b      	ldr	r3, [r3, #0]
    27a8:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:146 (discriminator 1)
    } while (tmp_nb);
    27aa:	69fb      	ldr	r3, [r7, #28]
    27ac:	2b00      	cmp	r3, #0
    27ae:	d1f4      	bne.n	279a <fnet_netbuf_copy+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:148

    if(len == FNET_NETBUF_COPYALL)
    27b0:	687b      	ldr	r3, [r7, #4]
    27b2:	f1b3 3fff 	cmp.w	r3, #4294967295
    27b6:	d106      	bne.n	27c6 <fnet_netbuf_copy+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:150
    {
        tot_len -= offset;
    27b8:	69ba      	ldr	r2, [r7, #24]
    27ba:	68bb      	ldr	r3, [r7, #8]
    27bc:	1ad3      	subs	r3, r2, r3
    27be:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:151
        len = tot_len;
    27c0:	69bb      	ldr	r3, [r7, #24]
    27c2:	607b      	str	r3, [r7, #4]
    27c4:	e00c      	b.n	27e0 <fnet_netbuf_copy+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:155
    }
    else
    {
        if((len > tot_len - offset) || (tot_len - offset < 0))
    27c6:	69ba      	ldr	r2, [r7, #24]
    27c8:	68bb      	ldr	r3, [r7, #8]
    27ca:	1ad2      	subs	r2, r2, r3
    27cc:	687b      	ldr	r3, [r7, #4]
    27ce:	429a      	cmp	r2, r3
    27d0:	db04      	blt.n	27dc <fnet_netbuf_copy+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:155 (discriminator 1)
    27d2:	69ba      	ldr	r2, [r7, #24]
    27d4:	68bb      	ldr	r3, [r7, #8]
    27d6:	1ad3      	subs	r3, r2, r3
    27d8:	2b00      	cmp	r3, #0
    27da:	da01      	bge.n	27e0 <fnet_netbuf_copy+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:157
        {
            return (fnet_netbuf_t *)0;
    27dc:	2300      	movs	r3, #0
    27de:	e0cb      	b.n	2978 <fnet_netbuf_copy+0x1f8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:162
        }    
    }
    /* In tot_len finally - the size of required net_buf data*/

    if(offset < 0)
    27e0:	68bb      	ldr	r3, [r7, #8]
    27e2:	2b00      	cmp	r3, #0
    27e4:	da01      	bge.n	27ea <fnet_netbuf_copy+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:164
    {
        return (fnet_netbuf_t *)0;
    27e6:	2300      	movs	r3, #0
    27e8:	e0c6      	b.n	2978 <fnet_netbuf_copy+0x1f8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:167
    }

    tmp_nb = nb;
    27ea:	68fb      	ldr	r3, [r7, #12]
    27ec:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:170


    loc_nb = (fnet_netbuf_t *)fnet_malloc_netbuf(sizeof(fnet_netbuf_t));
    27ee:	201c      	movs	r0, #28
    27f0:	f000 fcca 	bl	3188 <fnet_malloc_netbuf>
    27f4:	6278      	str	r0, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:172

    if((loc_nb == 0) && drain)
    27f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    27f8:	2b00      	cmp	r3, #0
    27fa:	d108      	bne.n	280e <fnet_netbuf_copy+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:172 (discriminator 1)
    27fc:	683b      	ldr	r3, [r7, #0]
    27fe:	2b00      	cmp	r3, #0
    2800:	d005      	beq.n	280e <fnet_netbuf_copy+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:174
    {
        fnet_prot_drain();
    2802:	f001 fa25 	bl	3c50 <fnet_prot_drain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:175
        loc_nb = (fnet_netbuf_t *)fnet_malloc_netbuf(sizeof(fnet_netbuf_t));
    2806:	201c      	movs	r0, #28
    2808:	f000 fcbe 	bl	3188 <fnet_malloc_netbuf>
    280c:	6278      	str	r0, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:178
    }

    if(loc_nb == 0)
    280e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2810:	2b00      	cmp	r3, #0
    2812:	d101      	bne.n	2818 <fnet_netbuf_copy+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:180
    {
        return (fnet_netbuf_t *)0;
    2814:	2300      	movs	r3, #0
    2816:	e0af      	b.n	2978 <fnet_netbuf_copy+0x1f8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:183
    }

    loc_nb_head = loc_nb; /* Save the head of net_buf chain.*/
    2818:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    281a:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:184
    loc_nb->next_chain = (fnet_netbuf_t *)0;
    281c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    281e:	2200      	movs	r2, #0
    2820:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:185
    loc_nb->total_length = (unsigned long)len;
    2822:	687a      	ldr	r2, [r7, #4]
    2824:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2826:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:186
    loc_nb->flags = nb->flags;
    2828:	68fb      	ldr	r3, [r7, #12]
    282a:	699a      	ldr	r2, [r3, #24]
    282c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    282e:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:188

    if(tmp_nb->length > offset) /* If offset less than size of 1st net_buf.*/
    2830:	69fb      	ldr	r3, [r7, #28]
    2832:	691a      	ldr	r2, [r3, #16]
    2834:	68bb      	ldr	r3, [r7, #8]
    2836:	429a      	cmp	r2, r3
    2838:	d902      	bls.n	2840 <fnet_netbuf_copy+0xc0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:190
    {
        tot_offset = offset;
    283a:	68bb      	ldr	r3, [r7, #8]
    283c:	617b      	str	r3, [r7, #20]
    283e:	e013      	b.n	2868 <fnet_netbuf_copy+0xe8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:194
    }
    else /* Find corresponding net_buf and calculate the offset in it.*/
    {
        while((tot_offset += tmp_nb->length) <= offset)
    2840:	e002      	b.n	2848 <fnet_netbuf_copy+0xc8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:195
            tmp_nb = tmp_nb->next;
    2842:	69fb      	ldr	r3, [r7, #28]
    2844:	681b      	ldr	r3, [r3, #0]
    2846:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:194 (discriminator 1)
    {
        tot_offset = offset;
    }
    else /* Find corresponding net_buf and calculate the offset in it.*/
    {
        while((tot_offset += tmp_nb->length) <= offset)
    2848:	69fb      	ldr	r3, [r7, #28]
    284a:	691a      	ldr	r2, [r3, #16]
    284c:	697b      	ldr	r3, [r7, #20]
    284e:	4413      	add	r3, r2
    2850:	617b      	str	r3, [r7, #20]
    2852:	697a      	ldr	r2, [r7, #20]
    2854:	68bb      	ldr	r3, [r7, #8]
    2856:	429a      	cmp	r2, r3
    2858:	ddf3      	ble.n	2842 <fnet_netbuf_copy+0xc2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:197
            tmp_nb = tmp_nb->next;

        tot_offset = (long)(tmp_nb->length + offset - tot_offset);
    285a:	69fb      	ldr	r3, [r7, #28]
    285c:	691a      	ldr	r2, [r3, #16]
    285e:	68bb      	ldr	r3, [r7, #8]
    2860:	441a      	add	r2, r3
    2862:	697b      	ldr	r3, [r7, #20]
    2864:	1ad3      	subs	r3, r2, r3
    2866:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:200
    }

    loc_nb->data = tmp_nb->data;
    2868:	69fb      	ldr	r3, [r7, #28]
    286a:	689a      	ldr	r2, [r3, #8]
    286c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    286e:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:202

    loc_nb->data_ptr = (unsigned char *)tmp_nb->data_ptr + tot_offset;
    2870:	69fb      	ldr	r3, [r7, #28]
    2872:	68da      	ldr	r2, [r3, #12]
    2874:	697b      	ldr	r3, [r7, #20]
    2876:	441a      	add	r2, r3
    2878:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    287a:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:204
    
    ((int *)loc_nb->data)[0] = ((int *)loc_nb->data)[0] + 1;    /* Increment the the reference_counter.*/
    287c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    287e:	689b      	ldr	r3, [r3, #8]
    2880:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    2882:	6892      	ldr	r2, [r2, #8]
    2884:	6812      	ldr	r2, [r2, #0]
    2886:	3201      	adds	r2, #1
    2888:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:206
    
    tot_len = (long)(len - (tmp_nb->length - tot_offset));
    288a:	697a      	ldr	r2, [r7, #20]
    288c:	69fb      	ldr	r3, [r7, #28]
    288e:	691b      	ldr	r3, [r3, #16]
    2890:	1ad2      	subs	r2, r2, r3
    2892:	687b      	ldr	r3, [r7, #4]
    2894:	4413      	add	r3, r2
    2896:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:208

    if(tot_len <= 0) /* If only one net_buf required.*/
    2898:	69bb      	ldr	r3, [r7, #24]
    289a:	2b00      	cmp	r3, #0
    289c:	dc03      	bgt.n	28a6 <fnet_netbuf_copy+0x126>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:209
        loc_nb->length = (unsigned long)len;
    289e:	687a      	ldr	r2, [r7, #4]
    28a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    28a2:	611a      	str	r2, [r3, #16]
    28a4:	e064      	b.n	2970 <fnet_netbuf_copy+0x1f0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:212
    else
    {
        loc_nb->length = tmp_nb->length - tot_offset;
    28a6:	69fb      	ldr	r3, [r7, #28]
    28a8:	691a      	ldr	r2, [r3, #16]
    28aa:	697b      	ldr	r3, [r7, #20]
    28ac:	1ad2      	subs	r2, r2, r3
    28ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    28b0:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:216

        do
        {
            loc_nb->next = (fnet_netbuf_t *)fnet_malloc_netbuf(sizeof(fnet_netbuf_t));
    28b2:	201c      	movs	r0, #28
    28b4:	f000 fc68 	bl	3188 <fnet_malloc_netbuf>
    28b8:	4602      	mov	r2, r0
    28ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    28bc:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:218

            if((loc_nb->next == 0) && drain )
    28be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    28c0:	681b      	ldr	r3, [r3, #0]
    28c2:	2b00      	cmp	r3, #0
    28c4:	d10a      	bne.n	28dc <fnet_netbuf_copy+0x15c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:218 (discriminator 1)
    28c6:	683b      	ldr	r3, [r7, #0]
    28c8:	2b00      	cmp	r3, #0
    28ca:	d007      	beq.n	28dc <fnet_netbuf_copy+0x15c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:220
            {
                fnet_prot_drain();
    28cc:	f001 f9c0 	bl	3c50 <fnet_prot_drain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:221
                loc_nb->next = (fnet_netbuf_t *)fnet_malloc_netbuf(sizeof(fnet_netbuf_t));
    28d0:	201c      	movs	r0, #28
    28d2:	f000 fc59 	bl	3188 <fnet_malloc_netbuf>
    28d6:	4602      	mov	r2, r0
    28d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    28da:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:224
            }

            if(loc_nb->next == 0) /* there is a need to erase all buffers,*/
    28dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    28de:	681b      	ldr	r3, [r3, #0]
    28e0:	2b00      	cmp	r3, #0
    28e2:	d113      	bne.n	290c <fnet_netbuf_copy+0x18c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:226
            {                     /* which were created earlier.*/
                loc_nb_head = fnet_netbuf_free(loc_nb_head);
    28e4:	6a38      	ldr	r0, [r7, #32]
    28e6:	f000 f8e5 	bl	2ab4 <fnet_netbuf_free>
    28ea:	6238      	str	r0, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:228

                while(loc_nb_head != loc_nb->next)
    28ec:	e007      	b.n	28fe <fnet_netbuf_copy+0x17e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:230
                {
                    tmp_nb = loc_nb_head->next;
    28ee:	6a3b      	ldr	r3, [r7, #32]
    28f0:	681b      	ldr	r3, [r3, #0]
    28f2:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:231
                    fnet_free_netbuf(loc_nb_head);
    28f4:	6a38      	ldr	r0, [r7, #32]
    28f6:	f000 fc37 	bl	3168 <fnet_free_netbuf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:232
                    loc_nb_head = tmp_nb;
    28fa:	69fb      	ldr	r3, [r7, #28]
    28fc:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:228 (discriminator 1)

            if(loc_nb->next == 0) /* there is a need to erase all buffers,*/
            {                     /* which were created earlier.*/
                loc_nb_head = fnet_netbuf_free(loc_nb_head);

                while(loc_nb_head != loc_nb->next)
    28fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2900:	681a      	ldr	r2, [r3, #0]
    2902:	6a3b      	ldr	r3, [r7, #32]
    2904:	429a      	cmp	r2, r3
    2906:	d1f2      	bne.n	28ee <fnet_netbuf_copy+0x16e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:235
                    tmp_nb = loc_nb_head->next;
                    fnet_free_netbuf(loc_nb_head);
                    loc_nb_head = tmp_nb;
                }
                
                return (fnet_netbuf_t *)0;
    2908:	2300      	movs	r3, #0
    290a:	e035      	b.n	2978 <fnet_netbuf_copy+0x1f8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:238
            }

            loc_nb = loc_nb->next;
    290c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    290e:	681b      	ldr	r3, [r3, #0]
    2910:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:239
            loc_nb->next_chain = (fnet_netbuf_t *)0;
    2912:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2914:	2200      	movs	r2, #0
    2916:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:241

            tmp_nb = tmp_nb->next;
    2918:	69fb      	ldr	r3, [r7, #28]
    291a:	681b      	ldr	r3, [r3, #0]
    291c:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:243

            loc_nb->data = tmp_nb->data;
    291e:	69fb      	ldr	r3, [r7, #28]
    2920:	689a      	ldr	r2, [r3, #8]
    2922:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2924:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:244
            loc_nb->flags = tmp_nb->flags; 
    2926:	69fb      	ldr	r3, [r7, #28]
    2928:	699a      	ldr	r2, [r3, #24]
    292a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    292c:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:246

            ((int *)loc_nb->data)[0] = ((int *)loc_nb->data)[0] + 1; /* Increment the the reference_counter.*/
    292e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2930:	689b      	ldr	r3, [r3, #8]
    2932:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    2934:	6892      	ldr	r2, [r2, #8]
    2936:	6812      	ldr	r2, [r2, #0]
    2938:	3201      	adds	r2, #1
    293a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:248

            loc_nb->data_ptr = tmp_nb->data_ptr;
    293c:	69fb      	ldr	r3, [r7, #28]
    293e:	68da      	ldr	r2, [r3, #12]
    2940:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2942:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:250

            tot_len -= tmp_nb->length;
    2944:	69ba      	ldr	r2, [r7, #24]
    2946:	69fb      	ldr	r3, [r7, #28]
    2948:	691b      	ldr	r3, [r3, #16]
    294a:	1ad3      	subs	r3, r2, r3
    294c:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:252

            if(tot_len < 0) /* for correct calculation of length */
    294e:	69bb      	ldr	r3, [r7, #24]
    2950:	2b00      	cmp	r3, #0
    2952:	da06      	bge.n	2962 <fnet_netbuf_copy+0x1e2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:253
                loc_nb->length = tot_len + tmp_nb->length;
    2954:	69fb      	ldr	r3, [r7, #28]
    2956:	691a      	ldr	r2, [r3, #16]
    2958:	69bb      	ldr	r3, [r7, #24]
    295a:	441a      	add	r2, r3
    295c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    295e:	611a      	str	r2, [r3, #16]
    2960:	e003      	b.n	296a <fnet_netbuf_copy+0x1ea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:255
            else
                loc_nb->length = tmp_nb->length;
    2962:	69fb      	ldr	r3, [r7, #28]
    2964:	691a      	ldr	r2, [r3, #16]
    2966:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2968:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:257
        } 
        while (tot_len > 0);
    296a:	69bb      	ldr	r3, [r7, #24]
    296c:	2b00      	cmp	r3, #0
    296e:	dca0      	bgt.n	28b2 <fnet_netbuf_copy+0x132>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:260
    }

    loc_nb->next = (fnet_netbuf_t *)0;
    2970:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2972:	2200      	movs	r2, #0
    2974:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:262
    
    return (loc_nb_head);
    2976:	6a3b      	ldr	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:263
}
    2978:	4618      	mov	r0, r3
    297a:	3728      	adds	r7, #40	; 0x28
    297c:	46bd      	mov	sp, r7
    297e:	bd80      	pop	{r7, pc}

00002980 <fnet_netbuf_from_buf>:
fnet_netbuf_from_buf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:272
*
* DESCRIPTION: Creates a new net_buf and fills it by a content of 
*              the external data buffer. 
*************************************************************************/
fnet_netbuf_t *fnet_netbuf_from_buf( void *data_ptr, int len, int drain )
{
    2980:	b580      	push	{r7, lr}
    2982:	b086      	sub	sp, #24
    2984:	af00      	add	r7, sp, #0
    2986:	60f8      	str	r0, [r7, #12]
    2988:	60b9      	str	r1, [r7, #8]
    298a:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:275
    fnet_netbuf_t *nb;
    
    nb = fnet_netbuf_new(len, drain);
    298c:	68b8      	ldr	r0, [r7, #8]
    298e:	6879      	ldr	r1, [r7, #4]
    2990:	f7ff fe9c 	bl	26cc <fnet_netbuf_new>
    2994:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:277

    if(nb)
    2996:	697b      	ldr	r3, [r7, #20]
    2998:	2b00      	cmp	r3, #0
    299a:	d007      	beq.n	29ac <fnet_netbuf_from_buf+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:278
        fnet_memcpy(nb->data_ptr, data_ptr, (unsigned int)len);
    299c:	697b      	ldr	r3, [r7, #20]
    299e:	68da      	ldr	r2, [r3, #12]
    29a0:	68bb      	ldr	r3, [r7, #8]
    29a2:	4610      	mov	r0, r2
    29a4:	68f9      	ldr	r1, [r7, #12]
    29a6:	461a      	mov	r2, r3
    29a8:	f002 ff74 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:280

    return (nb);
    29ac:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:281
}
    29ae:	4618      	mov	r0, r3
    29b0:	3718      	adds	r7, #24
    29b2:	46bd      	mov	sp, r7
    29b4:	bd80      	pop	{r7, pc}
    29b6:	bf00      	nop

000029b8 <fnet_netbuf_to_buf>:
fnet_netbuf_to_buf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:291
* DESCRIPTION: Creates a new continuous buffer, which contains 
*              info from all net buffers of the current chain. 
*************************************************************************/

void fnet_netbuf_to_buf( fnet_netbuf_t *nb, int offset, int len, void *data_ptr )
{
    29b8:	b580      	push	{r7, lr}
    29ba:	b08a      	sub	sp, #40	; 0x28
    29bc:	af00      	add	r7, sp, #0
    29be:	60f8      	str	r0, [r7, #12]
    29c0:	60b9      	str	r1, [r7, #8]
    29c2:	607a      	str	r2, [r7, #4]
    29c4:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:294
    unsigned char *u_buf;
    fnet_netbuf_t *tmp_nb;
    long tot_len = 0, tot_offset = 0, cur_len;
    29c6:	2300      	movs	r3, #0
    29c8:	61fb      	str	r3, [r7, #28]
    29ca:	2300      	movs	r3, #0
    29cc:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:296

    u_buf = data_ptr;
    29ce:	683b      	ldr	r3, [r7, #0]
    29d0:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:298

    tmp_nb = nb;
    29d2:	68fb      	ldr	r3, [r7, #12]
    29d4:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:303 (discriminator 1)

    /* This part is similar to the corresponding part in fnet_netbuf_copy */
    do
    {
        tot_len += tmp_nb->length;
    29d6:	6a3b      	ldr	r3, [r7, #32]
    29d8:	691a      	ldr	r2, [r3, #16]
    29da:	69fb      	ldr	r3, [r7, #28]
    29dc:	4413      	add	r3, r2
    29de:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:304 (discriminator 1)
        tmp_nb = tmp_nb->next;
    29e0:	6a3b      	ldr	r3, [r7, #32]
    29e2:	681b      	ldr	r3, [r3, #0]
    29e4:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:305 (discriminator 1)
    } while (tmp_nb);
    29e6:	6a3b      	ldr	r3, [r7, #32]
    29e8:	2b00      	cmp	r3, #0
    29ea:	d1f4      	bne.n	29d6 <fnet_netbuf_to_buf+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:307

    if(len == FNET_NETBUF_COPYALL) /* If buffer should contain info from all net buffers */
    29ec:	687b      	ldr	r3, [r7, #4]
    29ee:	f1b3 3fff 	cmp.w	r3, #4294967295
    29f2:	d106      	bne.n	2a02 <fnet_netbuf_to_buf+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:309
    {
        tot_len -= offset;
    29f4:	69fa      	ldr	r2, [r7, #28]
    29f6:	68bb      	ldr	r3, [r7, #8]
    29f8:	1ad3      	subs	r3, r2, r3
    29fa:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:310
        len = tot_len;
    29fc:	69fb      	ldr	r3, [r7, #28]
    29fe:	607b      	str	r3, [r7, #4]
    2a00:	e00b      	b.n	2a1a <fnet_netbuf_to_buf+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:314
    }
    else
    {
        if((len > tot_len - offset) || (tot_len - offset < 0))
    2a02:	69fa      	ldr	r2, [r7, #28]
    2a04:	68bb      	ldr	r3, [r7, #8]
    2a06:	1ad2      	subs	r2, r2, r3
    2a08:	687b      	ldr	r3, [r7, #4]
    2a0a:	429a      	cmp	r2, r3
    2a0c:	db04      	blt.n	2a18 <fnet_netbuf_to_buf+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:314 (discriminator 1)
    2a0e:	69fa      	ldr	r2, [r7, #28]
    2a10:	68bb      	ldr	r3, [r7, #8]
    2a12:	1ad3      	subs	r3, r2, r3
    2a14:	2b00      	cmp	r3, #0
    2a16:	da00      	bge.n	2a1a <fnet_netbuf_to_buf+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:317
        {
       
            return; /* if input params aren't correct. */
    2a18:	e049      	b.n	2aae <fnet_netbuf_to_buf+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:321
        }
    }

    if((offset < 0) || (len == 0))
    2a1a:	68bb      	ldr	r3, [r7, #8]
    2a1c:	2b00      	cmp	r3, #0
    2a1e:	db02      	blt.n	2a26 <fnet_netbuf_to_buf+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:321 (discriminator 1)
    2a20:	687b      	ldr	r3, [r7, #4]
    2a22:	2b00      	cmp	r3, #0
    2a24:	d100      	bne.n	2a28 <fnet_netbuf_to_buf+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:324
    {
    
        return; /* if input params aren't correct. */
    2a26:	e042      	b.n	2aae <fnet_netbuf_to_buf+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:327
    }

    tmp_nb = nb;
    2a28:	68fb      	ldr	r3, [r7, #12]
    2a2a:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:329

    if(tmp_nb->length > offset)
    2a2c:	6a3b      	ldr	r3, [r7, #32]
    2a2e:	691a      	ldr	r2, [r3, #16]
    2a30:	68bb      	ldr	r3, [r7, #8]
    2a32:	429a      	cmp	r2, r3
    2a34:	d902      	bls.n	2a3c <fnet_netbuf_to_buf+0x84>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:331
    {
        tot_offset = offset;
    2a36:	68bb      	ldr	r3, [r7, #8]
    2a38:	61bb      	str	r3, [r7, #24]
    2a3a:	e013      	b.n	2a64 <fnet_netbuf_to_buf+0xac>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:335
    }
    else
    {
        while((tot_offset += tmp_nb->length) <= offset)
    2a3c:	e002      	b.n	2a44 <fnet_netbuf_to_buf+0x8c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:336
          tmp_nb = tmp_nb->next;
    2a3e:	6a3b      	ldr	r3, [r7, #32]
    2a40:	681b      	ldr	r3, [r3, #0]
    2a42:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:335 (discriminator 1)
    {
        tot_offset = offset;
    }
    else
    {
        while((tot_offset += tmp_nb->length) <= offset)
    2a44:	6a3b      	ldr	r3, [r7, #32]
    2a46:	691a      	ldr	r2, [r3, #16]
    2a48:	69bb      	ldr	r3, [r7, #24]
    2a4a:	4413      	add	r3, r2
    2a4c:	61bb      	str	r3, [r7, #24]
    2a4e:	69ba      	ldr	r2, [r7, #24]
    2a50:	68bb      	ldr	r3, [r7, #8]
    2a52:	429a      	cmp	r2, r3
    2a54:	ddf3      	ble.n	2a3e <fnet_netbuf_to_buf+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:338
          tmp_nb = tmp_nb->next;

        tot_offset = (long)(tmp_nb->length + offset - tot_offset);
    2a56:	6a3b      	ldr	r3, [r7, #32]
    2a58:	691a      	ldr	r2, [r3, #16]
    2a5a:	68bb      	ldr	r3, [r7, #8]
    2a5c:	441a      	add	r2, r3
    2a5e:	69bb      	ldr	r3, [r7, #24]
    2a60:	1ad3      	subs	r3, r2, r3
    2a62:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:341
    }

    tot_len = len;
    2a64:	687b      	ldr	r3, [r7, #4]
    2a66:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:346 (discriminator 1)

    do
    {
        /* Calculate the quantity of bytes we copy from the current net_buf*/
        cur_len = (long)((tmp_nb->length - tot_offset > tot_len) ? tot_len : tmp_nb->length - tot_offset);
    2a68:	6a3b      	ldr	r3, [r7, #32]
    2a6a:	691a      	ldr	r2, [r3, #16]
    2a6c:	69bb      	ldr	r3, [r7, #24]
    2a6e:	1ad2      	subs	r2, r2, r3
    2a70:	69fb      	ldr	r3, [r7, #28]
    2a72:	429a      	cmp	r2, r3
    2a74:	bf38      	it	cc
    2a76:	4613      	movcc	r3, r2
    2a78:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:348 (discriminator 1)
        /* and substract from the total quantity of bytes we copy */
        tot_len -= cur_len;
    2a7a:	69fa      	ldr	r2, [r7, #28]
    2a7c:	697b      	ldr	r3, [r7, #20]
    2a7e:	1ad3      	subs	r3, r2, r3
    2a80:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:350 (discriminator 1)

        fnet_memcpy(u_buf, (unsigned char *)tmp_nb->data_ptr + tot_offset, (unsigned int)cur_len);
    2a82:	6a3b      	ldr	r3, [r7, #32]
    2a84:	68da      	ldr	r2, [r3, #12]
    2a86:	69bb      	ldr	r3, [r7, #24]
    2a88:	441a      	add	r2, r3
    2a8a:	697b      	ldr	r3, [r7, #20]
    2a8c:	6a78      	ldr	r0, [r7, #36]	; 0x24
    2a8e:	4611      	mov	r1, r2
    2a90:	461a      	mov	r2, r3
    2a92:	f002 feff 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:351 (discriminator 1)
        tot_offset = 0;          /* offset is only for the first peace of data*/
    2a96:	2300      	movs	r3, #0
    2a98:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:353 (discriminator 1)

        u_buf = u_buf + cur_len; /* move the pointer for the next copy */
    2a9a:	697b      	ldr	r3, [r7, #20]
    2a9c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    2a9e:	4413      	add	r3, r2
    2aa0:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:354 (discriminator 1)
        tmp_nb = tmp_nb->next;   /* go to the next net_buf in the chain */     
    2aa2:	6a3b      	ldr	r3, [r7, #32]
    2aa4:	681b      	ldr	r3, [r3, #0]
    2aa6:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:355 (discriminator 1)
    } while (tot_len > 0);
    2aa8:	69fb      	ldr	r3, [r7, #28]
    2aaa:	2b00      	cmp	r3, #0
    2aac:	dcdc      	bgt.n	2a68 <fnet_netbuf_to_buf+0xb0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:357
    
}
    2aae:	3728      	adds	r7, #40	; 0x28
    2ab0:	46bd      	mov	sp, r7
    2ab2:	bd80      	pop	{r7, pc}

00002ab4 <fnet_netbuf_free>:
fnet_netbuf_free():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:366
*
* DESCRIPTION: Frees the memory, which was allocated by net_buf 'nb' and  
*              returns pointer to the next net_buf. 
*************************************************************************/
fnet_netbuf_t *fnet_netbuf_free( fnet_netbuf_t *nb )
{
    2ab4:	b580      	push	{r7, lr}
    2ab6:	b084      	sub	sp, #16
    2ab8:	af00      	add	r7, sp, #0
    2aba:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:369
    fnet_netbuf_t *tmp_nb;
   
    if(nb != 0)
    2abc:	687b      	ldr	r3, [r7, #4]
    2abe:	2b00      	cmp	r3, #0
    2ac0:	d019      	beq.n	2af6 <fnet_netbuf_free+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:372
    {
        
        if(((int *)nb->data)[0] == 1)   /* If nobody uses this data buffer. */
    2ac2:	687b      	ldr	r3, [r7, #4]
    2ac4:	689b      	ldr	r3, [r3, #8]
    2ac6:	681b      	ldr	r3, [r3, #0]
    2ac8:	2b01      	cmp	r3, #1
    2aca:	d105      	bne.n	2ad8 <fnet_netbuf_free+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:373
            fnet_free_netbuf(nb->data);
    2acc:	687b      	ldr	r3, [r7, #4]
    2ace:	689b      	ldr	r3, [r3, #8]
    2ad0:	4618      	mov	r0, r3
    2ad2:	f000 fb49 	bl	3168 <fnet_free_netbuf>
    2ad6:	e006      	b.n	2ae6 <fnet_netbuf_free+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:375
        else                           /* else decrement reference counter */
            ((int *)nb->data)[0] = ((int *)nb->data)[0] - 1;
    2ad8:	687b      	ldr	r3, [r7, #4]
    2ada:	689b      	ldr	r3, [r3, #8]
    2adc:	687a      	ldr	r2, [r7, #4]
    2ade:	6892      	ldr	r2, [r2, #8]
    2ae0:	6812      	ldr	r2, [r2, #0]
    2ae2:	3a01      	subs	r2, #1
    2ae4:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:377

        tmp_nb = nb->next;
    2ae6:	687b      	ldr	r3, [r7, #4]
    2ae8:	681b      	ldr	r3, [r3, #0]
    2aea:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:379

        fnet_free_netbuf(nb);
    2aec:	6878      	ldr	r0, [r7, #4]
    2aee:	f000 fb3b 	bl	3168 <fnet_free_netbuf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:381

        return (tmp_nb);
    2af2:	68fb      	ldr	r3, [r7, #12]
    2af4:	e000      	b.n	2af8 <fnet_netbuf_free+0x44>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:385
    }
    else
    {
        return (0);
    2af6:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:387
    }
}
    2af8:	4618      	mov	r0, r3
    2afa:	3710      	adds	r7, #16
    2afc:	46bd      	mov	sp, r7
    2afe:	bd80      	pop	{r7, pc}

00002b00 <fnet_netbuf_free_chain>:
fnet_netbuf_free_chain():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:396
*
* DESCRIPTION: Frees the memory, which was allocated by all net_bufs
*              in the chain beginning from the buffer 'nb'
*************************************************************************/
void fnet_netbuf_free_chain( fnet_netbuf_t *nb )
{
    2b00:	b580      	push	{r7, lr}
    2b02:	b084      	sub	sp, #16
    2b04:	af00      	add	r7, sp, #0
    2b06:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:399
    fnet_netbuf_t *tmp_nb;

    while(nb != 0)
    2b08:	e019      	b.n	2b3e <fnet_netbuf_free_chain+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:401
    {
        tmp_nb = nb->next;
    2b0a:	687b      	ldr	r3, [r7, #4]
    2b0c:	681b      	ldr	r3, [r3, #0]
    2b0e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:403
        
        if(((int *)nb->data)[0] == 1)   /* If nobody uses this data buffer. */
    2b10:	687b      	ldr	r3, [r7, #4]
    2b12:	689b      	ldr	r3, [r3, #8]
    2b14:	681b      	ldr	r3, [r3, #0]
    2b16:	2b01      	cmp	r3, #1
    2b18:	d105      	bne.n	2b26 <fnet_netbuf_free_chain+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:404
            fnet_free_netbuf(nb->data);
    2b1a:	687b      	ldr	r3, [r7, #4]
    2b1c:	689b      	ldr	r3, [r3, #8]
    2b1e:	4618      	mov	r0, r3
    2b20:	f000 fb22 	bl	3168 <fnet_free_netbuf>
    2b24:	e006      	b.n	2b34 <fnet_netbuf_free_chain+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:406
        else                            /* Else decrement reference counter */
            ((int *)nb->data)[0] = ((int *)nb->data)[0] - 1;
    2b26:	687b      	ldr	r3, [r7, #4]
    2b28:	689b      	ldr	r3, [r3, #8]
    2b2a:	687a      	ldr	r2, [r7, #4]
    2b2c:	6892      	ldr	r2, [r2, #8]
    2b2e:	6812      	ldr	r2, [r2, #0]
    2b30:	3a01      	subs	r2, #1
    2b32:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:409


        fnet_free_netbuf(nb);
    2b34:	6878      	ldr	r0, [r7, #4]
    2b36:	f000 fb17 	bl	3168 <fnet_free_netbuf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:411

        nb = tmp_nb;
    2b3a:	68fb      	ldr	r3, [r7, #12]
    2b3c:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:399 (discriminator 1)
*************************************************************************/
void fnet_netbuf_free_chain( fnet_netbuf_t *nb )
{
    fnet_netbuf_t *tmp_nb;

    while(nb != 0)
    2b3e:	687b      	ldr	r3, [r7, #4]
    2b40:	2b00      	cmp	r3, #0
    2b42:	d1e2      	bne.n	2b0a <fnet_netbuf_free_chain+0xa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:413

        fnet_free_netbuf(nb);

        nb = tmp_nb;
    }
}
    2b44:	3710      	adds	r7, #16
    2b46:	46bd      	mov	sp, r7
    2b48:	bd80      	pop	{r7, pc}
    2b4a:	bf00      	nop

00002b4c <fnet_netbuf_pullup>:
fnet_netbuf_pullup():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:422
*
* DESCRIPTION: Create a data buffer for the first net_buf with the 
*              length len 
*************************************************************************/
fnet_netbuf_t *fnet_netbuf_pullup( fnet_netbuf_t *nb, int len)
{
    2b4c:	b580      	push	{r7, lr}
    2b4e:	b088      	sub	sp, #32
    2b50:	af00      	add	r7, sp, #0
    2b52:	6078      	str	r0, [r7, #4]
    2b54:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:423
    unsigned long   tot_len = 0;
    2b56:	2300      	movs	r3, #0
    2b58:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:430
    fnet_netbuf_t   *tmp_nb;
    fnet_netbuf_t   *nb_run;
    void            *new_buf;
    
    /* Check length*/
    if(nb->total_length < len)
    2b5a:	687b      	ldr	r3, [r7, #4]
    2b5c:	695a      	ldr	r2, [r3, #20]
    2b5e:	683b      	ldr	r3, [r7, #0]
    2b60:	429a      	cmp	r2, r3
    2b62:	d201      	bcs.n	2b68 <fnet_netbuf_pullup+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:431
        return FNET_NULL;
    2b64:	2300      	movs	r3, #0
    2b66:	e0a5      	b.n	2cb4 <fnet_netbuf_pullup+0x168>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:433
    
    if((nb->length >= len) || (len <= 0) || (nb == 0))
    2b68:	687b      	ldr	r3, [r7, #4]
    2b6a:	691a      	ldr	r2, [r3, #16]
    2b6c:	683b      	ldr	r3, [r7, #0]
    2b6e:	429a      	cmp	r2, r3
    2b70:	d205      	bcs.n	2b7e <fnet_netbuf_pullup+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:433 (discriminator 1)
    2b72:	683b      	ldr	r3, [r7, #0]
    2b74:	2b00      	cmp	r3, #0
    2b76:	dd02      	ble.n	2b7e <fnet_netbuf_pullup+0x32>
    2b78:	687b      	ldr	r3, [r7, #4]
    2b7a:	2b00      	cmp	r3, #0
    2b7c:	d101      	bne.n	2b82 <fnet_netbuf_pullup+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:435
        /* if function shouldn't do anything*/
        return (nb);
    2b7e:	687b      	ldr	r3, [r7, #4]
    2b80:	e098      	b.n	2cb4 <fnet_netbuf_pullup+0x168>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:437

    tmp_nb = nb;
    2b82:	687b      	ldr	r3, [r7, #4]
    2b84:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:439

    tot_len += tmp_nb->length;
    2b86:	697b      	ldr	r3, [r7, #20]
    2b88:	691b      	ldr	r3, [r3, #16]
    2b8a:	69fa      	ldr	r2, [r7, #28]
    2b8c:	4413      	add	r3, r2
    2b8e:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:442

    /* search of the last buffer, from which the data have to be copied*/
    while(tot_len < len && tmp_nb)
    2b90:	e007      	b.n	2ba2 <fnet_netbuf_pullup+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:444
    {
        tmp_nb = tmp_nb->next;
    2b92:	697b      	ldr	r3, [r7, #20]
    2b94:	681b      	ldr	r3, [r3, #0]
    2b96:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:445
        tot_len += tmp_nb->length;
    2b98:	697b      	ldr	r3, [r7, #20]
    2b9a:	691b      	ldr	r3, [r3, #16]
    2b9c:	69fa      	ldr	r2, [r7, #28]
    2b9e:	4413      	add	r3, r2
    2ba0:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:442 (discriminator 1)
    tmp_nb = nb;

    tot_len += tmp_nb->length;

    /* search of the last buffer, from which the data have to be copied*/
    while(tot_len < len && tmp_nb)
    2ba2:	683a      	ldr	r2, [r7, #0]
    2ba4:	69fb      	ldr	r3, [r7, #28]
    2ba6:	429a      	cmp	r2, r3
    2ba8:	d902      	bls.n	2bb0 <fnet_netbuf_pullup+0x64>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:442 (discriminator 2)
    2baa:	697b      	ldr	r3, [r7, #20]
    2bac:	2b00      	cmp	r3, #0
    2bae:	d1f0      	bne.n	2b92 <fnet_netbuf_pullup+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:448
    {
        tmp_nb = tmp_nb->next;
        tot_len += tmp_nb->length;
    }

    new_buf = (struct net_buf_data *)fnet_malloc_netbuf((unsigned int)len + sizeof(int)/* For reference_counter */);
    2bb0:	683b      	ldr	r3, [r7, #0]
    2bb2:	3304      	adds	r3, #4
    2bb4:	4618      	mov	r0, r3
    2bb6:	f000 fae7 	bl	3188 <fnet_malloc_netbuf>
    2bba:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:450

    if(new_buf == 0)
    2bbc:	68fb      	ldr	r3, [r7, #12]
    2bbe:	2b00      	cmp	r3, #0
    2bc0:	d101      	bne.n	2bc6 <fnet_netbuf_pullup+0x7a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:452
    {
        return (FNET_NULL);
    2bc2:	2300      	movs	r3, #0
    2bc4:	e076      	b.n	2cb4 <fnet_netbuf_pullup+0x168>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:455
    }
       
    ((int *)new_buf)[0] = 1; /* First element is used by the reference_counter.*/
    2bc6:	68fb      	ldr	r3, [r7, #12]
    2bc8:	2201      	movs	r2, #1
    2bca:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:458

    /* Copy into it the contents of first data buffer. Skip the reference counter (placed in the first bytes). */
    fnet_memcpy(&((int *)new_buf)[1], nb->data_ptr, nb->length);
    2bcc:	68fb      	ldr	r3, [r7, #12]
    2bce:	1d19      	adds	r1, r3, #4
    2bd0:	687b      	ldr	r3, [r7, #4]
    2bd2:	68da      	ldr	r2, [r3, #12]
    2bd4:	687b      	ldr	r3, [r7, #4]
    2bd6:	691b      	ldr	r3, [r3, #16]
    2bd8:	4608      	mov	r0, r1
    2bda:	4611      	mov	r1, r2
    2bdc:	461a      	mov	r2, r3
    2bde:	f002 fe59 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:459
    offset = nb->length;
    2be2:	687b      	ldr	r3, [r7, #4]
    2be4:	691b      	ldr	r3, [r3, #16]
    2be6:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:462

    /* Free old data buffer (for the first net_buf) */
    if(((int *)nb->data)[0] == 1)   /* If nobody uses this data buffer. */
    2be8:	687b      	ldr	r3, [r7, #4]
    2bea:	689b      	ldr	r3, [r3, #8]
    2bec:	681b      	ldr	r3, [r3, #0]
    2bee:	2b01      	cmp	r3, #1
    2bf0:	d105      	bne.n	2bfe <fnet_netbuf_pullup+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:463
        fnet_free_netbuf(nb->data);
    2bf2:	687b      	ldr	r3, [r7, #4]
    2bf4:	689b      	ldr	r3, [r3, #8]
    2bf6:	4618      	mov	r0, r3
    2bf8:	f000 fab6 	bl	3168 <fnet_free_netbuf>
    2bfc:	e006      	b.n	2c0c <fnet_netbuf_pullup+0xc0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:465
    else                            /* Else decrement reference counter */
        ((int *)nb->data)[0] = ((int *)nb->data)[0] - 1;
    2bfe:	687b      	ldr	r3, [r7, #4]
    2c00:	689b      	ldr	r3, [r3, #8]
    2c02:	687a      	ldr	r2, [r7, #4]
    2c04:	6892      	ldr	r2, [r2, #8]
    2c06:	6812      	ldr	r2, [r2, #0]
    2c08:	3a01      	subs	r2, #1
    2c0a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:468

    /* Currently data buffer contains the contents of the first buffer */
    nb->data = &((int *)new_buf)[0];
    2c0c:	687b      	ldr	r3, [r7, #4]
    2c0e:	68fa      	ldr	r2, [r7, #12]
    2c10:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:469
    nb->data_ptr = &((int *)new_buf)[1];
    2c12:	68fb      	ldr	r3, [r7, #12]
    2c14:	1d1a      	adds	r2, r3, #4
    2c16:	687b      	ldr	r3, [r7, #4]
    2c18:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:471

    nb_run = nb->next;      /* Let's start from the next buffer */
    2c1a:	687b      	ldr	r3, [r7, #4]
    2c1c:	681b      	ldr	r3, [r3, #0]
    2c1e:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:473

    while(nb_run != tmp_nb) /* Copy full data buffers */
    2c20:	e019      	b.n	2c56 <fnet_netbuf_pullup+0x10a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:475
    {
        fnet_memcpy((unsigned char *)nb->data_ptr + offset, nb_run->data_ptr, nb_run->length);
    2c22:	687b      	ldr	r3, [r7, #4]
    2c24:	68da      	ldr	r2, [r3, #12]
    2c26:	69bb      	ldr	r3, [r7, #24]
    2c28:	18d1      	adds	r1, r2, r3
    2c2a:	693b      	ldr	r3, [r7, #16]
    2c2c:	68da      	ldr	r2, [r3, #12]
    2c2e:	693b      	ldr	r3, [r7, #16]
    2c30:	691b      	ldr	r3, [r3, #16]
    2c32:	4608      	mov	r0, r1
    2c34:	4611      	mov	r1, r2
    2c36:	461a      	mov	r2, r3
    2c38:	f002 fe2c 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:477

        if(nb_run != tmp_nb)
    2c3c:	693a      	ldr	r2, [r7, #16]
    2c3e:	697b      	ldr	r3, [r7, #20]
    2c40:	429a      	cmp	r2, r3
    2c42:	d008      	beq.n	2c56 <fnet_netbuf_pullup+0x10a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:479
        {
            offset += nb_run->length;
    2c44:	693b      	ldr	r3, [r7, #16]
    2c46:	691b      	ldr	r3, [r3, #16]
    2c48:	69ba      	ldr	r2, [r7, #24]
    2c4a:	4413      	add	r3, r2
    2c4c:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:480
            nb_run = fnet_netbuf_free(nb_run);
    2c4e:	6938      	ldr	r0, [r7, #16]
    2c50:	f7ff ff30 	bl	2ab4 <fnet_netbuf_free>
    2c54:	6138      	str	r0, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:473 (discriminator 1)
    nb->data = &((int *)new_buf)[0];
    nb->data_ptr = &((int *)new_buf)[1];

    nb_run = nb->next;      /* Let's start from the next buffer */

    while(nb_run != tmp_nb) /* Copy full data buffers */
    2c56:	693a      	ldr	r2, [r7, #16]
    2c58:	697b      	ldr	r3, [r7, #20]
    2c5a:	429a      	cmp	r2, r3
    2c5c:	d1e1      	bne.n	2c22 <fnet_netbuf_pullup+0xd6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:484
            offset += nb_run->length;
            nb_run = fnet_netbuf_free(nb_run);
        }
    }

    tot_len = len - offset;
    2c5e:	683a      	ldr	r2, [r7, #0]
    2c60:	69bb      	ldr	r3, [r7, #24]
    2c62:	1ad3      	subs	r3, r2, r3
    2c64:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:489

    /* Copy the remaining part and change data pointer and length of the 
     * last net_buf, which is the source for the first net_buf */

    fnet_memcpy((unsigned char *)nb->data_ptr + offset, nb_run->data_ptr, tot_len);
    2c66:	687b      	ldr	r3, [r7, #4]
    2c68:	68da      	ldr	r2, [r3, #12]
    2c6a:	69bb      	ldr	r3, [r7, #24]
    2c6c:	441a      	add	r2, r3
    2c6e:	693b      	ldr	r3, [r7, #16]
    2c70:	68db      	ldr	r3, [r3, #12]
    2c72:	4610      	mov	r0, r2
    2c74:	4619      	mov	r1, r3
    2c76:	69fa      	ldr	r2, [r7, #28]
    2c78:	f002 fe0c 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:491

    nb_run->length -= tot_len;
    2c7c:	693b      	ldr	r3, [r7, #16]
    2c7e:	691a      	ldr	r2, [r3, #16]
    2c80:	69fb      	ldr	r3, [r7, #28]
    2c82:	1ad2      	subs	r2, r2, r3
    2c84:	693b      	ldr	r3, [r7, #16]
    2c86:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:493

    if(nb_run->length == 0)
    2c88:	693b      	ldr	r3, [r7, #16]
    2c8a:	691b      	ldr	r3, [r3, #16]
    2c8c:	2b00      	cmp	r3, #0
    2c8e:	d104      	bne.n	2c9a <fnet_netbuf_pullup+0x14e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:495
    {
        nb_run = fnet_netbuf_free(nb_run);
    2c90:	6938      	ldr	r0, [r7, #16]
    2c92:	f7ff ff0f 	bl	2ab4 <fnet_netbuf_free>
    2c96:	6138      	str	r0, [r7, #16]
    2c98:	e005      	b.n	2ca6 <fnet_netbuf_pullup+0x15a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:498
    }
    else
        nb_run->data_ptr = (unsigned char *)nb_run->data_ptr + tot_len;
    2c9a:	693b      	ldr	r3, [r7, #16]
    2c9c:	68da      	ldr	r2, [r3, #12]
    2c9e:	69fb      	ldr	r3, [r7, #28]
    2ca0:	441a      	add	r2, r3
    2ca2:	693b      	ldr	r3, [r7, #16]
    2ca4:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:501

    /* Setting up the params of the first net_buf;*/
    nb->next = nb_run;
    2ca6:	687b      	ldr	r3, [r7, #4]
    2ca8:	693a      	ldr	r2, [r7, #16]
    2caa:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:503

    nb->length = (unsigned long)len;
    2cac:	683a      	ldr	r2, [r7, #0]
    2cae:	687b      	ldr	r3, [r7, #4]
    2cb0:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:505

    return (nb);
    2cb2:	687b      	ldr	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:506
}
    2cb4:	4618      	mov	r0, r3
    2cb6:	3720      	adds	r7, #32
    2cb8:	46bd      	mov	sp, r7
    2cba:	bd80      	pop	{r7, pc}

00002cbc <fnet_netbuf_trim>:
fnet_netbuf_trim():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:517
* DESCRIPTION: Trims len bytes from the begin of the net_buf data if len 
*              is positive. Otherwise len bytes should be trimmed from the
*              end of net_buf buffer. If len=0 - do nothing
*************************************************************************/
void fnet_netbuf_trim( fnet_netbuf_t **nb_ptr, int len )
{
    2cbc:	b580      	push	{r7, lr}
    2cbe:	b088      	sub	sp, #32
    2cc0:	af00      	add	r7, sp, #0
    2cc2:	6078      	str	r0, [r7, #4]
    2cc4:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:525
    long            tot_len;
    long            total_rem;
    fnet_netbuf_t   *tmp_nb;
    

    if(len == 0)
    2cc6:	683b      	ldr	r3, [r7, #0]
    2cc8:	2b00      	cmp	r3, #0
    2cca:	d100      	bne.n	2cce <fnet_netbuf_trim+0x12>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:526
        return;
    2ccc:	e08f      	b.n	2dee <fnet_netbuf_trim+0x132>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:528
    
    tmp_nb = (fnet_netbuf_t *) *nb_ptr;
    2cce:	687b      	ldr	r3, [r7, #4]
    2cd0:	681b      	ldr	r3, [r3, #0]
    2cd2:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:529
    nb = (fnet_netbuf_t *) *nb_ptr;
    2cd4:	687b      	ldr	r3, [r7, #4]
    2cd6:	681b      	ldr	r3, [r3, #0]
    2cd8:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:530
    head_nb = nb;
    2cda:	69bb      	ldr	r3, [r7, #24]
    2cdc:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:533

    /* If the quantity of trimmed bytes is greater than net_buf size - do nothing.*/
    if((nb->total_length < (len > 0 ? len : -len)) || nb == 0)
    2cde:	69bb      	ldr	r3, [r7, #24]
    2ce0:	695a      	ldr	r2, [r3, #20]
    2ce2:	683b      	ldr	r3, [r7, #0]
    2ce4:	2b00      	cmp	r3, #0
    2ce6:	bfb8      	it	lt
    2ce8:	425b      	neglt	r3, r3
    2cea:	429a      	cmp	r2, r3
    2cec:	d302      	bcc.n	2cf4 <fnet_netbuf_trim+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:533 (discriminator 1)
    2cee:	69bb      	ldr	r3, [r7, #24]
    2cf0:	2b00      	cmp	r3, #0
    2cf2:	d100      	bne.n	2cf6 <fnet_netbuf_trim+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:534
        return;
    2cf4:	e07b      	b.n	2dee <fnet_netbuf_trim+0x132>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:536

    tot_len = (long)nb->length;
    2cf6:	69bb      	ldr	r3, [r7, #24]
    2cf8:	691b      	ldr	r3, [r3, #16]
    2cfa:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:537
    total_rem = (long)nb->total_length;
    2cfc:	69bb      	ldr	r3, [r7, #24]
    2cfe:	695b      	ldr	r3, [r3, #20]
    2d00:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:539

    if(len > 0) /* Trim len bytes from the begin of the buffer.*/
    2d02:	683b      	ldr	r3, [r7, #0]
    2d04:	2b00      	cmp	r3, #0
    2d06:	dd2d      	ble.n	2d64 <fnet_netbuf_trim+0xa8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:541
    {
        while(nb != 0 && len >= tot_len)
    2d08:	e00c      	b.n	2d24 <fnet_netbuf_trim+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:543
        {
            *nb_ptr = nb->next;
    2d0a:	69bb      	ldr	r3, [r7, #24]
    2d0c:	681a      	ldr	r2, [r3, #0]
    2d0e:	687b      	ldr	r3, [r7, #4]
    2d10:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:545
            
            nb = fnet_netbuf_free(nb); /* In some cases we delete some net_bufs.*/
    2d12:	69b8      	ldr	r0, [r7, #24]
    2d14:	f7ff fece 	bl	2ab4 <fnet_netbuf_free>
    2d18:	61b8      	str	r0, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:546
            tot_len += nb->length;
    2d1a:	69bb      	ldr	r3, [r7, #24]
    2d1c:	691a      	ldr	r2, [r3, #16]
    2d1e:	697b      	ldr	r3, [r7, #20]
    2d20:	4413      	add	r3, r2
    2d22:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:541 (discriminator 1)
    tot_len = (long)nb->length;
    total_rem = (long)nb->total_length;

    if(len > 0) /* Trim len bytes from the begin of the buffer.*/
    {
        while(nb != 0 && len >= tot_len)
    2d24:	69bb      	ldr	r3, [r7, #24]
    2d26:	2b00      	cmp	r3, #0
    2d28:	d003      	beq.n	2d32 <fnet_netbuf_trim+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:541 (discriminator 2)
    2d2a:	683a      	ldr	r2, [r7, #0]
    2d2c:	697b      	ldr	r3, [r7, #20]
    2d2e:	429a      	cmp	r2, r3
    2d30:	daeb      	bge.n	2d0a <fnet_netbuf_trim+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:549
            
            nb = fnet_netbuf_free(nb); /* In some cases we delete some net_bufs.*/
            tot_len += nb->length;
        }

        if(nb != 0)
    2d32:	69bb      	ldr	r3, [r7, #24]
    2d34:	2b00      	cmp	r3, #0
    2d36:	d04b      	beq.n	2dd0 <fnet_netbuf_trim+0x114>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:551
        {
            nb->data_ptr = (unsigned char *)nb->data_ptr + /* Or change pointer. */
    2d38:	69bb      	ldr	r3, [r7, #24]
    2d3a:	68da      	ldr	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:552
                            nb->length - (tot_len - len);
    2d3c:	69bb      	ldr	r3, [r7, #24]
    2d3e:	6919      	ldr	r1, [r3, #16]
    2d40:	6838      	ldr	r0, [r7, #0]
    2d42:	697b      	ldr	r3, [r7, #20]
    2d44:	1ac3      	subs	r3, r0, r3
    2d46:	440b      	add	r3, r1
    2d48:	441a      	add	r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:551
            tot_len += nb->length;
        }

        if(nb != 0)
        {
            nb->data_ptr = (unsigned char *)nb->data_ptr + /* Or change pointer. */
    2d4a:	69bb      	ldr	r3, [r7, #24]
    2d4c:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:553
                            nb->length - (tot_len - len);
            nb->length = (unsigned long)(tot_len - len);
    2d4e:	697a      	ldr	r2, [r7, #20]
    2d50:	683b      	ldr	r3, [r7, #0]
    2d52:	1ad3      	subs	r3, r2, r3
    2d54:	461a      	mov	r2, r3
    2d56:	69bb      	ldr	r3, [r7, #24]
    2d58:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:554
            nb->flags = tmp_nb->flags; 
    2d5a:	693b      	ldr	r3, [r7, #16]
    2d5c:	699a      	ldr	r2, [r3, #24]
    2d5e:	69bb      	ldr	r3, [r7, #24]
    2d60:	619a      	str	r2, [r3, #24]
    2d62:	e035      	b.n	2dd0 <fnet_netbuf_trim+0x114>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:559
        }
    }
    else /* Trim len bytes from the end of the buffer. */
    {
        while(nb != 0 && (total_rem + len > tot_len))
    2d64:	e007      	b.n	2d76 <fnet_netbuf_trim+0xba>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:561
        {
            nb = nb->next;         /* Run up th the first net_buf, which points */
    2d66:	69bb      	ldr	r3, [r7, #24]
    2d68:	681b      	ldr	r3, [r3, #0]
    2d6a:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:562
            tot_len += nb->length; /* to the data, which should be erased.*/
    2d6c:	69bb      	ldr	r3, [r7, #24]
    2d6e:	691a      	ldr	r2, [r3, #16]
    2d70:	697b      	ldr	r3, [r7, #20]
    2d72:	4413      	add	r3, r2
    2d74:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:559 (discriminator 1)
            nb->flags = tmp_nb->flags; 
        }
    }
    else /* Trim len bytes from the end of the buffer. */
    {
        while(nb != 0 && (total_rem + len > tot_len))
    2d76:	69bb      	ldr	r3, [r7, #24]
    2d78:	2b00      	cmp	r3, #0
    2d7a:	d005      	beq.n	2d88 <fnet_netbuf_trim+0xcc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:559 (discriminator 2)
    2d7c:	68fa      	ldr	r2, [r7, #12]
    2d7e:	683b      	ldr	r3, [r7, #0]
    2d80:	441a      	add	r2, r3
    2d82:	697b      	ldr	r3, [r7, #20]
    2d84:	429a      	cmp	r2, r3
    2d86:	dcee      	bgt.n	2d66 <fnet_netbuf_trim+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:566
            nb = nb->next;         /* Run up th the first net_buf, which points */
            tot_len += nb->length; /* to the data, which should be erased.*/
        }

        /* Cut the part of the first net_buf, which should be modified.*/
        if(nb != 0)
    2d88:	69bb      	ldr	r3, [r7, #24]
    2d8a:	2b00      	cmp	r3, #0
    2d8c:	d020      	beq.n	2dd0 <fnet_netbuf_trim+0x114>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:568
        {
            nb->length += (len + total_rem - tot_len);
    2d8e:	69bb      	ldr	r3, [r7, #24]
    2d90:	691a      	ldr	r2, [r3, #16]
    2d92:	6839      	ldr	r1, [r7, #0]
    2d94:	68fb      	ldr	r3, [r7, #12]
    2d96:	4419      	add	r1, r3
    2d98:	697b      	ldr	r3, [r7, #20]
    2d9a:	1acb      	subs	r3, r1, r3
    2d9c:	441a      	add	r2, r3
    2d9e:	69bb      	ldr	r3, [r7, #24]
    2da0:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:570

            while(nb->next != 0) /* Cut the redundant net_bufs. */
    2da2:	e007      	b.n	2db4 <fnet_netbuf_trim+0xf8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:571
              nb->next = fnet_netbuf_free(nb->next);
    2da4:	69bb      	ldr	r3, [r7, #24]
    2da6:	681b      	ldr	r3, [r3, #0]
    2da8:	4618      	mov	r0, r3
    2daa:	f7ff fe83 	bl	2ab4 <fnet_netbuf_free>
    2dae:	4602      	mov	r2, r0
    2db0:	69bb      	ldr	r3, [r7, #24]
    2db2:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:570 (discriminator 1)
        /* Cut the part of the first net_buf, which should be modified.*/
        if(nb != 0)
        {
            nb->length += (len + total_rem - tot_len);

            while(nb->next != 0) /* Cut the redundant net_bufs. */
    2db4:	69bb      	ldr	r3, [r7, #24]
    2db6:	681b      	ldr	r3, [r3, #0]
    2db8:	2b00      	cmp	r3, #0
    2dba:	d1f3      	bne.n	2da4 <fnet_netbuf_trim+0xe8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:573
              nb->next = fnet_netbuf_free(nb->next);

            if(nb->length == 0)  /* if |len| == total_length */
    2dbc:	69bb      	ldr	r3, [r7, #24]
    2dbe:	691b      	ldr	r3, [r3, #16]
    2dc0:	2b00      	cmp	r3, #0
    2dc2:	d103      	bne.n	2dcc <fnet_netbuf_trim+0x110>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:574
                head_nb = fnet_netbuf_free(nb);
    2dc4:	69b8      	ldr	r0, [r7, #24]
    2dc6:	f7ff fe75 	bl	2ab4 <fnet_netbuf_free>
    2dca:	61f8      	str	r0, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:576

            nb = head_nb;
    2dcc:	69fb      	ldr	r3, [r7, #28]
    2dce:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:580
        }
    }

    if(nb != 0)
    2dd0:	69bb      	ldr	r3, [r7, #24]
    2dd2:	2b00      	cmp	r3, #0
    2dd4:	d008      	beq.n	2de8 <fnet_netbuf_trim+0x12c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:582
    {
        nb->total_length = (unsigned long)(total_rem - (len > 0 ? len : -len));
    2dd6:	683b      	ldr	r3, [r7, #0]
    2dd8:	2b00      	cmp	r3, #0
    2dda:	bfb8      	it	lt
    2ddc:	425b      	neglt	r3, r3
    2dde:	68fa      	ldr	r2, [r7, #12]
    2de0:	1ad3      	subs	r3, r2, r3
    2de2:	461a      	mov	r2, r3
    2de4:	69bb      	ldr	r3, [r7, #24]
    2de6:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:585
    }

    *nb_ptr = nb;
    2de8:	687b      	ldr	r3, [r7, #4]
    2dea:	69ba      	ldr	r2, [r7, #24]
    2dec:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:587
    
}
    2dee:	3720      	adds	r7, #32
    2df0:	46bd      	mov	sp, r7
    2df2:	bd80      	pop	{r7, pc}

00002df4 <fnet_netbuf_cut_center>:
fnet_netbuf_cut_center():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:596
*
* DESCRIPTION: Cuts len bytes in net_buf queue starting from offset "offset"
*
*************************************************************************/
fnet_netbuf_t *fnet_netbuf_cut_center( fnet_netbuf_t ** nb_ptr, int offset, int len )
{
    2df4:	b580      	push	{r7, lr}
    2df6:	b088      	sub	sp, #32
    2df8:	af00      	add	r7, sp, #0
    2dfa:	60f8      	str	r0, [r7, #12]
    2dfc:	60b9      	str	r1, [r7, #8]
    2dfe:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:600
    fnet_netbuf_t *head_nb, *tmp_nb, *nb;
    long tot_len;

    if(len == 0)
    2e00:	687b      	ldr	r3, [r7, #4]
    2e02:	2b00      	cmp	r3, #0
    2e04:	d101      	bne.n	2e0a <fnet_netbuf_cut_center+0x16>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:601
        return (0);
    2e06:	2300      	movs	r3, #0
    2e08:	e101      	b.n	300e <fnet_netbuf_cut_center+0x21a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:603

    nb = (fnet_netbuf_t *) *nb_ptr;
    2e0a:	68fb      	ldr	r3, [r7, #12]
    2e0c:	681b      	ldr	r3, [r3, #0]
    2e0e:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:605

    if((nb->total_length < (len + offset)) || (nb == 0))
    2e10:	693b      	ldr	r3, [r7, #16]
    2e12:	695a      	ldr	r2, [r3, #20]
    2e14:	6879      	ldr	r1, [r7, #4]
    2e16:	68bb      	ldr	r3, [r7, #8]
    2e18:	440b      	add	r3, r1
    2e1a:	429a      	cmp	r2, r3
    2e1c:	d302      	bcc.n	2e24 <fnet_netbuf_cut_center+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:605 (discriminator 1)
    2e1e:	693b      	ldr	r3, [r7, #16]
    2e20:	2b00      	cmp	r3, #0
    2e22:	d101      	bne.n	2e28 <fnet_netbuf_cut_center+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:606
        return (0);
    2e24:	2300      	movs	r3, #0
    2e26:	e0f2      	b.n	300e <fnet_netbuf_cut_center+0x21a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:608

    if(offset == 0) /* The first case - when we cut from the begin of buffer.*/
    2e28:	68bb      	ldr	r3, [r7, #8]
    2e2a:	2b00      	cmp	r3, #0
    2e2c:	d10a      	bne.n	2e44 <fnet_netbuf_cut_center+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:610
    {
        fnet_netbuf_trim(&nb, len);
    2e2e:	f107 0310 	add.w	r3, r7, #16
    2e32:	4618      	mov	r0, r3
    2e34:	6879      	ldr	r1, [r7, #4]
    2e36:	f7ff ff41 	bl	2cbc <fnet_netbuf_trim>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:611
        *nb_ptr = nb;
    2e3a:	693a      	ldr	r2, [r7, #16]
    2e3c:	68fb      	ldr	r3, [r7, #12]
    2e3e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:612
        return (nb);
    2e40:	693b      	ldr	r3, [r7, #16]
    2e42:	e0e4      	b.n	300e <fnet_netbuf_cut_center+0x21a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:615
    }

    head_nb = nb;
    2e44:	693b      	ldr	r3, [r7, #16]
    2e46:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:617

    tmp_nb = nb;
    2e48:	693b      	ldr	r3, [r7, #16]
    2e4a:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:619

    tot_len = (long)nb->length;
    2e4c:	693b      	ldr	r3, [r7, #16]
    2e4e:	691b      	ldr	r3, [r3, #16]
    2e50:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:621

    while(nb != 0 && (offset >= tot_len))
    2e52:	e010      	b.n	2e76 <fnet_netbuf_cut_center+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:623
    {
        nb = nb->next;                             /* Run up th the first net_buf, which points */
    2e54:	693b      	ldr	r3, [r7, #16]
    2e56:	681b      	ldr	r3, [r3, #0]
    2e58:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:624
        tot_len += nb->length;                     /* to the data, which should be erased.*/ 
    2e5a:	693b      	ldr	r3, [r7, #16]
    2e5c:	691a      	ldr	r2, [r3, #16]
    2e5e:	69bb      	ldr	r3, [r7, #24]
    2e60:	4413      	add	r3, r2
    2e62:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:626

        if((nb != 0) && (offset >= tot_len))
    2e64:	693b      	ldr	r3, [r7, #16]
    2e66:	2b00      	cmp	r3, #0
    2e68:	d005      	beq.n	2e76 <fnet_netbuf_cut_center+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:626 (discriminator 1)
    2e6a:	68ba      	ldr	r2, [r7, #8]
    2e6c:	69bb      	ldr	r3, [r7, #24]
    2e6e:	429a      	cmp	r2, r3
    2e70:	db01      	blt.n	2e76 <fnet_netbuf_cut_center+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:627
            tmp_nb = nb;                          /* To store previous pointer. */
    2e72:	693b      	ldr	r3, [r7, #16]
    2e74:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:621 (discriminator 1)

    tmp_nb = nb;

    tot_len = (long)nb->length;

    while(nb != 0 && (offset >= tot_len))
    2e76:	693b      	ldr	r3, [r7, #16]
    2e78:	2b00      	cmp	r3, #0
    2e7a:	d003      	beq.n	2e84 <fnet_netbuf_cut_center+0x90>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:621 (discriminator 2)
    2e7c:	68ba      	ldr	r2, [r7, #8]
    2e7e:	69bb      	ldr	r3, [r7, #24]
    2e80:	429a      	cmp	r2, r3
    2e82:	dae7      	bge.n	2e54 <fnet_netbuf_cut_center+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:630

        if((nb != 0) && (offset >= tot_len))
            tmp_nb = nb;                          /* To store previous pointer. */
    }

    if(tot_len - nb->length == offset)            /* If we start cut from the begin of buffer. */
    2e84:	69ba      	ldr	r2, [r7, #24]
    2e86:	693b      	ldr	r3, [r7, #16]
    2e88:	691b      	ldr	r3, [r3, #16]
    2e8a:	1ad2      	subs	r2, r2, r3
    2e8c:	68bb      	ldr	r3, [r7, #8]
    2e8e:	429a      	cmp	r2, r3
    2e90:	d111      	bne.n	2eb6 <fnet_netbuf_cut_center+0xc2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:632
    {
        nb->total_length = head_nb->total_length; /* For correct fnet_netbuf_trim execution.*/
    2e92:	693b      	ldr	r3, [r7, #16]
    2e94:	697a      	ldr	r2, [r7, #20]
    2e96:	6952      	ldr	r2, [r2, #20]
    2e98:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:633
        fnet_netbuf_trim(&tmp_nb->next, len);
    2e9a:	69fb      	ldr	r3, [r7, #28]
    2e9c:	4618      	mov	r0, r3
    2e9e:	6879      	ldr	r1, [r7, #4]
    2ea0:	f7ff ff0c 	bl	2cbc <fnet_netbuf_trim>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:634
        head_nb->total_length -= len;
    2ea4:	697b      	ldr	r3, [r7, #20]
    2ea6:	695a      	ldr	r2, [r3, #20]
    2ea8:	687b      	ldr	r3, [r7, #4]
    2eaa:	1ad2      	subs	r2, r2, r3
    2eac:	697b      	ldr	r3, [r7, #20]
    2eae:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:636
        
        return ((fnet_netbuf_t *) *nb_ptr);
    2eb0:	68fb      	ldr	r3, [r7, #12]
    2eb2:	681b      	ldr	r3, [r3, #0]
    2eb4:	e0ab      	b.n	300e <fnet_netbuf_cut_center+0x21a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:640
    }

    /* If only the middle of one net_buf should be cut.*/
    if(tot_len - offset > len)
    2eb6:	69ba      	ldr	r2, [r7, #24]
    2eb8:	68bb      	ldr	r3, [r7, #8]
    2eba:	1ad2      	subs	r2, r2, r3
    2ebc:	687b      	ldr	r3, [r7, #4]
    2ebe:	429a      	cmp	r2, r3
    2ec0:	dd70      	ble.n	2fa4 <fnet_netbuf_cut_center+0x1b0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:642
    {
        head_nb->total_length -= len;
    2ec2:	697b      	ldr	r3, [r7, #20]
    2ec4:	695a      	ldr	r2, [r3, #20]
    2ec6:	687b      	ldr	r3, [r7, #4]
    2ec8:	1ad2      	subs	r2, r2, r3
    2eca:	697b      	ldr	r3, [r7, #20]
    2ecc:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:645

        /* Split one net_uf into two.*/
        if(((int *)nb->data)[0] == 1) /* If we can simply erase them (reference_counter == 1).*/
    2ece:	693b      	ldr	r3, [r7, #16]
    2ed0:	689b      	ldr	r3, [r3, #8]
    2ed2:	681b      	ldr	r3, [r3, #0]
    2ed4:	2b01      	cmp	r3, #1
    2ed6:	d124      	bne.n	2f22 <fnet_netbuf_cut_center+0x12e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:647
        {
            fnet_memcpy((unsigned char *)nb->data_ptr + nb->length - tot_len + offset,
    2ed8:	693b      	ldr	r3, [r7, #16]
    2eda:	68da      	ldr	r2, [r3, #12]
    2edc:	693b      	ldr	r3, [r7, #16]
    2ede:	6919      	ldr	r1, [r3, #16]
    2ee0:	69bb      	ldr	r3, [r7, #24]
    2ee2:	1ac9      	subs	r1, r1, r3
    2ee4:	68bb      	ldr	r3, [r7, #8]
    2ee6:	440b      	add	r3, r1
    2ee8:	18d1      	adds	r1, r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:648
                        (unsigned char *)nb->data_ptr + nb->length - tot_len + offset + len,
    2eea:	693b      	ldr	r3, [r7, #16]
    2eec:	68da      	ldr	r2, [r3, #12]
    2eee:	693b      	ldr	r3, [r7, #16]
    2ef0:	6918      	ldr	r0, [r3, #16]
    2ef2:	69bb      	ldr	r3, [r7, #24]
    2ef4:	1ac0      	subs	r0, r0, r3
    2ef6:	68bb      	ldr	r3, [r7, #8]
    2ef8:	4418      	add	r0, r3
    2efa:	687b      	ldr	r3, [r7, #4]
    2efc:	4403      	add	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:647
        head_nb->total_length -= len;

        /* Split one net_uf into two.*/
        if(((int *)nb->data)[0] == 1) /* If we can simply erase them (reference_counter == 1).*/
        {
            fnet_memcpy((unsigned char *)nb->data_ptr + nb->length - tot_len + offset,
    2efe:	441a      	add	r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:649
                        (unsigned char *)nb->data_ptr + nb->length - tot_len + offset + len,
                        (unsigned long)(tot_len - offset - len));
    2f00:	69b8      	ldr	r0, [r7, #24]
    2f02:	68bb      	ldr	r3, [r7, #8]
    2f04:	1ac0      	subs	r0, r0, r3
    2f06:	687b      	ldr	r3, [r7, #4]
    2f08:	1ac3      	subs	r3, r0, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:647
        head_nb->total_length -= len;

        /* Split one net_uf into two.*/
        if(((int *)nb->data)[0] == 1) /* If we can simply erase them (reference_counter == 1).*/
        {
            fnet_memcpy((unsigned char *)nb->data_ptr + nb->length - tot_len + offset,
    2f0a:	4608      	mov	r0, r1
    2f0c:	4611      	mov	r1, r2
    2f0e:	461a      	mov	r2, r3
    2f10:	f002 fcc0 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:650
                        (unsigned char *)nb->data_ptr + nb->length - tot_len + offset + len,
                        (unsigned long)(tot_len - offset - len));
            nb->length -= len;
    2f14:	693b      	ldr	r3, [r7, #16]
    2f16:	693a      	ldr	r2, [r7, #16]
    2f18:	6911      	ldr	r1, [r2, #16]
    2f1a:	687a      	ldr	r2, [r7, #4]
    2f1c:	1a8a      	subs	r2, r1, r2
    2f1e:	611a      	str	r2, [r3, #16]
    2f20:	e03d      	b.n	2f9e <fnet_netbuf_cut_center+0x1aa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:654
        }
        else
        {
            head_nb = fnet_netbuf_new(tot_len - offset - len, FNET_FALSE);
    2f22:	69ba      	ldr	r2, [r7, #24]
    2f24:	68bb      	ldr	r3, [r7, #8]
    2f26:	1ad2      	subs	r2, r2, r3
    2f28:	687b      	ldr	r3, [r7, #4]
    2f2a:	1ad3      	subs	r3, r2, r3
    2f2c:	4618      	mov	r0, r3
    2f2e:	2100      	movs	r1, #0
    2f30:	f7ff fbcc 	bl	26cc <fnet_netbuf_new>
    2f34:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:656

            if(head_nb == 0) /* If no free memory.*/
    2f36:	697b      	ldr	r3, [r7, #20]
    2f38:	2b00      	cmp	r3, #0
    2f3a:	d10a      	bne.n	2f52 <fnet_netbuf_cut_center+0x15e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:658
            {
                nb = (fnet_netbuf_t *) *nb_ptr;
    2f3c:	68fb      	ldr	r3, [r7, #12]
    2f3e:	681b      	ldr	r3, [r3, #0]
    2f40:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:659
                nb->total_length += len;
    2f42:	693b      	ldr	r3, [r7, #16]
    2f44:	693a      	ldr	r2, [r7, #16]
    2f46:	6951      	ldr	r1, [r2, #20]
    2f48:	687a      	ldr	r2, [r7, #4]
    2f4a:	440a      	add	r2, r1
    2f4c:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:660
                return (0);
    2f4e:	2300      	movs	r3, #0
    2f50:	e05d      	b.n	300e <fnet_netbuf_cut_center+0x21a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:663
            }

            fnet_memcpy(head_nb->data_ptr,
    2f52:	697b      	ldr	r3, [r7, #20]
    2f54:	68d9      	ldr	r1, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:664
                        (unsigned char *)nb->data_ptr + nb->length - tot_len + offset + len,
    2f56:	693b      	ldr	r3, [r7, #16]
    2f58:	68da      	ldr	r2, [r3, #12]
    2f5a:	693b      	ldr	r3, [r7, #16]
    2f5c:	6918      	ldr	r0, [r3, #16]
    2f5e:	69bb      	ldr	r3, [r7, #24]
    2f60:	1ac0      	subs	r0, r0, r3
    2f62:	68bb      	ldr	r3, [r7, #8]
    2f64:	4418      	add	r0, r3
    2f66:	687b      	ldr	r3, [r7, #4]
    2f68:	4403      	add	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:663
                nb = (fnet_netbuf_t *) *nb_ptr;
                nb->total_length += len;
                return (0);
            }

            fnet_memcpy(head_nb->data_ptr,
    2f6a:	441a      	add	r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:665
                        (unsigned char *)nb->data_ptr + nb->length - tot_len + offset + len,
                        (unsigned long)(tot_len - offset - len));
    2f6c:	69b8      	ldr	r0, [r7, #24]
    2f6e:	68bb      	ldr	r3, [r7, #8]
    2f70:	1ac0      	subs	r0, r0, r3
    2f72:	687b      	ldr	r3, [r7, #4]
    2f74:	1ac3      	subs	r3, r0, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:663
                nb = (fnet_netbuf_t *) *nb_ptr;
                nb->total_length += len;
                return (0);
            }

            fnet_memcpy(head_nb->data_ptr,
    2f76:	4608      	mov	r0, r1
    2f78:	4611      	mov	r1, r2
    2f7a:	461a      	mov	r2, r3
    2f7c:	f002 fc8a 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:667
                        (unsigned char *)nb->data_ptr + nb->length - tot_len + offset + len,
                        (unsigned long)(tot_len - offset - len));

            head_nb->next = nb->next;
    2f80:	693b      	ldr	r3, [r7, #16]
    2f82:	681a      	ldr	r2, [r3, #0]
    2f84:	697b      	ldr	r3, [r7, #20]
    2f86:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:669

            nb->next = head_nb;
    2f88:	693b      	ldr	r3, [r7, #16]
    2f8a:	697a      	ldr	r2, [r7, #20]
    2f8c:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:671

            nb->length -= tot_len - offset;
    2f8e:	693b      	ldr	r3, [r7, #16]
    2f90:	693a      	ldr	r2, [r7, #16]
    2f92:	6911      	ldr	r1, [r2, #16]
    2f94:	68b8      	ldr	r0, [r7, #8]
    2f96:	69ba      	ldr	r2, [r7, #24]
    2f98:	1a82      	subs	r2, r0, r2
    2f9a:	440a      	add	r2, r1
    2f9c:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:674
        }

        return ((fnet_netbuf_t *) *nb_ptr);
    2f9e:	68fb      	ldr	r3, [r7, #12]
    2fa0:	681b      	ldr	r3, [r3, #0]
    2fa2:	e034      	b.n	300e <fnet_netbuf_cut_center+0x21a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:677
    }

    if(tot_len - offset == len) /* If we cut from the middle of buffer to the end only.*/
    2fa4:	69ba      	ldr	r2, [r7, #24]
    2fa6:	68bb      	ldr	r3, [r7, #8]
    2fa8:	1ad2      	subs	r2, r2, r3
    2faa:	687b      	ldr	r3, [r7, #4]
    2fac:	429a      	cmp	r2, r3
    2fae:	d10e      	bne.n	2fce <fnet_netbuf_cut_center+0x1da>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:679
    {
        nb->length -= len;
    2fb0:	693b      	ldr	r3, [r7, #16]
    2fb2:	693a      	ldr	r2, [r7, #16]
    2fb4:	6911      	ldr	r1, [r2, #16]
    2fb6:	687a      	ldr	r2, [r7, #4]
    2fb8:	1a8a      	subs	r2, r1, r2
    2fba:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:681

        head_nb->total_length -= len;
    2fbc:	697b      	ldr	r3, [r7, #20]
    2fbe:	695a      	ldr	r2, [r3, #20]
    2fc0:	687b      	ldr	r3, [r7, #4]
    2fc2:	1ad2      	subs	r2, r2, r3
    2fc4:	697b      	ldr	r3, [r7, #20]
    2fc6:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:683

        return ((fnet_netbuf_t *) *nb_ptr);
    2fc8:	68fb      	ldr	r3, [r7, #12]
    2fca:	681b      	ldr	r3, [r3, #0]
    2fcc:	e01f      	b.n	300e <fnet_netbuf_cut_center+0x21a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:687
    }
    else                                /* Cut from the middle of net_buf to the end and trim remaining info*/
    {                                   /* (tot_len-offset < len)*/
        nb->length -= tot_len - offset;
    2fce:	693b      	ldr	r3, [r7, #16]
    2fd0:	693a      	ldr	r2, [r7, #16]
    2fd2:	6911      	ldr	r1, [r2, #16]
    2fd4:	68b8      	ldr	r0, [r7, #8]
    2fd6:	69ba      	ldr	r2, [r7, #24]
    2fd8:	1a82      	subs	r2, r0, r2
    2fda:	440a      	add	r2, r1
    2fdc:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:689

        nb->next->total_length = head_nb->total_length; /* For correct fnet_netbuf_trim execution. */
    2fde:	693b      	ldr	r3, [r7, #16]
    2fe0:	681b      	ldr	r3, [r3, #0]
    2fe2:	697a      	ldr	r2, [r7, #20]
    2fe4:	6952      	ldr	r2, [r2, #20]
    2fe6:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:690
        fnet_netbuf_trim(&nb->next, len - (tot_len - offset));
    2fe8:	693b      	ldr	r3, [r7, #16]
    2fea:	461a      	mov	r2, r3
    2fec:	68b9      	ldr	r1, [r7, #8]
    2fee:	69bb      	ldr	r3, [r7, #24]
    2ff0:	1ac9      	subs	r1, r1, r3
    2ff2:	687b      	ldr	r3, [r7, #4]
    2ff4:	440b      	add	r3, r1
    2ff6:	4610      	mov	r0, r2
    2ff8:	4619      	mov	r1, r3
    2ffa:	f7ff fe5f 	bl	2cbc <fnet_netbuf_trim>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:692

        head_nb->total_length -= len;
    2ffe:	697b      	ldr	r3, [r7, #20]
    3000:	695a      	ldr	r2, [r3, #20]
    3002:	687b      	ldr	r3, [r7, #4]
    3004:	1ad2      	subs	r2, r2, r3
    3006:	697b      	ldr	r3, [r7, #20]
    3008:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:694

        return ((fnet_netbuf_t *) *nb_ptr);
    300a:	68fb      	ldr	r3, [r7, #12]
    300c:	681b      	ldr	r3, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:696
    }
}
    300e:	4618      	mov	r0, r3
    3010:	3720      	adds	r7, #32
    3012:	46bd      	mov	sp, r7
    3014:	bd80      	pop	{r7, pc}
    3016:	bf00      	nop

00003018 <fnet_netbuf_concat>:
fnet_netbuf_concat():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:706
* DESCRIPTION: Makes one net_buf from two. If the first or second pointer
*              is 0, the pointer to the second or first buffer
*              correspondingly is returned
*************************************************************************/
fnet_netbuf_t *fnet_netbuf_concat( fnet_netbuf_t *nb1, fnet_netbuf_t *nb2 )
{
    3018:	b480      	push	{r7}
    301a:	b085      	sub	sp, #20
    301c:	af00      	add	r7, sp, #0
    301e:	6078      	str	r0, [r7, #4]
    3020:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:709
    fnet_netbuf_t *head_nb;

    if(nb1 == 0)
    3022:	687b      	ldr	r3, [r7, #4]
    3024:	2b00      	cmp	r3, #0
    3026:	d101      	bne.n	302c <fnet_netbuf_concat+0x14>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:710
        return nb2;
    3028:	683b      	ldr	r3, [r7, #0]
    302a:	e020      	b.n	306e <fnet_netbuf_concat+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:712

    if(nb2 == 0)
    302c:	683b      	ldr	r3, [r7, #0]
    302e:	2b00      	cmp	r3, #0
    3030:	d101      	bne.n	3036 <fnet_netbuf_concat+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:713
        return nb1;
    3032:	687b      	ldr	r3, [r7, #4]
    3034:	e01b      	b.n	306e <fnet_netbuf_concat+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:715

    head_nb = nb1;
    3036:	687b      	ldr	r3, [r7, #4]
    3038:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:717

    while(nb1->next != 0)
    303a:	e002      	b.n	3042 <fnet_netbuf_concat+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:718
      nb1 = nb1->next;
    303c:	687b      	ldr	r3, [r7, #4]
    303e:	681b      	ldr	r3, [r3, #0]
    3040:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:717 (discriminator 1)
    if(nb2 == 0)
        return nb1;

    head_nb = nb1;

    while(nb1->next != 0)
    3042:	687b      	ldr	r3, [r7, #4]
    3044:	681b      	ldr	r3, [r3, #0]
    3046:	2b00      	cmp	r3, #0
    3048:	d1f8      	bne.n	303c <fnet_netbuf_concat+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:720
      nb1 = nb1->next;

    nb1->next = nb2;
    304a:	687b      	ldr	r3, [r7, #4]
    304c:	683a      	ldr	r2, [r7, #0]
    304e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:722
    
    head_nb->flags |= nb2->flags;
    3050:	68fb      	ldr	r3, [r7, #12]
    3052:	699a      	ldr	r2, [r3, #24]
    3054:	683b      	ldr	r3, [r7, #0]
    3056:	699b      	ldr	r3, [r3, #24]
    3058:	431a      	orrs	r2, r3
    305a:	68fb      	ldr	r3, [r7, #12]
    305c:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:723
    head_nb->total_length += nb2->total_length;
    305e:	68fb      	ldr	r3, [r7, #12]
    3060:	695a      	ldr	r2, [r3, #20]
    3062:	683b      	ldr	r3, [r7, #0]
    3064:	695b      	ldr	r3, [r3, #20]
    3066:	441a      	add	r2, r3
    3068:	68fb      	ldr	r3, [r7, #12]
    306a:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:725

    return head_nb;
    306c:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:726
}
    306e:	4618      	mov	r0, r3
    3070:	3714      	adds	r7, #20
    3072:	46bd      	mov	sp, r7
    3074:	f85d 7b04 	ldr.w	r7, [sp], #4
    3078:	4770      	bx	lr
    307a:	bf00      	nop

0000307c <fnet_netbuf_add_chain>:
fnet_netbuf_add_chain():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:736
* DESCRIPTION: Adds chain nb_chain into the queue of chains pointed by 
*              nb_ptr
*              
*************************************************************************/
void fnet_netbuf_add_chain( fnet_netbuf_t ** nb_ptr, fnet_netbuf_t *nb_chain )
{
    307c:	b480      	push	{r7}
    307e:	b085      	sub	sp, #20
    3080:	af00      	add	r7, sp, #0
    3082:	6078      	str	r0, [r7, #4]
    3084:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:739
    fnet_netbuf_t *nb;

    nb = (fnet_netbuf_t *) *nb_ptr;
    3086:	687b      	ldr	r3, [r7, #4]
    3088:	681b      	ldr	r3, [r3, #0]
    308a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:741

    if(nb == 0)
    308c:	68fb      	ldr	r3, [r7, #12]
    308e:	2b00      	cmp	r3, #0
    3090:	d103      	bne.n	309a <fnet_netbuf_add_chain+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:743
    {
        *nb_ptr = nb_chain;
    3092:	687b      	ldr	r3, [r7, #4]
    3094:	683a      	ldr	r2, [r7, #0]
    3096:	601a      	str	r2, [r3, #0]
    3098:	e00a      	b.n	30b0 <fnet_netbuf_add_chain+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:747
    }
    else
    {
        while(nb->next_chain)
    309a:	e002      	b.n	30a2 <fnet_netbuf_add_chain+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:748
          nb = nb->next_chain;
    309c:	68fb      	ldr	r3, [r7, #12]
    309e:	685b      	ldr	r3, [r3, #4]
    30a0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:747 (discriminator 1)
    {
        *nb_ptr = nb_chain;
    }
    else
    {
        while(nb->next_chain)
    30a2:	68fb      	ldr	r3, [r7, #12]
    30a4:	685b      	ldr	r3, [r3, #4]
    30a6:	2b00      	cmp	r3, #0
    30a8:	d1f8      	bne.n	309c <fnet_netbuf_add_chain+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:750
          nb = nb->next_chain;

        nb->next_chain = nb_chain;
    30aa:	68fb      	ldr	r3, [r7, #12]
    30ac:	683a      	ldr	r2, [r7, #0]
    30ae:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:753
    }

}
    30b0:	3714      	adds	r7, #20
    30b2:	46bd      	mov	sp, r7
    30b4:	f85d 7b04 	ldr.w	r7, [sp], #4
    30b8:	4770      	bx	lr
    30ba:	bf00      	nop

000030bc <fnet_netbuf_del_chain>:
fnet_netbuf_del_chain():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:763
* DESCRIPTION: Deletes chain nb_chain, which is in the queue pointed by
*              nb_ptr
*              
*************************************************************************/
void fnet_netbuf_del_chain( fnet_netbuf_t ** nb_ptr, fnet_netbuf_t *nb_chain )
{
    30bc:	b580      	push	{r7, lr}
    30be:	b084      	sub	sp, #16
    30c0:	af00      	add	r7, sp, #0
    30c2:	6078      	str	r0, [r7, #4]
    30c4:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:766
    fnet_netbuf_t *nb_current, *nb;
    
    if(!((nb_ptr == 0) || ((fnet_netbuf_t *) *nb_ptr == 0)))
    30c6:	687b      	ldr	r3, [r7, #4]
    30c8:	2b00      	cmp	r3, #0
    30ca:	d02c      	beq.n	3126 <fnet_netbuf_del_chain+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:766 (discriminator 1)
    30cc:	687b      	ldr	r3, [r7, #4]
    30ce:	681b      	ldr	r3, [r3, #0]
    30d0:	2b00      	cmp	r3, #0
    30d2:	d028      	beq.n	3126 <fnet_netbuf_del_chain+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:768
    {
        nb_current = (fnet_netbuf_t *) *nb_ptr;
    30d4:	687b      	ldr	r3, [r7, #4]
    30d6:	681b      	ldr	r3, [r3, #0]
    30d8:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:770

        if(nb_current == nb_chain)
    30da:	68fa      	ldr	r2, [r7, #12]
    30dc:	683b      	ldr	r3, [r7, #0]
    30de:	429a      	cmp	r2, r3
    30e0:	d109      	bne.n	30f6 <fnet_netbuf_del_chain+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:772
        {
            nb = nb_current->next_chain;
    30e2:	68fb      	ldr	r3, [r7, #12]
    30e4:	685b      	ldr	r3, [r3, #4]
    30e6:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:773
            fnet_netbuf_free_chain(nb_current);
    30e8:	68f8      	ldr	r0, [r7, #12]
    30ea:	f7ff fd09 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:774
            *nb_ptr = nb;
    30ee:	687b      	ldr	r3, [r7, #4]
    30f0:	68ba      	ldr	r2, [r7, #8]
    30f2:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:775
            return;
    30f4:	e017      	b.n	3126 <fnet_netbuf_del_chain+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:778
        }

        while((nb_current->next_chain != nb_chain) && (nb_current != 0))
    30f6:	e002      	b.n	30fe <fnet_netbuf_del_chain+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:780
        {
            nb_current = nb_current->next_chain;
    30f8:	68fb      	ldr	r3, [r7, #12]
    30fa:	685b      	ldr	r3, [r3, #4]
    30fc:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:778 (discriminator 1)
            fnet_netbuf_free_chain(nb_current);
            *nb_ptr = nb;
            return;
        }

        while((nb_current->next_chain != nb_chain) && (nb_current != 0))
    30fe:	68fb      	ldr	r3, [r7, #12]
    3100:	685a      	ldr	r2, [r3, #4]
    3102:	683b      	ldr	r3, [r7, #0]
    3104:	429a      	cmp	r2, r3
    3106:	d002      	beq.n	310e <fnet_netbuf_del_chain+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:778 (discriminator 2)
    3108:	68fb      	ldr	r3, [r7, #12]
    310a:	2b00      	cmp	r3, #0
    310c:	d1f4      	bne.n	30f8 <fnet_netbuf_del_chain+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:783
        {
            nb_current = nb_current->next_chain;
        }

        nb = nb_current->next_chain->next_chain;
    310e:	68fb      	ldr	r3, [r7, #12]
    3110:	685b      	ldr	r3, [r3, #4]
    3112:	685b      	ldr	r3, [r3, #4]
    3114:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:785

        fnet_netbuf_free_chain(nb_current->next_chain);
    3116:	68fb      	ldr	r3, [r7, #12]
    3118:	685b      	ldr	r3, [r3, #4]
    311a:	4618      	mov	r0, r3
    311c:	f7ff fcf0 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:787

        nb_current->next_chain = nb;
    3120:	68fb      	ldr	r3, [r7, #12]
    3122:	68ba      	ldr	r2, [r7, #8]
    3124:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:789
    }
}
    3126:	3710      	adds	r7, #16
    3128:	46bd      	mov	sp, r7
    312a:	bd80      	pop	{r7, pc}

0000312c <fnet_heap_init>:
fnet_heap_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:800
*
* DESCRIPTION: Heap init
*              
*************************************************************************/
int fnet_heap_init( unsigned char *heap_ptr, unsigned long heap_size )
{
    312c:	b580      	push	{r7, lr}
    312e:	b084      	sub	sp, #16
    3130:	af00      	add	r7, sp, #0
    3132:	6078      	str	r0, [r7, #4]
    3134:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:811
    if(((fnet_mempool_main = fnet_mempool_init( heap_ptr, heap_size, FNET_MEMPOOL_ALIGN_8 )) != 0) &&
       ((fnet_mempool_netbuf = fnet_mempool_init( (void*)((unsigned long)fnet_malloc( FNET_NETBUF_MEMPOOL_SIZE(heap_size))), 
                                                    FNET_NETBUF_MEMPOOL_SIZE(heap_size), FNET_MEMPOOL_ALIGN_8 )) != 0) )

#else
     if((fnet_mempool_main = fnet_mempool_init( heap_ptr, heap_size, FNET_MEMPOOL_ALIGN_8 )) != 0)
    3136:	6878      	ldr	r0, [r7, #4]
    3138:	6839      	ldr	r1, [r7, #0]
    313a:	2207      	movs	r2, #7
    313c:	f7ff f924 	bl	2388 <fnet_mempool_init>
    3140:	4602      	mov	r2, r0
    3142:	4b08      	ldr	r3, [pc, #32]	; (3164 <fnet_heap_init+0x38>)
    3144:	601a      	str	r2, [r3, #0]
    3146:	4b07      	ldr	r3, [pc, #28]	; (3164 <fnet_heap_init+0x38>)
    3148:	681b      	ldr	r3, [r3, #0]
    314a:	2b00      	cmp	r3, #0
    314c:	d002      	beq.n	3154 <fnet_heap_init+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:813
#endif
        result = FNET_OK;
    314e:	2300      	movs	r3, #0
    3150:	60fb      	str	r3, [r7, #12]
    3152:	e002      	b.n	315a <fnet_heap_init+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:815
     else
        result = FNET_ERR;  
    3154:	f04f 33ff 	mov.w	r3, #4294967295
    3158:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:818
                                                             
   
    return result;
    315a:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:819
}
    315c:	4618      	mov	r0, r3
    315e:	3710      	adds	r7, #16
    3160:	46bd      	mov	sp, r7
    3162:	bd80      	pop	{r7, pc}
    3164:	10000758 	.word	0x10000758

00003168 <fnet_free_netbuf>:
fnet_free_netbuf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:829
*
* DESCRIPTION: Frees memory in heap for TCP/IP
*              
*************************************************************************/
void fnet_free_netbuf( void *ap )
{
    3168:	b580      	push	{r7, lr}
    316a:	b082      	sub	sp, #8
    316c:	af00      	add	r7, sp, #0
    316e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:830
    fnet_mempool_free(fnet_mempool_netbuf, ap);
    3170:	4b04      	ldr	r3, [pc, #16]	; (3184 <fnet_free_netbuf+0x1c>)
    3172:	681b      	ldr	r3, [r3, #0]
    3174:	4618      	mov	r0, r3
    3176:	6879      	ldr	r1, [r7, #4]
    3178:	f7ff f958 	bl	242c <fnet_mempool_free>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:831
}
    317c:	3708      	adds	r7, #8
    317e:	46bd      	mov	sp, r7
    3180:	bd80      	pop	{r7, pc}
    3182:	bf00      	nop
    3184:	10000758 	.word	0x10000758

00003188 <fnet_malloc_netbuf>:
fnet_malloc_netbuf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:840
*
* DESCRIPTION: Allocates memory in heap for TCP/IP
*              
*************************************************************************/
void *fnet_malloc_netbuf( unsigned nbytes )
{
    3188:	b580      	push	{r7, lr}
    318a:	b082      	sub	sp, #8
    318c:	af00      	add	r7, sp, #0
    318e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:841
    return fnet_mempool_malloc( fnet_mempool_netbuf, nbytes );
    3190:	4b05      	ldr	r3, [pc, #20]	; (31a8 <fnet_malloc_netbuf+0x20>)
    3192:	681b      	ldr	r3, [r3, #0]
    3194:	4618      	mov	r0, r3
    3196:	6879      	ldr	r1, [r7, #4]
    3198:	f7ff f9ba 	bl	2510 <fnet_mempool_malloc>
    319c:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:842
}
    319e:	4618      	mov	r0, r3
    31a0:	3708      	adds	r7, #8
    31a2:	46bd      	mov	sp, r7
    31a4:	bd80      	pop	{r7, pc}
    31a6:	bf00      	nop
    31a8:	10000758 	.word	0x10000758

000031ac <fnet_free_mem_status_netbuf>:
fnet_free_mem_status_netbuf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:851
*
* DESCRIPTION: Returns a quantity of free memory (for debug needs)
*              
*************************************************************************/
unsigned long fnet_free_mem_status_netbuf( void )
{
    31ac:	b580      	push	{r7, lr}
    31ae:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:852
    return fnet_mempool_free_mem_status( fnet_mempool_netbuf );
    31b0:	4b03      	ldr	r3, [pc, #12]	; (31c0 <fnet_free_mem_status_netbuf+0x14>)
    31b2:	681b      	ldr	r3, [r3, #0]
    31b4:	4618      	mov	r0, r3
    31b6:	f7ff fa21 	bl	25fc <fnet_mempool_free_mem_status>
    31ba:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:853
}
    31bc:	4618      	mov	r0, r3
    31be:	bd80      	pop	{r7, pc}
    31c0:	10000758 	.word	0x10000758

000031c4 <fnet_malloc_max_netbuf>:
fnet_malloc_max_netbuf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:862
*
* DESCRIPTION: Returns a maximum size of posible allocated memory chunk.
*              
*************************************************************************/
unsigned long fnet_malloc_max_netbuf( void )
{
    31c4:	b580      	push	{r7, lr}
    31c6:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:863
    return fnet_mempool_malloc_max( fnet_mempool_netbuf  );
    31c8:	4b03      	ldr	r3, [pc, #12]	; (31d8 <fnet_malloc_max_netbuf+0x14>)
    31ca:	681b      	ldr	r3, [r3, #0]
    31cc:	4618      	mov	r0, r3
    31ce:	f7ff fa47 	bl	2660 <fnet_mempool_malloc_max>
    31d2:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:864
}
    31d4:	4618      	mov	r0, r3
    31d6:	bd80      	pop	{r7, pc}
    31d8:	10000758 	.word	0x10000758

000031dc <fnet_mem_release_netbuf>:
fnet_mem_release_netbuf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:873
*
* DESCRIPTION: Free all Net Memory
*              
*************************************************************************/
void fnet_mem_release_netbuf( void )
{
    31dc:	b580      	push	{r7, lr}
    31de:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:874
    fnet_mempool_release(fnet_mempool_netbuf);
    31e0:	4b02      	ldr	r3, [pc, #8]	; (31ec <fnet_mem_release_netbuf+0x10>)
    31e2:	681b      	ldr	r3, [r3, #0]
    31e4:	4618      	mov	r0, r3
    31e6:	f7ff f913 	bl	2410 <fnet_mempool_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:875
}
    31ea:	bd80      	pop	{r7, pc}
    31ec:	10000758 	.word	0x10000758

000031f0 <fnet_free>:
fnet_free():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:885
*
* DESCRIPTION: Frees memory in heap for TCP/IP
*              
*************************************************************************/
void fnet_free( void *ap )
{
    31f0:	b580      	push	{r7, lr}
    31f2:	b082      	sub	sp, #8
    31f4:	af00      	add	r7, sp, #0
    31f6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:886
    fnet_mempool_free(fnet_mempool_main, ap);
    31f8:	4b04      	ldr	r3, [pc, #16]	; (320c <fnet_free+0x1c>)
    31fa:	681b      	ldr	r3, [r3, #0]
    31fc:	4618      	mov	r0, r3
    31fe:	6879      	ldr	r1, [r7, #4]
    3200:	f7ff f914 	bl	242c <fnet_mempool_free>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:887
}
    3204:	3708      	adds	r7, #8
    3206:	46bd      	mov	sp, r7
    3208:	bd80      	pop	{r7, pc}
    320a:	bf00      	nop
    320c:	10000758 	.word	0x10000758

00003210 <fnet_malloc>:
fnet_malloc():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:896
*
* DESCRIPTION: Allocates memory in heap for TCP/IP
*              
*************************************************************************/
void *fnet_malloc( unsigned nbytes )
{
    3210:	b580      	push	{r7, lr}
    3212:	b082      	sub	sp, #8
    3214:	af00      	add	r7, sp, #0
    3216:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:897
    return fnet_mempool_malloc( fnet_mempool_main, nbytes );
    3218:	4b05      	ldr	r3, [pc, #20]	; (3230 <fnet_malloc+0x20>)
    321a:	681b      	ldr	r3, [r3, #0]
    321c:	4618      	mov	r0, r3
    321e:	6879      	ldr	r1, [r7, #4]
    3220:	f7ff f976 	bl	2510 <fnet_mempool_malloc>
    3224:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:898
}
    3226:	4618      	mov	r0, r3
    3228:	3708      	adds	r7, #8
    322a:	46bd      	mov	sp, r7
    322c:	bd80      	pop	{r7, pc}
    322e:	bf00      	nop
    3230:	10000758 	.word	0x10000758

00003234 <fnet_free_mem_status>:
fnet_free_mem_status():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:907
*
* DESCRIPTION: Returns a quantity of free memory (for debug needs)
*              
*************************************************************************/
unsigned long fnet_free_mem_status( void )
{
    3234:	b580      	push	{r7, lr}
    3236:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:908
    return fnet_mempool_free_mem_status( fnet_mempool_main );
    3238:	4b03      	ldr	r3, [pc, #12]	; (3248 <fnet_free_mem_status+0x14>)
    323a:	681b      	ldr	r3, [r3, #0]
    323c:	4618      	mov	r0, r3
    323e:	f7ff f9dd 	bl	25fc <fnet_mempool_free_mem_status>
    3242:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:909
}
    3244:	4618      	mov	r0, r3
    3246:	bd80      	pop	{r7, pc}
    3248:	10000758 	.word	0x10000758

0000324c <fnet_malloc_max>:
fnet_malloc_max():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:918
*
* DESCRIPTION: Returns a maximum size of posible allocated memory chunk.
*              
*************************************************************************/
unsigned long fnet_malloc_max( void )
{
    324c:	b580      	push	{r7, lr}
    324e:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:919
    return fnet_mempool_malloc_max( fnet_mempool_main  );
    3250:	4b03      	ldr	r3, [pc, #12]	; (3260 <fnet_malloc_max+0x14>)
    3252:	681b      	ldr	r3, [r3, #0]
    3254:	4618      	mov	r0, r3
    3256:	f7ff fa03 	bl	2660 <fnet_mempool_malloc_max>
    325a:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:920
}
    325c:	4618      	mov	r0, r3
    325e:	bd80      	pop	{r7, pc}
    3260:	10000758 	.word	0x10000758

00003264 <fnet_mem_release>:
fnet_mem_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:929
*
* DESCRIPTION: Free all Net Memory
*              
*************************************************************************/
void fnet_mem_release( void )
{
    3264:	b580      	push	{r7, lr}
    3266:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:930
    fnet_mempool_release(fnet_mempool_main);
    3268:	4b02      	ldr	r3, [pc, #8]	; (3274 <fnet_mem_release+0x10>)
    326a:	681b      	ldr	r3, [r3, #0]
    326c:	4618      	mov	r0, r3
    326e:	f7ff f8cf 	bl	2410 <fnet_mempool_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netbuf.c:931
}
    3272:	bd80      	pop	{r7, pc}
    3274:	10000758 	.word	0x10000758

00003278 <fnet_netif_init_all>:
fnet_netif_init_all():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:94
* NAME: fnet_netif_init_all
*
* DESCRIPTION: Initialization of all supported interfaces.
*************************************************************************/
int fnet_netif_init_all( void )
{
    3278:	b580      	push	{r7, lr}
    327a:	b084      	sub	sp, #16
    327c:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:95
    int result = FNET_OK;
    327e:	2300      	movs	r3, #0
    3280:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:97

    fnet_isr_lock();
    3282:	f7fe ffe5 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:99

    fnet_netif_list = fnet_netif_default = 0;
    3286:	4b1a      	ldr	r3, [pc, #104]	; (32f0 <fnet_netif_init_all+0x78>)
    3288:	2200      	movs	r2, #0
    328a:	601a      	str	r2, [r3, #0]
    328c:	4b18      	ldr	r3, [pc, #96]	; (32f0 <fnet_netif_init_all+0x78>)
    328e:	681a      	ldr	r2, [r3, #0]
    3290:	4b18      	ldr	r3, [pc, #96]	; (32f4 <fnet_netif_init_all+0x7c>)
    3292:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:107
     * Initialize IFs.
     ************************************/
#if FNET_CFG_CPU_ETH0  
    /* Initialise eth0 interface.*/
    {
    	fnet_mac_addr_t macaddr = {0x00,0x11,0x22,0x33,0x44,0x55};
    3294:	4a18      	ldr	r2, [pc, #96]	; (32f8 <fnet_netif_init_all+0x80>)
    3296:	1d3b      	adds	r3, r7, #4
    3298:	6810      	ldr	r0, [r2, #0]
    329a:	6018      	str	r0, [r3, #0]
    329c:	8892      	ldrh	r2, [r2, #4]
    329e:	809a      	strh	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:110
   
        /* Set MAC Address.*/
	    fnet_str_to_mac(FNET_CFG_CPU_ETH0_MAC_ADDR, macaddr);
    32a0:	1d3b      	adds	r3, r7, #4
    32a2:	4816      	ldr	r0, [pc, #88]	; (32fc <fnet_netif_init_all+0x84>)
    32a4:	4619      	mov	r1, r3
    32a6:	f7fd fdb3 	bl	e10 <fnet_str_to_mac>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:111
        result = fnet_netif_init(FNET_ETH0_IF, macaddr, sizeof(fnet_mac_addr_t));
    32aa:	1d3b      	adds	r3, r7, #4
    32ac:	4814      	ldr	r0, [pc, #80]	; (3300 <fnet_netif_init_all+0x88>)
    32ae:	4619      	mov	r1, r3
    32b0:	2206      	movs	r2, #6
    32b2:	f000 f8f1 	bl	3498 <fnet_netif_init>
    32b6:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:112
        if(result == FNET_ERR)
    32b8:	68fb      	ldr	r3, [r7, #12]
    32ba:	f1b3 3fff 	cmp.w	r3, #4294967295
    32be:	d00f      	beq.n	32e0 <fnet_netif_init_all+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:138
#endif /* FNET_CFG_LOOPBACK */

    /***********************************
     * Set default parameters.
     ************************************/
    fnet_netif_set_default(FNET_CFG_DEFAULT_IF); /* Default interface.*/
    32c0:	480f      	ldr	r0, [pc, #60]	; (3300 <fnet_netif_init_all+0x88>)
    32c2:	f000 f999 	bl	35f8 <fnet_netif_set_default>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:144

/* Set address parameters of the Ethernet interface.*/
#if FNET_CFG_IP4
    #if FNET_CFG_CPU_ETH0
    {
        fnet_netif_set_ip4_addr(FNET_ETH0_IF, FNET_CFG_ETH0_IP4_ADDR);
    32c6:	480e      	ldr	r0, [pc, #56]	; (3300 <fnet_netif_init_all+0x88>)
    32c8:	490e      	ldr	r1, [pc, #56]	; (3304 <fnet_netif_init_all+0x8c>)
    32ca:	f000 f9a7 	bl	361c <fnet_netif_set_ip4_addr>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:145
        fnet_netif_set_ip4_subnet_mask(FNET_ETH0_IF, (unsigned long)FNET_CFG_ETH0_IP4_MASK);
    32ce:	480c      	ldr	r0, [pc, #48]	; (3300 <fnet_netif_init_all+0x88>)
    32d0:	f64f 71ff 	movw	r1, #65535	; 0xffff
    32d4:	f000 fa14 	bl	3700 <fnet_netif_set_ip4_subnet_mask>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:146
        fnet_netif_set_ip4_gateway(FNET_ETH0_IF, FNET_CFG_ETH0_IP4_GW);
    32d8:	4809      	ldr	r0, [pc, #36]	; (3300 <fnet_netif_init_all+0x88>)
    32da:	2100      	movs	r1, #0
    32dc:	f000 fa34 	bl	3748 <fnet_netif_set_ip4_gateway>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:170
#if FNET_CFG_LOOPBACK && FNET_CFG_IP4
    fnet_netif_set_ip4_addr(FNET_LOOP_IF, FNET_CFG_LOOPBACK_IP4_ADDR);
#endif /* FNET_CFG_LOOPBACK */

INIT_ERR:
    fnet_isr_unlock();
    32e0:	f7fe ffc4 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:171
    return result;
    32e4:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:172
}
    32e6:	4618      	mov	r0, r3
    32e8:	3710      	adds	r7, #16
    32ea:	46bd      	mov	sp, r7
    32ec:	bd80      	pop	{r7, pc}
    32ee:	bf00      	nop
    32f0:	1000075c 	.word	0x1000075c
    32f4:	1000baec 	.word	0x1000baec
    32f8:	00013f74 	.word	0x00013f74
    32fc:	00013f60 	.word	0x00013f60
    3300:	10000284 	.word	0x10000284
    3304:	1400a8c0 	.word	0x1400a8c0

00003308 <fnet_netif_release_all>:
fnet_netif_release_all():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:180
* NAME: fnet_netif_release_all
*
* DESCRIPTION: Releases all installed interfaces.
*************************************************************************/
void fnet_netif_release_all( void )
{
    3308:	b580      	push	{r7, lr}
    330a:	b082      	sub	sp, #8
    330c:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:183
    fnet_netif_t *net_if_ptr;
    
    fnet_netif_dupip_handler_init(0); /* Reset dupip handler.*/
    330e:	2000      	movs	r0, #0
    3310:	f000 fb6a 	bl	39e8 <fnet_netif_dupip_handler_init>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:185
    
    for (net_if_ptr = fnet_netif_list; net_if_ptr; net_if_ptr = net_if_ptr->next)
    3314:	4b0b      	ldr	r3, [pc, #44]	; (3344 <fnet_netif_release_all+0x3c>)
    3316:	681b      	ldr	r3, [r3, #0]
    3318:	607b      	str	r3, [r7, #4]
    331a:	e005      	b.n	3328 <fnet_netif_release_all+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:187 (discriminator 2)
    {
        fnet_netif_release(net_if_ptr);
    331c:	6878      	ldr	r0, [r7, #4]
    331e:	f000 f93d 	bl	359c <fnet_netif_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:185 (discriminator 2)
{
    fnet_netif_t *net_if_ptr;
    
    fnet_netif_dupip_handler_init(0); /* Reset dupip handler.*/
    
    for (net_if_ptr = fnet_netif_list; net_if_ptr; net_if_ptr = net_if_ptr->next)
    3322:	687b      	ldr	r3, [r7, #4]
    3324:	681b      	ldr	r3, [r3, #0]
    3326:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:185 (discriminator 1)
    3328:	687b      	ldr	r3, [r7, #4]
    332a:	2b00      	cmp	r3, #0
    332c:	d1f6      	bne.n	331c <fnet_netif_release_all+0x14>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:190
    {
        fnet_netif_release(net_if_ptr);
    }

    fnet_netif_list = fnet_netif_default = 0;
    332e:	4b06      	ldr	r3, [pc, #24]	; (3348 <fnet_netif_release_all+0x40>)
    3330:	2200      	movs	r2, #0
    3332:	601a      	str	r2, [r3, #0]
    3334:	4b04      	ldr	r3, [pc, #16]	; (3348 <fnet_netif_release_all+0x40>)
    3336:	681a      	ldr	r2, [r3, #0]
    3338:	4b02      	ldr	r3, [pc, #8]	; (3344 <fnet_netif_release_all+0x3c>)
    333a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:191
}
    333c:	3708      	adds	r7, #8
    333e:	46bd      	mov	sp, r7
    3340:	bd80      	pop	{r7, pc}
    3342:	bf00      	nop
    3344:	1000baec 	.word	0x1000baec
    3348:	1000075c 	.word	0x1000075c

0000334c <fnet_netif_drain>:
fnet_netif_drain():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:200
*
* DESCRIPTION: This function calls "drain" functions of all currently 
*              installed network interfaces. 
*************************************************************************/
void fnet_netif_drain( void )
{
    334c:	b580      	push	{r7, lr}
    334e:	b082      	sub	sp, #8
    3350:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:203
    fnet_netif_t *net_if_ptr;

    fnet_isr_lock();
    3352:	f7fe ff7d 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:205

    for (net_if_ptr = fnet_netif_list; net_if_ptr; net_if_ptr = net_if_ptr->next)
    3356:	4b0c      	ldr	r3, [pc, #48]	; (3388 <fnet_netif_drain+0x3c>)
    3358:	681b      	ldr	r3, [r3, #0]
    335a:	607b      	str	r3, [r7, #4]
    335c:	e00c      	b.n	3378 <fnet_netif_drain+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:207
    {
        if(net_if_ptr->api->drain)
    335e:	687b      	ldr	r3, [r7, #4]
    3360:	699b      	ldr	r3, [r3, #24]
    3362:	699b      	ldr	r3, [r3, #24]
    3364:	2b00      	cmp	r3, #0
    3366:	d004      	beq.n	3372 <fnet_netif_drain+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:208
            net_if_ptr->api->drain(net_if_ptr);
    3368:	687b      	ldr	r3, [r7, #4]
    336a:	699b      	ldr	r3, [r3, #24]
    336c:	699b      	ldr	r3, [r3, #24]
    336e:	6878      	ldr	r0, [r7, #4]
    3370:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:205
{
    fnet_netif_t *net_if_ptr;

    fnet_isr_lock();

    for (net_if_ptr = fnet_netif_list; net_if_ptr; net_if_ptr = net_if_ptr->next)
    3372:	687b      	ldr	r3, [r7, #4]
    3374:	681b      	ldr	r3, [r3, #0]
    3376:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:205 (discriminator 1)
    3378:	687b      	ldr	r3, [r7, #4]
    337a:	2b00      	cmp	r3, #0
    337c:	d1ef      	bne.n	335e <fnet_netif_drain+0x12>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:211
    {
        if(net_if_ptr->api->drain)
            net_if_ptr->api->drain(net_if_ptr);
    }

    fnet_isr_unlock();
    337e:	f7fe ff75 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:212
}
    3382:	3708      	adds	r7, #8
    3384:	46bd      	mov	sp, r7
    3386:	bd80      	pop	{r7, pc}
    3388:	1000baec 	.word	0x1000baec

0000338c <fnet_netif_get_by_name>:
fnet_netif_get_by_name():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:220
* NAME: net_if_find
*
* DESCRIPTION: Returns a network interface given its name.
*************************************************************************/
fnet_netif_desc_t fnet_netif_get_by_name( char *name )
{
    338c:	b580      	push	{r7, lr}
    338e:	b084      	sub	sp, #16
    3390:	af00      	add	r7, sp, #0
    3392:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:222
    fnet_netif_t *netif;
    fnet_netif_desc_t result = (fnet_netif_desc_t)FNET_NULL;
    3394:	2300      	movs	r3, #0
    3396:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:226

    fnet_os_mutex_lock();

    if(name)
    3398:	687b      	ldr	r3, [r7, #4]
    339a:	2b00      	cmp	r3, #0
    339c:	d016      	beq.n	33cc <fnet_netif_get_by_name+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:227
        for (netif = fnet_netif_list; netif != 0; netif = netif->next)
    339e:	4b0e      	ldr	r3, [pc, #56]	; (33d8 <fnet_netif_get_by_name+0x4c>)
    33a0:	681b      	ldr	r3, [r3, #0]
    33a2:	60fb      	str	r3, [r7, #12]
    33a4:	e00f      	b.n	33c6 <fnet_netif_get_by_name+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:229
        {
            if(fnet_strncmp(name, netif->name, FNET_NETIF_NAMELEN) == 0)
    33a6:	68fb      	ldr	r3, [r7, #12]
    33a8:	3308      	adds	r3, #8
    33aa:	6878      	ldr	r0, [r7, #4]
    33ac:	4619      	mov	r1, r3
    33ae:	2208      	movs	r2, #8
    33b0:	f002 fe0a 	bl	5fc8 <fnet_strncmp>
    33b4:	4603      	mov	r3, r0
    33b6:	2b00      	cmp	r3, #0
    33b8:	d102      	bne.n	33c0 <fnet_netif_get_by_name+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:231
            {
                result = (fnet_netif_desc_t)netif;
    33ba:	68fb      	ldr	r3, [r7, #12]
    33bc:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:232
                break;
    33be:	e005      	b.n	33cc <fnet_netif_get_by_name+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:227
    fnet_netif_desc_t result = (fnet_netif_desc_t)FNET_NULL;

    fnet_os_mutex_lock();

    if(name)
        for (netif = fnet_netif_list; netif != 0; netif = netif->next)
    33c0:	68fb      	ldr	r3, [r7, #12]
    33c2:	681b      	ldr	r3, [r3, #0]
    33c4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:227 (discriminator 1)
    33c6:	68fb      	ldr	r3, [r7, #12]
    33c8:	2b00      	cmp	r3, #0
    33ca:	d1ec      	bne.n	33a6 <fnet_netif_get_by_name+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:237
                break;
            }
        }

    fnet_os_mutex_unlock();
    return result;
    33cc:	68bb      	ldr	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:238
}
    33ce:	4618      	mov	r0, r3
    33d0:	3710      	adds	r7, #16
    33d2:	46bd      	mov	sp, r7
    33d4:	bd80      	pop	{r7, pc}
    33d6:	bf00      	nop
    33d8:	1000baec 	.word	0x1000baec

000033dc <fnet_netif_get_by_number>:
fnet_netif_get_by_number():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:248
* DESCRIPTION: This function returns pointer to id-th interafce according 
*              its index (from zero). 
*              It returns NULL if id-th interface is not available.
*************************************************************************/
fnet_netif_desc_t fnet_netif_get_by_number( unsigned long n )
{
    33dc:	b480      	push	{r7}
    33de:	b085      	sub	sp, #20
    33e0:	af00      	add	r7, sp, #0
    33e2:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:249
    fnet_netif_desc_t result = FNET_NULL;
    33e4:	2300      	movs	r3, #0
    33e6:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:252
    fnet_netif_t *current;
   
    for (current = fnet_netif_list; current; current = current->next, n--)
    33e8:	4b0c      	ldr	r3, [pc, #48]	; (341c <fnet_netif_get_by_number+0x40>)
    33ea:	681b      	ldr	r3, [r3, #0]
    33ec:	60bb      	str	r3, [r7, #8]
    33ee:	e00b      	b.n	3408 <fnet_netif_get_by_number+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:254
    {
        if(n == 0)
    33f0:	687b      	ldr	r3, [r7, #4]
    33f2:	2b00      	cmp	r3, #0
    33f4:	d102      	bne.n	33fc <fnet_netif_get_by_number+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:256
        {
            result = current;
    33f6:	68bb      	ldr	r3, [r7, #8]
    33f8:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:257
            break;     
    33fa:	e008      	b.n	340e <fnet_netif_get_by_number+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:252
fnet_netif_desc_t fnet_netif_get_by_number( unsigned long n )
{
    fnet_netif_desc_t result = FNET_NULL;
    fnet_netif_t *current;
   
    for (current = fnet_netif_list; current; current = current->next, n--)
    33fc:	68bb      	ldr	r3, [r7, #8]
    33fe:	681b      	ldr	r3, [r3, #0]
    3400:	60bb      	str	r3, [r7, #8]
    3402:	687b      	ldr	r3, [r7, #4]
    3404:	3b01      	subs	r3, #1
    3406:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:252 (discriminator 1)
    3408:	68bb      	ldr	r3, [r7, #8]
    340a:	2b00      	cmp	r3, #0
    340c:	d1f0      	bne.n	33f0 <fnet_netif_get_by_number+0x14>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:261
            result = current;
            break;     
        }
    }
    
    return result;
    340e:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:262
}
    3410:	4618      	mov	r0, r3
    3412:	3714      	adds	r7, #20
    3414:	46bd      	mov	sp, r7
    3416:	f85d 7b04 	ldr.w	r7, [sp], #4
    341a:	4770      	bx	lr
    341c:	1000baec 	.word	0x1000baec

00003420 <fnet_netif_get_by_ip4_addr>:
fnet_netif_get_by_ip4_addr():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:270
* NAME: fnet_netif_get_by_ip4_addr
*
* DESCRIPTION: Returns a network interface given its IPv4 address.
*************************************************************************/
fnet_netif_desc_t fnet_netif_get_by_ip4_addr( fnet_ip4_addr_t addr )
{
    3420:	b480      	push	{r7}
    3422:	b085      	sub	sp, #20
    3424:	af00      	add	r7, sp, #0
    3426:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:271
    fnet_netif_desc_t result = (fnet_netif_desc_t)FNET_NULL;
    3428:	2300      	movs	r3, #0
    342a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:277

#if FNET_CFG_IP4
    fnet_netif_t *netif;
    
    fnet_os_mutex_lock();
    for (netif = fnet_netif_list; netif != 0; netif = netif->next)
    342c:	4b0c      	ldr	r3, [pc, #48]	; (3460 <fnet_netif_get_by_ip4_addr+0x40>)
    342e:	681b      	ldr	r3, [r3, #0]
    3430:	60bb      	str	r3, [r7, #8]
    3432:	e00a      	b.n	344a <fnet_netif_get_by_ip4_addr+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:279
    {
        if(addr == netif->ip4_addr.address)
    3434:	68bb      	ldr	r3, [r7, #8]
    3436:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    3438:	687b      	ldr	r3, [r7, #4]
    343a:	429a      	cmp	r2, r3
    343c:	d102      	bne.n	3444 <fnet_netif_get_by_ip4_addr+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:281
        {
            result = (fnet_netif_desc_t)netif;
    343e:	68bb      	ldr	r3, [r7, #8]
    3440:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:282
            break;
    3442:	e005      	b.n	3450 <fnet_netif_get_by_ip4_addr+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:277

#if FNET_CFG_IP4
    fnet_netif_t *netif;
    
    fnet_os_mutex_lock();
    for (netif = fnet_netif_list; netif != 0; netif = netif->next)
    3444:	68bb      	ldr	r3, [r7, #8]
    3446:	681b      	ldr	r3, [r3, #0]
    3448:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:277 (discriminator 1)
    344a:	68bb      	ldr	r3, [r7, #8]
    344c:	2b00      	cmp	r3, #0
    344e:	d1f1      	bne.n	3434 <fnet_netif_get_by_ip4_addr+0x14>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:290
    fnet_os_mutex_unlock();
#else
    FNET_COMP_UNUSED_ARG(addr);
#endif /* FNET_CFG_IP4 */

    return result;
    3450:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:291
}
    3452:	4618      	mov	r0, r3
    3454:	3714      	adds	r7, #20
    3456:	46bd      	mov	sp, r7
    3458:	f85d 7b04 	ldr.w	r7, [sp], #4
    345c:	4770      	bx	lr
    345e:	bf00      	nop
    3460:	1000baec 	.word	0x1000baec

00003464 <fnet_netif_get_by_sockaddr>:
fnet_netif_get_by_sockaddr():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:299
* NAME: fnet_netif_get_by_sockaddr
*
* DESCRIPTION: Returns a network interface based on socket address.
*************************************************************************/
fnet_netif_desc_t fnet_netif_get_by_sockaddr( const struct sockaddr *addr )
{
    3464:	b580      	push	{r7, lr}
    3466:	b084      	sub	sp, #16
    3468:	af00      	add	r7, sp, #0
    346a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:300
    fnet_netif_desc_t result = (fnet_netif_desc_t)FNET_NULL;
    346c:	2300      	movs	r3, #0
    346e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:302

    if(addr)
    3470:	687b      	ldr	r3, [r7, #4]
    3472:	2b00      	cmp	r3, #0
    3474:	d00a      	beq.n	348c <fnet_netif_get_by_sockaddr+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:304
    {
        switch(addr->sa_family)
    3476:	687b      	ldr	r3, [r7, #4]
    3478:	881b      	ldrh	r3, [r3, #0]
    347a:	2b01      	cmp	r3, #1
    347c:	d106      	bne.n	348c <fnet_netif_get_by_sockaddr+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:308
        {
#if FNET_CFG_IP4
            case AF_INET:
                result = fnet_netif_get_by_ip4_addr( ((struct sockaddr_in *)addr)->sin_addr.s_addr);
    347e:	687b      	ldr	r3, [r7, #4]
    3480:	685b      	ldr	r3, [r3, #4]
    3482:	4618      	mov	r0, r3
    3484:	f7ff ffcc 	bl	3420 <fnet_netif_get_by_ip4_addr>
    3488:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:309
                break;
    348a:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:320
#endif /* FNET_CFG_IP6 */
   
        }
    }

    return result;    
    348c:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:321
}
    348e:	4618      	mov	r0, r3
    3490:	3710      	adds	r7, #16
    3492:	46bd      	mov	sp, r7
    3494:	bd80      	pop	{r7, pc}
    3496:	bf00      	nop

00003498 <fnet_netif_init>:
fnet_netif_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:387
* NAME: fnet_netif_init
*
* DESCRIPTION: This function installs & inits a network interface.
*************************************************************************/
int fnet_netif_init( fnet_netif_t *netif, unsigned char *hw_addr, unsigned int hw_addr_size )
{
    3498:	b580      	push	{r7, lr}
    349a:	b086      	sub	sp, #24
    349c:	af00      	add	r7, sp, #0
    349e:	60f8      	str	r0, [r7, #12]
    34a0:	60b9      	str	r1, [r7, #8]
    34a2:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:388
    int result = FNET_OK;
    34a4:	2300      	movs	r3, #0
    34a6:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:390
    
    if(netif && netif->api)
    34a8:	68fb      	ldr	r3, [r7, #12]
    34aa:	2b00      	cmp	r3, #0
    34ac:	d065      	beq.n	357a <fnet_netif_init+0xe2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:390 (discriminator 1)
    34ae:	68fb      	ldr	r3, [r7, #12]
    34b0:	699b      	ldr	r3, [r3, #24]
    34b2:	2b00      	cmp	r3, #0
    34b4:	d061      	beq.n	357a <fnet_netif_init+0xe2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:394
    {
        fnet_os_mutex_lock();   
        
        fnet_isr_lock();
    34b6:	f7fe fecb 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:396
        
        netif->next = fnet_netif_list;
    34ba:	4b32      	ldr	r3, [pc, #200]	; (3584 <fnet_netif_init+0xec>)
    34bc:	681a      	ldr	r2, [r3, #0]
    34be:	68fb      	ldr	r3, [r7, #12]
    34c0:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:398

        if(netif->next != 0)
    34c2:	68fb      	ldr	r3, [r7, #12]
    34c4:	681b      	ldr	r3, [r3, #0]
    34c6:	2b00      	cmp	r3, #0
    34c8:	d003      	beq.n	34d2 <fnet_netif_init+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:399
            netif->next->prev = netif;
    34ca:	68fb      	ldr	r3, [r7, #12]
    34cc:	681b      	ldr	r3, [r3, #0]
    34ce:	68fa      	ldr	r2, [r7, #12]
    34d0:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:401

        netif->prev = 0;
    34d2:	68fb      	ldr	r3, [r7, #12]
    34d4:	2200      	movs	r2, #0
    34d6:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:402
        fnet_netif_list = netif;
    34d8:	4b2a      	ldr	r3, [pc, #168]	; (3584 <fnet_netif_init+0xec>)
    34da:	68fa      	ldr	r2, [r7, #12]
    34dc:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:404
        
        fnet_netif_assign_scope_id( netif ); /* Asign Scope ID.*/
    34de:	68f8      	ldr	r0, [r7, #12]
    34e0:	f000 faa2 	bl	3a28 <fnet_netif_assign_scope_id>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:406
        
        netif->features = FNET_NETIF_FEATURE_NONE;
    34e4:	68fb      	ldr	r3, [r7, #12]
    34e6:	2200      	movs	r2, #0
    34e8:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:410


        /* Interface HW initialization.*/
        if(netif->api->init && ((result = netif->api->init(netif)) == FNET_OK))
    34ea:	68fb      	ldr	r3, [r7, #12]
    34ec:	699b      	ldr	r3, [r3, #24]
    34ee:	689b      	ldr	r3, [r3, #8]
    34f0:	2b00      	cmp	r3, #0
    34f2:	d018      	beq.n	3526 <fnet_netif_init+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:410 (discriminator 1)
    34f4:	68fb      	ldr	r3, [r7, #12]
    34f6:	699b      	ldr	r3, [r3, #24]
    34f8:	689b      	ldr	r3, [r3, #8]
    34fa:	68f8      	ldr	r0, [r7, #12]
    34fc:	4798      	blx	r3
    34fe:	6178      	str	r0, [r7, #20]
    3500:	697b      	ldr	r3, [r7, #20]
    3502:	2b00      	cmp	r3, #0
    3504:	d10f      	bne.n	3526 <fnet_netif_init+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:427
                 /* Join HW interface. */
                fnet_netif_join_ip4_multicast ( netif, FNET_IP4_ADDR_INIT(224, 0, 0, 1) );
            #endif  /* FNET_CFG_IGMP */
            
            /* Set HW Address.*/    
            fnet_netif_set_hw_addr(netif, hw_addr, hw_addr_size);
    3506:	68f8      	ldr	r0, [r7, #12]
    3508:	68b9      	ldr	r1, [r7, #8]
    350a:	687a      	ldr	r2, [r7, #4]
    350c:	f000 f9e8 	bl	38e0 <fnet_netif_set_hw_addr>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:430
                
            /* Interface-Type specific initialisation. */ 
            switch(netif->api->type)
    3510:	68fb      	ldr	r3, [r7, #12]
    3512:	699b      	ldr	r3, [r3, #24]
    3514:	781b      	ldrb	r3, [r3, #0]
    3516:	2b01      	cmp	r3, #1
    3518:	d000      	beq.n	351c <fnet_netif_init+0x84>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:438
                case (FNET_NETIF_TYPE_ETHERNET):
                    result = fnet_eth_init(netif);
                    break;
            #endif /* FNET_CFG_ETH */
                default:
                    break;
    351a:	e004      	b.n	3526 <fnet_netif_init+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:434
            /* Interface-Type specific initialisation. */ 
            switch(netif->api->type)
            {
            #if (FNET_CFG_CPU_ETH0 ||FNET_CFG_CPU_ETH1)
                case (FNET_NETIF_TYPE_ETHERNET):
                    result = fnet_eth_init(netif);
    351c:	68f8      	ldr	r0, [r7, #12]
    351e:	f7fd fd3b 	bl	f98 <fnet_eth_init>
    3522:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:435
                    break;
    3524:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:443
                    break;
            
            }
        }

        fnet_printf("ETH - Initialization: %s, ID:%d\n", netif->name, netif->scope_id);
    3526:	68fb      	ldr	r3, [r7, #12]
    3528:	f103 0208 	add.w	r2, r3, #8
    352c:	68fb      	ldr	r3, [r7, #12]
    352e:	69db      	ldr	r3, [r3, #28]
    3530:	4815      	ldr	r0, [pc, #84]	; (3588 <fnet_netif_init+0xf0>)
    3532:	4611      	mov	r1, r2
    3534:	461a      	mov	r2, r3
    3536:	f008 fd75 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:444
        fnet_printf("	 - IP: %x, GW: %x\n", netif->ip4_addr.address, netif->ip4_addr.gateway);
    353a:	68fb      	ldr	r3, [r7, #12]
    353c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    353e:	68fb      	ldr	r3, [r7, #12]
    3540:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    3542:	4812      	ldr	r0, [pc, #72]	; (358c <fnet_netif_init+0xf4>)
    3544:	4611      	mov	r1, r2
    3546:	461a      	mov	r2, r3
    3548:	f008 fd6c 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:445
        fnet_printf("	 - MASK: %x, DHCP?: %d\n", netif->ip4_addr.netmask, netif->ip4_addr.is_automatic);
    354c:	68fb      	ldr	r3, [r7, #12]
    354e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    3550:	68fb      	ldr	r3, [r7, #12]
    3552:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    3554:	480e      	ldr	r0, [pc, #56]	; (3590 <fnet_netif_init+0xf8>)
    3556:	4611      	mov	r1, r2
    3558:	461a      	mov	r2, r3
    355a:	f008 fd63 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:446
        fnet_printf("	 - MTU: %d\n", netif->mtu);
    355e:	68fb      	ldr	r3, [r7, #12]
    3560:	691b      	ldr	r3, [r3, #16]
    3562:	480c      	ldr	r0, [pc, #48]	; (3594 <fnet_netif_init+0xfc>)
    3564:	4619      	mov	r1, r3
    3566:	f008 fd5d 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:447
        fnet_printf("	 - MTU: %x\n", netif->if_ptr);
    356a:	68fb      	ldr	r3, [r7, #12]
    356c:	695b      	ldr	r3, [r3, #20]
    356e:	480a      	ldr	r0, [pc, #40]	; (3598 <fnet_netif_init+0x100>)
    3570:	4619      	mov	r1, r3
    3572:	f008 fd57 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:451



        fnet_isr_unlock();
    3576:	f7fe fe79 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:456
        
        fnet_os_mutex_unlock();
    }
    
    return result;
    357a:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:457
}
    357c:	4618      	mov	r0, r3
    357e:	3718      	adds	r7, #24
    3580:	46bd      	mov	sp, r7
    3582:	bd80      	pop	{r7, pc}
    3584:	1000baec 	.word	0x1000baec
    3588:	00013f7c 	.word	0x00013f7c
    358c:	00013fa0 	.word	0x00013fa0
    3590:	00013fb4 	.word	0x00013fb4
    3594:	00013fd0 	.word	0x00013fd0
    3598:	00013fe0 	.word	0x00013fe0

0000359c <fnet_netif_release>:
fnet_netif_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:465
* NAME: fnet_netif_release
*
* DESCRIPTION: This function releases a network interface.
*************************************************************************/
void fnet_netif_release( fnet_netif_t *netif )
{
    359c:	b580      	push	{r7, lr}
    359e:	b082      	sub	sp, #8
    35a0:	af00      	add	r7, sp, #0
    35a2:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:466
    if(netif)
    35a4:	687b      	ldr	r3, [r7, #4]
    35a6:	2b00      	cmp	r3, #0
    35a8:	d020      	beq.n	35ec <fnet_netif_release+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:468
    {
        if(netif->api->release)
    35aa:	687b      	ldr	r3, [r7, #4]
    35ac:	699b      	ldr	r3, [r3, #24]
    35ae:	68db      	ldr	r3, [r3, #12]
    35b0:	2b00      	cmp	r3, #0
    35b2:	d004      	beq.n	35be <fnet_netif_release+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:469
            netif->api->release(netif);
    35b4:	687b      	ldr	r3, [r7, #4]
    35b6:	699b      	ldr	r3, [r3, #24]
    35b8:	68db      	ldr	r3, [r3, #12]
    35ba:	6878      	ldr	r0, [r7, #4]
    35bc:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:474
        
             
        fnet_os_mutex_lock();

        if(netif->prev == 0)
    35be:	687b      	ldr	r3, [r7, #4]
    35c0:	685b      	ldr	r3, [r3, #4]
    35c2:	2b00      	cmp	r3, #0
    35c4:	d104      	bne.n	35d0 <fnet_netif_release+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:475
            fnet_netif_list = netif->next;
    35c6:	687b      	ldr	r3, [r7, #4]
    35c8:	681a      	ldr	r2, [r3, #0]
    35ca:	4b0a      	ldr	r3, [pc, #40]	; (35f4 <fnet_netif_release+0x58>)
    35cc:	601a      	str	r2, [r3, #0]
    35ce:	e004      	b.n	35da <fnet_netif_release+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:477
        else
            netif->prev->next = netif->next;
    35d0:	687b      	ldr	r3, [r7, #4]
    35d2:	685b      	ldr	r3, [r3, #4]
    35d4:	687a      	ldr	r2, [r7, #4]
    35d6:	6812      	ldr	r2, [r2, #0]
    35d8:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:479

        if(netif->next != 0)
    35da:	687b      	ldr	r3, [r7, #4]
    35dc:	681b      	ldr	r3, [r3, #0]
    35de:	2b00      	cmp	r3, #0
    35e0:	d004      	beq.n	35ec <fnet_netif_release+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:480
            netif->next->prev = netif->prev;
    35e2:	687b      	ldr	r3, [r7, #4]
    35e4:	681b      	ldr	r3, [r3, #0]
    35e6:	687a      	ldr	r2, [r7, #4]
    35e8:	6852      	ldr	r2, [r2, #4]
    35ea:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:484

        fnet_os_mutex_unlock();
    }
}
    35ec:	3708      	adds	r7, #8
    35ee:	46bd      	mov	sp, r7
    35f0:	bd80      	pop	{r7, pc}
    35f2:	bf00      	nop
    35f4:	1000baec 	.word	0x1000baec

000035f8 <fnet_netif_set_default>:
fnet_netif_set_default():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:492
* NAME: fnet_netif_set_default
*
* DESCRIPTION: This function sets the default network interface.
*************************************************************************/
void fnet_netif_set_default( fnet_netif_desc_t netif_desc )
{
    35f8:	b480      	push	{r7}
    35fa:	b083      	sub	sp, #12
    35fc:	af00      	add	r7, sp, #0
    35fe:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:493
    if(netif_desc)
    3600:	687b      	ldr	r3, [r7, #4]
    3602:	2b00      	cmp	r3, #0
    3604:	d002      	beq.n	360c <fnet_netif_set_default+0x14>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:496
    {
        fnet_os_mutex_lock();
        fnet_netif_default = netif_desc;
    3606:	4b04      	ldr	r3, [pc, #16]	; (3618 <fnet_netif_set_default+0x20>)
    3608:	687a      	ldr	r2, [r7, #4]
    360a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:499
        fnet_os_mutex_unlock();
    }
}
    360c:	370c      	adds	r7, #12
    360e:	46bd      	mov	sp, r7
    3610:	f85d 7b04 	ldr.w	r7, [sp], #4
    3614:	4770      	bx	lr
    3616:	bf00      	nop
    3618:	1000075c 	.word	0x1000075c

0000361c <fnet_netif_set_ip4_addr>:
fnet_netif_set_ip4_addr():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:508
*
* DESCRIPTION: This function sets the IP address.
*************************************************************************/
#if FNET_CFG_IP4
void fnet_netif_set_ip4_addr( fnet_netif_desc_t netif_desc, fnet_ip4_addr_t ipaddr )
{
    361c:	b580      	push	{r7, lr}
    361e:	b084      	sub	sp, #16
    3620:	af00      	add	r7, sp, #0
    3622:	6078      	str	r0, [r7, #4]
    3624:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:509
    fnet_netif_t *netif = (fnet_netif_t *)netif_desc;
    3626:	687b      	ldr	r3, [r7, #4]
    3628:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:513

    fnet_os_mutex_lock();

    if(netif_desc)
    362a:	687b      	ldr	r3, [r7, #4]
    362c:	2b00      	cmp	r3, #0
    362e:	d063      	beq.n	36f8 <fnet_netif_set_ip4_addr+0xdc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:515
    {
        netif->ip4_addr.address = ipaddr; /* IP address */
    3630:	68fb      	ldr	r3, [r7, #12]
    3632:	683a      	ldr	r2, [r7, #0]
    3634:	625a      	str	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:516
        netif->ip4_addr.is_automatic = 0; /* Adress is set manually. */
    3636:	68fb      	ldr	r3, [r7, #12]
    3638:	2200      	movs	r2, #0
    363a:	645a      	str	r2, [r3, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:518

        if(FNET_IP4_CLASS_A(netif->ip4_addr.address))
    363c:	68fb      	ldr	r3, [r7, #12]
    363e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3640:	f003 0380 	and.w	r3, r3, #128	; 0x80
    3644:	2b00      	cmp	r3, #0
    3646:	d10a      	bne.n	365e <fnet_netif_set_ip4_addr+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:520
        {
            if(netif->ip4_addr.subnetmask == 0)
    3648:	68fb      	ldr	r3, [r7, #12]
    364a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    364c:	2b00      	cmp	r3, #0
    364e:	d102      	bne.n	3656 <fnet_netif_set_ip4_addr+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:521
                netif->ip4_addr.subnetmask = FNET_IP4_CLASS_A_NET;
    3650:	68fb      	ldr	r3, [r7, #12]
    3652:	22ff      	movs	r2, #255	; 0xff
    3654:	635a      	str	r2, [r3, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:523

            netif->ip4_addr.netmask = FNET_IP4_CLASS_A_NET;
    3656:	68fb      	ldr	r3, [r7, #12]
    3658:	22ff      	movs	r2, #255	; 0xff
    365a:	62da      	str	r2, [r3, #44]	; 0x2c
    365c:	e024      	b.n	36a8 <fnet_netif_set_ip4_addr+0x8c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:527
        }
        else
        {
            if(FNET_IP4_CLASS_B(netif->ip4_addr.address))
    365e:	68fb      	ldr	r3, [r7, #12]
    3660:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3662:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
    3666:	2b80      	cmp	r3, #128	; 0x80
    3668:	d10c      	bne.n	3684 <fnet_netif_set_ip4_addr+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:529
            {
                if(netif->ip4_addr.subnetmask == 0)
    366a:	68fb      	ldr	r3, [r7, #12]
    366c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    366e:	2b00      	cmp	r3, #0
    3670:	d103      	bne.n	367a <fnet_netif_set_ip4_addr+0x5e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:530
                    netif->ip4_addr.subnetmask = FNET_IP4_CLASS_B_NET;
    3672:	68fb      	ldr	r3, [r7, #12]
    3674:	f64f 72ff 	movw	r2, #65535	; 0xffff
    3678:	635a      	str	r2, [r3, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:532

                netif->ip4_addr.netmask = FNET_IP4_CLASS_B_NET;
    367a:	68fb      	ldr	r3, [r7, #12]
    367c:	f64f 72ff 	movw	r2, #65535	; 0xffff
    3680:	62da      	str	r2, [r3, #44]	; 0x2c
    3682:	e011      	b.n	36a8 <fnet_netif_set_ip4_addr+0x8c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:536
            }
            else
            {
                if(FNET_IP4_CLASS_C(netif->ip4_addr.address))
    3684:	68fb      	ldr	r3, [r7, #12]
    3686:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3688:	f003 03e0 	and.w	r3, r3, #224	; 0xe0
    368c:	2bc0      	cmp	r3, #192	; 0xc0
    368e:	d10b      	bne.n	36a8 <fnet_netif_set_ip4_addr+0x8c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:538
                {
                    if(netif->ip4_addr.subnetmask == 0)
    3690:	68fb      	ldr	r3, [r7, #12]
    3692:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    3694:	2b00      	cmp	r3, #0
    3696:	d103      	bne.n	36a0 <fnet_netif_set_ip4_addr+0x84>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:539
                        netif->ip4_addr.subnetmask = FNET_IP4_CLASS_C_NET;
    3698:	68fb      	ldr	r3, [r7, #12]
    369a:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
    369e:	635a      	str	r2, [r3, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:541

                    netif->ip4_addr.netmask = FNET_IP4_CLASS_C_NET;
    36a0:	68fb      	ldr	r3, [r7, #12]
    36a2:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
    36a6:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:547
                }
                /* else: Is not supported */
            }
        }

        netif->ip4_addr.net = netif->ip4_addr.address & netif->ip4_addr.netmask;             /* Network address.*/
    36a8:	68fb      	ldr	r3, [r7, #12]
    36aa:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    36ac:	68fb      	ldr	r3, [r7, #12]
    36ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    36b0:	401a      	ands	r2, r3
    36b2:	68fb      	ldr	r3, [r7, #12]
    36b4:	629a      	str	r2, [r3, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:548
        netif->ip4_addr.subnet = netif->ip4_addr.address & netif->ip4_addr.subnetmask;       /* Network and subnet address.*/
    36b6:	68fb      	ldr	r3, [r7, #12]
    36b8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    36ba:	68fb      	ldr	r3, [r7, #12]
    36bc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    36be:	401a      	ands	r2, r3
    36c0:	68fb      	ldr	r3, [r7, #12]
    36c2:	631a      	str	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:550

        netif->ip4_addr.netbroadcast = netif->ip4_addr.address | (~netif->ip4_addr.netmask); /* Network broadcast address.*/
    36c4:	68fb      	ldr	r3, [r7, #12]
    36c6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    36c8:	68fb      	ldr	r3, [r7, #12]
    36ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    36cc:	43db      	mvns	r3, r3
    36ce:	431a      	orrs	r2, r3
    36d0:	68fb      	ldr	r3, [r7, #12]
    36d2:	639a      	str	r2, [r3, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:551
        netif->ip4_addr.subnetbroadcast = netif->ip4_addr.address
    36d4:	68fb      	ldr	r3, [r7, #12]
    36d6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:552
                                          | (~netif->ip4_addr.subnetmask);                   /* Subnet broadcast address.*/
    36d8:	68fb      	ldr	r3, [r7, #12]
    36da:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    36dc:	43db      	mvns	r3, r3
    36de:	431a      	orrs	r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:551

        netif->ip4_addr.net = netif->ip4_addr.address & netif->ip4_addr.netmask;             /* Network address.*/
        netif->ip4_addr.subnet = netif->ip4_addr.address & netif->ip4_addr.subnetmask;       /* Network and subnet address.*/

        netif->ip4_addr.netbroadcast = netif->ip4_addr.address | (~netif->ip4_addr.netmask); /* Network broadcast address.*/
        netif->ip4_addr.subnetbroadcast = netif->ip4_addr.address
    36e0:	68fb      	ldr	r3, [r7, #12]
    36e2:	63da      	str	r2, [r3, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:555
                                          | (~netif->ip4_addr.subnetmask);                   /* Subnet broadcast address.*/


        if(netif->api->set_addr_notify)
    36e4:	68fb      	ldr	r3, [r7, #12]
    36e6:	699b      	ldr	r3, [r3, #24]
    36e8:	695b      	ldr	r3, [r3, #20]
    36ea:	2b00      	cmp	r3, #0
    36ec:	d004      	beq.n	36f8 <fnet_netif_set_ip4_addr+0xdc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:556
            netif->api->set_addr_notify(netif);
    36ee:	68fb      	ldr	r3, [r7, #12]
    36f0:	699b      	ldr	r3, [r3, #24]
    36f2:	695b      	ldr	r3, [r3, #20]
    36f4:	68f8      	ldr	r0, [r7, #12]
    36f6:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:560
    }

    fnet_os_mutex_unlock();
}
    36f8:	3710      	adds	r7, #16
    36fa:	46bd      	mov	sp, r7
    36fc:	bd80      	pop	{r7, pc}
    36fe:	bf00      	nop

00003700 <fnet_netif_set_ip4_subnet_mask>:
fnet_netif_set_ip4_subnet_mask():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:570
*
* DESCRIPTION: This function sets the subnet mask.
*************************************************************************/
#if FNET_CFG_IP4
void fnet_netif_set_ip4_subnet_mask( fnet_netif_desc_t netif_desc, fnet_ip4_addr_t subnet_mask )
{
    3700:	b480      	push	{r7}
    3702:	b085      	sub	sp, #20
    3704:	af00      	add	r7, sp, #0
    3706:	6078      	str	r0, [r7, #4]
    3708:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:571
    fnet_netif_t *netif = (fnet_netif_t *)netif_desc;
    370a:	687b      	ldr	r3, [r7, #4]
    370c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:573

    if(netif)
    370e:	68fb      	ldr	r3, [r7, #12]
    3710:	2b00      	cmp	r3, #0
    3712:	d014      	beq.n	373e <fnet_netif_set_ip4_subnet_mask+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:576
    {
        fnet_os_mutex_lock();
        netif->ip4_addr.subnetmask = subnet_mask;
    3714:	68fb      	ldr	r3, [r7, #12]
    3716:	683a      	ldr	r2, [r7, #0]
    3718:	635a      	str	r2, [r3, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:577
        netif->ip4_addr.is_automatic = 0;
    371a:	68fb      	ldr	r3, [r7, #12]
    371c:	2200      	movs	r2, #0
    371e:	645a      	str	r2, [r3, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:579

        netif->ip4_addr.subnet = netif->ip4_addr.address & netif->ip4_addr.subnetmask; // network and subnet address
    3720:	68fb      	ldr	r3, [r7, #12]
    3722:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    3724:	68fb      	ldr	r3, [r7, #12]
    3726:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    3728:	401a      	ands	r2, r3
    372a:	68fb      	ldr	r3, [r7, #12]
    372c:	631a      	str	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:580
        netif->ip4_addr.subnetbroadcast = netif->ip4_addr.address
    372e:	68fb      	ldr	r3, [r7, #12]
    3730:	6a5a      	ldr	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:581
                                          | (~netif->ip4_addr.subnetmask);     // subnet broadcast address
    3732:	68fb      	ldr	r3, [r7, #12]
    3734:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    3736:	43db      	mvns	r3, r3
    3738:	431a      	orrs	r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:580
        fnet_os_mutex_lock();
        netif->ip4_addr.subnetmask = subnet_mask;
        netif->ip4_addr.is_automatic = 0;

        netif->ip4_addr.subnet = netif->ip4_addr.address & netif->ip4_addr.subnetmask; // network and subnet address
        netif->ip4_addr.subnetbroadcast = netif->ip4_addr.address
    373a:	68fb      	ldr	r3, [r7, #12]
    373c:	63da      	str	r2, [r3, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:584
                                          | (~netif->ip4_addr.subnetmask);     // subnet broadcast address
        fnet_os_mutex_unlock();
    }
}
    373e:	3714      	adds	r7, #20
    3740:	46bd      	mov	sp, r7
    3742:	f85d 7b04 	ldr.w	r7, [sp], #4
    3746:	4770      	bx	lr

00003748 <fnet_netif_set_ip4_gateway>:
fnet_netif_set_ip4_gateway():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:594
*
* DESCRIPTION: This function sets the gateway IP address.
*************************************************************************/
#if FNET_CFG_IP4
void fnet_netif_set_ip4_gateway( fnet_netif_desc_t netif_desc, fnet_ip4_addr_t gw )
{
    3748:	b480      	push	{r7}
    374a:	b085      	sub	sp, #20
    374c:	af00      	add	r7, sp, #0
    374e:	6078      	str	r0, [r7, #4]
    3750:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:595
    fnet_netif_t *netif = (fnet_netif_t *)netif_desc;
    3752:	687b      	ldr	r3, [r7, #4]
    3754:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:597

    if(netif)
    3756:	68fb      	ldr	r3, [r7, #12]
    3758:	2b00      	cmp	r3, #0
    375a:	d005      	beq.n	3768 <fnet_netif_set_ip4_gateway+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:600
    {
        fnet_os_mutex_lock();
        netif->ip4_addr.gateway = gw;
    375c:	68fb      	ldr	r3, [r7, #12]
    375e:	683a      	ldr	r2, [r7, #0]
    3760:	641a      	str	r2, [r3, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:601
        netif->ip4_addr.is_automatic = 0;
    3762:	68fb      	ldr	r3, [r7, #12]
    3764:	2200      	movs	r2, #0
    3766:	645a      	str	r2, [r3, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:604
        fnet_os_mutex_unlock();
    }
}
    3768:	3714      	adds	r7, #20
    376a:	46bd      	mov	sp, r7
    376c:	f85d 7b04 	ldr.w	r7, [sp], #4
    3770:	4770      	bx	lr
    3772:	bf00      	nop

00003774 <fnet_netif_get_default>:
fnet_netif_get_default():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:633
* NAME: fnet_netif_get_default
*
* DESCRIPTION: This function gets the default network interface.
*************************************************************************/
fnet_netif_desc_t fnet_netif_get_default( void )
{
    3774:	b480      	push	{r7}
    3776:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:634
    return (fnet_netif_desc_t)fnet_netif_default;
    3778:	4b03      	ldr	r3, [pc, #12]	; (3788 <fnet_netif_get_default+0x14>)
    377a:	681b      	ldr	r3, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:635
}
    377c:	4618      	mov	r0, r3
    377e:	46bd      	mov	sp, r7
    3780:	f85d 7b04 	ldr.w	r7, [sp], #4
    3784:	4770      	bx	lr
    3786:	bf00      	nop
    3788:	1000075c 	.word	0x1000075c

0000378c <fnet_netif_get_ip4_addr>:
fnet_netif_get_ip4_addr():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:644
*
* DESCRIPTION: This function returns the IP address of the net interface.
*************************************************************************/
#if FNET_CFG_IP4
fnet_ip4_addr_t fnet_netif_get_ip4_addr( fnet_netif_desc_t netif_desc )
{
    378c:	b480      	push	{r7}
    378e:	b085      	sub	sp, #20
    3790:	af00      	add	r7, sp, #0
    3792:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:645
    fnet_netif_t *netif = (fnet_netif_t *)netif_desc;
    3794:	687b      	ldr	r3, [r7, #4]
    3796:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:647

    return netif ? (netif->ip4_addr.address) : 0;
    3798:	68fb      	ldr	r3, [r7, #12]
    379a:	2b00      	cmp	r3, #0
    379c:	d002      	beq.n	37a4 <fnet_netif_get_ip4_addr+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:647 (discriminator 1)
    379e:	68fb      	ldr	r3, [r7, #12]
    37a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    37a2:	e000      	b.n	37a6 <fnet_netif_get_ip4_addr+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:647 (discriminator 2)
    37a4:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:648 (discriminator 3)
}
    37a6:	4618      	mov	r0, r3
    37a8:	3714      	adds	r7, #20
    37aa:	46bd      	mov	sp, r7
    37ac:	f85d 7b04 	ldr.w	r7, [sp], #4
    37b0:	4770      	bx	lr
    37b2:	bf00      	nop

000037b4 <fnet_netif_get_ip4_subnet_mask>:
fnet_netif_get_ip4_subnet_mask():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:658
*
* DESCRIPTION: This function returns the netmask of the net interface.
*************************************************************************/
#if FNET_CFG_IP4
fnet_ip4_addr_t fnet_netif_get_ip4_subnet_mask( fnet_netif_desc_t netif_desc )
{
    37b4:	b480      	push	{r7}
    37b6:	b085      	sub	sp, #20
    37b8:	af00      	add	r7, sp, #0
    37ba:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:659
    fnet_netif_t *netif = (fnet_netif_t *)netif_desc;
    37bc:	687b      	ldr	r3, [r7, #4]
    37be:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:661

    return netif ? (netif->ip4_addr.subnetmask) : 0;
    37c0:	68fb      	ldr	r3, [r7, #12]
    37c2:	2b00      	cmp	r3, #0
    37c4:	d002      	beq.n	37cc <fnet_netif_get_ip4_subnet_mask+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:661 (discriminator 1)
    37c6:	68fb      	ldr	r3, [r7, #12]
    37c8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    37ca:	e000      	b.n	37ce <fnet_netif_get_ip4_subnet_mask+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:661 (discriminator 2)
    37cc:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:662 (discriminator 3)
}
    37ce:	4618      	mov	r0, r3
    37d0:	3714      	adds	r7, #20
    37d2:	46bd      	mov	sp, r7
    37d4:	f85d 7b04 	ldr.w	r7, [sp], #4
    37d8:	4770      	bx	lr
    37da:	bf00      	nop

000037dc <fnet_netif_get_ip4_gateway>:
fnet_netif_get_ip4_gateway():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:673
* DESCRIPTION: This function returns the gateway IP address of 
*              the net interface.
*************************************************************************/
#if FNET_CFG_IP4
fnet_ip4_addr_t fnet_netif_get_ip4_gateway( fnet_netif_desc_t netif_desc )
{
    37dc:	b480      	push	{r7}
    37de:	b085      	sub	sp, #20
    37e0:	af00      	add	r7, sp, #0
    37e2:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:674
    fnet_netif_t *netif = (fnet_netif_t *)netif_desc;
    37e4:	687b      	ldr	r3, [r7, #4]
    37e6:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:676

    return netif ? (netif->ip4_addr.gateway) : 0;
    37e8:	68fb      	ldr	r3, [r7, #12]
    37ea:	2b00      	cmp	r3, #0
    37ec:	d002      	beq.n	37f4 <fnet_netif_get_ip4_gateway+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:676 (discriminator 1)
    37ee:	68fb      	ldr	r3, [r7, #12]
    37f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    37f2:	e000      	b.n	37f6 <fnet_netif_get_ip4_gateway+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:676 (discriminator 2)
    37f4:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:677 (discriminator 3)
}
    37f6:	4618      	mov	r0, r3
    37f8:	3714      	adds	r7, #20
    37fa:	46bd      	mov	sp, r7
    37fc:	f85d 7b04 	ldr.w	r7, [sp], #4
    3800:	4770      	bx	lr
    3802:	bf00      	nop

00003804 <fnet_netif_get_name>:
fnet_netif_get_name():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:701
* NAME: fnet_netif_get_name
*
* DESCRIPTION: This function returns network interface name (e.g. "eth0", "loop").
*************************************************************************/
void fnet_netif_get_name( fnet_netif_desc_t netif_desc, char *name, unsigned char name_size )
{
    3804:	b580      	push	{r7, lr}
    3806:	b086      	sub	sp, #24
    3808:	af00      	add	r7, sp, #0
    380a:	60f8      	str	r0, [r7, #12]
    380c:	60b9      	str	r1, [r7, #8]
    380e:	4613      	mov	r3, r2
    3810:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:702
    fnet_netif_t *netif = (fnet_netif_t *)netif_desc;
    3812:	68fb      	ldr	r3, [r7, #12]
    3814:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:704

    if(netif)
    3816:	697b      	ldr	r3, [r7, #20]
    3818:	2b00      	cmp	r3, #0
    381a:	d008      	beq.n	382e <fnet_netif_get_name+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:705
        fnet_strncpy(name, netif->name, name_size);
    381c:	697b      	ldr	r3, [r7, #20]
    381e:	f103 0208 	add.w	r2, r3, #8
    3822:	79fb      	ldrb	r3, [r7, #7]
    3824:	68b8      	ldr	r0, [r7, #8]
    3826:	4611      	mov	r1, r2
    3828:	461a      	mov	r2, r3
    382a:	f002 faed 	bl	5e08 <fnet_strncpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:706
}
    382e:	3718      	adds	r7, #24
    3830:	46bd      	mov	sp, r7
    3832:	bd80      	pop	{r7, pc}

00003834 <fnet_netif_get_ip4_addr_automatic>:
fnet_netif_get_ip4_addr_automatic():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:717
*              statically/manually, and returns 1 if the IP address is 
*              obtained automatically (by DHCP).
*************************************************************************/
#if FNET_CFG_IP4
int fnet_netif_get_ip4_addr_automatic( fnet_netif_desc_t netif_desc )
{
    3834:	b480      	push	{r7}
    3836:	b085      	sub	sp, #20
    3838:	af00      	add	r7, sp, #0
    383a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:718
    fnet_netif_t *netif = (fnet_netif_t *)netif_desc;
    383c:	687b      	ldr	r3, [r7, #4]
    383e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:719
    return netif ? (netif->ip4_addr.is_automatic) : 0;
    3840:	68fb      	ldr	r3, [r7, #12]
    3842:	2b00      	cmp	r3, #0
    3844:	d002      	beq.n	384c <fnet_netif_get_ip4_addr_automatic+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:719 (discriminator 1)
    3846:	68fb      	ldr	r3, [r7, #12]
    3848:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    384a:	e000      	b.n	384e <fnet_netif_get_ip4_addr_automatic+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:719 (discriminator 2)
    384c:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:720 (discriminator 3)
}
    384e:	4618      	mov	r0, r3
    3850:	3714      	adds	r7, #20
    3852:	46bd      	mov	sp, r7
    3854:	f85d 7b04 	ldr.w	r7, [sp], #4
    3858:	4770      	bx	lr
    385a:	bf00      	nop

0000385c <fnet_netif_set_ip4_addr_automatic>:
fnet_netif_set_ip4_addr_automatic():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:731
* DESCRIPTION: This function set flag that IP address was 
*              obtained automatically (by DHCP). Called only by DHCP client.
*************************************************************************/
#if FNET_CFG_IP4
void fnet_netif_set_ip4_addr_automatic( fnet_netif_desc_t netif_desc )
{
    385c:	b480      	push	{r7}
    385e:	b085      	sub	sp, #20
    3860:	af00      	add	r7, sp, #0
    3862:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:732
    fnet_netif_t *netif = (fnet_netif_t *)netif_desc;
    3864:	687b      	ldr	r3, [r7, #4]
    3866:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:734

    if(netif)
    3868:	68fb      	ldr	r3, [r7, #12]
    386a:	2b00      	cmp	r3, #0
    386c:	d002      	beq.n	3874 <fnet_netif_set_ip4_addr_automatic+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:735
        netif->ip4_addr.is_automatic = 1;
    386e:	68fb      	ldr	r3, [r7, #12]
    3870:	2201      	movs	r2, #1
    3872:	645a      	str	r2, [r3, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:736
}
    3874:	3714      	adds	r7, #20
    3876:	46bd      	mov	sp, r7
    3878:	f85d 7b04 	ldr.w	r7, [sp], #4
    387c:	4770      	bx	lr
    387e:	bf00      	nop

00003880 <fnet_netif_get_hw_addr>:
fnet_netif_get_hw_addr():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:746
*
* DESCRIPTION: This function reads HW interface address. 
*              (MAC address in case of Ethernet interface)
*************************************************************************/
int fnet_netif_get_hw_addr( fnet_netif_desc_t netif_desc, unsigned char *hw_addr, unsigned int hw_addr_size )
{
    3880:	b580      	push	{r7, lr}
    3882:	b086      	sub	sp, #24
    3884:	af00      	add	r7, sp, #0
    3886:	60f8      	str	r0, [r7, #12]
    3888:	60b9      	str	r1, [r7, #8]
    388a:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:748
    int result;
    fnet_netif_t *netif = (fnet_netif_t *)netif_desc;
    388c:	68fb      	ldr	r3, [r7, #12]
    388e:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:752

    fnet_os_mutex_lock();

    if(netif && hw_addr && hw_addr_size && netif->api
    3890:	693b      	ldr	r3, [r7, #16]
    3892:	2b00      	cmp	r3, #0
    3894:	d01c      	beq.n	38d0 <fnet_netif_get_hw_addr+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:752 (discriminator 1)
    3896:	68bb      	ldr	r3, [r7, #8]
    3898:	2b00      	cmp	r3, #0
    389a:	d019      	beq.n	38d0 <fnet_netif_get_hw_addr+0x50>
    389c:	687b      	ldr	r3, [r7, #4]
    389e:	2b00      	cmp	r3, #0
    38a0:	d016      	beq.n	38d0 <fnet_netif_get_hw_addr+0x50>
    38a2:	693b      	ldr	r3, [r7, #16]
    38a4:	699b      	ldr	r3, [r3, #24]
    38a6:	2b00      	cmp	r3, #0
    38a8:	d012      	beq.n	38d0 <fnet_netif_get_hw_addr+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:753
        && (hw_addr_size >= netif->api->hw_addr_size)
    38aa:	693b      	ldr	r3, [r7, #16]
    38ac:	699b      	ldr	r3, [r3, #24]
    38ae:	685a      	ldr	r2, [r3, #4]
    38b0:	687b      	ldr	r3, [r7, #4]
    38b2:	429a      	cmp	r2, r3
    38b4:	d80c      	bhi.n	38d0 <fnet_netif_get_hw_addr+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:754
        && netif->api->get_hw_addr)
    38b6:	693b      	ldr	r3, [r7, #16]
    38b8:	699b      	ldr	r3, [r3, #24]
    38ba:	69db      	ldr	r3, [r3, #28]
    38bc:	2b00      	cmp	r3, #0
    38be:	d007      	beq.n	38d0 <fnet_netif_get_hw_addr+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:756
    {        
        result = netif->api->get_hw_addr(netif, hw_addr);
    38c0:	693b      	ldr	r3, [r7, #16]
    38c2:	699b      	ldr	r3, [r3, #24]
    38c4:	69db      	ldr	r3, [r3, #28]
    38c6:	6938      	ldr	r0, [r7, #16]
    38c8:	68b9      	ldr	r1, [r7, #8]
    38ca:	4798      	blx	r3
    38cc:	6178      	str	r0, [r7, #20]
    38ce:	e002      	b.n	38d6 <fnet_netif_get_hw_addr+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:759
    }
    else
        result = FNET_ERR;
    38d0:	f04f 33ff 	mov.w	r3, #4294967295
    38d4:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:763

    fnet_os_mutex_unlock();

    return result;
    38d6:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:764
}
    38d8:	4618      	mov	r0, r3
    38da:	3718      	adds	r7, #24
    38dc:	46bd      	mov	sp, r7
    38de:	bd80      	pop	{r7, pc}

000038e0 <fnet_netif_set_hw_addr>:
fnet_netif_set_hw_addr():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:773
*
* DESCRIPTION: This function sets HW interface address. 
*              (MAC address in case of Ethernet interface)
*************************************************************************/
int fnet_netif_set_hw_addr( fnet_netif_desc_t netif_desc, unsigned char *hw_addr, unsigned int hw_addr_size )
{
    38e0:	b580      	push	{r7, lr}
    38e2:	b086      	sub	sp, #24
    38e4:	af00      	add	r7, sp, #0
    38e6:	60f8      	str	r0, [r7, #12]
    38e8:	60b9      	str	r1, [r7, #8]
    38ea:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:775
    int           result;
    fnet_netif_t  *netif = (fnet_netif_t *)netif_desc;
    38ec:	68fb      	ldr	r3, [r7, #12]
    38ee:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:779

    fnet_os_mutex_lock();

    if(netif && hw_addr 
    38f0:	693b      	ldr	r3, [r7, #16]
    38f2:	2b00      	cmp	r3, #0
    38f4:	d019      	beq.n	392a <fnet_netif_set_hw_addr+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:779 (discriminator 1)
    38f6:	68bb      	ldr	r3, [r7, #8]
    38f8:	2b00      	cmp	r3, #0
    38fa:	d016      	beq.n	392a <fnet_netif_set_hw_addr+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:780
        && netif->api
    38fc:	693b      	ldr	r3, [r7, #16]
    38fe:	699b      	ldr	r3, [r3, #24]
    3900:	2b00      	cmp	r3, #0
    3902:	d012      	beq.n	392a <fnet_netif_set_hw_addr+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:781
        && (hw_addr_size == netif->api->hw_addr_size)
    3904:	693b      	ldr	r3, [r7, #16]
    3906:	699b      	ldr	r3, [r3, #24]
    3908:	685a      	ldr	r2, [r3, #4]
    390a:	687b      	ldr	r3, [r7, #4]
    390c:	429a      	cmp	r2, r3
    390e:	d10c      	bne.n	392a <fnet_netif_set_hw_addr+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:782
        && netif->api->set_hw_addr)
    3910:	693b      	ldr	r3, [r7, #16]
    3912:	699b      	ldr	r3, [r3, #24]
    3914:	6a1b      	ldr	r3, [r3, #32]
    3916:	2b00      	cmp	r3, #0
    3918:	d007      	beq.n	392a <fnet_netif_set_hw_addr+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:785
    {
                
        result = netif->api->set_hw_addr(netif, hw_addr);
    391a:	693b      	ldr	r3, [r7, #16]
    391c:	699b      	ldr	r3, [r3, #24]
    391e:	6a1b      	ldr	r3, [r3, #32]
    3920:	6938      	ldr	r0, [r7, #16]
    3922:	68b9      	ldr	r1, [r7, #8]
    3924:	4798      	blx	r3
    3926:	6178      	str	r0, [r7, #20]
    3928:	e002      	b.n	3930 <fnet_netif_set_hw_addr+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:788
    }
    else
        result = FNET_ERR;
    392a:	f04f 33ff 	mov.w	r3, #4294967295
    392e:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:792

    fnet_os_mutex_unlock();

    return result;
    3930:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:793
}
    3932:	4618      	mov	r0, r3
    3934:	3718      	adds	r7, #24
    3936:	46bd      	mov	sp, r7
    3938:	bd80      	pop	{r7, pc}
    393a:	bf00      	nop

0000393c <fnet_netif_type>:
fnet_netif_type():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:846
* NAME: fnet_netif_type
*
* DESCRIPTION: This function returns type of the network interface.
*************************************************************************/
fnet_netif_type_t fnet_netif_type( fnet_netif_desc_t netif_desc )
{
    393c:	b480      	push	{r7}
    393e:	b085      	sub	sp, #20
    3940:	af00      	add	r7, sp, #0
    3942:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:848
    fnet_netif_type_t result;
    fnet_netif_t *netif = (fnet_netif_t *)netif_desc;
    3944:	687b      	ldr	r3, [r7, #4]
    3946:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:850

    if(netif)
    3948:	68bb      	ldr	r3, [r7, #8]
    394a:	2b00      	cmp	r3, #0
    394c:	d004      	beq.n	3958 <fnet_netif_type+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:851
        result = netif->api->type;
    394e:	68bb      	ldr	r3, [r7, #8]
    3950:	699b      	ldr	r3, [r3, #24]
    3952:	781b      	ldrb	r3, [r3, #0]
    3954:	73fb      	strb	r3, [r7, #15]
    3956:	e001      	b.n	395c <fnet_netif_type+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:853
    else
        result = FNET_NETIF_TYPE_OTHER;
    3958:	2300      	movs	r3, #0
    395a:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:855

    return result;
    395c:	7bfb      	ldrb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:856
}
    395e:	4618      	mov	r0, r3
    3960:	3714      	adds	r7, #20
    3962:	46bd      	mov	sp, r7
    3964:	f85d 7b04 	ldr.w	r7, [sp], #4
    3968:	4770      	bx	lr
    396a:	bf00      	nop

0000396c <fnet_netif_connected>:
fnet_netif_connected():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:864
* NAME: fnet_netif_connected
*
* DESCRIPTION: This function gets physical link status.
*************************************************************************/
int fnet_netif_connected( fnet_netif_desc_t netif_desc )
{
    396c:	b580      	push	{r7, lr}
    396e:	b084      	sub	sp, #16
    3970:	af00      	add	r7, sp, #0
    3972:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:866
    int result;
    fnet_netif_t *netif = (fnet_netif_t *)netif_desc;
    3974:	687b      	ldr	r3, [r7, #4]
    3976:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:868

    if(netif && netif->api->is_connected)
    3978:	68bb      	ldr	r3, [r7, #8]
    397a:	2b00      	cmp	r3, #0
    397c:	d00b      	beq.n	3996 <fnet_netif_connected+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:868 (discriminator 1)
    397e:	68bb      	ldr	r3, [r7, #8]
    3980:	699b      	ldr	r3, [r3, #24]
    3982:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3984:	2b00      	cmp	r3, #0
    3986:	d006      	beq.n	3996 <fnet_netif_connected+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:869
        result = netif->api->is_connected(netif);
    3988:	68bb      	ldr	r3, [r7, #8]
    398a:	699b      	ldr	r3, [r3, #24]
    398c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    398e:	68b8      	ldr	r0, [r7, #8]
    3990:	4798      	blx	r3
    3992:	60f8      	str	r0, [r7, #12]
    3994:	e001      	b.n	399a <fnet_netif_connected+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:871
    else
        result = 1; /* Is connected by default; */
    3996:	2301      	movs	r3, #1
    3998:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:873

    return result;
    399a:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:874
}
    399c:	4618      	mov	r0, r3
    399e:	3710      	adds	r7, #16
    39a0:	46bd      	mov	sp, r7
    39a2:	bd80      	pop	{r7, pc}

000039a4 <fnet_netif_get_statistics>:
fnet_netif_get_statistics():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:882
* NAME: fnet_get_statistics
*
* DESCRIPTION: This function returns network interface statistics.
*************************************************************************/
int fnet_netif_get_statistics( fnet_netif_desc_t netif_desc, struct fnet_netif_statistics *statistics )
{
    39a4:	b580      	push	{r7, lr}
    39a6:	b084      	sub	sp, #16
    39a8:	af00      	add	r7, sp, #0
    39aa:	6078      	str	r0, [r7, #4]
    39ac:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:884
    int result;
    fnet_netif_t *netif = (fnet_netif_t *)netif_desc;
    39ae:	687b      	ldr	r3, [r7, #4]
    39b0:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:886

    if(netif && statistics && netif->api->get_statistics)
    39b2:	68bb      	ldr	r3, [r7, #8]
    39b4:	2b00      	cmp	r3, #0
    39b6:	d00f      	beq.n	39d8 <fnet_netif_get_statistics+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:886 (discriminator 1)
    39b8:	683b      	ldr	r3, [r7, #0]
    39ba:	2b00      	cmp	r3, #0
    39bc:	d00c      	beq.n	39d8 <fnet_netif_get_statistics+0x34>
    39be:	68bb      	ldr	r3, [r7, #8]
    39c0:	699b      	ldr	r3, [r3, #24]
    39c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    39c4:	2b00      	cmp	r3, #0
    39c6:	d007      	beq.n	39d8 <fnet_netif_get_statistics+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:887
        result = netif->api->get_statistics(netif, statistics);
    39c8:	68bb      	ldr	r3, [r7, #8]
    39ca:	699b      	ldr	r3, [r3, #24]
    39cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    39ce:	68b8      	ldr	r0, [r7, #8]
    39d0:	6839      	ldr	r1, [r7, #0]
    39d2:	4798      	blx	r3
    39d4:	60f8      	str	r0, [r7, #12]
    39d6:	e002      	b.n	39de <fnet_netif_get_statistics+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:889
    else
        result = FNET_ERR;
    39d8:	f04f 33ff 	mov.w	r3, #4294967295
    39dc:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:891

    return result;
    39de:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:892
}
    39e0:	4618      	mov	r0, r3
    39e2:	3710      	adds	r7, #16
    39e4:	46bd      	mov	sp, r7
    39e6:	bd80      	pop	{r7, pc}

000039e8 <fnet_netif_dupip_handler_init>:
fnet_netif_dupip_handler_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:900
* NAME: fnet_netif_dupip_handler_init
*
* DESCRIPTION:
************************************************************************/
void fnet_netif_dupip_handler_init(fnet_netif_dupip_handler_t handler)
{
    39e8:	b480      	push	{r7}
    39ea:	b083      	sub	sp, #12
    39ec:	af00      	add	r7, sp, #0
    39ee:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:901
    fnet_netif_dupip_handler = handler;
    39f0:	4b03      	ldr	r3, [pc, #12]	; (3a00 <fnet_netif_dupip_handler_init+0x18>)
    39f2:	687a      	ldr	r2, [r7, #4]
    39f4:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:902
}
    39f6:	370c      	adds	r7, #12
    39f8:	46bd      	mov	sp, r7
    39fa:	f85d 7b04 	ldr.w	r7, [sp], #4
    39fe:	4770      	bx	lr
    3a00:	10000760 	.word	0x10000760

00003a04 <fnet_netif_dupip_handler_signal>:
fnet_netif_dupip_handler_signal():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:910
* NAME: fnet_netif_dupip_handler_signal
*
* DESCRIPTION:
************************************************************************/
void fnet_netif_dupip_handler_signal(fnet_netif_desc_t netif )
{
    3a04:	b580      	push	{r7, lr}
    3a06:	b082      	sub	sp, #8
    3a08:	af00      	add	r7, sp, #0
    3a0a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:911
    if(fnet_netif_dupip_handler)
    3a0c:	4b05      	ldr	r3, [pc, #20]	; (3a24 <fnet_netif_dupip_handler_signal+0x20>)
    3a0e:	681b      	ldr	r3, [r3, #0]
    3a10:	2b00      	cmp	r3, #0
    3a12:	d003      	beq.n	3a1c <fnet_netif_dupip_handler_signal+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:912
        fnet_netif_dupip_handler(netif);
    3a14:	4b03      	ldr	r3, [pc, #12]	; (3a24 <fnet_netif_dupip_handler_signal+0x20>)
    3a16:	681b      	ldr	r3, [r3, #0]
    3a18:	6878      	ldr	r0, [r7, #4]
    3a1a:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:914

}
    3a1c:	3708      	adds	r7, #8
    3a1e:	46bd      	mov	sp, r7
    3a20:	bd80      	pop	{r7, pc}
    3a22:	bf00      	nop
    3a24:	10000760 	.word	0x10000760

00003a28 <fnet_netif_assign_scope_id>:
fnet_netif_assign_scope_id():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:926
* NAME: fnet_netif_assign_scope_id
*
* DESCRIPTION: This function assign unique Scope ID to the interface.
*************************************************************************/
static void fnet_netif_assign_scope_id( fnet_netif_t *netif )
{
    3a28:	b480      	push	{r7}
    3a2a:	b087      	sub	sp, #28
    3a2c:	af00      	add	r7, sp, #0
    3a2e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:929
    unsigned long   scope_id;
    fnet_netif_t    *current;
    int try_again =1;
    3a30:	2301      	movs	r3, #1
    3a32:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:931

    scope_id = 1;
    3a34:	2301      	movs	r3, #1
    3a36:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:935
   
    do
    {
        try_again = 0;
    3a38:	2300      	movs	r3, #0
    3a3a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:937
        
        for (current = fnet_netif_list; current; current = current->next)
    3a3c:	4b0f      	ldr	r3, [pc, #60]	; (3a7c <fnet_netif_assign_scope_id+0x54>)
    3a3e:	681b      	ldr	r3, [r3, #0]
    3a40:	613b      	str	r3, [r7, #16]
    3a42:	e00d      	b.n	3a60 <fnet_netif_assign_scope_id+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:939
        {
            if(scope_id == current->scope_id)
    3a44:	693b      	ldr	r3, [r7, #16]
    3a46:	69da      	ldr	r2, [r3, #28]
    3a48:	697b      	ldr	r3, [r7, #20]
    3a4a:	429a      	cmp	r2, r3
    3a4c:	d105      	bne.n	3a5a <fnet_netif_assign_scope_id+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:941
            {
                try_again = 1;
    3a4e:	2301      	movs	r3, #1
    3a50:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:942
                scope_id++;
    3a52:	697b      	ldr	r3, [r7, #20]
    3a54:	3301      	adds	r3, #1
    3a56:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:943
                break;     
    3a58:	e005      	b.n	3a66 <fnet_netif_assign_scope_id+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:937
   
    do
    {
        try_again = 0;
        
        for (current = fnet_netif_list; current; current = current->next)
    3a5a:	693b      	ldr	r3, [r7, #16]
    3a5c:	681b      	ldr	r3, [r3, #0]
    3a5e:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:937 (discriminator 1)
    3a60:	693b      	ldr	r3, [r7, #16]
    3a62:	2b00      	cmp	r3, #0
    3a64:	d1ee      	bne.n	3a44 <fnet_netif_assign_scope_id+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:947
                scope_id++;
                break;     
            }
        }
    }
    while(try_again == 1);
    3a66:	68fb      	ldr	r3, [r7, #12]
    3a68:	2b01      	cmp	r3, #1
    3a6a:	d0e5      	beq.n	3a38 <fnet_netif_assign_scope_id+0x10>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:949
    
    netif->scope_id = scope_id;
    3a6c:	687b      	ldr	r3, [r7, #4]
    3a6e:	697a      	ldr	r2, [r7, #20]
    3a70:	61da      	str	r2, [r3, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:950
}
    3a72:	371c      	adds	r7, #28
    3a74:	46bd      	mov	sp, r7
    3a76:	f85d 7b04 	ldr.w	r7, [sp], #4
    3a7a:	4770      	bx	lr
    3a7c:	1000baec 	.word	0x1000baec

00003a80 <fnet_netif_get_scope_id>:
fnet_netif_get_scope_id():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:958
* NAME: fnet_netif_get_scope_id
*
* DESCRIPTION: Gets Scope ID assigned to the interface.
*************************************************************************/
unsigned long fnet_netif_get_scope_id(fnet_netif_desc_t netif_desc)
{
    3a80:	b480      	push	{r7}
    3a82:	b085      	sub	sp, #20
    3a84:	af00      	add	r7, sp, #0
    3a86:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:959
    unsigned long   result = 0;
    3a88:	2300      	movs	r3, #0
    3a8a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:960
    fnet_netif_t    *netif = (fnet_netif_t *)netif_desc;
    3a8c:	687b      	ldr	r3, [r7, #4]
    3a8e:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:962
    
    if(netif)
    3a90:	68bb      	ldr	r3, [r7, #8]
    3a92:	2b00      	cmp	r3, #0
    3a94:	d002      	beq.n	3a9c <fnet_netif_get_scope_id+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:964
    {
        result = netif->scope_id;
    3a96:	68bb      	ldr	r3, [r7, #8]
    3a98:	69db      	ldr	r3, [r3, #28]
    3a9a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:967
  	}
    
    return result;
    3a9c:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:968
}
    3a9e:	4618      	mov	r0, r3
    3aa0:	3714      	adds	r7, #20
    3aa2:	46bd      	mov	sp, r7
    3aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
    3aa8:	4770      	bx	lr
    3aaa:	bf00      	nop

00003aac <fnet_netif_get_by_scope_id>:
fnet_netif_get_by_scope_id():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:979
*              its Scope ID. 
*              It returns FNET_NULL if the interface with passed Scope ID 
*              is not available.
*************************************************************************/
fnet_netif_desc_t fnet_netif_get_by_scope_id( unsigned long scope_id )
{
    3aac:	b480      	push	{r7}
    3aae:	b085      	sub	sp, #20
    3ab0:	af00      	add	r7, sp, #0
    3ab2:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:980
    fnet_netif_desc_t   result = FNET_NULL;
    3ab4:	2300      	movs	r3, #0
    3ab6:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:983
    fnet_netif_t        *current;
   
     for (current = fnet_netif_list; current; current = current->next)
    3ab8:	4b0c      	ldr	r3, [pc, #48]	; (3aec <fnet_netif_get_by_scope_id+0x40>)
    3aba:	681b      	ldr	r3, [r3, #0]
    3abc:	60bb      	str	r3, [r7, #8]
    3abe:	e00a      	b.n	3ad6 <fnet_netif_get_by_scope_id+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:985
    {
        if(current->scope_id == scope_id)
    3ac0:	68bb      	ldr	r3, [r7, #8]
    3ac2:	69da      	ldr	r2, [r3, #28]
    3ac4:	687b      	ldr	r3, [r7, #4]
    3ac6:	429a      	cmp	r2, r3
    3ac8:	d102      	bne.n	3ad0 <fnet_netif_get_by_scope_id+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:987
        {
            result = (fnet_netif_desc_t)current;
    3aca:	68bb      	ldr	r3, [r7, #8]
    3acc:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:988
            break;     
    3ace:	e005      	b.n	3adc <fnet_netif_get_by_scope_id+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:983
fnet_netif_desc_t fnet_netif_get_by_scope_id( unsigned long scope_id )
{
    fnet_netif_desc_t   result = FNET_NULL;
    fnet_netif_t        *current;
   
     for (current = fnet_netif_list; current; current = current->next)
    3ad0:	68bb      	ldr	r3, [r7, #8]
    3ad2:	681b      	ldr	r3, [r3, #0]
    3ad4:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:983 (discriminator 1)
    3ad6:	68bb      	ldr	r3, [r7, #8]
    3ad8:	2b00      	cmp	r3, #0
    3ada:	d1f1      	bne.n	3ac0 <fnet_netif_get_by_scope_id+0x14>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:992
            result = (fnet_netif_desc_t)current;
            break;     
        }
    }
    
    return result;
    3adc:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_netif.c:993
}
    3ade:	4618      	mov	r0, r3
    3ae0:	3714      	adds	r7, #20
    3ae2:	46bd      	mov	sp, r7
    3ae4:	f85d 7b04 	ldr.w	r7, [sp], #4
    3ae8:	4770      	bx	lr
    3aea:	bf00      	nop
    3aec:	1000baec 	.word	0x1000baec

00003af0 <fnet_prot_init>:
fnet_prot_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:108
* NAME: fnet_prot_init
*
* DESCRIPTION: Transport and IP layers initialization. 
*************************************************************************/
int fnet_prot_init( void )
{
    3af0:	b580      	push	{r7, lr}
    3af2:	b082      	sub	sp, #8
    3af4:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:110
    int i;
    int result = FNET_OK;
    3af6:	2300      	movs	r3, #0
    3af8:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:112
 
    fnet_isr_lock();
    3afa:	f7fe fba9 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:114
    
    for(i=0; i < FNET_PROT_TRANSPORT_IF_LIST_SIZE; i++)
    3afe:	2300      	movs	r3, #0
    3b00:	607b      	str	r3, [r7, #4]
    3b02:	e01d      	b.n	3b40 <fnet_prot_init+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:116
    {
        fnet_prot_if_list[i]->head = 0;
    3b04:	4b18      	ldr	r3, [pc, #96]	; (3b68 <fnet_prot_init+0x78>)
    3b06:	687a      	ldr	r2, [r7, #4]
    3b08:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    3b0c:	2200      	movs	r2, #0
    3b0e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:117
        if(fnet_prot_if_list[i]->prot_init)
    3b10:	4b15      	ldr	r3, [pc, #84]	; (3b68 <fnet_prot_init+0x78>)
    3b12:	687a      	ldr	r2, [r7, #4]
    3b14:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    3b18:	68db      	ldr	r3, [r3, #12]
    3b1a:	2b00      	cmp	r3, #0
    3b1c:	d00d      	beq.n	3b3a <fnet_prot_init+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:118
            if(fnet_prot_if_list[i]->prot_init() == FNET_ERR)
    3b1e:	4b12      	ldr	r3, [pc, #72]	; (3b68 <fnet_prot_init+0x78>)
    3b20:	687a      	ldr	r2, [r7, #4]
    3b22:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    3b26:	68db      	ldr	r3, [r3, #12]
    3b28:	4798      	blx	r3
    3b2a:	4603      	mov	r3, r0
    3b2c:	f1b3 3fff 	cmp.w	r3, #4294967295
    3b30:	d103      	bne.n	3b3a <fnet_prot_init+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:120
            {
                result = FNET_ERR;
    3b32:	f04f 33ff 	mov.w	r3, #4294967295
    3b36:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:121
                goto ERROR;
    3b38:	e00f      	b.n	3b5a <fnet_prot_init+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:114
    int i;
    int result = FNET_OK;
 
    fnet_isr_lock();
    
    for(i=0; i < FNET_PROT_TRANSPORT_IF_LIST_SIZE; i++)
    3b3a:	687b      	ldr	r3, [r7, #4]
    3b3c:	3301      	adds	r3, #1
    3b3e:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:114 (discriminator 1)
    3b40:	687b      	ldr	r3, [r7, #4]
    3b42:	2b03      	cmp	r3, #3
    3b44:	d9de      	bls.n	3b04 <fnet_prot_init+0x14>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:126
                goto ERROR;
            }
    }

#if FNET_CFG_IP4 
    if(fnet_ip_init() == FNET_ERR)
    3b46:	f7fd fe99 	bl	187c <fnet_ip_init>
    3b4a:	4603      	mov	r3, r0
    3b4c:	f1b3 3fff 	cmp.w	r3, #4294967295
    3b50:	d103      	bne.n	3b5a <fnet_prot_init+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:128
    {
        result = FNET_ERR;
    3b52:	f04f 33ff 	mov.w	r3, #4294967295
    3b56:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:129
        goto ERROR;
    3b58:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:142
        goto ERROR;
    }    
#endif /* FNET_CFG_IP6 */

ERROR:    
    fnet_isr_unlock();
    3b5a:	f7fe fb87 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:143
    return result;
    3b5e:	683b      	ldr	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:144
}
    3b60:	4618      	mov	r0, r3
    3b62:	3708      	adds	r7, #8
    3b64:	46bd      	mov	sp, r7
    3b66:	bd80      	pop	{r7, pc}
    3b68:	00013ff0 	.word	0x00013ff0

00003b6c <fnet_prot_release>:
fnet_prot_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:152
* NAME: fnet_prot_release
*
* DESCRIPTION: Transport and IP layers release.
*************************************************************************/
void fnet_prot_release( void )
{
    3b6c:	b580      	push	{r7, lr}
    3b6e:	b082      	sub	sp, #8
    3b70:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:155
    int i;
    
    fnet_isr_lock();
    3b72:	f7fe fb6d 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:157

    for(i=0; i < FNET_PROT_TRANSPORT_IF_LIST_SIZE; i++)
    3b76:	2300      	movs	r3, #0
    3b78:	607b      	str	r3, [r7, #4]
    3b7a:	e00f      	b.n	3b9c <fnet_prot_release+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:159
    {
        if(fnet_prot_if_list[i]->prot_release)
    3b7c:	4b0c      	ldr	r3, [pc, #48]	; (3bb0 <fnet_prot_release+0x44>)
    3b7e:	687a      	ldr	r2, [r7, #4]
    3b80:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    3b84:	691b      	ldr	r3, [r3, #16]
    3b86:	2b00      	cmp	r3, #0
    3b88:	d005      	beq.n	3b96 <fnet_prot_release+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:160
            fnet_prot_if_list[i]->prot_release();
    3b8a:	4b09      	ldr	r3, [pc, #36]	; (3bb0 <fnet_prot_release+0x44>)
    3b8c:	687a      	ldr	r2, [r7, #4]
    3b8e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    3b92:	691b      	ldr	r3, [r3, #16]
    3b94:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:157
{
    int i;
    
    fnet_isr_lock();

    for(i=0; i < FNET_PROT_TRANSPORT_IF_LIST_SIZE; i++)
    3b96:	687b      	ldr	r3, [r7, #4]
    3b98:	3301      	adds	r3, #1
    3b9a:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:157 (discriminator 1)
    3b9c:	687b      	ldr	r3, [r7, #4]
    3b9e:	2b03      	cmp	r3, #3
    3ba0:	d9ec      	bls.n	3b7c <fnet_prot_release+0x10>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:164
        if(fnet_prot_if_list[i]->prot_release)
            fnet_prot_if_list[i]->prot_release();
    }

#if FNET_CFG_IP4 
    fnet_ip_release();
    3ba2:	f7fd fe89 	bl	18b8 <fnet_ip_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:171
    
#if FNET_CFG_IP6 
    fnet_ip6_release();    
#endif
    
    fnet_isr_unlock();
    3ba6:	f7fe fb61 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:172
}
    3baa:	3708      	adds	r7, #8
    3bac:	46bd      	mov	sp, r7
    3bae:	bd80      	pop	{r7, pc}
    3bb0:	00013ff0 	.word	0x00013ff0

00003bb4 <fnet_prot_find>:
fnet_prot_find():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:181
*
* DESCRIPTION: This function looks up a protocol by domain family name, 
*              by type and by protocol number.
*************************************************************************/
fnet_prot_if_t *fnet_prot_find( fnet_address_family_t family, fnet_socket_type_t type, int protocol )
{
    3bb4:	b480      	push	{r7}
    3bb6:	b085      	sub	sp, #20
    3bb8:	af00      	add	r7, sp, #0
    3bba:	460b      	mov	r3, r1
    3bbc:	603a      	str	r2, [r7, #0]
    3bbe:	4602      	mov	r2, r0
    3bc0:	80fa      	strh	r2, [r7, #6]
    3bc2:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:184
    int i;
    
    for(i=0; i < FNET_PROT_TRANSPORT_IF_LIST_SIZE; i++)
    3bc4:	2300      	movs	r3, #0
    3bc6:	60fb      	str	r3, [r7, #12]
    3bc8:	e036      	b.n	3c38 <fnet_prot_find+0x84>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:186
    {
        if( (fnet_prot_if_list[i]->family & family) && 
    3bca:	4b20      	ldr	r3, [pc, #128]	; (3c4c <fnet_prot_find+0x98>)
    3bcc:	68fa      	ldr	r2, [r7, #12]
    3bce:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    3bd2:	889a      	ldrh	r2, [r3, #4]
    3bd4:	88fb      	ldrh	r3, [r7, #6]
    3bd6:	4013      	ands	r3, r2
    3bd8:	b29b      	uxth	r3, r3
    3bda:	2b00      	cmp	r3, #0
    3bdc:	d029      	beq.n	3c32 <fnet_prot_find+0x7e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:187 (discriminator 1)
            ( ((fnet_prot_if_list[i]->type == type) && (((protocol == 0)||(fnet_prot_if_list[i]->protocol == 0)) ? 1: (fnet_prot_if_list[i]->protocol == protocol)))
    3bde:	4b1b      	ldr	r3, [pc, #108]	; (3c4c <fnet_prot_find+0x98>)
    3be0:	68fa      	ldr	r2, [r7, #12]
    3be2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    3be6:	799b      	ldrb	r3, [r3, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:186 (discriminator 1)
{
    int i;
    
    for(i=0; i < FNET_PROT_TRANSPORT_IF_LIST_SIZE; i++)
    {
        if( (fnet_prot_if_list[i]->family & family) && 
    3be8:	797a      	ldrb	r2, [r7, #5]
    3bea:	429a      	cmp	r2, r3
    3bec:	d111      	bne.n	3c12 <fnet_prot_find+0x5e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:187
            ( ((fnet_prot_if_list[i]->type == type) && (((protocol == 0)||(fnet_prot_if_list[i]->protocol == 0)) ? 1: (fnet_prot_if_list[i]->protocol == protocol)))
    3bee:	683b      	ldr	r3, [r7, #0]
    3bf0:	2b00      	cmp	r3, #0
    3bf2:	d019      	beq.n	3c28 <fnet_prot_find+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:187 (discriminator 1)
    3bf4:	4b15      	ldr	r3, [pc, #84]	; (3c4c <fnet_prot_find+0x98>)
    3bf6:	68fa      	ldr	r2, [r7, #12]
    3bf8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    3bfc:	689b      	ldr	r3, [r3, #8]
    3bfe:	2b00      	cmp	r3, #0
    3c00:	d012      	beq.n	3c28 <fnet_prot_find+0x74>
    3c02:	4b12      	ldr	r3, [pc, #72]	; (3c4c <fnet_prot_find+0x98>)
    3c04:	68fa      	ldr	r2, [r7, #12]
    3c06:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    3c0a:	689a      	ldr	r2, [r3, #8]
    3c0c:	683b      	ldr	r3, [r7, #0]
    3c0e:	429a      	cmp	r2, r3
    3c10:	d00a      	beq.n	3c28 <fnet_prot_find+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:188
            || ((type == 0) && (fnet_prot_if_list[i]->protocol == protocol)) ) )
    3c12:	797b      	ldrb	r3, [r7, #5]
    3c14:	2b00      	cmp	r3, #0
    3c16:	d10c      	bne.n	3c32 <fnet_prot_find+0x7e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:188 (discriminator 1)
    3c18:	4b0c      	ldr	r3, [pc, #48]	; (3c4c <fnet_prot_find+0x98>)
    3c1a:	68fa      	ldr	r2, [r7, #12]
    3c1c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    3c20:	689a      	ldr	r2, [r3, #8]
    3c22:	683b      	ldr	r3, [r7, #0]
    3c24:	429a      	cmp	r2, r3
    3c26:	d104      	bne.n	3c32 <fnet_prot_find+0x7e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:190
        {
            return (fnet_prot_if_list[i]);
    3c28:	4b08      	ldr	r3, [pc, #32]	; (3c4c <fnet_prot_find+0x98>)
    3c2a:	68fa      	ldr	r2, [r7, #12]
    3c2c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    3c30:	e006      	b.n	3c40 <fnet_prot_find+0x8c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:184
*************************************************************************/
fnet_prot_if_t *fnet_prot_find( fnet_address_family_t family, fnet_socket_type_t type, int protocol )
{
    int i;
    
    for(i=0; i < FNET_PROT_TRANSPORT_IF_LIST_SIZE; i++)
    3c32:	68fb      	ldr	r3, [r7, #12]
    3c34:	3301      	adds	r3, #1
    3c36:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:184 (discriminator 1)
    3c38:	68fb      	ldr	r3, [r7, #12]
    3c3a:	2b03      	cmp	r3, #3
    3c3c:	d9c5      	bls.n	3bca <fnet_prot_find+0x16>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:194
        {
            return (fnet_prot_if_list[i]);
        }
    }

    return (FNET_NULL);
    3c3e:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:195
}
    3c40:	4618      	mov	r0, r3
    3c42:	3714      	adds	r7, #20
    3c44:	46bd      	mov	sp, r7
    3c46:	f85d 7b04 	ldr.w	r7, [sp], #4
    3c4a:	4770      	bx	lr
    3c4c:	00013ff0 	.word	0x00013ff0

00003c50 <fnet_prot_drain>:
fnet_prot_drain():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:204
*
* DESCRIPTION: Tries to free not critical parts of 
*              dynamic allocated memory in the stack, if possible.
*************************************************************************/
void fnet_prot_drain( void )
{
    3c50:	b580      	push	{r7, lr}
    3c52:	b082      	sub	sp, #8
    3c54:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:211

#if 0 /* For debug needs.*/
    fnet_println("DRAIN");
#endif

    for(i=0; i < FNET_PROT_TRANSPORT_IF_LIST_SIZE; i++)
    3c56:	2300      	movs	r3, #0
    3c58:	607b      	str	r3, [r7, #4]
    3c5a:	e00f      	b.n	3c7c <fnet_prot_drain+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:213
    {
        if(fnet_prot_if_list[i]->prot_drain)
    3c5c:	4b0c      	ldr	r3, [pc, #48]	; (3c90 <fnet_prot_drain+0x40>)
    3c5e:	687a      	ldr	r2, [r7, #4]
    3c60:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    3c64:	69db      	ldr	r3, [r3, #28]
    3c66:	2b00      	cmp	r3, #0
    3c68:	d005      	beq.n	3c76 <fnet_prot_drain+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:214
            fnet_prot_if_list[i]->prot_drain();
    3c6a:	4b09      	ldr	r3, [pc, #36]	; (3c90 <fnet_prot_drain+0x40>)
    3c6c:	687a      	ldr	r2, [r7, #4]
    3c6e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    3c72:	69db      	ldr	r3, [r3, #28]
    3c74:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:211

#if 0 /* For debug needs.*/
    fnet_println("DRAIN");
#endif

    for(i=0; i < FNET_PROT_TRANSPORT_IF_LIST_SIZE; i++)
    3c76:	687b      	ldr	r3, [r7, #4]
    3c78:	3301      	adds	r3, #1
    3c7a:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:211 (discriminator 1)
    3c7c:	687b      	ldr	r3, [r7, #4]
    3c7e:	2b03      	cmp	r3, #3
    3c80:	d9ec      	bls.n	3c5c <fnet_prot_drain+0xc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:218
        if(fnet_prot_if_list[i]->prot_drain)
            fnet_prot_if_list[i]->prot_drain();
    }

#if FNET_CFG_IP4
    fnet_ip_drain();
    3c82:	f7fe f84b 	bl	1d1c <fnet_ip_drain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:225

#if FNET_CFG_IP6
    fnet_ip6_drain();
#endif
    
    fnet_netif_drain();
    3c86:	f7ff fb61 	bl	334c <fnet_netif_drain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_prot.c:226
}
    3c8a:	3708      	adds	r7, #8
    3c8c:	46bd      	mov	sp, r7
    3c8e:	bd80      	pop	{r7, pc}
    3c90:	00013ff0 	.word	0x00013ff0

00003c94 <fnet_raw_release>:
fnet_raw_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:117
*
* DESCRIPTION: This function releases all sockets associated 
*              with RAW protocol. 
*************************************************************************/
static void fnet_raw_release( void )
{
    3c94:	b580      	push	{r7, lr}
    3c96:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:118
    while(fnet_raw_prot_if.head)
    3c98:	e005      	b.n	3ca6 <fnet_raw_release+0x12>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:119
      fnet_socket_release(&fnet_raw_prot_if.head, fnet_raw_prot_if.head);
    3c9a:	4b05      	ldr	r3, [pc, #20]	; (3cb0 <fnet_raw_release+0x1c>)
    3c9c:	681b      	ldr	r3, [r3, #0]
    3c9e:	4804      	ldr	r0, [pc, #16]	; (3cb0 <fnet_raw_release+0x1c>)
    3ca0:	4619      	mov	r1, r3
    3ca2:	f000 fb43 	bl	432c <fnet_socket_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:118 (discriminator 1)
* DESCRIPTION: This function releases all sockets associated 
*              with RAW protocol. 
*************************************************************************/
static void fnet_raw_release( void )
{
    while(fnet_raw_prot_if.head)
    3ca6:	4b02      	ldr	r3, [pc, #8]	; (3cb0 <fnet_raw_release+0x1c>)
    3ca8:	681b      	ldr	r3, [r3, #0]
    3caa:	2b00      	cmp	r3, #0
    3cac:	d1f5      	bne.n	3c9a <fnet_raw_release+0x6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:120
      fnet_socket_release(&fnet_raw_prot_if.head, fnet_raw_prot_if.head);
}
    3cae:	bd80      	pop	{r7, pc}
    3cb0:	1000002c 	.word	0x1000002c

00003cb4 <fnet_raw_output>:
fnet_raw_output():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:129
*
* DESCRIPTION: RAW output function
*************************************************************************/
static int fnet_raw_output(  struct sockaddr *src_addr, const struct sockaddr *dest_addr, unsigned char protocol_number,
                             fnet_socket_option_t *sockoption, fnet_netbuf_t *nb )                            
{
    3cb4:	b5b0      	push	{r4, r5, r7, lr}
    3cb6:	b08c      	sub	sp, #48	; 0x30
    3cb8:	af06      	add	r7, sp, #24
    3cba:	60f8      	str	r0, [r7, #12]
    3cbc:	60b9      	str	r1, [r7, #8]
    3cbe:	603b      	str	r3, [r7, #0]
    3cc0:	4613      	mov	r3, r2
    3cc2:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:130
    int error =  FNET_OK;
    3cc4:	2300      	movs	r3, #0
    3cc6:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:132
    
    fnet_netif_t *netif = FNET_NULL;
    3cc8:	2300      	movs	r3, #0
    3cca:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:136


#if FNET_CFG_IP4
    if(dest_addr->sa_family == AF_INET)
    3ccc:	68bb      	ldr	r3, [r7, #8]
    3cce:	881b      	ldrh	r3, [r3, #0]
    3cd0:	2b01      	cmp	r3, #1
    3cd2:	d11f      	bne.n	3d14 <fnet_raw_output+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:138
    {
        error = fnet_ip_output(netif, ((struct sockaddr_in *)(src_addr))->sin_addr.s_addr, 
    3cd4:	68fb      	ldr	r3, [r7, #12]
    3cd6:	6859      	ldr	r1, [r3, #4]
    3cd8:	68bb      	ldr	r3, [r7, #8]
    3cda:	685a      	ldr	r2, [r3, #4]
    3cdc:	683b      	ldr	r3, [r7, #0]
    3cde:	785d      	ldrb	r5, [r3, #1]
    3ce0:	683b      	ldr	r3, [r7, #0]
    3ce2:	781c      	ldrb	r4, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:147
                                #if FNET_CFG_MULTICAST
                                    (unsigned char)((FNET_IP4_ADDR_IS_MULTICAST(((struct sockaddr_in *)(dest_addr))->sin_addr.s_addr)?sockoption->ip_opt.ttl_multicast:sockoption->ip_opt.ttl)),                               
                                #else
                                    sockoption->ip_opt.ttl, 
                                #endif /* FNET_CFG_MULTICAST */                               
                                   nb, 0, ((sockoption->flags & SO_DONTROUTE) > 0),
    3ce4:	683b      	ldr	r3, [r7, #0]
    3ce6:	6a1b      	ldr	r3, [r3, #32]
    3ce8:	f003 0304 	and.w	r3, r3, #4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:138


#if FNET_CFG_IP4
    if(dest_addr->sa_family == AF_INET)
    {
        error = fnet_ip_output(netif, ((struct sockaddr_in *)(src_addr))->sin_addr.s_addr, 
    3cec:	2b00      	cmp	r3, #0
    3cee:	bfd4      	ite	le
    3cf0:	2300      	movle	r3, #0
    3cf2:	2301      	movgt	r3, #1
    3cf4:	b2db      	uxtb	r3, r3
    3cf6:	4618      	mov	r0, r3
    3cf8:	79fb      	ldrb	r3, [r7, #7]
    3cfa:	9500      	str	r5, [sp, #0]
    3cfc:	9401      	str	r4, [sp, #4]
    3cfe:	6abc      	ldr	r4, [r7, #40]	; 0x28
    3d00:	9402      	str	r4, [sp, #8]
    3d02:	2400      	movs	r4, #0
    3d04:	9403      	str	r4, [sp, #12]
    3d06:	9004      	str	r0, [sp, #16]
    3d08:	2000      	movs	r0, #0
    3d0a:	9005      	str	r0, [sp, #20]
    3d0c:	6938      	ldr	r0, [r7, #16]
    3d0e:	f7fd fe15 	bl	193c <fnet_ip_output>
    3d12:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:167
                                protocol_number, 
                                sockoption->ip6_opt.unicast_hops, nb,0);
    }
#endif                               

    return (error);
    3d14:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:168
}
    3d16:	4618      	mov	r0, r3
    3d18:	3718      	adds	r7, #24
    3d1a:	46bd      	mov	sp, r7
    3d1c:	bdb0      	pop	{r4, r5, r7, pc}
    3d1e:	bf00      	nop

00003d20 <fnet_raw_input_ip4>:
fnet_raw_input_ip4():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:178
* DESCRIPTION: RAW input function, from IPv4.
*************************************************************************/
#if FNET_CFG_IP4 
void fnet_raw_input_ip4( fnet_netif_t *netif, fnet_ip4_addr_t src_ip, fnet_ip4_addr_t dest_ip,
                           fnet_netbuf_t *nb, fnet_netbuf_t *ip4_nb)
{
    3d20:	b580      	push	{r7, lr}
    3d22:	b08c      	sub	sp, #48	; 0x30
    3d24:	af02      	add	r7, sp, #8
    3d26:	60f8      	str	r0, [r7, #12]
    3d28:	60b9      	str	r1, [r7, #8]
    3d2a:	607a      	str	r2, [r7, #4]
    3d2c:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:181
    struct sockaddr     src_addr;
    struct sockaddr     dest_addr;
    fnet_ip_header_t    *hdr = ip4_nb->data_ptr;
    3d2e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    3d30:	68db      	ldr	r3, [r3, #12]
    3d32:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:183
    
    fnet_memset_zero(&src_addr, sizeof(struct sockaddr));
    3d34:	f107 031c 	add.w	r3, r7, #28
    3d38:	4618      	mov	r0, r3
    3d3a:	2108      	movs	r1, #8
    3d3c:	f001 ff66 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:184
     src_addr.sa_family = AF_INET;
    3d40:	2301      	movs	r3, #1
    3d42:	83bb      	strh	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:185
    ((struct sockaddr_in*)(&src_addr))->sin_addr.s_addr = src_ip;
    3d44:	f107 031c 	add.w	r3, r7, #28
    3d48:	68ba      	ldr	r2, [r7, #8]
    3d4a:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:187
    
    fnet_memset_zero(&dest_addr, sizeof(struct sockaddr));
    3d4c:	f107 0314 	add.w	r3, r7, #20
    3d50:	4618      	mov	r0, r3
    3d52:	2108      	movs	r1, #8
    3d54:	f001 ff5a 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:188
    dest_addr.sa_family = AF_INET;
    3d58:	2301      	movs	r3, #1
    3d5a:	82bb      	strh	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:189
    ((struct sockaddr_in*)(&dest_addr))->sin_addr.s_addr = dest_ip;
    3d5c:	f107 0314 	add.w	r3, r7, #20
    3d60:	687a      	ldr	r2, [r7, #4]
    3d62:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:191

    fnet_raw_input(netif, &src_addr,  &dest_addr, nb, hdr->protocol);    
    3d64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    3d66:	7a5b      	ldrb	r3, [r3, #9]
    3d68:	4619      	mov	r1, r3
    3d6a:	f107 021c 	add.w	r2, r7, #28
    3d6e:	f107 0314 	add.w	r3, r7, #20
    3d72:	9100      	str	r1, [sp, #0]
    3d74:	68f8      	ldr	r0, [r7, #12]
    3d76:	4611      	mov	r1, r2
    3d78:	461a      	mov	r2, r3
    3d7a:	683b      	ldr	r3, [r7, #0]
    3d7c:	f000 f804 	bl	3d88 <fnet_raw_input>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:192
}
    3d80:	3728      	adds	r7, #40	; 0x28
    3d82:	46bd      	mov	sp, r7
    3d84:	bd80      	pop	{r7, pc}
    3d86:	bf00      	nop

00003d88 <fnet_raw_input>:
fnet_raw_input():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:228
* NAME: fnet_raw_input
*
* DESCRIPTION: RAW input function.
*************************************************************************/
static void fnet_raw_input(fnet_netif_t *netif, struct sockaddr *foreign_addr,  struct sockaddr *local_addr, fnet_netbuf_t *nb, int protocol_number)
{
    3d88:	b580      	push	{r7, lr}
    3d8a:	b088      	sub	sp, #32
    3d8c:	af00      	add	r7, sp, #0
    3d8e:	60f8      	str	r0, [r7, #12]
    3d90:	60b9      	str	r1, [r7, #8]
    3d92:	607a      	str	r2, [r7, #4]
    3d94:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:233
    fnet_socket_t       *sock;
    fnet_socket_t       *last;
    fnet_netbuf_t       *nb_tmp;

    if(netif && nb && nb->total_length)
    3d96:	68fb      	ldr	r3, [r7, #12]
    3d98:	2b00      	cmp	r3, #0
    3d9a:	f000 80bf 	beq.w	3f1c <fnet_raw_input+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:233 (discriminator 1)
    3d9e:	683b      	ldr	r3, [r7, #0]
    3da0:	2b00      	cmp	r3, #0
    3da2:	f000 80bb 	beq.w	3f1c <fnet_raw_input+0x194>
    3da6:	683b      	ldr	r3, [r7, #0]
    3da8:	695b      	ldr	r3, [r3, #20]
    3daa:	2b00      	cmp	r3, #0
    3dac:	f000 80b6 	beq.w	3f1c <fnet_raw_input+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:236
    {
        /* Demultiplex broadcast & multicast datagrams.*/
        if(fnet_socket_addr_is_broadcast(local_addr, netif) || fnet_socket_addr_is_multicast(local_addr)) 
    3db0:	6878      	ldr	r0, [r7, #4]
    3db2:	68f9      	ldr	r1, [r7, #12]
    3db4:	f001 fc3a 	bl	562c <fnet_socket_addr_is_broadcast>
    3db8:	4603      	mov	r3, r0
    3dba:	2b00      	cmp	r3, #0
    3dbc:	d105      	bne.n	3dca <fnet_raw_input+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:236 (discriminator 1)
    3dbe:	6878      	ldr	r0, [r7, #4]
    3dc0:	f001 fc14 	bl	55ec <fnet_socket_addr_is_multicast>
    3dc4:	4603      	mov	r3, r0
    3dc6:	2b00      	cmp	r3, #0
    3dc8:	d07c      	beq.n	3ec4 <fnet_raw_input+0x13c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:238
        {
            last = 0;
    3dca:	2300      	movs	r3, #0
    3dcc:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:240

            for (sock = fnet_raw_prot_if.head; sock != 0; sock = sock->next)
    3dce:	4b55      	ldr	r3, [pc, #340]	; (3f24 <fnet_raw_input+0x19c>)
    3dd0:	681b      	ldr	r3, [r3, #0]
    3dd2:	61fb      	str	r3, [r7, #28]
    3dd4:	e04e      	b.n	3e74 <fnet_raw_input+0xec>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:245
            {
                /* Ignore local port number.*/

                /* Check protocol number.*/
                if(sock->protocol_number != protocol_number)
    3dd6:	69fb      	ldr	r3, [r7, #28]
    3dd8:	691a      	ldr	r2, [r3, #16]
    3dda:	6abb      	ldr	r3, [r7, #40]	; 0x28
    3ddc:	429a      	cmp	r2, r3
    3dde:	d000      	beq.n	3de2 <fnet_raw_input+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:246
                    continue; /* => ignore.*/
    3de0:	e045      	b.n	3e6e <fnet_raw_input+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:269
                }
                else
#endif /* FNET_CFG_MULTICAST */                   
                {
                    /* Compare local address.*/
                    if(!fnet_socket_addr_is_unspecified(&sock->local_addr))
    3de2:	69fb      	ldr	r3, [r7, #28]
    3de4:	335c      	adds	r3, #92	; 0x5c
    3de6:	4618      	mov	r0, r3
    3de8:	f001 fc3c 	bl	5664 <fnet_socket_addr_is_unspecified>
    3dec:	4603      	mov	r3, r0
    3dee:	2b00      	cmp	r3, #0
    3df0:	d109      	bne.n	3e06 <fnet_raw_input+0x7e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:271
                    {
                        if(!fnet_socket_addr_are_equal(&sock->local_addr, local_addr))
    3df2:	69fb      	ldr	r3, [r7, #28]
    3df4:	335c      	adds	r3, #92	; 0x5c
    3df6:	4618      	mov	r0, r3
    3df8:	6879      	ldr	r1, [r7, #4]
    3dfa:	f001 fc51 	bl	56a0 <fnet_socket_addr_are_equal>
    3dfe:	4603      	mov	r3, r0
    3e00:	2b00      	cmp	r3, #0
    3e02:	d100      	bne.n	3e06 <fnet_raw_input+0x7e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:272
                            continue;
    3e04:	e033      	b.n	3e6e <fnet_raw_input+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:276
                    }

                    /* Compare foreign address and port number.*/
                    if(!fnet_socket_addr_is_unspecified(&sock->foreign_addr))
    3e06:	69fb      	ldr	r3, [r7, #28]
    3e08:	3354      	adds	r3, #84	; 0x54
    3e0a:	4618      	mov	r0, r3
    3e0c:	f001 fc2a 	bl	5664 <fnet_socket_addr_is_unspecified>
    3e10:	4603      	mov	r3, r0
    3e12:	2b00      	cmp	r3, #0
    3e14:	d109      	bne.n	3e2a <fnet_raw_input+0xa2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:278
                    {
                        if((!fnet_socket_addr_are_equal(&sock->foreign_addr, foreign_addr)) ) 
    3e16:	69fb      	ldr	r3, [r7, #28]
    3e18:	3354      	adds	r3, #84	; 0x54
    3e1a:	4618      	mov	r0, r3
    3e1c:	68b9      	ldr	r1, [r7, #8]
    3e1e:	f001 fc3f 	bl	56a0 <fnet_socket_addr_are_equal>
    3e22:	4603      	mov	r3, r0
    3e24:	2b00      	cmp	r3, #0
    3e26:	d100      	bne.n	3e2a <fnet_raw_input+0xa2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:279
                            continue;
    3e28:	e021      	b.n	3e6e <fnet_raw_input+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:284
                    }
                    
                }

                if((last != 0) && (last->receive_buffer.is_shutdown == 0))
    3e2a:	69bb      	ldr	r3, [r7, #24]
    3e2c:	2b00      	cmp	r3, #0
    3e2e:	d01c      	beq.n	3e6a <fnet_raw_input+0xe2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:284 (discriminator 1)
    3e30:	69bb      	ldr	r3, [r7, #24]
    3e32:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    3e34:	2b00      	cmp	r3, #0
    3e36:	d118      	bne.n	3e6a <fnet_raw_input+0xe2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:286
                {
                    if((nb_tmp = fnet_netbuf_copy(nb, 0, FNET_NETBUF_COPYALL, 0)) != 0)
    3e38:	6838      	ldr	r0, [r7, #0]
    3e3a:	2100      	movs	r1, #0
    3e3c:	f04f 32ff 	mov.w	r2, #4294967295
    3e40:	2300      	movs	r3, #0
    3e42:	f7fe fc9d 	bl	2780 <fnet_netbuf_copy>
    3e46:	6178      	str	r0, [r7, #20]
    3e48:	697b      	ldr	r3, [r7, #20]
    3e4a:	2b00      	cmp	r3, #0
    3e4c:	d00d      	beq.n	3e6a <fnet_raw_input+0xe2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:288
                    {
                        if(fnet_socket_buffer_append_address(&(last->receive_buffer), nb_tmp, foreign_addr) == FNET_ERR)
    3e4e:	69bb      	ldr	r3, [r7, #24]
    3e50:	3334      	adds	r3, #52	; 0x34
    3e52:	4618      	mov	r0, r3
    3e54:	6979      	ldr	r1, [r7, #20]
    3e56:	68ba      	ldr	r2, [r7, #8]
    3e58:	f001 fad4 	bl	5404 <fnet_socket_buffer_append_address>
    3e5c:	4603      	mov	r3, r0
    3e5e:	f1b3 3fff 	cmp.w	r3, #4294967295
    3e62:	d102      	bne.n	3e6a <fnet_raw_input+0xe2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:290
                        {
                            fnet_netbuf_free_chain(nb_tmp);
    3e64:	6978      	ldr	r0, [r7, #20]
    3e66:	f7fe fe4b 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:294
                        }
                    }
                }
                last = sock;
    3e6a:	69fb      	ldr	r3, [r7, #28]
    3e6c:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:240
        /* Demultiplex broadcast & multicast datagrams.*/
        if(fnet_socket_addr_is_broadcast(local_addr, netif) || fnet_socket_addr_is_multicast(local_addr)) 
        {
            last = 0;

            for (sock = fnet_raw_prot_if.head; sock != 0; sock = sock->next)
    3e6e:	69fb      	ldr	r3, [r7, #28]
    3e70:	681b      	ldr	r3, [r3, #0]
    3e72:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:240 (discriminator 1)
    3e74:	69fb      	ldr	r3, [r7, #28]
    3e76:	2b00      	cmp	r3, #0
    3e78:	d1ad      	bne.n	3dd6 <fnet_raw_input+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:297
                    }
                }
                last = sock;
            }

            if(last == 0)
    3e7a:	69bb      	ldr	r3, [r7, #24]
    3e7c:	2b00      	cmp	r3, #0
    3e7e:	d100      	bne.n	3e82 <fnet_raw_input+0xfa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:298
                goto BAD;
    3e80:	e04c      	b.n	3f1c <fnet_raw_input+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:300

            if(last->receive_buffer.is_shutdown) /* Is shutdown.*/
    3e82:	69bb      	ldr	r3, [r7, #24]
    3e84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    3e86:	2b00      	cmp	r3, #0
    3e88:	d000      	beq.n	3e8c <fnet_raw_input+0x104>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:301
                goto BAD;
    3e8a:	e047      	b.n	3f1c <fnet_raw_input+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:304
                
            /* Copy buffer.*/
            if((nb_tmp = fnet_netbuf_copy(nb, 0, FNET_NETBUF_COPYALL, 0)) != 0)
    3e8c:	6838      	ldr	r0, [r7, #0]
    3e8e:	2100      	movs	r1, #0
    3e90:	f04f 32ff 	mov.w	r2, #4294967295
    3e94:	2300      	movs	r3, #0
    3e96:	f7fe fc73 	bl	2780 <fnet_netbuf_copy>
    3e9a:	6178      	str	r0, [r7, #20]
    3e9c:	697b      	ldr	r3, [r7, #20]
    3e9e:	2b00      	cmp	r3, #0
    3ea0:	d00e      	beq.n	3ec0 <fnet_raw_input+0x138>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:306
            {
                if(fnet_socket_buffer_append_address(&(last->receive_buffer), nb_tmp, foreign_addr) == FNET_ERR)
    3ea2:	69bb      	ldr	r3, [r7, #24]
    3ea4:	3334      	adds	r3, #52	; 0x34
    3ea6:	4618      	mov	r0, r3
    3ea8:	6979      	ldr	r1, [r7, #20]
    3eaa:	68ba      	ldr	r2, [r7, #8]
    3eac:	f001 faaa 	bl	5404 <fnet_socket_buffer_append_address>
    3eb0:	4603      	mov	r3, r0
    3eb2:	f1b3 3fff 	cmp.w	r3, #4294967295
    3eb6:	d104      	bne.n	3ec2 <fnet_raw_input+0x13a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:308
                {
                    fnet_netbuf_free_chain(nb_tmp);
    3eb8:	6978      	ldr	r0, [r7, #20]
    3eba:	f7fe fe21 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:309
                    goto BAD;
    3ebe:	e02d      	b.n	3f1c <fnet_raw_input+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:313
                }
            }
            else
                goto BAD;
    3ec0:	e02c      	b.n	3f1c <fnet_raw_input+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:304

            if(last->receive_buffer.is_shutdown) /* Is shutdown.*/
                goto BAD;
                
            /* Copy buffer.*/
            if((nb_tmp = fnet_netbuf_copy(nb, 0, FNET_NETBUF_COPYALL, 0)) != 0)
    3ec2:	e02b      	b.n	3f1c <fnet_raw_input+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:317
            else
                goto BAD;
        }
        else /* For unicast datagram.*/
        {
            sock = fnet_socket_lookup(fnet_raw_prot_if.head, local_addr, foreign_addr, protocol_number);
    3ec4:	4b17      	ldr	r3, [pc, #92]	; (3f24 <fnet_raw_input+0x19c>)
    3ec6:	681b      	ldr	r3, [r3, #0]
    3ec8:	4618      	mov	r0, r3
    3eca:	6879      	ldr	r1, [r7, #4]
    3ecc:	68ba      	ldr	r2, [r7, #8]
    3ece:	6abb      	ldr	r3, [r7, #40]	; 0x28
    3ed0:	f000 fa9a 	bl	4408 <fnet_socket_lookup>
    3ed4:	61f8      	str	r0, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:319

            if(sock)
    3ed6:	69fb      	ldr	r3, [r7, #28]
    3ed8:	2b00      	cmp	r3, #0
    3eda:	d01f      	beq.n	3f1c <fnet_raw_input+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:321
            {
                if(sock->receive_buffer.is_shutdown) /* Is shutdown.*/
    3edc:	69fb      	ldr	r3, [r7, #28]
    3ede:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    3ee0:	2b00      	cmp	r3, #0
    3ee2:	d000      	beq.n	3ee6 <fnet_raw_input+0x15e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:322
                    goto BAD;
    3ee4:	e01a      	b.n	3f1c <fnet_raw_input+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:325
                    
                /* Copy buffer.*/
                if((nb_tmp = fnet_netbuf_copy(nb, 0, FNET_NETBUF_COPYALL, 0)) != 0)
    3ee6:	6838      	ldr	r0, [r7, #0]
    3ee8:	2100      	movs	r1, #0
    3eea:	f04f 32ff 	mov.w	r2, #4294967295
    3eee:	2300      	movs	r3, #0
    3ef0:	f7fe fc46 	bl	2780 <fnet_netbuf_copy>
    3ef4:	6178      	str	r0, [r7, #20]
    3ef6:	697b      	ldr	r3, [r7, #20]
    3ef8:	2b00      	cmp	r3, #0
    3efa:	d00e      	beq.n	3f1a <fnet_raw_input+0x192>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:327
                {
                    if(fnet_socket_buffer_append_address(&(sock->receive_buffer), nb_tmp, foreign_addr) == FNET_ERR)
    3efc:	69fb      	ldr	r3, [r7, #28]
    3efe:	3334      	adds	r3, #52	; 0x34
    3f00:	4618      	mov	r0, r3
    3f02:	6979      	ldr	r1, [r7, #20]
    3f04:	68ba      	ldr	r2, [r7, #8]
    3f06:	f001 fa7d 	bl	5404 <fnet_socket_buffer_append_address>
    3f0a:	4603      	mov	r3, r0
    3f0c:	f1b3 3fff 	cmp.w	r3, #4294967295
    3f10:	d104      	bne.n	3f1c <fnet_raw_input+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:329
                    {
                        fnet_netbuf_free_chain(nb_tmp);
    3f12:	6978      	ldr	r0, [r7, #20]
    3f14:	f7fe fdf4 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:330
                        goto BAD;
    3f18:	e000      	b.n	3f1c <fnet_raw_input+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:334
                    }
                }
                else
                    goto BAD;
    3f1a:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:339
            }
        }
    }
BAD:;
}
    3f1c:	3720      	adds	r7, #32
    3f1e:	46bd      	mov	sp, r7
    3f20:	bd80      	pop	{r7, pc}
    3f22:	bf00      	nop
    3f24:	1000002c 	.word	0x1000002c

00003f28 <fnet_raw_attach>:
fnet_raw_attach():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:347
* NAME: fnet_raw_attach
*
* DESCRIPTION: RAW attach function. 
*************************************************************************/
static int fnet_raw_attach( fnet_socket_t *sk )
{
    3f28:	b480      	push	{r7}
    3f2a:	b083      	sub	sp, #12
    3f2c:	af00      	add	r7, sp, #0
    3f2e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:349
#if FNET_CFG_IP4
    sk->options.ip_opt.ttl = FNET_RAW_TTL;
    3f30:	687b      	ldr	r3, [r7, #4]
    3f32:	2240      	movs	r2, #64	; 0x40
    3f34:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:350
    sk->options.ip_opt.tos = 0;
    3f38:	687b      	ldr	r3, [r7, #4]
    3f3a:	2200      	movs	r2, #0
    3f3c:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:357

#if FNET_CFG_IP6    
    sk->options.ip6_opt.unicast_hops = 0; /* Defined by ND.*/ 
#endif    
    
    sk->send_buffer.count_max = FNET_RAW_TX_BUF_MAX;
    3f40:	687b      	ldr	r3, [r7, #4]
    3f42:	f44f 6200 	mov.w	r2, #2048	; 0x800
    3f46:	649a      	str	r2, [r3, #72]	; 0x48
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:358
    sk->receive_buffer.count_max = FNET_RAW_RX_BUF_MAX;
    3f48:	687b      	ldr	r3, [r7, #4]
    3f4a:	f44f 6200 	mov.w	r2, #2048	; 0x800
    3f4e:	639a      	str	r2, [r3, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:359
    return (FNET_OK);
    3f50:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:360
}
    3f52:	4618      	mov	r0, r3
    3f54:	370c      	adds	r7, #12
    3f56:	46bd      	mov	sp, r7
    3f58:	f85d 7b04 	ldr.w	r7, [sp], #4
    3f5c:	4770      	bx	lr
    3f5e:	bf00      	nop

00003f60 <fnet_raw_detach>:
fnet_raw_detach():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:368
* NAME: fnet_raw_detach
*
* DESCRIPTION: RAW close function.
*************************************************************************/
static int fnet_raw_detach( fnet_socket_t *sk )
{
    3f60:	b580      	push	{r7, lr}
    3f62:	b082      	sub	sp, #8
    3f64:	af00      	add	r7, sp, #0
    3f66:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:369
    fnet_isr_lock();
    3f68:	f7fe f972 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:370
    fnet_socket_release(&fnet_raw_prot_if.head, sk);
    3f6c:	4805      	ldr	r0, [pc, #20]	; (3f84 <fnet_raw_detach+0x24>)
    3f6e:	6879      	ldr	r1, [r7, #4]
    3f70:	f000 f9dc 	bl	432c <fnet_socket_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:371
    fnet_isr_unlock();
    3f74:	f7fe f97a 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:372
    return (FNET_OK);
    3f78:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:373
}
    3f7a:	4618      	mov	r0, r3
    3f7c:	3708      	adds	r7, #8
    3f7e:	46bd      	mov	sp, r7
    3f80:	bd80      	pop	{r7, pc}
    3f82:	bf00      	nop
    3f84:	1000002c 	.word	0x1000002c

00003f88 <fnet_raw_shutdown>:
fnet_raw_shutdown():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:381
* NAME: fnet_raw_shutdown
*
* DESCRIPTION:  RAW shutdown function.
*************************************************************************/
static int fnet_raw_shutdown( fnet_socket_t *sk, int how )
{
    3f88:	b580      	push	{r7, lr}
    3f8a:	b082      	sub	sp, #8
    3f8c:	af00      	add	r7, sp, #0
    3f8e:	6078      	str	r0, [r7, #4]
    3f90:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:382
    fnet_isr_lock();
    3f92:	f7fe f95d 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:384

    if(how & SD_READ)
    3f96:	683b      	ldr	r3, [r7, #0]
    3f98:	f003 0301 	and.w	r3, r3, #1
    3f9c:	2b00      	cmp	r3, #0
    3f9e:	d007      	beq.n	3fb0 <fnet_raw_shutdown+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:386
    {
        sk->receive_buffer.is_shutdown = 1;
    3fa0:	687b      	ldr	r3, [r7, #4]
    3fa2:	2201      	movs	r2, #1
    3fa4:	641a      	str	r2, [r3, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:387
        fnet_socket_buffer_release(&sk->receive_buffer);
    3fa6:	687b      	ldr	r3, [r7, #4]
    3fa8:	3334      	adds	r3, #52	; 0x34
    3faa:	4618      	mov	r0, r3
    3fac:	f001 f9d6 	bl	535c <fnet_socket_buffer_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:390
    }

    if(how & SD_WRITE)
    3fb0:	683b      	ldr	r3, [r7, #0]
    3fb2:	f003 0302 	and.w	r3, r3, #2
    3fb6:	2b00      	cmp	r3, #0
    3fb8:	d002      	beq.n	3fc0 <fnet_raw_shutdown+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:392
    {
        sk->send_buffer.is_shutdown = 1;
    3fba:	687b      	ldr	r3, [r7, #4]
    3fbc:	2201      	movs	r2, #1
    3fbe:	651a      	str	r2, [r3, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:395
    }

    fnet_isr_unlock();
    3fc0:	f7fe f954 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:397

    return (FNET_OK);
    3fc4:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:398
}
    3fc6:	4618      	mov	r0, r3
    3fc8:	3708      	adds	r7, #8
    3fca:	46bd      	mov	sp, r7
    3fcc:	bd80      	pop	{r7, pc}
    3fce:	bf00      	nop

00003fd0 <fnet_raw_connect>:
fnet_raw_connect():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:406
* NAME: fnet_raw_connect
*
* DESCRIPTION: RAW connect function.
*************************************************************************/
static int fnet_raw_connect( fnet_socket_t *sk, struct sockaddr *foreign_addr)
{
    3fd0:	b580      	push	{r7, lr}
    3fd2:	b082      	sub	sp, #8
    3fd4:	af00      	add	r7, sp, #0
    3fd6:	6078      	str	r0, [r7, #4]
    3fd8:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:407
    fnet_isr_lock();
    3fda:	f7fe f939 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:409
    
    sk->foreign_addr = *foreign_addr;
    3fde:	687b      	ldr	r3, [r7, #4]
    3fe0:	683a      	ldr	r2, [r7, #0]
    3fe2:	3354      	adds	r3, #84	; 0x54
    3fe4:	6810      	ldr	r0, [r2, #0]
    3fe6:	6851      	ldr	r1, [r2, #4]
    3fe8:	c303      	stmia	r3!, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:410
    sk->local_addr.sa_port = 0;
    3fea:	687b      	ldr	r3, [r7, #4]
    3fec:	2200      	movs	r2, #0
    3fee:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:411
    sk->foreign_addr.sa_port = 0;
    3ff2:	687b      	ldr	r3, [r7, #4]
    3ff4:	2200      	movs	r2, #0
    3ff6:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:412
    sk->state = SS_CONNECTED;
    3ffa:	687b      	ldr	r3, [r7, #4]
    3ffc:	2202      	movs	r2, #2
    3ffe:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:413
    fnet_socket_buffer_release(&sk->receive_buffer);
    4000:	687b      	ldr	r3, [r7, #4]
    4002:	3334      	adds	r3, #52	; 0x34
    4004:	4618      	mov	r0, r3
    4006:	f001 f9a9 	bl	535c <fnet_socket_buffer_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:414
    fnet_isr_unlock();
    400a:	f7fe f92f 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:415
    return (FNET_OK);
    400e:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:416
}
    4010:	4618      	mov	r0, r3
    4012:	3708      	adds	r7, #8
    4014:	46bd      	mov	sp, r7
    4016:	bd80      	pop	{r7, pc}

00004018 <fnet_raw_snd>:
fnet_raw_snd():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:424
* NAME: fnet_raw_snd
*
* DESCRIPTION: RAW send function.
*************************************************************************/
static int fnet_raw_snd( fnet_socket_t *sk, char *buf, int len, int flags, const struct sockaddr *addr)
{
    4018:	b580      	push	{r7, lr}
    401a:	b08a      	sub	sp, #40	; 0x28
    401c:	af02      	add	r7, sp, #8
    401e:	60f8      	str	r0, [r7, #12]
    4020:	60b9      	str	r1, [r7, #8]
    4022:	607a      	str	r2, [r7, #4]
    4024:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:426
    fnet_netbuf_t           *nb;
    int                     error = FNET_OK;
    4026:	2300      	movs	r3, #0
    4028:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:428
    const struct sockaddr   *foreign_addr;
    int                     flags_save = 0;
    402a:	2300      	movs	r3, #0
    402c:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:430

    if(len > sk->send_buffer.count_max)
    402e:	687a      	ldr	r2, [r7, #4]
    4030:	68fb      	ldr	r3, [r7, #12]
    4032:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    4034:	429a      	cmp	r2, r3
    4036:	d902      	bls.n	403e <fnet_raw_snd+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:432
    {
        error = FNET_ERR_MSGSIZE;   /* Message too long. */
    4038:	2308      	movs	r3, #8
    403a:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:433
        goto ERROR;
    403c:	e047      	b.n	40ce <fnet_raw_snd+0xb6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:436
    }

    if(addr)
    403e:	6abb      	ldr	r3, [r7, #40]	; 0x28
    4040:	2b00      	cmp	r3, #0
    4042:	d002      	beq.n	404a <fnet_raw_snd+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:438
    {
        foreign_addr = addr;
    4044:	6abb      	ldr	r3, [r7, #40]	; 0x28
    4046:	61bb      	str	r3, [r7, #24]
    4048:	e002      	b.n	4050 <fnet_raw_snd+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:442
    }
    else
    {
        foreign_addr = &sk->foreign_addr;
    404a:	68fb      	ldr	r3, [r7, #12]
    404c:	3354      	adds	r3, #84	; 0x54
    404e:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:445
    }

    if((nb = fnet_netbuf_from_buf(buf, len, FNET_FALSE)) == 0)
    4050:	68b8      	ldr	r0, [r7, #8]
    4052:	6879      	ldr	r1, [r7, #4]
    4054:	2200      	movs	r2, #0
    4056:	f7fe fc93 	bl	2980 <fnet_netbuf_from_buf>
    405a:	6138      	str	r0, [r7, #16]
    405c:	693b      	ldr	r3, [r7, #16]
    405e:	2b00      	cmp	r3, #0
    4060:	d102      	bne.n	4068 <fnet_raw_snd+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:447
    {
        error = FNET_ERR_NOMEM;     /* Cannot allocate memory.*/
    4062:	2303      	movs	r3, #3
    4064:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:448
        goto ERROR;
    4066:	e032      	b.n	40ce <fnet_raw_snd+0xb6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:451
    }

    if(flags & MSG_DONTROUTE) /* Save */
    4068:	683b      	ldr	r3, [r7, #0]
    406a:	f003 0304 	and.w	r3, r3, #4
    406e:	2b00      	cmp	r3, #0
    4070:	d00b      	beq.n	408a <fnet_raw_snd+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:453
    {
        flags_save = sk->options.flags;
    4072:	68fb      	ldr	r3, [r7, #12]
    4074:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    4078:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:454
        sk->options.flags |= SO_DONTROUTE;
    407a:	68fb      	ldr	r3, [r7, #12]
    407c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    4080:	f043 0204 	orr.w	r2, r3, #4
    4084:	68fb      	ldr	r3, [r7, #12]
    4086:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:457
    }

    error = fnet_raw_output(&sk->local_addr, foreign_addr, (unsigned char)sk->protocol_number, &(sk->options), nb);
    408a:	68fb      	ldr	r3, [r7, #12]
    408c:	f103 015c 	add.w	r1, r3, #92	; 0x5c
    4090:	68fb      	ldr	r3, [r7, #12]
    4092:	691b      	ldr	r3, [r3, #16]
    4094:	b2da      	uxtb	r2, r3
    4096:	68fb      	ldr	r3, [r7, #12]
    4098:	3364      	adds	r3, #100	; 0x64
    409a:	6938      	ldr	r0, [r7, #16]
    409c:	9000      	str	r0, [sp, #0]
    409e:	4608      	mov	r0, r1
    40a0:	69b9      	ldr	r1, [r7, #24]
    40a2:	f7ff fe07 	bl	3cb4 <fnet_raw_output>
    40a6:	61f8      	str	r0, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:459

    if(flags & MSG_DONTROUTE) /* Restore.*/
    40a8:	683b      	ldr	r3, [r7, #0]
    40aa:	f003 0304 	and.w	r3, r3, #4
    40ae:	2b00      	cmp	r3, #0
    40b0:	d003      	beq.n	40ba <fnet_raw_snd+0xa2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:461
    {
        sk->options.flags = flags_save;
    40b2:	68fb      	ldr	r3, [r7, #12]
    40b4:	697a      	ldr	r2, [r7, #20]
    40b6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:464
    }

    if((error == FNET_OK) && (sk->options.local_error == FNET_OK)) /* We get RAW or ICMP error.*/
    40ba:	69fb      	ldr	r3, [r7, #28]
    40bc:	2b00      	cmp	r3, #0
    40be:	d106      	bne.n	40ce <fnet_raw_snd+0xb6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:464 (discriminator 1)
    40c0:	68fb      	ldr	r3, [r7, #12]
    40c2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    40c6:	2b00      	cmp	r3, #0
    40c8:	d101      	bne.n	40ce <fnet_raw_snd+0xb6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:466
    {
        return (len);
    40ca:	687b      	ldr	r3, [r7, #4]
    40cc:	e005      	b.n	40da <fnet_raw_snd+0xc2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:470
    }

ERROR:
    fnet_socket_set_error(sk, error);
    40ce:	68f8      	ldr	r0, [r7, #12]
    40d0:	69f9      	ldr	r1, [r7, #28]
    40d2:	f000 f85b 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:471
    return (SOCKET_ERROR);
    40d6:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:472
}
    40da:	4618      	mov	r0, r3
    40dc:	3720      	adds	r7, #32
    40de:	46bd      	mov	sp, r7
    40e0:	bd80      	pop	{r7, pc}
    40e2:	bf00      	nop

000040e4 <fnet_raw_rcv>:
fnet_raw_rcv():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:480
* NAME: fnet_raw_rcv
*
* DESCRIPTION :RAW receive function.
*************************************************************************/
static int fnet_raw_rcv(fnet_socket_t *sk, char *buf, int len, int flags, struct sockaddr *addr)
{
    40e4:	b580      	push	{r7, lr}
    40e6:	b08a      	sub	sp, #40	; 0x28
    40e8:	af02      	add	r7, sp, #8
    40ea:	60f8      	str	r0, [r7, #12]
    40ec:	60b9      	str	r1, [r7, #8]
    40ee:	607a      	str	r2, [r7, #4]
    40f0:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:481
    int error = FNET_OK;
    40f2:	2300      	movs	r3, #0
    40f4:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:486
    int length;
    struct sockaddr foreign_addr;

#if FNET_CFG_TCP_URGENT
    if(flags & MSG_OOB)
    40f6:	683b      	ldr	r3, [r7, #0]
    40f8:	f003 0301 	and.w	r3, r3, #1
    40fc:	2b00      	cmp	r3, #0
    40fe:	d002      	beq.n	4106 <fnet_raw_rcv+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:488
    {
        error = FNET_ERR_OPNOTSUPP; /* Operation not supported.*/
    4100:	230b      	movs	r3, #11
    4102:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:489
        goto ERROR;
    4104:	e02e      	b.n	4164 <fnet_raw_rcv+0x80>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:493
    }
#endif /* FNET_CFG_TCP_URGENT */
    
    if((length = fnet_socket_buffer_read_address(&(sk->receive_buffer), buf,
    4106:	68fb      	ldr	r3, [r7, #12]
    4108:	f103 0234 	add.w	r2, r3, #52	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:494
            len, &foreign_addr, ((flags &MSG_PEEK)== 0))) == FNET_ERR)
    410c:	683b      	ldr	r3, [r7, #0]
    410e:	f003 0302 	and.w	r3, r3, #2
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:493
        error = FNET_ERR_OPNOTSUPP; /* Operation not supported.*/
        goto ERROR;
    }
#endif /* FNET_CFG_TCP_URGENT */
    
    if((length = fnet_socket_buffer_read_address(&(sk->receive_buffer), buf,
    4112:	2b00      	cmp	r3, #0
    4114:	bf14      	ite	ne
    4116:	2300      	movne	r3, #0
    4118:	2301      	moveq	r3, #1
    411a:	b2db      	uxtb	r3, r3
    411c:	4619      	mov	r1, r3
    411e:	f107 0310 	add.w	r3, r7, #16
    4122:	9100      	str	r1, [sp, #0]
    4124:	4610      	mov	r0, r2
    4126:	68b9      	ldr	r1, [r7, #8]
    4128:	687a      	ldr	r2, [r7, #4]
    412a:	f001 f9e5 	bl	54f8 <fnet_socket_buffer_read_address>
    412e:	61b8      	str	r0, [r7, #24]
    4130:	69bb      	ldr	r3, [r7, #24]
    4132:	f1b3 3fff 	cmp.w	r3, #4294967295
    4136:	d102      	bne.n	413e <fnet_raw_rcv+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:497
            len, &foreign_addr, ((flags &MSG_PEEK)== 0))) == FNET_ERR)
    {
        /* The message was too large to fit into the specified buffer and was truncated.*/
        error = FNET_ERR_MSGSIZE;
    4138:	2308      	movs	r3, #8
    413a:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:498
        goto ERROR;
    413c:	e012      	b.n	4164 <fnet_raw_rcv+0x80>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:502
    }


    if((error == FNET_OK) && (sk->options.local_error == FNET_OK)) /* We get RAW or ICMP error.*/
    413e:	69fb      	ldr	r3, [r7, #28]
    4140:	2b00      	cmp	r3, #0
    4142:	d10f      	bne.n	4164 <fnet_raw_rcv+0x80>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:502 (discriminator 1)
    4144:	68fb      	ldr	r3, [r7, #12]
    4146:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    414a:	2b00      	cmp	r3, #0
    414c:	d10a      	bne.n	4164 <fnet_raw_rcv+0x80>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:504
    {
        if(addr)
    414e:	6abb      	ldr	r3, [r7, #40]	; 0x28
    4150:	2b00      	cmp	r3, #0
    4152:	d005      	beq.n	4160 <fnet_raw_rcv+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:506
        {
            fnet_socket_addr_copy(&foreign_addr, addr);
    4154:	f107 0310 	add.w	r3, r7, #16
    4158:	4618      	mov	r0, r3
    415a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
    415c:	f001 faea 	bl	5734 <fnet_socket_addr_copy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:509
        }
        
        return (length);
    4160:	69bb      	ldr	r3, [r7, #24]
    4162:	e005      	b.n	4170 <fnet_raw_rcv+0x8c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:513
    }

ERROR:
    fnet_socket_set_error(sk, error);
    4164:	68f8      	ldr	r0, [r7, #12]
    4166:	69f9      	ldr	r1, [r7, #28]
    4168:	f000 f810 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:514
    return (SOCKET_ERROR);
    416c:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_raw.c:515
}
    4170:	4618      	mov	r0, r3
    4172:	3720      	adds	r7, #32
    4174:	46bd      	mov	sp, r7
    4176:	bd80      	pop	{r7, pc}

00004178 <fnet_socket_init>:
fnet_socket_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:84
* NAME: fnet_socket_init
*
* DESCRIPTION: Initialization of the socket layer.
*************************************************************************/
void fnet_socket_init( void )
{
    4178:	b580      	push	{r7, lr}
    417a:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:85
    fnet_memset_zero(fnet_socket_desc, sizeof(fnet_socket_desc));
    417c:	4802      	ldr	r0, [pc, #8]	; (4188 <fnet_socket_init+0x10>)
    417e:	2128      	movs	r1, #40	; 0x28
    4180:	f001 fd44 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:86
}
    4184:	bd80      	pop	{r7, pc}
    4186:	bf00      	nop
    4188:	10000768 	.word	0x10000768

0000418c <fnet_socket_set_error>:
fnet_socket_set_error():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:94
* NAME: fnet_socket_set_error
*
* DESCRIPTION: This function sets socket error. 
*************************************************************************/
void fnet_socket_set_error( fnet_socket_t *sock, int error )
{
    418c:	b580      	push	{r7, lr}
    418e:	b082      	sub	sp, #8
    4190:	af00      	add	r7, sp, #0
    4192:	6078      	str	r0, [r7, #4]
    4194:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:95
    if(sock->options.local_error != FNET_OK)
    4196:	687b      	ldr	r3, [r7, #4]
    4198:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    419c:	2b00      	cmp	r3, #0
    419e:	d007      	beq.n	41b0 <fnet_socket_set_error+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:97
    {
        error = sock->options.local_error;
    41a0:	687b      	ldr	r3, [r7, #4]
    41a2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    41a6:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:98
        sock->options.local_error = FNET_OK;
    41a8:	687b      	ldr	r3, [r7, #4]
    41aa:	2200      	movs	r2, #0
    41ac:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:101
    }

    sock->options.error = error;
    41b0:	687b      	ldr	r3, [r7, #4]
    41b2:	683a      	ldr	r2, [r7, #0]
    41b4:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:103
    
    fnet_error_set(error);
    41b6:	6838      	ldr	r0, [r7, #0]
    41b8:	f7fc fdf2 	bl	da0 <fnet_error_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:104
}
    41bc:	3708      	adds	r7, #8
    41be:	46bd      	mov	sp, r7
    41c0:	bd80      	pop	{r7, pc}
    41c2:	bf00      	nop

000041c4 <fnet_socket_list_add>:
fnet_socket_list_add():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:112
* NAME: fnet_socket_list_add
*
* DESCRIPTION: This function adds socket into the queue.
*************************************************************************/
void fnet_socket_list_add( fnet_socket_t ** head, fnet_socket_t *s )
{
    41c4:	b580      	push	{r7, lr}
    41c6:	b082      	sub	sp, #8
    41c8:	af00      	add	r7, sp, #0
    41ca:	6078      	str	r0, [r7, #4]
    41cc:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:113
    fnet_isr_lock();
    41ce:	f7fe f83f 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:114
    s->next = *head;
    41d2:	687b      	ldr	r3, [r7, #4]
    41d4:	681a      	ldr	r2, [r3, #0]
    41d6:	683b      	ldr	r3, [r7, #0]
    41d8:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:116

    if(s->next != 0)
    41da:	683b      	ldr	r3, [r7, #0]
    41dc:	681b      	ldr	r3, [r3, #0]
    41de:	2b00      	cmp	r3, #0
    41e0:	d003      	beq.n	41ea <fnet_socket_list_add+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:117
        s->next->prev = s;
    41e2:	683b      	ldr	r3, [r7, #0]
    41e4:	681b      	ldr	r3, [r3, #0]
    41e6:	683a      	ldr	r2, [r7, #0]
    41e8:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:119

    s->prev = 0;
    41ea:	683b      	ldr	r3, [r7, #0]
    41ec:	2200      	movs	r2, #0
    41ee:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:120
    *head = s;
    41f0:	687b      	ldr	r3, [r7, #4]
    41f2:	683a      	ldr	r2, [r7, #0]
    41f4:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:121
    fnet_isr_unlock();
    41f6:	f7fe f839 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:122
}
    41fa:	3708      	adds	r7, #8
    41fc:	46bd      	mov	sp, r7
    41fe:	bd80      	pop	{r7, pc}

00004200 <fnet_socket_list_del>:
fnet_socket_list_del():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:130
* NAME: fnet_socket_list_del
*
* DESCRIPTION: This function removes socket from the queue 
*************************************************************************/
void fnet_socket_list_del( fnet_socket_t ** head, fnet_socket_t *s )
{
    4200:	b580      	push	{r7, lr}
    4202:	b082      	sub	sp, #8
    4204:	af00      	add	r7, sp, #0
    4206:	6078      	str	r0, [r7, #4]
    4208:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:131
    fnet_isr_lock();
    420a:	f7fe f821 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:133

    if(s->prev == 0)
    420e:	683b      	ldr	r3, [r7, #0]
    4210:	685b      	ldr	r3, [r3, #4]
    4212:	2b00      	cmp	r3, #0
    4214:	d104      	bne.n	4220 <fnet_socket_list_del+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:134
      *head=s->next;
    4216:	683b      	ldr	r3, [r7, #0]
    4218:	681a      	ldr	r2, [r3, #0]
    421a:	687b      	ldr	r3, [r7, #4]
    421c:	601a      	str	r2, [r3, #0]
    421e:	e004      	b.n	422a <fnet_socket_list_del+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:136
    else
        s->prev->next = s->next;
    4220:	683b      	ldr	r3, [r7, #0]
    4222:	685b      	ldr	r3, [r3, #4]
    4224:	683a      	ldr	r2, [r7, #0]
    4226:	6812      	ldr	r2, [r2, #0]
    4228:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:138

    if(s->next != 0)
    422a:	683b      	ldr	r3, [r7, #0]
    422c:	681b      	ldr	r3, [r3, #0]
    422e:	2b00      	cmp	r3, #0
    4230:	d004      	beq.n	423c <fnet_socket_list_del+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:139
        s->next->prev = s->prev;
    4232:	683b      	ldr	r3, [r7, #0]
    4234:	681b      	ldr	r3, [r3, #0]
    4236:	683a      	ldr	r2, [r7, #0]
    4238:	6852      	ldr	r2, [r2, #4]
    423a:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:141

    fnet_isr_unlock();
    423c:	f7fe f816 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:142
}
    4240:	3708      	adds	r7, #8
    4242:	46bd      	mov	sp, r7
    4244:	bd80      	pop	{r7, pc}
    4246:	bf00      	nop

00004248 <fnet_socket_desc_alloc>:
fnet_socket_desc_alloc():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:150
* NAME: fnet_socket_desc_alloc
*
* DESCRIPTION: This function reserves socket descriptor.
*************************************************************************/
static SOCKET fnet_socket_desc_alloc( void )
{
    4248:	b580      	push	{r7, lr}
    424a:	b082      	sub	sp, #8
    424c:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:152
    int i;
    int res = FNET_ERR;
    424e:	f04f 33ff 	mov.w	r3, #4294967295
    4252:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:154

    fnet_isr_lock();
    4254:	f7fd fffc 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:156

    for (i = 0; i < FNET_CFG_SOCKET_MAX; i++) /* Find the empty descriptor.*/
    4258:	2300      	movs	r3, #0
    425a:	607b      	str	r3, [r7, #4]
    425c:	e011      	b.n	4282 <fnet_socket_desc_alloc+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:158
    {
        if(fnet_socket_desc[i] == 0)
    425e:	4b0e      	ldr	r3, [pc, #56]	; (4298 <fnet_socket_desc_alloc+0x50>)
    4260:	687a      	ldr	r2, [r7, #4]
    4262:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    4266:	2b00      	cmp	r3, #0
    4268:	d108      	bne.n	427c <fnet_socket_desc_alloc+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:160
        {
            fnet_socket_desc[i] = (fnet_socket_t *)FNET_SOCKET_DESC_RESERVED;
    426a:	4b0b      	ldr	r3, [pc, #44]	; (4298 <fnet_socket_desc_alloc+0x50>)
    426c:	687a      	ldr	r2, [r7, #4]
    426e:	f04f 31ff 	mov.w	r1, #4294967295
    4272:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:161
            res = i;
    4276:	687b      	ldr	r3, [r7, #4]
    4278:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:162
            break;
    427a:	e005      	b.n	4288 <fnet_socket_desc_alloc+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:156
    int i;
    int res = FNET_ERR;

    fnet_isr_lock();

    for (i = 0; i < FNET_CFG_SOCKET_MAX; i++) /* Find the empty descriptor.*/
    427c:	687b      	ldr	r3, [r7, #4]
    427e:	3301      	adds	r3, #1
    4280:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:156 (discriminator 1)
    4282:	687b      	ldr	r3, [r7, #4]
    4284:	2b09      	cmp	r3, #9
    4286:	ddea      	ble.n	425e <fnet_socket_desc_alloc+0x16>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:166
            res = i;
            break;
        }
    }

    fnet_isr_unlock();
    4288:	f7fd fff0 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:168

    return (res);
    428c:	683b      	ldr	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:169
}
    428e:	4618      	mov	r0, r3
    4290:	3708      	adds	r7, #8
    4292:	46bd      	mov	sp, r7
    4294:	bd80      	pop	{r7, pc}
    4296:	bf00      	nop
    4298:	10000768 	.word	0x10000768

0000429c <fnet_socket_desc_set>:
fnet_socket_desc_set():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:177
* NAME: fnet_socket_desc_set
*
* DESCRIPTION: This function assigns the socket descriptor to the socket.
*************************************************************************/
static void fnet_socket_desc_set( SOCKET desc, fnet_socket_t *sock )
{
    429c:	b480      	push	{r7}
    429e:	b083      	sub	sp, #12
    42a0:	af00      	add	r7, sp, #0
    42a2:	6078      	str	r0, [r7, #4]
    42a4:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:178
    fnet_socket_desc[desc] = sock;
    42a6:	4b06      	ldr	r3, [pc, #24]	; (42c0 <fnet_socket_desc_set+0x24>)
    42a8:	687a      	ldr	r2, [r7, #4]
    42aa:	6839      	ldr	r1, [r7, #0]
    42ac:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:179
    sock->descriptor = desc;
    42b0:	683b      	ldr	r3, [r7, #0]
    42b2:	687a      	ldr	r2, [r7, #4]
    42b4:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:180
}
    42b6:	370c      	adds	r7, #12
    42b8:	46bd      	mov	sp, r7
    42ba:	f85d 7b04 	ldr.w	r7, [sp], #4
    42be:	4770      	bx	lr
    42c0:	10000768 	.word	0x10000768

000042c4 <fnet_socket_desc_free>:
fnet_socket_desc_free():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:188
* NAME: fnet_socket_desc_free
*
* DESCRIPTION: This function frees the socket descriptor.
*************************************************************************/
static void fnet_socket_desc_free( SOCKET desc )
{
    42c4:	b480      	push	{r7}
    42c6:	b083      	sub	sp, #12
    42c8:	af00      	add	r7, sp, #0
    42ca:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:189
    fnet_socket_desc[desc] = 0;
    42cc:	4b04      	ldr	r3, [pc, #16]	; (42e0 <fnet_socket_desc_free+0x1c>)
    42ce:	687a      	ldr	r2, [r7, #4]
    42d0:	2100      	movs	r1, #0
    42d2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:190
}
    42d6:	370c      	adds	r7, #12
    42d8:	46bd      	mov	sp, r7
    42da:	f85d 7b04 	ldr.w	r7, [sp], #4
    42de:	4770      	bx	lr
    42e0:	10000768 	.word	0x10000768

000042e4 <fnet_socket_desc_find>:
fnet_socket_desc_find():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:199
*
* DESCRIPTION: This function looking for socket structure 
*              associated with the socket descriptor.
*************************************************************************/
static fnet_socket_t *fnet_socket_desc_find( SOCKET desc )
{
    42e4:	b480      	push	{r7}
    42e6:	b085      	sub	sp, #20
    42e8:	af00      	add	r7, sp, #0
    42ea:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:200
    fnet_socket_t *s = 0;
    42ec:	2300      	movs	r3, #0
    42ee:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:202

    if(fnet_enabled && (desc >= 0) && (desc!=SOCKET_INVALID))
    42f0:	4b0c      	ldr	r3, [pc, #48]	; (4324 <fnet_socket_desc_find+0x40>)
    42f2:	681b      	ldr	r3, [r3, #0]
    42f4:	2b00      	cmp	r3, #0
    42f6:	d00e      	beq.n	4316 <fnet_socket_desc_find+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:202 (discriminator 1)
    42f8:	687b      	ldr	r3, [r7, #4]
    42fa:	2b00      	cmp	r3, #0
    42fc:	db0b      	blt.n	4316 <fnet_socket_desc_find+0x32>
    42fe:	687b      	ldr	r3, [r7, #4]
    4300:	f1b3 3fff 	cmp.w	r3, #4294967295
    4304:	d007      	beq.n	4316 <fnet_socket_desc_find+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:204
    {
        if((desc < FNET_CFG_SOCKET_MAX))
    4306:	687b      	ldr	r3, [r7, #4]
    4308:	2b09      	cmp	r3, #9
    430a:	dc04      	bgt.n	4316 <fnet_socket_desc_find+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:205
            s = fnet_socket_desc[desc];
    430c:	4b06      	ldr	r3, [pc, #24]	; (4328 <fnet_socket_desc_find+0x44>)
    430e:	687a      	ldr	r2, [r7, #4]
    4310:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
    4314:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:208
    }

    return (s);
    4316:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:209
}
    4318:	4618      	mov	r0, r3
    431a:	3714      	adds	r7, #20
    431c:	46bd      	mov	sp, r7
    431e:	f85d 7b04 	ldr.w	r7, [sp], #4
    4322:	4770      	bx	lr
    4324:	10000764 	.word	0x10000764
    4328:	10000768 	.word	0x10000768

0000432c <fnet_socket_release>:
fnet_socket_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:217
* NAME: fnet_socket_release
*
* DESCRIPTION: This function release all resources allocated for the socket. 
*************************************************************************/
void fnet_socket_release( fnet_socket_t ** head, fnet_socket_t *sock )
{
    432c:	b580      	push	{r7, lr}
    432e:	b082      	sub	sp, #8
    4330:	af00      	add	r7, sp, #0
    4332:	6078      	str	r0, [r7, #4]
    4334:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:218
    fnet_isr_lock();
    4336:	f7fd ff8b 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:219
    fnet_socket_list_del(head, sock);
    433a:	6878      	ldr	r0, [r7, #4]
    433c:	6839      	ldr	r1, [r7, #0]
    433e:	f7ff ff5f 	bl	4200 <fnet_socket_list_del>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:220
    fnet_socket_buffer_release(&sock->receive_buffer);
    4342:	683b      	ldr	r3, [r7, #0]
    4344:	3334      	adds	r3, #52	; 0x34
    4346:	4618      	mov	r0, r3
    4348:	f001 f808 	bl	535c <fnet_socket_buffer_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:221
    fnet_socket_buffer_release(&sock->send_buffer);
    434c:	683b      	ldr	r3, [r7, #0]
    434e:	3344      	adds	r3, #68	; 0x44
    4350:	4618      	mov	r0, r3
    4352:	f001 f803 	bl	535c <fnet_socket_buffer_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:222
    fnet_free(sock);
    4356:	6838      	ldr	r0, [r7, #0]
    4358:	f7fe ff4a 	bl	31f0 <fnet_free>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:223
    fnet_isr_unlock();
    435c:	f7fd ff86 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:224
}
    4360:	3708      	adds	r7, #8
    4362:	46bd      	mov	sp, r7
    4364:	bd80      	pop	{r7, pc}
    4366:	bf00      	nop

00004368 <fnet_socket_conflict>:
fnet_socket_conflict():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:234
* DESCRIPTION: Return FNET_TRUE if there's a socket whose addresses 'confict' 
*              with the supplied addresses.
*************************************************************************/
int fnet_socket_conflict( fnet_socket_t *head,  const struct sockaddr *local_addr, 
                          const struct sockaddr *foreign_addr /*optional*/, int wildcard )
{
    4368:	b580      	push	{r7, lr}
    436a:	b086      	sub	sp, #24
    436c:	af00      	add	r7, sp, #0
    436e:	60f8      	str	r0, [r7, #12]
    4370:	60b9      	str	r1, [r7, #8]
    4372:	607a      	str	r2, [r7, #4]
    4374:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:235
    fnet_socket_t *sock = head;
    4376:	68fb      	ldr	r3, [r7, #12]
    4378:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:237

    while(sock != 0)
    437a:	e03c      	b.n	43f6 <fnet_socket_conflict+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:239
    {
          if((sock->local_addr.sa_port == local_addr->sa_port)
    437c:	697b      	ldr	r3, [r7, #20]
    437e:	f8b3 205e 	ldrh.w	r2, [r3, #94]	; 0x5e
    4382:	68bb      	ldr	r3, [r7, #8]
    4384:	885b      	ldrh	r3, [r3, #2]
    4386:	429a      	cmp	r2, r3
    4388:	d132      	bne.n	43f0 <fnet_socket_conflict+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:240
               && ((fnet_socket_addr_is_unspecified(local_addr) && (wildcard)) || fnet_socket_addr_are_equal(&sock->local_addr, local_addr) )
    438a:	68b8      	ldr	r0, [r7, #8]
    438c:	f001 f96a 	bl	5664 <fnet_socket_addr_is_unspecified>
    4390:	4603      	mov	r3, r0
    4392:	2b00      	cmp	r3, #0
    4394:	d002      	beq.n	439c <fnet_socket_conflict+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:240 (discriminator 1)
    4396:	683b      	ldr	r3, [r7, #0]
    4398:	2b00      	cmp	r3, #0
    439a:	d108      	bne.n	43ae <fnet_socket_conflict+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:240 (discriminator 2)
    439c:	697b      	ldr	r3, [r7, #20]
    439e:	335c      	adds	r3, #92	; 0x5c
    43a0:	4618      	mov	r0, r3
    43a2:	68b9      	ldr	r1, [r7, #8]
    43a4:	f001 f97c 	bl	56a0 <fnet_socket_addr_are_equal>
    43a8:	4603      	mov	r3, r0
    43aa:	2b00      	cmp	r3, #0
    43ac:	d020      	beq.n	43f0 <fnet_socket_conflict+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:241
               && (((foreign_addr == 0) && (wildcard)) || fnet_socket_addr_are_equal(&sock->foreign_addr, foreign_addr))
    43ae:	687b      	ldr	r3, [r7, #4]
    43b0:	2b00      	cmp	r3, #0
    43b2:	d102      	bne.n	43ba <fnet_socket_conflict+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:241 (discriminator 1)
    43b4:	683b      	ldr	r3, [r7, #0]
    43b6:	2b00      	cmp	r3, #0
    43b8:	d108      	bne.n	43cc <fnet_socket_conflict+0x64>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:241 (discriminator 2)
    43ba:	697b      	ldr	r3, [r7, #20]
    43bc:	3354      	adds	r3, #84	; 0x54
    43be:	4618      	mov	r0, r3
    43c0:	6879      	ldr	r1, [r7, #4]
    43c2:	f001 f96d 	bl	56a0 <fnet_socket_addr_are_equal>
    43c6:	4603      	mov	r3, r0
    43c8:	2b00      	cmp	r3, #0
    43ca:	d011      	beq.n	43f0 <fnet_socket_conflict+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:242
               && (((foreign_addr == 0) && (wildcard)) || (foreign_addr && (sock->foreign_addr.sa_port == foreign_addr->sa_port))) )
    43cc:	687b      	ldr	r3, [r7, #4]
    43ce:	2b00      	cmp	r3, #0
    43d0:	d102      	bne.n	43d8 <fnet_socket_conflict+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:242 (discriminator 1)
    43d2:	683b      	ldr	r3, [r7, #0]
    43d4:	2b00      	cmp	r3, #0
    43d6:	d109      	bne.n	43ec <fnet_socket_conflict+0x84>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:242 (discriminator 2)
    43d8:	687b      	ldr	r3, [r7, #4]
    43da:	2b00      	cmp	r3, #0
    43dc:	d008      	beq.n	43f0 <fnet_socket_conflict+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:242 (discriminator 1)
    43de:	697b      	ldr	r3, [r7, #20]
    43e0:	f8b3 2056 	ldrh.w	r2, [r3, #86]	; 0x56
    43e4:	687b      	ldr	r3, [r7, #4]
    43e6:	885b      	ldrh	r3, [r3, #2]
    43e8:	429a      	cmp	r2, r3
    43ea:	d101      	bne.n	43f0 <fnet_socket_conflict+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:243
            return (FNET_TRUE);
    43ec:	2301      	movs	r3, #1
    43ee:	e006      	b.n	43fe <fnet_socket_conflict+0x96>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:245

        sock = sock->next;
    43f0:	697b      	ldr	r3, [r7, #20]
    43f2:	681b      	ldr	r3, [r3, #0]
    43f4:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:237 (discriminator 1)
int fnet_socket_conflict( fnet_socket_t *head,  const struct sockaddr *local_addr, 
                          const struct sockaddr *foreign_addr /*optional*/, int wildcard )
{
    fnet_socket_t *sock = head;

    while(sock != 0)
    43f6:	697b      	ldr	r3, [r7, #20]
    43f8:	2b00      	cmp	r3, #0
    43fa:	d1bf      	bne.n	437c <fnet_socket_conflict+0x14>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:248
            return (FNET_TRUE);

        sock = sock->next;
    }

    return (FNET_FALSE);
    43fc:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:249
}
    43fe:	4618      	mov	r0, r3
    4400:	3718      	adds	r7, #24
    4402:	46bd      	mov	sp, r7
    4404:	bd80      	pop	{r7, pc}
    4406:	bf00      	nop

00004408 <fnet_socket_lookup>:
fnet_socket_lookup():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:258
*
* DESCRIPTION: This function looks for a socket with the best match 
*              to the local and foreign address parameters.
*************************************************************************/
fnet_socket_t *fnet_socket_lookup( fnet_socket_t *head,  struct sockaddr *local_addr, struct sockaddr *foreign_addr, int protocol_number)
{
    4408:	b580      	push	{r7, lr}
    440a:	b088      	sub	sp, #32
    440c:	af00      	add	r7, sp, #0
    440e:	60f8      	str	r0, [r7, #12]
    4410:	60b9      	str	r1, [r7, #8]
    4412:	607a      	str	r2, [r7, #4]
    4414:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:260
    fnet_socket_t   *sock;
    fnet_socket_t   *match_sock = 0;
    4416:	2300      	movs	r3, #0
    4418:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:261
    int             match_wildcard = 3;
    441a:	2303      	movs	r3, #3
    441c:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:264
    int             wildcard;

    for (sock = head; sock != 0; sock = sock->next)
    441e:	68fb      	ldr	r3, [r7, #12]
    4420:	61fb      	str	r3, [r7, #28]
    4422:	e06f      	b.n	4504 <fnet_socket_lookup+0xfc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:267
    {
        /* Compare local port number.*/
        if(sock->protocol_number != protocol_number)
    4424:	69fb      	ldr	r3, [r7, #28]
    4426:	691a      	ldr	r2, [r3, #16]
    4428:	683b      	ldr	r3, [r7, #0]
    442a:	429a      	cmp	r2, r3
    442c:	d000      	beq.n	4430 <fnet_socket_lookup+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:268
            continue; /* Ignore. */
    442e:	e066      	b.n	44fe <fnet_socket_lookup+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:271
    
        /* Compare local port number.*/
        if(sock->local_addr.sa_port != local_addr->sa_port)
    4430:	69fb      	ldr	r3, [r7, #28]
    4432:	f8b3 205e 	ldrh.w	r2, [r3, #94]	; 0x5e
    4436:	68bb      	ldr	r3, [r7, #8]
    4438:	885b      	ldrh	r3, [r3, #2]
    443a:	429a      	cmp	r2, r3
    443c:	d000      	beq.n	4440 <fnet_socket_lookup+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:272
            continue; /* Ignore. */
    443e:	e05e      	b.n	44fe <fnet_socket_lookup+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:274

        wildcard = 0;
    4440:	2300      	movs	r3, #0
    4442:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:277

        /* Compare local address.*/
        if(!fnet_socket_addr_is_unspecified(&sock->local_addr))
    4444:	69fb      	ldr	r3, [r7, #28]
    4446:	335c      	adds	r3, #92	; 0x5c
    4448:	4618      	mov	r0, r3
    444a:	f001 f90b 	bl	5664 <fnet_socket_addr_is_unspecified>
    444e:	4603      	mov	r3, r0
    4450:	2b00      	cmp	r3, #0
    4452:	d113      	bne.n	447c <fnet_socket_lookup+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:279
        {
            if(fnet_socket_addr_is_unspecified(local_addr))
    4454:	68b8      	ldr	r0, [r7, #8]
    4456:	f001 f905 	bl	5664 <fnet_socket_addr_is_unspecified>
    445a:	4603      	mov	r3, r0
    445c:	2b00      	cmp	r3, #0
    445e:	d003      	beq.n	4468 <fnet_socket_lookup+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:280
                wildcard++;
    4460:	693b      	ldr	r3, [r7, #16]
    4462:	3301      	adds	r3, #1
    4464:	613b      	str	r3, [r7, #16]
    4466:	e012      	b.n	448e <fnet_socket_lookup+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:282

            else if(!fnet_socket_addr_are_equal(&sock->local_addr, local_addr))
    4468:	69fb      	ldr	r3, [r7, #28]
    446a:	335c      	adds	r3, #92	; 0x5c
    446c:	4618      	mov	r0, r3
    446e:	68b9      	ldr	r1, [r7, #8]
    4470:	f001 f916 	bl	56a0 <fnet_socket_addr_are_equal>
    4474:	4603      	mov	r3, r0
    4476:	2b00      	cmp	r3, #0
    4478:	d109      	bne.n	448e <fnet_socket_lookup+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:283
                continue;
    447a:	e040      	b.n	44fe <fnet_socket_lookup+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:287
        }
        else
        {
            if(!fnet_socket_addr_is_unspecified(local_addr))
    447c:	68b8      	ldr	r0, [r7, #8]
    447e:	f001 f8f1 	bl	5664 <fnet_socket_addr_is_unspecified>
    4482:	4603      	mov	r3, r0
    4484:	2b00      	cmp	r3, #0
    4486:	d102      	bne.n	448e <fnet_socket_lookup+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:288
                wildcard++;
    4488:	693b      	ldr	r3, [r7, #16]
    448a:	3301      	adds	r3, #1
    448c:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:292
        }

        /* Compare foreign address and port number.*/
        if(!fnet_socket_addr_is_unspecified(&sock->foreign_addr))
    448e:	69fb      	ldr	r3, [r7, #28]
    4490:	3354      	adds	r3, #84	; 0x54
    4492:	4618      	mov	r0, r3
    4494:	f001 f8e6 	bl	5664 <fnet_socket_addr_is_unspecified>
    4498:	4603      	mov	r3, r0
    449a:	2b00      	cmp	r3, #0
    449c:	d11a      	bne.n	44d4 <fnet_socket_lookup+0xcc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:294
        {
            if(fnet_socket_addr_is_unspecified(foreign_addr))
    449e:	6878      	ldr	r0, [r7, #4]
    44a0:	f001 f8e0 	bl	5664 <fnet_socket_addr_is_unspecified>
    44a4:	4603      	mov	r3, r0
    44a6:	2b00      	cmp	r3, #0
    44a8:	d003      	beq.n	44b2 <fnet_socket_lookup+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:295
                wildcard++;
    44aa:	693b      	ldr	r3, [r7, #16]
    44ac:	3301      	adds	r3, #1
    44ae:	613b      	str	r3, [r7, #16]
    44b0:	e019      	b.n	44e6 <fnet_socket_lookup+0xde>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:297

            else if((!fnet_socket_addr_are_equal(&sock->foreign_addr, foreign_addr)) || (sock->foreign_addr.sa_port != foreign_addr->sa_port))
    44b2:	69fb      	ldr	r3, [r7, #28]
    44b4:	3354      	adds	r3, #84	; 0x54
    44b6:	4618      	mov	r0, r3
    44b8:	6879      	ldr	r1, [r7, #4]
    44ba:	f001 f8f1 	bl	56a0 <fnet_socket_addr_are_equal>
    44be:	4603      	mov	r3, r0
    44c0:	2b00      	cmp	r3, #0
    44c2:	d006      	beq.n	44d2 <fnet_socket_lookup+0xca>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:297 (discriminator 1)
    44c4:	69fb      	ldr	r3, [r7, #28]
    44c6:	f8b3 2056 	ldrh.w	r2, [r3, #86]	; 0x56
    44ca:	687b      	ldr	r3, [r7, #4]
    44cc:	885b      	ldrh	r3, [r3, #2]
    44ce:	429a      	cmp	r2, r3
    44d0:	d009      	beq.n	44e6 <fnet_socket_lookup+0xde>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:298
                continue;
    44d2:	e014      	b.n	44fe <fnet_socket_lookup+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:302
        }
        else
        {
            if(!fnet_socket_addr_is_unspecified(foreign_addr))
    44d4:	6878      	ldr	r0, [r7, #4]
    44d6:	f001 f8c5 	bl	5664 <fnet_socket_addr_is_unspecified>
    44da:	4603      	mov	r3, r0
    44dc:	2b00      	cmp	r3, #0
    44de:	d102      	bne.n	44e6 <fnet_socket_lookup+0xde>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:303
                wildcard++;
    44e0:	693b      	ldr	r3, [r7, #16]
    44e2:	3301      	adds	r3, #1
    44e4:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:306
        }

        if(wildcard < match_wildcard)
    44e6:	693a      	ldr	r2, [r7, #16]
    44e8:	697b      	ldr	r3, [r7, #20]
    44ea:	429a      	cmp	r2, r3
    44ec:	da07      	bge.n	44fe <fnet_socket_lookup+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:308
        {
            match_sock = sock;
    44ee:	69fb      	ldr	r3, [r7, #28]
    44f0:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:310

            if((match_wildcard = wildcard) == 0)
    44f2:	693b      	ldr	r3, [r7, #16]
    44f4:	617b      	str	r3, [r7, #20]
    44f6:	697b      	ldr	r3, [r7, #20]
    44f8:	2b00      	cmp	r3, #0
    44fa:	d100      	bne.n	44fe <fnet_socket_lookup+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:311
                break; /* Exact match is found.*/
    44fc:	e005      	b.n	450a <fnet_socket_lookup+0x102>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:264
    fnet_socket_t   *sock;
    fnet_socket_t   *match_sock = 0;
    int             match_wildcard = 3;
    int             wildcard;

    for (sock = head; sock != 0; sock = sock->next)
    44fe:	69fb      	ldr	r3, [r7, #28]
    4500:	681b      	ldr	r3, [r3, #0]
    4502:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:264 (discriminator 1)
    4504:	69fb      	ldr	r3, [r7, #28]
    4506:	2b00      	cmp	r3, #0
    4508:	d18c      	bne.n	4424 <fnet_socket_lookup+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:315
            if((match_wildcard = wildcard) == 0)
                break; /* Exact match is found.*/
        }
    }

    return (match_sock);
    450a:	69bb      	ldr	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:316
}
    450c:	4618      	mov	r0, r3
    450e:	3720      	adds	r7, #32
    4510:	46bd      	mov	sp, r7
    4512:	bd80      	pop	{r7, pc}

00004514 <fnet_socket_get_uniqueport>:
fnet_socket_get_uniqueport():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:328
*	           FNET_SOCKET_PORT_RESERVED < local_port <= FNET_SOCKET_PORT_USERRESERVED (ephemeral port).
*              In network byte order.
*************************************************************************/
//unsigned short fnet_socket_uniqueport( fnet_socket_t *head, fnet_ip4_addr_t local_addr )
unsigned short fnet_socket_get_uniqueport( fnet_socket_t *head, struct sockaddr *local_addr )
{
    4514:	b580      	push	{r7, lr}
    4516:	b086      	sub	sp, #24
    4518:	af00      	add	r7, sp, #0
    451a:	6078      	str	r0, [r7, #4]
    451c:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:329
    unsigned short local_port = fnet_port_last; 
    451e:	4b1a      	ldr	r3, [pc, #104]	; (4588 <fnet_socket_get_uniqueport+0x74>)
    4520:	881b      	ldrh	r3, [r3, #0]
    4522:	82fb      	strh	r3, [r7, #22]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:330
    struct sockaddr local_addr_tmp = *local_addr;
    4524:	683a      	ldr	r2, [r7, #0]
    4526:	f107 030c 	add.w	r3, r7, #12
    452a:	6810      	ldr	r0, [r2, #0]
    452c:	6851      	ldr	r1, [r2, #4]
    452e:	c303      	stmia	r3!, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:332

    fnet_isr_lock();
    4530:	f7fd fe8e 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:336

    do
    {
        if((++local_port <= FNET_SOCKET_PORT_RESERVED) || (local_port > FNET_SOCKET_PORT_USERRESERVED))
    4534:	8afb      	ldrh	r3, [r7, #22]
    4536:	3301      	adds	r3, #1
    4538:	82fb      	strh	r3, [r7, #22]
    453a:	8afb      	ldrh	r3, [r7, #22]
    453c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
    4540:	d904      	bls.n	454c <fnet_socket_get_uniqueport+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:336 (discriminator 1)
    4542:	8afa      	ldrh	r2, [r7, #22]
    4544:	f241 3388 	movw	r3, #5000	; 0x1388
    4548:	429a      	cmp	r2, r3
    454a:	d902      	bls.n	4552 <fnet_socket_get_uniqueport+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:337
            local_port = FNET_SOCKET_PORT_RESERVED + 1;
    454c:	f240 4301 	movw	r3, #1025	; 0x401
    4550:	82fb      	strh	r3, [r7, #22]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:339
        
        local_addr_tmp.sa_port = fnet_htons(local_port);    
    4552:	8afb      	ldrh	r3, [r7, #22]
    4554:	4618      	mov	r0, r3
    4556:	f00a ffe3 	bl	f520 <fnet_htons>
    455a:	4603      	mov	r3, r0
    455c:	81fb      	strh	r3, [r7, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:341
    } 
    while (fnet_socket_conflict(head, &local_addr_tmp, FNET_NULL, 1));
    455e:	f107 030c 	add.w	r3, r7, #12
    4562:	6878      	ldr	r0, [r7, #4]
    4564:	4619      	mov	r1, r3
    4566:	2200      	movs	r2, #0
    4568:	2301      	movs	r3, #1
    456a:	f7ff fefd 	bl	4368 <fnet_socket_conflict>
    456e:	4603      	mov	r3, r0
    4570:	2b00      	cmp	r3, #0
    4572:	d1df      	bne.n	4534 <fnet_socket_get_uniqueport+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:343
    
    fnet_port_last = local_port;
    4574:	4b04      	ldr	r3, [pc, #16]	; (4588 <fnet_socket_get_uniqueport+0x74>)
    4576:	8afa      	ldrh	r2, [r7, #22]
    4578:	801a      	strh	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:345
    
    fnet_isr_unlock();
    457a:	f7fd fe77 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:347
    
    return local_addr_tmp.sa_port;
    457e:	89fb      	ldrh	r3, [r7, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:348
}
    4580:	4618      	mov	r0, r3
    4582:	3718      	adds	r7, #24
    4584:	46bd      	mov	sp, r7
    4586:	bd80      	pop	{r7, pc}
    4588:	10000050 	.word	0x10000050

0000458c <fnet_socket_copy>:
fnet_socket_copy():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:358
*
* DESCRIPTION: This function creates new socket structure and fills 
*              its proper fields by values from existing socket 
*************************************************************************/
fnet_socket_t *fnet_socket_copy( fnet_socket_t *sock )
{
    458c:	b580      	push	{r7, lr}
    458e:	b084      	sub	sp, #16
    4590:	af00      	add	r7, sp, #0
    4592:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:361
    fnet_socket_t *sock_cp;

    if((sock_cp = (fnet_socket_t *)fnet_malloc(sizeof(fnet_socket_t))) != 0)
    4594:	208c      	movs	r0, #140	; 0x8c
    4596:	f7fe fe3b 	bl	3210 <fnet_malloc>
    459a:	60f8      	str	r0, [r7, #12]
    459c:	68fb      	ldr	r3, [r7, #12]
    459e:	2b00      	cmp	r3, #0
    45a0:	d032      	beq.n	4608 <fnet_socket_copy+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:363
    {
        fnet_memcpy(sock_cp, sock, sizeof(fnet_socket_t));
    45a2:	68f8      	ldr	r0, [r7, #12]
    45a4:	6879      	ldr	r1, [r7, #4]
    45a6:	228c      	movs	r2, #140	; 0x8c
    45a8:	f001 f974 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:365

        sock_cp->next = 0;
    45ac:	68fb      	ldr	r3, [r7, #12]
    45ae:	2200      	movs	r2, #0
    45b0:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:366
        sock_cp->prev = 0;
    45b2:	68fb      	ldr	r3, [r7, #12]
    45b4:	2200      	movs	r2, #0
    45b6:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:367
        sock_cp->descriptor = FNET_SOCKET_DESC_RESERVED;
    45b8:	68fb      	ldr	r3, [r7, #12]
    45ba:	f04f 32ff 	mov.w	r2, #4294967295
    45be:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:368
        sock_cp->state = SS_UNCONNECTED;
    45c0:	68fb      	ldr	r3, [r7, #12]
    45c2:	2200      	movs	r2, #0
    45c4:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:369
        sock_cp->protocol_control = 0;
    45c6:	68fb      	ldr	r3, [r7, #12]
    45c8:	2200      	movs	r2, #0
    45ca:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:370
        sock_cp->head_con = 0;
    45cc:	68fb      	ldr	r3, [r7, #12]
    45ce:	2200      	movs	r2, #0
    45d0:	631a      	str	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:371
        sock_cp->partial_con = 0;
    45d2:	68fb      	ldr	r3, [r7, #12]
    45d4:	2200      	movs	r2, #0
    45d6:	61da      	str	r2, [r3, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:372
        sock_cp->incoming_con = 0;
    45d8:	68fb      	ldr	r3, [r7, #12]
    45da:	2200      	movs	r2, #0
    45dc:	625a      	str	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:373
        sock_cp->receive_buffer.count = 0;
    45de:	68fb      	ldr	r3, [r7, #12]
    45e0:	2200      	movs	r2, #0
    45e2:	635a      	str	r2, [r3, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:374
        sock_cp->receive_buffer.net_buf_chain = 0;
    45e4:	68fb      	ldr	r3, [r7, #12]
    45e6:	2200      	movs	r2, #0
    45e8:	63da      	str	r2, [r3, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:375
        sock_cp->send_buffer.count = 0;
    45ea:	68fb      	ldr	r3, [r7, #12]
    45ec:	2200      	movs	r2, #0
    45ee:	645a      	str	r2, [r3, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:376
        sock_cp->send_buffer.net_buf_chain = 0;
    45f0:	68fb      	ldr	r3, [r7, #12]
    45f2:	2200      	movs	r2, #0
    45f4:	64da      	str	r2, [r3, #76]	; 0x4c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:377
        sock_cp->options.error = FNET_OK;
    45f6:	68fb      	ldr	r3, [r7, #12]
    45f8:	2200      	movs	r2, #0
    45fa:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:378
        sock_cp->options.local_error = FNET_OK;
    45fc:	68fb      	ldr	r3, [r7, #12]
    45fe:	2200      	movs	r2, #0
    4600:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:379
        return (sock_cp);
    4604:	68fb      	ldr	r3, [r7, #12]
    4606:	e000      	b.n	460a <fnet_socket_copy+0x7e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:382
    }
    else
        return (0);
    4608:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:383
}
    460a:	4618      	mov	r0, r3
    460c:	3710      	adds	r7, #16
    460e:	46bd      	mov	sp, r7
    4610:	bd80      	pop	{r7, pc}
    4612:	bf00      	nop

00004614 <socket>:
socket():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:391
*
* DESCRIPTION: This function creates a socket and returns 
*              the descriptor to the application.
*************************************************************************/
SOCKET socket( fnet_address_family_t family, fnet_socket_type_t type, int protocol )
{
    4614:	b580      	push	{r7, lr}
    4616:	b086      	sub	sp, #24
    4618:	af00      	add	r7, sp, #0
    461a:	460b      	mov	r3, r1
    461c:	603a      	str	r2, [r7, #0]
    461e:	4602      	mov	r2, r0
    4620:	80fa      	strh	r2, [r7, #6]
    4622:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:395
    fnet_prot_if_t  *prot;
    fnet_socket_t   *sock;
    SOCKET          res;
    int             error = FNET_OK;
    4624:	2300      	movs	r3, #0
    4626:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:399

    fnet_os_mutex_lock();

    if(fnet_enabled == 0) /* Stack is disabled */
    4628:	4b3a      	ldr	r3, [pc, #232]	; (4714 <socket+0x100>)
    462a:	681b      	ldr	r3, [r3, #0]
    462c:	2b00      	cmp	r3, #0
    462e:	d102      	bne.n	4636 <socket+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:401
    {
        error = FNET_ERR_SYSNOTREADY;
    4630:	2319      	movs	r3, #25
    4632:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:402
        goto ERROR_1;
    4634:	e064      	b.n	4700 <socket+0xec>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:405
    }

    res = fnet_socket_desc_alloc();
    4636:	f7ff fe07 	bl	4248 <fnet_socket_desc_alloc>
    463a:	6138      	str	r0, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:407

    if(res == FNET_ERR)
    463c:	693b      	ldr	r3, [r7, #16]
    463e:	f1b3 3fff 	cmp.w	r3, #4294967295
    4642:	d102      	bne.n	464a <socket+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:409
    {
        error = FNET_ERR_NO_DESC; /* No more socket descriptors are available.*/
    4644:	2302      	movs	r3, #2
    4646:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:410
        goto ERROR_1;
    4648:	e05a      	b.n	4700 <socket+0xec>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:413
    }

    if((prot = fnet_prot_find(family, type, protocol)) == 0)
    464a:	88fa      	ldrh	r2, [r7, #6]
    464c:	797b      	ldrb	r3, [r7, #5]
    464e:	4610      	mov	r0, r2
    4650:	4619      	mov	r1, r3
    4652:	683a      	ldr	r2, [r7, #0]
    4654:	f7ff faae 	bl	3bb4 <fnet_prot_find>
    4658:	60f8      	str	r0, [r7, #12]
    465a:	68fb      	ldr	r3, [r7, #12]
    465c:	2b00      	cmp	r3, #0
    465e:	d102      	bne.n	4666 <socket+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:415
    {
        error = FNET_ERR_PROTONOSUPPORT; /* Protocol not supported.*/
    4660:	230a      	movs	r3, #10
    4662:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:416
        goto ERROR_2;
    4664:	e049      	b.n	46fa <socket+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:419
    }

    if((sock = (fnet_socket_t *)fnet_malloc(sizeof(fnet_socket_t))) == 0)
    4666:	208c      	movs	r0, #140	; 0x8c
    4668:	f7fe fdd2 	bl	3210 <fnet_malloc>
    466c:	60b8      	str	r0, [r7, #8]
    466e:	68bb      	ldr	r3, [r7, #8]
    4670:	2b00      	cmp	r3, #0
    4672:	d102      	bne.n	467a <socket+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:421
    {
        error = FNET_ERR_NOMEM; /* Cannot allocate memory.*/
    4674:	2303      	movs	r3, #3
    4676:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:422
        goto ERROR_2;
    4678:	e03f      	b.n	46fa <socket+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:425
    }

    fnet_memset_zero(sock, sizeof(fnet_socket_t));
    467a:	68b8      	ldr	r0, [r7, #8]
    467c:	218c      	movs	r1, #140	; 0x8c
    467e:	f001 fac5 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:426
    fnet_socket_desc_set(res, sock);
    4682:	6938      	ldr	r0, [r7, #16]
    4684:	68b9      	ldr	r1, [r7, #8]
    4686:	f7ff fe09 	bl	429c <fnet_socket_desc_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:427
    sock->protocol_interface = prot;
    468a:	68bb      	ldr	r3, [r7, #8]
    468c:	68fa      	ldr	r2, [r7, #12]
    468e:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:428
    sock->local_addr.sa_family = family;
    4690:	68bb      	ldr	r3, [r7, #8]
    4692:	88fa      	ldrh	r2, [r7, #6]
    4694:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:429
    sock->state = SS_UNCONNECTED;
    4698:	68bb      	ldr	r3, [r7, #8]
    469a:	2200      	movs	r2, #0
    469c:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:432
    
    /* Save protocol number.*/
    sock->protocol_number = protocol;
    469e:	68bb      	ldr	r3, [r7, #8]
    46a0:	683a      	ldr	r2, [r7, #0]
    46a2:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:433
    if(!sock->protocol_number)
    46a4:	68bb      	ldr	r3, [r7, #8]
    46a6:	691b      	ldr	r3, [r3, #16]
    46a8:	2b00      	cmp	r3, #0
    46aa:	d103      	bne.n	46b4 <socket+0xa0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:434
        sock->protocol_number = prot->protocol;
    46ac:	68fb      	ldr	r3, [r7, #12]
    46ae:	689a      	ldr	r2, [r3, #8]
    46b0:	68bb      	ldr	r3, [r7, #8]
    46b2:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:436
    
    sock->foreign_addr.sa_family = family;
    46b4:	68bb      	ldr	r3, [r7, #8]
    46b6:	88fa      	ldrh	r2, [r7, #6]
    46b8:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:438
    
    fnet_socket_list_add(&prot->head, sock);
    46bc:	68fb      	ldr	r3, [r7, #12]
    46be:	4618      	mov	r0, r3
    46c0:	68b9      	ldr	r1, [r7, #8]
    46c2:	f7ff fd7f 	bl	41c4 <fnet_socket_list_add>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:440

    if(prot->socket_api->prot_attach && (prot->socket_api->prot_attach(sock) == SOCKET_ERROR))
    46c6:	68fb      	ldr	r3, [r7, #12]
    46c8:	6a1b      	ldr	r3, [r3, #32]
    46ca:	685b      	ldr	r3, [r3, #4]
    46cc:	2b00      	cmp	r3, #0
    46ce:	d012      	beq.n	46f6 <socket+0xe2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:440 (discriminator 1)
    46d0:	68fb      	ldr	r3, [r7, #12]
    46d2:	6a1b      	ldr	r3, [r3, #32]
    46d4:	685b      	ldr	r3, [r3, #4]
    46d6:	68b8      	ldr	r0, [r7, #8]
    46d8:	4798      	blx	r3
    46da:	4603      	mov	r3, r0
    46dc:	f1b3 3fff 	cmp.w	r3, #4294967295
    46e0:	d109      	bne.n	46f6 <socket+0xe2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:442
    {
        fnet_socket_release(&sock->protocol_interface->head, sock);
    46e2:	68bb      	ldr	r3, [r7, #8]
    46e4:	695b      	ldr	r3, [r3, #20]
    46e6:	4618      	mov	r0, r3
    46e8:	68b9      	ldr	r1, [r7, #8]
    46ea:	f7ff fe1f 	bl	432c <fnet_socket_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:443
        error = fnet_error_get();
    46ee:	f7fc fb4b 	bl	d88 <fnet_error_get>
    46f2:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:444
        goto ERROR_2;
    46f4:	e001      	b.n	46fa <socket+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:448
    }

    fnet_os_mutex_unlock();
    return (res);
    46f6:	693b      	ldr	r3, [r7, #16]
    46f8:	e007      	b.n	470a <socket+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:451

    ERROR_2:
    fnet_socket_desc_free(res);
    46fa:	6938      	ldr	r0, [r7, #16]
    46fc:	f7ff fde2 	bl	42c4 <fnet_socket_desc_free>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:454

    ERROR_1:
    fnet_error_set(error);
    4700:	6978      	ldr	r0, [r7, #20]
    4702:	f7fc fb4d 	bl	da0 <fnet_error_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:457

    fnet_os_mutex_unlock();
    return (SOCKET_INVALID);
    4706:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:458
}
    470a:	4618      	mov	r0, r3
    470c:	3718      	adds	r7, #24
    470e:	46bd      	mov	sp, r7
    4710:	bd80      	pop	{r7, pc}
    4712:	bf00      	nop
    4714:	10000764 	.word	0x10000764

00004718 <connect>:
connect():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:467
*
* DESCRIPTION: This function establishes a connection to 
*              a specified socket.
*************************************************************************/
int connect( SOCKET s, struct sockaddr *name, int namelen )
{
    4718:	b580      	push	{r7, lr}
    471a:	b08c      	sub	sp, #48	; 0x30
    471c:	af00      	add	r7, sp, #0
    471e:	60f8      	str	r0, [r7, #12]
    4720:	60b9      	str	r1, [r7, #8]
    4722:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:469
    fnet_socket_t       *sock;
    int                 error = FNET_OK;
    4724:	2300      	movs	r3, #0
    4726:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:476
    struct sockaddr     local_addr_tmp;
    int                 result;

    fnet_os_mutex_lock();

    if((sock = fnet_socket_desc_find(s)) != 0)
    4728:	68f8      	ldr	r0, [r7, #12]
    472a:	f7ff fddb 	bl	42e4 <fnet_socket_desc_find>
    472e:	6278      	str	r0, [r7, #36]	; 0x24
    4730:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    4732:	2b00      	cmp	r3, #0
    4734:	f000 80a4 	beq.w	4880 <connect+0x168>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:478
    {
        if(sock->state == SS_LISTENING) /* The socket is marked to accept connections (listen).*/
    4738:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    473a:	7b1b      	ldrb	r3, [r3, #12]
    473c:	2b03      	cmp	r3, #3
    473e:	d102      	bne.n	4746 <connect+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:480
        {
            error = FNET_ERR_OPNOTSUPP; /*  Operation not supported.*/
    4740:	230b      	movs	r3, #11
    4742:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:481
            goto ERROR_SOCK;
    4744:	e0a1      	b.n	488a <connect+0x172>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:485
        }
        
        /* The protocol is connection oriented.*/
        if(sock->protocol_interface->socket_api->con_req) 
    4746:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    4748:	695b      	ldr	r3, [r3, #20]
    474a:	6a1b      	ldr	r3, [r3, #32]
    474c:	681b      	ldr	r3, [r3, #0]
    474e:	2b00      	cmp	r3, #0
    4750:	d00d      	beq.n	476e <connect+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:488
        {
            /* A connection has already been initiated.*/
            if(sock->state == SS_CONNECTED)
    4752:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    4754:	7b1b      	ldrb	r3, [r3, #12]
    4756:	2b02      	cmp	r3, #2
    4758:	d102      	bne.n	4760 <connect+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:490
            {
                error = FNET_ERR_ISCONN; /* Socket is already connected.*/
    475a:	2313      	movs	r3, #19
    475c:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:491
                goto ERROR_SOCK;
    475e:	e094      	b.n	488a <connect+0x172>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:494
            }

            if(sock->state == SS_CONNECTING)
    4760:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    4762:	7b1b      	ldrb	r3, [r3, #12]
    4764:	2b01      	cmp	r3, #1
    4766:	d102      	bne.n	476e <connect+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:496
            {
                error = FNET_ERR_INPROGRESS; /* The action is in progress. */
    4768:	2316      	movs	r3, #22
    476a:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:497
                goto ERROR_SOCK;
    476c:	e08d      	b.n	488a <connect+0x172>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:502
            }
        }


        if((error = fnet_socket_addr_check_len(name, (unsigned int)namelen)) != FNET_OK)
    476e:	687b      	ldr	r3, [r7, #4]
    4770:	68b8      	ldr	r0, [r7, #8]
    4772:	4619      	mov	r1, r3
    4774:	f000 ff14 	bl	55a0 <fnet_socket_addr_check_len>
    4778:	62f8      	str	r0, [r7, #44]	; 0x2c
    477a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    477c:	2b00      	cmp	r3, #0
    477e:	d000      	beq.n	4782 <connect+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:504
        {
            goto ERROR_SOCK;
    4780:	e083      	b.n	488a <connect+0x172>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:507
        }
        
        foreign_addr = *name;
    4782:	68ba      	ldr	r2, [r7, #8]
    4784:	f107 0318 	add.w	r3, r7, #24
    4788:	6810      	ldr	r0, [r2, #0]
    478a:	6851      	ldr	r1, [r2, #4]
    478c:	c303      	stmia	r3!, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:509

        if (fnet_socket_addr_is_unspecified(&foreign_addr))
    478e:	f107 0318 	add.w	r3, r7, #24
    4792:	4618      	mov	r0, r3
    4794:	f000 ff66 	bl	5664 <fnet_socket_addr_is_unspecified>
    4798:	4603      	mov	r3, r0
    479a:	2b00      	cmp	r3, #0
    479c:	d002      	beq.n	47a4 <connect+0x8c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:511
        {
            error = FNET_ERR_DESTADDRREQ; /* Destination address required.*/
    479e:	2307      	movs	r3, #7
    47a0:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:512
            goto ERROR_SOCK;
    47a2:	e072      	b.n	488a <connect+0x172>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:515
        }

        if((foreign_addr.sa_port == 0) && (sock->protocol_interface->type != SOCK_RAW))
    47a4:	8b7b      	ldrh	r3, [r7, #26]
    47a6:	2b00      	cmp	r3, #0
    47a8:	d107      	bne.n	47ba <connect+0xa2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:515 (discriminator 1)
    47aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    47ac:	695b      	ldr	r3, [r3, #20]
    47ae:	799b      	ldrb	r3, [r3, #6]
    47b0:	2b03      	cmp	r3, #3
    47b2:	d002      	beq.n	47ba <connect+0xa2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:517
        {
            error = FNET_ERR_ADDRNOTAVAIL; /* Can't assign requested port.*/
    47b4:	230f      	movs	r3, #15
    47b6:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:518
            goto ERROR_SOCK;
    47b8:	e067      	b.n	488a <connect+0x172>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:521
        }
        
        local_addr_tmp = sock->local_addr; 
    47ba:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    47bc:	f107 0310 	add.w	r3, r7, #16
    47c0:	325c      	adds	r2, #92	; 0x5c
    47c2:	e892 0003 	ldmia.w	r2, {r0, r1}
    47c6:	e883 0003 	stmia.w	r3, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:524
        

        if (fnet_socket_addr_is_unspecified(&local_addr_tmp))
    47ca:	f107 0310 	add.w	r3, r7, #16
    47ce:	4618      	mov	r0, r3
    47d0:	f000 ff48 	bl	5664 <fnet_socket_addr_is_unspecified>
    47d4:	4603      	mov	r3, r0
    47d6:	2b00      	cmp	r3, #0
    47d8:	d015      	beq.n	4806 <connect+0xee>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:526
        {
            switch(local_addr_tmp.sa_family)
    47da:	8a3b      	ldrh	r3, [r7, #16]
    47dc:	2b01      	cmp	r3, #1
    47de:	d112      	bne.n	4806 <connect+0xee>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:533
    #if FNET_CFG_IP4
                case AF_INET:
                    {
                        fnet_netif_t *netif;

                        if((netif = fnet_ip_route(((struct sockaddr_in *)(&foreign_addr))->sin_addr.s_addr)) == 0)
    47e0:	f107 0318 	add.w	r3, r7, #24
    47e4:	685b      	ldr	r3, [r3, #4]
    47e6:	4618      	mov	r0, r3
    47e8:	f7fd f86c 	bl	18c4 <fnet_ip_route>
    47ec:	6238      	str	r0, [r7, #32]
    47ee:	6a3b      	ldr	r3, [r7, #32]
    47f0:	2b00      	cmp	r3, #0
    47f2:	d102      	bne.n	47fa <connect+0xe2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:535
                        {
                            error = FNET_ERR_NETUNREACH; /* No route. */
    47f4:	2310      	movs	r3, #16
    47f6:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:536
                            goto ERROR_SOCK;
    47f8:	e047      	b.n	488a <connect+0x172>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:539
                        }

                        ((struct sockaddr_in *)(&local_addr_tmp))->sin_addr.s_addr = netif->ip4_addr.address;
    47fa:	f107 0310 	add.w	r3, r7, #16
    47fe:	6a3a      	ldr	r2, [r7, #32]
    4800:	6a52      	ldr	r2, [r2, #36]	; 0x24
    4802:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:541
                    }
                    break;
    4804:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:560
                    break;
    #endif /* FNET_CFG_IP6 */
            }            
        }

        if(local_addr_tmp.sa_port == 0)
    4806:	8a7b      	ldrh	r3, [r7, #18]
    4808:	2b00      	cmp	r3, #0
    480a:	d10a      	bne.n	4822 <connect+0x10a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:562
        {
            local_addr_tmp.sa_port = fnet_socket_get_uniqueport(sock->protocol_interface->head,
    480c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    480e:	695b      	ldr	r3, [r3, #20]
    4810:	681a      	ldr	r2, [r3, #0]
    4812:	f107 0310 	add.w	r3, r7, #16
    4816:	4610      	mov	r0, r2
    4818:	4619      	mov	r1, r3
    481a:	f7ff fe7b 	bl	4514 <fnet_socket_get_uniqueport>
    481e:	4603      	mov	r3, r0
    4820:	827b      	strh	r3, [r7, #18]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:567
                                                &local_addr_tmp); /* Get ephemeral port.*/
        }
  
            
        if(fnet_socket_conflict(sock->protocol_interface->head, &local_addr_tmp, &foreign_addr, 1))
    4822:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    4824:	695b      	ldr	r3, [r3, #20]
    4826:	6819      	ldr	r1, [r3, #0]
    4828:	f107 0210 	add.w	r2, r7, #16
    482c:	f107 0318 	add.w	r3, r7, #24
    4830:	4608      	mov	r0, r1
    4832:	4611      	mov	r1, r2
    4834:	461a      	mov	r2, r3
    4836:	2301      	movs	r3, #1
    4838:	f7ff fd96 	bl	4368 <fnet_socket_conflict>
    483c:	4603      	mov	r3, r0
    483e:	2b00      	cmp	r3, #0
    4840:	d002      	beq.n	4848 <connect+0x130>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:569
        {
            error = FNET_ERR_ADDRINUSE; /* Address already in use. */
    4842:	230e      	movs	r3, #14
    4844:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:570
            goto ERROR_SOCK;
    4846:	e020      	b.n	488a <connect+0x172>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:573
        }

        sock->local_addr = local_addr_tmp;
    4848:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    484a:	335c      	adds	r3, #92	; 0x5c
    484c:	f107 0210 	add.w	r2, r7, #16
    4850:	e892 0003 	ldmia.w	r2, {r0, r1}
    4854:	e883 0003 	stmia.w	r3, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:576
        
        /* Start the appropriate protocol connection.*/
        if(sock->protocol_interface->socket_api->prot_connect)
    4858:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    485a:	695b      	ldr	r3, [r3, #20]
    485c:	6a1b      	ldr	r3, [r3, #32]
    485e:	68db      	ldr	r3, [r3, #12]
    4860:	2b00      	cmp	r3, #0
    4862:	d00a      	beq.n	487a <connect+0x162>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:577
            result = sock->protocol_interface->socket_api->prot_connect(sock, &foreign_addr);
    4864:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    4866:	695b      	ldr	r3, [r3, #20]
    4868:	6a1b      	ldr	r3, [r3, #32]
    486a:	68db      	ldr	r3, [r3, #12]
    486c:	f107 0218 	add.w	r2, r7, #24
    4870:	6a78      	ldr	r0, [r7, #36]	; 0x24
    4872:	4611      	mov	r1, r2
    4874:	4798      	blx	r3
    4876:	62b8      	str	r0, [r7, #40]	; 0x28
    4878:	e005      	b.n	4886 <connect+0x16e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:579
        else
            result = FNET_OK;
    487a:	2300      	movs	r3, #0
    487c:	62bb      	str	r3, [r7, #40]	; 0x28
    487e:	e002      	b.n	4886 <connect+0x16e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:583
    }
    else
    {
        error = FNET_ERR_BAD_DESC; /* Bad descriptor.*/
    4880:	2301      	movs	r3, #1
    4882:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:584
        goto ERROR;
    4884:	e005      	b.n	4892 <connect+0x17a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:588
    }

    fnet_os_mutex_unlock();
    return (result);
    4886:	6abb      	ldr	r3, [r7, #40]	; 0x28
    4888:	e008      	b.n	489c <connect+0x184>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:591

ERROR_SOCK:
    fnet_socket_set_error(sock, error);
    488a:	6a78      	ldr	r0, [r7, #36]	; 0x24
    488c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
    488e:	f7ff fc7d 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:594

ERROR:
    fnet_error_set(error);
    4892:	6af8      	ldr	r0, [r7, #44]	; 0x2c
    4894:	f7fc fa84 	bl	da0 <fnet_error_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:597

    fnet_os_mutex_unlock();
    return (SOCKET_ERROR);
    4898:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:598
}
    489c:	4618      	mov	r0, r3
    489e:	3730      	adds	r7, #48	; 0x30
    48a0:	46bd      	mov	sp, r7
    48a2:	bd80      	pop	{r7, pc}

000048a4 <bind>:
bind():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:606
* NAME: bind
*
* DESCRIPTION: This function associates a local address with a socket.
*************************************************************************/
int bind( SOCKET s, const struct sockaddr *name, int namelen )
{
    48a4:	b580      	push	{r7, lr}
    48a6:	b086      	sub	sp, #24
    48a8:	af00      	add	r7, sp, #0
    48aa:	60f8      	str	r0, [r7, #12]
    48ac:	60b9      	str	r1, [r7, #8]
    48ae:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:608
    fnet_socket_t   *sock;
    int             error = FNET_OK;
    48b0:	2300      	movs	r3, #0
    48b2:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:612

    fnet_os_mutex_lock();

    if((sock = fnet_socket_desc_find(s)) != 0)
    48b4:	68f8      	ldr	r0, [r7, #12]
    48b6:	f7ff fd15 	bl	42e4 <fnet_socket_desc_find>
    48ba:	6138      	str	r0, [r7, #16]
    48bc:	693b      	ldr	r3, [r7, #16]
    48be:	2b00      	cmp	r3, #0
    48c0:	d079      	beq.n	49b6 <bind+0x112>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:615
    {

        if((error = fnet_socket_addr_check_len(name, (unsigned int)namelen)) != FNET_OK)
    48c2:	687b      	ldr	r3, [r7, #4]
    48c4:	68b8      	ldr	r0, [r7, #8]
    48c6:	4619      	mov	r1, r3
    48c8:	f000 fe6a 	bl	55a0 <fnet_socket_addr_check_len>
    48cc:	6178      	str	r0, [r7, #20]
    48ce:	697b      	ldr	r3, [r7, #20]
    48d0:	2b00      	cmp	r3, #0
    48d2:	d000      	beq.n	48d6 <bind+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:617
        {
            goto ERROR_SOCK;
    48d4:	e073      	b.n	49be <bind+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:620
        }

        if((sock->local_addr.sa_port == 0) && fnet_socket_addr_is_unspecified(&sock->local_addr))
    48d6:	693b      	ldr	r3, [r7, #16]
    48d8:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
    48dc:	2b00      	cmp	r3, #0
    48de:	d167      	bne.n	49b0 <bind+0x10c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:620 (discriminator 1)
    48e0:	693b      	ldr	r3, [r7, #16]
    48e2:	335c      	adds	r3, #92	; 0x5c
    48e4:	4618      	mov	r0, r3
    48e6:	f000 febd 	bl	5664 <fnet_socket_addr_is_unspecified>
    48ea:	4603      	mov	r3, r0
    48ec:	2b00      	cmp	r3, #0
    48ee:	d05f      	beq.n	49b0 <bind+0x10c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:622
        {
            if(!fnet_socket_addr_is_multicast(name)) /* Is not multicast.*/
    48f0:	68b8      	ldr	r0, [r7, #8]
    48f2:	f000 fe7b 	bl	55ec <fnet_socket_addr_is_multicast>
    48f6:	4603      	mov	r3, r0
    48f8:	2b00      	cmp	r3, #0
    48fa:	d12a      	bne.n	4952 <bind+0xae>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:624
            {
                if(!fnet_socket_addr_is_unspecified(name) && !fnet_socket_addr_is_broadcast(&sock->local_addr, FNET_NULL) && (fnet_netif_get_by_sockaddr(name) == FNET_NULL))
    48fc:	68b8      	ldr	r0, [r7, #8]
    48fe:	f000 feb1 	bl	5664 <fnet_socket_addr_is_unspecified>
    4902:	4603      	mov	r3, r0
    4904:	2b00      	cmp	r3, #0
    4906:	d111      	bne.n	492c <bind+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:624 (discriminator 1)
    4908:	693b      	ldr	r3, [r7, #16]
    490a:	335c      	adds	r3, #92	; 0x5c
    490c:	4618      	mov	r0, r3
    490e:	2100      	movs	r1, #0
    4910:	f000 fe8c 	bl	562c <fnet_socket_addr_is_broadcast>
    4914:	4603      	mov	r3, r0
    4916:	2b00      	cmp	r3, #0
    4918:	d108      	bne.n	492c <bind+0x88>
    491a:	68b8      	ldr	r0, [r7, #8]
    491c:	f7fe fda2 	bl	3464 <fnet_netif_get_by_sockaddr>
    4920:	4603      	mov	r3, r0
    4922:	2b00      	cmp	r3, #0
    4924:	d102      	bne.n	492c <bind+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:627
                {
                    /* The specified address is not a valid address for this system.*/
                    error = FNET_ERR_ADDRNOTAVAIL; 
    4926:	230f      	movs	r3, #15
    4928:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:628
                    goto ERROR_SOCK;
    492a:	e048      	b.n	49be <bind+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:631
                }
                
                if((name->sa_port != 0)
    492c:	68bb      	ldr	r3, [r7, #8]
    492e:	885b      	ldrh	r3, [r3, #2]
    4930:	2b00      	cmp	r3, #0
    4932:	d00e      	beq.n	4952 <bind+0xae>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:632
                     && fnet_socket_conflict(sock->protocol_interface->head, name, FNET_NULL, 0))
    4934:	693b      	ldr	r3, [r7, #16]
    4936:	695b      	ldr	r3, [r3, #20]
    4938:	681b      	ldr	r3, [r3, #0]
    493a:	4618      	mov	r0, r3
    493c:	68b9      	ldr	r1, [r7, #8]
    493e:	2200      	movs	r2, #0
    4940:	2300      	movs	r3, #0
    4942:	f7ff fd11 	bl	4368 <fnet_socket_conflict>
    4946:	4603      	mov	r3, r0
    4948:	2b00      	cmp	r3, #0
    494a:	d002      	beq.n	4952 <bind+0xae>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:634
                {
                    error = FNET_ERR_ADDRINUSE; /* Address already in use. */
    494c:	230e      	movs	r3, #14
    494e:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:635
                    goto ERROR_SOCK;
    4950:	e035      	b.n	49be <bind+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:639
                }
            }

            fnet_socket_ip_addr_copy(name , &sock->local_addr);
    4952:	693b      	ldr	r3, [r7, #16]
    4954:	335c      	adds	r3, #92	; 0x5c
    4956:	68b8      	ldr	r0, [r7, #8]
    4958:	4619      	mov	r1, r3
    495a:	f000 fecb 	bl	56f4 <fnet_socket_ip_addr_copy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:641

            if((name->sa_port == 0) && (sock->protocol_interface->type != SOCK_RAW))
    495e:	68bb      	ldr	r3, [r7, #8]
    4960:	885b      	ldrh	r3, [r3, #2]
    4962:	2b00      	cmp	r3, #0
    4964:	d113      	bne.n	498e <bind+0xea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:641 (discriminator 1)
    4966:	693b      	ldr	r3, [r7, #16]
    4968:	695b      	ldr	r3, [r3, #20]
    496a:	799b      	ldrb	r3, [r3, #6]
    496c:	2b03      	cmp	r3, #3
    496e:	d00e      	beq.n	498e <bind+0xea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:643
            {
                sock->local_addr.sa_port = fnet_socket_get_uniqueport(sock->protocol_interface->head, &sock->local_addr); /* Get ephemeral port.*/
    4970:	693b      	ldr	r3, [r7, #16]
    4972:	695b      	ldr	r3, [r3, #20]
    4974:	681a      	ldr	r2, [r3, #0]
    4976:	693b      	ldr	r3, [r7, #16]
    4978:	335c      	adds	r3, #92	; 0x5c
    497a:	4610      	mov	r0, r2
    497c:	4619      	mov	r1, r3
    497e:	f7ff fdc9 	bl	4514 <fnet_socket_get_uniqueport>
    4982:	4603      	mov	r3, r0
    4984:	461a      	mov	r2, r3
    4986:	693b      	ldr	r3, [r7, #16]
    4988:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
    498c:	e004      	b.n	4998 <bind+0xf4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:646
            }
            else
                sock->local_addr.sa_port = name->sa_port;
    498e:	68bb      	ldr	r3, [r7, #8]
    4990:	885a      	ldrh	r2, [r3, #2]
    4992:	693b      	ldr	r3, [r7, #16]
    4994:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:649
                

            fnet_socket_buffer_release(&sock->receive_buffer);
    4998:	693b      	ldr	r3, [r7, #16]
    499a:	3334      	adds	r3, #52	; 0x34
    499c:	4618      	mov	r0, r3
    499e:	f000 fcdd 	bl	535c <fnet_socket_buffer_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:650
            fnet_socket_buffer_release(&sock->send_buffer);
    49a2:	693b      	ldr	r3, [r7, #16]
    49a4:	3344      	adds	r3, #68	; 0x44
    49a6:	4618      	mov	r0, r3
    49a8:	f000 fcd8 	bl	535c <fnet_socket_buffer_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:666
        fnet_error_set(FNET_ERR_BAD_DESC);
        goto ERROR;
    }

    fnet_os_mutex_unlock();
    return (FNET_OK);
    49ac:	2300      	movs	r3, #0
    49ae:	e00c      	b.n	49ca <bind+0x126>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:654
            fnet_socket_buffer_release(&sock->receive_buffer);
            fnet_socket_buffer_release(&sock->send_buffer);
        }
        else
        {
            error = FNET_ERR_INVAL; /* The socket is already bound to an address.*/
    49b0:	2306      	movs	r3, #6
    49b2:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:655
            goto ERROR_SOCK;
    49b4:	e003      	b.n	49be <bind+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:661
        }
    }
    else
    {
        /* Bad descriptor.*/
        fnet_error_set(FNET_ERR_BAD_DESC);
    49b6:	2001      	movs	r0, #1
    49b8:	f7fc f9f2 	bl	da0 <fnet_error_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:662
        goto ERROR;
    49bc:	e003      	b.n	49c6 <bind+0x122>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:669

    fnet_os_mutex_unlock();
    return (FNET_OK);

ERROR_SOCK:
    fnet_socket_set_error(sock, error);
    49be:	6938      	ldr	r0, [r7, #16]
    49c0:	6979      	ldr	r1, [r7, #20]
    49c2:	f7ff fbe3 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:673

ERROR:
    fnet_os_mutex_unlock();
    return (SOCKET_ERROR);
    49c6:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:674
}
    49ca:	4618      	mov	r0, r3
    49cc:	3718      	adds	r7, #24
    49ce:	46bd      	mov	sp, r7
    49d0:	bd80      	pop	{r7, pc}
    49d2:	bf00      	nop

000049d4 <closesocket>:
closesocket():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:682
* NAME: closesocket
*
* DESCRIPTION: This function closes an existing socket.
*************************************************************************/
int closesocket( SOCKET s )
{
    49d4:	b580      	push	{r7, lr}
    49d6:	b086      	sub	sp, #24
    49d8:	af00      	add	r7, sp, #0
    49da:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:684
    fnet_socket_t *sock;
    int result = FNET_OK;
    49dc:	2300      	movs	r3, #0
    49de:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:695
    //{
    //    error = FNET_ERR_SYSNOTREADY;
    //    goto ERROR;
    //}

    if((sock = fnet_socket_desc_find(s)) != 0)
    49e0:	6878      	ldr	r0, [r7, #4]
    49e2:	f7ff fc7f 	bl	42e4 <fnet_socket_desc_find>
    49e6:	6138      	str	r0, [r7, #16]
    49e8:	693b      	ldr	r3, [r7, #16]
    49ea:	2b00      	cmp	r3, #0
    49ec:	d013      	beq.n	4a16 <closesocket+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:714
        }                        
#endif /* FNET_CFG_MULTICAST */



        if(sock->protocol_interface->socket_api->prot_detach)
    49ee:	693b      	ldr	r3, [r7, #16]
    49f0:	695b      	ldr	r3, [r3, #20]
    49f2:	6a1b      	ldr	r3, [r3, #32]
    49f4:	689b      	ldr	r3, [r3, #8]
    49f6:	2b00      	cmp	r3, #0
    49f8:	d006      	beq.n	4a08 <closesocket+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:715
            result = sock->protocol_interface->socket_api->prot_detach(sock);
    49fa:	693b      	ldr	r3, [r7, #16]
    49fc:	695b      	ldr	r3, [r3, #20]
    49fe:	6a1b      	ldr	r3, [r3, #32]
    4a00:	689b      	ldr	r3, [r3, #8]
    4a02:	6938      	ldr	r0, [r7, #16]
    4a04:	4798      	blx	r3
    4a06:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:717

        if(result == FNET_OK)
    4a08:	697b      	ldr	r3, [r7, #20]
    4a0a:	2b00      	cmp	r3, #0
    4a0c:	d10c      	bne.n	4a28 <closesocket+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:718
            fnet_socket_desc_free(s);
    4a0e:	6878      	ldr	r0, [r7, #4]
    4a10:	f7ff fc58 	bl	42c4 <fnet_socket_desc_free>
    4a14:	e008      	b.n	4a28 <closesocket+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:722
    }
    else
    {
        error = FNET_ERR_BAD_DESC; /* Bad descriptor.*/
    4a16:	2301      	movs	r3, #1
    4a18:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:723
        goto ERROR;
    4a1a:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:729
    }

    fnet_os_mutex_unlock();
    return (result);
    ERROR:
    fnet_error_set(error);
    4a1c:	68f8      	ldr	r0, [r7, #12]
    4a1e:	f7fc f9bf 	bl	da0 <fnet_error_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:732

    fnet_os_mutex_unlock();
    return (SOCKET_ERROR);
    4a22:	f04f 33ff 	mov.w	r3, #4294967295
    4a26:	e000      	b.n	4a2a <closesocket+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:727
        error = FNET_ERR_BAD_DESC; /* Bad descriptor.*/
        goto ERROR;
    }

    fnet_os_mutex_unlock();
    return (result);
    4a28:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:733
    ERROR:
    fnet_error_set(error);

    fnet_os_mutex_unlock();
    return (SOCKET_ERROR);
}
    4a2a:	4618      	mov	r0, r3
    4a2c:	3718      	adds	r7, #24
    4a2e:	46bd      	mov	sp, r7
    4a30:	bd80      	pop	{r7, pc}
    4a32:	bf00      	nop

00004a34 <shutdown>:
shutdown():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:741
* NAME: shutdown
*
* DESCRIPTION: This function to disable reception, transmission, or both.
*************************************************************************/
int shutdown( SOCKET s, int how )
{
    4a34:	b580      	push	{r7, lr}
    4a36:	b086      	sub	sp, #24
    4a38:	af00      	add	r7, sp, #0
    4a3a:	6078      	str	r0, [r7, #4]
    4a3c:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:743
    fnet_socket_t *sock;
    int result = FNET_OK;
    4a3e:	2300      	movs	r3, #0
    4a40:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:748
    int error;

    fnet_os_mutex_lock();

    if((sock = fnet_socket_desc_find(s)) != 0)
    4a42:	6878      	ldr	r0, [r7, #4]
    4a44:	f7ff fc4e 	bl	42e4 <fnet_socket_desc_find>
    4a48:	6138      	str	r0, [r7, #16]
    4a4a:	693b      	ldr	r3, [r7, #16]
    4a4c:	2b00      	cmp	r3, #0
    4a4e:	d012      	beq.n	4a76 <shutdown+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:750
    {
        if(sock->protocol_interface && sock->protocol_interface->socket_api->prot_shutdown)
    4a50:	693b      	ldr	r3, [r7, #16]
    4a52:	695b      	ldr	r3, [r3, #20]
    4a54:	2b00      	cmp	r3, #0
    4a56:	d017      	beq.n	4a88 <shutdown+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:750 (discriminator 1)
    4a58:	693b      	ldr	r3, [r7, #16]
    4a5a:	695b      	ldr	r3, [r3, #20]
    4a5c:	6a1b      	ldr	r3, [r3, #32]
    4a5e:	69db      	ldr	r3, [r3, #28]
    4a60:	2b00      	cmp	r3, #0
    4a62:	d011      	beq.n	4a88 <shutdown+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:751
            result = sock->protocol_interface->socket_api->prot_shutdown(sock, how);
    4a64:	693b      	ldr	r3, [r7, #16]
    4a66:	695b      	ldr	r3, [r3, #20]
    4a68:	6a1b      	ldr	r3, [r3, #32]
    4a6a:	69db      	ldr	r3, [r3, #28]
    4a6c:	6938      	ldr	r0, [r7, #16]
    4a6e:	6839      	ldr	r1, [r7, #0]
    4a70:	4798      	blx	r3
    4a72:	6178      	str	r0, [r7, #20]
    4a74:	e008      	b.n	4a88 <shutdown+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:755
    }
    else
    {
        error = FNET_ERR_BAD_DESC; /* Bad descriptor.*/
    4a76:	2301      	movs	r3, #1
    4a78:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:756
        goto ERROR;
    4a7a:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:762
    }

    fnet_os_mutex_unlock();
    return (result);
ERROR:
    fnet_error_set(error);
    4a7c:	68f8      	ldr	r0, [r7, #12]
    4a7e:	f7fc f98f 	bl	da0 <fnet_error_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:765

    fnet_os_mutex_unlock();
    return (SOCKET_ERROR);
    4a82:	f04f 33ff 	mov.w	r3, #4294967295
    4a86:	e000      	b.n	4a8a <shutdown+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:760
        error = FNET_ERR_BAD_DESC; /* Bad descriptor.*/
        goto ERROR;
    }

    fnet_os_mutex_unlock();
    return (result);
    4a88:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:766
ERROR:
    fnet_error_set(error);

    fnet_os_mutex_unlock();
    return (SOCKET_ERROR);
}
    4a8a:	4618      	mov	r0, r3
    4a8c:	3718      	adds	r7, #24
    4a8e:	46bd      	mov	sp, r7
    4a90:	bd80      	pop	{r7, pc}
    4a92:	bf00      	nop

00004a94 <listen>:
listen():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:775
*
* DESCRIPTION: This function places the socket into the state where 
*              it is listening for an incoming connection.
*************************************************************************/
int listen( SOCKET s, int backlog )
{
    4a94:	b580      	push	{r7, lr}
    4a96:	b086      	sub	sp, #24
    4a98:	af00      	add	r7, sp, #0
    4a9a:	6078      	str	r0, [r7, #4]
    4a9c:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:779
    fnet_socket_t *sock;

    int error;
    int result = FNET_OK;
    4a9e:	2300      	movs	r3, #0
    4aa0:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:783

    fnet_os_mutex_lock();

    if((sock = fnet_socket_desc_find(s)) != 0)
    4aa2:	6878      	ldr	r0, [r7, #4]
    4aa4:	f7ff fc1e 	bl	42e4 <fnet_socket_desc_find>
    4aa8:	60f8      	str	r0, [r7, #12]
    4aaa:	68fb      	ldr	r3, [r7, #12]
    4aac:	2b00      	cmp	r3, #0
    4aae:	d02f      	beq.n	4b10 <listen+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:785
    {
        if((sock->state == SS_CONNECTING) || (sock->state == SS_CONNECTED))
    4ab0:	68fb      	ldr	r3, [r7, #12]
    4ab2:	7b1b      	ldrb	r3, [r3, #12]
    4ab4:	2b01      	cmp	r3, #1
    4ab6:	d003      	beq.n	4ac0 <listen+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:785 (discriminator 1)
    4ab8:	68fb      	ldr	r3, [r7, #12]
    4aba:	7b1b      	ldrb	r3, [r3, #12]
    4abc:	2b02      	cmp	r3, #2
    4abe:	d102      	bne.n	4ac6 <listen+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:787
        {
            error = FNET_ERR_ISCONN; /* Operation not supported.*/
    4ac0:	2313      	movs	r3, #19
    4ac2:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:788
            goto ERROR_SOCK;
    4ac4:	e028      	b.n	4b18 <listen+0x84>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:791
        }

        if(sock->local_addr.sa_port == 0)
    4ac6:	68fb      	ldr	r3, [r7, #12]
    4ac8:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
    4acc:	2b00      	cmp	r3, #0
    4ace:	d102      	bne.n	4ad6 <listen+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:793
        {
            error = FNET_ERR_BOUNDREQ; /* The socket has not been bound.*/
    4ad0:	2305      	movs	r3, #5
    4ad2:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:794
            goto ERROR_SOCK;
    4ad4:	e020      	b.n	4b18 <listen+0x84>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:797
        }

        if(backlog < 0)
    4ad6:	683b      	ldr	r3, [r7, #0]
    4ad8:	2b00      	cmp	r3, #0
    4ada:	da02      	bge.n	4ae2 <listen+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:799
        {
            error = FNET_ERR_INVAL; /* Invalid argument.*/
    4adc:	2306      	movs	r3, #6
    4ade:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:800
            goto ERROR_SOCK;
    4ae0:	e01a      	b.n	4b18 <listen+0x84>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:803
        }

        if(sock->protocol_interface && sock->protocol_interface->socket_api->prot_listen)
    4ae2:	68fb      	ldr	r3, [r7, #12]
    4ae4:	695b      	ldr	r3, [r3, #20]
    4ae6:	2b00      	cmp	r3, #0
    4ae8:	d00f      	beq.n	4b0a <listen+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:803 (discriminator 1)
    4aea:	68fb      	ldr	r3, [r7, #12]
    4aec:	695b      	ldr	r3, [r3, #20]
    4aee:	6a1b      	ldr	r3, [r3, #32]
    4af0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    4af2:	2b00      	cmp	r3, #0
    4af4:	d009      	beq.n	4b0a <listen+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:805
        {
            result = sock->protocol_interface->socket_api->prot_listen(sock, backlog);
    4af6:	68fb      	ldr	r3, [r7, #12]
    4af8:	695b      	ldr	r3, [r3, #20]
    4afa:	6a1b      	ldr	r3, [r3, #32]
    4afc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    4afe:	68f8      	ldr	r0, [r7, #12]
    4b00:	6839      	ldr	r1, [r7, #0]
    4b02:	4798      	blx	r3
    4b04:	6138      	str	r0, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:820
        fnet_error_set(FNET_ERR_BAD_DESC);/* Bad descriptor.*/
        goto ERROR;
    }

    fnet_os_mutex_unlock();
    return (result);
    4b06:	693b      	ldr	r3, [r7, #16]
    4b08:	e00c      	b.n	4b24 <listen+0x90>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:809
        {
            result = sock->protocol_interface->socket_api->prot_listen(sock, backlog);
        }
        else
        {
            error = FNET_ERR_OPNOTSUPP; /* Operation not supported.*/
    4b0a:	230b      	movs	r3, #11
    4b0c:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:810
            goto ERROR_SOCK;
    4b0e:	e003      	b.n	4b18 <listen+0x84>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:815
        }
    }
    else
    {
        fnet_error_set(FNET_ERR_BAD_DESC);/* Bad descriptor.*/
    4b10:	2001      	movs	r0, #1
    4b12:	f7fc f945 	bl	da0 <fnet_error_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:816
        goto ERROR;
    4b16:	e003      	b.n	4b20 <listen+0x8c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:823

    fnet_os_mutex_unlock();
    return (result);

ERROR_SOCK:
    fnet_socket_set_error(sock, error);
    4b18:	68f8      	ldr	r0, [r7, #12]
    4b1a:	6979      	ldr	r1, [r7, #20]
    4b1c:	f7ff fb36 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:827

ERROR:
    fnet_os_mutex_unlock();
    return (SOCKET_ERROR);
    4b20:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:828
}
    4b24:	4618      	mov	r0, r3
    4b26:	3718      	adds	r7, #24
    4b28:	46bd      	mov	sp, r7
    4b2a:	bd80      	pop	{r7, pc}

00004b2c <accept>:
accept():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:836
* NAME: accept
*
* DESCRIPTION: This function accepts a connection on a specified socket.
*************************************************************************/
SOCKET accept( SOCKET s, struct sockaddr *addr, int *addrlen )
{
    4b2c:	b580      	push	{r7, lr}
    4b2e:	b088      	sub	sp, #32
    4b30:	af00      	add	r7, sp, #0
    4b32:	60f8      	str	r0, [r7, #12]
    4b34:	60b9      	str	r1, [r7, #8]
    4b36:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:844
    SOCKET          desc;
    int             error;

    fnet_os_mutex_lock();

    if((sock = fnet_socket_desc_find(s)) != 0)
    4b38:	68f8      	ldr	r0, [r7, #12]
    4b3a:	f7ff fbd3 	bl	42e4 <fnet_socket_desc_find>
    4b3e:	61b8      	str	r0, [r7, #24]
    4b40:	69bb      	ldr	r3, [r7, #24]
    4b42:	2b00      	cmp	r3, #0
    4b44:	d061      	beq.n	4c0a <accept+0xde>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:846
    {
        if(sock->protocol_interface && sock->protocol_interface->socket_api->prot_accept)
    4b46:	69bb      	ldr	r3, [r7, #24]
    4b48:	695b      	ldr	r3, [r3, #20]
    4b4a:	2b00      	cmp	r3, #0
    4b4c:	d058      	beq.n	4c00 <accept+0xd4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:846 (discriminator 1)
    4b4e:	69bb      	ldr	r3, [r7, #24]
    4b50:	695b      	ldr	r3, [r3, #20]
    4b52:	6a1b      	ldr	r3, [r3, #32]
    4b54:	691b      	ldr	r3, [r3, #16]
    4b56:	2b00      	cmp	r3, #0
    4b58:	d052      	beq.n	4c00 <accept+0xd4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:848
        {
            if(sock->state != SS_LISTENING)
    4b5a:	69bb      	ldr	r3, [r7, #24]
    4b5c:	7b1b      	ldrb	r3, [r3, #12]
    4b5e:	2b03      	cmp	r3, #3
    4b60:	d002      	beq.n	4b68 <accept+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:850
            {
                error = FNET_ERR_INVAL; /* Invalid argument.*/
    4b62:	2306      	movs	r3, #6
    4b64:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:851
                goto ERROR_SOCK;
    4b66:	e054      	b.n	4c12 <accept+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:854
            }

            if(addr && addrlen)
    4b68:	68bb      	ldr	r3, [r7, #8]
    4b6a:	2b00      	cmp	r3, #0
    4b6c:	d010      	beq.n	4b90 <accept+0x64>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:854 (discriminator 1)
    4b6e:	687b      	ldr	r3, [r7, #4]
    4b70:	2b00      	cmp	r3, #0
    4b72:	d00d      	beq.n	4b90 <accept+0x64>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:856
            {
                if((error = fnet_socket_addr_check_len(&sock->local_addr, (unsigned int)(*addrlen) )) != FNET_OK )
    4b74:	69bb      	ldr	r3, [r7, #24]
    4b76:	f103 025c 	add.w	r2, r3, #92	; 0x5c
    4b7a:	687b      	ldr	r3, [r7, #4]
    4b7c:	681b      	ldr	r3, [r3, #0]
    4b7e:	4610      	mov	r0, r2
    4b80:	4619      	mov	r1, r3
    4b82:	f000 fd0d 	bl	55a0 <fnet_socket_addr_check_len>
    4b86:	61f8      	str	r0, [r7, #28]
    4b88:	69fb      	ldr	r3, [r7, #28]
    4b8a:	2b00      	cmp	r3, #0
    4b8c:	d000      	beq.n	4b90 <accept+0x64>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:858
                {
                    goto ERROR_SOCK;
    4b8e:	e040      	b.n	4c12 <accept+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:862
                }
            }

            if((desc = fnet_socket_desc_alloc()) != FNET_ERR)
    4b90:	f7ff fb5a 	bl	4248 <fnet_socket_desc_alloc>
    4b94:	6178      	str	r0, [r7, #20]
    4b96:	697b      	ldr	r3, [r7, #20]
    4b98:	f1b3 3fff 	cmp.w	r3, #4294967295
    4b9c:	d02c      	beq.n	4bf8 <accept+0xcc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:864
            {
                fnet_isr_lock();
    4b9e:	f7fd fb57 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:866

                if((sock_new = sock->protocol_interface->socket_api->prot_accept(sock)) == 0)
    4ba2:	69bb      	ldr	r3, [r7, #24]
    4ba4:	695b      	ldr	r3, [r3, #20]
    4ba6:	6a1b      	ldr	r3, [r3, #32]
    4ba8:	691b      	ldr	r3, [r3, #16]
    4baa:	69b8      	ldr	r0, [r7, #24]
    4bac:	4798      	blx	r3
    4bae:	6138      	str	r0, [r7, #16]
    4bb0:	693b      	ldr	r3, [r7, #16]
    4bb2:	2b00      	cmp	r3, #0
    4bb4:	d107      	bne.n	4bc6 <accept+0x9a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:868
                {
                    fnet_socket_desc_free(desc);
    4bb6:	6978      	ldr	r0, [r7, #20]
    4bb8:	f7ff fb84 	bl	42c4 <fnet_socket_desc_free>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:869
                    fnet_isr_unlock();
    4bbc:	f7fd fb56 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:870
                    error = FNET_ERR_AGAIN;
    4bc0:	2304      	movs	r3, #4
    4bc2:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:871
                    goto ERROR_SOCK;
    4bc4:	e025      	b.n	4c12 <accept+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:874
                };

                fnet_socket_desc_set(desc, sock_new);
    4bc6:	6978      	ldr	r0, [r7, #20]
    4bc8:	6939      	ldr	r1, [r7, #16]
    4bca:	f7ff fb67 	bl	429c <fnet_socket_desc_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:875
                fnet_socket_list_add(&sock->protocol_interface->head, sock_new);
    4bce:	69bb      	ldr	r3, [r7, #24]
    4bd0:	695b      	ldr	r3, [r3, #20]
    4bd2:	4618      	mov	r0, r3
    4bd4:	6939      	ldr	r1, [r7, #16]
    4bd6:	f7ff faf5 	bl	41c4 <fnet_socket_list_add>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:877
                
                fnet_isr_unlock();
    4bda:	f7fd fb47 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:879
                
                if(addr && addrlen)
    4bde:	68bb      	ldr	r3, [r7, #8]
    4be0:	2b00      	cmp	r3, #0
    4be2:	d00c      	beq.n	4bfe <accept+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:879 (discriminator 1)
    4be4:	687b      	ldr	r3, [r7, #4]
    4be6:	2b00      	cmp	r3, #0
    4be8:	d009      	beq.n	4bfe <accept+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:881
                {
                    fnet_socket_addr_copy(&sock_new->foreign_addr, addr);
    4bea:	693b      	ldr	r3, [r7, #16]
    4bec:	3354      	adds	r3, #84	; 0x54
    4bee:	4618      	mov	r0, r3
    4bf0:	68b9      	ldr	r1, [r7, #8]
    4bf2:	f000 fd9f 	bl	5734 <fnet_socket_addr_copy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:862
                {
                    goto ERROR_SOCK;
                }
            }

            if((desc = fnet_socket_desc_alloc()) != FNET_ERR)
    4bf6:	e006      	b.n	4c06 <accept+0xda>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:886
                    fnet_socket_addr_copy(&sock_new->foreign_addr, addr);
                }
            }
            else
            {
                error = FNET_ERR_NO_DESC; /* No more socket descriptors are available.*/
    4bf8:	2302      	movs	r3, #2
    4bfa:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:887
                goto ERROR_SOCK;
    4bfc:	e009      	b.n	4c12 <accept+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:862
                {
                    goto ERROR_SOCK;
                }
            }

            if((desc = fnet_socket_desc_alloc()) != FNET_ERR)
    4bfe:	e002      	b.n	4c06 <accept+0xda>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:892
                goto ERROR_SOCK;
            }
        }
        else
        {
            error = FNET_ERR_OPNOTSUPP; /*  Operation not supported.*/
    4c00:	230b      	movs	r3, #11
    4c02:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:893
            goto ERROR_SOCK;
    4c04:	e005      	b.n	4c12 <accept+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:903
        fnet_error_set(FNET_ERR_BAD_DESC);/* Bad descriptor.*/
        goto ERROR;
    }

    fnet_os_mutex_unlock();
    return (desc);
    4c06:	697b      	ldr	r3, [r7, #20]
    4c08:	e009      	b.n	4c1e <accept+0xf2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:898
            goto ERROR_SOCK;
        }
    }
    else
    {
        fnet_error_set(FNET_ERR_BAD_DESC);/* Bad descriptor.*/
    4c0a:	2001      	movs	r0, #1
    4c0c:	f7fc f8c8 	bl	da0 <fnet_error_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:899
        goto ERROR;
    4c10:	e003      	b.n	4c1a <accept+0xee>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:906

    fnet_os_mutex_unlock();
    return (desc);

ERROR_SOCK:
    fnet_socket_set_error(sock, error);
    4c12:	69b8      	ldr	r0, [r7, #24]
    4c14:	69f9      	ldr	r1, [r7, #28]
    4c16:	f7ff fab9 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:910

ERROR:
    fnet_os_mutex_unlock();
    return (SOCKET_INVALID);
    4c1a:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:911
}
    4c1e:	4618      	mov	r0, r3
    4c20:	3720      	adds	r7, #32
    4c22:	46bd      	mov	sp, r7
    4c24:	bd80      	pop	{r7, pc}
    4c26:	bf00      	nop

00004c28 <send>:
send():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:919
* NAME: send
*
* DESCRIPTION: This function sends data on a connected socket. 
*************************************************************************/
int send( SOCKET s, char *buf, int len, int flags )
{
    4c28:	b580      	push	{r7, lr}
    4c2a:	b086      	sub	sp, #24
    4c2c:	af02      	add	r7, sp, #8
    4c2e:	60f8      	str	r0, [r7, #12]
    4c30:	60b9      	str	r1, [r7, #8]
    4c32:	607a      	str	r2, [r7, #4]
    4c34:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:920
    return sendto(s, buf, len, flags, FNET_NULL, 0);
    4c36:	2300      	movs	r3, #0
    4c38:	9300      	str	r3, [sp, #0]
    4c3a:	2300      	movs	r3, #0
    4c3c:	9301      	str	r3, [sp, #4]
    4c3e:	68f8      	ldr	r0, [r7, #12]
    4c40:	68b9      	ldr	r1, [r7, #8]
    4c42:	687a      	ldr	r2, [r7, #4]
    4c44:	683b      	ldr	r3, [r7, #0]
    4c46:	f000 f805 	bl	4c54 <sendto>
    4c4a:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:921
}
    4c4c:	4618      	mov	r0, r3
    4c4e:	3710      	adds	r7, #16
    4c50:	46bd      	mov	sp, r7
    4c52:	bd80      	pop	{r7, pc}

00004c54 <sendto>:
sendto():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:929
* NAME: sendto
*
* DESCRIPTION: This function sends data to a specific destination. 
*************************************************************************/
int sendto( SOCKET s, char *buf, int len, int flags, const struct sockaddr *to, int tolen )
{
    4c54:	b590      	push	{r4, r7, lr}
    4c56:	b08b      	sub	sp, #44	; 0x2c
    4c58:	af02      	add	r7, sp, #8
    4c5a:	60f8      	str	r0, [r7, #12]
    4c5c:	60b9      	str	r1, [r7, #8]
    4c5e:	607a      	str	r2, [r7, #4]
    4c60:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:932
    fnet_socket_t   *sock;
    int             error;
    int             result = FNET_OK;
    4c62:	2300      	movs	r3, #0
    4c64:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:936

    fnet_os_mutex_lock();

    if((sock = fnet_socket_desc_find(s)) != 0)
    4c66:	68f8      	ldr	r0, [r7, #12]
    4c68:	f7ff fb3c 	bl	42e4 <fnet_socket_desc_find>
    4c6c:	6178      	str	r0, [r7, #20]
    4c6e:	697b      	ldr	r3, [r7, #20]
    4c70:	2b00      	cmp	r3, #0
    4c72:	d04e      	beq.n	4d12 <sendto+0xbe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:939
    {
        
        if((to == FNET_NULL) || (tolen == 0))
    4c74:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    4c76:	2b00      	cmp	r3, #0
    4c78:	d002      	beq.n	4c80 <sendto+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:939 (discriminator 1)
    4c7a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    4c7c:	2b00      	cmp	r3, #0
    4c7e:	d10d      	bne.n	4c9c <sendto+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:941
        {
            if(fnet_socket_addr_is_unspecified(&sock->foreign_addr))
    4c80:	697b      	ldr	r3, [r7, #20]
    4c82:	3354      	adds	r3, #84	; 0x54
    4c84:	4618      	mov	r0, r3
    4c86:	f000 fced 	bl	5664 <fnet_socket_addr_is_unspecified>
    4c8a:	4603      	mov	r3, r0
    4c8c:	2b00      	cmp	r3, #0
    4c8e:	d002      	beq.n	4c96 <sendto+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:943
            {
                error = FNET_ERR_NOTCONN; /* Socket is not connected.*/
    4c90:	2314      	movs	r3, #20
    4c92:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:944
                goto ERROR_SOCK;
    4c94:	e041      	b.n	4d1a <sendto+0xc6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:947
            }
            
            to = FNET_NULL;
    4c96:	2300      	movs	r3, #0
    4c98:	633b      	str	r3, [r7, #48]	; 0x30
    4c9a:	e012      	b.n	4cc2 <sendto+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:951
        }
        else
        {
            if((error = fnet_socket_addr_check_len(to, (unsigned int)tolen)) != FNET_OK)
    4c9c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    4c9e:	6b38      	ldr	r0, [r7, #48]	; 0x30
    4ca0:	4619      	mov	r1, r3
    4ca2:	f000 fc7d 	bl	55a0 <fnet_socket_addr_check_len>
    4ca6:	61f8      	str	r0, [r7, #28]
    4ca8:	69fb      	ldr	r3, [r7, #28]
    4caa:	2b00      	cmp	r3, #0
    4cac:	d000      	beq.n	4cb0 <sendto+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:953
            {
                goto ERROR_SOCK;
    4cae:	e034      	b.n	4d1a <sendto+0xc6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:956
            }     

            if(fnet_socket_addr_is_unspecified(to))
    4cb0:	6b38      	ldr	r0, [r7, #48]	; 0x30
    4cb2:	f000 fcd7 	bl	5664 <fnet_socket_addr_is_unspecified>
    4cb6:	4603      	mov	r3, r0
    4cb8:	2b00      	cmp	r3, #0
    4cba:	d002      	beq.n	4cc2 <sendto+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:958
            {
                error = FNET_ERR_DESTADDRREQ; /* Destination address required.*/
    4cbc:	2307      	movs	r3, #7
    4cbe:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:959
                goto ERROR_SOCK;
    4cc0:	e02b      	b.n	4d1a <sendto+0xc6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:963
            }
        }    
        
        if(buf && (len >= 0))
    4cc2:	68bb      	ldr	r3, [r7, #8]
    4cc4:	2b00      	cmp	r3, #0
    4cc6:	d021      	beq.n	4d0c <sendto+0xb8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:963 (discriminator 1)
    4cc8:	687b      	ldr	r3, [r7, #4]
    4cca:	2b00      	cmp	r3, #0
    4ccc:	db1e      	blt.n	4d0c <sendto+0xb8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:967
        {

            /* If the socket is shutdowned, return.*/
            if(sock->send_buffer.is_shutdown)
    4cce:	697b      	ldr	r3, [r7, #20]
    4cd0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    4cd2:	2b00      	cmp	r3, #0
    4cd4:	d002      	beq.n	4cdc <sendto+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:969
            {
                error = FNET_ERR_SHUTDOWN;
    4cd6:	2315      	movs	r3, #21
    4cd8:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:970
                goto ERROR_SOCK;
    4cda:	e01e      	b.n	4d1a <sendto+0xc6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:973
            }

            if(sock->protocol_interface->socket_api->prot_snd)
    4cdc:	697b      	ldr	r3, [r7, #20]
    4cde:	695b      	ldr	r3, [r3, #20]
    4ce0:	6a1b      	ldr	r3, [r3, #32]
    4ce2:	699b      	ldr	r3, [r3, #24]
    4ce4:	2b00      	cmp	r3, #0
    4ce6:	d00e      	beq.n	4d06 <sendto+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:975
            {
                result = sock->protocol_interface->socket_api->prot_snd(sock, buf, len, flags, to);
    4ce8:	697b      	ldr	r3, [r7, #20]
    4cea:	695b      	ldr	r3, [r3, #20]
    4cec:	6a1b      	ldr	r3, [r3, #32]
    4cee:	699c      	ldr	r4, [r3, #24]
    4cf0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    4cf2:	9300      	str	r3, [sp, #0]
    4cf4:	6978      	ldr	r0, [r7, #20]
    4cf6:	68b9      	ldr	r1, [r7, #8]
    4cf8:	687a      	ldr	r2, [r7, #4]
    4cfa:	683b      	ldr	r3, [r7, #0]
    4cfc:	47a0      	blx	r4
    4cfe:	61b8      	str	r0, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:973
            {
                error = FNET_ERR_SHUTDOWN;
                goto ERROR_SOCK;
            }

            if(sock->protocol_interface->socket_api->prot_snd)
    4d00:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:996
        fnet_error_set(FNET_ERR_BAD_DESC);/* Bad descriptor.*/
        goto ERROR;
    }

    fnet_os_mutex_unlock();
    return (result);
    4d02:	69bb      	ldr	r3, [r7, #24]
    4d04:	e00f      	b.n	4d26 <sendto+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:979
            {
                result = sock->protocol_interface->socket_api->prot_snd(sock, buf, len, flags, to);
            }
            else
            {
                error = FNET_ERR_OPNOTSUPP; /* Operation not supported.*/
    4d06:	230b      	movs	r3, #11
    4d08:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:980
                goto ERROR_SOCK;
    4d0a:	e006      	b.n	4d1a <sendto+0xc6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:985
            }
        }
        else
        {
            error = FNET_ERR_INVAL; /* Invalid argument.*/
    4d0c:	2306      	movs	r3, #6
    4d0e:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:986
            goto ERROR_SOCK;
    4d10:	e003      	b.n	4d1a <sendto+0xc6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:991
        }
    }
    else
    {
        fnet_error_set(FNET_ERR_BAD_DESC);/* Bad descriptor.*/
    4d12:	2001      	movs	r0, #1
    4d14:	f7fc f844 	bl	da0 <fnet_error_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:992
        goto ERROR;
    4d18:	e003      	b.n	4d22 <sendto+0xce>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:999

    fnet_os_mutex_unlock();
    return (result);

ERROR_SOCK:
    fnet_socket_set_error(sock, error);
    4d1a:	6978      	ldr	r0, [r7, #20]
    4d1c:	69f9      	ldr	r1, [r7, #28]
    4d1e:	f7ff fa35 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1003

ERROR:
    fnet_os_mutex_unlock();
    return (SOCKET_ERROR);
    4d22:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1004
}
    4d26:	4618      	mov	r0, r3
    4d28:	3724      	adds	r7, #36	; 0x24
    4d2a:	46bd      	mov	sp, r7
    4d2c:	bd90      	pop	{r4, r7, pc}
    4d2e:	bf00      	nop

00004d30 <recv>:
recv():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1013
* NAME: recv
*
* DESCRIPTION: This function receives data from a connected socket. 
*************************************************************************/
int recv( SOCKET s, char *buf, int len, int flags )
{
    4d30:	b580      	push	{r7, lr}
    4d32:	b086      	sub	sp, #24
    4d34:	af02      	add	r7, sp, #8
    4d36:	60f8      	str	r0, [r7, #12]
    4d38:	60b9      	str	r1, [r7, #8]
    4d3a:	607a      	str	r2, [r7, #4]
    4d3c:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1014
    return recvfrom(s, buf, len, flags, FNET_NULL, FNET_NULL);
    4d3e:	2300      	movs	r3, #0
    4d40:	9300      	str	r3, [sp, #0]
    4d42:	2300      	movs	r3, #0
    4d44:	9301      	str	r3, [sp, #4]
    4d46:	68f8      	ldr	r0, [r7, #12]
    4d48:	68b9      	ldr	r1, [r7, #8]
    4d4a:	687a      	ldr	r2, [r7, #4]
    4d4c:	683b      	ldr	r3, [r7, #0]
    4d4e:	f000 f805 	bl	4d5c <recvfrom>
    4d52:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1015
}
    4d54:	4618      	mov	r0, r3
    4d56:	3710      	adds	r7, #16
    4d58:	46bd      	mov	sp, r7
    4d5a:	bd80      	pop	{r7, pc}

00004d5c <recvfrom>:
recvfrom():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1024
*
* DESCRIPTION: This function reads incoming data of socket and captures 
*              the address from which the data was sent.  
*************************************************************************/
int recvfrom( SOCKET s, char *buf, int len, const int flags, struct sockaddr *from, int *fromlen )
{
    4d5c:	b590      	push	{r4, r7, lr}
    4d5e:	b08b      	sub	sp, #44	; 0x2c
    4d60:	af02      	add	r7, sp, #8
    4d62:	60f8      	str	r0, [r7, #12]
    4d64:	60b9      	str	r1, [r7, #8]
    4d66:	607a      	str	r2, [r7, #4]
    4d68:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1027
    fnet_socket_t   *sock;
    int             error;
    int             result = FNET_OK;
    4d6a:	2300      	movs	r3, #0
    4d6c:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1031

    fnet_os_mutex_lock();

    if((sock = fnet_socket_desc_find(s)) != 0)
    4d6e:	68f8      	ldr	r0, [r7, #12]
    4d70:	f7ff fab8 	bl	42e4 <fnet_socket_desc_find>
    4d74:	6178      	str	r0, [r7, #20]
    4d76:	697b      	ldr	r3, [r7, #20]
    4d78:	2b00      	cmp	r3, #0
    4d7a:	d050      	beq.n	4e1e <recvfrom+0xc2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1033
    {
        if(buf && (len >= 0))
    4d7c:	68bb      	ldr	r3, [r7, #8]
    4d7e:	2b00      	cmp	r3, #0
    4d80:	d04a      	beq.n	4e18 <recvfrom+0xbc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1033 (discriminator 1)
    4d82:	687b      	ldr	r3, [r7, #4]
    4d84:	2b00      	cmp	r3, #0
    4d86:	db47      	blt.n	4e18 <recvfrom+0xbc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1037
        {

            /* The sockets must be bound before calling recv.*/
            if((sock->local_addr.sa_port == 0) && (sock->protocol_interface->type != SOCK_RAW))
    4d88:	697b      	ldr	r3, [r7, #20]
    4d8a:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
    4d8e:	2b00      	cmp	r3, #0
    4d90:	d107      	bne.n	4da2 <recvfrom+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1037 (discriminator 1)
    4d92:	697b      	ldr	r3, [r7, #20]
    4d94:	695b      	ldr	r3, [r3, #20]
    4d96:	799b      	ldrb	r3, [r3, #6]
    4d98:	2b03      	cmp	r3, #3
    4d9a:	d002      	beq.n	4da2 <recvfrom+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1039
            {
                error = FNET_ERR_BOUNDREQ; /* The socket has not been bound with bind().*/
    4d9c:	2305      	movs	r3, #5
    4d9e:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1040
                goto ERROR_SOCK;
    4da0:	e041      	b.n	4e26 <recvfrom+0xca>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1043
            }

            if(from && fromlen)
    4da2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    4da4:	2b00      	cmp	r3, #0
    4da6:	d010      	beq.n	4dca <recvfrom+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1043 (discriminator 1)
    4da8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    4daa:	2b00      	cmp	r3, #0
    4dac:	d00d      	beq.n	4dca <recvfrom+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1045
            {
                if((error = fnet_socket_addr_check_len(&sock->local_addr, (unsigned int)(*fromlen) )) != FNET_OK )
    4dae:	697b      	ldr	r3, [r7, #20]
    4db0:	f103 025c 	add.w	r2, r3, #92	; 0x5c
    4db4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    4db6:	681b      	ldr	r3, [r3, #0]
    4db8:	4610      	mov	r0, r2
    4dba:	4619      	mov	r1, r3
    4dbc:	f000 fbf0 	bl	55a0 <fnet_socket_addr_check_len>
    4dc0:	61f8      	str	r0, [r7, #28]
    4dc2:	69fb      	ldr	r3, [r7, #28]
    4dc4:	2b00      	cmp	r3, #0
    4dc6:	d000      	beq.n	4dca <recvfrom+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1047
                {
                    goto ERROR_SOCK;
    4dc8:	e02d      	b.n	4e26 <recvfrom+0xca>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1052
                }
            }
            
            /* If the socket is shutdowned, return.*/
            if(sock->receive_buffer.is_shutdown)
    4dca:	697b      	ldr	r3, [r7, #20]
    4dcc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    4dce:	2b00      	cmp	r3, #0
    4dd0:	d002      	beq.n	4dd8 <recvfrom+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1054
            {
                error = FNET_ERR_SHUTDOWN;
    4dd2:	2315      	movs	r3, #21
    4dd4:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1055
                goto ERROR_SOCK;
    4dd6:	e026      	b.n	4e26 <recvfrom+0xca>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1058
            }

            if(sock->protocol_interface->socket_api->prot_rcv)
    4dd8:	697b      	ldr	r3, [r7, #20]
    4dda:	695b      	ldr	r3, [r3, #20]
    4ddc:	6a1b      	ldr	r3, [r3, #32]
    4dde:	695b      	ldr	r3, [r3, #20]
    4de0:	2b00      	cmp	r3, #0
    4de2:	d016      	beq.n	4e12 <recvfrom+0xb6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1060
            {
                result = sock->protocol_interface->socket_api->prot_rcv(sock, buf, len, flags, (from && fromlen) ? from : FNET_NULL);
    4de4:	697b      	ldr	r3, [r7, #20]
    4de6:	695b      	ldr	r3, [r3, #20]
    4de8:	6a1b      	ldr	r3, [r3, #32]
    4dea:	695c      	ldr	r4, [r3, #20]
    4dec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    4dee:	2b00      	cmp	r3, #0
    4df0:	d004      	beq.n	4dfc <recvfrom+0xa0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1060 (discriminator 1)
    4df2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    4df4:	2b00      	cmp	r3, #0
    4df6:	d001      	beq.n	4dfc <recvfrom+0xa0>
    4df8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    4dfa:	e000      	b.n	4dfe <recvfrom+0xa2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1060 (discriminator 2)
    4dfc:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1060 (discriminator 3)
    4dfe:	9300      	str	r3, [sp, #0]
    4e00:	6978      	ldr	r0, [r7, #20]
    4e02:	68b9      	ldr	r1, [r7, #8]
    4e04:	687a      	ldr	r2, [r7, #4]
    4e06:	683b      	ldr	r3, [r7, #0]
    4e08:	47a0      	blx	r4
    4e0a:	61b8      	str	r0, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1058 (discriminator 3)
            {
                error = FNET_ERR_SHUTDOWN;
                goto ERROR_SOCK;
            }

            if(sock->protocol_interface->socket_api->prot_rcv)
    4e0c:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1081 (discriminator 3)
        fnet_error_set(FNET_ERR_BAD_DESC);/* Bad descriptor.*/
        goto ERROR;
    }

    fnet_os_mutex_unlock();
    return (result);
    4e0e:	69bb      	ldr	r3, [r7, #24]
    4e10:	e00f      	b.n	4e32 <recvfrom+0xd6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1064
            {
                result = sock->protocol_interface->socket_api->prot_rcv(sock, buf, len, flags, (from && fromlen) ? from : FNET_NULL);
            }
            else
            {
                error = FNET_ERR_OPNOTSUPP; /* Operation not supported.*/
    4e12:	230b      	movs	r3, #11
    4e14:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1065
                goto ERROR_SOCK;
    4e16:	e006      	b.n	4e26 <recvfrom+0xca>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1070
            }
        }
        else
        {
            error = FNET_ERR_INVAL; /* Invalid argument.*/
    4e18:	2306      	movs	r3, #6
    4e1a:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1071
            goto ERROR_SOCK;
    4e1c:	e003      	b.n	4e26 <recvfrom+0xca>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1076
        }
    }
    else
    {
        fnet_error_set(FNET_ERR_BAD_DESC);/* Bad descriptor.*/
    4e1e:	2001      	movs	r0, #1
    4e20:	f7fb ffbe 	bl	da0 <fnet_error_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1077
        goto ERROR;
    4e24:	e003      	b.n	4e2e <recvfrom+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1084

    fnet_os_mutex_unlock();
    return (result);

ERROR_SOCK:
    fnet_socket_set_error(sock, error);
    4e26:	6978      	ldr	r0, [r7, #20]
    4e28:	69f9      	ldr	r1, [r7, #28]
    4e2a:	f7ff f9af 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1088

ERROR:
    fnet_os_mutex_unlock();
    return (SOCKET_ERROR);
    4e2e:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1089
}
    4e32:	4618      	mov	r0, r3
    4e34:	3724      	adds	r7, #36	; 0x24
    4e36:	46bd      	mov	sp, r7
    4e38:	bd90      	pop	{r4, r7, pc}
    4e3a:	bf00      	nop

00004e3c <getsockname>:
getsockname():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1098
*
* DESCRIPTION: This function retrieves the current name 
*              for the specified socket. 
*************************************************************************/
int getsockname( SOCKET s, struct sockaddr *name, int *namelen )
{
    4e3c:	b580      	push	{r7, lr}
    4e3e:	b086      	sub	sp, #24
    4e40:	af00      	add	r7, sp, #0
    4e42:	60f8      	str	r0, [r7, #12]
    4e44:	60b9      	str	r1, [r7, #8]
    4e46:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1104
    fnet_socket_t   *sock;
    int             error;

    fnet_os_mutex_lock();

    if((sock = fnet_socket_desc_find(s)) != 0)
    4e48:	68f8      	ldr	r0, [r7, #12]
    4e4a:	f7ff fa4b 	bl	42e4 <fnet_socket_desc_find>
    4e4e:	6138      	str	r0, [r7, #16]
    4e50:	693b      	ldr	r3, [r7, #16]
    4e52:	2b00      	cmp	r3, #0
    4e54:	d02b      	beq.n	4eae <getsockname+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1106
    {
        if((name == 0) || (namelen == 0))
    4e56:	68bb      	ldr	r3, [r7, #8]
    4e58:	2b00      	cmp	r3, #0
    4e5a:	d002      	beq.n	4e62 <getsockname+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1106 (discriminator 1)
    4e5c:	687b      	ldr	r3, [r7, #4]
    4e5e:	2b00      	cmp	r3, #0
    4e60:	d102      	bne.n	4e68 <getsockname+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1108
        {
            error = FNET_ERR_INVAL;
    4e62:	2306      	movs	r3, #6
    4e64:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1109
            goto ERROR_SOCK;
    4e66:	e026      	b.n	4eb6 <getsockname+0x7a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1112
        }
        
        if((error = fnet_socket_addr_check_len(&sock->local_addr, (unsigned int)(*namelen) )) != FNET_OK )
    4e68:	693b      	ldr	r3, [r7, #16]
    4e6a:	f103 025c 	add.w	r2, r3, #92	; 0x5c
    4e6e:	687b      	ldr	r3, [r7, #4]
    4e70:	681b      	ldr	r3, [r3, #0]
    4e72:	4610      	mov	r0, r2
    4e74:	4619      	mov	r1, r3
    4e76:	f000 fb93 	bl	55a0 <fnet_socket_addr_check_len>
    4e7a:	6178      	str	r0, [r7, #20]
    4e7c:	697b      	ldr	r3, [r7, #20]
    4e7e:	2b00      	cmp	r3, #0
    4e80:	d000      	beq.n	4e84 <getsockname+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1114
        {
            goto ERROR_SOCK;
    4e82:	e018      	b.n	4eb6 <getsockname+0x7a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1117
        }

        if((sock->local_addr.sa_port == 0) && (sock->protocol_interface->type != SOCK_RAW))
    4e84:	693b      	ldr	r3, [r7, #16]
    4e86:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
    4e8a:	2b00      	cmp	r3, #0
    4e8c:	d107      	bne.n	4e9e <getsockname+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1117 (discriminator 1)
    4e8e:	693b      	ldr	r3, [r7, #16]
    4e90:	695b      	ldr	r3, [r3, #20]
    4e92:	799b      	ldrb	r3, [r3, #6]
    4e94:	2b03      	cmp	r3, #3
    4e96:	d002      	beq.n	4e9e <getsockname+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1119
        {
            error = FNET_ERR_BOUNDREQ; /* The socket has not been bound with bind().*/
    4e98:	2305      	movs	r3, #5
    4e9a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1120
            goto ERROR_SOCK;
    4e9c:	e00b      	b.n	4eb6 <getsockname+0x7a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1123
        }
        
        fnet_socket_addr_copy(&sock->local_addr, name);
    4e9e:	693b      	ldr	r3, [r7, #16]
    4ea0:	335c      	adds	r3, #92	; 0x5c
    4ea2:	4618      	mov	r0, r3
    4ea4:	68b9      	ldr	r1, [r7, #8]
    4ea6:	f000 fc45 	bl	5734 <fnet_socket_addr_copy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1132
        fnet_error_set(FNET_ERR_BAD_DESC);/* Bad descriptor.*/
        goto ERROR;
    }

    fnet_os_mutex_unlock();
    return (FNET_OK);
    4eaa:	2300      	movs	r3, #0
    4eac:	e009      	b.n	4ec2 <getsockname+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1127
        
        fnet_socket_addr_copy(&sock->local_addr, name);
    }
    else
    {
        fnet_error_set(FNET_ERR_BAD_DESC);/* Bad descriptor.*/
    4eae:	2001      	movs	r0, #1
    4eb0:	f7fb ff76 	bl	da0 <fnet_error_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1128
        goto ERROR;
    4eb4:	e003      	b.n	4ebe <getsockname+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1135

    fnet_os_mutex_unlock();
    return (FNET_OK);

ERROR_SOCK:
    fnet_socket_set_error(sock, error);
    4eb6:	6938      	ldr	r0, [r7, #16]
    4eb8:	6979      	ldr	r1, [r7, #20]
    4eba:	f7ff f967 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1139

ERROR:
    fnet_os_mutex_unlock();
    return (SOCKET_ERROR);
    4ebe:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1140
}
    4ec2:	4618      	mov	r0, r3
    4ec4:	3718      	adds	r7, #24
    4ec6:	46bd      	mov	sp, r7
    4ec8:	bd80      	pop	{r7, pc}
    4eca:	bf00      	nop

00004ecc <getpeername>:
getpeername():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1149
*
* DESCRIPTION: This function retrieves the name of the peer 
*              connected to the socket
*************************************************************************/
int getpeername( SOCKET s, struct sockaddr *name, int *namelen )
{
    4ecc:	b580      	push	{r7, lr}
    4ece:	b086      	sub	sp, #24
    4ed0:	af00      	add	r7, sp, #0
    4ed2:	60f8      	str	r0, [r7, #12]
    4ed4:	60b9      	str	r1, [r7, #8]
    4ed6:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1155
    fnet_socket_t   *sock;
    int             error;

    fnet_os_mutex_lock();

    if((sock = fnet_socket_desc_find(s)) != 0)
    4ed8:	68f8      	ldr	r0, [r7, #12]
    4eda:	f7ff fa03 	bl	42e4 <fnet_socket_desc_find>
    4ede:	6138      	str	r0, [r7, #16]
    4ee0:	693b      	ldr	r3, [r7, #16]
    4ee2:	2b00      	cmp	r3, #0
    4ee4:	d029      	beq.n	4f3a <getpeername+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1157
    {
        if((name == 0) || (namelen == 0) ) 
    4ee6:	68bb      	ldr	r3, [r7, #8]
    4ee8:	2b00      	cmp	r3, #0
    4eea:	d002      	beq.n	4ef2 <getpeername+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1157 (discriminator 1)
    4eec:	687b      	ldr	r3, [r7, #4]
    4eee:	2b00      	cmp	r3, #0
    4ef0:	d102      	bne.n	4ef8 <getpeername+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1159
        {
            error = FNET_ERR_INVAL;
    4ef2:	2306      	movs	r3, #6
    4ef4:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1160
            goto ERROR_SOCK;
    4ef6:	e024      	b.n	4f42 <getpeername+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1163
        }

        if((error = fnet_socket_addr_check_len(&sock->local_addr, (unsigned int)(*namelen) )) != FNET_OK )
    4ef8:	693b      	ldr	r3, [r7, #16]
    4efa:	f103 025c 	add.w	r2, r3, #92	; 0x5c
    4efe:	687b      	ldr	r3, [r7, #4]
    4f00:	681b      	ldr	r3, [r3, #0]
    4f02:	4610      	mov	r0, r2
    4f04:	4619      	mov	r1, r3
    4f06:	f000 fb4b 	bl	55a0 <fnet_socket_addr_check_len>
    4f0a:	6178      	str	r0, [r7, #20]
    4f0c:	697b      	ldr	r3, [r7, #20]
    4f0e:	2b00      	cmp	r3, #0
    4f10:	d000      	beq.n	4f14 <getpeername+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1165
        {
            goto ERROR_SOCK;
    4f12:	e016      	b.n	4f42 <getpeername+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1168
        }        

        if(fnet_socket_addr_is_unspecified(&sock->foreign_addr))
    4f14:	693b      	ldr	r3, [r7, #16]
    4f16:	3354      	adds	r3, #84	; 0x54
    4f18:	4618      	mov	r0, r3
    4f1a:	f000 fba3 	bl	5664 <fnet_socket_addr_is_unspecified>
    4f1e:	4603      	mov	r3, r0
    4f20:	2b00      	cmp	r3, #0
    4f22:	d002      	beq.n	4f2a <getpeername+0x5e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1170
        {
            error = FNET_ERR_NOTCONN; /* Socket is not connected.*/
    4f24:	2314      	movs	r3, #20
    4f26:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1171
            goto ERROR_SOCK;
    4f28:	e00b      	b.n	4f42 <getpeername+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1174
        }
        
        fnet_socket_addr_copy(&sock->foreign_addr, name);
    4f2a:	693b      	ldr	r3, [r7, #16]
    4f2c:	3354      	adds	r3, #84	; 0x54
    4f2e:	4618      	mov	r0, r3
    4f30:	68b9      	ldr	r1, [r7, #8]
    4f32:	f000 fbff 	bl	5734 <fnet_socket_addr_copy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1183
        fnet_error_set(FNET_ERR_BAD_DESC);/* Bad descriptor.*/
        goto ERROR;
    }

    fnet_os_mutex_unlock();
    return (FNET_OK);
    4f36:	2300      	movs	r3, #0
    4f38:	e009      	b.n	4f4e <getpeername+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1178
        
        fnet_socket_addr_copy(&sock->foreign_addr, name);
    }
    else
    {
        fnet_error_set(FNET_ERR_BAD_DESC);/* Bad descriptor.*/
    4f3a:	2001      	movs	r0, #1
    4f3c:	f7fb ff30 	bl	da0 <fnet_error_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1179
        goto ERROR;
    4f40:	e003      	b.n	4f4a <getpeername+0x7e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1186

    fnet_os_mutex_unlock();
    return (FNET_OK);

ERROR_SOCK:
    fnet_socket_set_error(sock, error);
    4f42:	6938      	ldr	r0, [r7, #16]
    4f44:	6979      	ldr	r1, [r7, #20]
    4f46:	f7ff f921 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1190

ERROR:
    fnet_os_mutex_unlock();
    return (SOCKET_ERROR);
    4f4a:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1191
}
    4f4e:	4618      	mov	r0, r3
    4f50:	3718      	adds	r7, #24
    4f52:	46bd      	mov	sp, r7
    4f54:	bd80      	pop	{r7, pc}
    4f56:	bf00      	nop

00004f58 <setsockopt>:
setsockopt():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1200
*
* DESCRIPTION: This function sets the current value for a socket option 
*              associated with a socket
*************************************************************************/
int setsockopt( SOCKET s, int level, int optname, char *optval, int optlen )
{
    4f58:	b590      	push	{r4, r7, lr}
    4f5a:	b08b      	sub	sp, #44	; 0x2c
    4f5c:	af02      	add	r7, sp, #8
    4f5e:	60f8      	str	r0, [r7, #12]
    4f60:	60b9      	str	r1, [r7, #8]
    4f62:	607a      	str	r2, [r7, #4]
    4f64:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1203
    fnet_socket_t   *sock;
    int             error;
    int             result = FNET_OK;
    4f66:	2300      	movs	r3, #0
    4f68:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1207

    fnet_os_mutex_lock();

    if((sock = fnet_socket_desc_find(s)) != 0)
    4f6a:	68f8      	ldr	r0, [r7, #12]
    4f6c:	f7ff f9ba 	bl	42e4 <fnet_socket_desc_find>
    4f70:	6178      	str	r0, [r7, #20]
    4f72:	697b      	ldr	r3, [r7, #20]
    4f74:	2b00      	cmp	r3, #0
    4f76:	f000 809e 	beq.w	50b6 <setsockopt+0x15e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1209
    {
        if(optval && optlen)
    4f7a:	683b      	ldr	r3, [r7, #0]
    4f7c:	2b00      	cmp	r3, #0
    4f7e:	f000 8097 	beq.w	50b0 <setsockopt+0x158>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1209 (discriminator 1)
    4f82:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    4f84:	2b00      	cmp	r3, #0
    4f86:	f000 8093 	beq.w	50b0 <setsockopt+0x158>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1211
        {
            if(level != SOL_SOCKET)
    4f8a:	68ba      	ldr	r2, [r7, #8]
    4f8c:	f64f 73ff 	movw	r3, #65535	; 0xffff
    4f90:	429a      	cmp	r2, r3
    4f92:	d019      	beq.n	4fc8 <setsockopt+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1213
            {
                if(sock->protocol_interface && sock->protocol_interface->socket_api->prot_setsockopt)
    4f94:	697b      	ldr	r3, [r7, #20]
    4f96:	695b      	ldr	r3, [r3, #20]
    4f98:	2b00      	cmp	r3, #0
    4f9a:	d012      	beq.n	4fc2 <setsockopt+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1213 (discriminator 1)
    4f9c:	697b      	ldr	r3, [r7, #20]
    4f9e:	695b      	ldr	r3, [r3, #20]
    4fa0:	6a1b      	ldr	r3, [r3, #32]
    4fa2:	6a1b      	ldr	r3, [r3, #32]
    4fa4:	2b00      	cmp	r3, #0
    4fa6:	d00c      	beq.n	4fc2 <setsockopt+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1214
                    result = sock->protocol_interface->socket_api->prot_setsockopt(sock, level, optname, optval, optlen);
    4fa8:	697b      	ldr	r3, [r7, #20]
    4faa:	695b      	ldr	r3, [r3, #20]
    4fac:	6a1b      	ldr	r3, [r3, #32]
    4fae:	6a1c      	ldr	r4, [r3, #32]
    4fb0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    4fb2:	9300      	str	r3, [sp, #0]
    4fb4:	6978      	ldr	r0, [r7, #20]
    4fb6:	68b9      	ldr	r1, [r7, #8]
    4fb8:	687a      	ldr	r2, [r7, #4]
    4fba:	683b      	ldr	r3, [r7, #0]
    4fbc:	47a0      	blx	r4
    4fbe:	61b8      	str	r0, [r7, #24]
    4fc0:	e073      	b.n	50aa <setsockopt+0x152>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1217
                else
                {
                    error = FNET_ERR_INVAL; /* Invalid argument.*/
    4fc2:	2306      	movs	r3, #6
    4fc4:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1218
                    goto ERROR_SOCK;
    4fc6:	e07a      	b.n	50be <setsockopt+0x166>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1223
                }
            }
            else
            {
                switch(optname)     /* Socket options processing.*/
    4fc8:	687b      	ldr	r3, [r7, #4]
    4fca:	2b08      	cmp	r3, #8
    4fcc:	d010      	beq.n	4ff0 <setsockopt+0x98>
    4fce:	2b08      	cmp	r3, #8
    4fd0:	dc04      	bgt.n	4fdc <setsockopt+0x84>
    4fd2:	2b02      	cmp	r3, #2
    4fd4:	d034      	beq.n	5040 <setsockopt+0xe8>
    4fd6:	2b04      	cmp	r3, #4
    4fd8:	d032      	beq.n	5040 <setsockopt+0xe8>
    4fda:	e063      	b.n	50a4 <setsockopt+0x14c>
    4fdc:	2b10      	cmp	r3, #16
    4fde:	d02f      	beq.n	5040 <setsockopt+0xe8>
    4fe0:	2b10      	cmp	r3, #16
    4fe2:	db5f      	blt.n	50a4 <setsockopt+0x14c>
    4fe4:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
    4fe8:	3b01      	subs	r3, #1
    4fea:	2b01      	cmp	r3, #1
    4fec:	d85a      	bhi.n	50a4 <setsockopt+0x14c>
    4fee:	e044      	b.n	507a <setsockopt+0x122>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1226
                {
                    case SO_LINGER: /* Linger on close if data present.*/
                      if(optlen != sizeof(struct linger))
    4ff0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    4ff2:	2b04      	cmp	r3, #4
    4ff4:	d002      	beq.n	4ffc <setsockopt+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1228
                      {
                          error = FNET_ERR_INVAL;
    4ff6:	2306      	movs	r3, #6
    4ff8:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1229
                          goto ERROR_SOCK;
    4ffa:	e060      	b.n	50be <setsockopt+0x166>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1232
                      }

                      sock->options.linger = ((struct linger *)optval)->l_linger
    4ffc:	683b      	ldr	r3, [r7, #0]
    4ffe:	885b      	ldrh	r3, [r3, #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1233
                                                 * (1000 / FNET_TIMER_PERIOD_MS);
    5000:	461a      	mov	r2, r3
    5002:	4613      	mov	r3, r2
    5004:	009b      	lsls	r3, r3, #2
    5006:	4413      	add	r3, r2
    5008:	005b      	lsls	r3, r3, #1
    500a:	461a      	mov	r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1232
                      {
                          error = FNET_ERR_INVAL;
                          goto ERROR_SOCK;
                      }

                      sock->options.linger = ((struct linger *)optval)->l_linger
    500c:	697b      	ldr	r3, [r7, #20]
    500e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1235
                                                 * (1000 / FNET_TIMER_PERIOD_MS);

                      if(((struct linger *)optval)->l_onoff)
    5012:	683b      	ldr	r3, [r7, #0]
    5014:	881b      	ldrh	r3, [r3, #0]
    5016:	2b00      	cmp	r3, #0
    5018:	d008      	beq.n	502c <setsockopt+0xd4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1236
                          sock->options.flags |= optname;
    501a:	697b      	ldr	r3, [r7, #20]
    501c:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
    5020:	687b      	ldr	r3, [r7, #4]
    5022:	431a      	orrs	r2, r3
    5024:	697b      	ldr	r3, [r7, #20]
    5026:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1240
                      else
                          sock->options.flags &= ~optname;

                      break;
    502a:	e03e      	b.n	50aa <setsockopt+0x152>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1238
                                                 * (1000 / FNET_TIMER_PERIOD_MS);

                      if(((struct linger *)optval)->l_onoff)
                          sock->options.flags |= optname;
                      else
                          sock->options.flags &= ~optname;
    502c:	697b      	ldr	r3, [r7, #20]
    502e:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
    5032:	687b      	ldr	r3, [r7, #4]
    5034:	43db      	mvns	r3, r3
    5036:	401a      	ands	r2, r3
    5038:	697b      	ldr	r3, [r7, #20]
    503a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1240

                      break;
    503e:	e034      	b.n	50aa <setsockopt+0x152>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1247
                    case SO_KEEPALIVE: /* Keep connections alive.*/
                    case SO_DONTROUTE: /* Just use interface addresses.*/
                #if FNET_CFG_TCP_URGENT                    
                    case SO_OOBINLINE: /* Leave received OOB data in line.*/
                #endif                    
                      if(optlen < sizeof(int))
    5040:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    5042:	2b03      	cmp	r3, #3
    5044:	d802      	bhi.n	504c <setsockopt+0xf4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1249
                      {
                          error = FNET_ERR_INVAL;
    5046:	2306      	movs	r3, #6
    5048:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1250
                          goto ERROR_SOCK;
    504a:	e038      	b.n	50be <setsockopt+0x166>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1253
                      }

                      if(*((int *)optval))
    504c:	683b      	ldr	r3, [r7, #0]
    504e:	681b      	ldr	r3, [r3, #0]
    5050:	2b00      	cmp	r3, #0
    5052:	d008      	beq.n	5066 <setsockopt+0x10e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1254
                          sock->options.flags |= optname;
    5054:	697b      	ldr	r3, [r7, #20]
    5056:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
    505a:	687b      	ldr	r3, [r7, #4]
    505c:	431a      	orrs	r2, r3
    505e:	697b      	ldr	r3, [r7, #20]
    5060:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1258
                      else
                          sock->options.flags &= ~optname;

                      break;
    5064:	e021      	b.n	50aa <setsockopt+0x152>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1256
                      }

                      if(*((int *)optval))
                          sock->options.flags |= optname;
                      else
                          sock->options.flags &= ~optname;
    5066:	697b      	ldr	r3, [r7, #20]
    5068:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
    506c:	687b      	ldr	r3, [r7, #4]
    506e:	43db      	mvns	r3, r3
    5070:	401a      	ands	r2, r3
    5072:	697b      	ldr	r3, [r7, #20]
    5074:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1258

                      break;
    5078:	e017      	b.n	50aa <setsockopt+0x152>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1262

                    case SO_SNDBUF: /* Send buffer size.*/
                    case SO_RCVBUF: /* Receive buffer size.*/
                      if((optlen < sizeof(unsigned long)))
    507a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    507c:	2b03      	cmp	r3, #3
    507e:	d802      	bhi.n	5086 <setsockopt+0x12e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1264
                      {
                          error = FNET_ERR_INVAL;
    5080:	2306      	movs	r3, #6
    5082:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1265
                          goto ERROR_SOCK;
    5084:	e01b      	b.n	50be <setsockopt+0x166>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1268
                      }

                      if(optname == SO_SNDBUF)
    5086:	687a      	ldr	r2, [r7, #4]
    5088:	f241 0301 	movw	r3, #4097	; 0x1001
    508c:	429a      	cmp	r2, r3
    508e:	d104      	bne.n	509a <setsockopt+0x142>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1269
                          sock->send_buffer.count_max = *((unsigned long *)optval);
    5090:	683b      	ldr	r3, [r7, #0]
    5092:	681a      	ldr	r2, [r3, #0]
    5094:	697b      	ldr	r3, [r7, #20]
    5096:	649a      	str	r2, [r3, #72]	; 0x48
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1273
                      else
                          sock->receive_buffer.count_max = *((unsigned long *)optval);

                      break;
    5098:	e007      	b.n	50aa <setsockopt+0x152>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1271
                      }

                      if(optname == SO_SNDBUF)
                          sock->send_buffer.count_max = *((unsigned long *)optval);
                      else
                          sock->receive_buffer.count_max = *((unsigned long *)optval);
    509a:	683b      	ldr	r3, [r7, #0]
    509c:	681a      	ldr	r2, [r3, #0]
    509e:	697b      	ldr	r3, [r7, #20]
    50a0:	639a      	str	r2, [r3, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1273

                      break;
    50a2:	e002      	b.n	50aa <setsockopt+0x152>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1275
                    default:
                      error = FNET_ERR_NOPROTOOPT; /* The option is unknown or unsupported. */
    50a4:	2309      	movs	r3, #9
    50a6:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1276
                      goto ERROR_SOCK;
    50a8:	e009      	b.n	50be <setsockopt+0x166>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1211

    if((sock = fnet_socket_desc_find(s)) != 0)
    {
        if(optval && optlen)
        {
            if(level != SOL_SOCKET)
    50aa:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1293
        fnet_error_set(FNET_ERR_BAD_DESC);/* Bad descriptor.*/
        goto ERROR;
    }

    fnet_os_mutex_unlock();
    return (result);
    50ac:	69bb      	ldr	r3, [r7, #24]
    50ae:	e00c      	b.n	50ca <setsockopt+0x172>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1282
                }
            }
        }
        else
        {
            error = FNET_ERR_INVAL; /* Invalid argument.*/
    50b0:	2306      	movs	r3, #6
    50b2:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1283
            goto ERROR_SOCK;
    50b4:	e003      	b.n	50be <setsockopt+0x166>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1288
        }
    }
    else
    {
        fnet_error_set(FNET_ERR_BAD_DESC);/* Bad descriptor.*/
    50b6:	2001      	movs	r0, #1
    50b8:	f7fb fe72 	bl	da0 <fnet_error_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1289
        goto ERROR;
    50bc:	e003      	b.n	50c6 <setsockopt+0x16e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1296

    fnet_os_mutex_unlock();
    return (result);

ERROR_SOCK:
    fnet_socket_set_error(sock, error);
    50be:	6978      	ldr	r0, [r7, #20]
    50c0:	69f9      	ldr	r1, [r7, #28]
    50c2:	f7ff f863 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1300

ERROR:
    fnet_os_mutex_unlock();
    return (SOCKET_ERROR);
    50c6:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1301
}
    50ca:	4618      	mov	r0, r3
    50cc:	3724      	adds	r7, #36	; 0x24
    50ce:	46bd      	mov	sp, r7
    50d0:	bd90      	pop	{r4, r7, pc}
    50d2:	bf00      	nop

000050d4 <getsockopt>:
getsockopt():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1310
*
* DESCRIPTION: This function retrieves the current value for 
*              a socket option associated with a socket 
*************************************************************************/
int getsockopt( SOCKET s, int level, int optname, char *optval, int *optlen )
{
    50d4:	b590      	push	{r4, r7, lr}
    50d6:	b08b      	sub	sp, #44	; 0x2c
    50d8:	af02      	add	r7, sp, #8
    50da:	60f8      	str	r0, [r7, #12]
    50dc:	60b9      	str	r1, [r7, #8]
    50de:	607a      	str	r2, [r7, #4]
    50e0:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1313
    fnet_socket_t   *sock;
    int             error;
    int             result = FNET_OK;
    50e2:	2300      	movs	r3, #0
    50e4:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1317

    fnet_os_mutex_lock();

    if((sock = fnet_socket_desc_find(s)) != 0)
    50e6:	68f8      	ldr	r0, [r7, #12]
    50e8:	f7ff f8fc 	bl	42e4 <fnet_socket_desc_find>
    50ec:	6178      	str	r0, [r7, #20]
    50ee:	697b      	ldr	r3, [r7, #20]
    50f0:	2b00      	cmp	r3, #0
    50f2:	f000 8123 	beq.w	533c <getsockopt+0x268>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1319
    {
        if(optval && optlen)
    50f6:	683b      	ldr	r3, [r7, #0]
    50f8:	2b00      	cmp	r3, #0
    50fa:	f000 811c 	beq.w	5336 <getsockopt+0x262>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1319 (discriminator 1)
    50fe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    5100:	2b00      	cmp	r3, #0
    5102:	f000 8118 	beq.w	5336 <getsockopt+0x262>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1321
        {
            if(level != SOL_SOCKET)
    5106:	68ba      	ldr	r2, [r7, #8]
    5108:	f64f 73ff 	movw	r3, #65535	; 0xffff
    510c:	429a      	cmp	r2, r3
    510e:	d019      	beq.n	5144 <getsockopt+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1323
            {
                if(sock->protocol_interface && sock->protocol_interface->socket_api->prot_getsockopt)
    5110:	697b      	ldr	r3, [r7, #20]
    5112:	695b      	ldr	r3, [r3, #20]
    5114:	2b00      	cmp	r3, #0
    5116:	d012      	beq.n	513e <getsockopt+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1323 (discriminator 1)
    5118:	697b      	ldr	r3, [r7, #20]
    511a:	695b      	ldr	r3, [r3, #20]
    511c:	6a1b      	ldr	r3, [r3, #32]
    511e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    5120:	2b00      	cmp	r3, #0
    5122:	d00c      	beq.n	513e <getsockopt+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1324
                    result = sock->protocol_interface->socket_api->prot_getsockopt(sock, level, optname, optval, optlen);
    5124:	697b      	ldr	r3, [r7, #20]
    5126:	695b      	ldr	r3, [r3, #20]
    5128:	6a1b      	ldr	r3, [r3, #32]
    512a:	6a5c      	ldr	r4, [r3, #36]	; 0x24
    512c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    512e:	9300      	str	r3, [sp, #0]
    5130:	6978      	ldr	r0, [r7, #20]
    5132:	68b9      	ldr	r1, [r7, #8]
    5134:	687a      	ldr	r2, [r7, #4]
    5136:	683b      	ldr	r3, [r7, #0]
    5138:	47a0      	blx	r4
    513a:	61b8      	str	r0, [r7, #24]
    513c:	e0f8      	b.n	5330 <getsockopt+0x25c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1327
                else
                {
                    error = FNET_ERR_INVAL; /* Invalid argument.*/
    513e:	2306      	movs	r3, #6
    5140:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1328
                    goto ERROR_SOCK;
    5142:	e0ff      	b.n	5344 <getsockopt+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1333
                }
            }
            else
            {
                switch(optname)     /* Socket options processing.*/
    5144:	687b      	ldr	r3, [r7, #4]
    5146:	f241 0202 	movw	r2, #4098	; 0x1002
    514a:	4293      	cmp	r3, r2
    514c:	dc11      	bgt.n	5172 <getsockopt+0x9e>
    514e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    5152:	f300 8081 	bgt.w	5258 <getsockopt+0x184>
    5156:	2b04      	cmp	r3, #4
    5158:	d051      	beq.n	51fe <getsockopt+0x12a>
    515a:	2b04      	cmp	r3, #4
    515c:	dc04      	bgt.n	5168 <getsockopt+0x94>
    515e:	2b01      	cmp	r3, #1
    5160:	d065      	beq.n	522e <getsockopt+0x15a>
    5162:	2b02      	cmp	r3, #2
    5164:	d04b      	beq.n	51fe <getsockopt+0x12a>
    5166:	e0e0      	b.n	532a <getsockopt+0x256>
    5168:	2b08      	cmp	r3, #8
    516a:	d01b      	beq.n	51a4 <getsockopt+0xd0>
    516c:	2b10      	cmp	r3, #16
    516e:	d046      	beq.n	51fe <getsockopt+0x12a>
    5170:	e0db      	b.n	532a <getsockopt+0x256>
    5172:	f241 0207 	movw	r2, #4103	; 0x1007
    5176:	4293      	cmp	r3, r2
    5178:	f000 80c1 	beq.w	52fe <getsockopt+0x22a>
    517c:	f241 0207 	movw	r2, #4103	; 0x1007
    5180:	4293      	cmp	r3, r2
    5182:	dc09      	bgt.n	5198 <getsockopt+0xc4>
    5184:	f241 0203 	movw	r2, #4099	; 0x1003
    5188:	4293      	cmp	r3, r2
    518a:	d07e      	beq.n	528a <getsockopt+0x1b6>
    518c:	f241 0206 	movw	r2, #4102	; 0x1006
    5190:	4293      	cmp	r3, r2
    5192:	f000 80a2 	beq.w	52da <getsockopt+0x206>
    5196:	e0c8      	b.n	532a <getsockopt+0x256>
    5198:	f241 0209 	movw	r2, #4105	; 0x1009
    519c:	4293      	cmp	r3, r2
    519e:	f300 80c4 	bgt.w	532a <getsockopt+0x256>
    51a2:	e081      	b.n	52a8 <getsockopt+0x1d4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1336
                {
                    case SO_LINGER: /* Linger on close if data present.*/
                        if(*optlen < sizeof(struct linger))
    51a4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    51a6:	681b      	ldr	r3, [r3, #0]
    51a8:	2b03      	cmp	r3, #3
    51aa:	d802      	bhi.n	51b2 <getsockopt+0xde>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1338
                        {
                            error = FNET_ERR_INVAL;
    51ac:	2306      	movs	r3, #6
    51ae:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1339
                            goto ERROR_SOCK;
    51b0:	e0c8      	b.n	5344 <getsockopt+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1342
                        }

                        *optlen = sizeof(struct linger);
    51b2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    51b4:	2204      	movs	r2, #4
    51b6:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1344
                        ((struct linger *)optval)->l_onoff
                                = (unsigned short)((sock->options.flags & SO_LINGER) > 0);
    51b8:	697b      	ldr	r3, [r7, #20]
    51ba:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    51be:	f003 0308 	and.w	r3, r3, #8
    51c2:	2b00      	cmp	r3, #0
    51c4:	bfd4      	ite	le
    51c6:	2300      	movle	r3, #0
    51c8:	2301      	movgt	r3, #1
    51ca:	b2db      	uxtb	r3, r3
    51cc:	461a      	mov	r2, r3
    51ce:	683b      	ldr	r3, [r7, #0]
    51d0:	801a      	strh	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1346
                        ((struct linger *)optval)->l_linger
                            = (unsigned short)((sock->options.linger * FNET_TIMER_PERIOD_MS) / 1000);
    51d2:	697b      	ldr	r3, [r7, #20]
    51d4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    51d8:	2264      	movs	r2, #100	; 0x64
    51da:	fb02 f303 	mul.w	r3, r2, r3
    51de:	4a5e      	ldr	r2, [pc, #376]	; (5358 <getsockopt+0x284>)
    51e0:	fb82 1203 	smull	r1, r2, r2, r3
    51e4:	1192      	asrs	r2, r2, #6
    51e6:	17db      	asrs	r3, r3, #31
    51e8:	1ad3      	subs	r3, r2, r3
    51ea:	b29a      	uxth	r2, r3
    51ec:	683b      	ldr	r3, [r7, #0]
    51ee:	805a      	strh	r2, [r3, #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1347
                        sock->options.linger = ((struct linger *)optval)->l_linger;
    51f0:	683b      	ldr	r3, [r7, #0]
    51f2:	885b      	ldrh	r3, [r3, #2]
    51f4:	461a      	mov	r2, r3
    51f6:	697b      	ldr	r3, [r7, #20]
    51f8:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1348
                        break;
    51fc:	e098      	b.n	5330 <getsockopt+0x25c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1355
                    case SO_KEEPALIVE: /* Keep connections alive.*/
                    case SO_DONTROUTE: /* Just use interface addresses.*/
                #if FNET_CFG_TCP_URGENT                    
                    case SO_OOBINLINE: /* Leave received OOB data in line.*/
                #endif                    
                        if(*optlen < sizeof(int))
    51fe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    5200:	681b      	ldr	r3, [r3, #0]
    5202:	2b03      	cmp	r3, #3
    5204:	d802      	bhi.n	520c <getsockopt+0x138>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1357
                        {
                            error = FNET_ERR_INVAL;
    5206:	2306      	movs	r3, #6
    5208:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1358
                            goto ERROR_SOCK;
    520a:	e09b      	b.n	5344 <getsockopt+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1361
                        }

                        *optlen = sizeof(int);
    520c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    520e:	2204      	movs	r2, #4
    5210:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1362
                        *((int*)optval) = (int)((sock->options.flags & optname) > 0);
    5212:	697b      	ldr	r3, [r7, #20]
    5214:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
    5218:	687b      	ldr	r3, [r7, #4]
    521a:	4013      	ands	r3, r2
    521c:	2b00      	cmp	r3, #0
    521e:	bfd4      	ite	le
    5220:	2300      	movle	r3, #0
    5222:	2301      	movgt	r3, #1
    5224:	b2db      	uxtb	r3, r3
    5226:	461a      	mov	r2, r3
    5228:	683b      	ldr	r3, [r7, #0]
    522a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1363
                        break;
    522c:	e080      	b.n	5330 <getsockopt+0x25c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1366

                    case SO_ACCEPTCONN: /* Socket is listening. */
                        if(*optlen < sizeof(int))
    522e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    5230:	681b      	ldr	r3, [r3, #0]
    5232:	2b03      	cmp	r3, #3
    5234:	d802      	bhi.n	523c <getsockopt+0x168>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1368
                        {
                            error = FNET_ERR_INVAL;
    5236:	2306      	movs	r3, #6
    5238:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1369
                            goto ERROR_SOCK;
    523a:	e083      	b.n	5344 <getsockopt+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1372
                        }

                        *optlen = sizeof(int);
    523c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    523e:	2204      	movs	r2, #4
    5240:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1373
                        *((int*)optval) = (int)(sock->state == SS_LISTENING);
    5242:	697b      	ldr	r3, [r7, #20]
    5244:	7b1b      	ldrb	r3, [r3, #12]
    5246:	2b03      	cmp	r3, #3
    5248:	bf14      	ite	ne
    524a:	2300      	movne	r3, #0
    524c:	2301      	moveq	r3, #1
    524e:	b2db      	uxtb	r3, r3
    5250:	461a      	mov	r2, r3
    5252:	683b      	ldr	r3, [r7, #0]
    5254:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1374
                        break;
    5256:	e06b      	b.n	5330 <getsockopt+0x25c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1378

                    case SO_SNDBUF: /* Send buffer size.*/
                    case SO_RCVBUF: /* Receive buffer size.*/
                        if(*optlen < sizeof(unsigned long))
    5258:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    525a:	681b      	ldr	r3, [r3, #0]
    525c:	2b03      	cmp	r3, #3
    525e:	d802      	bhi.n	5266 <getsockopt+0x192>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1380
                        {
                            error = FNET_ERR_INVAL;
    5260:	2306      	movs	r3, #6
    5262:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1381
                            goto ERROR_SOCK;
    5264:	e06e      	b.n	5344 <getsockopt+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1384
                        }

                        *optlen = sizeof(unsigned long);
    5266:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    5268:	2204      	movs	r2, #4
    526a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1386

                        if(optname == SO_SNDBUF)
    526c:	687a      	ldr	r2, [r7, #4]
    526e:	f241 0301 	movw	r3, #4097	; 0x1001
    5272:	429a      	cmp	r2, r3
    5274:	d104      	bne.n	5280 <getsockopt+0x1ac>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1387
                            *((unsigned long*)optval)=sock->send_buffer.count_max;
    5276:	697b      	ldr	r3, [r7, #20]
    5278:	6c9a      	ldr	r2, [r3, #72]	; 0x48
    527a:	683b      	ldr	r3, [r7, #0]
    527c:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1390
                        else
                            *((unsigned long *)optval) = sock->receive_buffer.count_max;
                        break;
    527e:	e057      	b.n	5330 <getsockopt+0x25c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1389
                        *optlen = sizeof(unsigned long);

                        if(optname == SO_SNDBUF)
                            *((unsigned long*)optval)=sock->send_buffer.count_max;
                        else
                            *((unsigned long *)optval) = sock->receive_buffer.count_max;
    5280:	697b      	ldr	r3, [r7, #20]
    5282:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    5284:	683b      	ldr	r3, [r7, #0]
    5286:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1390
                        break;
    5288:	e052      	b.n	5330 <getsockopt+0x25c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1392
                    case SO_STATE: /* State of the socket.*/
                        if(*optlen < sizeof(fnet_socket_state_t))
    528a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    528c:	681b      	ldr	r3, [r3, #0]
    528e:	2b00      	cmp	r3, #0
    5290:	d102      	bne.n	5298 <getsockopt+0x1c4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1394
                        {
                            error = FNET_ERR_INVAL;
    5292:	2306      	movs	r3, #6
    5294:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1395
                            goto ERROR_SOCK;
    5296:	e055      	b.n	5344 <getsockopt+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1398
                        }

                        *optlen = sizeof(fnet_socket_state_t);
    5298:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    529a:	2201      	movs	r2, #1
    529c:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1399
                        *((fnet_socket_state_t*)optval) = sock->state;
    529e:	697b      	ldr	r3, [r7, #20]
    52a0:	7b1a      	ldrb	r2, [r3, #12]
    52a2:	683b      	ldr	r3, [r7, #0]
    52a4:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1400
                        break;
    52a6:	e043      	b.n	5330 <getsockopt+0x25c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1404

                    case SO_RCVNUM:  /* Use to determine the amount of data pending in the network's input buffer that can be read from socket.*/
                    case SO_SNDNUM: /* Use to determine the amount of data in the network's output buffer.*/
                        if(*optlen < sizeof(unsigned long))
    52a8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    52aa:	681b      	ldr	r3, [r3, #0]
    52ac:	2b03      	cmp	r3, #3
    52ae:	d802      	bhi.n	52b6 <getsockopt+0x1e2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1406
                        {
                            error = FNET_ERR_INVAL;
    52b0:	2306      	movs	r3, #6
    52b2:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1407
                            goto ERROR_SOCK;
    52b4:	e046      	b.n	5344 <getsockopt+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1410
                        }

                        *optlen = sizeof(unsigned long);
    52b6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    52b8:	2204      	movs	r2, #4
    52ba:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1412

                        if(optname == SO_RCVNUM)
    52bc:	687a      	ldr	r2, [r7, #4]
    52be:	f241 0308 	movw	r3, #4104	; 0x1008
    52c2:	429a      	cmp	r2, r3
    52c4:	d104      	bne.n	52d0 <getsockopt+0x1fc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1413
                            *((unsigned long*)optval) = sock->receive_buffer.count;
    52c6:	697b      	ldr	r3, [r7, #20]
    52c8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    52ca:	683b      	ldr	r3, [r7, #0]
    52cc:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1416
                        else
                            *((unsigned long *)optval) = sock->send_buffer.count;
                        break;
    52ce:	e02f      	b.n	5330 <getsockopt+0x25c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1415
                        *optlen = sizeof(unsigned long);

                        if(optname == SO_RCVNUM)
                            *((unsigned long*)optval) = sock->receive_buffer.count;
                        else
                            *((unsigned long *)optval) = sock->send_buffer.count;
    52d0:	697b      	ldr	r3, [r7, #20]
    52d2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    52d4:	683b      	ldr	r3, [r7, #0]
    52d6:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1416
                        break;
    52d8:	e02a      	b.n	5330 <getsockopt+0x25c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1418
                    case SO_ERROR: /* Socket error.*/
                        if(*optlen < sizeof(int))
    52da:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    52dc:	681b      	ldr	r3, [r3, #0]
    52de:	2b03      	cmp	r3, #3
    52e0:	d802      	bhi.n	52e8 <getsockopt+0x214>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1420
                        {
                            error = FNET_ERR_INVAL;
    52e2:	2306      	movs	r3, #6
    52e4:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1421
                            goto ERROR_SOCK;
    52e6:	e02d      	b.n	5344 <getsockopt+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1424
                        }

                        *optlen = sizeof(int);
    52e8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    52ea:	2204      	movs	r2, #4
    52ec:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1425
                        *((int *)optval) = sock->options.error;
    52ee:	697b      	ldr	r3, [r7, #20]
    52f0:	6fda      	ldr	r2, [r3, #124]	; 0x7c
    52f2:	683b      	ldr	r3, [r7, #0]
    52f4:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1426
                        sock->options.error = FNET_OK; /* Reset error.*/
    52f6:	697b      	ldr	r3, [r7, #20]
    52f8:	2200      	movs	r2, #0
    52fa:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1427
                        break;
    52fc:	e018      	b.n	5330 <getsockopt+0x25c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1430

                    case SO_TYPE:
                        if(*optlen < sizeof(int))
    52fe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    5300:	681b      	ldr	r3, [r3, #0]
    5302:	2b03      	cmp	r3, #3
    5304:	d802      	bhi.n	530c <getsockopt+0x238>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1432
                        {
                            error = FNET_ERR_INVAL;
    5306:	2306      	movs	r3, #6
    5308:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1433
                            goto ERROR_SOCK;
    530a:	e01b      	b.n	5344 <getsockopt+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1436
                        }

                        *optlen = sizeof(int);
    530c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    530e:	2204      	movs	r2, #4
    5310:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1437
                        *((int *)optval) = (sock->protocol_interface ? sock->protocol_interface->type : 0);
    5312:	697b      	ldr	r3, [r7, #20]
    5314:	695b      	ldr	r3, [r3, #20]
    5316:	2b00      	cmp	r3, #0
    5318:	d003      	beq.n	5322 <getsockopt+0x24e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1437 (discriminator 1)
    531a:	697b      	ldr	r3, [r7, #20]
    531c:	695b      	ldr	r3, [r3, #20]
    531e:	799b      	ldrb	r3, [r3, #6]
    5320:	e000      	b.n	5324 <getsockopt+0x250>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1437 (discriminator 2)
    5322:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1437 (discriminator 3)
    5324:	683a      	ldr	r2, [r7, #0]
    5326:	6013      	str	r3, [r2, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1438 (discriminator 3)
                        break;
    5328:	e002      	b.n	5330 <getsockopt+0x25c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1441

                    default:
                        error = FNET_ERR_NOPROTOOPT; /* The option is unknown or unsupported. */
    532a:	2309      	movs	r3, #9
    532c:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1442
                        goto ERROR_SOCK;
    532e:	e009      	b.n	5344 <getsockopt+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1321

    if((sock = fnet_socket_desc_find(s)) != 0)
    {
        if(optval && optlen)
        {
            if(level != SOL_SOCKET)
    5330:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1459
        fnet_error_set(FNET_ERR_BAD_DESC);/* Bad descriptor.*/
        goto ERROR;
    }

    fnet_os_mutex_unlock();
    return (result);
    5332:	69bb      	ldr	r3, [r7, #24]
    5334:	e00c      	b.n	5350 <getsockopt+0x27c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1448
                }/* case*/
            }/* else */
        }
        else
        {
            error = FNET_ERR_INVAL; /* Invalid argument.*/
    5336:	2306      	movs	r3, #6
    5338:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1449
            goto ERROR_SOCK;
    533a:	e003      	b.n	5344 <getsockopt+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1454
        }
    }
    else
    {
        fnet_error_set(FNET_ERR_BAD_DESC);/* Bad descriptor.*/
    533c:	2001      	movs	r0, #1
    533e:	f7fb fd2f 	bl	da0 <fnet_error_set>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1455
        goto ERROR;
    5342:	e003      	b.n	534c <getsockopt+0x278>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1462

    fnet_os_mutex_unlock();
    return (result);

ERROR_SOCK:
    fnet_socket_set_error(sock, error);
    5344:	6978      	ldr	r0, [r7, #20]
    5346:	69f9      	ldr	r1, [r7, #28]
    5348:	f7fe ff20 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1466

ERROR:
    fnet_os_mutex_unlock();
    return (SOCKET_ERROR);
    534c:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1467
}
    5350:	4618      	mov	r0, r3
    5352:	3724      	adds	r7, #36	; 0x24
    5354:	46bd      	mov	sp, r7
    5356:	bd90      	pop	{r4, r7, pc}
    5358:	10624dd3 	.word	0x10624dd3

0000535c <fnet_socket_buffer_release>:
fnet_socket_buffer_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1475
* NAME: fnet_socket_buffer_release
*
* DESCRIPTION: Discards any buffers in the socket buffer
*************************************************************************/
void fnet_socket_buffer_release( fnet_socket_buffer_t *sb )
{
    535c:	b580      	push	{r7, lr}
    535e:	b084      	sub	sp, #16
    5360:	af00      	add	r7, sp, #0
    5362:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1479
    fnet_netbuf_t   *nb_ptr;
    fnet_netbuf_t   *tmp_nb_ptr;

    fnet_isr_lock();
    5364:	f7fc ff74 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1481

    if(sb && sb->net_buf_chain)
    5368:	687b      	ldr	r3, [r7, #4]
    536a:	2b00      	cmp	r3, #0
    536c:	d018      	beq.n	53a0 <fnet_socket_buffer_release+0x44>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1481 (discriminator 1)
    536e:	687b      	ldr	r3, [r7, #4]
    5370:	689b      	ldr	r3, [r3, #8]
    5372:	2b00      	cmp	r3, #0
    5374:	d014      	beq.n	53a0 <fnet_socket_buffer_release+0x44>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1483
    {
        nb_ptr = sb->net_buf_chain;
    5376:	687b      	ldr	r3, [r7, #4]
    5378:	689b      	ldr	r3, [r3, #8]
    537a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1485

        while(nb_ptr != 0)
    537c:	e007      	b.n	538e <fnet_socket_buffer_release+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1487
        {
            tmp_nb_ptr = nb_ptr->next_chain;
    537e:	68fb      	ldr	r3, [r7, #12]
    5380:	685b      	ldr	r3, [r3, #4]
    5382:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1488
            fnet_netbuf_free_chain(nb_ptr);
    5384:	68f8      	ldr	r0, [r7, #12]
    5386:	f7fd fbbb 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1489
            nb_ptr = tmp_nb_ptr;
    538a:	68bb      	ldr	r3, [r7, #8]
    538c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1485 (discriminator 1)

    if(sb && sb->net_buf_chain)
    {
        nb_ptr = sb->net_buf_chain;

        while(nb_ptr != 0)
    538e:	68fb      	ldr	r3, [r7, #12]
    5390:	2b00      	cmp	r3, #0
    5392:	d1f4      	bne.n	537e <fnet_socket_buffer_release+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1492
            tmp_nb_ptr = nb_ptr->next_chain;
            fnet_netbuf_free_chain(nb_ptr);
            nb_ptr = tmp_nb_ptr;
        }

        sb->net_buf_chain = 0;
    5394:	687b      	ldr	r3, [r7, #4]
    5396:	2200      	movs	r2, #0
    5398:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1493
        sb->count = 0;
    539a:	687b      	ldr	r3, [r7, #4]
    539c:	2200      	movs	r2, #0
    539e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1496
    }

    fnet_isr_unlock();
    53a0:	f7fc ff64 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1497
}
    53a4:	3710      	adds	r7, #16
    53a6:	46bd      	mov	sp, r7
    53a8:	bd80      	pop	{r7, pc}
    53aa:	bf00      	nop

000053ac <fnet_socket_buffer_append_record>:
fnet_socket_buffer_append_record():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1505
* NAME: fnet_socket_buffer_append_record
*
* DESCRIPTION: Append the record to the end of the socket buffer.
*************************************************************************/
int fnet_socket_buffer_append_record( fnet_socket_buffer_t *sb, fnet_netbuf_t *nb )
{
    53ac:	b580      	push	{r7, lr}
    53ae:	b082      	sub	sp, #8
    53b0:	af00      	add	r7, sp, #0
    53b2:	6078      	str	r0, [r7, #4]
    53b4:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1506
    fnet_isr_lock();
    53b6:	f7fc ff4b 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1508

    if((nb->total_length + sb->count) > sb->count_max)
    53ba:	683b      	ldr	r3, [r7, #0]
    53bc:	695a      	ldr	r2, [r3, #20]
    53be:	687b      	ldr	r3, [r7, #4]
    53c0:	681b      	ldr	r3, [r3, #0]
    53c2:	441a      	add	r2, r3
    53c4:	687b      	ldr	r3, [r7, #4]
    53c6:	685b      	ldr	r3, [r3, #4]
    53c8:	429a      	cmp	r2, r3
    53ca:	d904      	bls.n	53d6 <fnet_socket_buffer_append_record+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1510
    {
        fnet_isr_unlock();
    53cc:	f7fc ff4e 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1511
        return FNET_ERR;
    53d0:	f04f 33ff 	mov.w	r3, #4294967295
    53d4:	e012      	b.n	53fc <fnet_socket_buffer_append_record+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1514
    }

    sb->net_buf_chain = fnet_netbuf_concat(sb->net_buf_chain, nb);
    53d6:	687b      	ldr	r3, [r7, #4]
    53d8:	689b      	ldr	r3, [r3, #8]
    53da:	4618      	mov	r0, r3
    53dc:	6839      	ldr	r1, [r7, #0]
    53de:	f7fd fe1b 	bl	3018 <fnet_netbuf_concat>
    53e2:	4602      	mov	r2, r0
    53e4:	687b      	ldr	r3, [r7, #4]
    53e6:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1516

    sb->count += nb->total_length;
    53e8:	687b      	ldr	r3, [r7, #4]
    53ea:	681a      	ldr	r2, [r3, #0]
    53ec:	683b      	ldr	r3, [r7, #0]
    53ee:	695b      	ldr	r3, [r3, #20]
    53f0:	441a      	add	r2, r3
    53f2:	687b      	ldr	r3, [r7, #4]
    53f4:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1517
    fnet_isr_unlock();
    53f6:	f7fc ff39 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1519

    return FNET_OK;
    53fa:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1520
}
    53fc:	4618      	mov	r0, r3
    53fe:	3708      	adds	r7, #8
    5400:	46bd      	mov	sp, r7
    5402:	bd80      	pop	{r7, pc}

00005404 <fnet_socket_buffer_append_address>:
fnet_socket_buffer_append_address():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1530
* DESCRIPTION: Constract net_buf chain  and add it to the queue. 
*              The chain contains the address of the message 
*              and the message data.
*************************************************************************/
int fnet_socket_buffer_append_address( fnet_socket_buffer_t *sb, fnet_netbuf_t *nb, struct sockaddr *addr)
{
    5404:	b580      	push	{r7, lr}
    5406:	b086      	sub	sp, #24
    5408:	af00      	add	r7, sp, #0
    540a:	60f8      	str	r0, [r7, #12]
    540c:	60b9      	str	r1, [r7, #8]
    540e:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1534
    fnet_socket_buffer_addr_t   *sb_address;
    fnet_netbuf_t               *nb_addr;

    fnet_isr_lock();
    5410:	f7fc ff1e 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1536

    if((nb->total_length + sb->count) > sb->count_max)
    5414:	68bb      	ldr	r3, [r7, #8]
    5416:	695a      	ldr	r2, [r3, #20]
    5418:	68fb      	ldr	r3, [r7, #12]
    541a:	681b      	ldr	r3, [r3, #0]
    541c:	441a      	add	r2, r3
    541e:	68fb      	ldr	r3, [r7, #12]
    5420:	685b      	ldr	r3, [r3, #4]
    5422:	429a      	cmp	r2, r3
    5424:	d900      	bls.n	5428 <fnet_socket_buffer_append_address+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1538
    {
        goto ERROR;
    5426:	e027      	b.n	5478 <fnet_socket_buffer_append_address+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1541
    }

    if((nb_addr = fnet_netbuf_new(sizeof(fnet_socket_buffer_addr_t), 0)) == 0)
    5428:	2008      	movs	r0, #8
    542a:	2100      	movs	r1, #0
    542c:	f7fd f94e 	bl	26cc <fnet_netbuf_new>
    5430:	6178      	str	r0, [r7, #20]
    5432:	697b      	ldr	r3, [r7, #20]
    5434:	2b00      	cmp	r3, #0
    5436:	d100      	bne.n	543a <fnet_socket_buffer_append_address+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1543
    {
        goto ERROR;
    5438:	e01e      	b.n	5478 <fnet_socket_buffer_append_address+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1546
    }

    sb_address = (fnet_socket_buffer_addr_t *)nb_addr->data_ptr;
    543a:	697b      	ldr	r3, [r7, #20]
    543c:	68db      	ldr	r3, [r3, #12]
    543e:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1548

    sb_address->addr_s = *addr;
    5440:	693b      	ldr	r3, [r7, #16]
    5442:	687a      	ldr	r2, [r7, #4]
    5444:	6811      	ldr	r1, [r2, #0]
    5446:	6852      	ldr	r2, [r2, #4]
    5448:	6019      	str	r1, [r3, #0]
    544a:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1550

    sb->count += nb->total_length;
    544c:	68fb      	ldr	r3, [r7, #12]
    544e:	681a      	ldr	r2, [r3, #0]
    5450:	68bb      	ldr	r3, [r7, #8]
    5452:	695b      	ldr	r3, [r3, #20]
    5454:	441a      	add	r2, r3
    5456:	68fb      	ldr	r3, [r7, #12]
    5458:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1552

    nb = fnet_netbuf_concat(nb_addr, nb);
    545a:	6978      	ldr	r0, [r7, #20]
    545c:	68b9      	ldr	r1, [r7, #8]
    545e:	f7fd fddb 	bl	3018 <fnet_netbuf_concat>
    5462:	60b8      	str	r0, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1553
    fnet_netbuf_add_chain(&sb->net_buf_chain, nb);
    5464:	68fb      	ldr	r3, [r7, #12]
    5466:	3308      	adds	r3, #8
    5468:	4618      	mov	r0, r3
    546a:	68b9      	ldr	r1, [r7, #8]
    546c:	f7fd fe06 	bl	307c <fnet_netbuf_add_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1554
    fnet_isr_unlock();
    5470:	f7fc fefc 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1559
    
	/* Wake-up user application.*/
 	fnet_os_event_raise(); 

    return FNET_OK;
    5474:	2300      	movs	r3, #0
    5476:	e003      	b.n	5480 <fnet_socket_buffer_append_address+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1562
    
ERROR:  
    fnet_isr_unlock();
    5478:	f7fc fef8 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1563
    return FNET_ERR;  
    547c:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1564
}
    5480:	4618      	mov	r0, r3
    5482:	3718      	adds	r7, #24
    5484:	46bd      	mov	sp, r7
    5486:	bd80      	pop	{r7, pc}

00005488 <fnet_socket_buffer_read_record>:
fnet_socket_buffer_read_record():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1573
*
* DESCRIPTION: This function reads data from socket buffer and 
*              put this data into application buffer. 
*************************************************************************/
int fnet_socket_buffer_read_record( fnet_socket_buffer_t *sb, char *buf, int len, int remove )
{
    5488:	b580      	push	{r7, lr}
    548a:	b084      	sub	sp, #16
    548c:	af00      	add	r7, sp, #0
    548e:	60f8      	str	r0, [r7, #12]
    5490:	60b9      	str	r1, [r7, #8]
    5492:	607a      	str	r2, [r7, #4]
    5494:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1574
    if(sb->net_buf_chain)
    5496:	68fb      	ldr	r3, [r7, #12]
    5498:	689b      	ldr	r3, [r3, #8]
    549a:	2b00      	cmp	r3, #0
    549c:	d025      	beq.n	54ea <fnet_socket_buffer_read_record+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1576
    {
        if(len > sb->net_buf_chain->total_length)
    549e:	687a      	ldr	r2, [r7, #4]
    54a0:	68fb      	ldr	r3, [r7, #12]
    54a2:	689b      	ldr	r3, [r3, #8]
    54a4:	695b      	ldr	r3, [r3, #20]
    54a6:	429a      	cmp	r2, r3
    54a8:	d903      	bls.n	54b2 <fnet_socket_buffer_read_record+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1577
            len = (int)sb->net_buf_chain->total_length;
    54aa:	68fb      	ldr	r3, [r7, #12]
    54ac:	689b      	ldr	r3, [r3, #8]
    54ae:	695b      	ldr	r3, [r3, #20]
    54b0:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1579

        fnet_netbuf_to_buf(sb->net_buf_chain, 0, len, buf);
    54b2:	68fb      	ldr	r3, [r7, #12]
    54b4:	689b      	ldr	r3, [r3, #8]
    54b6:	4618      	mov	r0, r3
    54b8:	2100      	movs	r1, #0
    54ba:	687a      	ldr	r2, [r7, #4]
    54bc:	68bb      	ldr	r3, [r7, #8]
    54be:	f7fd fa7b 	bl	29b8 <fnet_netbuf_to_buf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1581

        if(remove)
    54c2:	683b      	ldr	r3, [r7, #0]
    54c4:	2b00      	cmp	r3, #0
    54c6:	d012      	beq.n	54ee <fnet_socket_buffer_read_record+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1583
        {
            fnet_isr_lock();
    54c8:	f7fc fec2 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1584
            fnet_netbuf_trim(&sb->net_buf_chain, len);
    54cc:	68fb      	ldr	r3, [r7, #12]
    54ce:	3308      	adds	r3, #8
    54d0:	4618      	mov	r0, r3
    54d2:	6879      	ldr	r1, [r7, #4]
    54d4:	f7fd fbf2 	bl	2cbc <fnet_netbuf_trim>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1585
            sb->count -= len;
    54d8:	68fb      	ldr	r3, [r7, #12]
    54da:	681a      	ldr	r2, [r3, #0]
    54dc:	687b      	ldr	r3, [r7, #4]
    54de:	1ad2      	subs	r2, r2, r3
    54e0:	68fb      	ldr	r3, [r7, #12]
    54e2:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1586
            fnet_isr_unlock();
    54e4:	f7fc fec2 	bl	226c <fnet_isr_unlock>
    54e8:	e001      	b.n	54ee <fnet_socket_buffer_read_record+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1590
        }
    }
    else
        len = 0;
    54ea:	2300      	movs	r3, #0
    54ec:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1592

    return len;
    54ee:	687b      	ldr	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1593
}
    54f0:	4618      	mov	r0, r3
    54f2:	3710      	adds	r7, #16
    54f4:	46bd      	mov	sp, r7
    54f6:	bd80      	pop	{r7, pc}

000054f8 <fnet_socket_buffer_read_address>:
fnet_socket_buffer_read_address():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1603
* DESCRIPTION:This function reads data from socket buffer and 
*             put this data into application buffer. 
*             And captures the address information from which the data was sent. 
*************************************************************************/
int fnet_socket_buffer_read_address( fnet_socket_buffer_t *sb, char *buf, int len, struct sockaddr *foreign_addr, int remove )
{
    54f8:	b580      	push	{r7, lr}
    54fa:	b086      	sub	sp, #24
    54fc:	af00      	add	r7, sp, #0
    54fe:	60f8      	str	r0, [r7, #12]
    5500:	60b9      	str	r1, [r7, #8]
    5502:	607a      	str	r2, [r7, #4]
    5504:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1607
    fnet_netbuf_t   *nb;
    fnet_netbuf_t   *nb_addr;

    if(((nb_addr = sb->net_buf_chain) != 0) ) 
    5506:	68fb      	ldr	r3, [r7, #12]
    5508:	689b      	ldr	r3, [r3, #8]
    550a:	617b      	str	r3, [r7, #20]
    550c:	697b      	ldr	r3, [r7, #20]
    550e:	2b00      	cmp	r3, #0
    5510:	d03e      	beq.n	5590 <fnet_socket_buffer_read_address+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1609
    {
        if((nb = nb_addr->next) != 0)
    5512:	697b      	ldr	r3, [r7, #20]
    5514:	681b      	ldr	r3, [r3, #0]
    5516:	613b      	str	r3, [r7, #16]
    5518:	693b      	ldr	r3, [r7, #16]
    551a:	2b00      	cmp	r3, #0
    551c:	d00e      	beq.n	553c <fnet_socket_buffer_read_address+0x44>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1611
        {
            if(len > nb->total_length)
    551e:	687a      	ldr	r2, [r7, #4]
    5520:	693b      	ldr	r3, [r7, #16]
    5522:	695b      	ldr	r3, [r3, #20]
    5524:	429a      	cmp	r2, r3
    5526:	d902      	bls.n	552e <fnet_socket_buffer_read_address+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1612
                len = (int)nb->total_length;
    5528:	693b      	ldr	r3, [r7, #16]
    552a:	695b      	ldr	r3, [r3, #20]
    552c:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1614

            fnet_netbuf_to_buf(nb, 0, len, buf);
    552e:	6938      	ldr	r0, [r7, #16]
    5530:	2100      	movs	r1, #0
    5532:	687a      	ldr	r2, [r7, #4]
    5534:	68bb      	ldr	r3, [r7, #8]
    5536:	f7fd fa3f 	bl	29b8 <fnet_netbuf_to_buf>
    553a:	e001      	b.n	5540 <fnet_socket_buffer_read_address+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1617
        }
        else
            len = 0;
    553c:	2300      	movs	r3, #0
    553e:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1619
        
        *foreign_addr = ((fnet_socket_buffer_addr_t *)(nb_addr->data_ptr))->addr_s;
    5540:	697b      	ldr	r3, [r7, #20]
    5542:	68da      	ldr	r2, [r3, #12]
    5544:	683b      	ldr	r3, [r7, #0]
    5546:	6811      	ldr	r1, [r2, #0]
    5548:	6852      	ldr	r2, [r2, #4]
    554a:	6019      	str	r1, [r3, #0]
    554c:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1621
        
        if(len < (nb_addr->total_length - sizeof(fnet_socket_buffer_addr_t)))
    554e:	687a      	ldr	r2, [r7, #4]
    5550:	697b      	ldr	r3, [r7, #20]
    5552:	695b      	ldr	r3, [r3, #20]
    5554:	3b08      	subs	r3, #8
    5556:	429a      	cmp	r2, r3
    5558:	d202      	bcs.n	5560 <fnet_socket_buffer_read_address+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1622
            len = FNET_ERR;
    555a:	f04f 33ff 	mov.w	r3, #4294967295
    555e:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1624

        if(remove)
    5560:	6a3b      	ldr	r3, [r7, #32]
    5562:	2b00      	cmp	r3, #0
    5564:	d016      	beq.n	5594 <fnet_socket_buffer_read_address+0x9c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1626
        {
            fnet_isr_lock();
    5566:	f7fc fe73 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1628

            if(nb)
    556a:	693b      	ldr	r3, [r7, #16]
    556c:	2b00      	cmp	r3, #0
    556e:	d006      	beq.n	557e <fnet_socket_buffer_read_address+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1629
                sb->count -= nb->total_length;
    5570:	68fb      	ldr	r3, [r7, #12]
    5572:	681a      	ldr	r2, [r3, #0]
    5574:	693b      	ldr	r3, [r7, #16]
    5576:	695b      	ldr	r3, [r3, #20]
    5578:	1ad2      	subs	r2, r2, r3
    557a:	68fb      	ldr	r3, [r7, #12]
    557c:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1630
            fnet_netbuf_del_chain(&sb->net_buf_chain, nb_addr);
    557e:	68fb      	ldr	r3, [r7, #12]
    5580:	3308      	adds	r3, #8
    5582:	4618      	mov	r0, r3
    5584:	6979      	ldr	r1, [r7, #20]
    5586:	f7fd fd99 	bl	30bc <fnet_netbuf_del_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1632
            
            fnet_isr_unlock();
    558a:	f7fc fe6f 	bl	226c <fnet_isr_unlock>
    558e:	e001      	b.n	5594 <fnet_socket_buffer_read_address+0x9c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1636
        }
    }
    else
        len = 0;
    5590:	2300      	movs	r3, #0
    5592:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1638
 
    return len;
    5594:	687b      	ldr	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1639
}
    5596:	4618      	mov	r0, r3
    5598:	3718      	adds	r7, #24
    559a:	46bd      	mov	sp, r7
    559c:	bd80      	pop	{r7, pc}
    559e:	bf00      	nop

000055a0 <fnet_socket_addr_check_len>:
fnet_socket_addr_check_len():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1647
* NAME: fnet_socket_addr_check_len
*
* DESCRIPTION: This function check sockaddr structure and its size.
*************************************************************************/
static int fnet_socket_addr_check_len(const struct sockaddr *addr, unsigned int addr_len )
{
    55a0:	b480      	push	{r7}
    55a2:	b085      	sub	sp, #20
    55a4:	af00      	add	r7, sp, #0
    55a6:	6078      	str	r0, [r7, #4]
    55a8:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1648
    int result = FNET_OK;
    55aa:	2300      	movs	r3, #0
    55ac:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1650
    
    if(addr && addr_len)
    55ae:	687b      	ldr	r3, [r7, #4]
    55b0:	2b00      	cmp	r3, #0
    55b2:	d012      	beq.n	55da <fnet_socket_addr_check_len+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1650 (discriminator 1)
    55b4:	683b      	ldr	r3, [r7, #0]
    55b6:	2b00      	cmp	r3, #0
    55b8:	d00f      	beq.n	55da <fnet_socket_addr_check_len+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1664
        }
        else
#endif /* FNET_CFG_IP4 */

#if FNET_CFG_IP4
        if(addr->sa_family & AF_INET)
    55ba:	687b      	ldr	r3, [r7, #4]
    55bc:	881b      	ldrh	r3, [r3, #0]
    55be:	f003 0301 	and.w	r3, r3, #1
    55c2:	2b00      	cmp	r3, #0
    55c4:	d005      	beq.n	55d2 <fnet_socket_addr_check_len+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1666
        {
            if(addr_len < sizeof(struct sockaddr_in))
    55c6:	683b      	ldr	r3, [r7, #0]
    55c8:	2b07      	cmp	r3, #7
    55ca:	d805      	bhi.n	55d8 <fnet_socket_addr_check_len+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1668
            {
                result = FNET_ERR_INVAL;    /* Invalid argument.*/
    55cc:	2306      	movs	r3, #6
    55ce:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1664
        }
        else
#endif /* FNET_CFG_IP4 */

#if FNET_CFG_IP4
        if(addr->sa_family & AF_INET)
    55d0:	e005      	b.n	55de <fnet_socket_addr_check_len+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1674
            }
        }
        else
#endif /* FNET_CFG_IP4 */
        {
            result = FNET_ERR_AFNOSUPPORT; 
    55d2:	230c      	movs	r3, #12
    55d4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1664
        }
        else
#endif /* FNET_CFG_IP4 */

#if FNET_CFG_IP4
        if(addr->sa_family & AF_INET)
    55d6:	e002      	b.n	55de <fnet_socket_addr_check_len+0x3e>
    55d8:	e001      	b.n	55de <fnet_socket_addr_check_len+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1679
            result = FNET_ERR_AFNOSUPPORT; 
        }
    }
    else
    {
        result = FNET_ERR_INVAL;
    55da:	2306      	movs	r3, #6
    55dc:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1682
    }

    return result;
    55de:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1683
}
    55e0:	4618      	mov	r0, r3
    55e2:	3714      	adds	r7, #20
    55e4:	46bd      	mov	sp, r7
    55e6:	f85d 7b04 	ldr.w	r7, [sp], #4
    55ea:	4770      	bx	lr

000055ec <fnet_socket_addr_is_multicast>:
fnet_socket_addr_is_multicast():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1691
* NAME: fnet_socket_addr_is_multicast
*
* DESCRIPTION: Returns FNET_FALSE if the address is not multicast.
*************************************************************************/
int fnet_socket_addr_is_multicast(const struct sockaddr *addr)
{
    55ec:	b480      	push	{r7}
    55ee:	b085      	sub	sp, #20
    55f0:	af00      	add	r7, sp, #0
    55f2:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1692
    int     result = FNET_FALSE;
    55f4:	2300      	movs	r3, #0
    55f6:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1694
    
    if(addr)
    55f8:	687b      	ldr	r3, [r7, #4]
    55fa:	2b00      	cmp	r3, #0
    55fc:	d00f      	beq.n	561e <fnet_socket_addr_is_multicast+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1705
        }
        else
#endif /* FNET_CFG_IP4 */

#if FNET_CFG_IP4
        if(addr->sa_family & AF_INET)
    55fe:	687b      	ldr	r3, [r7, #4]
    5600:	881b      	ldrh	r3, [r3, #0]
    5602:	f003 0301 	and.w	r3, r3, #1
    5606:	2b00      	cmp	r3, #0
    5608:	d009      	beq.n	561e <fnet_socket_addr_is_multicast+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1707
        {
            result = FNET_IP4_ADDR_IS_MULTICAST( ((struct sockaddr_in *)addr)->sin_addr.s_addr);
    560a:	687b      	ldr	r3, [r7, #4]
    560c:	685b      	ldr	r3, [r3, #4]
    560e:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    5612:	2be0      	cmp	r3, #224	; 0xe0
    5614:	bf14      	ite	ne
    5616:	2300      	movne	r3, #0
    5618:	2301      	moveq	r3, #1
    561a:	b2db      	uxtb	r3, r3
    561c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1714
        else
#endif /* FNET_CFG_IP4 */
        {};
    }

    return result;
    561e:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1715
}
    5620:	4618      	mov	r0, r3
    5622:	3714      	adds	r7, #20
    5624:	46bd      	mov	sp, r7
    5626:	f85d 7b04 	ldr.w	r7, [sp], #4
    562a:	4770      	bx	lr

0000562c <fnet_socket_addr_is_broadcast>:
fnet_socket_addr_is_broadcast():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1723
* NAME: fnet_socket_addr_is_broadcast
*
* DESCRIPTION: Returns FNET_FALSE if the address is not broadcast.
*************************************************************************/
int fnet_socket_addr_is_broadcast(const struct sockaddr *addr, fnet_netif_t *netif)
{
    562c:	b580      	push	{r7, lr}
    562e:	b084      	sub	sp, #16
    5630:	af00      	add	r7, sp, #0
    5632:	6078      	str	r0, [r7, #4]
    5634:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1724
    int result = FNET_FALSE;
    5636:	2300      	movs	r3, #0
    5638:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1727
    
#if FNET_CFG_IP4
    if(addr)
    563a:	687b      	ldr	r3, [r7, #4]
    563c:	2b00      	cmp	r3, #0
    563e:	d00c      	beq.n	565a <fnet_socket_addr_is_broadcast+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1729
    {
        if(addr->sa_family & AF_INET)
    5640:	687b      	ldr	r3, [r7, #4]
    5642:	881b      	ldrh	r3, [r3, #0]
    5644:	f003 0301 	and.w	r3, r3, #1
    5648:	2b00      	cmp	r3, #0
    564a:	d006      	beq.n	565a <fnet_socket_addr_is_broadcast+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1731
        {
            result = fnet_ip_addr_is_broadcast( ((struct sockaddr_in *)addr)->sin_addr.s_addr, netif );
    564c:	687b      	ldr	r3, [r7, #4]
    564e:	685b      	ldr	r3, [r3, #4]
    5650:	4618      	mov	r0, r3
    5652:	6839      	ldr	r1, [r7, #0]
    5654:	f7fc fb7a 	bl	1d4c <fnet_ip_addr_is_broadcast>
    5658:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1739
#else
    FNET_COMP_UNUSED_ARG(netif);
    FNET_COMP_UNUSED_ARG(addr);
#endif /* FNET_CFG_IP4 */

    return result;
    565a:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1740
}
    565c:	4618      	mov	r0, r3
    565e:	3710      	adds	r7, #16
    5660:	46bd      	mov	sp, r7
    5662:	bd80      	pop	{r7, pc}

00005664 <fnet_socket_addr_is_unspecified>:
fnet_socket_addr_is_unspecified():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1748
* NAME: fnet_socket_addr_is_unspecified
*
* DESCRIPTION: Returns FNET_FALSE if the address is not specified.
*************************************************************************/
int fnet_socket_addr_is_unspecified(const struct sockaddr *addr)
{
    5664:	b480      	push	{r7}
    5666:	b085      	sub	sp, #20
    5668:	af00      	add	r7, sp, #0
    566a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1749
    int result = FNET_TRUE;
    566c:	2301      	movs	r3, #1
    566e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1751
    
    if(addr)
    5670:	687b      	ldr	r3, [r7, #4]
    5672:	2b00      	cmp	r3, #0
    5674:	d00d      	beq.n	5692 <fnet_socket_addr_is_unspecified+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1761
            result = FNET_IP6_ADDR_IS_UNSPECIFIED( &((struct sockaddr_in6 *)addr)->sin6_addr.s6_addr);
        }
        else
#endif /* FNET_CFG_IP4 */
#if FNET_CFG_IP4
        if(addr->sa_family & AF_INET)
    5676:	687b      	ldr	r3, [r7, #4]
    5678:	881b      	ldrh	r3, [r3, #0]
    567a:	f003 0301 	and.w	r3, r3, #1
    567e:	2b00      	cmp	r3, #0
    5680:	d007      	beq.n	5692 <fnet_socket_addr_is_unspecified+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1763
        {
            result = FNET_IP4_ADDR_IS_UNSPECIFIED( ((struct sockaddr_in *)addr)->sin_addr.s_addr);
    5682:	687b      	ldr	r3, [r7, #4]
    5684:	685b      	ldr	r3, [r3, #4]
    5686:	2b00      	cmp	r3, #0
    5688:	bf14      	ite	ne
    568a:	2300      	movne	r3, #0
    568c:	2301      	moveq	r3, #1
    568e:	b2db      	uxtb	r3, r3
    5690:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1770
        else
#endif /* FNET_CFG_IP4 */
        {};
    }

    return result;
    5692:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1771
}
    5694:	4618      	mov	r0, r3
    5696:	3714      	adds	r7, #20
    5698:	46bd      	mov	sp, r7
    569a:	f85d 7b04 	ldr.w	r7, [sp], #4
    569e:	4770      	bx	lr

000056a0 <fnet_socket_addr_are_equal>:
fnet_socket_addr_are_equal():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1779
* NAME: fnet_socket_addr_are_equal
*
* DESCRIPTION: Returns FNET_FALSE if the addresses are not equal.
*************************************************************************/
int fnet_socket_addr_are_equal(const struct sockaddr *addr1, const struct sockaddr *addr2 )
{
    56a0:	b480      	push	{r7}
    56a2:	b085      	sub	sp, #20
    56a4:	af00      	add	r7, sp, #0
    56a6:	6078      	str	r0, [r7, #4]
    56a8:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1780
    int result = FNET_FALSE;
    56aa:	2300      	movs	r3, #0
    56ac:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1782
    
    if(addr1 && addr2 && (addr1->sa_family == addr2->sa_family))
    56ae:	687b      	ldr	r3, [r7, #4]
    56b0:	2b00      	cmp	r3, #0
    56b2:	d018      	beq.n	56e6 <fnet_socket_addr_are_equal+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1782 (discriminator 1)
    56b4:	683b      	ldr	r3, [r7, #0]
    56b6:	2b00      	cmp	r3, #0
    56b8:	d015      	beq.n	56e6 <fnet_socket_addr_are_equal+0x46>
    56ba:	687b      	ldr	r3, [r7, #4]
    56bc:	881a      	ldrh	r2, [r3, #0]
    56be:	683b      	ldr	r3, [r7, #0]
    56c0:	881b      	ldrh	r3, [r3, #0]
    56c2:	429a      	cmp	r2, r3
    56c4:	d10f      	bne.n	56e6 <fnet_socket_addr_are_equal+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1792
            result =  FNET_IP6_ADDR_EQUAL( &((struct sockaddr_in6 *)addr1)->sin6_addr.s6_addr, &((struct sockaddr_in6 *)addr2)->sin6_addr.s6_addr);
        }
        else
#endif /* FNET_CFG_IP4 */
#if FNET_CFG_IP4
        if(addr1->sa_family & AF_INET)
    56c6:	687b      	ldr	r3, [r7, #4]
    56c8:	881b      	ldrh	r3, [r3, #0]
    56ca:	f003 0301 	and.w	r3, r3, #1
    56ce:	2b00      	cmp	r3, #0
    56d0:	d009      	beq.n	56e6 <fnet_socket_addr_are_equal+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1794
        {
            result = (((struct sockaddr_in *)addr1)->sin_addr.s_addr == (((struct sockaddr_in *)addr2)->sin_addr.s_addr));
    56d2:	687b      	ldr	r3, [r7, #4]
    56d4:	685a      	ldr	r2, [r3, #4]
    56d6:	683b      	ldr	r3, [r7, #0]
    56d8:	685b      	ldr	r3, [r3, #4]
    56da:	429a      	cmp	r2, r3
    56dc:	bf14      	ite	ne
    56de:	2300      	movne	r3, #0
    56e0:	2301      	moveq	r3, #1
    56e2:	b2db      	uxtb	r3, r3
    56e4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1801
        else
#endif /* FNET_CFG_IP4 */
        {};
    }

    return result;
    56e6:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1802
}
    56e8:	4618      	mov	r0, r3
    56ea:	3714      	adds	r7, #20
    56ec:	46bd      	mov	sp, r7
    56ee:	f85d 7b04 	ldr.w	r7, [sp], #4
    56f2:	4770      	bx	lr

000056f4 <fnet_socket_ip_addr_copy>:
fnet_socket_ip_addr_copy():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1810
* NAME: fnet_socket_ip_addr_copy
*
* DESCRIPTION: 
*************************************************************************/
void fnet_socket_ip_addr_copy(const struct sockaddr *from_addr, struct sockaddr *to_addr)
{
    56f4:	b480      	push	{r7}
    56f6:	b083      	sub	sp, #12
    56f8:	af00      	add	r7, sp, #0
    56fa:	6078      	str	r0, [r7, #4]
    56fc:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1812
   
    if(from_addr && to_addr && (to_addr->sa_family == from_addr->sa_family))
    56fe:	687b      	ldr	r3, [r7, #4]
    5700:	2b00      	cmp	r3, #0
    5702:	d012      	beq.n	572a <fnet_socket_ip_addr_copy+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1812 (discriminator 1)
    5704:	683b      	ldr	r3, [r7, #0]
    5706:	2b00      	cmp	r3, #0
    5708:	d00f      	beq.n	572a <fnet_socket_ip_addr_copy+0x36>
    570a:	683b      	ldr	r3, [r7, #0]
    570c:	881a      	ldrh	r2, [r3, #0]
    570e:	687b      	ldr	r3, [r7, #4]
    5710:	881b      	ldrh	r3, [r3, #0]
    5712:	429a      	cmp	r2, r3
    5714:	d109      	bne.n	572a <fnet_socket_ip_addr_copy+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1822
            FNET_IP6_ADDR_COPY(&((struct sockaddr_in6 *)from_addr)->sin6_addr.s6_addr, &((struct sockaddr_in6 *)to_addr)->sin6_addr.s6_addr);
        }
        else
#endif /* FNET_CFG_IP4 */
#if FNET_CFG_IP4
        if(from_addr->sa_family & AF_INET)
    5716:	687b      	ldr	r3, [r7, #4]
    5718:	881b      	ldrh	r3, [r3, #0]
    571a:	f003 0301 	and.w	r3, r3, #1
    571e:	2b00      	cmp	r3, #0
    5720:	d003      	beq.n	572a <fnet_socket_ip_addr_copy+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1824
        {
            ((struct sockaddr_in *)to_addr)->sin_addr.s_addr = ((struct sockaddr_in *)from_addr)->sin_addr.s_addr;
    5722:	687b      	ldr	r3, [r7, #4]
    5724:	685a      	ldr	r2, [r3, #4]
    5726:	683b      	ldr	r3, [r7, #0]
    5728:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1830
        }
        else
#endif /* FNET_CFG_IP4 */
        {};
    }
}
    572a:	370c      	adds	r7, #12
    572c:	46bd      	mov	sp, r7
    572e:	f85d 7b04 	ldr.w	r7, [sp], #4
    5732:	4770      	bx	lr

00005734 <fnet_socket_addr_copy>:
fnet_socket_addr_copy():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1838
* NAME: fnet_socket_addr_copy
*
* DESCRIPTION: 
*************************************************************************/
void fnet_socket_addr_copy(const struct sockaddr *from_addr, struct sockaddr *to_addr)
{
    5734:	b580      	push	{r7, lr}
    5736:	b082      	sub	sp, #8
    5738:	af00      	add	r7, sp, #0
    573a:	6078      	str	r0, [r7, #4]
    573c:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1839
    if(from_addr && to_addr)
    573e:	687b      	ldr	r3, [r7, #4]
    5740:	2b00      	cmp	r3, #0
    5742:	d00d      	beq.n	5760 <fnet_socket_addr_copy+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1839 (discriminator 1)
    5744:	683b      	ldr	r3, [r7, #0]
    5746:	2b00      	cmp	r3, #0
    5748:	d00a      	beq.n	5760 <fnet_socket_addr_copy+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1849
            fnet_memcpy(to_addr, from_addr, sizeof(struct sockaddr_in6));
        }
        else
#endif /* FNET_CFG_IP4 */
#if FNET_CFG_IP4
        if(from_addr->sa_family & AF_INET)
    574a:	687b      	ldr	r3, [r7, #4]
    574c:	881b      	ldrh	r3, [r3, #0]
    574e:	f003 0301 	and.w	r3, r3, #1
    5752:	2b00      	cmp	r3, #0
    5754:	d004      	beq.n	5760 <fnet_socket_addr_copy+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1851
        {
            fnet_memcpy(to_addr, from_addr, sizeof(struct sockaddr_in));
    5756:	6838      	ldr	r0, [r7, #0]
    5758:	6879      	ldr	r1, [r7, #4]
    575a:	2208      	movs	r2, #8
    575c:	f000 f89a 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1857
        }
        else
#endif /* FNET_CFG_IP4 */
        {};
    }
}
    5760:	3708      	adds	r7, #8
    5762:	46bd      	mov	sp, r7
    5764:	bd80      	pop	{r7, pc}
    5766:	bf00      	nop

00005768 <fnet_socket_addr_route>:
fnet_socket_addr_route():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1865
* NAME: fnet_socket_addr_route
*
* DESCRIPTION: 
*************************************************************************/
fnet_netif_t *fnet_socket_addr_route(const struct sockaddr *dest_addr)
{
    5768:	b580      	push	{r7, lr}
    576a:	b084      	sub	sp, #16
    576c:	af00      	add	r7, sp, #0
    576e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1866
    fnet_netif_t *result = FNET_NULL;
    5770:	2300      	movs	r3, #0
    5772:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1868
   
    if(dest_addr) 
    5774:	687b      	ldr	r3, [r7, #4]
    5776:	2b00      	cmp	r3, #0
    5778:	d00a      	beq.n	5790 <fnet_socket_addr_route+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1870
    {
        switch(dest_addr->sa_family)
    577a:	687b      	ldr	r3, [r7, #4]
    577c:	881b      	ldrh	r3, [r3, #0]
    577e:	2b01      	cmp	r3, #1
    5780:	d106      	bne.n	5790 <fnet_socket_addr_route+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1874
        {
#if FNET_CFG_IP4
            case AF_INET:
                result = fnet_ip_route(((struct sockaddr_in *)dest_addr)->sin_addr.s_addr);
    5782:	687b      	ldr	r3, [r7, #4]
    5784:	685b      	ldr	r3, [r3, #4]
    5786:	4618      	mov	r0, r3
    5788:	f7fc f89c 	bl	18c4 <fnet_ip_route>
    578c:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1875
                break;
    578e:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1896
                break;
#endif /* FNET_CFG_IP6 */
        }
    }
    
    return result;
    5790:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_socket.c:1897
}
    5792:	4618      	mov	r0, r3
    5794:	3710      	adds	r7, #16
    5796:	46bd      	mov	sp, r7
    5798:	bd80      	pop	{r7, pc}
    579a:	bf00      	nop

0000579c <fnet_init>:
fnet_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:61
* NAME: fnet_init
*
* DESCRIPTION: 
*************************************************************************/
int fnet_init( struct fnet_init_params *init_params )
{
    579c:	b580      	push	{r7, lr}
    579e:	b084      	sub	sp, #16
    57a0:	af00      	add	r7, sp, #0
    57a2:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:62
    int result = FNET_ERR;
    57a4:	f04f 33ff 	mov.w	r3, #4294967295
    57a8:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:64

    if(init_params 
    57aa:	687b      	ldr	r3, [r7, #4]
    57ac:	2b00      	cmp	r3, #0
    57ae:	d018      	beq.n	57e2 <fnet_init+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:70
        && (fnet_os_mutex_init() == FNET_OK)
        && (fnet_os_event_init() == FNET_OK))
    {
        fnet_os_mutex_lock();

        if(fnet_enabled == 0) /* Is enabled already?. */
    57b0:	4b0e      	ldr	r3, [pc, #56]	; (57ec <fnet_init+0x50>)
    57b2:	681b      	ldr	r3, [r3, #0]
    57b4:	2b00      	cmp	r3, #0
    57b6:	d114      	bne.n	57e2 <fnet_init+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:72
        {
            if((result = fnet_heap_init(init_params->netheap_ptr, init_params->netheap_size)) == FNET_OK )
    57b8:	687b      	ldr	r3, [r7, #4]
    57ba:	681a      	ldr	r2, [r3, #0]
    57bc:	687b      	ldr	r3, [r7, #4]
    57be:	685b      	ldr	r3, [r3, #4]
    57c0:	4610      	mov	r0, r2
    57c2:	4619      	mov	r1, r3
    57c4:	f7fd fcb2 	bl	312c <fnet_heap_init>
    57c8:	60f8      	str	r0, [r7, #12]
    57ca:	68fb      	ldr	r3, [r7, #12]
    57cc:	2b00      	cmp	r3, #0
    57ce:	d108      	bne.n	57e2 <fnet_init+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:73
              if((result = fnet_stack_init()) == FNET_OK)
    57d0:	f000 f830 	bl	5834 <fnet_stack_init>
    57d4:	60f8      	str	r0, [r7, #12]
    57d6:	68fb      	ldr	r3, [r7, #12]
    57d8:	2b00      	cmp	r3, #0
    57da:	d102      	bne.n	57e2 <fnet_init+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:74
                fnet_enabled = 1; /* Mark the stack is enabled. */
    57dc:	4b03      	ldr	r3, [pc, #12]	; (57ec <fnet_init+0x50>)
    57de:	2201      	movs	r2, #1
    57e0:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:80
        }

        fnet_os_mutex_unlock();
    }

    return result;
    57e2:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:81
}
    57e4:	4618      	mov	r0, r3
    57e6:	3710      	adds	r7, #16
    57e8:	46bd      	mov	sp, r7
    57ea:	bd80      	pop	{r7, pc}
    57ec:	10000764 	.word	0x10000764

000057f0 <fnet_init_static>:
fnet_init_static():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:89
* NAME: fnet_init_static
*
* DESCRIPTION: 
*************************************************************************/
int fnet_init_static()
{
    57f0:	b580      	push	{r7, lr}
    57f2:	b082      	sub	sp, #8
    57f4:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:93
    static unsigned char heap[FNET_CFG_HEAP_SIZE];
    struct fnet_init_params init_params;

    init_params.netheap_ptr = heap;
    57f6:	4b07      	ldr	r3, [pc, #28]	; (5814 <fnet_init_static+0x24>)
    57f8:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:94
    init_params.netheap_size = FNET_CFG_HEAP_SIZE;
    57fa:	f44f 5370 	mov.w	r3, #15360	; 0x3c00
    57fe:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:96

    return fnet_init(&init_params);
    5800:	463b      	mov	r3, r7
    5802:	4618      	mov	r0, r3
    5804:	f7ff ffca 	bl	579c <fnet_init>
    5808:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:97
}
    580a:	4618      	mov	r0, r3
    580c:	3708      	adds	r7, #8
    580e:	46bd      	mov	sp, r7
    5810:	bd80      	pop	{r7, pc}
    5812:	bf00      	nop
    5814:	10000790 	.word	0x10000790

00005818 <fnet_release>:
fnet_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:105
* NAME: fnet_release
*
* DESCRIPTION: 
*************************************************************************/
void fnet_release()
{
    5818:	b580      	push	{r7, lr}
    581a:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:108
    fnet_os_mutex_lock();

    if(fnet_enabled)
    581c:	4b04      	ldr	r3, [pc, #16]	; (5830 <fnet_release+0x18>)
    581e:	681b      	ldr	r3, [r3, #0]
    5820:	2b00      	cmp	r3, #0
    5822:	d004      	beq.n	582e <fnet_release+0x16>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:110
    {
        fnet_stack_release();
    5824:	f000 f82a 	bl	587c <fnet_stack_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:111
        fnet_enabled = 0;
    5828:	4b01      	ldr	r3, [pc, #4]	; (5830 <fnet_release+0x18>)
    582a:	2200      	movs	r2, #0
    582c:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:117
    }

    fnet_os_mutex_unlock();

    fnet_os_mutex_release();
}
    582e:	bd80      	pop	{r7, pc}
    5830:	10000764 	.word	0x10000764

00005834 <fnet_stack_init>:
fnet_stack_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:125
* NAME: fnet_stack_init
*
* DESCRIPTION: TCP/IP Stack initialization.
************************************************************************/
static int fnet_stack_init( void )
{
    5834:	b580      	push	{r7, lr}
    5836:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:126
    fnet_isr_init();
    5838:	f7fc fd96 	bl	2368 <fnet_isr_init>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:128
   
    if (fnet_timer_init(FNET_TIMER_PERIOD_MS) == FNET_ERR)
    583c:	2064      	movs	r0, #100	; 0x64
    583e:	f004 fa81 	bl	9d44 <fnet_timer_init>
    5842:	4603      	mov	r3, r0
    5844:	f1b3 3fff 	cmp.w	r3, #4294967295
    5848:	d100      	bne.n	584c <fnet_stack_init+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:129
        goto ERROR;
    584a:	e011      	b.n	5870 <fnet_stack_init+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:136
#if FNET_CFG_DEBUG_STARTUP_MS
	fnet_println("\n Waiting %d Seconds...", FNET_CFG_DEBUG_STARTUP_MS/1000);
	fnet_timer_delay(fnet_timer_ms2ticks(FNET_CFG_DEBUG_STARTUP_MS));
#endif
 
    if(fnet_prot_init() == FNET_ERR)
    584c:	f7fe f950 	bl	3af0 <fnet_prot_init>
    5850:	4603      	mov	r3, r0
    5852:	f1b3 3fff 	cmp.w	r3, #4294967295
    5856:	d100      	bne.n	585a <fnet_stack_init+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:137
        goto ERROR;
    5858:	e00a      	b.n	5870 <fnet_stack_init+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:138
    fnet_socket_init();
    585a:	f7fe fc8d 	bl	4178 <fnet_socket_init>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:140

    if(fnet_netif_init_all() == FNET_ERR)
    585e:	f7fd fd0b 	bl	3278 <fnet_netif_init_all>
    5862:	4603      	mov	r3, r0
    5864:	f1b3 3fff 	cmp.w	r3, #4294967295
    5868:	d100      	bne.n	586c <fnet_stack_init+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:141
        goto ERROR;
    586a:	e001      	b.n	5870 <fnet_stack_init+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:143

    return (FNET_OK);
    586c:	2300      	movs	r3, #0
    586e:	e003      	b.n	5878 <fnet_stack_init+0x44>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:145
ERROR:
    fnet_stack_release();
    5870:	f000 f804 	bl	587c <fnet_stack_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:147

    return (FNET_ERR);
    5874:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:148
}
    5878:	4618      	mov	r0, r3
    587a:	bd80      	pop	{r7, pc}

0000587c <fnet_stack_release>:
fnet_stack_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:156
* NAME: fnet_stack_release
*
* DESCRIPTION: TCP/IP Stack release.
************************************************************************/
static void fnet_stack_release( void )
{
    587c:	b580      	push	{r7, lr}
    587e:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:157
    fnet_netif_release_all();
    5880:	f7fd fd42 	bl	3308 <fnet_netif_release_all>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:158
    fnet_prot_release();
    5884:	f7fe f972 	bl	3b6c <fnet_prot_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:159
    fnet_timer_release();
    5888:	f004 fa6e 	bl	9d68 <fnet_timer_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:160
    fnet_mem_release();
    588c:	f7fd fcea 	bl	3264 <fnet_mem_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stack.c:161
}
    5890:	bd80      	pop	{r7, pc}
    5892:	bf00      	nop

00005894 <fnet_memcpy>:
fnet_memcpy():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:78
    for (bytes++; --bytes;)
        *dpb++ = *spb++;
}
#else /* Fastest & Biggest. */
void fnet_memcpy(FNET_COMP_PACKED_VAR void *to_ptr, FNET_COMP_PACKED_VAR const void *from_ptr, unsigned number_of_bytes)
{
    5894:	b480      	push	{r7}
    5896:	b08d      	sub	sp, #52	; 0x34
    5898:	af00      	add	r7, sp, #0
    589a:	60f8      	str	r0, [r7, #12]
    589c:	60b9      	str	r1, [r7, #8]
    589e:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:79
    unsigned char                           *from8_ptr = (unsigned char *) from_ptr;
    58a0:	68bb      	ldr	r3, [r7, #8]
    58a2:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:80
    unsigned char                           *to8_ptr = (unsigned char *) to_ptr;
    58a4:	68fb      	ldr	r3, [r7, #12]
    58a6:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:81
    FNET_COMP_PACKED_VAR unsigned short     *from16_ptr = (unsigned short *) from_ptr;
    58a8:	68bb      	ldr	r3, [r7, #8]
    58aa:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:82
    FNET_COMP_PACKED_VAR unsigned short     *to16_ptr = (unsigned short *) to_ptr;
    58ac:	68fb      	ldr	r3, [r7, #12]
    58ae:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:83
    FNET_COMP_PACKED_VAR unsigned long      *from32_ptr = (unsigned long *) from_ptr;
    58b0:	68bb      	ldr	r3, [r7, #8]
    58b2:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:84
    FNET_COMP_PACKED_VAR unsigned long      *to32_ptr = (unsigned long *) to_ptr;
    58b4:	68fb      	ldr	r3, [r7, #12]
    58b6:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:91

    /*
    * The copying is optimized to avoid alignment problems, and attempts
    *               to copy 32bit numbers optimally.
    */
    if (number_of_bytes > 3)
    58b8:	687b      	ldr	r3, [r7, #4]
    58ba:	2b03      	cmp	r3, #3
    58bc:	f240 8164 	bls.w	5b88 <fnet_memcpy+0x2f4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:94
    {
        /* Try to align source on word */
        if ((unsigned long)from_ptr & 1) 
    58c0:	68bb      	ldr	r3, [r7, #8]
    58c2:	f003 0301 	and.w	r3, r3, #1
    58c6:	2b00      	cmp	r3, #0
    58c8:	d012      	beq.n	58f0 <fnet_memcpy+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:96
        {
            from8_ptr = (unsigned char *) from_ptr;
    58ca:	68bb      	ldr	r3, [r7, #8]
    58cc:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:97
            to8_ptr = (unsigned char *) to_ptr;
    58ce:	68fb      	ldr	r3, [r7, #12]
    58d0:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:99

            *to8_ptr++ = *from8_ptr++;
    58d2:	69fb      	ldr	r3, [r7, #28]
    58d4:	1c5a      	adds	r2, r3, #1
    58d6:	61fa      	str	r2, [r7, #28]
    58d8:	6a3a      	ldr	r2, [r7, #32]
    58da:	1c51      	adds	r1, r2, #1
    58dc:	6239      	str	r1, [r7, #32]
    58de:	7812      	ldrb	r2, [r2, #0]
    58e0:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:101

            from_ptr = from8_ptr;
    58e2:	6a3b      	ldr	r3, [r7, #32]
    58e4:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:102
            to_ptr = to8_ptr;
    58e6:	69fb      	ldr	r3, [r7, #28]
    58e8:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:103
            --number_of_bytes;
    58ea:	687b      	ldr	r3, [r7, #4]
    58ec:	3b01      	subs	r3, #1
    58ee:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:107
        }

        /* Try to align source on longword */
        if ((unsigned long)from_ptr & 2)
    58f0:	68bb      	ldr	r3, [r7, #8]
    58f2:	f003 0302 	and.w	r3, r3, #2
    58f6:	2b00      	cmp	r3, #0
    58f8:	d012      	beq.n	5920 <fnet_memcpy+0x8c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:109
        {
            from16_ptr = (unsigned short *) from_ptr;
    58fa:	68bb      	ldr	r3, [r7, #8]
    58fc:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:110
            to16_ptr = (unsigned short *) to_ptr;
    58fe:	68fb      	ldr	r3, [r7, #12]
    5900:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:112

            *to16_ptr++ = *from16_ptr++;
    5902:	697b      	ldr	r3, [r7, #20]
    5904:	1c9a      	adds	r2, r3, #2
    5906:	617a      	str	r2, [r7, #20]
    5908:	69ba      	ldr	r2, [r7, #24]
    590a:	1c91      	adds	r1, r2, #2
    590c:	61b9      	str	r1, [r7, #24]
    590e:	8812      	ldrh	r2, [r2, #0]
    5910:	801a      	strh	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:114

            from_ptr = from16_ptr;
    5912:	69bb      	ldr	r3, [r7, #24]
    5914:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:115
            to_ptr = to16_ptr;
    5916:	697b      	ldr	r3, [r7, #20]
    5918:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:116
            number_of_bytes -= 2;
    591a:	687b      	ldr	r3, [r7, #4]
    591c:	3b02      	subs	r3, #2
    591e:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:119
        }

        from32_ptr = (unsigned long *) from_ptr;
    5920:	68bb      	ldr	r3, [r7, #8]
    5922:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:120
        to32_ptr = (unsigned long *) to_ptr;
    5924:	68fb      	ldr	r3, [r7, #12]
    5926:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:126

        /* 
        ** To increase performance a bit, we will copy 64 bytes (16 * longwords) sequentially
        ** This gets less instruction cycles.
        */
        for (loops = (number_of_bytes >> 6); loops > 0; loops--)
    5928:	687b      	ldr	r3, [r7, #4]
    592a:	099b      	lsrs	r3, r3, #6
    592c:	627b      	str	r3, [r7, #36]	; 0x24
    592e:	e082      	b.n	5a36 <fnet_memcpy+0x1a2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:129 (discriminator 2)
        {
            /* copy 16 longwords */
            *to32_ptr++ = *from32_ptr++;
    5930:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5932:	1d1a      	adds	r2, r3, #4
    5934:	62ba      	str	r2, [r7, #40]	; 0x28
    5936:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5938:	1d11      	adds	r1, r2, #4
    593a:	62f9      	str	r1, [r7, #44]	; 0x2c
    593c:	6812      	ldr	r2, [r2, #0]
    593e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:130 (discriminator 2)
            *to32_ptr++ = *from32_ptr++;
    5940:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5942:	1d1a      	adds	r2, r3, #4
    5944:	62ba      	str	r2, [r7, #40]	; 0x28
    5946:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5948:	1d11      	adds	r1, r2, #4
    594a:	62f9      	str	r1, [r7, #44]	; 0x2c
    594c:	6812      	ldr	r2, [r2, #0]
    594e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:131 (discriminator 2)
            *to32_ptr++ = *from32_ptr++;
    5950:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5952:	1d1a      	adds	r2, r3, #4
    5954:	62ba      	str	r2, [r7, #40]	; 0x28
    5956:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5958:	1d11      	adds	r1, r2, #4
    595a:	62f9      	str	r1, [r7, #44]	; 0x2c
    595c:	6812      	ldr	r2, [r2, #0]
    595e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:132 (discriminator 2)
            *to32_ptr++ = *from32_ptr++;
    5960:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5962:	1d1a      	adds	r2, r3, #4
    5964:	62ba      	str	r2, [r7, #40]	; 0x28
    5966:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5968:	1d11      	adds	r1, r2, #4
    596a:	62f9      	str	r1, [r7, #44]	; 0x2c
    596c:	6812      	ldr	r2, [r2, #0]
    596e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:133 (discriminator 2)
            *to32_ptr++ = *from32_ptr++;
    5970:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5972:	1d1a      	adds	r2, r3, #4
    5974:	62ba      	str	r2, [r7, #40]	; 0x28
    5976:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5978:	1d11      	adds	r1, r2, #4
    597a:	62f9      	str	r1, [r7, #44]	; 0x2c
    597c:	6812      	ldr	r2, [r2, #0]
    597e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:134 (discriminator 2)
            *to32_ptr++ = *from32_ptr++;
    5980:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5982:	1d1a      	adds	r2, r3, #4
    5984:	62ba      	str	r2, [r7, #40]	; 0x28
    5986:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5988:	1d11      	adds	r1, r2, #4
    598a:	62f9      	str	r1, [r7, #44]	; 0x2c
    598c:	6812      	ldr	r2, [r2, #0]
    598e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:135 (discriminator 2)
            *to32_ptr++ = *from32_ptr++;
    5990:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5992:	1d1a      	adds	r2, r3, #4
    5994:	62ba      	str	r2, [r7, #40]	; 0x28
    5996:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5998:	1d11      	adds	r1, r2, #4
    599a:	62f9      	str	r1, [r7, #44]	; 0x2c
    599c:	6812      	ldr	r2, [r2, #0]
    599e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:136 (discriminator 2)
            *to32_ptr++ = *from32_ptr++;
    59a0:	6abb      	ldr	r3, [r7, #40]	; 0x28
    59a2:	1d1a      	adds	r2, r3, #4
    59a4:	62ba      	str	r2, [r7, #40]	; 0x28
    59a6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    59a8:	1d11      	adds	r1, r2, #4
    59aa:	62f9      	str	r1, [r7, #44]	; 0x2c
    59ac:	6812      	ldr	r2, [r2, #0]
    59ae:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:137 (discriminator 2)
            *to32_ptr++ = *from32_ptr++;
    59b0:	6abb      	ldr	r3, [r7, #40]	; 0x28
    59b2:	1d1a      	adds	r2, r3, #4
    59b4:	62ba      	str	r2, [r7, #40]	; 0x28
    59b6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    59b8:	1d11      	adds	r1, r2, #4
    59ba:	62f9      	str	r1, [r7, #44]	; 0x2c
    59bc:	6812      	ldr	r2, [r2, #0]
    59be:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:138 (discriminator 2)
            *to32_ptr++ = *from32_ptr++;
    59c0:	6abb      	ldr	r3, [r7, #40]	; 0x28
    59c2:	1d1a      	adds	r2, r3, #4
    59c4:	62ba      	str	r2, [r7, #40]	; 0x28
    59c6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    59c8:	1d11      	adds	r1, r2, #4
    59ca:	62f9      	str	r1, [r7, #44]	; 0x2c
    59cc:	6812      	ldr	r2, [r2, #0]
    59ce:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:139 (discriminator 2)
            *to32_ptr++ = *from32_ptr++;
    59d0:	6abb      	ldr	r3, [r7, #40]	; 0x28
    59d2:	1d1a      	adds	r2, r3, #4
    59d4:	62ba      	str	r2, [r7, #40]	; 0x28
    59d6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    59d8:	1d11      	adds	r1, r2, #4
    59da:	62f9      	str	r1, [r7, #44]	; 0x2c
    59dc:	6812      	ldr	r2, [r2, #0]
    59de:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:140 (discriminator 2)
            *to32_ptr++ = *from32_ptr++;
    59e0:	6abb      	ldr	r3, [r7, #40]	; 0x28
    59e2:	1d1a      	adds	r2, r3, #4
    59e4:	62ba      	str	r2, [r7, #40]	; 0x28
    59e6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    59e8:	1d11      	adds	r1, r2, #4
    59ea:	62f9      	str	r1, [r7, #44]	; 0x2c
    59ec:	6812      	ldr	r2, [r2, #0]
    59ee:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:141 (discriminator 2)
            *to32_ptr++ = *from32_ptr++;
    59f0:	6abb      	ldr	r3, [r7, #40]	; 0x28
    59f2:	1d1a      	adds	r2, r3, #4
    59f4:	62ba      	str	r2, [r7, #40]	; 0x28
    59f6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    59f8:	1d11      	adds	r1, r2, #4
    59fa:	62f9      	str	r1, [r7, #44]	; 0x2c
    59fc:	6812      	ldr	r2, [r2, #0]
    59fe:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:142 (discriminator 2)
            *to32_ptr++ = *from32_ptr++;
    5a00:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5a02:	1d1a      	adds	r2, r3, #4
    5a04:	62ba      	str	r2, [r7, #40]	; 0x28
    5a06:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5a08:	1d11      	adds	r1, r2, #4
    5a0a:	62f9      	str	r1, [r7, #44]	; 0x2c
    5a0c:	6812      	ldr	r2, [r2, #0]
    5a0e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:143 (discriminator 2)
            *to32_ptr++ = *from32_ptr++;
    5a10:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5a12:	1d1a      	adds	r2, r3, #4
    5a14:	62ba      	str	r2, [r7, #40]	; 0x28
    5a16:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5a18:	1d11      	adds	r1, r2, #4
    5a1a:	62f9      	str	r1, [r7, #44]	; 0x2c
    5a1c:	6812      	ldr	r2, [r2, #0]
    5a1e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:144 (discriminator 2)
            *to32_ptr++ = *from32_ptr++;
    5a20:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5a22:	1d1a      	adds	r2, r3, #4
    5a24:	62ba      	str	r2, [r7, #40]	; 0x28
    5a26:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5a28:	1d11      	adds	r1, r2, #4
    5a2a:	62f9      	str	r1, [r7, #44]	; 0x2c
    5a2c:	6812      	ldr	r2, [r2, #0]
    5a2e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:126 (discriminator 2)

        /* 
        ** To increase performance a bit, we will copy 64 bytes (16 * longwords) sequentially
        ** This gets less instruction cycles.
        */
        for (loops = (number_of_bytes >> 6); loops > 0; loops--)
    5a30:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    5a32:	3b01      	subs	r3, #1
    5a34:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:126 (discriminator 1)
    5a36:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    5a38:	2b00      	cmp	r3, #0
    5a3a:	f47f af79 	bne.w	5930 <fnet_memcpy+0x9c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:148
            *to32_ptr++ = *from32_ptr++;
            *to32_ptr++ = *from32_ptr++;
        }

        /* Now, write the rest of bytes */
        switch ((number_of_bytes >> 2) & 0xF)
    5a3e:	687b      	ldr	r3, [r7, #4]
    5a40:	089b      	lsrs	r3, r3, #2
    5a42:	f003 030f 	and.w	r3, r3, #15
    5a46:	3b01      	subs	r3, #1
    5a48:	2b0e      	cmp	r3, #14
    5a4a:	f200 8099 	bhi.w	5b80 <fnet_memcpy+0x2ec>
    5a4e:	a201      	add	r2, pc, #4	; (adr r2, 5a54 <fnet_memcpy+0x1c0>)
    5a50:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    5a54:	00005b71 	.word	0x00005b71
    5a58:	00005b61 	.word	0x00005b61
    5a5c:	00005b51 	.word	0x00005b51
    5a60:	00005b41 	.word	0x00005b41
    5a64:	00005b31 	.word	0x00005b31
    5a68:	00005b21 	.word	0x00005b21
    5a6c:	00005b11 	.word	0x00005b11
    5a70:	00005b01 	.word	0x00005b01
    5a74:	00005af1 	.word	0x00005af1
    5a78:	00005ae1 	.word	0x00005ae1
    5a7c:	00005ad1 	.word	0x00005ad1
    5a80:	00005ac1 	.word	0x00005ac1
    5a84:	00005ab1 	.word	0x00005ab1
    5a88:	00005aa1 	.word	0x00005aa1
    5a8c:	00005a91 	.word	0x00005a91
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:150
        {
            case 15: *to32_ptr++ = *from32_ptr++;
    5a90:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5a92:	1d1a      	adds	r2, r3, #4
    5a94:	62ba      	str	r2, [r7, #40]	; 0x28
    5a96:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5a98:	1d11      	adds	r1, r2, #4
    5a9a:	62f9      	str	r1, [r7, #44]	; 0x2c
    5a9c:	6812      	ldr	r2, [r2, #0]
    5a9e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:151
            case 14: *to32_ptr++ = *from32_ptr++;
    5aa0:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5aa2:	1d1a      	adds	r2, r3, #4
    5aa4:	62ba      	str	r2, [r7, #40]	; 0x28
    5aa6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5aa8:	1d11      	adds	r1, r2, #4
    5aaa:	62f9      	str	r1, [r7, #44]	; 0x2c
    5aac:	6812      	ldr	r2, [r2, #0]
    5aae:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:152
            case 13: *to32_ptr++ = *from32_ptr++;
    5ab0:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5ab2:	1d1a      	adds	r2, r3, #4
    5ab4:	62ba      	str	r2, [r7, #40]	; 0x28
    5ab6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5ab8:	1d11      	adds	r1, r2, #4
    5aba:	62f9      	str	r1, [r7, #44]	; 0x2c
    5abc:	6812      	ldr	r2, [r2, #0]
    5abe:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:153
            case 12: *to32_ptr++ = *from32_ptr++;
    5ac0:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5ac2:	1d1a      	adds	r2, r3, #4
    5ac4:	62ba      	str	r2, [r7, #40]	; 0x28
    5ac6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5ac8:	1d11      	adds	r1, r2, #4
    5aca:	62f9      	str	r1, [r7, #44]	; 0x2c
    5acc:	6812      	ldr	r2, [r2, #0]
    5ace:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:154
            case 11: *to32_ptr++ = *from32_ptr++;
    5ad0:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5ad2:	1d1a      	adds	r2, r3, #4
    5ad4:	62ba      	str	r2, [r7, #40]	; 0x28
    5ad6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5ad8:	1d11      	adds	r1, r2, #4
    5ada:	62f9      	str	r1, [r7, #44]	; 0x2c
    5adc:	6812      	ldr	r2, [r2, #0]
    5ade:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:155
            case 10: *to32_ptr++ = *from32_ptr++;
    5ae0:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5ae2:	1d1a      	adds	r2, r3, #4
    5ae4:	62ba      	str	r2, [r7, #40]	; 0x28
    5ae6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5ae8:	1d11      	adds	r1, r2, #4
    5aea:	62f9      	str	r1, [r7, #44]	; 0x2c
    5aec:	6812      	ldr	r2, [r2, #0]
    5aee:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:156
            case 9:  *to32_ptr++ = *from32_ptr++;
    5af0:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5af2:	1d1a      	adds	r2, r3, #4
    5af4:	62ba      	str	r2, [r7, #40]	; 0x28
    5af6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5af8:	1d11      	adds	r1, r2, #4
    5afa:	62f9      	str	r1, [r7, #44]	; 0x2c
    5afc:	6812      	ldr	r2, [r2, #0]
    5afe:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:157
            case 8:  *to32_ptr++ = *from32_ptr++;
    5b00:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5b02:	1d1a      	adds	r2, r3, #4
    5b04:	62ba      	str	r2, [r7, #40]	; 0x28
    5b06:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5b08:	1d11      	adds	r1, r2, #4
    5b0a:	62f9      	str	r1, [r7, #44]	; 0x2c
    5b0c:	6812      	ldr	r2, [r2, #0]
    5b0e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:158
            case 7:  *to32_ptr++ = *from32_ptr++;
    5b10:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5b12:	1d1a      	adds	r2, r3, #4
    5b14:	62ba      	str	r2, [r7, #40]	; 0x28
    5b16:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5b18:	1d11      	adds	r1, r2, #4
    5b1a:	62f9      	str	r1, [r7, #44]	; 0x2c
    5b1c:	6812      	ldr	r2, [r2, #0]
    5b1e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:159
            case 6:  *to32_ptr++ = *from32_ptr++;
    5b20:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5b22:	1d1a      	adds	r2, r3, #4
    5b24:	62ba      	str	r2, [r7, #40]	; 0x28
    5b26:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5b28:	1d11      	adds	r1, r2, #4
    5b2a:	62f9      	str	r1, [r7, #44]	; 0x2c
    5b2c:	6812      	ldr	r2, [r2, #0]
    5b2e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:160
            case 5:  *to32_ptr++ = *from32_ptr++;
    5b30:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5b32:	1d1a      	adds	r2, r3, #4
    5b34:	62ba      	str	r2, [r7, #40]	; 0x28
    5b36:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5b38:	1d11      	adds	r1, r2, #4
    5b3a:	62f9      	str	r1, [r7, #44]	; 0x2c
    5b3c:	6812      	ldr	r2, [r2, #0]
    5b3e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:161
            case 4:  *to32_ptr++ = *from32_ptr++;
    5b40:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5b42:	1d1a      	adds	r2, r3, #4
    5b44:	62ba      	str	r2, [r7, #40]	; 0x28
    5b46:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5b48:	1d11      	adds	r1, r2, #4
    5b4a:	62f9      	str	r1, [r7, #44]	; 0x2c
    5b4c:	6812      	ldr	r2, [r2, #0]
    5b4e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:162
            case 3:  *to32_ptr++ = *from32_ptr++;
    5b50:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5b52:	1d1a      	adds	r2, r3, #4
    5b54:	62ba      	str	r2, [r7, #40]	; 0x28
    5b56:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5b58:	1d11      	adds	r1, r2, #4
    5b5a:	62f9      	str	r1, [r7, #44]	; 0x2c
    5b5c:	6812      	ldr	r2, [r2, #0]
    5b5e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:163
            case 2:  *to32_ptr++ = *from32_ptr++;
    5b60:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5b62:	1d1a      	adds	r2, r3, #4
    5b64:	62ba      	str	r2, [r7, #40]	; 0x28
    5b66:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5b68:	1d11      	adds	r1, r2, #4
    5b6a:	62f9      	str	r1, [r7, #44]	; 0x2c
    5b6c:	6812      	ldr	r2, [r2, #0]
    5b6e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:164
            case 1:  *to32_ptr++ = *from32_ptr++;
    5b70:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5b72:	1d1a      	adds	r2, r3, #4
    5b74:	62ba      	str	r2, [r7, #40]	; 0x28
    5b76:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    5b78:	1d11      	adds	r1, r2, #4
    5b7a:	62f9      	str	r1, [r7, #44]	; 0x2c
    5b7c:	6812      	ldr	r2, [r2, #0]
    5b7e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:167
        } 

        from_ptr = from32_ptr;
    5b80:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    5b82:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:168
        to_ptr = to32_ptr;
    5b84:	6abb      	ldr	r3, [r7, #40]	; 0x28
    5b86:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:172
    } 

    /* Copy all remaining bytes */
    if (number_of_bytes & 2)
    5b88:	687b      	ldr	r3, [r7, #4]
    5b8a:	f003 0302 	and.w	r3, r3, #2
    5b8e:	2b00      	cmp	r3, #0
    5b90:	d00f      	beq.n	5bb2 <fnet_memcpy+0x31e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:174
    {
        from16_ptr = (unsigned short *) from_ptr;
    5b92:	68bb      	ldr	r3, [r7, #8]
    5b94:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:175
        to16_ptr = (unsigned short *) to_ptr;
    5b96:	68fb      	ldr	r3, [r7, #12]
    5b98:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:177

        *to16_ptr++ = *from16_ptr++;
    5b9a:	697b      	ldr	r3, [r7, #20]
    5b9c:	1c9a      	adds	r2, r3, #2
    5b9e:	617a      	str	r2, [r7, #20]
    5ba0:	69ba      	ldr	r2, [r7, #24]
    5ba2:	1c91      	adds	r1, r2, #2
    5ba4:	61b9      	str	r1, [r7, #24]
    5ba6:	8812      	ldrh	r2, [r2, #0]
    5ba8:	801a      	strh	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:179

        from_ptr = from16_ptr;
    5baa:	69bb      	ldr	r3, [r7, #24]
    5bac:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:180
        to_ptr = to16_ptr;
    5bae:	697b      	ldr	r3, [r7, #20]
    5bb0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:183
    } 

    if (number_of_bytes & 1) 
    5bb2:	687b      	ldr	r3, [r7, #4]
    5bb4:	f003 0301 	and.w	r3, r3, #1
    5bb8:	2b00      	cmp	r3, #0
    5bba:	d003      	beq.n	5bc4 <fnet_memcpy+0x330>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:185
    {
        * (unsigned char *) to_ptr = * (unsigned char *) from_ptr;
    5bbc:	68bb      	ldr	r3, [r7, #8]
    5bbe:	781a      	ldrb	r2, [r3, #0]
    5bc0:	68fb      	ldr	r3, [r7, #12]
    5bc2:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:187
    }
}
    5bc4:	3734      	adds	r7, #52	; 0x34
    5bc6:	46bd      	mov	sp, r7
    5bc8:	f85d 7b04 	ldr.w	r7, [sp], #4
    5bcc:	4770      	bx	lr
$t():
    5bce:	bf00      	nop

00005bd0 <fnet_memset>:
fnet_memset():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:199
*
* DESCRIPTION: 
*
*************************************************************************/
void fnet_memset( void *s, int c, unsigned n )
{
    5bd0:	b480      	push	{r7}
    5bd2:	b087      	sub	sp, #28
    5bd4:	af00      	add	r7, sp, #0
    5bd6:	60f8      	str	r0, [r7, #12]
    5bd8:	60b9      	str	r1, [r7, #8]
    5bda:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:201
    /* Not optimized */
    unsigned char *sp = (unsigned char *)s;
    5bdc:	68fb      	ldr	r3, [r7, #12]
    5bde:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:203
    
    for(n++;--n;)
    5be0:	687b      	ldr	r3, [r7, #4]
    5be2:	3301      	adds	r3, #1
    5be4:	607b      	str	r3, [r7, #4]
    5be6:	e005      	b.n	5bf4 <fnet_memset+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:205
    {
        *sp++ = (unsigned char)c;
    5be8:	697b      	ldr	r3, [r7, #20]
    5bea:	1c5a      	adds	r2, r3, #1
    5bec:	617a      	str	r2, [r7, #20]
    5bee:	68ba      	ldr	r2, [r7, #8]
    5bf0:	b2d2      	uxtb	r2, r2
    5bf2:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:203 (discriminator 1)
void fnet_memset( void *s, int c, unsigned n )
{
    /* Not optimized */
    unsigned char *sp = (unsigned char *)s;
    
    for(n++;--n;)
    5bf4:	687b      	ldr	r3, [r7, #4]
    5bf6:	3b01      	subs	r3, #1
    5bf8:	607b      	str	r3, [r7, #4]
    5bfa:	687b      	ldr	r3, [r7, #4]
    5bfc:	2b00      	cmp	r3, #0
    5bfe:	d1f3      	bne.n	5be8 <fnet_memset+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:207
    {
        *sp++ = (unsigned char)c;
    }
}
    5c00:	371c      	adds	r7, #28
    5c02:	46bd      	mov	sp, r7
    5c04:	f85d 7b04 	ldr.w	r7, [sp], #4
    5c08:	4770      	bx	lr
    5c0a:	bf00      	nop

00005c0c <fnet_memset_zero>:
fnet_memset_zero():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:216
*
* DESCRIPTION: Same as "fnet_memset( void *s, 0, unsigned n )"
*
*************************************************************************/
void fnet_memset_zero( void *s, unsigned n )
{
    5c0c:	b580      	push	{r7, lr}
    5c0e:	b082      	sub	sp, #8
    5c10:	af00      	add	r7, sp, #0
    5c12:	6078      	str	r0, [r7, #4]
    5c14:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:226
    for(n++;--n;)
    {
        *sp++ = (unsigned char)0;
    }
#else
    memset(s,0,n);
    5c16:	6878      	ldr	r0, [r7, #4]
    5c18:	2100      	movs	r1, #0
    5c1a:	683a      	ldr	r2, [r7, #0]
    5c1c:	f00e f820 	bl	13c60 <memset>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:228
#endif
}
    5c20:	3708      	adds	r7, #8
    5c22:	46bd      	mov	sp, r7
    5c24:	bd80      	pop	{r7, pc}
    5c26:	bf00      	nop

00005c28 <fnet_memcmp>:
fnet_memcmp():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:238
* DESCRIPTION: Compare two memory regions and return zero if they are identical,
*              non-zero otherwise.  If count is zero, return zero.
*
*************************************************************************/
int fnet_memcmp(const void *src1, const void *src2, int count )
{
    5c28:	b480      	push	{r7}
    5c2a:	b087      	sub	sp, #28
    5c2c:	af00      	add	r7, sp, #0
    5c2e:	60f8      	str	r0, [r7, #12]
    5c30:	60b9      	str	r1, [r7, #8]
    5c32:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:242
    const unsigned char *p1;
    const unsigned char *p2;

    for (p1 = (const unsigned char *)src1, p2 = (const unsigned char *)src2, count++; --count; )
    5c34:	68fb      	ldr	r3, [r7, #12]
    5c36:	617b      	str	r3, [r7, #20]
    5c38:	68bb      	ldr	r3, [r7, #8]
    5c3a:	613b      	str	r3, [r7, #16]
    5c3c:	687b      	ldr	r3, [r7, #4]
    5c3e:	3301      	adds	r3, #1
    5c40:	607b      	str	r3, [r7, #4]
    5c42:	e00b      	b.n	5c5c <fnet_memcmp+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:243
      if(*p1++ != *p2++)
    5c44:	697b      	ldr	r3, [r7, #20]
    5c46:	1c5a      	adds	r2, r3, #1
    5c48:	617a      	str	r2, [r7, #20]
    5c4a:	781a      	ldrb	r2, [r3, #0]
    5c4c:	693b      	ldr	r3, [r7, #16]
    5c4e:	1c59      	adds	r1, r3, #1
    5c50:	6139      	str	r1, [r7, #16]
    5c52:	781b      	ldrb	r3, [r3, #0]
    5c54:	429a      	cmp	r2, r3
    5c56:	d001      	beq.n	5c5c <fnet_memcmp+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:244
          return 1;
    5c58:	2301      	movs	r3, #1
    5c5a:	e006      	b.n	5c6a <fnet_memcmp+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:242 (discriminator 1)
int fnet_memcmp(const void *src1, const void *src2, int count )
{
    const unsigned char *p1;
    const unsigned char *p2;

    for (p1 = (const unsigned char *)src1, p2 = (const unsigned char *)src2, count++; --count; )
    5c5c:	687b      	ldr	r3, [r7, #4]
    5c5e:	3b01      	subs	r3, #1
    5c60:	607b      	str	r3, [r7, #4]
    5c62:	687b      	ldr	r3, [r7, #4]
    5c64:	2b00      	cmp	r3, #0
    5c66:	d1ed      	bne.n	5c44 <fnet_memcmp+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:246
      if(*p1++ != *p2++)
          return 1;

    return (0);
    5c68:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:247
}
    5c6a:	4618      	mov	r0, r3
    5c6c:	371c      	adds	r7, #28
    5c6e:	46bd      	mov	sp, r7
    5c70:	f85d 7b04 	ldr.w	r7, [sp], #4
    5c74:	4770      	bx	lr
    5c76:	bf00      	nop

00005c78 <fnet_strcmp>:
fnet_strcmp():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:256
*
* DESCRIPTION: 
*
*************************************************************************/
int fnet_strcmp( const char *s1, const char *s2 )
{
    5c78:	b480      	push	{r7}
    5c7a:	b085      	sub	sp, #20
    5c7c:	af00      	add	r7, sp, #0
    5c7e:	6078      	str	r0, [r7, #4]
    5c80:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:258
    /* No checks for 0 */
    char *s1p = (char *)s1;
    5c82:	687b      	ldr	r3, [r7, #4]
    5c84:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:259
    char *s2p = (char *)s2;
    5c86:	683b      	ldr	r3, [r7, #0]
    5c88:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:261

    while(*s2p != '\0')
    5c8a:	e00e      	b.n	5caa <fnet_strcmp+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:263
    {
        if(*s1p != *s2p)
    5c8c:	68fb      	ldr	r3, [r7, #12]
    5c8e:	781a      	ldrb	r2, [r3, #0]
    5c90:	68bb      	ldr	r3, [r7, #8]
    5c92:	781b      	ldrb	r3, [r3, #0]
    5c94:	b252      	sxtb	r2, r2
    5c96:	b25b      	sxtb	r3, r3
    5c98:	429a      	cmp	r2, r3
    5c9a:	d000      	beq.n	5c9e <fnet_strcmp+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:264
            break;
    5c9c:	e009      	b.n	5cb2 <fnet_strcmp+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:266

        ++s1p;
    5c9e:	68fb      	ldr	r3, [r7, #12]
    5ca0:	3301      	adds	r3, #1
    5ca2:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:267
        ++s2p;
    5ca4:	68bb      	ldr	r3, [r7, #8]
    5ca6:	3301      	adds	r3, #1
    5ca8:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:261 (discriminator 1)
{
    /* No checks for 0 */
    char *s1p = (char *)s1;
    char *s2p = (char *)s2;

    while(*s2p != '\0')
    5caa:	68bb      	ldr	r3, [r7, #8]
    5cac:	781b      	ldrb	r3, [r3, #0]
    5cae:	2b00      	cmp	r3, #0
    5cb0:	d1ec      	bne.n	5c8c <fnet_strcmp+0x14>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:270

        ++s1p;
        ++s2p;
    }

    return (*s1p - *s2p);
    5cb2:	68fb      	ldr	r3, [r7, #12]
    5cb4:	781b      	ldrb	r3, [r3, #0]
    5cb6:	b25a      	sxtb	r2, r3
    5cb8:	68bb      	ldr	r3, [r7, #8]
    5cba:	781b      	ldrb	r3, [r3, #0]
    5cbc:	b25b      	sxtb	r3, r3
    5cbe:	1ad3      	subs	r3, r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:271
}
    5cc0:	4618      	mov	r0, r3
    5cc2:	3714      	adds	r7, #20
    5cc4:	46bd      	mov	sp, r7
    5cc6:	f85d 7b04 	ldr.w	r7, [sp], #4
    5cca:	4770      	bx	lr

00005ccc <fnet_strlen>:
fnet_strlen():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:280
*
* DESCRIPTION: 
*
*************************************************************************/
unsigned long fnet_strlen (const char *str)
{
    5ccc:	b480      	push	{r7}
    5cce:	b085      	sub	sp, #20
    5cd0:	af00      	add	r7, sp, #0
    5cd2:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:281
	char *s = (char *)str;
    5cd4:	687b      	ldr	r3, [r7, #4]
    5cd6:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:282
	unsigned long len = 0;
    5cd8:	2300      	movs	r3, #0
    5cda:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:284

	if (s == 0)
    5cdc:	68fb      	ldr	r3, [r7, #12]
    5cde:	2b00      	cmp	r3, #0
    5ce0:	d101      	bne.n	5ce6 <fnet_strlen+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:285
		return 0;
    5ce2:	2300      	movs	r3, #0
    5ce4:	e00a      	b.n	5cfc <fnet_strlen+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:287

	while (*s++ != '\0')
    5ce6:	e002      	b.n	5cee <fnet_strlen+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:288
		++len;
    5ce8:	68bb      	ldr	r3, [r7, #8]
    5cea:	3301      	adds	r3, #1
    5cec:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:287 (discriminator 1)
	unsigned long len = 0;

	if (s == 0)
		return 0;

	while (*s++ != '\0')
    5cee:	68fb      	ldr	r3, [r7, #12]
    5cf0:	1c5a      	adds	r2, r3, #1
    5cf2:	60fa      	str	r2, [r7, #12]
    5cf4:	781b      	ldrb	r3, [r3, #0]
    5cf6:	2b00      	cmp	r3, #0
    5cf8:	d1f6      	bne.n	5ce8 <fnet_strlen+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:290
		++len;

	return len;
    5cfa:	68bb      	ldr	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:291
}
    5cfc:	4618      	mov	r0, r3
    5cfe:	3714      	adds	r7, #20
    5d00:	46bd      	mov	sp, r7
    5d02:	f85d 7b04 	ldr.w	r7, [sp], #4
    5d06:	4770      	bx	lr

00005d08 <fnet_strcat>:
fnet_strcat():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:300
*
* DESCRIPTION: 
*
*************************************************************************/
void fnet_strcat (char *dest, const char *src)
{
    5d08:	b580      	push	{r7, lr}
    5d0a:	b084      	sub	sp, #16
    5d0c:	af00      	add	r7, sp, #0
    5d0e:	6078      	str	r0, [r7, #4]
    5d10:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:302
	char *dp;
	char *sp = (char *)src;
    5d12:	683b      	ldr	r3, [r7, #0]
    5d14:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:304

	if ((dest != 0) && (src != 0))
    5d16:	687b      	ldr	r3, [r7, #4]
    5d18:	2b00      	cmp	r3, #0
    5d1a:	d019      	beq.n	5d50 <fnet_strcat+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:304 (discriminator 1)
    5d1c:	683b      	ldr	r3, [r7, #0]
    5d1e:	2b00      	cmp	r3, #0
    5d20:	d016      	beq.n	5d50 <fnet_strcat+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:306
	{
		dp = &dest[fnet_strlen(dest)];
    5d22:	6878      	ldr	r0, [r7, #4]
    5d24:	f7ff ffd2 	bl	5ccc <fnet_strlen>
    5d28:	4603      	mov	r3, r0
    5d2a:	687a      	ldr	r2, [r7, #4]
    5d2c:	4413      	add	r3, r2
    5d2e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:308

		while (*sp != '\0')
    5d30:	e007      	b.n	5d42 <fnet_strcat+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:310
		{
			*dp++ = *sp++;
    5d32:	68fb      	ldr	r3, [r7, #12]
    5d34:	1c5a      	adds	r2, r3, #1
    5d36:	60fa      	str	r2, [r7, #12]
    5d38:	68ba      	ldr	r2, [r7, #8]
    5d3a:	1c51      	adds	r1, r2, #1
    5d3c:	60b9      	str	r1, [r7, #8]
    5d3e:	7812      	ldrb	r2, [r2, #0]
    5d40:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:308 (discriminator 1)

	if ((dest != 0) && (src != 0))
	{
		dp = &dest[fnet_strlen(dest)];

		while (*sp != '\0')
    5d42:	68bb      	ldr	r3, [r7, #8]
    5d44:	781b      	ldrb	r3, [r3, #0]
    5d46:	2b00      	cmp	r3, #0
    5d48:	d1f3      	bne.n	5d32 <fnet_strcat+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:312
		{
			*dp++ = *sp++;
		}
		*dp = '\0';
    5d4a:	68fb      	ldr	r3, [r7, #12]
    5d4c:	2200      	movs	r2, #0
    5d4e:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:314
	}
}
    5d50:	3710      	adds	r7, #16
    5d52:	46bd      	mov	sp, r7
    5d54:	bd80      	pop	{r7, pc}
    5d56:	bf00      	nop

00005d58 <fnet_strncat>:
fnet_strncat():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:323
*
* DESCRIPTION: 
*
*************************************************************************/
void fnet_strncat (char *dest, const char *src, int n)
{
    5d58:	b580      	push	{r7, lr}
    5d5a:	b086      	sub	sp, #24
    5d5c:	af00      	add	r7, sp, #0
    5d5e:	60f8      	str	r0, [r7, #12]
    5d60:	60b9      	str	r1, [r7, #8]
    5d62:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:325
	char *dp;
	char *sp = (char *)src;
    5d64:	68bb      	ldr	r3, [r7, #8]
    5d66:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:327

	if ((dest != 0) && (src != 0) && (n > 0))
    5d68:	68fb      	ldr	r3, [r7, #12]
    5d6a:	2b00      	cmp	r3, #0
    5d6c:	d025      	beq.n	5dba <fnet_strncat+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:327 (discriminator 1)
    5d6e:	68bb      	ldr	r3, [r7, #8]
    5d70:	2b00      	cmp	r3, #0
    5d72:	d022      	beq.n	5dba <fnet_strncat+0x62>
    5d74:	687b      	ldr	r3, [r7, #4]
    5d76:	2b00      	cmp	r3, #0
    5d78:	dd1f      	ble.n	5dba <fnet_strncat+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:329
	{
		dp = &dest[fnet_strlen(dest)];
    5d7a:	68f8      	ldr	r0, [r7, #12]
    5d7c:	f7ff ffa6 	bl	5ccc <fnet_strlen>
    5d80:	4603      	mov	r3, r0
    5d82:	68fa      	ldr	r2, [r7, #12]
    5d84:	4413      	add	r3, r2
    5d86:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:331

		for(n++;(*sp != '\0') && (--n > 0);)
    5d88:	687b      	ldr	r3, [r7, #4]
    5d8a:	3301      	adds	r3, #1
    5d8c:	607b      	str	r3, [r7, #4]
    5d8e:	e007      	b.n	5da0 <fnet_strncat+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:333
		{
			*dp++ = *sp++;
    5d90:	697b      	ldr	r3, [r7, #20]
    5d92:	1c5a      	adds	r2, r3, #1
    5d94:	617a      	str	r2, [r7, #20]
    5d96:	693a      	ldr	r2, [r7, #16]
    5d98:	1c51      	adds	r1, r2, #1
    5d9a:	6139      	str	r1, [r7, #16]
    5d9c:	7812      	ldrb	r2, [r2, #0]
    5d9e:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:331 (discriminator 1)

	if ((dest != 0) && (src != 0) && (n > 0))
	{
		dp = &dest[fnet_strlen(dest)];

		for(n++;(*sp != '\0') && (--n > 0);)
    5da0:	693b      	ldr	r3, [r7, #16]
    5da2:	781b      	ldrb	r3, [r3, #0]
    5da4:	2b00      	cmp	r3, #0
    5da6:	d005      	beq.n	5db4 <fnet_strncat+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:331 (discriminator 2)
    5da8:	687b      	ldr	r3, [r7, #4]
    5daa:	3b01      	subs	r3, #1
    5dac:	607b      	str	r3, [r7, #4]
    5dae:	687b      	ldr	r3, [r7, #4]
    5db0:	2b00      	cmp	r3, #0
    5db2:	dced      	bgt.n	5d90 <fnet_strncat+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:335
		{
			*dp++ = *sp++;
		}
		*dp = '\0';
    5db4:	697b      	ldr	r3, [r7, #20]
    5db6:	2200      	movs	r2, #0
    5db8:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:337
	}
}
    5dba:	3718      	adds	r7, #24
    5dbc:	46bd      	mov	sp, r7
    5dbe:	bd80      	pop	{r7, pc}

00005dc0 <fnet_strcpy>:
fnet_strcpy():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:346
*
* DESCRIPTION: 
*
*************************************************************************/
void fnet_strcpy (char *dest, const char *src)
{
    5dc0:	b480      	push	{r7}
    5dc2:	b085      	sub	sp, #20
    5dc4:	af00      	add	r7, sp, #0
    5dc6:	6078      	str	r0, [r7, #4]
    5dc8:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:347
	char *dp = (char *)dest;
    5dca:	687b      	ldr	r3, [r7, #4]
    5dcc:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:348
	char *sp = (char *)src;
    5dce:	683b      	ldr	r3, [r7, #0]
    5dd0:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:350

	if ((dest != 0) && (src != 0))
    5dd2:	687b      	ldr	r3, [r7, #4]
    5dd4:	2b00      	cmp	r3, #0
    5dd6:	d012      	beq.n	5dfe <fnet_strcpy+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:350 (discriminator 1)
    5dd8:	683b      	ldr	r3, [r7, #0]
    5dda:	2b00      	cmp	r3, #0
    5ddc:	d00f      	beq.n	5dfe <fnet_strcpy+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:352
	{
		while (*sp != '\0')
    5dde:	e007      	b.n	5df0 <fnet_strcpy+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:354
		{
			*dp++ = *sp++;
    5de0:	68fb      	ldr	r3, [r7, #12]
    5de2:	1c5a      	adds	r2, r3, #1
    5de4:	60fa      	str	r2, [r7, #12]
    5de6:	68ba      	ldr	r2, [r7, #8]
    5de8:	1c51      	adds	r1, r2, #1
    5dea:	60b9      	str	r1, [r7, #8]
    5dec:	7812      	ldrb	r2, [r2, #0]
    5dee:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:352 (discriminator 1)
	char *dp = (char *)dest;
	char *sp = (char *)src;

	if ((dest != 0) && (src != 0))
	{
		while (*sp != '\0')
    5df0:	68bb      	ldr	r3, [r7, #8]
    5df2:	781b      	ldrb	r3, [r3, #0]
    5df4:	2b00      	cmp	r3, #0
    5df6:	d1f3      	bne.n	5de0 <fnet_strcpy+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:356
		{
			*dp++ = *sp++;
		}
		*dp = '\0';
    5df8:	68fb      	ldr	r3, [r7, #12]
    5dfa:	2200      	movs	r2, #0
    5dfc:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:358
	}
}
    5dfe:	3714      	adds	r7, #20
    5e00:	46bd      	mov	sp, r7
    5e02:	f85d 7b04 	ldr.w	r7, [sp], #4
    5e06:	4770      	bx	lr

00005e08 <fnet_strncpy>:
fnet_strncpy():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:367
*
* DESCRIPTION: 
*
*************************************************************************/
void fnet_strncpy( char *dest, const char *src, unsigned long n )
{
    5e08:	b480      	push	{r7}
    5e0a:	b087      	sub	sp, #28
    5e0c:	af00      	add	r7, sp, #0
    5e0e:	60f8      	str	r0, [r7, #12]
    5e10:	60b9      	str	r1, [r7, #8]
    5e12:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:368
    char *dp = (char *)dest;
    5e14:	68fb      	ldr	r3, [r7, #12]
    5e16:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:369
    char *sp = (char *)src;
    5e18:	68bb      	ldr	r3, [r7, #8]
    5e1a:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:371

    if((dest != 0) && (src != 0) && (n > 0))
    5e1c:	68fb      	ldr	r3, [r7, #12]
    5e1e:	2b00      	cmp	r3, #0
    5e20:	d01a      	beq.n	5e58 <fnet_strncpy+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:371 (discriminator 1)
    5e22:	68bb      	ldr	r3, [r7, #8]
    5e24:	2b00      	cmp	r3, #0
    5e26:	d017      	beq.n	5e58 <fnet_strncpy+0x50>
    5e28:	687b      	ldr	r3, [r7, #4]
    5e2a:	2b00      	cmp	r3, #0
    5e2c:	d014      	beq.n	5e58 <fnet_strncpy+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:373
    {
        while((*sp != '\0') && (n-- > 0))
    5e2e:	e007      	b.n	5e40 <fnet_strncpy+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:375
        {
            *dp++ = *sp++;
    5e30:	697b      	ldr	r3, [r7, #20]
    5e32:	1c5a      	adds	r2, r3, #1
    5e34:	617a      	str	r2, [r7, #20]
    5e36:	693a      	ldr	r2, [r7, #16]
    5e38:	1c51      	adds	r1, r2, #1
    5e3a:	6139      	str	r1, [r7, #16]
    5e3c:	7812      	ldrb	r2, [r2, #0]
    5e3e:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:373 (discriminator 1)
    char *dp = (char *)dest;
    char *sp = (char *)src;

    if((dest != 0) && (src != 0) && (n > 0))
    {
        while((*sp != '\0') && (n-- > 0))
    5e40:	693b      	ldr	r3, [r7, #16]
    5e42:	781b      	ldrb	r3, [r3, #0]
    5e44:	2b00      	cmp	r3, #0
    5e46:	d004      	beq.n	5e52 <fnet_strncpy+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:373 (discriminator 2)
    5e48:	687b      	ldr	r3, [r7, #4]
    5e4a:	1e5a      	subs	r2, r3, #1
    5e4c:	607a      	str	r2, [r7, #4]
    5e4e:	2b00      	cmp	r3, #0
    5e50:	d1ee      	bne.n	5e30 <fnet_strncpy+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:378
        {
            *dp++ = *sp++;
        }

        *dp = '\0';
    5e52:	697b      	ldr	r3, [r7, #20]
    5e54:	2200      	movs	r2, #0
    5e56:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:380
    }
}
    5e58:	371c      	adds	r7, #28
    5e5a:	46bd      	mov	sp, r7
    5e5c:	f85d 7b04 	ldr.w	r7, [sp], #4
    5e60:	4770      	bx	lr
    5e62:	bf00      	nop

00005e64 <fnet_strrchr>:
fnet_strrchr():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:390
* DESCRIPTION: The function fnet_strrchr() returns a pointer to the last 
* occurrence of chr in str, or NULL if no match is found.
*
*************************************************************************/
char *fnet_strrchr( const char *str, int chr )
{
    5e64:	b480      	push	{r7}
    5e66:	b087      	sub	sp, #28
    5e68:	af00      	add	r7, sp, #0
    5e6a:	6078      	str	r0, [r7, #4]
    5e6c:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:391
    const char *p = str;
    5e6e:	687b      	ldr	r3, [r7, #4]
    5e70:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:392
    const char *q = 0;
    5e72:	2300      	movs	r3, #0
    5e74:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:393
    char c = (char)chr;
    5e76:	683b      	ldr	r3, [r7, #0]
    5e78:	73bb      	strb	r3, [r7, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:394
    char ch = *p++;
    5e7a:	697b      	ldr	r3, [r7, #20]
    5e7c:	1c5a      	adds	r2, r3, #1
    5e7e:	617a      	str	r2, [r7, #20]
    5e80:	781b      	ldrb	r3, [r3, #0]
    5e82:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:396

    while(ch)
    5e84:	e00d      	b.n	5ea2 <fnet_strrchr+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:398
    {
        if(ch == c)
    5e86:	f997 200f 	ldrsb.w	r2, [r7, #15]
    5e8a:	f997 300e 	ldrsb.w	r3, [r7, #14]
    5e8e:	429a      	cmp	r2, r3
    5e90:	d102      	bne.n	5e98 <fnet_strrchr+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:399
            q = p - 1;
    5e92:	697b      	ldr	r3, [r7, #20]
    5e94:	3b01      	subs	r3, #1
    5e96:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:401

        ch = *p++;
    5e98:	697b      	ldr	r3, [r7, #20]
    5e9a:	1c5a      	adds	r2, r3, #1
    5e9c:	617a      	str	r2, [r7, #20]
    5e9e:	781b      	ldrb	r3, [r3, #0]
    5ea0:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:396 (discriminator 1)
    const char *p = str;
    const char *q = 0;
    char c = (char)chr;
    char ch = *p++;

    while(ch)
    5ea2:	f997 300f 	ldrsb.w	r3, [r7, #15]
    5ea6:	2b00      	cmp	r3, #0
    5ea8:	d1ed      	bne.n	5e86 <fnet_strrchr+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:404
            q = p - 1;

        ch = *p++;
    }

    if(q)
    5eaa:	693b      	ldr	r3, [r7, #16]
    5eac:	2b00      	cmp	r3, #0
    5eae:	d001      	beq.n	5eb4 <fnet_strrchr+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:405
        return ((char *)q);
    5eb0:	693b      	ldr	r3, [r7, #16]
    5eb2:	e007      	b.n	5ec4 <fnet_strrchr+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:407

    return (c ? FNET_NULL : (char *)(p - 1));
    5eb4:	f997 300e 	ldrsb.w	r3, [r7, #14]
    5eb8:	2b00      	cmp	r3, #0
    5eba:	d102      	bne.n	5ec2 <fnet_strrchr+0x5e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:407 (discriminator 1)
    5ebc:	697b      	ldr	r3, [r7, #20]
    5ebe:	3b01      	subs	r3, #1
    5ec0:	e000      	b.n	5ec4 <fnet_strrchr+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:407 (discriminator 2)
    5ec2:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:408
}
    5ec4:	4618      	mov	r0, r3
    5ec6:	371c      	adds	r7, #28
    5ec8:	46bd      	mov	sp, r7
    5eca:	f85d 7b04 	ldr.w	r7, [sp], #4
    5ece:	4770      	bx	lr

00005ed0 <fnet_strchr>:
fnet_strchr():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:418
* DESCRIPTION: The function fnet_strchr() returns a pointer to the first 
* occurence of chr in str, or 0 if chr is not found.
*
*************************************************************************/
char *fnet_strchr( const char *str, int chr )
{
    5ed0:	b480      	push	{r7}
    5ed2:	b085      	sub	sp, #20
    5ed4:	af00      	add	r7, sp, #0
    5ed6:	6078      	str	r0, [r7, #4]
    5ed8:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:419
    const char *p = str;
    5eda:	687b      	ldr	r3, [r7, #4]
    5edc:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:420
    char c = (char)chr;
    5ede:	683b      	ldr	r3, [r7, #0]
    5ee0:	72bb      	strb	r3, [r7, #10]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:421
    char ch = *p++;
    5ee2:	68fb      	ldr	r3, [r7, #12]
    5ee4:	1c5a      	adds	r2, r3, #1
    5ee6:	60fa      	str	r2, [r7, #12]
    5ee8:	781b      	ldrb	r3, [r3, #0]
    5eea:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:423

    while(ch)
    5eec:	e00d      	b.n	5f0a <fnet_strchr+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:425
    {
        if(ch == c)
    5eee:	f997 200b 	ldrsb.w	r2, [r7, #11]
    5ef2:	f997 300a 	ldrsb.w	r3, [r7, #10]
    5ef6:	429a      	cmp	r2, r3
    5ef8:	d102      	bne.n	5f00 <fnet_strchr+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:426
            return ((char *)(p - 1));
    5efa:	68fb      	ldr	r3, [r7, #12]
    5efc:	3b01      	subs	r3, #1
    5efe:	e010      	b.n	5f22 <fnet_strchr+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:428

        ch = *p++;
    5f00:	68fb      	ldr	r3, [r7, #12]
    5f02:	1c5a      	adds	r2, r3, #1
    5f04:	60fa      	str	r2, [r7, #12]
    5f06:	781b      	ldrb	r3, [r3, #0]
    5f08:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:423 (discriminator 1)
{
    const char *p = str;
    char c = (char)chr;
    char ch = *p++;

    while(ch)
    5f0a:	f997 300b 	ldrsb.w	r3, [r7, #11]
    5f0e:	2b00      	cmp	r3, #0
    5f10:	d1ed      	bne.n	5eee <fnet_strchr+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:431
            return ((char *)(p - 1));

        ch = *p++;
    }

    return (c ? FNET_NULL : (char *)(p - 1));
    5f12:	f997 300a 	ldrsb.w	r3, [r7, #10]
    5f16:	2b00      	cmp	r3, #0
    5f18:	d102      	bne.n	5f20 <fnet_strchr+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:431 (discriminator 1)
    5f1a:	68fb      	ldr	r3, [r7, #12]
    5f1c:	3b01      	subs	r3, #1
    5f1e:	e000      	b.n	5f22 <fnet_strchr+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:431 (discriminator 2)
    5f20:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:432
}
    5f22:	4618      	mov	r0, r3
    5f24:	3714      	adds	r7, #20
    5f26:	46bd      	mov	sp, r7
    5f28:	f85d 7b04 	ldr.w	r7, [sp], #4
    5f2c:	4770      	bx	lr
    5f2e:	bf00      	nop

00005f30 <fnet_strstr>:
fnet_strstr():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:444
* If the length of pat is zero, then fnet_strstr() will 
* simply return str.
*
*************************************************************************/
char *fnet_strstr( const char *str, const char *pat )
{
    5f30:	b480      	push	{r7}
    5f32:	b089      	sub	sp, #36	; 0x24
    5f34:	af00      	add	r7, sp, #0
    5f36:	6078      	str	r0, [r7, #4]
    5f38:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:445
    unsigned char *s1 = (unsigned char *)str;
    5f3a:	687b      	ldr	r3, [r7, #4]
    5f3c:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:446
    unsigned char *p1 = (unsigned char *)pat;
    5f3e:	683b      	ldr	r3, [r7, #0]
    5f40:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:449
    unsigned char firstc, c1, c2;

    if((pat == 0) || (!((firstc = *p1++)!= 0)) )
    5f42:	683b      	ldr	r3, [r7, #0]
    5f44:	2b00      	cmp	r3, #0
    5f46:	d007      	beq.n	5f58 <fnet_strstr+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:449 (discriminator 1)
    5f48:	68fb      	ldr	r3, [r7, #12]
    5f4a:	1c5a      	adds	r2, r3, #1
    5f4c:	60fa      	str	r2, [r7, #12]
    5f4e:	781b      	ldrb	r3, [r3, #0]
    5f50:	72fb      	strb	r3, [r7, #11]
    5f52:	7afb      	ldrb	r3, [r7, #11]
    5f54:	2b00      	cmp	r3, #0
    5f56:	d101      	bne.n	5f5c <fnet_strstr+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:450
        return ((char *)str);
    5f58:	687b      	ldr	r3, [r7, #4]
    5f5a:	e02e      	b.n	5fba <fnet_strstr+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:452

    c1 = *s1++;
    5f5c:	69fb      	ldr	r3, [r7, #28]
    5f5e:	1c5a      	adds	r2, r3, #1
    5f60:	61fa      	str	r2, [r7, #28]
    5f62:	781b      	ldrb	r3, [r3, #0]
    5f64:	76fb      	strb	r3, [r7, #27]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:454

    while(c1)
    5f66:	e024      	b.n	5fb2 <fnet_strstr+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:456
    {
        if(c1 == firstc)
    5f68:	7efa      	ldrb	r2, [r7, #27]
    5f6a:	7afb      	ldrb	r3, [r7, #11]
    5f6c:	429a      	cmp	r2, r3
    5f6e:	d11b      	bne.n	5fa8 <fnet_strstr+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:458
        {
            const unsigned char *s2 = s1;
    5f70:	69fb      	ldr	r3, [r7, #28]
    5f72:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:459
            const unsigned char *p2 = p1;
    5f74:	68fb      	ldr	r3, [r7, #12]
    5f76:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:461

            while((c1 = *s2++) == (c2 = *p2++) && c1)
    5f78:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:461 (discriminator 1)
    5f7a:	697b      	ldr	r3, [r7, #20]
    5f7c:	1c5a      	adds	r2, r3, #1
    5f7e:	617a      	str	r2, [r7, #20]
    5f80:	781b      	ldrb	r3, [r3, #0]
    5f82:	76fb      	strb	r3, [r7, #27]
    5f84:	693b      	ldr	r3, [r7, #16]
    5f86:	1c5a      	adds	r2, r3, #1
    5f88:	613a      	str	r2, [r7, #16]
    5f8a:	781b      	ldrb	r3, [r3, #0]
    5f8c:	72bb      	strb	r3, [r7, #10]
    5f8e:	7efa      	ldrb	r2, [r7, #27]
    5f90:	7abb      	ldrb	r3, [r7, #10]
    5f92:	429a      	cmp	r2, r3
    5f94:	d102      	bne.n	5f9c <fnet_strstr+0x6c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:461 (discriminator 2)
    5f96:	7efb      	ldrb	r3, [r7, #27]
    5f98:	2b00      	cmp	r3, #0
    5f9a:	d1ee      	bne.n	5f7a <fnet_strstr+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:464
            { };

            if(!c2)
    5f9c:	7abb      	ldrb	r3, [r7, #10]
    5f9e:	2b00      	cmp	r3, #0
    5fa0:	d102      	bne.n	5fa8 <fnet_strstr+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:465
                return ((char *)s1 - 1);
    5fa2:	69fb      	ldr	r3, [r7, #28]
    5fa4:	3b01      	subs	r3, #1
    5fa6:	e008      	b.n	5fba <fnet_strstr+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:468
        }

        c1 = *s1++;
    5fa8:	69fb      	ldr	r3, [r7, #28]
    5faa:	1c5a      	adds	r2, r3, #1
    5fac:	61fa      	str	r2, [r7, #28]
    5fae:	781b      	ldrb	r3, [r3, #0]
    5fb0:	76fb      	strb	r3, [r7, #27]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:454 (discriminator 1)
    if((pat == 0) || (!((firstc = *p1++)!= 0)) )
        return ((char *)str);

    c1 = *s1++;

    while(c1)
    5fb2:	7efb      	ldrb	r3, [r7, #27]
    5fb4:	2b00      	cmp	r3, #0
    5fb6:	d1d7      	bne.n	5f68 <fnet_strstr+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:471
        }

        c1 = *s1++;
    }

    return (0);
    5fb8:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:472
}
    5fba:	4618      	mov	r0, r3
    5fbc:	3724      	adds	r7, #36	; 0x24
    5fbe:	46bd      	mov	sp, r7
    5fc0:	f85d 7b04 	ldr.w	r7, [sp], #4
    5fc4:	4770      	bx	lr
    5fc6:	bf00      	nop

00005fc8 <fnet_strncmp>:
fnet_strncmp():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:482
* DESCRIPTION: The fnet_strncmp() function compares at most count characters
* of str1 and str2.
*
*************************************************************************/
int fnet_strncmp( const char *str1, const char *str2, unsigned int n )
{
    5fc8:	b480      	push	{r7}
    5fca:	b089      	sub	sp, #36	; 0x24
    5fcc:	af00      	add	r7, sp, #0
    5fce:	60f8      	str	r0, [r7, #12]
    5fd0:	60b9      	str	r1, [r7, #8]
    5fd2:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:483
    const unsigned char *p1 = (unsigned char *)str1;
    5fd4:	68fb      	ldr	r3, [r7, #12]
    5fd6:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:484
    const unsigned char *p2 = (unsigned char *)str2;
    5fd8:	68bb      	ldr	r3, [r7, #8]
    5fda:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:487
    unsigned char c1, c2;

    n++;
    5fdc:	687b      	ldr	r3, [r7, #4]
    5fde:	3301      	adds	r3, #1
    5fe0:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:489

    while(--n)
    5fe2:	e015      	b.n	6010 <fnet_strncmp+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:490
      if((c1 = *p1++) != (c2 = *p2++))
    5fe4:	69fb      	ldr	r3, [r7, #28]
    5fe6:	1c5a      	adds	r2, r3, #1
    5fe8:	61fa      	str	r2, [r7, #28]
    5fea:	781b      	ldrb	r3, [r3, #0]
    5fec:	75fb      	strb	r3, [r7, #23]
    5fee:	69bb      	ldr	r3, [r7, #24]
    5ff0:	1c5a      	adds	r2, r3, #1
    5ff2:	61ba      	str	r2, [r7, #24]
    5ff4:	781b      	ldrb	r3, [r3, #0]
    5ff6:	75bb      	strb	r3, [r7, #22]
    5ff8:	7dfa      	ldrb	r2, [r7, #23]
    5ffa:	7dbb      	ldrb	r3, [r7, #22]
    5ffc:	429a      	cmp	r2, r3
    5ffe:	d003      	beq.n	6008 <fnet_strncmp+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:491
          return (c1 - c2);
    6000:	7dfa      	ldrb	r2, [r7, #23]
    6002:	7dbb      	ldrb	r3, [r7, #22]
    6004:	1ad3      	subs	r3, r2, r3
    6006:	e00a      	b.n	601e <fnet_strncmp+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:493

      else if(!c1)
    6008:	7dfb      	ldrb	r3, [r7, #23]
    600a:	2b00      	cmp	r3, #0
    600c:	d100      	bne.n	6010 <fnet_strncmp+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:494
          break;
    600e:	e005      	b.n	601c <fnet_strncmp+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:489 (discriminator 1)
    const unsigned char *p2 = (unsigned char *)str2;
    unsigned char c1, c2;

    n++;

    while(--n)
    6010:	687b      	ldr	r3, [r7, #4]
    6012:	3b01      	subs	r3, #1
    6014:	607b      	str	r3, [r7, #4]
    6016:	687b      	ldr	r3, [r7, #4]
    6018:	2b00      	cmp	r3, #0
    601a:	d1e3      	bne.n	5fe4 <fnet_strncmp+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:496
          return (c1 - c2);

      else if(!c1)
          break;

    return (0);
    601c:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:497
}
    601e:	4618      	mov	r0, r3
    6020:	3724      	adds	r7, #36	; 0x24
    6022:	46bd      	mov	sp, r7
    6024:	f85d 7b04 	ldr.w	r7, [sp], #4
    6028:	4770      	bx	lr
    602a:	bf00      	nop

0000602c <fnet_strtoul>:
fnet_strtoul():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:506
*
* DESCRIPTION: 
*
*************************************************************************/
unsigned long fnet_strtoul (char *str, char **ptr, int base)
{
    602c:	b480      	push	{r7}
    602e:	b08b      	sub	sp, #44	; 0x2c
    6030:	af00      	add	r7, sp, #0
    6032:	60f8      	str	r0, [r7, #12]
    6034:	60b9      	str	r1, [r7, #8]
    6036:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:512
	unsigned long rvalue;
	int c, err, neg;
	char *endp;
	char *startp;

	rvalue = 0;  err = 0;  neg = 0;
    6038:	2300      	movs	r3, #0
    603a:	627b      	str	r3, [r7, #36]	; 0x24
    603c:	2300      	movs	r3, #0
    603e:	61fb      	str	r3, [r7, #28]
    6040:	2300      	movs	r3, #0
    6042:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:515

	/* Check for invalid arguments */
	if ((str == 0) || (base < 0) || (base == 1) || (base > 36))
    6044:	68fb      	ldr	r3, [r7, #12]
    6046:	2b00      	cmp	r3, #0
    6048:	d008      	beq.n	605c <fnet_strtoul+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:515 (discriminator 1)
    604a:	687b      	ldr	r3, [r7, #4]
    604c:	2b00      	cmp	r3, #0
    604e:	db05      	blt.n	605c <fnet_strtoul+0x30>
    6050:	687b      	ldr	r3, [r7, #4]
    6052:	2b01      	cmp	r3, #1
    6054:	d002      	beq.n	605c <fnet_strtoul+0x30>
    6056:	687b      	ldr	r3, [r7, #4]
    6058:	2b24      	cmp	r3, #36	; 0x24
    605a:	dd07      	ble.n	606c <fnet_strtoul+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:517
	{
		if (ptr != 0)
    605c:	68bb      	ldr	r3, [r7, #8]
    605e:	2b00      	cmp	r3, #0
    6060:	d002      	beq.n	6068 <fnet_strtoul+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:519
		{
			*ptr = str;
    6062:	68bb      	ldr	r3, [r7, #8]
    6064:	68fa      	ldr	r2, [r7, #12]
    6066:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:521
		}
		return 0;
    6068:	2300      	movs	r3, #0
    606a:	e0a9      	b.n	61c0 <fnet_strtoul+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:525
	}

	/* Skip leading white spaces */
	for (startp = str; ((*startp == ' ') || (*startp == '\t')) ; ++startp)
    606c:	68fb      	ldr	r3, [r7, #12]
    606e:	613b      	str	r3, [r7, #16]
    6070:	e002      	b.n	6078 <fnet_strtoul+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:525 (discriminator 2)
    6072:	693b      	ldr	r3, [r7, #16]
    6074:	3301      	adds	r3, #1
    6076:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:525 (discriminator 1)
    6078:	693b      	ldr	r3, [r7, #16]
    607a:	781b      	ldrb	r3, [r3, #0]
    607c:	b25b      	sxtb	r3, r3
    607e:	2b20      	cmp	r3, #32
    6080:	d0f7      	beq.n	6072 <fnet_strtoul+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:525 (discriminator 3)
    6082:	693b      	ldr	r3, [r7, #16]
    6084:	781b      	ldrb	r3, [r3, #0]
    6086:	b25b      	sxtb	r3, r3
    6088:	2b09      	cmp	r3, #9
    608a:	d0f2      	beq.n	6072 <fnet_strtoul+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:529
		;

	/* Check for notations */
	switch (startp[0])
    608c:	693b      	ldr	r3, [r7, #16]
    608e:	781b      	ldrb	r3, [r3, #0]
    6090:	b25b      	sxtb	r3, r3
    6092:	2b2d      	cmp	r3, #45	; 0x2d
    6094:	d01b      	beq.n	60ce <fnet_strtoul+0xa2>
    6096:	2b30      	cmp	r3, #48	; 0x30
    6098:	d000      	beq.n	609c <fnet_strtoul+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:546
		case '-':
			neg = 1;
			startp = &startp[1];
			break;
		default:
			break;
    609a:	e01e      	b.n	60da <fnet_strtoul+0xae>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:532

	/* Check for notations */
	switch (startp[0])
	{
		case '0':
			if ((startp[1] == 'x') || (startp[1] == 'X'))
    609c:	693b      	ldr	r3, [r7, #16]
    609e:	3301      	adds	r3, #1
    60a0:	781b      	ldrb	r3, [r3, #0]
    60a2:	b25b      	sxtb	r3, r3
    60a4:	2b78      	cmp	r3, #120	; 0x78
    60a6:	d005      	beq.n	60b4 <fnet_strtoul+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:532 (discriminator 1)
    60a8:	693b      	ldr	r3, [r7, #16]
    60aa:	3301      	adds	r3, #1
    60ac:	781b      	ldrb	r3, [r3, #0]
    60ae:	b25b      	sxtb	r3, r3
    60b0:	2b58      	cmp	r3, #88	; 0x58
    60b2:	d10b      	bne.n	60cc <fnet_strtoul+0xa0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:534
			{
				if ((base == 0) || (base == 16))
    60b4:	687b      	ldr	r3, [r7, #4]
    60b6:	2b00      	cmp	r3, #0
    60b8:	d002      	beq.n	60c0 <fnet_strtoul+0x94>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:534 (discriminator 1)
    60ba:	687b      	ldr	r3, [r7, #4]
    60bc:	2b10      	cmp	r3, #16
    60be:	d105      	bne.n	60cc <fnet_strtoul+0xa0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:536
				{
					base = 16;
    60c0:	2310      	movs	r3, #16
    60c2:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:537
					startp = &startp[2];
    60c4:	693b      	ldr	r3, [r7, #16]
    60c6:	3302      	adds	r3, #2
    60c8:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:540
				}
			}
			break;
    60ca:	e006      	b.n	60da <fnet_strtoul+0xae>
    60cc:	e005      	b.n	60da <fnet_strtoul+0xae>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:542
		case '-':
			neg = 1;
    60ce:	2301      	movs	r3, #1
    60d0:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:543
			startp = &startp[1];
    60d2:	693b      	ldr	r3, [r7, #16]
    60d4:	3301      	adds	r3, #1
    60d6:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:544
			break;
    60d8:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:549
		default:
			break;
	}

	if (base == 0)
    60da:	687b      	ldr	r3, [r7, #4]
    60dc:	2b00      	cmp	r3, #0
    60de:	d101      	bne.n	60e4 <fnet_strtoul+0xb8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:550
		base = 10;
    60e0:	230a      	movs	r3, #10
    60e2:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:553

	/* Check for invalid chars in str */
	for ( endp = startp; ((c = *endp) != '\0') && !((*endp == ' ') || (*endp == '\t')); ++endp)
    60e4:	693b      	ldr	r3, [r7, #16]
    60e6:	617b      	str	r3, [r7, #20]
    60e8:	e047      	b.n	617a <fnet_strtoul+0x14e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:556
	{
		/* Check for 0..9,Aa-Zz */
		if (!(((c >= '0') && (c <= '9')) ||
    60ea:	6a3b      	ldr	r3, [r7, #32]
    60ec:	2b2f      	cmp	r3, #47	; 0x2f
    60ee:	dd02      	ble.n	60f6 <fnet_strtoul+0xca>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:556 (discriminator 2)
    60f0:	6a3b      	ldr	r3, [r7, #32]
    60f2:	2b39      	cmp	r3, #57	; 0x39
    60f4:	dd0e      	ble.n	6114 <fnet_strtoul+0xe8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:556 (discriminator 1)
    60f6:	6a3b      	ldr	r3, [r7, #32]
    60f8:	2b40      	cmp	r3, #64	; 0x40
    60fa:	dd02      	ble.n	6102 <fnet_strtoul+0xd6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:557
		    ((c >= 'A') && (c <= 'Z')) ||
    60fc:	6a3b      	ldr	r3, [r7, #32]
    60fe:	2b5a      	cmp	r3, #90	; 0x5a
    6100:	dd08      	ble.n	6114 <fnet_strtoul+0xe8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:556 (discriminator 1)

	/* Check for invalid chars in str */
	for ( endp = startp; ((c = *endp) != '\0') && !((*endp == ' ') || (*endp == '\t')); ++endp)
	{
		/* Check for 0..9,Aa-Zz */
		if (!(((c >= '0') && (c <= '9')) ||
    6102:	6a3b      	ldr	r3, [r7, #32]
    6104:	2b60      	cmp	r3, #96	; 0x60
    6106:	dd02      	ble.n	610e <fnet_strtoul+0xe2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:558
		    ((c >= 'A') && (c <= 'Z')) ||
		    ((c >= 'a') && (c <= 'z'))))
    6108:	6a3b      	ldr	r3, [r7, #32]
    610a:	2b7a      	cmp	r3, #122	; 0x7a
    610c:	dd02      	ble.n	6114 <fnet_strtoul+0xe8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:560
		{
			err = 1;
    610e:	2301      	movs	r3, #1
    6110:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:561
			break;
    6112:	e043      	b.n	619c <fnet_strtoul+0x170>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:565
		}

		/* Convert char to num in 0..36 */
		if ((c >= '0') && (c <= '9')) /* Is digit.*/
    6114:	6a3b      	ldr	r3, [r7, #32]
    6116:	2b2f      	cmp	r3, #47	; 0x2f
    6118:	dd06      	ble.n	6128 <fnet_strtoul+0xfc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:565 (discriminator 1)
    611a:	6a3b      	ldr	r3, [r7, #32]
    611c:	2b39      	cmp	r3, #57	; 0x39
    611e:	dc03      	bgt.n	6128 <fnet_strtoul+0xfc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:567
		{
			c = c - '0';
    6120:	6a3b      	ldr	r3, [r7, #32]
    6122:	3b30      	subs	r3, #48	; 0x30
    6124:	623b      	str	r3, [r7, #32]
    6126:	e00c      	b.n	6142 <fnet_strtoul+0x116>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:571
		}
		else
		{
		    if ((c >= 'A') && (c <= 'Z')) /* Is upper.*/
    6128:	6a3b      	ldr	r3, [r7, #32]
    612a:	2b40      	cmp	r3, #64	; 0x40
    612c:	dd06      	ble.n	613c <fnet_strtoul+0x110>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:571 (discriminator 1)
    612e:	6a3b      	ldr	r3, [r7, #32]
    6130:	2b5a      	cmp	r3, #90	; 0x5a
    6132:	dc03      	bgt.n	613c <fnet_strtoul+0x110>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:573
			{
				c = c - 'A' + 10;
    6134:	6a3b      	ldr	r3, [r7, #32]
    6136:	3b37      	subs	r3, #55	; 0x37
    6138:	623b      	str	r3, [r7, #32]
    613a:	e002      	b.n	6142 <fnet_strtoul+0x116>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:577
			}
			else
			{
				c = c - 'a' + 10;
    613c:	6a3b      	ldr	r3, [r7, #32]
    613e:	3b57      	subs	r3, #87	; 0x57
    6140:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:582
			}
		}

		/* check c against base */
		if (c >= base)
    6142:	6a3a      	ldr	r2, [r7, #32]
    6144:	687b      	ldr	r3, [r7, #4]
    6146:	429a      	cmp	r2, r3
    6148:	db02      	blt.n	6150 <fnet_strtoul+0x124>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:584
		{
			err = 1;
    614a:	2301      	movs	r3, #1
    614c:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:585
			break;
    614e:	e025      	b.n	619c <fnet_strtoul+0x170>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:588
		}

		if (neg)
    6150:	69bb      	ldr	r3, [r7, #24]
    6152:	2b00      	cmp	r3, #0
    6154:	d007      	beq.n	6166 <fnet_strtoul+0x13a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:590
		{
			rvalue = (rvalue * base) - c;
    6156:	687b      	ldr	r3, [r7, #4]
    6158:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    615a:	fb02 f203 	mul.w	r2, r2, r3
    615e:	6a3b      	ldr	r3, [r7, #32]
    6160:	1ad3      	subs	r3, r2, r3
    6162:	627b      	str	r3, [r7, #36]	; 0x24
    6164:	e006      	b.n	6174 <fnet_strtoul+0x148>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:594
		}
		else
		{
			rvalue = (rvalue * base) + c;
    6166:	687b      	ldr	r3, [r7, #4]
    6168:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    616a:	fb02 f203 	mul.w	r2, r2, r3
    616e:	6a3b      	ldr	r3, [r7, #32]
    6170:	4413      	add	r3, r2
    6172:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:553

	if (base == 0)
		base = 10;

	/* Check for invalid chars in str */
	for ( endp = startp; ((c = *endp) != '\0') && !((*endp == ' ') || (*endp == '\t')); ++endp)
    6174:	697b      	ldr	r3, [r7, #20]
    6176:	3301      	adds	r3, #1
    6178:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:553 (discriminator 1)
    617a:	697b      	ldr	r3, [r7, #20]
    617c:	781b      	ldrb	r3, [r3, #0]
    617e:	b25b      	sxtb	r3, r3
    6180:	623b      	str	r3, [r7, #32]
    6182:	6a3b      	ldr	r3, [r7, #32]
    6184:	2b00      	cmp	r3, #0
    6186:	d009      	beq.n	619c <fnet_strtoul+0x170>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:553 (discriminator 2)
    6188:	697b      	ldr	r3, [r7, #20]
    618a:	781b      	ldrb	r3, [r3, #0]
    618c:	b25b      	sxtb	r3, r3
    618e:	2b20      	cmp	r3, #32
    6190:	d004      	beq.n	619c <fnet_strtoul+0x170>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:553 (discriminator 1)
    6192:	697b      	ldr	r3, [r7, #20]
    6194:	781b      	ldrb	r3, [r3, #0]
    6196:	b25b      	sxtb	r3, r3
    6198:	2b09      	cmp	r3, #9
    619a:	d1a6      	bne.n	60ea <fnet_strtoul+0xbe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:601
	}

	/* Upon exit, endp points to the character at which valid info */
	/* STOPS.  No chars including and beyond endp are used.        */

	if (ptr != 0)
    619c:	68bb      	ldr	r3, [r7, #8]
    619e:	2b00      	cmp	r3, #0
    61a0:	d002      	beq.n	61a8 <fnet_strtoul+0x17c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:602
		*ptr = endp;
    61a2:	68bb      	ldr	r3, [r7, #8]
    61a4:	697a      	ldr	r2, [r7, #20]
    61a6:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:604

	if (err)
    61a8:	69fb      	ldr	r3, [r7, #28]
    61aa:	2b00      	cmp	r3, #0
    61ac:	d007      	beq.n	61be <fnet_strtoul+0x192>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:606
	{
		if (ptr != 0)
    61ae:	68bb      	ldr	r3, [r7, #8]
    61b0:	2b00      	cmp	r3, #0
    61b2:	d002      	beq.n	61ba <fnet_strtoul+0x18e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:607
			*ptr = str;
    61b4:	68bb      	ldr	r3, [r7, #8]
    61b6:	68fa      	ldr	r2, [r7, #12]
    61b8:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:609
		
		return 0;
    61ba:	2300      	movs	r3, #0
    61bc:	e000      	b.n	61c0 <fnet_strtoul+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:613
	}
	else
	{
		return rvalue;
    61be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:615
	}
}
    61c0:	4618      	mov	r0, r3
    61c2:	372c      	adds	r7, #44	; 0x2c
    61c4:	46bd      	mov	sp, r7
    61c6:	f85d 7b04 	ldr.w	r7, [sp], #4
    61ca:	4770      	bx	lr

000061cc <fnet_tolower>:
fnet_tolower():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:625
* DESCRIPTION: This function converts an uppercase letter to the corresponding 
* lowercase letter.
*
*************************************************************************/
static char fnet_tolower( const char to_lower )
{
    61cc:	b480      	push	{r7}
    61ce:	b083      	sub	sp, #12
    61d0:	af00      	add	r7, sp, #0
    61d2:	4603      	mov	r3, r0
    61d4:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:626
    if((to_lower >= 'A') && (to_lower <= 'Z'))
    61d6:	f997 3007 	ldrsb.w	r3, [r7, #7]
    61da:	2b40      	cmp	r3, #64	; 0x40
    61dc:	dd08      	ble.n	61f0 <fnet_tolower+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:626 (discriminator 1)
    61de:	f997 3007 	ldrsb.w	r3, [r7, #7]
    61e2:	2b5a      	cmp	r3, #90	; 0x5a
    61e4:	dc04      	bgt.n	61f0 <fnet_tolower+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:627
        return (char)(to_lower + 0x20);
    61e6:	79fb      	ldrb	r3, [r7, #7]
    61e8:	3320      	adds	r3, #32
    61ea:	b2db      	uxtb	r3, r3
    61ec:	b2db      	uxtb	r3, r3
    61ee:	e000      	b.n	61f2 <fnet_tolower+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:629

    return to_lower;
    61f0:	79fb      	ldrb	r3, [r7, #7]
    61f2:	b25b      	sxtb	r3, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:630
}
    61f4:	4618      	mov	r0, r3
    61f6:	370c      	adds	r7, #12
    61f8:	46bd      	mov	sp, r7
    61fa:	f85d 7b04 	ldr.w	r7, [sp], #4
    61fe:	4770      	bx	lr

00006200 <fnet_strcasecmp>:
fnet_strcasecmp():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:642
* integer less than, equal to, or greater than zero if s1 is found, 
* respectively, to be less than, to match, or be greater than s2.
*
*************************************************************************/
int fnet_strcasecmp( const char *s1, const char *s2 )
{
    6200:	b580      	push	{r7, lr}
    6202:	b084      	sub	sp, #16
    6204:	af00      	add	r7, sp, #0
    6206:	6078      	str	r0, [r7, #4]
    6208:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:647
    char c1, c2;

    while(1)
    {
        c1 = fnet_tolower(*s1++);
    620a:	687b      	ldr	r3, [r7, #4]
    620c:	1c5a      	adds	r2, r3, #1
    620e:	607a      	str	r2, [r7, #4]
    6210:	781b      	ldrb	r3, [r3, #0]
    6212:	b25b      	sxtb	r3, r3
    6214:	4618      	mov	r0, r3
    6216:	f7ff ffd9 	bl	61cc <fnet_tolower>
    621a:	4603      	mov	r3, r0
    621c:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:648
        c2 = fnet_tolower(*s2++);
    621e:	683b      	ldr	r3, [r7, #0]
    6220:	1c5a      	adds	r2, r3, #1
    6222:	603a      	str	r2, [r7, #0]
    6224:	781b      	ldrb	r3, [r3, #0]
    6226:	b25b      	sxtb	r3, r3
    6228:	4618      	mov	r0, r3
    622a:	f7ff ffcf 	bl	61cc <fnet_tolower>
    622e:	4603      	mov	r3, r0
    6230:	73bb      	strb	r3, [r7, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:650

        if(c1 < c2)
    6232:	f997 200f 	ldrsb.w	r2, [r7, #15]
    6236:	f997 300e 	ldrsb.w	r3, [r7, #14]
    623a:	429a      	cmp	r2, r3
    623c:	da02      	bge.n	6244 <fnet_strcasecmp+0x44>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:651
            return -1;
    623e:	f04f 33ff 	mov.w	r3, #4294967295
    6242:	e00e      	b.n	6262 <fnet_strcasecmp+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:653

        if(c1 > c2)
    6244:	f997 200f 	ldrsb.w	r2, [r7, #15]
    6248:	f997 300e 	ldrsb.w	r3, [r7, #14]
    624c:	429a      	cmp	r2, r3
    624e:	dd01      	ble.n	6254 <fnet_strcasecmp+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:654
            return 1;
    6250:	2301      	movs	r3, #1
    6252:	e006      	b.n	6262 <fnet_strcasecmp+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:656

        if(c1 == 0)
    6254:	f997 300f 	ldrsb.w	r3, [r7, #15]
    6258:	2b00      	cmp	r3, #0
    625a:	d101      	bne.n	6260 <fnet_strcasecmp+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:657
            return 0;
    625c:	2300      	movs	r3, #0
    625e:	e000      	b.n	6262 <fnet_strcasecmp+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:658
    }
    6260:	e7d3      	b.n	620a <fnet_strcasecmp+0xa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:659
}
    6262:	4618      	mov	r0, r3
    6264:	3710      	adds	r7, #16
    6266:	46bd      	mov	sp, r7
    6268:	bd80      	pop	{r7, pc}
    626a:	bf00      	nop

0000626c <fnet_strcmp_splitter>:
fnet_strcmp_splitter():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:668
*
* DESCRIPTION: 
*
*************************************************************************/
int fnet_strcmp_splitter( const char *in_str, const char *name, char splitter)
{
    626c:	b480      	push	{r7}
    626e:	b089      	sub	sp, #36	; 0x24
    6270:	af00      	add	r7, sp, #0
    6272:	60f8      	str	r0, [r7, #12]
    6274:	60b9      	str	r1, [r7, #8]
    6276:	4613      	mov	r3, r2
    6278:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:672
    int result;
    
    /* No checks for 0 */
    char *s1p = (char *)in_str;
    627a:	68fb      	ldr	r3, [r7, #12]
    627c:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:673
    char *s2p = (char *)name;
    627e:	68bb      	ldr	r3, [r7, #8]
    6280:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:675

    while (*s1p == ' ') s1p++;	    /* Strip leading spaces */
    6282:	e002      	b.n	628a <fnet_strcmp_splitter+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:675 (discriminator 2)
    6284:	69bb      	ldr	r3, [r7, #24]
    6286:	3301      	adds	r3, #1
    6288:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:675 (discriminator 1)
    628a:	69bb      	ldr	r3, [r7, #24]
    628c:	781b      	ldrb	r3, [r3, #0]
    628e:	b25b      	sxtb	r3, r3
    6290:	2b20      	cmp	r3, #32
    6292:	d0f7      	beq.n	6284 <fnet_strcmp_splitter+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:676
	while (*s1p == splitter) s1p++;	/* Strip heading slash */
    6294:	e002      	b.n	629c <fnet_strcmp_splitter+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:676 (discriminator 2)
    6296:	69bb      	ldr	r3, [r7, #24]
    6298:	3301      	adds	r3, #1
    629a:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:676 (discriminator 1)
    629c:	69bb      	ldr	r3, [r7, #24]
    629e:	781b      	ldrb	r3, [r3, #0]
    62a0:	f997 2007 	ldrsb.w	r2, [r7, #7]
    62a4:	b25b      	sxtb	r3, r3
    62a6:	429a      	cmp	r2, r3
    62a8:	d0f5      	beq.n	6296 <fnet_strcmp_splitter+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:678

    while(*s2p != '\0')
    62aa:	e016      	b.n	62da <fnet_strcmp_splitter+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:680
    {
        if(*s1p != *s2p)
    62ac:	69bb      	ldr	r3, [r7, #24]
    62ae:	781a      	ldrb	r2, [r3, #0]
    62b0:	697b      	ldr	r3, [r7, #20]
    62b2:	781b      	ldrb	r3, [r3, #0]
    62b4:	b252      	sxtb	r2, r2
    62b6:	b25b      	sxtb	r3, r3
    62b8:	429a      	cmp	r2, r3
    62ba:	d000      	beq.n	62be <fnet_strcmp_splitter+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:681
            break;
    62bc:	e011      	b.n	62e2 <fnet_strcmp_splitter+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:683

        ++s1p;
    62be:	69bb      	ldr	r3, [r7, #24]
    62c0:	3301      	adds	r3, #1
    62c2:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:684
        ++s2p;
    62c4:	697b      	ldr	r3, [r7, #20]
    62c6:	3301      	adds	r3, #1
    62c8:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:686
        
        if (*s1p == splitter)
    62ca:	69bb      	ldr	r3, [r7, #24]
    62cc:	781b      	ldrb	r3, [r3, #0]
    62ce:	f997 2007 	ldrsb.w	r2, [r7, #7]
    62d2:	b25b      	sxtb	r3, r3
    62d4:	429a      	cmp	r2, r3
    62d6:	d100      	bne.n	62da <fnet_strcmp_splitter+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:687
            break; /* next element */
    62d8:	e003      	b.n	62e2 <fnet_strcmp_splitter+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:678 (discriminator 1)
    char *s2p = (char *)name;

    while (*s1p == ' ') s1p++;	    /* Strip leading spaces */
	while (*s1p == splitter) s1p++;	/* Strip heading slash */

    while(*s2p != '\0')
    62da:	697b      	ldr	r3, [r7, #20]
    62dc:	781b      	ldrb	r3, [r3, #0]
    62de:	2b00      	cmp	r3, #0
    62e0:	d1e4      	bne.n	62ac <fnet_strcmp_splitter+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:690
        
        if (*s1p == splitter)
            break; /* next element */
    }
    
    if(*s1p == splitter)
    62e2:	69bb      	ldr	r3, [r7, #24]
    62e4:	781b      	ldrb	r3, [r3, #0]
    62e6:	f997 2007 	ldrsb.w	r2, [r7, #7]
    62ea:	b25b      	sxtb	r3, r3
    62ec:	429a      	cmp	r2, r3
    62ee:	d102      	bne.n	62f6 <fnet_strcmp_splitter+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:692
    {
        result = 0;
    62f0:	2300      	movs	r3, #0
    62f2:	61fb      	str	r3, [r7, #28]
    62f4:	e007      	b.n	6306 <fnet_strcmp_splitter+0x9a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:696
    }
    else
    {
        result = (*s1p - *s2p);
    62f6:	69bb      	ldr	r3, [r7, #24]
    62f8:	781b      	ldrb	r3, [r3, #0]
    62fa:	b25a      	sxtb	r2, r3
    62fc:	697b      	ldr	r3, [r7, #20]
    62fe:	781b      	ldrb	r3, [r3, #0]
    6300:	b25b      	sxtb	r3, r3
    6302:	1ad3      	subs	r3, r2, r3
    6304:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:699
    }

    return result;
    6306:	69fb      	ldr	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:700
}
    6308:	4618      	mov	r0, r3
    630a:	3724      	adds	r7, #36	; 0x24
    630c:	46bd      	mov	sp, r7
    630e:	f85d 7b04 	ldr.w	r7, [sp], #4
    6312:	4770      	bx	lr

00006314 <fnet_strtok_r>:
fnet_strtok_r():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:709
*
* DESCRIPTION: Breaks a string into a sequence of tokens. 
*
*************************************************************************/
char * fnet_strtok_r(char *str, const char *delimiter, char **last)
{
    6314:	b480      	push	{r7}
    6316:	b089      	sub	sp, #36	; 0x24
    6318:	af00      	add	r7, sp, #0
    631a:	60f8      	str	r0, [r7, #12]
    631c:	60b9      	str	r1, [r7, #8]
    631e:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:714
	char *spanp;
	int c, sc;
	char *tok;

	if (str == FNET_NULL && (str = *last) == FNET_NULL)
    6320:	68fb      	ldr	r3, [r7, #12]
    6322:	2b00      	cmp	r3, #0
    6324:	d107      	bne.n	6336 <fnet_strtok_r+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:714 (discriminator 1)
    6326:	687b      	ldr	r3, [r7, #4]
    6328:	681b      	ldr	r3, [r3, #0]
    632a:	60fb      	str	r3, [r7, #12]
    632c:	68fb      	ldr	r3, [r7, #12]
    632e:	2b00      	cmp	r3, #0
    6330:	d101      	bne.n	6336 <fnet_strtok_r+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:715
		return (FNET_NULL);
    6332:	2300      	movs	r3, #0
    6334:	e046      	b.n	63c4 <fnet_strtok_r+0xb0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:721

	/*
	 * Skip leading delimiters.
	 */
cont:
	c = *str++;
    6336:	68fb      	ldr	r3, [r7, #12]
    6338:	1c5a      	adds	r2, r3, #1
    633a:	60fa      	str	r2, [r7, #12]
    633c:	781b      	ldrb	r3, [r3, #0]
    633e:	b25b      	sxtb	r3, r3
    6340:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:722
	for (spanp = (char *)delimiter; (sc = *spanp++) != 0;)\
    6342:	68bb      	ldr	r3, [r7, #8]
    6344:	61fb      	str	r3, [r7, #28]
    6346:	e004      	b.n	6352 <fnet_strtok_r+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:724
	{
		if (c == sc)
    6348:	69ba      	ldr	r2, [r7, #24]
    634a:	697b      	ldr	r3, [r7, #20]
    634c:	429a      	cmp	r2, r3
    634e:	d100      	bne.n	6352 <fnet_strtok_r+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:725
			goto cont;
    6350:	e7f1      	b.n	6336 <fnet_strtok_r+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:722 (discriminator 1)
	/*
	 * Skip leading delimiters.
	 */
cont:
	c = *str++;
	for (spanp = (char *)delimiter; (sc = *spanp++) != 0;)\
    6352:	69fb      	ldr	r3, [r7, #28]
    6354:	1c5a      	adds	r2, r3, #1
    6356:	61fa      	str	r2, [r7, #28]
    6358:	781b      	ldrb	r3, [r3, #0]
    635a:	b25b      	sxtb	r3, r3
    635c:	617b      	str	r3, [r7, #20]
    635e:	697b      	ldr	r3, [r7, #20]
    6360:	2b00      	cmp	r3, #0
    6362:	d1f1      	bne.n	6348 <fnet_strtok_r+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:728
	{
		if (c == sc)
			goto cont;
	}

	if (c == 0) /* No non-delimiter characters */
    6364:	69bb      	ldr	r3, [r7, #24]
    6366:	2b00      	cmp	r3, #0
    6368:	d104      	bne.n	6374 <fnet_strtok_r+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:730
	{		
		*last = FNET_NULL;
    636a:	687b      	ldr	r3, [r7, #4]
    636c:	2200      	movs	r2, #0
    636e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:731
		return (FNET_NULL);
    6370:	2300      	movs	r3, #0
    6372:	e027      	b.n	63c4 <fnet_strtok_r+0xb0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:733
	}
	tok = str - 1;
    6374:	68fb      	ldr	r3, [r7, #12]
    6376:	3b01      	subs	r3, #1
    6378:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:740
	/*
	 * Scan token.
	 */
	for (;;) 
	{
		c = *str++;
    637a:	68fb      	ldr	r3, [r7, #12]
    637c:	1c5a      	adds	r2, r3, #1
    637e:	60fa      	str	r2, [r7, #12]
    6380:	781b      	ldrb	r3, [r3, #0]
    6382:	b25b      	sxtb	r3, r3
    6384:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:741
		spanp = (char *)delimiter;
    6386:	68bb      	ldr	r3, [r7, #8]
    6388:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:744
		do 
		{
			if ((sc = *spanp++) == c)
    638a:	69fb      	ldr	r3, [r7, #28]
    638c:	1c5a      	adds	r2, r3, #1
    638e:	61fa      	str	r2, [r7, #28]
    6390:	781b      	ldrb	r3, [r3, #0]
    6392:	b25b      	sxtb	r3, r3
    6394:	617b      	str	r3, [r7, #20]
    6396:	697a      	ldr	r2, [r7, #20]
    6398:	69bb      	ldr	r3, [r7, #24]
    639a:	429a      	cmp	r2, r3
    639c:	d10e      	bne.n	63bc <fnet_strtok_r+0xa8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:746
			{
				if (c == 0)
    639e:	69bb      	ldr	r3, [r7, #24]
    63a0:	2b00      	cmp	r3, #0
    63a2:	d102      	bne.n	63aa <fnet_strtok_r+0x96>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:747
					str = FNET_NULL;
    63a4:	2300      	movs	r3, #0
    63a6:	60fb      	str	r3, [r7, #12]
    63a8:	e003      	b.n	63b2 <fnet_strtok_r+0x9e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:749
				else
					str[-1] = 0;
    63aa:	68fb      	ldr	r3, [r7, #12]
    63ac:	3b01      	subs	r3, #1
    63ae:	2200      	movs	r2, #0
    63b0:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:750
				*last = str;
    63b2:	687b      	ldr	r3, [r7, #4]
    63b4:	68fa      	ldr	r2, [r7, #12]
    63b6:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:751
				return (tok);
    63b8:	693b      	ldr	r3, [r7, #16]
    63ba:	e003      	b.n	63c4 <fnet_strtok_r+0xb0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:753
			}
		} while (sc != 0);
    63bc:	697b      	ldr	r3, [r7, #20]
    63be:	2b00      	cmp	r3, #0
    63c0:	d1e3      	bne.n	638a <fnet_strtok_r+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:754
	}
    63c2:	e7da      	b.n	637a <fnet_strtok_r+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_stdlib.c:756
	/* Not reached.*/
}
    63c4:	4618      	mov	r0, r3
    63c6:	3724      	adds	r7, #36	; 0x24
    63c8:	46bd      	mov	sp, r7
    63ca:	f85d 7b04 	ldr.w	r7, [sp], #4
    63ce:	4770      	bx	lr

000063d0 <fnet_tcp_init>:
fnet_tcp_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:202
*
* RETURNS: If no error occurs, this function returns ERR_OK. Otherwise
*          it returns FNET_ERR.
*************************************************************************/
static int fnet_tcp_init( void )
{
    63d0:	b580      	push	{r7, lr}
    63d2:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:205

    /* Create the slow timer.*/
    fnet_tcp_fasttimer = fnet_timer_new(FNET_TCP_FASTTIMO / FNET_TIMER_PERIOD_MS, fnet_tcp_fasttimo, 0);
    63d4:	2002      	movs	r0, #2
    63d6:	4914      	ldr	r1, [pc, #80]	; (6428 <fnet_tcp_init+0x58>)
    63d8:	2200      	movs	r2, #0
    63da:	f003 fd4b 	bl	9e74 <fnet_timer_new>
    63de:	4602      	mov	r2, r0
    63e0:	4b12      	ldr	r3, [pc, #72]	; (642c <fnet_tcp_init+0x5c>)
    63e2:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:207

    if(!fnet_tcp_fasttimer)
    63e4:	4b11      	ldr	r3, [pc, #68]	; (642c <fnet_tcp_init+0x5c>)
    63e6:	681b      	ldr	r3, [r3, #0]
    63e8:	2b00      	cmp	r3, #0
    63ea:	d102      	bne.n	63f2 <fnet_tcp_init+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:208
        return FNET_ERR;
    63ec:	f04f 33ff 	mov.w	r3, #4294967295
    63f0:	e017      	b.n	6422 <fnet_tcp_init+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:211

    /* Create the fast timer.*/
    fnet_tcp_slowtimer = fnet_timer_new(FNET_TCP_SLOWTIMO / FNET_TIMER_PERIOD_MS, fnet_tcp_slowtimo, 0);
    63f2:	2005      	movs	r0, #5
    63f4:	490e      	ldr	r1, [pc, #56]	; (6430 <fnet_tcp_init+0x60>)
    63f6:	2200      	movs	r2, #0
    63f8:	f003 fd3c 	bl	9e74 <fnet_timer_new>
    63fc:	4602      	mov	r2, r0
    63fe:	4b0d      	ldr	r3, [pc, #52]	; (6434 <fnet_tcp_init+0x64>)
    6400:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:213

    if(!fnet_tcp_slowtimer)
    6402:	4b0c      	ldr	r3, [pc, #48]	; (6434 <fnet_tcp_init+0x64>)
    6404:	681b      	ldr	r3, [r3, #0]
    6406:	2b00      	cmp	r3, #0
    6408:	d10a      	bne.n	6420 <fnet_tcp_init+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:215
    {
        fnet_timer_free(fnet_tcp_fasttimer);
    640a:	4b08      	ldr	r3, [pc, #32]	; (642c <fnet_tcp_init+0x5c>)
    640c:	681b      	ldr	r3, [r3, #0]
    640e:	4618      	mov	r0, r3
    6410:	f003 fd60 	bl	9ed4 <fnet_timer_free>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:216
        fnet_tcp_fasttimer = 0;
    6414:	4b05      	ldr	r3, [pc, #20]	; (642c <fnet_tcp_init+0x5c>)
    6416:	2200      	movs	r2, #0
    6418:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:217
        return FNET_ERR;
    641a:	f04f 33ff 	mov.w	r3, #4294967295
    641e:	e000      	b.n	6422 <fnet_tcp_init+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:220
    }

    return FNET_OK;
    6420:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:221
}
    6422:	4618      	mov	r0, r3
    6424:	bd80      	pop	{r7, pc}
    6426:	bf00      	nop
    6428:	00008991 	.word	0x00008991
    642c:	10004390 	.word	0x10004390
    6430:	0000890d 	.word	0x0000890d
    6434:	10004394 	.word	0x10004394

00006438 <fnet_tcp_release>:
fnet_tcp_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:231
* DESCRIPTION: This function resets and deletes sockets and releases timers.
*
* RETURNS: None.          
*************************************************************************/
static void fnet_tcp_release( void )
{
    6438:	b580      	push	{r7, lr}
    643a:	b082      	sub	sp, #8
    643c:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:234
    fnet_tcp_control_t *cb; 

    fnet_isr_lock();
    643e:	f7fb ff07 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:237

    /* Release sockets.*/
    while(fnet_tcp_prot_if.head)
    6442:	e010      	b.n	6466 <fnet_tcp_release+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:239
    {
        cb = (fnet_tcp_control_t *)fnet_tcp_prot_if.head->protocol_control;
    6444:	4b14      	ldr	r3, [pc, #80]	; (6498 <fnet_tcp_release+0x60>)
    6446:	681b      	ldr	r3, [r3, #0]
    6448:	699b      	ldr	r3, [r3, #24]
    644a:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:240
        cb->tcpcb_flags |= FNET_TCP_CBF_CLOSE;
    644c:	687b      	ldr	r3, [r7, #4]
    644e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    6452:	f043 0201 	orr.w	r2, r3, #1
    6456:	687b      	ldr	r3, [r7, #4]
    6458:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:241
        fnet_tcp_abortsk(fnet_tcp_prot_if.head);
    645c:	4b0e      	ldr	r3, [pc, #56]	; (6498 <fnet_tcp_release+0x60>)
    645e:	681b      	ldr	r3, [r3, #0]
    6460:	4618      	mov	r0, r3
    6462:	f003 f929 	bl	96b8 <fnet_tcp_abortsk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:237 (discriminator 1)
    fnet_tcp_control_t *cb; 

    fnet_isr_lock();

    /* Release sockets.*/
    while(fnet_tcp_prot_if.head)
    6466:	4b0c      	ldr	r3, [pc, #48]	; (6498 <fnet_tcp_release+0x60>)
    6468:	681b      	ldr	r3, [r3, #0]
    646a:	2b00      	cmp	r3, #0
    646c:	d1ea      	bne.n	6444 <fnet_tcp_release+0xc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:245
        cb->tcpcb_flags |= FNET_TCP_CBF_CLOSE;
        fnet_tcp_abortsk(fnet_tcp_prot_if.head);
    }

    /* Free timers.*/
    fnet_timer_free(fnet_tcp_fasttimer);
    646e:	4b0b      	ldr	r3, [pc, #44]	; (649c <fnet_tcp_release+0x64>)
    6470:	681b      	ldr	r3, [r3, #0]
    6472:	4618      	mov	r0, r3
    6474:	f003 fd2e 	bl	9ed4 <fnet_timer_free>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:246
    fnet_timer_free(fnet_tcp_slowtimer);
    6478:	4b09      	ldr	r3, [pc, #36]	; (64a0 <fnet_tcp_release+0x68>)
    647a:	681b      	ldr	r3, [r3, #0]
    647c:	4618      	mov	r0, r3
    647e:	f003 fd29 	bl	9ed4 <fnet_timer_free>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:248

    fnet_tcp_fasttimer = 0;
    6482:	4b06      	ldr	r3, [pc, #24]	; (649c <fnet_tcp_release+0x64>)
    6484:	2200      	movs	r2, #0
    6486:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:249
    fnet_tcp_slowtimer = 0;
    6488:	4b05      	ldr	r3, [pc, #20]	; (64a0 <fnet_tcp_release+0x68>)
    648a:	2200      	movs	r2, #0
    648c:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:251

    fnet_isr_unlock();
    648e:	f7fb feed 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:252
}
    6492:	3708      	adds	r7, #8
    6494:	46bd      	mov	sp, r7
    6496:	bd80      	pop	{r7, pc}
    6498:	10000058 	.word	0x10000058
    649c:	10004390 	.word	0x10004390
    64a0:	10004394 	.word	0x10004394

000064a4 <fnet_tcp_input_ip4>:
fnet_tcp_input_ip4():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:261
*
* DESCRIPTION: TCP input function, from IPv4.
*************************************************************************/
#if FNET_CFG_IP4 
static void fnet_tcp_input_ip4( fnet_netif_t *netif, fnet_ip4_addr_t src_ip, fnet_ip4_addr_t dest_ip, fnet_netbuf_t *nb, fnet_netbuf_t *ip4_nb)
{
    64a4:	b580      	push	{r7, lr}
    64a6:	b08a      	sub	sp, #40	; 0x28
    64a8:	af02      	add	r7, sp, #8
    64aa:	60f8      	str	r0, [r7, #12]
    64ac:	60b9      	str	r1, [r7, #8]
    64ae:	607a      	str	r2, [r7, #4]
    64b0:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:265
    struct sockaddr     src_addr;
    struct sockaddr     dest_addr;;
    
    fnet_memset_zero(&src_addr, sizeof(struct sockaddr));
    64b2:	f107 0318 	add.w	r3, r7, #24
    64b6:	4618      	mov	r0, r3
    64b8:	2108      	movs	r1, #8
    64ba:	f7ff fba7 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:266
     src_addr.sa_family = AF_INET;
    64be:	2301      	movs	r3, #1
    64c0:	833b      	strh	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:267
    ((struct sockaddr_in*)(&src_addr))->sin_addr.s_addr = src_ip;
    64c2:	f107 0318 	add.w	r3, r7, #24
    64c6:	68ba      	ldr	r2, [r7, #8]
    64c8:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:269
    
    fnet_memset_zero(&dest_addr, sizeof(struct sockaddr));
    64ca:	f107 0310 	add.w	r3, r7, #16
    64ce:	4618      	mov	r0, r3
    64d0:	2108      	movs	r1, #8
    64d2:	f7ff fb9b 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:270
    dest_addr.sa_family = AF_INET;
    64d6:	2301      	movs	r3, #1
    64d8:	823b      	strh	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:271
    ((struct sockaddr_in*)(&dest_addr))->sin_addr.s_addr = dest_ip;
    64da:	f107 0310 	add.w	r3, r7, #16
    64de:	687a      	ldr	r2, [r7, #4]
    64e0:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:273

    fnet_tcp_input(netif, &src_addr,  &dest_addr, nb, ip4_nb);  
    64e2:	f107 0218 	add.w	r2, r7, #24
    64e6:	f107 0310 	add.w	r3, r7, #16
    64ea:	6ab9      	ldr	r1, [r7, #40]	; 0x28
    64ec:	9100      	str	r1, [sp, #0]
    64ee:	68f8      	ldr	r0, [r7, #12]
    64f0:	4611      	mov	r1, r2
    64f2:	461a      	mov	r2, r3
    64f4:	683b      	ldr	r3, [r7, #0]
    64f6:	f000 f803 	bl	6500 <fnet_tcp_input>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:274
}
    64fa:	3720      	adds	r7, #32
    64fc:	46bd      	mov	sp, r7
    64fe:	bd80      	pop	{r7, pc}

00006500 <fnet_tcp_input>:
fnet_tcp_input():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:311
* DESCRIPTION: This function receives, checks and routes input segments.
*
* RETURNS: FNET_OK.
*************************************************************************/
static void fnet_tcp_input(fnet_netif_t *netif, struct sockaddr *src_addr,  struct sockaddr *dest_addr, fnet_netbuf_t *nb, fnet_netbuf_t *ip_nb)
{
    6500:	b580      	push	{r7, lr}
    6502:	b088      	sub	sp, #32
    6504:	af00      	add	r7, sp, #0
    6506:	60f8      	str	r0, [r7, #12]
    6508:	60b9      	str	r1, [r7, #8]
    650a:	607a      	str	r2, [r7, #4]
    650c:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:318
    fnet_socket_t   *sk;       
    fnet_netbuf_t   *buf;
    unsigned short  checksum; 
    unsigned long   tcp_length;
    
    tcp_length = (unsigned long)FNET_TCP_LENGTH(nb);
    650e:	683b      	ldr	r3, [r7, #0]
    6510:	68db      	ldr	r3, [r3, #12]
    6512:	330c      	adds	r3, #12
    6514:	781b      	ldrb	r3, [r3, #0]
    6516:	091b      	lsrs	r3, r3, #4
    6518:	b2db      	uxtb	r3, r3
    651a:	009b      	lsls	r3, r3, #2
    651c:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:320
    
    fnet_netbuf_free_chain(ip_nb);
    651e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    6520:	f7fc faee 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:323
 
    /* The header must reside in contiguous area of the memory.*/
    buf = fnet_netbuf_pullup(nb, (int)tcp_length);
    6524:	69fb      	ldr	r3, [r7, #28]
    6526:	6838      	ldr	r0, [r7, #0]
    6528:	4619      	mov	r1, r3
    652a:	f7fc fb0f 	bl	2b4c <fnet_netbuf_pullup>
    652e:	61b8      	str	r0, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:325

    if(!buf)
    6530:	69bb      	ldr	r3, [r7, #24]
    6532:	2b00      	cmp	r3, #0
    6534:	d100      	bne.n	6538 <fnet_tcp_input+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:327
    {
        goto DROP;
    6536:	e080      	b.n	663a <fnet_tcp_input+0x13a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:330
    }
    
    nb = buf;
    6538:	69bb      	ldr	r3, [r7, #24]
    653a:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:341
        checksum = 0;
    }
    else
#endif
    {
        checksum = fnet_checksum_pseudo_start( nb, FNET_HTONS((unsigned short)FNET_IP_PROTOCOL_TCP), (unsigned short)nb->total_length );
    653c:	683b      	ldr	r3, [r7, #0]
    653e:	695b      	ldr	r3, [r3, #20]
    6540:	b29b      	uxth	r3, r3
    6542:	6838      	ldr	r0, [r7, #0]
    6544:	f44f 61c0 	mov.w	r1, #1536	; 0x600
    6548:	461a      	mov	r2, r3
    654a:	f7fa fbc7 	bl	cdc <fnet_checksum_pseudo_start>
    654e:	4603      	mov	r3, r0
    6550:	82fb      	strh	r3, [r7, #22]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:342
        checksum = fnet_checksum_pseudo_end( checksum, (char *)src_addr->sa_data, (char *)dest_addr->sa_data, 
    6552:	68bb      	ldr	r3, [r7, #8]
    6554:	1d19      	adds	r1, r3, #4
    6556:	687b      	ldr	r3, [r7, #4]
    6558:	1d1a      	adds	r2, r3, #4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:343
                                            (dest_addr->sa_family == AF_INET) ? sizeof(fnet_ip4_addr_t) : sizeof(fnet_ip6_addr_t) );
    655a:	687b      	ldr	r3, [r7, #4]
    655c:	881b      	ldrh	r3, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:342
    }
    else
#endif
    {
        checksum = fnet_checksum_pseudo_start( nb, FNET_HTONS((unsigned short)FNET_IP_PROTOCOL_TCP), (unsigned short)nb->total_length );
        checksum = fnet_checksum_pseudo_end( checksum, (char *)src_addr->sa_data, (char *)dest_addr->sa_data, 
    655e:	2b01      	cmp	r3, #1
    6560:	d101      	bne.n	6566 <fnet_tcp_input+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:342 (discriminator 1)
    6562:	2304      	movs	r3, #4
    6564:	e000      	b.n	6568 <fnet_tcp_input+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:342 (discriminator 2)
    6566:	2310      	movs	r3, #16
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:342 (discriminator 3)
    6568:	8af8      	ldrh	r0, [r7, #22]
    656a:	f7fa fbe1 	bl	d30 <fnet_checksum_pseudo_end>
    656e:	4603      	mov	r3, r0
    6570:	82fb      	strh	r3, [r7, #22]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:346 (discriminator 3)
                                            (dest_addr->sa_family == AF_INET) ? sizeof(fnet_ip4_addr_t) : sizeof(fnet_ip6_addr_t) );
    }
   
    if(checksum
    6572:	8afb      	ldrh	r3, [r7, #22]
    6574:	2b00      	cmp	r3, #0
    6576:	d160      	bne.n	663a <fnet_tcp_input+0x13a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:347
        || (fnet_socket_addr_is_broadcast(src_addr, netif) 
    6578:	68b8      	ldr	r0, [r7, #8]
    657a:	68f9      	ldr	r1, [r7, #12]
    657c:	f7ff f856 	bl	562c <fnet_socket_addr_is_broadcast>
    6580:	4603      	mov	r3, r0
    6582:	2b00      	cmp	r3, #0
    6584:	d159      	bne.n	663a <fnet_tcp_input+0x13a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:348
        || fnet_socket_addr_is_multicast(src_addr))
    6586:	68b8      	ldr	r0, [r7, #8]
    6588:	f7ff f830 	bl	55ec <fnet_socket_addr_is_multicast>
    658c:	4603      	mov	r3, r0
    658e:	2b00      	cmp	r3, #0
    6590:	d153      	bne.n	663a <fnet_tcp_input+0x13a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:349
        || (nb->total_length < tcp_length) /* Check the length.*/)
    6592:	683b      	ldr	r3, [r7, #0]
    6594:	695a      	ldr	r2, [r3, #20]
    6596:	69fb      	ldr	r3, [r7, #28]
    6598:	429a      	cmp	r2, r3
    659a:	d34e      	bcc.n	663a <fnet_tcp_input+0x13a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:355
    {
        goto DROP;
    }

    /* Set port numbers.*/
    src_addr->sa_port = FNET_TCP_SPORT(nb);
    659c:	683b      	ldr	r3, [r7, #0]
    659e:	68db      	ldr	r3, [r3, #12]
    65a0:	881a      	ldrh	r2, [r3, #0]
    65a2:	68bb      	ldr	r3, [r7, #8]
    65a4:	805a      	strh	r2, [r3, #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:356
    dest_addr->sa_port = FNET_TCP_DPORT(nb);
    65a6:	683b      	ldr	r3, [r7, #0]
    65a8:	68db      	ldr	r3, [r3, #12]
    65aa:	3302      	adds	r3, #2
    65ac:	881a      	ldrh	r2, [r3, #0]
    65ae:	687b      	ldr	r3, [r7, #4]
    65b0:	805a      	strh	r2, [r3, #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:358

    if(fnet_socket_addr_is_broadcast(dest_addr, netif) || fnet_socket_addr_is_multicast(dest_addr))
    65b2:	6878      	ldr	r0, [r7, #4]
    65b4:	68f9      	ldr	r1, [r7, #12]
    65b6:	f7ff f839 	bl	562c <fnet_socket_addr_is_broadcast>
    65ba:	4603      	mov	r3, r0
    65bc:	2b00      	cmp	r3, #0
    65be:	d105      	bne.n	65cc <fnet_tcp_input+0xcc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:358 (discriminator 1)
    65c0:	6878      	ldr	r0, [r7, #4]
    65c2:	f7ff f813 	bl	55ec <fnet_socket_addr_is_multicast>
    65c6:	4603      	mov	r3, r0
    65c8:	2b00      	cmp	r3, #0
    65ca:	d006      	beq.n	65da <fnet_tcp_input+0xda>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:361
    {
        /* Send RST.*/
        fnet_tcp_sendrst(0, nb, dest_addr, src_addr);
    65cc:	2000      	movs	r0, #0
    65ce:	6839      	ldr	r1, [r7, #0]
    65d0:	687a      	ldr	r2, [r7, #4]
    65d2:	68bb      	ldr	r3, [r7, #8]
    65d4:	f002 ffb2 	bl	953c <fnet_tcp_sendrst>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:362
        goto DROP;
    65d8:	e02f      	b.n	663a <fnet_tcp_input+0x13a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:367
    }
    
    fnet_tcp_trace("RX", buf->data_ptr); /* TCP trace.*/        
    
    sk = fnet_tcp_findsk(src_addr,  dest_addr);
    65da:	68b8      	ldr	r0, [r7, #8]
    65dc:	6879      	ldr	r1, [r7, #4]
    65de:	f003 f9f9 	bl	99d4 <fnet_tcp_findsk>
    65e2:	6138      	str	r0, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:369

    if(sk)
    65e4:	693b      	ldr	r3, [r7, #16]
    65e6:	2b00      	cmp	r3, #0
    65e8:	d016      	beq.n	6618 <fnet_tcp_input+0x118>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:371
    {
        if(sk->state == SS_LISTENING)
    65ea:	693b      	ldr	r3, [r7, #16]
    65ec:	7b1b      	ldrb	r3, [r3, #12]
    65ee:	2b03      	cmp	r3, #3
    65f0:	d105      	bne.n	65fe <fnet_tcp_input+0xfe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:373
        {
            sk->foreign_addr = *src_addr;
    65f2:	693b      	ldr	r3, [r7, #16]
    65f4:	68ba      	ldr	r2, [r7, #8]
    65f6:	3354      	adds	r3, #84	; 0x54
    65f8:	6810      	ldr	r0, [r2, #0]
    65fa:	6851      	ldr	r1, [r2, #4]
    65fc:	c303      	stmia	r3!, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:376
        }

        nb->next_chain = 0;
    65fe:	683b      	ldr	r3, [r7, #0]
    6600:	2200      	movs	r2, #0
    6602:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:379

        /* Process  the segment.*/
        if(fnet_tcp_inputsk(sk, nb, src_addr, dest_addr) == FNET_TRUE)
    6604:	6938      	ldr	r0, [r7, #16]
    6606:	6839      	ldr	r1, [r7, #0]
    6608:	68ba      	ldr	r2, [r7, #8]
    660a:	687b      	ldr	r3, [r7, #4]
    660c:	f000 fe88 	bl	7320 <fnet_tcp_inputsk>
    6610:	4603      	mov	r3, r0
    6612:	2b01      	cmp	r3, #1
    6614:	d110      	bne.n	6638 <fnet_tcp_input+0x138>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:380
            goto DROP;
    6616:	e010      	b.n	663a <fnet_tcp_input+0x13a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:384
    }
    else
    {
        if(!(FNET_TCP_FLAGS(nb) & FNET_TCP_SGT_RST))
    6618:	683b      	ldr	r3, [r7, #0]
    661a:	68db      	ldr	r3, [r3, #12]
    661c:	330d      	adds	r3, #13
    661e:	781b      	ldrb	r3, [r3, #0]
    6620:	f003 0304 	and.w	r3, r3, #4
    6624:	2b00      	cmp	r3, #0
    6626:	d106      	bne.n	6636 <fnet_tcp_input+0x136>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:385
            fnet_tcp_sendrst(0, nb, dest_addr, src_addr);
    6628:	2000      	movs	r0, #0
    662a:	6839      	ldr	r1, [r7, #0]
    662c:	687a      	ldr	r2, [r7, #4]
    662e:	68bb      	ldr	r3, [r7, #8]
    6630:	f002 ff84 	bl	953c <fnet_tcp_sendrst>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:387

        goto DROP;
    6634:	e001      	b.n	663a <fnet_tcp_input+0x13a>
    6636:	e000      	b.n	663a <fnet_tcp_input+0x13a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:394


	/* Wake-up user application.*/
 	fnet_os_event_raise(); 

    return;
    6638:	e002      	b.n	6640 <fnet_tcp_input+0x140>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:401
DROP:
	/* Wake-up user application.*/
 	fnet_os_event_raise(); 
 
 	/* Delete the segment.*/
    fnet_netbuf_free_chain(nb);
    663a:	6838      	ldr	r0, [r7, #0]
    663c:	f7fc fa60 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:402
}
    6640:	3720      	adds	r7, #32
    6642:	46bd      	mov	sp, r7
    6644:	bd80      	pop	{r7, pc}
    6646:	bf00      	nop

00006648 <fnet_tcp_ctrlinput>:
fnet_tcp_ctrlinput():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:413
* DESCRIPTION: This function process ICMP errors.
*
* RETURNS: None.          
*************************************************************************/
static void fnet_tcp_ctrlinput( fnet_prot_notify_t command, fnet_ip_header_t *ip_header )
{
    6648:	b580      	push	{r7, lr}
    664a:	b08a      	sub	sp, #40	; 0x28
    664c:	af00      	add	r7, sp, #0
    664e:	4603      	mov	r3, r0
    6650:	6039      	str	r1, [r7, #0]
    6652:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:420
    fnet_socket_t       *sk;            /* Pointer to the socket.*/
    fnet_tcp_control_t  *cb;
    struct sockaddr     src_addr;
    struct sockaddr     dest_addr;

    if(ip_header)
    6654:	683b      	ldr	r3, [r7, #0]
    6656:	2b00      	cmp	r3, #0
    6658:	d071      	beq.n	673e <fnet_tcp_ctrlinput+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:423
    {
        /* Find the corresponding socket.*/
        tcp_header = (fnet_tcp_header_t *)((char *)ip_header + (FNET_IP_HEADER_GET_HEADER_LENGTH(ip_header) << 2));
    665a:	683b      	ldr	r3, [r7, #0]
    665c:	781b      	ldrb	r3, [r3, #0]
    665e:	f003 030f 	and.w	r3, r3, #15
    6662:	009b      	lsls	r3, r3, #2
    6664:	683a      	ldr	r2, [r7, #0]
    6666:	4413      	add	r3, r2
    6668:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:426
     
        /* Foreign addr.*/
        fnet_memset_zero(&src_addr, sizeof(struct sockaddr));
    666a:	f107 0314 	add.w	r3, r7, #20
    666e:	4618      	mov	r0, r3
    6670:	2108      	movs	r1, #8
    6672:	f7ff facb 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:427
        src_addr.sa_family = AF_INET;
    6676:	2301      	movs	r3, #1
    6678:	82bb      	strh	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:428
        src_addr.sa_port = tcp_header->destination_port;
    667a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    667c:	885b      	ldrh	r3, [r3, #2]
    667e:	b29b      	uxth	r3, r3
    6680:	82fb      	strh	r3, [r7, #22]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:429
        ((struct sockaddr_in*)(&src_addr))->sin_addr.s_addr = ip_header->desination_addr;
    6682:	f107 0314 	add.w	r3, r7, #20
    6686:	683a      	ldr	r2, [r7, #0]
    6688:	6912      	ldr	r2, [r2, #16]
    668a:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:432
        
        /* Local addr.*/
        fnet_memset_zero(&dest_addr, sizeof(struct sockaddr));
    668c:	f107 030c 	add.w	r3, r7, #12
    6690:	4618      	mov	r0, r3
    6692:	2108      	movs	r1, #8
    6694:	f7ff faba 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:433
        dest_addr.sa_family = AF_INET;
    6698:	2301      	movs	r3, #1
    669a:	81bb      	strh	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:434
        dest_addr.sa_port = tcp_header->source_port;
    669c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    669e:	881b      	ldrh	r3, [r3, #0]
    66a0:	b29b      	uxth	r3, r3
    66a2:	81fb      	strh	r3, [r7, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:435
        ((struct sockaddr_in*)(&dest_addr))->sin_addr.s_addr = ip_header->source_addr;
    66a4:	f107 030c 	add.w	r3, r7, #12
    66a8:	683a      	ldr	r2, [r7, #0]
    66aa:	68d2      	ldr	r2, [r2, #12]
    66ac:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:437
         
        sk = fnet_tcp_findsk(&src_addr, &dest_addr);
    66ae:	f107 0214 	add.w	r2, r7, #20
    66b2:	f107 030c 	add.w	r3, r7, #12
    66b6:	4610      	mov	r0, r2
    66b8:	4619      	mov	r1, r3
    66ba:	f003 f98b 	bl	99d4 <fnet_tcp_findsk>
    66be:	6238      	str	r0, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:439
 
        if(sk)
    66c0:	6a3b      	ldr	r3, [r7, #32]
    66c2:	2b00      	cmp	r3, #0
    66c4:	d03b      	beq.n	673e <fnet_tcp_ctrlinput+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:442
        {
            /* Initialize the pointer of the control block.*/
            cb = sk->protocol_control;
    66c6:	6a3b      	ldr	r3, [r7, #32]
    66c8:	699b      	ldr	r3, [r3, #24]
    66ca:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:444

            switch(command)
    66cc:	79fb      	ldrb	r3, [r7, #7]
    66ce:	2b09      	cmp	r3, #9
    66d0:	d834      	bhi.n	673c <fnet_tcp_ctrlinput+0xf4>
    66d2:	a201      	add	r2, pc, #4	; (adr r2, 66d8 <fnet_tcp_ctrlinput+0x90>)
    66d4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    66d8:	00006701 	.word	0x00006701
    66dc:	0000670f 	.word	0x0000670f
    66e0:	00006719 	.word	0x00006719
    66e4:	0000672d 	.word	0x0000672d
    66e8:	0000672d 	.word	0x0000672d
    66ec:	00006719 	.word	0x00006719
    66f0:	00006719 	.word	0x00006719
    66f4:	0000673d 	.word	0x0000673d
    66f8:	0000673d 	.word	0x0000673d
    66fc:	00006723 	.word	0x00006723
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:448
            {
                case FNET_PROT_NOTIFY_QUENCH: /* Someone said to slow down.*/
                  /* Begin the Slow Start algorithm.*/
                  cb->tcpcb_cwnd = cb->tcpcb_sndmss;
    6700:	69fb      	ldr	r3, [r7, #28]
    6702:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    6706:	461a      	mov	r2, r3
    6708:	69fb      	ldr	r3, [r7, #28]
    670a:	63da      	str	r2, [r3, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:449
                  break;
    670c:	e017      	b.n	673e <fnet_tcp_ctrlinput+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:452

                case FNET_PROT_NOTIFY_MSGSIZE: /* Message size forced drop.*/
                  sk->options.local_error = FNET_ERR_MSGSIZE;
    670e:	6a3b      	ldr	r3, [r7, #32]
    6710:	2208      	movs	r2, #8
    6712:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:453
                  break;
    6716:	e012      	b.n	673e <fnet_tcp_ctrlinput+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:458

                case FNET_PROT_NOTIFY_UNREACH_HOST:    /* No route to host.*/
                case FNET_PROT_NOTIFY_UNREACH_NET:     /* No route to network.*/
                case FNET_PROT_NOTIFY_UNREACH_SRCFAIL: /* Source route failed.*/
                  sk->options.local_error = FNET_ERR_HOSTUNREACH;
    6718:	6a3b      	ldr	r3, [r7, #32]
    671a:	2218      	movs	r2, #24
    671c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:459
                  break;
    6720:	e00d      	b.n	673e <fnet_tcp_ctrlinput+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:462

                case FNET_PROT_NOTIFY_PARAMPROB:                 /* Header incorrect.*/
                  sk->options.local_error = FNET_ERR_NOPROTOOPT; /* Bad protocol option.*/
    6722:	6a3b      	ldr	r3, [r7, #32]
    6724:	2209      	movs	r2, #9
    6726:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:463
                  break;
    672a:	e008      	b.n	673e <fnet_tcp_ctrlinput+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:467

                case FNET_PROT_NOTIFY_UNREACH_PORT:              /* bad port #.*/
                case FNET_PROT_NOTIFY_UNREACH_PROTOCOL:
                  sk->options.local_error = FNET_ERR_CONNRESET;
    672c:	6a3b      	ldr	r3, [r7, #32]
    672e:	2212      	movs	r2, #18
    6730:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:468
                  fnet_tcp_closesk(sk);
    6734:	6a38      	ldr	r0, [r7, #32]
    6736:	f003 fa23 	bl	9b80 <fnet_tcp_closesk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:469
                  break;
    673a:	e000      	b.n	673e <fnet_tcp_ctrlinput+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:472

                default:
                  break;
    673c:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:476
            }
        }
    }
}
    673e:	3728      	adds	r7, #40	; 0x28
    6740:	46bd      	mov	sp, r7
    6742:	bd80      	pop	{r7, pc}

00006744 <fnet_tcp_attach>:
fnet_tcp_attach():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:488
*
* RETURNS: If no error occurs, this function returns FNET_OK. Otherwise
*          it returns FNET_ERR.
*************************************************************************/
static int fnet_tcp_attach( fnet_socket_t *sk )
{
    6744:	b580      	push	{r7, lr}
    6746:	b084      	sub	sp, #16
    6748:	af00      	add	r7, sp, #0
    674a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:492
    struct tcpcb *cb; 

    /* Create the control block.*/
    cb = (struct tcpcb *)fnet_malloc(sizeof(fnet_tcp_control_t));
    674c:	2094      	movs	r0, #148	; 0x94
    674e:	f7fc fd5f 	bl	3210 <fnet_malloc>
    6752:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:495

    /* Check the memory allocation.*/
    if(!cb)
    6754:	68fb      	ldr	r3, [r7, #12]
    6756:	2b00      	cmp	r3, #0
    6758:	d106      	bne.n	6768 <fnet_tcp_attach+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:497
    {
        fnet_socket_set_error(sk, FNET_ERR_NOMEM);
    675a:	6878      	ldr	r0, [r7, #4]
    675c:	2103      	movs	r1, #3
    675e:	f7fd fd15 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:498
        return FNET_ERR;
    6762:	f04f 33ff 	mov.w	r3, #4294967295
    6766:	e02c      	b.n	67c2 <fnet_tcp_attach+0x7e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:501
    }

    fnet_memset_zero(cb, sizeof(fnet_tcp_control_t));
    6768:	68f8      	ldr	r0, [r7, #12]
    676a:	2194      	movs	r1, #148	; 0x94
    676c:	f7ff fa4e 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:503

    sk->protocol_control = (void *)cb;
    6770:	687b      	ldr	r3, [r7, #4]
    6772:	68fa      	ldr	r2, [r7, #12]
    6774:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:506

    /* Set the maximal segment size option.*/
    sk->options.tcp_opt.mss = FNET_CFG_SOCKET_TCP_MSS;
    6776:	687b      	ldr	r3, [r7, #4]
    6778:	2200      	movs	r2, #0
    677a:	f8a3 206c 	strh.w	r2, [r3, #108]	; 0x6c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:509

    /* Default setting of the flags.*/
    sk->options.tcp_opt.flags = 
    677e:	687b      	ldr	r3, [r7, #4]
    6780:	2206      	movs	r2, #6
    6782:	669a      	str	r2, [r3, #104]	; 0x68
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:514
        #if FNET_CFG_TCP_URGENT
            TCP_BSD | 
        #endif    
            TCP_NODELAY;
    sk->options.tcp_opt.keep_idle = FNET_TCP_KEEPIDLE_DEFAULT;      /* TCP_KEEPIDLE option. */
    6784:	687b      	ldr	r3, [r7, #4]
    6786:	f44f 5261 	mov.w	r2, #14400	; 0x3840
    678a:	671a      	str	r2, [r3, #112]	; 0x70
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:515
    sk->options.tcp_opt.keep_intvl = FNET_TCP_KEEPINTVL_DEFAULT;    /* TCP_KEEPINTVL option. */
    678c:	687b      	ldr	r3, [r7, #4]
    678e:	2296      	movs	r2, #150	; 0x96
    6790:	675a      	str	r2, [r3, #116]	; 0x74
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:516
    sk->options.tcp_opt.keep_cnt = FNET_TCP_KEEPCNT_DEFAULT;        /* TCP_KEEPCNT option. */
    6792:	687b      	ldr	r3, [r7, #4]
    6794:	2208      	movs	r2, #8
    6796:	679a      	str	r2, [r3, #120]	; 0x78
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:518
    
    sk->options.flags = SO_KEEPALIVE;
    6798:	687b      	ldr	r3, [r7, #4]
    679a:	2202      	movs	r2, #2
    679c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:522

    /* Set the IP options.*/
#if FNET_CFG_IP4    
    sk->options.ip_opt.ttl = FNET_TCP_TTL_DEFAULT;
    67a0:	687b      	ldr	r3, [r7, #4]
    67a2:	2240      	movs	r2, #64	; 0x40
    67a4:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:523
    sk->options.ip_opt.tos = 0;
    67a8:	687b      	ldr	r3, [r7, #4]
    67aa:	2200      	movs	r2, #0
    67ac:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:532
    sk->options.ip6_opt.unicast_hops = 0; /* Defined by ND.*/ 
#endif
    

    /* Set the buffer sizes.*/
    sk->send_buffer.count_max = FNET_TCP_TX_BUF_MAX;
    67b0:	687b      	ldr	r3, [r7, #4]
    67b2:	f44f 6200 	mov.w	r2, #2048	; 0x800
    67b6:	649a      	str	r2, [r3, #72]	; 0x48
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:533
    sk->receive_buffer.count_max = FNET_TCP_RX_BUF_MAX;
    67b8:	687b      	ldr	r3, [r7, #4]
    67ba:	f44f 6200 	mov.w	r2, #2048	; 0x800
    67be:	639a      	str	r2, [r3, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:535

    return FNET_OK;
    67c0:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:536
}
    67c2:	4618      	mov	r0, r3
    67c4:	3710      	adds	r7, #16
    67c6:	46bd      	mov	sp, r7
    67c8:	bd80      	pop	{r7, pc}
    67ca:	bf00      	nop

000067cc <fnet_tcp_close>:
fnet_tcp_close():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:547
*
* RETURNS: If no error occurs, this function returns FNET_OK. Otherwise
*          it returns FNET_ERR.
*************************************************************************/
static int fnet_tcp_close( fnet_socket_t *sk )
{
    67cc:	b580      	push	{r7, lr}
    67ce:	b084      	sub	sp, #16
    67d0:	af00      	add	r7, sp, #0
    67d2:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:548
    fnet_tcp_control_t *cb = (fnet_tcp_control_t *)sk->protocol_control; 
    67d4:	687b      	ldr	r3, [r7, #4]
    67d6:	699b      	ldr	r3, [r3, #24]
    67d8:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:551
    
    /* If the connection is closed, free the memory.*/
    if(sk->state == SS_UNCONNECTED)
    67da:	687b      	ldr	r3, [r7, #4]
    67dc:	7b1b      	ldrb	r3, [r3, #12]
    67de:	2b00      	cmp	r3, #0
    67e0:	d10c      	bne.n	67fc <fnet_tcp_close+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:553
    {
        cb->tcpcb_flags |= FNET_TCP_CBF_CLOSE;
    67e2:	68fb      	ldr	r3, [r7, #12]
    67e4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    67e8:	f043 0201 	orr.w	r2, r3, #1
    67ec:	68fb      	ldr	r3, [r7, #12]
    67ee:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:554
        fnet_tcp_closesk(sk);
    67f2:	6878      	ldr	r0, [r7, #4]
    67f4:	f003 f9c4 	bl	9b80 <fnet_tcp_closesk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:555
        return FNET_OK;
    67f8:	2300      	movs	r3, #0
    67fa:	e082      	b.n	6902 <fnet_tcp_close+0x136>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:559
    }

    /* If SO_LINGER option is present.*/
    if(sk->options.flags & SO_LINGER)
    67fc:	687b      	ldr	r3, [r7, #4]
    67fe:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    6802:	f003 0308 	and.w	r3, r3, #8
    6806:	2b00      	cmp	r3, #0
    6808:	d015      	beq.n	6836 <fnet_tcp_close+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:562
    {
        
        if(sk->options.linger == 0)
    680a:	687b      	ldr	r3, [r7, #4]
    680c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    6810:	2b00      	cmp	r3, #0
    6812:	d110      	bne.n	6836 <fnet_tcp_close+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:566
        /* Linger is 0 so close the socket immediately. */
        {
            /* Hard reset.*/
            fnet_isr_lock();
    6814:	f7fb fd1c 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:567
            cb->tcpcb_flags |= FNET_TCP_CBF_CLOSE;
    6818:	68fb      	ldr	r3, [r7, #12]
    681a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    681e:	f043 0201 	orr.w	r2, r3, #1
    6822:	68fb      	ldr	r3, [r7, #12]
    6824:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:568
            fnet_tcp_abortsk(sk);
    6828:	6878      	ldr	r0, [r7, #4]
    682a:	f002 ff45 	bl	96b8 <fnet_tcp_abortsk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:569
            fnet_isr_unlock();
    682e:	f7fb fd1d 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:570
            return FNET_OK;
    6832:	2300      	movs	r3, #0
    6834:	e065      	b.n	6902 <fnet_tcp_close+0x136>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:574
        }
    }

    fnet_isr_lock();
    6836:	f7fb fd0b 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:576

    if(sk->state != SS_CONNECTED)
    683a:	687b      	ldr	r3, [r7, #4]
    683c:	7b1b      	ldrb	r3, [r3, #12]
    683e:	2b02      	cmp	r3, #2
    6840:	d00e      	beq.n	6860 <fnet_tcp_close+0x94>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:578
    {
        cb->tcpcb_flags |= FNET_TCP_CBF_CLOSE;
    6842:	68fb      	ldr	r3, [r7, #12]
    6844:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    6848:	f043 0201 	orr.w	r2, r3, #1
    684c:	68fb      	ldr	r3, [r7, #12]
    684e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:579
        fnet_tcp_abortsk(sk);
    6852:	6878      	ldr	r0, [r7, #4]
    6854:	f002 ff30 	bl	96b8 <fnet_tcp_abortsk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:582

        /* Unlock interrupts.*/
        fnet_isr_unlock();
    6858:	f7fb fd08 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:583
        return FNET_OK;
    685c:	2300      	movs	r3, #0
    685e:	e050      	b.n	6902 <fnet_tcp_close+0x136>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:587
    }

    /* If the socket is not unlocked, try to send the data.*/
    if(!sk->send_buffer.is_shutdown)
    6860:	687b      	ldr	r3, [r7, #4]
    6862:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    6864:	2b00      	cmp	r3, #0
    6866:	d106      	bne.n	6876 <fnet_tcp_close+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:589
    {
        sk->send_buffer.is_shutdown = 1;
    6868:	687b      	ldr	r3, [r7, #4]
    686a:	2201      	movs	r2, #1
    686c:	651a      	str	r2, [r3, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:590
        fnet_tcp_sendanydata(sk, 1);
    686e:	6878      	ldr	r0, [r7, #4]
    6870:	2101      	movs	r1, #1
    6872:	f001 fdbd 	bl	83f0 <fnet_tcp_sendanydata>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:593
    }

    fnet_isr_unlock();
    6876:	f7fb fcf9 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:597



    fnet_isr_lock();
    687a:	f7fb fce9 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:600

    /* After this moment the unconnecetd socket must be deleted.*/
    cb->tcpcb_flags |= FNET_TCP_CBF_CLOSE;
    687e:	68fb      	ldr	r3, [r7, #12]
    6880:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    6884:	f043 0201 	orr.w	r2, r3, #1
    6888:	68fb      	ldr	r3, [r7, #12]
    688a:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:603

    /* If the socket is already unconnected, close the socket.*/
    if(sk->state == SS_UNCONNECTED)
    688e:	687b      	ldr	r3, [r7, #4]
    6890:	7b1b      	ldrb	r3, [r3, #12]
    6892:	2b00      	cmp	r3, #0
    6894:	d103      	bne.n	689e <fnet_tcp_close+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:605
    {
        fnet_tcp_closesk(sk);
    6896:	6878      	ldr	r0, [r7, #4]
    6898:	f003 f972 	bl	9b80 <fnet_tcp_closesk>
    689c:	e02e      	b.n	68fc <fnet_tcp_close+0x130>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:609
    }
    else
    {
        if(cb->tcpcb_connection_state != FNET_TCP_CS_TIME_WAIT)
    689e:	68fb      	ldr	r3, [r7, #12]
    68a0:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    68a4:	2b0a      	cmp	r3, #10
    68a6:	d020      	beq.n	68ea <fnet_tcp_close+0x11e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:611
        {
            if((sk->options.flags & SO_LINGER) && sk->options.linger)
    68a8:	687b      	ldr	r3, [r7, #4]
    68aa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    68ae:	f003 0308 	and.w	r3, r3, #8
    68b2:	2b00      	cmp	r3, #0
    68b4:	d013      	beq.n	68de <fnet_tcp_close+0x112>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:611 (discriminator 1)
    68b6:	687b      	ldr	r3, [r7, #4]
    68b8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    68bc:	2b00      	cmp	r3, #0
    68be:	d00e      	beq.n	68de <fnet_tcp_close+0x112>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:612
                cb->tcpcb_timers.connection = ((sk->options.linger * FNET_TIMER_PERIOD_MS)
    68c0:	687b      	ldr	r3, [r7, #4]
    68c2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    68c6:	2264      	movs	r2, #100	; 0x64
    68c8:	fb02 f303 	mul.w	r3, r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:613
                                                                 / FNET_TCP_SLOWTIMO);
    68cc:	4a0f      	ldr	r2, [pc, #60]	; (690c <fnet_tcp_close+0x140>)
    68ce:	fb82 1203 	smull	r1, r2, r2, r3
    68d2:	1152      	asrs	r2, r2, #5
    68d4:	17db      	asrs	r3, r3, #31
    68d6:	1ad2      	subs	r2, r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:612
    else
    {
        if(cb->tcpcb_connection_state != FNET_TCP_CS_TIME_WAIT)
        {
            if((sk->options.flags & SO_LINGER) && sk->options.linger)
                cb->tcpcb_timers.connection = ((sk->options.linger * FNET_TIMER_PERIOD_MS)
    68d8:	68fb      	ldr	r3, [r7, #12]
    68da:	679a      	str	r2, [r3, #120]	; 0x78
    68dc:	e002      	b.n	68e4 <fnet_tcp_close+0x118>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:615
                                                                 / FNET_TCP_SLOWTIMO);
            else
                cb->tcpcb_timers.connection = FNET_TCP_ABORT_INTERVAL;
    68de:	68fb      	ldr	r3, [r7, #12]
    68e0:	2230      	movs	r2, #48	; 0x30
    68e2:	679a      	str	r2, [r3, #120]	; 0x78
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:617

            sk->receive_buffer.is_shutdown = 1;
    68e4:	687b      	ldr	r3, [r7, #4]
    68e6:	2201      	movs	r2, #1
    68e8:	641a      	str	r2, [r3, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:620
        }

        if(sk->receive_buffer.count)
    68ea:	687b      	ldr	r3, [r7, #4]
    68ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    68ee:	2b00      	cmp	r3, #0
    68f0:	d004      	beq.n	68fc <fnet_tcp_close+0x130>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:621
            fnet_socket_buffer_release(&sk->receive_buffer);
    68f2:	687b      	ldr	r3, [r7, #4]
    68f4:	3334      	adds	r3, #52	; 0x34
    68f6:	4618      	mov	r0, r3
    68f8:	f7fe fd30 	bl	535c <fnet_socket_buffer_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:624
    }
  
    fnet_isr_unlock();
    68fc:	f7fb fcb6 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:626

    return FNET_OK;
    6900:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:627
}
    6902:	4618      	mov	r0, r3
    6904:	3710      	adds	r7, #16
    6906:	46bd      	mov	sp, r7
    6908:	bd80      	pop	{r7, pc}
    690a:	bf00      	nop
    690c:	10624dd3 	.word	0x10624dd3

00006910 <fnet_tcp_connect>:
fnet_tcp_connect():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:638
*   
* RETURNS: If no error occurs, this function returns FNET_OK. Otherwise
*          it returns FNET_ERR.
*************************************************************************/
static int fnet_tcp_connect( fnet_socket_t *sk, struct sockaddr *foreign_addr)
{
    6910:	b580      	push	{r7, lr}
    6912:	b088      	sub	sp, #32
    6914:	af00      	add	r7, sp, #0
    6916:	6078      	str	r0, [r7, #4]
    6918:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:645
    char                options[FNET_TCP_MAX_OPT_SIZE]; 
    char                optionlen;                    
    int                 error;                 
    fnet_netif_t        *netif;              
    
    if((netif = fnet_socket_addr_route(foreign_addr)) == FNET_NULL)
    691a:	6838      	ldr	r0, [r7, #0]
    691c:	f7fe ff24 	bl	5768 <fnet_socket_addr_route>
    6920:	61b8      	str	r0, [r7, #24]
    6922:	69bb      	ldr	r3, [r7, #24]
    6924:	2b00      	cmp	r3, #0
    6926:	d102      	bne.n	692e <fnet_tcp_connect+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:647
    {
        error = FNET_ERR_NETUNREACH;
    6928:	2310      	movs	r3, #16
    692a:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:648
        goto ERROR;
    692c:	e05b      	b.n	69e6 <fnet_tcp_connect+0xd6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:652
    }

    /* TCP doesn't support broadcasting and multicasting.*/
    if(fnet_socket_addr_is_broadcast(foreign_addr, netif) || fnet_socket_addr_is_multicast(foreign_addr))
    692e:	6838      	ldr	r0, [r7, #0]
    6930:	69b9      	ldr	r1, [r7, #24]
    6932:	f7fe fe7b 	bl	562c <fnet_socket_addr_is_broadcast>
    6936:	4603      	mov	r3, r0
    6938:	2b00      	cmp	r3, #0
    693a:	d105      	bne.n	6948 <fnet_tcp_connect+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:652 (discriminator 1)
    693c:	6838      	ldr	r0, [r7, #0]
    693e:	f7fe fe55 	bl	55ec <fnet_socket_addr_is_multicast>
    6942:	4603      	mov	r3, r0
    6944:	2b00      	cmp	r3, #0
    6946:	d002      	beq.n	694e <fnet_tcp_connect+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:654
    {
        error = FNET_ERR_ADDRNOTAVAIL;
    6948:	230f      	movs	r3, #15
    694a:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:655
        goto ERROR;
    694c:	e04b      	b.n	69e6 <fnet_tcp_connect+0xd6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:659
    }

    /* Initialize the pointer to the control block.*/
    cb = (fnet_tcp_control_t *)sk->protocol_control;
    694e:	687b      	ldr	r3, [r7, #4]
    6950:	699b      	ldr	r3, [r3, #24]
    6952:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:662

    /* Initialize the control block.*/
    fnet_tcp_initconnection(sk);
    6954:	6878      	ldr	r0, [r7, #4]
    6956:	f000 fc69 	bl	722c <fnet_tcp_initconnection>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:665

    /* Set synchronized options.*/
    fnet_tcp_setsynopt(sk, options, &optionlen);
    695a:	f107 020c 	add.w	r2, r7, #12
    695e:	f107 030b 	add.w	r3, r7, #11
    6962:	6878      	ldr	r0, [r7, #4]
    6964:	4611      	mov	r1, r2
    6966:	461a      	mov	r2, r3
    6968:	f002 ffba 	bl	98e0 <fnet_tcp_setsynopt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:668

    /* Initialize sequnece number parameters.*/
    cb->tcpcb_sndseq = fnet_tcp_isntime;
    696c:	4b23      	ldr	r3, [pc, #140]	; (69fc <fnet_tcp_connect+0xec>)
    696e:	681a      	ldr	r2, [r3, #0]
    6970:	697b      	ldr	r3, [r7, #20]
    6972:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:669
    cb->tcpcb_maxrcvack = fnet_tcp_isntime + 1;
    6974:	4b21      	ldr	r3, [pc, #132]	; (69fc <fnet_tcp_connect+0xec>)
    6976:	681b      	ldr	r3, [r3, #0]
    6978:	1c5a      	adds	r2, r3, #1
    697a:	697b      	ldr	r3, [r7, #20]
    697c:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:671
#if FNET_CFG_TCP_URGENT      
    cb->tcpcb_sndurgseq = cb->tcpcb_sndseq - 1;
    697e:	697b      	ldr	r3, [r7, #20]
    6980:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    6982:	1e5a      	subs	r2, r3, #1
    6984:	697b      	ldr	r3, [r7, #20]
    6986:	64da      	str	r2, [r3, #76]	; 0x4c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:675
#endif /* FNET_CFG_TCP_URGENT */

    /* Set the foreign address.*/
    sk->foreign_addr = *foreign_addr; 
    6988:	687b      	ldr	r3, [r7, #4]
    698a:	683a      	ldr	r2, [r7, #0]
    698c:	3354      	adds	r3, #84	; 0x54
    698e:	6810      	ldr	r0, [r2, #0]
    6990:	6851      	ldr	r1, [r2, #4]
    6992:	c303      	stmia	r3!, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:677

    fnet_isr_lock();
    6994:	f7fb fc5c 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:680

    /* Send SYN segment.*/
    error = fnet_tcp_sendheadseg(sk, FNET_TCP_SGT_SYN, options, optionlen);
    6998:	7afb      	ldrb	r3, [r7, #11]
    699a:	f107 020c 	add.w	r2, r7, #12
    699e:	b25b      	sxtb	r3, r3
    69a0:	6878      	ldr	r0, [r7, #4]
    69a2:	2102      	movs	r1, #2
    69a4:	f002 fb4e 	bl	9044 <fnet_tcp_sendheadseg>
    69a8:	61f8      	str	r0, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:683

    /* Check the result.*/
    if(error)
    69aa:	69fb      	ldr	r3, [r7, #28]
    69ac:	2b00      	cmp	r3, #0
    69ae:	d002      	beq.n	69b6 <fnet_tcp_connect+0xa6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:685
    {
        fnet_isr_unlock();
    69b0:	f7fb fc5c 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:686
        goto ERROR;
    69b4:	e017      	b.n	69e6 <fnet_tcp_connect+0xd6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:690
    }

    /* Change the states.*/
    cb->tcpcb_connection_state = FNET_TCP_CS_SYN_SENT;
    69b6:	697b      	ldr	r3, [r7, #20]
    69b8:	2201      	movs	r2, #1
    69ba:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:691
    sk->state = SS_CONNECTING;
    69be:	687b      	ldr	r3, [r7, #4]
    69c0:	2201      	movs	r2, #1
    69c2:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:694

    /* Increase Initial Sequence Number.*/
    fnet_tcp_isntime += FNET_TCP_STEPISN;
    69c4:	4b0d      	ldr	r3, [pc, #52]	; (69fc <fnet_tcp_connect+0xec>)
    69c6:	681b      	ldr	r3, [r3, #0]
    69c8:	f503 427a 	add.w	r2, r3, #64000	; 0xfa00
    69cc:	4b0b      	ldr	r3, [pc, #44]	; (69fc <fnet_tcp_connect+0xec>)
    69ce:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:697

    /* Initialize Abort Timer.*/
    cb->tcpcb_timers.retransmission = cb->tcpcb_rto;
    69d0:	697b      	ldr	r3, [r7, #20]
    69d2:	6d9a      	ldr	r2, [r3, #88]	; 0x58
    69d4:	697b      	ldr	r3, [r7, #20]
    69d6:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:698
    cb->tcpcb_timers.connection = FNET_TCP_ABORT_INTERVAL_CON;
    69d8:	697b      	ldr	r3, [r7, #20]
    69da:	221e      	movs	r2, #30
    69dc:	679a      	str	r2, [r3, #120]	; 0x78
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:700

    fnet_isr_unlock();
    69de:	f7fb fc45 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:702

    return FNET_OK;
    69e2:	2300      	movs	r3, #0
    69e4:	e005      	b.n	69f2 <fnet_tcp_connect+0xe2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:705

ERROR:
    fnet_socket_set_error(sk, error);
    69e6:	6878      	ldr	r0, [r7, #4]
    69e8:	69f9      	ldr	r1, [r7, #28]
    69ea:	f7fd fbcf 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:706
    return FNET_ERR; 
    69ee:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:707
}
    69f2:	4618      	mov	r0, r3
    69f4:	3720      	adds	r7, #32
    69f6:	46bd      	mov	sp, r7
    69f8:	bd80      	pop	{r7, pc}
    69fa:	bf00      	nop
    69fc:	10000054 	.word	0x10000054

00006a00 <fnet_tcp_accept>:
fnet_tcp_accept():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:720
*
* RETURNS: If the incoming socket is present, this function returns 
*          the first created incoming socket. Otherwise, it returns 0.
*************************************************************************/
static fnet_socket_t *fnet_tcp_accept( fnet_socket_t *listensk )
{
    6a00:	b580      	push	{r7, lr}
    6a02:	b084      	sub	sp, #16
    6a04:	af00      	add	r7, sp, #0
    6a06:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:721
    fnet_socket_t *sk= FNET_NULL;
    6a08:	2300      	movs	r3, #0
    6a0a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:724

    /* If the incoming socket is not present, return.*/
    if(listensk->incoming_con)
    6a0c:	687b      	ldr	r3, [r7, #4]
    6a0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    6a10:	2b00      	cmp	r3, #0
    6a12:	d01d      	beq.n	6a50 <fnet_tcp_accept+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:726
    {
        fnet_isr_lock();
    6a14:	f7fb fc1c 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:728
        /* Find the first incoming socket.*/
        sk = listensk->incoming_con;
    6a18:	687b      	ldr	r3, [r7, #4]
    6a1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    6a1c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:730

        while(sk->next)
    6a1e:	e002      	b.n	6a26 <fnet_tcp_accept+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:731
          sk = sk->next;
    6a20:	68fb      	ldr	r3, [r7, #12]
    6a22:	681b      	ldr	r3, [r3, #0]
    6a24:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:730 (discriminator 1)
    {
        fnet_isr_lock();
        /* Find the first incoming socket.*/
        sk = listensk->incoming_con;

        while(sk->next)
    6a26:	68fb      	ldr	r3, [r7, #12]
    6a28:	681b      	ldr	r3, [r3, #0]
    6a2a:	2b00      	cmp	r3, #0
    6a2c:	d1f8      	bne.n	6a20 <fnet_tcp_accept+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:734
          sk = sk->next;

        /* Delete the incoming socket from the list.*/
        sk->head_con->incoming_con_len--;
    6a2e:	68fb      	ldr	r3, [r7, #12]
    6a30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    6a32:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    6a34:	3a01      	subs	r2, #1
    6a36:	629a      	str	r2, [r3, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:735
        fnet_socket_list_del(&sk->head_con->incoming_con, sk);
    6a38:	68fb      	ldr	r3, [r7, #12]
    6a3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    6a3c:	3324      	adds	r3, #36	; 0x24
    6a3e:	4618      	mov	r0, r3
    6a40:	68f9      	ldr	r1, [r7, #12]
    6a42:	f7fd fbdd 	bl	4200 <fnet_socket_list_del>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:737

        fnet_isr_unlock();
    6a46:	f7fb fc11 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:738
        sk->head_con = 0;
    6a4a:	68fb      	ldr	r3, [r7, #12]
    6a4c:	2200      	movs	r2, #0
    6a4e:	631a      	str	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:741
    }
    
    return sk;
    6a50:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:742
}
    6a52:	4618      	mov	r0, r3
    6a54:	3710      	adds	r7, #16
    6a56:	46bd      	mov	sp, r7
    6a58:	bd80      	pop	{r7, pc}
    6a5a:	bf00      	nop

00006a5c <fnet_tcp_rcv>:
fnet_tcp_rcv():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:755
* 
* RETURNS: If no error occurs, this function returns the length
*          of the received data. Otherwise, it returns FNET_ERR.
*************************************************************************/
static int fnet_tcp_rcv( fnet_socket_t *sk, char *buf, int len, int flags, struct sockaddr *foreign_addr)
{
    6a5c:	b580      	push	{r7, lr}
    6a5e:	b088      	sub	sp, #32
    6a60:	af00      	add	r7, sp, #0
    6a62:	60f8      	str	r0, [r7, #12]
    6a64:	60b9      	str	r1, [r7, #8]
    6a66:	607a      	str	r2, [r7, #4]
    6a68:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:756
    fnet_tcp_control_t  *cb = (fnet_tcp_control_t *)sk->protocol_control;
    6a6a:	68fb      	ldr	r3, [r7, #12]
    6a6c:	699b      	ldr	r3, [r3, #24]
    6a6e:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:762
    int                 remove; /* Remove flag. 1 means that the data must be deleted
                                 * from the input buffer after the reading.*/
    int                 error_code;                 
    
    /* Receive the flags.*/
    remove = !(flags & MSG_PEEK);
    6a70:	683b      	ldr	r3, [r7, #0]
    6a72:	f003 0302 	and.w	r3, r3, #2
    6a76:	2b00      	cmp	r3, #0
    6a78:	bf14      	ite	ne
    6a7a:	2300      	movne	r3, #0
    6a7c:	2301      	moveq	r3, #1
    6a7e:	b2db      	uxtb	r3, r3
    6a80:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:766

#if FNET_CFG_TCP_URGENT
    /* Reading of the OOB data.*/
    if(flags & MSG_OOB)
    6a82:	683b      	ldr	r3, [r7, #0]
    6a84:	f003 0301 	and.w	r3, r3, #1
    6a88:	2b00      	cmp	r3, #0
    6a8a:	d033      	beq.n	6af4 <fnet_tcp_rcv+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:769
    {
        /* If the OOB data can't be read, return.*/
        if(sk->options.flags & SO_OOBINLINE)
    6a8c:	68fb      	ldr	r3, [r7, #12]
    6a8e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    6a92:	f003 0310 	and.w	r3, r3, #16
    6a96:	2b00      	cmp	r3, #0
    6a98:	d002      	beq.n	6aa0 <fnet_tcp_rcv+0x44>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:771
        {
            error_code = FNET_ERR_INVAL;
    6a9a:	2306      	movs	r3, #6
    6a9c:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:772
            goto ERROR;
    6a9e:	e09d      	b.n	6bdc <fnet_tcp_rcv+0x180>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:776
        }

        /* If the OOB data is present, read */
        if(cb->tcpcb_flags & FNET_TCP_CBF_RCVURGENT)
    6aa0:	69bb      	ldr	r3, [r7, #24]
    6aa2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    6aa6:	f003 0302 	and.w	r3, r3, #2
    6aaa:	2b00      	cmp	r3, #0
    6aac:	d019      	beq.n	6ae2 <fnet_tcp_rcv+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:778
        {
            fnet_isr_lock();
    6aae:	f7fb fbcf 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:780

            if(remove)
    6ab2:	697b      	ldr	r3, [r7, #20]
    6ab4:	2b00      	cmp	r3, #0
    6ab6:	d00b      	beq.n	6ad0 <fnet_tcp_rcv+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:782
            {
                cb->tcpcb_rcvurgmark = FNET_TCP_NOT_USED;
    6ab8:	69bb      	ldr	r3, [r7, #24]
    6aba:	f04f 32ff 	mov.w	r2, #4294967295
    6abe:	625a      	str	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:783
                cb->tcpcb_flags &= ~FNET_TCP_CBF_RCVURGENT;
    6ac0:	69bb      	ldr	r3, [r7, #24]
    6ac2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    6ac6:	f023 0202 	bic.w	r2, r3, #2
    6aca:	69bb      	ldr	r3, [r7, #24]
    6acc:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:786
            }

            *buf = cb->tcpcb_iobc;
    6ad0:	69bb      	ldr	r3, [r7, #24]
    6ad2:	f893 2028 	ldrb.w	r2, [r3, #40]	; 0x28
    6ad6:	68bb      	ldr	r3, [r7, #8]
    6ad8:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:787
            fnet_isr_unlock();
    6ada:	f7fb fbc7 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:789
            
            return FNET_TCP_URGENT_DATA_SIZE;
    6ade:	2301      	movs	r3, #1
    6ae0:	e082      	b.n	6be8 <fnet_tcp_rcv+0x18c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:794
        }
        else
        {
            /* If the socket is not connected , return with the error. */
            if(sk->state != SS_CONNECTED)
    6ae2:	68fb      	ldr	r3, [r7, #12]
    6ae4:	7b1b      	ldrb	r3, [r3, #12]
    6ae6:	2b02      	cmp	r3, #2
    6ae8:	d002      	beq.n	6af0 <fnet_tcp_rcv+0x94>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:796
            {
                error_code = FNET_ERR_NOTCONN;
    6aea:	2314      	movs	r3, #20
    6aec:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:797
                goto ERROR;                
    6aee:	e075      	b.n	6bdc <fnet_tcp_rcv+0x180>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:800
            }

            return 0;
    6af0:	2300      	movs	r3, #0
    6af2:	e079      	b.n	6be8 <fnet_tcp_rcv+0x18c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:805
        }
    }
#endif /* FNET_CFG_TCP_URGENT */

    fnet_isr_lock();
    6af4:	f7fb fbac 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:809

#if FNET_CFG_TCP_URGENT
    /* Calculate the length of the data that can be received.*/
    if(cb->tcpcb_rcvurgmark > 0 && len >= cb->tcpcb_rcvurgmark)
    6af8:	69bb      	ldr	r3, [r7, #24]
    6afa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    6afc:	2b00      	cmp	r3, #0
    6afe:	dd10      	ble.n	6b22 <fnet_tcp_rcv+0xc6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:809 (discriminator 1)
    6b00:	69bb      	ldr	r3, [r7, #24]
    6b02:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    6b04:	687b      	ldr	r3, [r7, #4]
    6b06:	429a      	cmp	r2, r3
    6b08:	dc0b      	bgt.n	6b22 <fnet_tcp_rcv+0xc6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:811
    {
        len = cb->tcpcb_rcvurgmark;
    6b0a:	69bb      	ldr	r3, [r7, #24]
    6b0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    6b0e:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:813

        if(remove)
    6b10:	697b      	ldr	r3, [r7, #20]
    6b12:	2b00      	cmp	r3, #0
    6b14:	d004      	beq.n	6b20 <fnet_tcp_rcv+0xc4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:814
            cb->tcpcb_rcvurgmark = FNET_TCP_NOT_USED;
    6b16:	69bb      	ldr	r3, [r7, #24]
    6b18:	f04f 32ff 	mov.w	r2, #4294967295
    6b1c:	625a      	str	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:813
    /* Calculate the length of the data that can be received.*/
    if(cb->tcpcb_rcvurgmark > 0 && len >= cb->tcpcb_rcvurgmark)
    {
        len = cb->tcpcb_rcvurgmark;

        if(remove)
    6b1e:	e008      	b.n	6b32 <fnet_tcp_rcv+0xd6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:813 (discriminator 1)
    6b20:	e007      	b.n	6b32 <fnet_tcp_rcv+0xd6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:818
            cb->tcpcb_rcvurgmark = FNET_TCP_NOT_USED;
    }
    else 
#endif /* FNET_CFG_TCP_URGENT */
    if(sk->receive_buffer.count < len)
    6b22:	68fb      	ldr	r3, [r7, #12]
    6b24:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    6b26:	687b      	ldr	r3, [r7, #4]
    6b28:	429a      	cmp	r2, r3
    6b2a:	d202      	bcs.n	6b32 <fnet_tcp_rcv+0xd6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:820
    {
        len = (int)sk->receive_buffer.count;
    6b2c:	68fb      	ldr	r3, [r7, #12]
    6b2e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    6b30:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:824
    }

    /* Copy the data to the buffer.*/
    len = fnet_socket_buffer_read_record(&sk->receive_buffer, buf, len, remove); 
    6b32:	68fb      	ldr	r3, [r7, #12]
    6b34:	3334      	adds	r3, #52	; 0x34
    6b36:	4618      	mov	r0, r3
    6b38:	68b9      	ldr	r1, [r7, #8]
    6b3a:	687a      	ldr	r2, [r7, #4]
    6b3c:	697b      	ldr	r3, [r7, #20]
    6b3e:	f7fe fca3 	bl	5488 <fnet_socket_buffer_read_record>
    6b42:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:827

    /* Remove the data from input buffer.*/
    if(remove)
    6b44:	697b      	ldr	r3, [r7, #20]
    6b46:	2b00      	cmp	r3, #0
    6b48:	d022      	beq.n	6b90 <fnet_tcp_rcv+0x134>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:830
    {
        /* Recalculate the new free size in the input buffer.*/
        cb->tcpcb_newfreercvsize += len;
    6b4a:	69bb      	ldr	r3, [r7, #24]
    6b4c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
    6b4e:	687b      	ldr	r3, [r7, #4]
    6b50:	441a      	add	r2, r3
    6b52:	69bb      	ldr	r3, [r7, #24]
    6b54:	651a      	str	r2, [r3, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:833

        /* If the window is opened, send acknowledgment.*/
        if((cb->tcpcb_newfreercvsize >= (cb->tcpcb_rcvmss << 1)
    6b56:	69bb      	ldr	r3, [r7, #24]
    6b58:	6d1a      	ldr	r2, [r3, #80]	; 0x50
    6b5a:	69bb      	ldr	r3, [r7, #24]
    6b5c:	8b9b      	ldrh	r3, [r3, #28]
    6b5e:	005b      	lsls	r3, r3, #1
    6b60:	429a      	cmp	r2, r3
    6b62:	d20e      	bcs.n	6b82 <fnet_tcp_rcv+0x126>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:834
                || cb->tcpcb_newfreercvsize >= (cb->tcpcb_rcvcountmax >> 1) /* More than half of RX buffer.*/
    6b64:	69bb      	ldr	r3, [r7, #24]
    6b66:	6d1a      	ldr	r2, [r3, #80]	; 0x50
    6b68:	69bb      	ldr	r3, [r7, #24]
    6b6a:	689b      	ldr	r3, [r3, #8]
    6b6c:	085b      	lsrs	r3, r3, #1
    6b6e:	429a      	cmp	r2, r3
    6b70:	d207      	bcs.n	6b82 <fnet_tcp_rcv+0x126>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:835
                || (!cb->tcpcb_rcvwnd && cb->tcpcb_newfreercvsize)) && (sk->state == SS_CONNECTED))
    6b72:	69bb      	ldr	r3, [r7, #24]
    6b74:	699b      	ldr	r3, [r3, #24]
    6b76:	2b00      	cmp	r3, #0
    6b78:	d10a      	bne.n	6b90 <fnet_tcp_rcv+0x134>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:835 (discriminator 1)
    6b7a:	69bb      	ldr	r3, [r7, #24]
    6b7c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    6b7e:	2b00      	cmp	r3, #0
    6b80:	d006      	beq.n	6b90 <fnet_tcp_rcv+0x134>
    6b82:	68fb      	ldr	r3, [r7, #12]
    6b84:	7b1b      	ldrb	r3, [r3, #12]
    6b86:	2b02      	cmp	r3, #2
    6b88:	d102      	bne.n	6b90 <fnet_tcp_rcv+0x134>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:836
            fnet_tcp_sendack(sk);
    6b8a:	68f8      	ldr	r0, [r7, #12]
    6b8c:	f002 fc7c 	bl	9488 <fnet_tcp_sendack>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:840
    }

    /* If the socket is not connected and the data are not received, return with error.*/
    if(len == 0 && sk->state != SS_CONNECTED)
    6b90:	687b      	ldr	r3, [r7, #4]
    6b92:	2b00      	cmp	r3, #0
    6b94:	d106      	bne.n	6ba4 <fnet_tcp_rcv+0x148>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:840 (discriminator 1)
    6b96:	68fb      	ldr	r3, [r7, #12]
    6b98:	7b1b      	ldrb	r3, [r3, #12]
    6b9a:	2b02      	cmp	r3, #2
    6b9c:	d002      	beq.n	6ba4 <fnet_tcp_rcv+0x148>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:842
    {
        error_code = FNET_ERR_NOTCONN;
    6b9e:	2314      	movs	r3, #20
    6ba0:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:843
        goto ERROR_UNLOCK;
    6ba2:	e019      	b.n	6bd8 <fnet_tcp_rcv+0x17c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:848
    }
    else
    {
        /* Set the foreign address and port.*/
        if(foreign_addr)
    6ba4:	6abb      	ldr	r3, [r7, #40]	; 0x28
    6ba6:	2b00      	cmp	r3, #0
    6ba8:	d005      	beq.n	6bb6 <fnet_tcp_rcv+0x15a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:849
            *foreign_addr = sk->foreign_addr;
    6baa:	6aba      	ldr	r2, [r7, #40]	; 0x28
    6bac:	68fb      	ldr	r3, [r7, #12]
    6bae:	3354      	adds	r3, #84	; 0x54
    6bb0:	cb03      	ldmia	r3!, {r0, r1}
    6bb2:	6010      	str	r0, [r2, #0]
    6bb4:	6051      	str	r1, [r2, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:852
         
        /* If the socket is closed by peer and no data.*/
        if((len == 0) && (cb->tcpcb_flags & FNET_TCP_CBF_FIN_RCVD))
    6bb6:	687b      	ldr	r3, [r7, #4]
    6bb8:	2b00      	cmp	r3, #0
    6bba:	d109      	bne.n	6bd0 <fnet_tcp_rcv+0x174>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:852 (discriminator 1)
    6bbc:	69bb      	ldr	r3, [r7, #24]
    6bbe:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    6bc2:	f003 0308 	and.w	r3, r3, #8
    6bc6:	2b00      	cmp	r3, #0
    6bc8:	d002      	beq.n	6bd0 <fnet_tcp_rcv+0x174>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:854
        {
            error_code = FNET_ERR_CONNCLOSED;
    6bca:	231a      	movs	r3, #26
    6bcc:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:855
            goto ERROR_UNLOCK;
    6bce:	e003      	b.n	6bd8 <fnet_tcp_rcv+0x17c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:859
        }
    }
    
    fnet_isr_unlock();
    6bd0:	f7fb fb4c 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:860
    return len;
    6bd4:	687b      	ldr	r3, [r7, #4]
    6bd6:	e007      	b.n	6be8 <fnet_tcp_rcv+0x18c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:863
    
ERROR_UNLOCK:
    fnet_isr_unlock();
    6bd8:	f7fb fb48 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:867
#if FNET_CFG_TCP_URGENT    
ERROR:
#endif    
    fnet_socket_set_error(sk, error_code);
    6bdc:	68f8      	ldr	r0, [r7, #12]
    6bde:	69f9      	ldr	r1, [r7, #28]
    6be0:	f7fd fad4 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:868
    return FNET_ERR;
    6be4:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:869
}
    6be8:	4618      	mov	r0, r3
    6bea:	3720      	adds	r7, #32
    6bec:	46bd      	mov	sp, r7
    6bee:	bd80      	pop	{r7, pc}

00006bf0 <fnet_tcp_snd>:
fnet_tcp_snd():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:882
* RETURNS: If no error occurs, this function returns the length
*          of the data that is added to the output buffer.
*          Otherwise, it returns FNET_ERR.
*************************************************************************/
static int fnet_tcp_snd( fnet_socket_t *sk, char *buf, int len, int flags, const struct sockaddr *foreign_addr)
{
    6bf0:	b580      	push	{r7, lr}
    6bf2:	b08e      	sub	sp, #56	; 0x38
    6bf4:	af00      	add	r7, sp, #0
    6bf6:	60f8      	str	r0, [r7, #12]
    6bf8:	60b9      	str	r1, [r7, #8]
    6bfa:	607a      	str	r2, [r7, #4]
    6bfc:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:883
    fnet_tcp_control_t  *cb = (fnet_tcp_control_t *)sk->protocol_control; 
    6bfe:	68fb      	ldr	r3, [r7, #12]
    6c00:	699b      	ldr	r3, [r3, #24]
    6c02:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:885
    fnet_netbuf_t       *netbuf;                                             
    long                sendlength = len;   /* Size of the data that must be sent.*/
    6c04:	687b      	ldr	r3, [r7, #4]
    6c06:	637b      	str	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:886
    long                sentlength = 0;     /* Length of the sent data.*/
    6c08:	2300      	movs	r3, #0
    6c0a:	633b      	str	r3, [r7, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:889
    long                freespace;          /* Free space in the output buffer.*/
    long                currentlen;         /* Current length.*/
    int                 dontroute = 0;      /* Routing flag.*/
    6c0c:	2300      	movs	r3, #0
    6c0e:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:896
    int                 error_code;

    FNET_COMP_UNUSED_ARG(foreign_addr);

    /* If the size of the data greater than the maximal size of the output buffer, return*/
    if(sendlength > FNET_TCP_MAX_BUFFER)
    6c10:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    6c12:	4b92      	ldr	r3, [pc, #584]	; (6e5c <fnet_tcp_snd+0x26c>)
    6c14:	429a      	cmp	r2, r3
    6c16:	dd02      	ble.n	6c1e <fnet_tcp_snd+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:898
    {
        error_code = FNET_ERR_INVAL;
    6c18:	2306      	movs	r3, #6
    6c1a:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:899
        goto ERROR;
    6c1c:	e113      	b.n	6e46 <fnet_tcp_snd+0x256>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:903
    }

    /* If the socket is not connected, return*/
    if(sk->state != SS_CONNECTED)
    6c1e:	68fb      	ldr	r3, [r7, #12]
    6c20:	7b1b      	ldrb	r3, [r3, #12]
    6c22:	2b02      	cmp	r3, #2
    6c24:	d002      	beq.n	6c2c <fnet_tcp_snd+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:905
    {
        error_code = FNET_ERR_NOTCONN;
    6c26:	2314      	movs	r3, #20
    6c28:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:906
        goto ERROR;
    6c2a:	e10c      	b.n	6e46 <fnet_tcp_snd+0x256>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:910
    }
    
    
    if(sendlength)
    6c2c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    6c2e:	2b00      	cmp	r3, #0
    6c30:	f000 8107 	beq.w	6e42 <fnet_tcp_snd+0x252>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:912
    {
        fnet_isr_lock();
    6c34:	f7fb fb0c 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:915
        
        /* Caclulate a free space in the output buffer.*/
        freespace = (long)(sk->send_buffer.count_max - sk->send_buffer.count);
    6c38:	68fb      	ldr	r3, [r7, #12]
    6c3a:	6c9a      	ldr	r2, [r3, #72]	; 0x48
    6c3c:	68fb      	ldr	r3, [r7, #12]
    6c3e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    6c40:	1ad3      	subs	r3, r2, r3
    6c42:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:918

        /* Check maximum allocated memory chunck */
        malloc_max = fnet_malloc_max_netbuf();
    6c44:	f7fc fabe 	bl	31c4 <fnet_malloc_max_netbuf>
    6c48:	61b8      	str	r0, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:920

        if(malloc_max < (long)(FNET_CFG_CPU_ETH0_MTU*1.5)) //TBD I do not like it ????
    6c4a:	69ba      	ldr	r2, [r7, #24]
    6c4c:	f640 03c9 	movw	r3, #2249	; 0x8c9
    6c50:	429a      	cmp	r2, r3
    6c52:	d802      	bhi.n	6c5a <fnet_tcp_snd+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:922
        {
            freespace = 0;     
    6c54:	2300      	movs	r3, #0
    6c56:	62fb      	str	r3, [r7, #44]	; 0x2c
    6c58:	e005      	b.n	6c66 <fnet_tcp_snd+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:924
        }
        else if(freespace > malloc_max)
    6c5a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    6c5c:	69bb      	ldr	r3, [r7, #24]
    6c5e:	429a      	cmp	r2, r3
    6c60:	d901      	bls.n	6c66 <fnet_tcp_snd+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:926
        {
           freespace = (long)malloc_max;
    6c62:	69bb      	ldr	r3, [r7, #24]
    6c64:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:931
        }
       
      
        /* If the function is nonblocking and the data length greater than the freespace, recalculate the size of the data*/
        if(freespace < sendlength)
    6c66:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    6c68:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    6c6a:	429a      	cmp	r2, r3
    6c6c:	da0c      	bge.n	6c88 <fnet_tcp_snd+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:934
        {
            /* If the data can't be added to the output buffer, return*/
            if(freespace <= 0)
    6c6e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    6c70:	2b00      	cmp	r3, #0
    6c72:	dc03      	bgt.n	6c7c <fnet_tcp_snd+0x8c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:936
            {
                fnet_isr_unlock();
    6c74:	f7fb fafa 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:937
                return 0;
    6c78:	2300      	movs	r3, #0
    6c7a:	e0ea      	b.n	6e52 <fnet_tcp_snd+0x262>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:942
            }
            else
            {
                /* Recalculate the data size.*/
                sendlength = freespace;
    6c7c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    6c7e:	637b      	str	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:944
            #if FNET_CFG_TCP_URGENT            
                flags &= ~MSG_OOB;
    6c80:	683b      	ldr	r3, [r7, #0]
    6c82:	f023 0301 	bic.w	r3, r3, #1
    6c86:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:951
            }
        }

    #if FNET_CFG_TCP_URGENT
        /* Process the OOB data.*/
        if(flags & MSG_OOB)
    6c88:	683b      	ldr	r3, [r7, #0]
    6c8a:	f003 0301 	and.w	r3, r3, #1
    6c8e:	2b00      	cmp	r3, #0
    6c90:	d023      	beq.n	6cda <fnet_tcp_snd+0xea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:954
        {
            /* If the urgent data are already present, the urgent byte will not be added.*/
            if(FNET_TCP_COMP_GE(cb->tcpcb_sndurgseq, cb->tcpcb_rcvack))
    6c92:	69fb      	ldr	r3, [r7, #28]
    6c94:	68d9      	ldr	r1, [r3, #12]
    6c96:	69fb      	ldr	r3, [r7, #28]
    6c98:	68db      	ldr	r3, [r3, #12]
    6c9a:	f103 5200 	add.w	r2, r3, #536870912	; 0x20000000
    6c9e:	69fb      	ldr	r3, [r7, #28]
    6ca0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    6ca2:	4608      	mov	r0, r1
    6ca4:	4611      	mov	r1, r2
    6ca6:	461a      	mov	r2, r3
    6ca8:	f003 f80c 	bl	9cc4 <fnet_tcp_hit>
    6cac:	4603      	mov	r3, r0
    6cae:	2b00      	cmp	r3, #0
    6cb0:	d009      	beq.n	6cc6 <fnet_tcp_snd+0xd6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:956
            {
                sendlength -= 1;
    6cb2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    6cb4:	3b01      	subs	r3, #1
    6cb6:	637b      	str	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:959

                /* If the  data size is 0, return.*/
                if(!sendlength)
    6cb8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    6cba:	2b00      	cmp	r3, #0
    6cbc:	d10d      	bne.n	6cda <fnet_tcp_snd+0xea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:961
                {
                    fnet_isr_unlock();
    6cbe:	f7fb fad5 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:962
                    return 0;
    6cc2:	2300      	movs	r3, #0
    6cc4:	e0c5      	b.n	6e52 <fnet_tcp_snd+0x262>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:968
                }
            }
            else
            {
                /* Calculate the new sequence number of the urgent data.*/
                cb->tcpcb_sndurgseq = cb->tcpcb_rcvack + sk->send_buffer.count + sendlength - 1;
    6cc6:	69fb      	ldr	r3, [r7, #28]
    6cc8:	68da      	ldr	r2, [r3, #12]
    6cca:	68fb      	ldr	r3, [r7, #12]
    6ccc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    6cce:	441a      	add	r2, r3
    6cd0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    6cd2:	4413      	add	r3, r2
    6cd4:	1e5a      	subs	r2, r3, #1
    6cd6:	69fb      	ldr	r3, [r7, #28]
    6cd8:	64da      	str	r2, [r3, #76]	; 0x4c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:975

        }
    #endif /* FNET_CFG_TCP_URGENT */

        /* If the routing tables should be bypassed for this message only, set dontroute flag.*/
        if((flags & MSG_DONTROUTE) && !(sk->options.flags & SO_DONTROUTE))
    6cda:	683b      	ldr	r3, [r7, #0]
    6cdc:	f003 0304 	and.w	r3, r3, #4
    6ce0:	2b00      	cmp	r3, #0
    6ce2:	d010      	beq.n	6d06 <fnet_tcp_snd+0x116>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:975 (discriminator 1)
    6ce4:	68fb      	ldr	r3, [r7, #12]
    6ce6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    6cea:	f003 0304 	and.w	r3, r3, #4
    6cee:	2b00      	cmp	r3, #0
    6cf0:	d109      	bne.n	6d06 <fnet_tcp_snd+0x116>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:977
        {
            dontroute = 1;
    6cf2:	2301      	movs	r3, #1
    6cf4:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:978
            sk->options.flags |= SO_DONTROUTE;
    6cf6:	68fb      	ldr	r3, [r7, #12]
    6cf8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    6cfc:	f043 0204 	orr.w	r2, r3, #4
    6d00:	68fb      	ldr	r3, [r7, #12]
    6d02:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:986
       
        /* Receive the freespace value.*/
    //      freespace = (long)(sk->send_buffer.count_max - sk->send_buffer.count);

        /* Try to add the data.*/
        if(freespace > 0)
    6d06:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    6d08:	2b00      	cmp	r3, #0
    6d0a:	dd6c      	ble.n	6de6 <fnet_tcp_snd+0x1f6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:988
        {
            cb->tcpcb_flags |= FNET_TCP_CBF_INSND;
    6d0c:	69fb      	ldr	r3, [r7, #28]
    6d0e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    6d12:	f043 0280 	orr.w	r2, r3, #128	; 0x80
    6d16:	69fb      	ldr	r3, [r7, #28]
    6d18:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:991

            /* Calculate the data size that can be added.*/
            if(sendlength > freespace)
    6d1c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    6d1e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    6d20:	429a      	cmp	r2, r3
    6d22:	dd02      	ble.n	6d2a <fnet_tcp_snd+0x13a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:992
                currentlen = freespace;
    6d24:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    6d26:	62bb      	str	r3, [r7, #40]	; 0x28
    6d28:	e001      	b.n	6d2e <fnet_tcp_snd+0x13e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:994
            else
                currentlen = sendlength;
    6d2a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    6d2c:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:996

            netbuf = fnet_netbuf_from_buf(&buf[sentlength], currentlen, FNET_TRUE);
    6d2e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    6d30:	68ba      	ldr	r2, [r7, #8]
    6d32:	4413      	add	r3, r2
    6d34:	4618      	mov	r0, r3
    6d36:	6ab9      	ldr	r1, [r7, #40]	; 0x28
    6d38:	2201      	movs	r2, #1
    6d3a:	f7fb fe21 	bl	2980 <fnet_netbuf_from_buf>
    6d3e:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:999

            /* Check the memory allocation.*/
            if(netbuf) 
    6d40:	697b      	ldr	r3, [r7, #20]
    6d42:	2b00      	cmp	r3, #0
    6d44:	d04f      	beq.n	6de6 <fnet_tcp_snd+0x1f6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1001
            {
                sendlength -= currentlen;
    6d46:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    6d48:	6abb      	ldr	r3, [r7, #40]	; 0x28
    6d4a:	1ad3      	subs	r3, r2, r3
    6d4c:	637b      	str	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1002
                sentlength += currentlen;
    6d4e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    6d50:	6abb      	ldr	r3, [r7, #40]	; 0x28
    6d52:	4413      	add	r3, r2
    6d54:	633b      	str	r3, [r7, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1004

                if(fnet_socket_buffer_append_record(&sk->send_buffer, netbuf) == FNET_OK)
    6d56:	68fb      	ldr	r3, [r7, #12]
    6d58:	3344      	adds	r3, #68	; 0x44
    6d5a:	4618      	mov	r0, r3
    6d5c:	6979      	ldr	r1, [r7, #20]
    6d5e:	f7fe fb25 	bl	53ac <fnet_socket_buffer_append_record>
    6d62:	4603      	mov	r3, r0
    6d64:	2b00      	cmp	r3, #0
    6d66:	d137      	bne.n	6dd8 <fnet_tcp_snd+0x1e8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1008
                {

                    /* If the window of another side is closed, set the persist timer.*/
                    if(!cb->tcpcb_sndwnd)
    6d68:	69fb      	ldr	r3, [r7, #28]
    6d6a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    6d6c:	2b00      	cmp	r3, #0
    6d6e:	d10f      	bne.n	6d90 <fnet_tcp_snd+0x1a0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1010
                    {
                        if(cb->tcpcb_timers.persist == FNET_TCP_TIMER_OFF)
    6d70:	69fb      	ldr	r3, [r7, #28]
    6d72:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    6d76:	f1b3 3fff 	cmp.w	r3, #4294967295
    6d7a:	d134      	bne.n	6de6 <fnet_tcp_snd+0x1f6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1012
                        {
                            cb->tcpcb_cprto = cb->tcpcb_rto;
    6d7c:	69fb      	ldr	r3, [r7, #28]
    6d7e:	6d9a      	ldr	r2, [r3, #88]	; 0x58
    6d80:	69fb      	ldr	r3, [r7, #28]
    6d82:	661a      	str	r2, [r3, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1013
                            cb->tcpcb_timers.persist = cb->tcpcb_cprto;
    6d84:	69fb      	ldr	r3, [r7, #28]
    6d86:	6e1a      	ldr	r2, [r3, #96]	; 0x60
    6d88:	69fb      	ldr	r3, [r7, #28]
    6d8a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    6d8e:	e02a      	b.n	6de6 <fnet_tcp_snd+0x1f6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1022
                    {
                        /* Try to send the data.*/
                        while(1)
                        {
                            /* If the connection is not established, delete the data. Otherwise try to send the data*/
                            if(sk->state == SS_CONNECTED)
    6d90:	68fb      	ldr	r3, [r7, #12]
    6d92:	7b1b      	ldrb	r3, [r3, #12]
    6d94:	2b02      	cmp	r3, #2
    6d96:	d10f      	bne.n	6db8 <fnet_tcp_snd+0x1c8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1024
                            {
                                if(!fnet_tcp_sendanydata(sk, 1))
    6d98:	68f8      	ldr	r0, [r7, #12]
    6d9a:	2101      	movs	r1, #1
    6d9c:	f001 fb28 	bl	83f0 <fnet_tcp_sendanydata>
    6da0:	4603      	mov	r3, r0
    6da2:	2b00      	cmp	r3, #0
    6da4:	d116      	bne.n	6dd4 <fnet_tcp_snd+0x1e4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1026
                                {
                                    cb->tcpcb_flags &= ~FNET_TCP_CBF_INSND;
    6da6:	69fb      	ldr	r3, [r7, #28]
    6da8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    6dac:	f023 0280 	bic.w	r2, r3, #128	; 0x80
    6db0:	69fb      	ldr	r3, [r7, #28]
    6db2:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1027
                                    break;
    6db6:	e00e      	b.n	6dd6 <fnet_tcp_snd+0x1e6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1033
                                }
                            }
                            else
                            {
                                /* If socket is not connected, delete the output buffer.*/
                                fnet_socket_buffer_release(&sk->send_buffer);
    6db8:	68fb      	ldr	r3, [r7, #12]
    6dba:	3344      	adds	r3, #68	; 0x44
    6dbc:	4618      	mov	r0, r3
    6dbe:	f7fe facd 	bl	535c <fnet_socket_buffer_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1034
                                cb->tcpcb_flags &= ~FNET_TCP_CBF_INSND;
    6dc2:	69fb      	ldr	r3, [r7, #28]
    6dc4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    6dc8:	f023 0280 	bic.w	r2, r3, #128	; 0x80
    6dcc:	69fb      	ldr	r3, [r7, #28]
    6dce:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1035
                                break;
    6dd2:	e000      	b.n	6dd6 <fnet_tcp_snd+0x1e6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1037
                            }
                        }
    6dd4:	e7dc      	b.n	6d90 <fnet_tcp_snd+0x1a0>
    6dd6:	e006      	b.n	6de6 <fnet_tcp_snd+0x1f6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1042
                    }                    
                }
                else /* Not able to add to the socket send buffer.*/
                {
                    fnet_netbuf_free( netbuf );
    6dd8:	6978      	ldr	r0, [r7, #20]
    6dda:	f7fb fe6b 	bl	2ab4 <fnet_netbuf_free>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1043
                    fnet_isr_unlock();
    6dde:	f7fb fa45 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1044
                    return 0;
    6de2:	2300      	movs	r3, #0
    6de4:	e035      	b.n	6e52 <fnet_tcp_snd+0x262>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1050
                }
            }
        }
            
        /* Receive the freespace value.*/
        freespace = (long)(sk->send_buffer.count_max - sk->send_buffer.count);
    6de6:	68fb      	ldr	r3, [r7, #12]
    6de8:	6c9a      	ldr	r2, [r3, #72]	; 0x48
    6dea:	68fb      	ldr	r3, [r7, #12]
    6dec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    6dee:	1ad3      	subs	r3, r2, r3
    6df0:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1053

    #if FNET_CFG_TCP_URGENT  
        if(FNET_TCP_COMP_GE(cb->tcpcb_sndurgseq, cb->tcpcb_rcvack + sk->send_buffer.count))
    6df2:	69fb      	ldr	r3, [r7, #28]
    6df4:	68da      	ldr	r2, [r3, #12]
    6df6:	68fb      	ldr	r3, [r7, #12]
    6df8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    6dfa:	18d1      	adds	r1, r2, r3
    6dfc:	69fb      	ldr	r3, [r7, #28]
    6dfe:	68da      	ldr	r2, [r3, #12]
    6e00:	68fb      	ldr	r3, [r7, #12]
    6e02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    6e04:	4413      	add	r3, r2
    6e06:	f103 5200 	add.w	r2, r3, #536870912	; 0x20000000
    6e0a:	69fb      	ldr	r3, [r7, #28]
    6e0c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    6e0e:	4608      	mov	r0, r1
    6e10:	4611      	mov	r1, r2
    6e12:	461a      	mov	r2, r3
    6e14:	f002 ff56 	bl	9cc4 <fnet_tcp_hit>
    6e18:	4603      	mov	r3, r0
    6e1a:	2b00      	cmp	r3, #0
    6e1c:	d004      	beq.n	6e28 <fnet_tcp_snd+0x238>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1054
            cb->tcpcb_sndurgseq = cb->tcpcb_rcvack - 1;
    6e1e:	69fb      	ldr	r3, [r7, #28]
    6e20:	68db      	ldr	r3, [r3, #12]
    6e22:	1e5a      	subs	r2, r3, #1
    6e24:	69fb      	ldr	r3, [r7, #28]
    6e26:	64da      	str	r2, [r3, #76]	; 0x4c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1059
    #endif /* FNET_CFG_TCP_URGENT */

        
        /* Remove the dontroute flag.*/
        if(dontroute)
    6e28:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    6e2a:	2b00      	cmp	r3, #0
    6e2c:	d007      	beq.n	6e3e <fnet_tcp_snd+0x24e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1060
            sk->options.flags &= ~SO_DONTROUTE;
    6e2e:	68fb      	ldr	r3, [r7, #12]
    6e30:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    6e34:	f023 0204 	bic.w	r2, r3, #4
    6e38:	68fb      	ldr	r3, [r7, #12]
    6e3a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1063

        
        fnet_isr_unlock();
    6e3e:	f7fb fa15 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1065
    }
    return sentlength;
    6e42:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    6e44:	e005      	b.n	6e52 <fnet_tcp_snd+0x262>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1068

ERROR:
    fnet_socket_set_error(sk, error_code);
    6e46:	68f8      	ldr	r0, [r7, #12]
    6e48:	6a39      	ldr	r1, [r7, #32]
    6e4a:	f7fd f99f 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1069
    return FNET_ERR;
    6e4e:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1070
}
    6e52:	4618      	mov	r0, r3
    6e54:	3738      	adds	r7, #56	; 0x38
    6e56:	46bd      	mov	sp, r7
    6e58:	bd80      	pop	{r7, pc}
    6e5a:	bf00      	nop
    6e5c:	0fff0000 	.word	0x0fff0000

00006e60 <fnet_tcp_shutdown>:
fnet_tcp_shutdown():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1082
*
* RETURNS: If no error occurs, this function returns FNET_OK. Otherwise
*          it returns FNET_ERR. 
*************************************************************************/
static int fnet_tcp_shutdown( fnet_socket_t *sk, int how )
{
    6e60:	b580      	push	{r7, lr}
    6e62:	b082      	sub	sp, #8
    6e64:	af00      	add	r7, sp, #0
    6e66:	6078      	str	r0, [r7, #4]
    6e68:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1084
    /* If the socket is not connected, return.*/
    if(sk->state != SS_CONNECTED)
    6e6a:	687b      	ldr	r3, [r7, #4]
    6e6c:	7b1b      	ldrb	r3, [r3, #12]
    6e6e:	2b02      	cmp	r3, #2
    6e70:	d006      	beq.n	6e80 <fnet_tcp_shutdown+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1086
    {
        fnet_socket_set_error(sk, FNET_ERR_NOTCONN);
    6e72:	6878      	ldr	r0, [r7, #4]
    6e74:	2114      	movs	r1, #20
    6e76:	f7fd f989 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1087
        return FNET_ERR;
    6e7a:	f04f 33ff 	mov.w	r3, #4294967295
    6e7e:	e025      	b.n	6ecc <fnet_tcp_shutdown+0x6c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1091
    }
    else
    {
        fnet_isr_lock();
    6e80:	f7fb f9e6 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1094

        /* Shutdown the writing.*/
        if(how & SD_WRITE && !sk->send_buffer.is_shutdown)
    6e84:	683b      	ldr	r3, [r7, #0]
    6e86:	f003 0302 	and.w	r3, r3, #2
    6e8a:	2b00      	cmp	r3, #0
    6e8c:	d00a      	beq.n	6ea4 <fnet_tcp_shutdown+0x44>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1094 (discriminator 1)
    6e8e:	687b      	ldr	r3, [r7, #4]
    6e90:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    6e92:	2b00      	cmp	r3, #0
    6e94:	d106      	bne.n	6ea4 <fnet_tcp_shutdown+0x44>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1097
        {
            /* Set the flag of the buffer.*/
            sk->send_buffer.is_shutdown = 1;
    6e96:	687b      	ldr	r3, [r7, #4]
    6e98:	2201      	movs	r2, #1
    6e9a:	651a      	str	r2, [r3, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1100

            /* Send the data that is in the output buffer.*/
            fnet_tcp_sendanydata(sk, 1);
    6e9c:	6878      	ldr	r0, [r7, #4]
    6e9e:	2101      	movs	r1, #1
    6ea0:	f001 faa6 	bl	83f0 <fnet_tcp_sendanydata>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1104
        }

        /* Shutdown the reading.*/
        if(how & SD_READ && !sk->receive_buffer.is_shutdown)
    6ea4:	683b      	ldr	r3, [r7, #0]
    6ea6:	f003 0301 	and.w	r3, r3, #1
    6eaa:	2b00      	cmp	r3, #0
    6eac:	d00b      	beq.n	6ec6 <fnet_tcp_shutdown+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1104 (discriminator 1)
    6eae:	687b      	ldr	r3, [r7, #4]
    6eb0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    6eb2:	2b00      	cmp	r3, #0
    6eb4:	d107      	bne.n	6ec6 <fnet_tcp_shutdown+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1106
        {
            fnet_socket_buffer_release(&sk->receive_buffer);
    6eb6:	687b      	ldr	r3, [r7, #4]
    6eb8:	3334      	adds	r3, #52	; 0x34
    6eba:	4618      	mov	r0, r3
    6ebc:	f7fe fa4e 	bl	535c <fnet_socket_buffer_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1109

            /* Set the flag of the buffer (Data can't be read).*/
            sk->receive_buffer.is_shutdown = 1;
    6ec0:	687b      	ldr	r3, [r7, #4]
    6ec2:	2201      	movs	r2, #1
    6ec4:	641a      	str	r2, [r3, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1112
        }
        
        fnet_isr_unlock();
    6ec6:	f7fb f9d1 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1114

        return FNET_OK;
    6eca:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1116
    }
}
    6ecc:	4618      	mov	r0, r3
    6ece:	3708      	adds	r7, #8
    6ed0:	46bd      	mov	sp, r7
    6ed2:	bd80      	pop	{r7, pc}

00006ed4 <fnet_tcp_setsockopt>:
fnet_tcp_setsockopt():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1127
*
* RETURNS: If no error occurs, this function returns FNET_OK. Otherwise
*          it returns FNET_ERR.
*************************************************************************/
static int fnet_tcp_setsockopt( fnet_socket_t *sk, int level, int optname, char *optval, int optlen )
{
    6ed4:	b580      	push	{r7, lr}
    6ed6:	b088      	sub	sp, #32
    6ed8:	af02      	add	r7, sp, #8
    6eda:	60f8      	str	r0, [r7, #12]
    6edc:	60b9      	str	r1, [r7, #8]
    6ede:	607a      	str	r2, [r7, #4]
    6ee0:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1131
    int error_code;
    
    /* If the level is not IPPROTO_TCP, go to IP processing.*/
    if(level == IPPROTO_TCP)
    6ee2:	68bb      	ldr	r3, [r7, #8]
    6ee4:	2b06      	cmp	r3, #6
    6ee6:	d17a      	bne.n	6fde <fnet_tcp_setsockopt+0x10a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1134
    {
        /* Check the option size.*/
        switch(optname)
    6ee8:	687b      	ldr	r3, [r7, #4]
    6eea:	2b04      	cmp	r3, #4
    6eec:	d014      	beq.n	6f18 <fnet_tcp_setsockopt+0x44>
    6eee:	2b04      	cmp	r3, #4
    6ef0:	dc04      	bgt.n	6efc <fnet_tcp_setsockopt+0x28>
    6ef2:	2b01      	cmp	r3, #1
    6ef4:	d009      	beq.n	6f0a <fnet_tcp_setsockopt+0x36>
    6ef6:	2b02      	cmp	r3, #2
    6ef8:	d00e      	beq.n	6f18 <fnet_tcp_setsockopt+0x44>
    6efa:	e014      	b.n	6f26 <fnet_tcp_setsockopt+0x52>
    6efc:	2b40      	cmp	r3, #64	; 0x40
    6efe:	d00b      	beq.n	6f18 <fnet_tcp_setsockopt+0x44>
    6f00:	2b80      	cmp	r3, #128	; 0x80
    6f02:	d009      	beq.n	6f18 <fnet_tcp_setsockopt+0x44>
    6f04:	2b20      	cmp	r3, #32
    6f06:	d007      	beq.n	6f18 <fnet_tcp_setsockopt+0x44>
    6f08:	e00d      	b.n	6f26 <fnet_tcp_setsockopt+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1137
        {
            case TCP_MSS:
                if(optlen != sizeof(unsigned short))
    6f0a:	6a3b      	ldr	r3, [r7, #32]
    6f0c:	2b02      	cmp	r3, #2
    6f0e:	d002      	beq.n	6f16 <fnet_tcp_setsockopt+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1139
                {
                    error_code = FNET_ERR_INVAL;
    6f10:	2306      	movs	r3, #6
    6f12:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1140
                    goto ERROR;
    6f14:	e06d      	b.n	6ff2 <fnet_tcp_setsockopt+0x11e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1142
                }
                break;
    6f16:	e009      	b.n	6f2c <fnet_tcp_setsockopt+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1150
            case TCP_KEEPIDLE:
            case TCP_NODELAY:
        #if FNET_CFG_TCP_URGENT            
            case TCP_BSD:
        #endif            
                if(optlen != sizeof(int))
    6f18:	6a3b      	ldr	r3, [r7, #32]
    6f1a:	2b04      	cmp	r3, #4
    6f1c:	d002      	beq.n	6f24 <fnet_tcp_setsockopt+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1152
                {
                    error_code = FNET_ERR_INVAL;
    6f1e:	2306      	movs	r3, #6
    6f20:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1153
                    goto ERROR;
    6f22:	e066      	b.n	6ff2 <fnet_tcp_setsockopt+0x11e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1155
                }
                break;
    6f24:	e002      	b.n	6f2c <fnet_tcp_setsockopt+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1158
            default:
                /* The option is not supported.*/
                error_code = FNET_ERR_NOPROTOOPT;
    6f26:	2309      	movs	r3, #9
    6f28:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1159
                goto ERROR;                
    6f2a:	e062      	b.n	6ff2 <fnet_tcp_setsockopt+0x11e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1163
        }

        /* Process the option.*/
        switch(optname)
    6f2c:	687b      	ldr	r3, [r7, #4]
    6f2e:	2b04      	cmp	r3, #4
    6f30:	d040      	beq.n	6fb4 <fnet_tcp_setsockopt+0xe0>
    6f32:	2b04      	cmp	r3, #4
    6f34:	dc04      	bgt.n	6f40 <fnet_tcp_setsockopt+0x6c>
    6f36:	2b01      	cmp	r3, #1
    6f38:	d009      	beq.n	6f4e <fnet_tcp_setsockopt+0x7a>
    6f3a:	2b02      	cmp	r3, #2
    6f3c:	d03a      	beq.n	6fb4 <fnet_tcp_setsockopt+0xe0>
    6f3e:	e04c      	b.n	6fda <fnet_tcp_setsockopt+0x106>
    6f40:	2b40      	cmp	r3, #64	; 0x40
    6f42:	d01d      	beq.n	6f80 <fnet_tcp_setsockopt+0xac>
    6f44:	2b80      	cmp	r3, #128	; 0x80
    6f46:	d00f      	beq.n	6f68 <fnet_tcp_setsockopt+0x94>
    6f48:	2b20      	cmp	r3, #32
    6f4a:	d026      	beq.n	6f9a <fnet_tcp_setsockopt+0xc6>
    6f4c:	e045      	b.n	6fda <fnet_tcp_setsockopt+0x106>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1167
        {
            /* Maximal segment size option.*/
            case TCP_MSS:
                if(!(*((unsigned short *)(optval))))
    6f4e:	683b      	ldr	r3, [r7, #0]
    6f50:	881b      	ldrh	r3, [r3, #0]
    6f52:	2b00      	cmp	r3, #0
    6f54:	d102      	bne.n	6f5c <fnet_tcp_setsockopt+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1169
                {
                    error_code = FNET_ERR_INVAL;
    6f56:	2306      	movs	r3, #6
    6f58:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1170
                    goto ERROR;
    6f5a:	e04a      	b.n	6ff2 <fnet_tcp_setsockopt+0x11e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1173
                }

                sk->options.tcp_opt.mss = *((unsigned short *)(optval));
    6f5c:	683b      	ldr	r3, [r7, #0]
    6f5e:	881a      	ldrh	r2, [r3, #0]
    6f60:	68fb      	ldr	r3, [r7, #12]
    6f62:	f8a3 206c 	strh.w	r2, [r3, #108]	; 0x6c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1174
                break;
    6f66:	e038      	b.n	6fda <fnet_tcp_setsockopt+0x106>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1177
            /* Keepalive probe retransmit limit.*/
            case TCP_KEEPCNT:
                if(!(*((unsigned int *)(optval))))
    6f68:	683b      	ldr	r3, [r7, #0]
    6f6a:	681b      	ldr	r3, [r3, #0]
    6f6c:	2b00      	cmp	r3, #0
    6f6e:	d102      	bne.n	6f76 <fnet_tcp_setsockopt+0xa2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1179
                {
                    error_code = FNET_ERR_INVAL;
    6f70:	2306      	movs	r3, #6
    6f72:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1180
                    goto ERROR;                  
    6f74:	e03d      	b.n	6ff2 <fnet_tcp_setsockopt+0x11e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1183
                }

                sk->options.tcp_opt.keep_cnt = *((int *)(optval));
    6f76:	683b      	ldr	r3, [r7, #0]
    6f78:	681a      	ldr	r2, [r3, #0]
    6f7a:	68fb      	ldr	r3, [r7, #12]
    6f7c:	679a      	str	r2, [r3, #120]	; 0x78
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1184
                break;
    6f7e:	e02c      	b.n	6fda <fnet_tcp_setsockopt+0x106>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1187
            /* Keepalive retransmit interval.*/
            case TCP_KEEPINTVL:
                if(!(*((unsigned int *)(optval))))
    6f80:	683b      	ldr	r3, [r7, #0]
    6f82:	681b      	ldr	r3, [r3, #0]
    6f84:	2b00      	cmp	r3, #0
    6f86:	d102      	bne.n	6f8e <fnet_tcp_setsockopt+0xba>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1189
                {
                    error_code = FNET_ERR_INVAL;
    6f88:	2306      	movs	r3, #6
    6f8a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1190
                    goto ERROR;
    6f8c:	e031      	b.n	6ff2 <fnet_tcp_setsockopt+0x11e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1193
                }

                sk->options.tcp_opt.keep_intvl = *((int *)(optval))*(1000/FNET_TCP_SLOWTIMO);
    6f8e:	683b      	ldr	r3, [r7, #0]
    6f90:	681b      	ldr	r3, [r3, #0]
    6f92:	005a      	lsls	r2, r3, #1
    6f94:	68fb      	ldr	r3, [r7, #12]
    6f96:	675a      	str	r2, [r3, #116]	; 0x74
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1194
                break;            
    6f98:	e01f      	b.n	6fda <fnet_tcp_setsockopt+0x106>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1197
            /* Time between keepalive probes.*/
            case TCP_KEEPIDLE:
                if(!(*((unsigned int *)(optval))))
    6f9a:	683b      	ldr	r3, [r7, #0]
    6f9c:	681b      	ldr	r3, [r3, #0]
    6f9e:	2b00      	cmp	r3, #0
    6fa0:	d102      	bne.n	6fa8 <fnet_tcp_setsockopt+0xd4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1199
                {
                    error_code = FNET_ERR_INVAL;
    6fa2:	2306      	movs	r3, #6
    6fa4:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1200
                    goto ERROR;
    6fa6:	e024      	b.n	6ff2 <fnet_tcp_setsockopt+0x11e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1203
                }

                sk->options.tcp_opt.keep_idle = *((int *)(optval))*(1000/FNET_TCP_SLOWTIMO);
    6fa8:	683b      	ldr	r3, [r7, #0]
    6faa:	681b      	ldr	r3, [r3, #0]
    6fac:	005a      	lsls	r2, r3, #1
    6fae:	68fb      	ldr	r3, [r7, #12]
    6fb0:	671a      	str	r2, [r3, #112]	; 0x70
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1204
                break;
    6fb2:	e012      	b.n	6fda <fnet_tcp_setsockopt+0x106>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1211
            /* BSD interpretation of the urgent pointer.*/
            case TCP_BSD:
        #endif            
            /* TCP_NO_DELAY option.*/
            case TCP_NODELAY:
                if(*((int *)(optval)))
    6fb4:	683b      	ldr	r3, [r7, #0]
    6fb6:	681b      	ldr	r3, [r3, #0]
    6fb8:	2b00      	cmp	r3, #0
    6fba:	d006      	beq.n	6fca <fnet_tcp_setsockopt+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1212
                    sk->options.tcp_opt.flags |= optname;
    6fbc:	68fb      	ldr	r3, [r7, #12]
    6fbe:	6e9a      	ldr	r2, [r3, #104]	; 0x68
    6fc0:	687b      	ldr	r3, [r7, #4]
    6fc2:	431a      	orrs	r2, r3
    6fc4:	68fb      	ldr	r3, [r7, #12]
    6fc6:	669a      	str	r2, [r3, #104]	; 0x68
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1216
                else
                    sk->options.tcp_opt.flags &= ~optname;

                break;
    6fc8:	e006      	b.n	6fd8 <fnet_tcp_setsockopt+0x104>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1214
            /* TCP_NO_DELAY option.*/
            case TCP_NODELAY:
                if(*((int *)(optval)))
                    sk->options.tcp_opt.flags |= optname;
                else
                    sk->options.tcp_opt.flags &= ~optname;
    6fca:	68fb      	ldr	r3, [r7, #12]
    6fcc:	6e9a      	ldr	r2, [r3, #104]	; 0x68
    6fce:	687b      	ldr	r3, [r7, #4]
    6fd0:	43db      	mvns	r3, r3
    6fd2:	401a      	ands	r2, r3
    6fd4:	68fb      	ldr	r3, [r7, #12]
    6fd6:	669a      	str	r2, [r3, #104]	; 0x68
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1216

                break;
    6fd8:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1219
        }
        
        return FNET_OK;
    6fda:	2300      	movs	r3, #0
    6fdc:	e00f      	b.n	6ffe <fnet_tcp_setsockopt+0x12a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1224
    }
    else
    {
        /* IP level option processing.*/
        return fnet_ip_setsockopt(sk, level, optname, optval, optlen);
    6fde:	6a3b      	ldr	r3, [r7, #32]
    6fe0:	9300      	str	r3, [sp, #0]
    6fe2:	68f8      	ldr	r0, [r7, #12]
    6fe4:	68b9      	ldr	r1, [r7, #8]
    6fe6:	687a      	ldr	r2, [r7, #4]
    6fe8:	683b      	ldr	r3, [r7, #0]
    6fea:	f7fa ff1d 	bl	1e28 <fnet_ip_setsockopt>
    6fee:	4603      	mov	r3, r0
    6ff0:	e005      	b.n	6ffe <fnet_tcp_setsockopt+0x12a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1228
    }

ERROR:
    fnet_socket_set_error(sk, error_code);
    6ff2:	68f8      	ldr	r0, [r7, #12]
    6ff4:	6979      	ldr	r1, [r7, #20]
    6ff6:	f7fd f8c9 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1229
    return FNET_ERR;    
    6ffa:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1230
}
    6ffe:	4618      	mov	r0, r3
    7000:	3718      	adds	r7, #24
    7002:	46bd      	mov	sp, r7
    7004:	bd80      	pop	{r7, pc}
    7006:	bf00      	nop

00007008 <fnet_tcp_getsockopt>:
fnet_tcp_getsockopt():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1241
*
* RETURNS: If no error occurs, this function returns FNET_OK. Otherwise
*          it returns FNET_ERR.
*************************************************************************/
static int fnet_tcp_getsockopt( fnet_socket_t *sk, int level, int optname, char *optval, int *optlen )
{
    7008:	b580      	push	{r7, lr}
    700a:	b088      	sub	sp, #32
    700c:	af02      	add	r7, sp, #8
    700e:	60f8      	str	r0, [r7, #12]
    7010:	60b9      	str	r1, [r7, #8]
    7012:	607a      	str	r2, [r7, #4]
    7014:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1243
  
    fnet_tcp_control_t  *cb = (fnet_tcp_control_t *)sk->protocol_control;
    7016:	68fb      	ldr	r3, [r7, #12]
    7018:	699b      	ldr	r3, [r3, #24]
    701a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1246
    
   
    if(level == IPPROTO_TCP)
    701c:	68bb      	ldr	r3, [r7, #8]
    701e:	2b06      	cmp	r3, #6
    7020:	d16f      	bne.n	7102 <fnet_tcp_getsockopt+0xfa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1248
    {
        switch(optname)
    7022:	687b      	ldr	r3, [r7, #4]
    7024:	2b08      	cmp	r3, #8
    7026:	d038      	beq.n	709a <fnet_tcp_getsockopt+0x92>
    7028:	2b08      	cmp	r3, #8
    702a:	dc06      	bgt.n	703a <fnet_tcp_getsockopt+0x32>
    702c:	2b02      	cmp	r3, #2
    702e:	d026      	beq.n	707e <fnet_tcp_getsockopt+0x76>
    7030:	2b04      	cmp	r3, #4
    7032:	d024      	beq.n	707e <fnet_tcp_getsockopt+0x76>
    7034:	2b01      	cmp	r3, #1
    7036:	d04e      	beq.n	70d6 <fnet_tcp_getsockopt+0xce>
    7038:	e057      	b.n	70ea <fnet_tcp_getsockopt+0xe2>
    703a:	2b20      	cmp	r3, #32
    703c:	d016      	beq.n	706c <fnet_tcp_getsockopt+0x64>
    703e:	2b20      	cmp	r3, #32
    7040:	dc02      	bgt.n	7048 <fnet_tcp_getsockopt+0x40>
    7042:	2b10      	cmp	r3, #16
    7044:	d038      	beq.n	70b8 <fnet_tcp_getsockopt+0xb0>
    7046:	e050      	b.n	70ea <fnet_tcp_getsockopt+0xe2>
    7048:	2b40      	cmp	r3, #64	; 0x40
    704a:	d006      	beq.n	705a <fnet_tcp_getsockopt+0x52>
    704c:	2b80      	cmp	r3, #128	; 0x80
    704e:	d14c      	bne.n	70ea <fnet_tcp_getsockopt+0xe2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1251
        {
            case TCP_KEEPCNT:
                *((int *)(optval)) = sk->options.tcp_opt.keep_cnt;
    7050:	68fb      	ldr	r3, [r7, #12]
    7052:	6f9a      	ldr	r2, [r3, #120]	; 0x78
    7054:	683b      	ldr	r3, [r7, #0]
    7056:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1252
                break;
    7058:	e04e      	b.n	70f8 <fnet_tcp_getsockopt+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1254
            case TCP_KEEPINTVL:
                *((int *)(optval)) = sk->options.tcp_opt.keep_intvl/(1000/FNET_TCP_SLOWTIMO);
    705a:	68fb      	ldr	r3, [r7, #12]
    705c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
    705e:	0fda      	lsrs	r2, r3, #31
    7060:	4413      	add	r3, r2
    7062:	105b      	asrs	r3, r3, #1
    7064:	461a      	mov	r2, r3
    7066:	683b      	ldr	r3, [r7, #0]
    7068:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1255
                break;
    706a:	e045      	b.n	70f8 <fnet_tcp_getsockopt+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1257
            case TCP_KEEPIDLE:
                *((int *)(optval)) = sk->options.tcp_opt.keep_idle/(1000/FNET_TCP_SLOWTIMO);
    706c:	68fb      	ldr	r3, [r7, #12]
    706e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    7070:	0fda      	lsrs	r2, r3, #31
    7072:	4413      	add	r3, r2
    7074:	105b      	asrs	r3, r3, #1
    7076:	461a      	mov	r2, r3
    7078:	683b      	ldr	r3, [r7, #0]
    707a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1258
                break;
    707c:	e03c      	b.n	70f8 <fnet_tcp_getsockopt+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1263
        #if FNET_CFG_TCP_URGENT                
            case TCP_BSD:
        #endif            
            case TCP_NODELAY:
                if(sk->options.tcp_opt.flags & optname)
    707e:	68fb      	ldr	r3, [r7, #12]
    7080:	6e9a      	ldr	r2, [r3, #104]	; 0x68
    7082:	687b      	ldr	r3, [r7, #4]
    7084:	4013      	ands	r3, r2
    7086:	2b00      	cmp	r3, #0
    7088:	d003      	beq.n	7092 <fnet_tcp_getsockopt+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1264
                    *((int *)(optval)) = 1;
    708a:	683b      	ldr	r3, [r7, #0]
    708c:	2201      	movs	r2, #1
    708e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1267
                else
                    *((int *)(optval)) = 0;
                break;
    7090:	e032      	b.n	70f8 <fnet_tcp_getsockopt+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1266
        #endif            
            case TCP_NODELAY:
                if(sk->options.tcp_opt.flags & optname)
                    *((int *)(optval)) = 1;
                else
                    *((int *)(optval)) = 0;
    7092:	683b      	ldr	r3, [r7, #0]
    7094:	2200      	movs	r2, #0
    7096:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1267
                break;
    7098:	e02e      	b.n	70f8 <fnet_tcp_getsockopt+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1269
            case TCP_FINRCVD:
                if(cb->tcpcb_flags & FNET_TCP_CBF_FIN_RCVD)
    709a:	697b      	ldr	r3, [r7, #20]
    709c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    70a0:	f003 0308 	and.w	r3, r3, #8
    70a4:	2b00      	cmp	r3, #0
    70a6:	d003      	beq.n	70b0 <fnet_tcp_getsockopt+0xa8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1270
                    *((int *)(optval)) = 1;
    70a8:	683b      	ldr	r3, [r7, #0]
    70aa:	2201      	movs	r2, #1
    70ac:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1273
                else
                    *((int *)(optval)) = 0;
                break;
    70ae:	e023      	b.n	70f8 <fnet_tcp_getsockopt+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1272
                break;
            case TCP_FINRCVD:
                if(cb->tcpcb_flags & FNET_TCP_CBF_FIN_RCVD)
                    *((int *)(optval)) = 1;
                else
                    *((int *)(optval)) = 0;
    70b0:	683b      	ldr	r3, [r7, #0]
    70b2:	2200      	movs	r2, #0
    70b4:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1273
                break;
    70b6:	e01f      	b.n	70f8 <fnet_tcp_getsockopt+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1276
    #if FNET_CFG_TCP_URGENT               
            case TCP_URGRCVD:
                if(cb->tcpcb_flags & FNET_TCP_CBF_RCVURGENT)
    70b8:	697b      	ldr	r3, [r7, #20]
    70ba:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    70be:	f003 0302 	and.w	r3, r3, #2
    70c2:	2b00      	cmp	r3, #0
    70c4:	d003      	beq.n	70ce <fnet_tcp_getsockopt+0xc6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1277
                    *((int *)(optval)) = 1;
    70c6:	683b      	ldr	r3, [r7, #0]
    70c8:	2201      	movs	r2, #1
    70ca:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1280
                else
                    *((int *)(optval)) = 0;
                break;
    70cc:	e014      	b.n	70f8 <fnet_tcp_getsockopt+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1279
    #if FNET_CFG_TCP_URGENT               
            case TCP_URGRCVD:
                if(cb->tcpcb_flags & FNET_TCP_CBF_RCVURGENT)
                    *((int *)(optval)) = 1;
                else
                    *((int *)(optval)) = 0;
    70ce:	683b      	ldr	r3, [r7, #0]
    70d0:	2200      	movs	r2, #0
    70d2:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1280
                break;
    70d4:	e010      	b.n	70f8 <fnet_tcp_getsockopt+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1283
    #endif                
            case TCP_MSS:
                *((unsigned short *)(optval)) = sk->options.tcp_opt.mss;
    70d6:	68fb      	ldr	r3, [r7, #12]
    70d8:	f8b3 206c 	ldrh.w	r2, [r3, #108]	; 0x6c
    70dc:	683b      	ldr	r3, [r7, #0]
    70de:	801a      	strh	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1284
                *optlen = sizeof(unsigned short);
    70e0:	6a3b      	ldr	r3, [r7, #32]
    70e2:	2202      	movs	r2, #2
    70e4:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1285
                return FNET_OK;                
    70e6:	2300      	movs	r3, #0
    70e8:	e014      	b.n	7114 <fnet_tcp_getsockopt+0x10c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1287
            default:
                fnet_socket_set_error(sk, FNET_ERR_NOPROTOOPT);
    70ea:	68f8      	ldr	r0, [r7, #12]
    70ec:	2109      	movs	r1, #9
    70ee:	f7fd f84d 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1288
                return FNET_ERR;
    70f2:	f04f 33ff 	mov.w	r3, #4294967295
    70f6:	e00d      	b.n	7114 <fnet_tcp_getsockopt+0x10c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1291
        }

        *optlen = sizeof(int);
    70f8:	6a3b      	ldr	r3, [r7, #32]
    70fa:	2204      	movs	r2, #4
    70fc:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1293

        return FNET_OK;
    70fe:	2300      	movs	r3, #0
    7100:	e008      	b.n	7114 <fnet_tcp_getsockopt+0x10c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1298
    }
    else
    {
        /* IP level option processing.*/
        return fnet_ip_getsockopt(sk, level, optname, optval, optlen);
    7102:	6a3b      	ldr	r3, [r7, #32]
    7104:	9300      	str	r3, [sp, #0]
    7106:	68f8      	ldr	r0, [r7, #12]
    7108:	68b9      	ldr	r1, [r7, #8]
    710a:	687a      	ldr	r2, [r7, #4]
    710c:	683b      	ldr	r3, [r7, #0]
    710e:	f7fa fedb 	bl	1ec8 <fnet_ip_getsockopt>
    7112:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1300
    }
}
    7114:	4618      	mov	r0, r3
    7116:	3718      	adds	r7, #24
    7118:	46bd      	mov	sp, r7
    711a:	bd80      	pop	{r7, pc}

0000711c <fnet_tcp_listen>:
fnet_tcp_listen():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1311
*              the state of the socket to the listening state.
*
* RETURNS: FNET_OK.
*************************************************************************/
static int fnet_tcp_listen( fnet_socket_t *sk, int backlog )
{
    711c:	b580      	push	{r7, lr}
    711e:	b084      	sub	sp, #16
    7120:	af00      	add	r7, sp, #0
    7122:	6078      	str	r0, [r7, #4]
    7124:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1313
    /* Initializen the pointer to the control block.*/
    fnet_tcp_control_t  *cb = (fnet_tcp_control_t *)sk->protocol_control;
    7126:	687b      	ldr	r3, [r7, #4]
    7128:	699b      	ldr	r3, [r3, #24]
    712a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1316
    
    
    if(sk->state == SS_LISTENING)
    712c:	687b      	ldr	r3, [r7, #4]
    712e:	7b1b      	ldrb	r3, [r3, #12]
    7130:	2b03      	cmp	r3, #3
    7132:	d124      	bne.n	717e <fnet_tcp_listen+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1320
    {
        /* If the socket number of the listening socket is greater than the new backlog,
         * delete the sockets.*/
        fnet_isr_lock();
    7134:	f7fb f88c 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1322

        while(backlog < sk->partial_con_len + sk->incoming_con_len && sk->partial_con_len)
    7138:	e004      	b.n	7144 <fnet_tcp_listen+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1323
          fnet_tcp_abortsk(sk->partial_con);
    713a:	687b      	ldr	r3, [r7, #4]
    713c:	69db      	ldr	r3, [r3, #28]
    713e:	4618      	mov	r0, r3
    7140:	f002 faba 	bl	96b8 <fnet_tcp_abortsk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1322 (discriminator 1)
    {
        /* If the socket number of the listening socket is greater than the new backlog,
         * delete the sockets.*/
        fnet_isr_lock();

        while(backlog < sk->partial_con_len + sk->incoming_con_len && sk->partial_con_len)
    7144:	687b      	ldr	r3, [r7, #4]
    7146:	6a1a      	ldr	r2, [r3, #32]
    7148:	687b      	ldr	r3, [r7, #4]
    714a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    714c:	441a      	add	r2, r3
    714e:	683b      	ldr	r3, [r7, #0]
    7150:	429a      	cmp	r2, r3
    7152:	dd03      	ble.n	715c <fnet_tcp_listen+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1322 (discriminator 2)
    7154:	687b      	ldr	r3, [r7, #4]
    7156:	6a1b      	ldr	r3, [r3, #32]
    7158:	2b00      	cmp	r3, #0
    715a:	d1ee      	bne.n	713a <fnet_tcp_listen+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1325
          fnet_tcp_abortsk(sk->partial_con);

        while(backlog < sk->incoming_con_len)
    715c:	e004      	b.n	7168 <fnet_tcp_listen+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1326
          fnet_tcp_abortsk(sk->incoming_con);
    715e:	687b      	ldr	r3, [r7, #4]
    7160:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    7162:	4618      	mov	r0, r3
    7164:	f002 faa8 	bl	96b8 <fnet_tcp_abortsk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1325 (discriminator 1)
        fnet_isr_lock();

        while(backlog < sk->partial_con_len + sk->incoming_con_len && sk->partial_con_len)
          fnet_tcp_abortsk(sk->partial_con);

        while(backlog < sk->incoming_con_len)
    7168:	687b      	ldr	r3, [r7, #4]
    716a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    716c:	683b      	ldr	r3, [r7, #0]
    716e:	429a      	cmp	r2, r3
    7170:	dcf5      	bgt.n	715e <fnet_tcp_listen+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1328
          fnet_tcp_abortsk(sk->incoming_con);

        sk->con_limit = backlog;
    7172:	687b      	ldr	r3, [r7, #4]
    7174:	683a      	ldr	r2, [r7, #0]
    7176:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1329
        fnet_isr_unlock();
    7178:	f7fb f878 	bl	226c <fnet_isr_unlock>
    717c:	e018      	b.n	71b0 <fnet_tcp_listen+0x94>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1333
    }
    else
    {
        fnet_tcp_initconnection(sk);
    717e:	6878      	ldr	r0, [r7, #4]
    7180:	f000 f854 	bl	722c <fnet_tcp_initconnection>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1336

        /* Foreign address must be any.*/
        ((struct sockaddr_in *)(&sk->foreign_addr))->sin_addr.s_addr = INADDR_ANY;
    7184:	687b      	ldr	r3, [r7, #4]
    7186:	3354      	adds	r3, #84	; 0x54
    7188:	2200      	movs	r2, #0
    718a:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1337
        sk->foreign_addr.sa_port = 0;
    718c:	687b      	ldr	r3, [r7, #4]
    718e:	2200      	movs	r2, #0
    7190:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1338
        sk->foreign_addr.sa_family = AF_INET;
    7194:	687b      	ldr	r3, [r7, #4]
    7196:	2201      	movs	r2, #1
    7198:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1339
        sk->con_limit = backlog;
    719c:	687b      	ldr	r3, [r7, #4]
    719e:	683a      	ldr	r2, [r7, #0]
    71a0:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1342

        /* Change the state.*/
        cb->tcpcb_connection_state = FNET_TCP_CS_LISTENING;
    71a2:	68fb      	ldr	r3, [r7, #12]
    71a4:	2203      	movs	r2, #3
    71a6:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1343
        sk->state = SS_LISTENING;
    71aa:	687b      	ldr	r3, [r7, #4]
    71ac:	2203      	movs	r2, #3
    71ae:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1346
    }
    
    return FNET_OK;
    71b0:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1347
}
    71b2:	4618      	mov	r0, r3
    71b4:	3710      	adds	r7, #16
    71b6:	46bd      	mov	sp, r7
    71b8:	bd80      	pop	{r7, pc}
    71ba:	bf00      	nop

000071bc <fnet_tcp_drain>:
fnet_tcp_drain():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1357
* DESCRIPTION: fnet_tcp_drain removes the temporary data.
*
* RETURNS: None.          
*************************************************************************/
static void fnet_tcp_drain( void )
{
    71bc:	b580      	push	{r7, lr}
    71be:	b084      	sub	sp, #16
    71c0:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1363
    fnet_socket_t       *sk; 
    fnet_socket_t       *delsk;
    fnet_tcp_control_t  *cb;    


    fnet_isr_lock();
    71c2:	f7fb f845 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1366

    /* Receive the pointer to the first socket.*/
    sk = fnet_tcp_prot_if.head;
    71c6:	4b18      	ldr	r3, [pc, #96]	; (7228 <fnet_tcp_drain+0x6c>)
    71c8:	681b      	ldr	r3, [r3, #0]
    71ca:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1368

    while(sk)
    71cc:	e024      	b.n	7218 <fnet_tcp_drain+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1370
    {
        cb = (fnet_tcp_control_t *)sk->protocol_control;
    71ce:	68fb      	ldr	r3, [r7, #12]
    71d0:	699b      	ldr	r3, [r3, #24]
    71d2:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1371
        delsk = sk;
    71d4:	68fb      	ldr	r3, [r7, #12]
    71d6:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1372
        sk = sk->next;
    71d8:	68fb      	ldr	r3, [r7, #12]
    71da:	681b      	ldr	r3, [r3, #0]
    71dc:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1375

        /* if((cb->tcpcb_connection_state == FNET_TCP_CS_TIME_WAIT) && (cb->tcpcb_flags & FNET_TCP_CBF_CLOSE))*/
        if((cb->tcpcb_flags & FNET_TCP_CBF_CLOSE))
    71de:	68bb      	ldr	r3, [r7, #8]
    71e0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    71e4:	f003 0301 	and.w	r3, r3, #1
    71e8:	2b00      	cmp	r3, #0
    71ea:	d003      	beq.n	71f4 <fnet_tcp_drain+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1378
        {
            /* Remove the socket that to be closed.  */
            fnet_tcp_closesk(delsk);
    71ec:	6878      	ldr	r0, [r7, #4]
    71ee:	f002 fcc7 	bl	9b80 <fnet_tcp_closesk>
    71f2:	e011      	b.n	7218 <fnet_tcp_drain+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1381
        }
        /* Delete all partial and incoming connections */
        else if(delsk->state == SS_LISTENING)
    71f4:	687b      	ldr	r3, [r7, #4]
    71f6:	7b1b      	ldrb	r3, [r3, #12]
    71f8:	2b03      	cmp	r3, #3
    71fa:	d10a      	bne.n	7212 <fnet_tcp_drain+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1383
        {
            while(delsk->partial_con)
    71fc:	e004      	b.n	7208 <fnet_tcp_drain+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1384
              fnet_tcp_abortsk(delsk->partial_con);
    71fe:	687b      	ldr	r3, [r7, #4]
    7200:	69db      	ldr	r3, [r3, #28]
    7202:	4618      	mov	r0, r3
    7204:	f002 fa58 	bl	96b8 <fnet_tcp_abortsk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1383 (discriminator 1)
            fnet_tcp_closesk(delsk);
        }
        /* Delete all partial and incoming connections */
        else if(delsk->state == SS_LISTENING)
        {
            while(delsk->partial_con)
    7208:	687b      	ldr	r3, [r7, #4]
    720a:	69db      	ldr	r3, [r3, #28]
    720c:	2b00      	cmp	r3, #0
    720e:	d1f6      	bne.n	71fe <fnet_tcp_drain+0x42>
    7210:	e002      	b.n	7218 <fnet_tcp_drain+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1391
           fnet_tcp_abortsk(delsk->incoming_con); */
        }
#if !FNET_CFG_TCP_DISCARD_OUT_OF_ORDER        
        else
            /* Remove the temporary data.*/
            fnet_tcp_deletetmpbuf(cb);
    7212:	68b8      	ldr	r0, [r7, #8]
    7214:	f002 fd28 	bl	9c68 <fnet_tcp_deletetmpbuf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1368 (discriminator 1)
    fnet_isr_lock();

    /* Receive the pointer to the first socket.*/
    sk = fnet_tcp_prot_if.head;

    while(sk)
    7218:	68fb      	ldr	r3, [r7, #12]
    721a:	2b00      	cmp	r3, #0
    721c:	d1d7      	bne.n	71ce <fnet_tcp_drain+0x12>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1396
            fnet_tcp_deletetmpbuf(cb);
#endif            
    }


    fnet_isr_unlock();
    721e:	f7fb f825 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1397
}
    7222:	3710      	adds	r7, #16
    7224:	46bd      	mov	sp, r7
    7226:	bd80      	pop	{r7, pc}
    7228:	10000058 	.word	0x10000058

0000722c <fnet_tcp_initconnection>:
fnet_tcp_initconnection():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1408
*              and initializes the socket.
* 
* RETURNS: None.
*************************************************************************/
static void fnet_tcp_initconnection( fnet_socket_t *sk )
{
    722c:	b580      	push	{r7, lr}
    722e:	b084      	sub	sp, #16
    7230:	af00      	add	r7, sp, #0
    7232:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1411
    fnet_tcp_control_t  *cb;

    cb = sk->protocol_control;
    7234:	687b      	ldr	r3, [r7, #4]
    7236:	699b      	ldr	r3, [r3, #24]
    7238:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1413

    fnet_memset_zero(cb, sizeof(fnet_tcp_control_t));
    723a:	68f8      	ldr	r0, [r7, #12]
    723c:	2194      	movs	r1, #148	; 0x94
    723e:	f7fe fce5 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1416

    /* Set the default maximal segment size value.*/
    cb->tcpcb_sndmss = FNET_TCP_DEFAULT_MSS;
    7242:	68fb      	ldr	r3, [r7, #12]
    7244:	f44f 7206 	mov.w	r2, #536	; 0x218
    7248:	f8a3 2048 	strh.w	r2, [r3, #72]	; 0x48
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1417
    cb->tcpcb_rcvmss = sk->options.tcp_opt.mss;
    724c:	687b      	ldr	r3, [r7, #4]
    724e:	f8b3 206c 	ldrh.w	r2, [r3, #108]	; 0x6c
    7252:	68fb      	ldr	r3, [r7, #12]
    7254:	839a      	strh	r2, [r3, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1420
    
    /* Set the length of the socket buffers.*/
    cb->tcpcb_rcvcountmax = sk->receive_buffer.count_max;
    7256:	687b      	ldr	r3, [r7, #4]
    7258:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    725a:	68fb      	ldr	r3, [r7, #12]
    725c:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1423

    /* The input buffer can't be greater than the FNET_TCP_MAX_BUFFER value.*/
    if(cb->tcpcb_rcvcountmax > FNET_TCP_MAX_BUFFER)
    725e:	68fb      	ldr	r3, [r7, #12]
    7260:	689a      	ldr	r2, [r3, #8]
    7262:	4b2e      	ldr	r3, [pc, #184]	; (731c <fnet_tcp_initconnection+0xf0>)
    7264:	429a      	cmp	r2, r3
    7266:	d902      	bls.n	726e <fnet_tcp_initconnection+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1424
        cb->tcpcb_rcvcountmax = FNET_TCP_MAX_BUFFER;
    7268:	68fb      	ldr	r3, [r7, #12]
    726a:	4a2c      	ldr	r2, [pc, #176]	; (731c <fnet_tcp_initconnection+0xf0>)
    726c:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1427

    /* If a segment size greater than the buffer length, recalculate the segment size.*/
    if(cb->tcpcb_rcvcountmax < cb->tcpcb_rcvmss)
    726e:	68fb      	ldr	r3, [r7, #12]
    7270:	689a      	ldr	r2, [r3, #8]
    7272:	68fb      	ldr	r3, [r7, #12]
    7274:	8b9b      	ldrh	r3, [r3, #28]
    7276:	429a      	cmp	r2, r3
    7278:	d205      	bcs.n	7286 <fnet_tcp_initconnection+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1428
        cb->tcpcb_rcvmss = (unsigned short)cb->tcpcb_rcvcountmax;
    727a:	68fb      	ldr	r3, [r7, #12]
    727c:	689b      	ldr	r3, [r3, #8]
    727e:	b29a      	uxth	r2, r3
    7280:	68fb      	ldr	r3, [r7, #12]
    7282:	839a      	strh	r2, [r3, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1431

    /* Receive a scale of the input window.*/
    while(FNET_TCP_MAXWIN << cb->tcpcb_recvscale < cb->tcpcb_rcvcountmax)
    7284:	e006      	b.n	7294 <fnet_tcp_initconnection+0x68>
    7286:	e005      	b.n	7294 <fnet_tcp_initconnection+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1432
      cb->tcpcb_recvscale++;
    7288:	68fb      	ldr	r3, [r7, #12]
    728a:	7f9b      	ldrb	r3, [r3, #30]
    728c:	3301      	adds	r3, #1
    728e:	b2da      	uxtb	r2, r3
    7290:	68fb      	ldr	r3, [r7, #12]
    7292:	779a      	strb	r2, [r3, #30]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1431 (discriminator 1)
    /* If a segment size greater than the buffer length, recalculate the segment size.*/
    if(cb->tcpcb_rcvcountmax < cb->tcpcb_rcvmss)
        cb->tcpcb_rcvmss = (unsigned short)cb->tcpcb_rcvcountmax;

    /* Receive a scale of the input window.*/
    while(FNET_TCP_MAXWIN << cb->tcpcb_recvscale < cb->tcpcb_rcvcountmax)
    7294:	68fb      	ldr	r3, [r7, #12]
    7296:	7f9b      	ldrb	r3, [r3, #30]
    7298:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    729c:	fa02 f303 	lsl.w	r3, r2, r3
    72a0:	461a      	mov	r2, r3
    72a2:	68fb      	ldr	r3, [r7, #12]
    72a4:	689b      	ldr	r3, [r3, #8]
    72a6:	429a      	cmp	r2, r3
    72a8:	d3ee      	bcc.n	7288 <fnet_tcp_initconnection+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1435
      cb->tcpcb_recvscale++;

    /* Stop all timers.*/
    cb->tcpcb_timers.retransmission = FNET_TCP_TIMER_OFF;
    72aa:	68fb      	ldr	r3, [r7, #12]
    72ac:	f04f 32ff 	mov.w	r2, #4294967295
    72b0:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1436
    cb->tcpcb_timers.connection = FNET_TCP_TIMER_OFF;
    72b2:	68fb      	ldr	r3, [r7, #12]
    72b4:	f04f 32ff 	mov.w	r2, #4294967295
    72b8:	679a      	str	r2, [r3, #120]	; 0x78
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1437
    cb->tcpcb_timers.abort = FNET_TCP_TIMER_OFF;
    72ba:	68fb      	ldr	r3, [r7, #12]
    72bc:	f04f 32ff 	mov.w	r2, #4294967295
    72c0:	671a      	str	r2, [r3, #112]	; 0x70
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1438
    cb->tcpcb_timers.round_trip = FNET_TCP_TIMER_OFF;
    72c2:	68fb      	ldr	r3, [r7, #12]
    72c4:	f04f 32ff 	mov.w	r2, #4294967295
    72c8:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1439
    cb->tcpcb_timers.persist = FNET_TCP_TIMER_OFF;
    72cc:	68fb      	ldr	r3, [r7, #12]
    72ce:	f04f 32ff 	mov.w	r2, #4294967295
    72d2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1440
    cb->tcpcb_timers.keepalive = FNET_TCP_TIMER_OFF;
    72d6:	68fb      	ldr	r3, [r7, #12]
    72d8:	f04f 32ff 	mov.w	r2, #4294967295
    72dc:	675a      	str	r2, [r3, #116]	; 0x74
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1441
    cb->tcpcb_timers.delayed_ack = FNET_TCP_TIMER_OFF;
    72de:	68fb      	ldr	r3, [r7, #12]
    72e0:	f04f 32ff 	mov.w	r2, #4294967295
    72e4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1444

    /* Initialize the retransmission timeout.*/
    cb->tcpcb_rto = cb->tcpcb_crto = FNET_TCP_TIMERS_INIT;
    72e8:	68fb      	ldr	r3, [r7, #12]
    72ea:	220c      	movs	r2, #12
    72ec:	65da      	str	r2, [r3, #92]	; 0x5c
    72ee:	68fb      	ldr	r3, [r7, #12]
    72f0:	6dda      	ldr	r2, [r3, #92]	; 0x5c
    72f2:	68fb      	ldr	r3, [r7, #12]
    72f4:	659a      	str	r2, [r3, #88]	; 0x58
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1448

#if FNET_CFG_TCP_URGENT
    /* Initialize the receive urgent mark.*/
    cb->tcpcb_rcvurgmark = FNET_TCP_NOT_USED;
    72f6:	68fb      	ldr	r3, [r7, #12]
    72f8:	f04f 32ff 	mov.w	r2, #4294967295
    72fc:	625a      	str	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1452
#endif /* FNET_CFG_TCP_URGENT */

    /* Initialize Slow Start Threshold.*/
    cb->tcpcb_ssthresh = FNET_TCP_MAX_BUFFER;
    72fe:	68fb      	ldr	r3, [r7, #12]
    7300:	4a06      	ldr	r2, [pc, #24]	; (731c <fnet_tcp_initconnection+0xf0>)
    7302:	645a      	str	r2, [r3, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1455

    /* Clear the input buffer.*/
    if(sk->receive_buffer.count)
    7304:	687b      	ldr	r3, [r7, #4]
    7306:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    7308:	2b00      	cmp	r3, #0
    730a:	d004      	beq.n	7316 <fnet_tcp_initconnection+0xea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1456
        fnet_socket_buffer_release(&sk->receive_buffer);
    730c:	687b      	ldr	r3, [r7, #4]
    730e:	3334      	adds	r3, #52	; 0x34
    7310:	4618      	mov	r0, r3
    7312:	f7fe f823 	bl	535c <fnet_socket_buffer_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1458
 
}
    7316:	3710      	adds	r7, #16
    7318:	46bd      	mov	sp, r7
    731a:	bd80      	pop	{r7, pc}
    731c:	0fff0000 	.word	0x0fff0000

00007320 <fnet_tcp_inputsk>:
fnet_tcp_inputsk():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1470
*
* RETURNS: TRUE if the input segment must be deleted. Otherwise
*          this function returns FALSE.          
*************************************************************************/
static int fnet_tcp_inputsk( fnet_socket_t *sk, fnet_netbuf_t *insegment, struct sockaddr *src_addr,  struct sockaddr *dest_addr)
{
    7320:	b590      	push	{r4, r7, lr}
    7322:	b093      	sub	sp, #76	; 0x4c
    7324:	af00      	add	r7, sp, #0
    7326:	60f8      	str	r0, [r7, #12]
    7328:	60b9      	str	r1, [r7, #8]
    732a:	607a      	str	r2, [r7, #4]
    732c:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1471
    fnet_tcp_control_t  *cb = (fnet_tcp_control_t *)sk->protocol_control; 
    732e:	68fb      	ldr	r3, [r7, #12]
    7330:	699b      	ldr	r3, [r3, #24]
    7332:	63bb      	str	r3, [r7, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1475
    fnet_tcp_control_t  *pcb;                   /* Pointer to the partial control block.*/
    unsigned char       sgmtype;                /* Flags of the segment.*/
    fnet_socket_t       *psk;                   /* Pointer to the partial socket.*/
    int                 result = FNET_TRUE;                         
    7334:	2301      	movs	r3, #1
    7336:	643b      	str	r3, [r7, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1479
    char                options[FNET_TCP_MAX_OPT_SIZE];    
    char                optionlen;                         
    unsigned long       repsize;                /* Size of repeated data.*/
    int                 ackparam = 0;           /* Acknowledgment parameter.*/
    7338:	2300      	movs	r3, #0
    733a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1480
    unsigned long       tcp_seq = fnet_ntohl(FNET_TCP_SEQ(insegment));
    733c:	68bb      	ldr	r3, [r7, #8]
    733e:	68db      	ldr	r3, [r3, #12]
    7340:	3304      	adds	r3, #4
    7342:	681b      	ldr	r3, [r3, #0]
    7344:	4618      	mov	r0, r3
    7346:	f008 f901 	bl	f54c <fnet_htonl>
    734a:	63f8      	str	r0, [r7, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1481
    unsigned long       tcp_length = (unsigned long)FNET_TCP_LENGTH(insegment);
    734c:	68bb      	ldr	r3, [r7, #8]
    734e:	68db      	ldr	r3, [r3, #12]
    7350:	330c      	adds	r3, #12
    7352:	781b      	ldrb	r3, [r3, #0]
    7354:	091b      	lsrs	r3, r3, #4
    7356:	b2db      	uxtb	r3, r3
    7358:	009b      	lsls	r3, r3, #2
    735a:	637b      	str	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1482
    unsigned long       tcp_ack = fnet_ntohl(FNET_TCP_ACK(insegment));
    735c:	68bb      	ldr	r3, [r7, #8]
    735e:	68db      	ldr	r3, [r3, #12]
    7360:	3308      	adds	r3, #8
    7362:	681b      	ldr	r3, [r3, #0]
    7364:	4618      	mov	r0, r3
    7366:	f008 f8f1 	bl	f54c <fnet_htonl>
    736a:	6338      	str	r0, [r7, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1485

    /* Get the flags.*/
    sgmtype = (unsigned char)(FNET_TCP_FLAGS(insegment));
    736c:	68bb      	ldr	r3, [r7, #8]
    736e:	68db      	ldr	r3, [r3, #12]
    7370:	330d      	adds	r3, #13
    7372:	781b      	ldrb	r3, [r3, #0]
    7374:	f003 033f 	and.w	r3, r3, #63	; 0x3f
    7378:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1488
    
    /* Check the sequence number.*/
    switch(cb->tcpcb_connection_state)
    737c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    737e:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    7382:	2b02      	cmp	r3, #2
    7384:	d006      	beq.n	7394 <fnet_tcp_inputsk+0x74>
    7386:	2b03      	cmp	r3, #3
    7388:	f000 80e7 	beq.w	755a <fnet_tcp_inputsk+0x23a>
    738c:	2b01      	cmp	r3, #1
    738e:	f000 80e4 	beq.w	755a <fnet_tcp_inputsk+0x23a>
    7392:	e011      	b.n	73b8 <fnet_tcp_inputsk+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1495
        case FNET_TCP_CS_SYN_SENT:
        case FNET_TCP_CS_LISTENING:
            break;

        case FNET_TCP_CS_SYN_RCVD:
            if(cb->tcpcb_prev_connection_state == FNET_TCP_CS_SYN_SENT && (sgmtype & FNET_TCP_SGT_SYN))
    7394:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7396:	f893 308d 	ldrb.w	r3, [r3, #141]	; 0x8d
    739a:	2b01      	cmp	r3, #1
    739c:	d10c      	bne.n	73b8 <fnet_tcp_inputsk+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1495 (discriminator 1)
    739e:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
    73a2:	f003 0302 	and.w	r3, r3, #2
    73a6:	2b00      	cmp	r3, #0
    73a8:	d006      	beq.n	73b8 <fnet_tcp_inputsk+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1498
            {
                /* Check the sequence number for simultaneouos open.*/
                if(tcp_seq == cb->tcpcb_sndack - 1)
    73aa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    73ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    73ae:	1e5a      	subs	r2, r3, #1
    73b0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    73b2:	429a      	cmp	r2, r3
    73b4:	d100      	bne.n	73b8 <fnet_tcp_inputsk+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1499
                    break;
    73b6:	e0d1      	b.n	755c <fnet_tcp_inputsk+0x23c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1502
            }
        default:
            if(FNET_TCP_COMP_G(cb->tcpcb_sndack, tcp_seq)) 
    73b8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    73ba:	1c59      	adds	r1, r3, #1
    73bc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    73be:	f103 5200 	add.w	r2, r3, #536870912	; 0x20000000
    73c2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    73c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    73c6:	4608      	mov	r0, r1
    73c8:	4611      	mov	r1, r2
    73ca:	461a      	mov	r2, r3
    73cc:	f002 fc7a 	bl	9cc4 <fnet_tcp_hit>
    73d0:	4603      	mov	r3, r0
    73d2:	2b00      	cmp	r3, #0
    73d4:	d070      	beq.n	74b8 <fnet_tcp_inputsk+0x198>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1504
            {
                if(FNET_TCP_COMP_G(tcp_seq + insegment->total_length - tcp_length, cb->tcpcb_sndack))
    73d6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    73d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    73da:	1c59      	adds	r1, r3, #1
    73dc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    73de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    73e0:	f103 5200 	add.w	r2, r3, #536870912	; 0x20000000
    73e4:	68bb      	ldr	r3, [r7, #8]
    73e6:	6958      	ldr	r0, [r3, #20]
    73e8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    73ea:	4418      	add	r0, r3
    73ec:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    73ee:	1ac3      	subs	r3, r0, r3
    73f0:	4608      	mov	r0, r1
    73f2:	4611      	mov	r1, r2
    73f4:	461a      	mov	r2, r3
    73f6:	f002 fc65 	bl	9cc4 <fnet_tcp_hit>
    73fa:	4603      	mov	r3, r0
    73fc:	2b00      	cmp	r3, #0
    73fe:	d056      	beq.n	74ae <fnet_tcp_inputsk+0x18e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1507
                {
                    /* Delete the left repeated part.*/
                    repsize = fnet_tcp_getsize(tcp_seq, cb->tcpcb_sndack);
    7400:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7402:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    7404:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
    7406:	4619      	mov	r1, r3
    7408:	f002 fc82 	bl	9d10 <fnet_tcp_getsize>
    740c:	62f8      	str	r0, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1508
                    fnet_netbuf_cut_center(&insegment, (int)tcp_length, (int)repsize);
    740e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    7410:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    7412:	f107 0108 	add.w	r1, r7, #8
    7416:	4608      	mov	r0, r1
    7418:	4611      	mov	r1, r2
    741a:	461a      	mov	r2, r3
    741c:	f7fb fcea 	bl	2df4 <fnet_netbuf_cut_center>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1511

                    /* If urgent  flag is present, recalculate of the urgent pointer.*/
                    if(sgmtype & FNET_TCP_SGT_URG)
    7420:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
    7424:	f003 0320 	and.w	r3, r3, #32
    7428:	2b00      	cmp	r3, #0
    742a:	d02f      	beq.n	748c <fnet_tcp_inputsk+0x16c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1513
                    {
                        if((int)fnet_ntohs(FNET_TCP_URG(insegment)) - (int)repsize >= 0)               
    742c:	68bb      	ldr	r3, [r7, #8]
    742e:	68db      	ldr	r3, [r3, #12]
    7430:	3312      	adds	r3, #18
    7432:	881b      	ldrh	r3, [r3, #0]
    7434:	4618      	mov	r0, r3
    7436:	f008 f873 	bl	f520 <fnet_htons>
    743a:	4603      	mov	r3, r0
    743c:	461a      	mov	r2, r3
    743e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    7440:	1ad3      	subs	r3, r2, r3
    7442:	2b00      	cmp	r3, #0
    7444:	db16      	blt.n	7474 <fnet_tcp_inputsk+0x154>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1515
                        {
                            FNET_TCP_URG(insegment) = fnet_htons((unsigned short)(fnet_ntohs(FNET_TCP_URG(insegment)) - repsize)); 
    7446:	68bb      	ldr	r3, [r7, #8]
    7448:	68db      	ldr	r3, [r3, #12]
    744a:	3312      	adds	r3, #18
    744c:	461c      	mov	r4, r3
    744e:	68bb      	ldr	r3, [r7, #8]
    7450:	68db      	ldr	r3, [r3, #12]
    7452:	3312      	adds	r3, #18
    7454:	881b      	ldrh	r3, [r3, #0]
    7456:	4618      	mov	r0, r3
    7458:	f008 f862 	bl	f520 <fnet_htons>
    745c:	4603      	mov	r3, r0
    745e:	461a      	mov	r2, r3
    7460:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    7462:	b29b      	uxth	r3, r3
    7464:	1ad3      	subs	r3, r2, r3
    7466:	b29b      	uxth	r3, r3
    7468:	4618      	mov	r0, r3
    746a:	f008 f859 	bl	f520 <fnet_htons>
    746e:	4603      	mov	r3, r0
    7470:	8023      	strh	r3, [r4, #0]
    7472:	e00b      	b.n	748c <fnet_tcp_inputsk+0x16c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1519
                        }
                        else
                        {
                            sgmtype &= ~FNET_TCP_SGT_URG;
    7474:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
    7478:	f023 0320 	bic.w	r3, r3, #32
    747c:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1520
                            FNET_TCP_SET_FLAGS(insegment) = sgmtype;
    7480:	68bb      	ldr	r3, [r7, #8]
    7482:	68db      	ldr	r3, [r3, #12]
    7484:	330d      	adds	r3, #13
    7486:	f897 2047 	ldrb.w	r2, [r7, #71]	; 0x47
    748a:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1525 (discriminator 1)
                        }
                    }

                    /* Set the sequence number.*/
                    tcp_seq = cb->tcpcb_sndack;
    748c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    748e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    7490:	63fb      	str	r3, [r7, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1526 (discriminator 1)
                    FNET_TCP_SEQ(insegment) = fnet_htonl(tcp_seq);
    7492:	68bb      	ldr	r3, [r7, #8]
    7494:	68db      	ldr	r3, [r3, #12]
    7496:	3304      	adds	r3, #4
    7498:	461c      	mov	r4, r3
    749a:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
    749c:	f008 f856 	bl	f54c <fnet_htonl>
    74a0:	4603      	mov	r3, r0
    74a2:	6023      	str	r3, [r4, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1529 (discriminator 1)

                    /* Acknowledgment must be sent immediatelly.*/
                    ackparam |= FNET_TCP_AP_SEND_IMMEDIATELLY;
    74a4:	697b      	ldr	r3, [r7, #20]
    74a6:	f043 0302 	orr.w	r3, r3, #2
    74aa:	617b      	str	r3, [r7, #20]
    74ac:	e004      	b.n	74b8 <fnet_tcp_inputsk+0x198>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1535
                }
                else
                {
                    /* Segment is repeated */
                    /* Send the acknowledgment */           
                    fnet_tcp_sendack(sk);
    74ae:	68f8      	ldr	r0, [r7, #12]
    74b0:	f001 ffea 	bl	9488 <fnet_tcp_sendack>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1536
                    return FNET_TRUE;
    74b4:	2301      	movs	r3, #1
    74b6:	e34f      	b.n	7b58 <fnet_tcp_inputsk+0x838>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1540
                }
            }

            if(FNET_TCP_COMP_G(tcp_seq, cb->tcpcb_sndack + cb->tcpcb_rcvwnd))
    74b8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    74ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    74bc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    74be:	699b      	ldr	r3, [r3, #24]
    74c0:	4413      	add	r3, r2
    74c2:	1c5a      	adds	r2, r3, #1
    74c4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    74c6:	6b19      	ldr	r1, [r3, #48]	; 0x30
    74c8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    74ca:	699b      	ldr	r3, [r3, #24]
    74cc:	440b      	add	r3, r1
    74ce:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
    74d2:	4610      	mov	r0, r2
    74d4:	4619      	mov	r1, r3
    74d6:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    74d8:	f002 fbf4 	bl	9cc4 <fnet_tcp_hit>
    74dc:	4603      	mov	r3, r0
    74de:	2b00      	cmp	r3, #0
    74e0:	d004      	beq.n	74ec <fnet_tcp_inputsk+0x1cc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1544
            {
                /* Segment is not in the window*/
                /* Send the acknowledgment */
                fnet_tcp_sendack(sk);
    74e2:	68f8      	ldr	r0, [r7, #12]
    74e4:	f001 ffd0 	bl	9488 <fnet_tcp_sendack>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1545
                return FNET_TRUE;
    74e8:	2301      	movs	r3, #1
    74ea:	e335      	b.n	7b58 <fnet_tcp_inputsk+0x838>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1549
            }
            else
            {
                if(FNET_TCP_COMP_G(tcp_seq + insegment->total_length - tcp_length, cb->tcpcb_sndack + cb->tcpcb_rcvwnd))
    74ec:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    74ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    74f0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    74f2:	699b      	ldr	r3, [r3, #24]
    74f4:	4413      	add	r3, r2
    74f6:	1c59      	adds	r1, r3, #1
    74f8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    74fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    74fc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    74fe:	699b      	ldr	r3, [r3, #24]
    7500:	4413      	add	r3, r2
    7502:	f103 5200 	add.w	r2, r3, #536870912	; 0x20000000
    7506:	68bb      	ldr	r3, [r7, #8]
    7508:	6958      	ldr	r0, [r3, #20]
    750a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    750c:	4418      	add	r0, r3
    750e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    7510:	1ac3      	subs	r3, r0, r3
    7512:	4608      	mov	r0, r1
    7514:	4611      	mov	r1, r2
    7516:	461a      	mov	r2, r3
    7518:	f002 fbd4 	bl	9cc4 <fnet_tcp_hit>
    751c:	4603      	mov	r3, r0
    751e:	2b00      	cmp	r3, #0
    7520:	d01c      	beq.n	755c <fnet_tcp_inputsk+0x23c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1552
                {
                    /* Delete the right part that is not in the window.*/
                    fnet_netbuf_trim(&insegment, -(int)fnet_tcp_getsize(cb->tcpcb_sndack + cb->tcpcb_rcvwnd,
    7522:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7524:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    7526:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7528:	699b      	ldr	r3, [r3, #24]
    752a:	441a      	add	r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1553
                                               (unsigned long)(tcp_seq + insegment->total_length - tcp_length)));
    752c:	68bb      	ldr	r3, [r7, #8]
    752e:	6959      	ldr	r1, [r3, #20]
    7530:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    7532:	4419      	add	r1, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1552
            else
            {
                if(FNET_TCP_COMP_G(tcp_seq + insegment->total_length - tcp_length, cb->tcpcb_sndack + cb->tcpcb_rcvwnd))
                {
                    /* Delete the right part that is not in the window.*/
                    fnet_netbuf_trim(&insegment, -(int)fnet_tcp_getsize(cb->tcpcb_sndack + cb->tcpcb_rcvwnd,
    7534:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    7536:	1acb      	subs	r3, r1, r3
    7538:	4610      	mov	r0, r2
    753a:	4619      	mov	r1, r3
    753c:	f002 fbe8 	bl	9d10 <fnet_tcp_getsize>
    7540:	4603      	mov	r3, r0
    7542:	425b      	negs	r3, r3
    7544:	f107 0208 	add.w	r2, r7, #8
    7548:	4610      	mov	r0, r2
    754a:	4619      	mov	r1, r3
    754c:	f7fb fbb6 	bl	2cbc <fnet_netbuf_trim>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1555
                                               (unsigned long)(tcp_seq + insegment->total_length - tcp_length)));
                    /* Acknowledgment must be sent immediatelly.*/
                    ackparam |= FNET_TCP_AP_SEND_IMMEDIATELLY;
    7550:	697b      	ldr	r3, [r7, #20]
    7552:	f043 0302 	orr.w	r3, r3, #2
    7556:	617b      	str	r3, [r7, #20]
    7558:	e000      	b.n	755c <fnet_tcp_inputsk+0x23c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1492
    /* Check the sequence number.*/
    switch(cb->tcpcb_connection_state)
    {
        case FNET_TCP_CS_SYN_SENT:
        case FNET_TCP_CS_LISTENING:
            break;
    755a:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1561
                }
            }
    }

    /* Process the reset segment with acknowledgment.*/
    if((sgmtype &(FNET_TCP_SGT_RST | FNET_TCP_SGT_ACK)) == (FNET_TCP_SGT_RST | FNET_TCP_SGT_ACK))
    755c:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
    7560:	f003 0314 	and.w	r3, r3, #20
    7564:	2b14      	cmp	r3, #20
    7566:	d112      	bne.n	758e <fnet_tcp_inputsk+0x26e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1563
    {
        if(cb->tcpcb_connection_state == FNET_TCP_CS_SYN_SENT)
    7568:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    756a:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    756e:	2b01      	cmp	r3, #1
    7570:	d10b      	bne.n	758a <fnet_tcp_inputsk+0x26a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1565
        {
              if(tcp_ack == cb->tcpcb_sndseq)
    7572:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7574:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    7576:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    7578:	429a      	cmp	r2, r3
    757a:	d103      	bne.n	7584 <fnet_tcp_inputsk+0x264>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1567
                  /* Close the socket (connecting is failed).*/
                  sk->options.local_error = FNET_ERR_CONNRESET;
    757c:	68fb      	ldr	r3, [r7, #12]
    757e:	2212      	movs	r2, #18
    7580:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1569

              fnet_tcp_closesk(sk);
    7584:	68f8      	ldr	r0, [r7, #12]
    7586:	f002 fafb 	bl	9b80 <fnet_tcp_closesk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1572
        }

        return FNET_TRUE;
    758a:	2301      	movs	r3, #1
    758c:	e2e4      	b.n	7b58 <fnet_tcp_inputsk+0x838>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1576
    }

    /* Process the reset segment without acknowledgment.*/
    if(sgmtype & FNET_TCP_SGT_RST)
    758e:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
    7592:	f003 0304 	and.w	r3, r3, #4
    7596:	2b00      	cmp	r3, #0
    7598:	d011      	beq.n	75be <fnet_tcp_inputsk+0x29e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1578
    {
        switch(cb->tcpcb_connection_state)
    759a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    759c:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    75a0:	2b01      	cmp	r3, #1
    75a2:	d001      	beq.n	75a8 <fnet_tcp_inputsk+0x288>
    75a4:	2b03      	cmp	r3, #3
    75a6:	d101      	bne.n	75ac <fnet_tcp_inputsk+0x28c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1582
        {
            case FNET_TCP_CS_LISTENING:
            case FNET_TCP_CS_SYN_SENT:
              return FNET_TRUE;
    75a8:	2301      	movs	r3, #1
    75aa:	e2d5      	b.n	7b58 <fnet_tcp_inputsk+0x838>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1586

            default:
              /* Close the socket.*/
              sk->options.local_error = FNET_ERR_CONNRESET;
    75ac:	68fb      	ldr	r3, [r7, #12]
    75ae:	2212      	movs	r2, #18
    75b0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1587
              fnet_tcp_closesk(sk);
    75b4:	68f8      	ldr	r0, [r7, #12]
    75b6:	f002 fae3 	bl	9b80 <fnet_tcp_closesk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1590
        }

        return FNET_TRUE;
    75ba:	2301      	movs	r3, #1
    75bc:	e2cc      	b.n	7b58 <fnet_tcp_inputsk+0x838>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1595
    }


    /* Process the SYN segment.*/
    if(sgmtype & FNET_TCP_SGT_SYN)
    75be:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
    75c2:	f003 0302 	and.w	r3, r3, #2
    75c6:	2b00      	cmp	r3, #0
    75c8:	d026      	beq.n	7618 <fnet_tcp_inputsk+0x2f8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1597
    {
        switch(cb->tcpcb_connection_state)
    75ca:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    75cc:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    75d0:	2b02      	cmp	r3, #2
    75d2:	d004      	beq.n	75de <fnet_tcp_inputsk+0x2be>
    75d4:	2b03      	cmp	r3, #3
    75d6:	d01d      	beq.n	7614 <fnet_tcp_inputsk+0x2f4>
    75d8:	2b01      	cmp	r3, #1
    75da:	d01b      	beq.n	7614 <fnet_tcp_inputsk+0x2f4>
    75dc:	e00b      	b.n	75f6 <fnet_tcp_inputsk+0x2d6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1604
            case FNET_TCP_CS_SYN_SENT:
            case FNET_TCP_CS_LISTENING:
              break;

            case FNET_TCP_CS_SYN_RCVD:
              if((cb->tcpcb_prev_connection_state == FNET_TCP_CS_SYN_SENT) && (tcp_seq == (cb->tcpcb_sndack - 1))) 
    75de:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    75e0:	f893 308d 	ldrb.w	r3, [r3, #141]	; 0x8d
    75e4:	2b01      	cmp	r3, #1
    75e6:	d106      	bne.n	75f6 <fnet_tcp_inputsk+0x2d6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1604 (discriminator 1)
    75e8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    75ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    75ec:	1e5a      	subs	r2, r3, #1
    75ee:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    75f0:	429a      	cmp	r2, r3
    75f2:	d100      	bne.n	75f6 <fnet_tcp_inputsk+0x2d6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1605
                  break;
    75f4:	e00f      	b.n	7616 <fnet_tcp_inputsk+0x2f6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1609

            default:
              /* Close the socket and send the reset segment.*/
              fnet_tcp_sendrst(&sk->options, insegment, dest_addr, src_addr);
    75f6:	68fb      	ldr	r3, [r7, #12]
    75f8:	f103 0264 	add.w	r2, r3, #100	; 0x64
    75fc:	68bb      	ldr	r3, [r7, #8]
    75fe:	4610      	mov	r0, r2
    7600:	4619      	mov	r1, r3
    7602:	683a      	ldr	r2, [r7, #0]
    7604:	687b      	ldr	r3, [r7, #4]
    7606:	f001 ff99 	bl	953c <fnet_tcp_sendrst>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1610
              fnet_tcp_closesk(sk);
    760a:	68f8      	ldr	r0, [r7, #12]
    760c:	f002 fab8 	bl	9b80 <fnet_tcp_closesk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1611
              return FNET_TRUE;
    7610:	2301      	movs	r3, #1
    7612:	e2a1      	b.n	7b58 <fnet_tcp_inputsk+0x838>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1601
    {
        switch(cb->tcpcb_connection_state)
        {
            case FNET_TCP_CS_SYN_SENT:
            case FNET_TCP_CS_LISTENING:
              break;
    7614:	bf00      	nop
    7616:	e02a      	b.n	766e <fnet_tcp_inputsk+0x34e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1617
        }
    }
    else
    {
        /* Process the segment without SYN flag.*/
        switch(cb->tcpcb_connection_state)
    7618:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    761a:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    761e:	2b01      	cmp	r3, #1
    7620:	d013      	beq.n	764a <fnet_tcp_inputsk+0x32a>
    7622:	2b03      	cmp	r3, #3
    7624:	d123      	bne.n	766e <fnet_tcp_inputsk+0x34e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1620
        {
            case FNET_TCP_CS_LISTENING:
              if(sgmtype & FNET_TCP_SGT_ACK)
    7626:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
    762a:	f003 0310 	and.w	r3, r3, #16
    762e:	2b00      	cmp	r3, #0
    7630:	d009      	beq.n	7646 <fnet_tcp_inputsk+0x326>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1622
                  /* Send the reset segment.*/
                  fnet_tcp_sendrst(&sk->options, insegment, dest_addr, src_addr);
    7632:	68fb      	ldr	r3, [r7, #12]
    7634:	f103 0264 	add.w	r2, r3, #100	; 0x64
    7638:	68bb      	ldr	r3, [r7, #8]
    763a:	4610      	mov	r0, r2
    763c:	4619      	mov	r1, r3
    763e:	683a      	ldr	r2, [r7, #0]
    7640:	687b      	ldr	r3, [r7, #4]
    7642:	f001 ff7b 	bl	953c <fnet_tcp_sendrst>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1624

              return FNET_TRUE;
    7646:	2301      	movs	r3, #1
    7648:	e286      	b.n	7b58 <fnet_tcp_inputsk+0x838>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1627

            case FNET_TCP_CS_SYN_SENT:
              if(sgmtype & FNET_TCP_SGT_ACK)
    764a:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
    764e:	f003 0310 	and.w	r3, r3, #16
    7652:	2b00      	cmp	r3, #0
    7654:	d009      	beq.n	766a <fnet_tcp_inputsk+0x34a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1629
                  /* Send the reset segment.*/
                  fnet_tcp_sendrst(&sk->options, insegment, dest_addr, src_addr);
    7656:	68fb      	ldr	r3, [r7, #12]
    7658:	f103 0264 	add.w	r2, r3, #100	; 0x64
    765c:	68bb      	ldr	r3, [r7, #8]
    765e:	4610      	mov	r0, r2
    7660:	4619      	mov	r1, r3
    7662:	683a      	ldr	r2, [r7, #0]
    7664:	687b      	ldr	r3, [r7, #4]
    7666:	f001 ff69 	bl	953c <fnet_tcp_sendrst>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1631

              return FNET_TRUE;
    766a:	2301      	movs	r3, #1
    766c:	e274      	b.n	7b58 <fnet_tcp_inputsk+0x838>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1637
        }
    }


    /* Process the segment with acknowledgment.*/
    if(sgmtype & FNET_TCP_SGT_ACK)
    766e:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
    7672:	f003 0310 	and.w	r3, r3, #16
    7676:	2b00      	cmp	r3, #0
    7678:	d048      	beq.n	770c <fnet_tcp_inputsk+0x3ec>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1639
    {
        switch(cb->tcpcb_connection_state)
    767a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    767c:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    7680:	2b01      	cmp	r3, #1
    7682:	db23      	blt.n	76cc <fnet_tcp_inputsk+0x3ac>
    7684:	2b02      	cmp	r3, #2
    7686:	dd02      	ble.n	768e <fnet_tcp_inputsk+0x36e>
    7688:	2b03      	cmp	r3, #3
    768a:	d013      	beq.n	76b4 <fnet_tcp_inputsk+0x394>
    768c:	e01e      	b.n	76cc <fnet_tcp_inputsk+0x3ac>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1643
        {
            case FNET_TCP_CS_SYN_SENT:
            case FNET_TCP_CS_SYN_RCVD:
              if(tcp_ack != cb->tcpcb_sndseq) 
    768e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7690:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    7692:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    7694:	429a      	cmp	r2, r3
    7696:	d00b      	beq.n	76b0 <fnet_tcp_inputsk+0x390>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1646
              {
                  /* Send the reset segment.*/
                  fnet_tcp_sendrst(&sk->options, insegment, dest_addr, src_addr);
    7698:	68fb      	ldr	r3, [r7, #12]
    769a:	f103 0264 	add.w	r2, r3, #100	; 0x64
    769e:	68bb      	ldr	r3, [r7, #8]
    76a0:	4610      	mov	r0, r2
    76a2:	4619      	mov	r1, r3
    76a4:	683a      	ldr	r2, [r7, #0]
    76a6:	687b      	ldr	r3, [r7, #4]
    76a8:	f001 ff48 	bl	953c <fnet_tcp_sendrst>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1647
                  return FNET_TRUE;
    76ac:	2301      	movs	r3, #1
    76ae:	e253      	b.n	7b58 <fnet_tcp_inputsk+0x838>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1650
              }

              break;
    76b0:	bf00      	nop
    76b2:	e03b      	b.n	772c <fnet_tcp_inputsk+0x40c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1654

            case FNET_TCP_CS_LISTENING:
              /* Send the reset segment.*/
              fnet_tcp_sendrst(&sk->options, insegment, dest_addr, src_addr);
    76b4:	68fb      	ldr	r3, [r7, #12]
    76b6:	f103 0264 	add.w	r2, r3, #100	; 0x64
    76ba:	68bb      	ldr	r3, [r7, #8]
    76bc:	4610      	mov	r0, r2
    76be:	4619      	mov	r1, r3
    76c0:	683a      	ldr	r2, [r7, #0]
    76c2:	687b      	ldr	r3, [r7, #4]
    76c4:	f001 ff3a 	bl	953c <fnet_tcp_sendrst>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1655
              return FNET_TRUE;
    76c8:	2301      	movs	r3, #1
    76ca:	e245      	b.n	7b58 <fnet_tcp_inputsk+0x838>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1658
              
            default:
              if(!fnet_tcp_hit(cb->tcpcb_rcvack, cb->tcpcb_maxrcvack, tcp_ack))
    76cc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    76ce:	68da      	ldr	r2, [r3, #12]
    76d0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    76d2:	691b      	ldr	r3, [r3, #16]
    76d4:	4610      	mov	r0, r2
    76d6:	4619      	mov	r1, r3
    76d8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    76da:	f002 faf3 	bl	9cc4 <fnet_tcp_hit>
    76de:	4603      	mov	r3, r0
    76e0:	2b00      	cmp	r3, #0
    76e2:	d123      	bne.n	772c <fnet_tcp_inputsk+0x40c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1660
              {
                  if(FNET_TCP_COMP_G(tcp_ack, cb->tcpcb_maxrcvack))
    76e4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    76e6:	691b      	ldr	r3, [r3, #16]
    76e8:	1c5a      	adds	r2, r3, #1
    76ea:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    76ec:	691b      	ldr	r3, [r3, #16]
    76ee:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
    76f2:	4610      	mov	r0, r2
    76f4:	4619      	mov	r1, r3
    76f6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    76f8:	f002 fae4 	bl	9cc4 <fnet_tcp_hit>
    76fc:	4603      	mov	r3, r0
    76fe:	2b00      	cmp	r3, #0
    7700:	d002      	beq.n	7708 <fnet_tcp_inputsk+0x3e8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1662
                      /* Send the acknowledgment.*/
                      fnet_tcp_sendack(sk);
    7702:	68f8      	ldr	r0, [r7, #12]
    7704:	f001 fec0 	bl	9488 <fnet_tcp_sendack>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1664

                  return FNET_TRUE;
    7708:	2301      	movs	r3, #1
    770a:	e225      	b.n	7b58 <fnet_tcp_inputsk+0x838>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1671
        }
    }
    else
    {
        /* Process the segment without acknowledgment.*/
        switch(cb->tcpcb_connection_state)
    770c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    770e:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    7712:	2b02      	cmp	r3, #2
    7714:	d004      	beq.n	7720 <fnet_tcp_inputsk+0x400>
    7716:	2b03      	cmp	r3, #3
    7718:	d007      	beq.n	772a <fnet_tcp_inputsk+0x40a>
    771a:	2b01      	cmp	r3, #1
    771c:	d005      	beq.n	772a <fnet_tcp_inputsk+0x40a>
    771e:	e002      	b.n	7726 <fnet_tcp_inputsk+0x406>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1678
            case FNET_TCP_CS_SYN_SENT:
            case FNET_TCP_CS_LISTENING:
              break;

            case FNET_TCP_CS_SYN_RCVD:
              fnet_tcp_sendack(sk);
    7720:	68f8      	ldr	r0, [r7, #12]
    7722:	f001 feb1 	bl	9488 <fnet_tcp_sendack>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1681

            default:
              return FNET_TRUE;
    7726:	2301      	movs	r3, #1
    7728:	e216      	b.n	7b58 <fnet_tcp_inputsk+0x838>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1675
        /* Process the segment without acknowledgment.*/
        switch(cb->tcpcb_connection_state)
        {
            case FNET_TCP_CS_SYN_SENT:
            case FNET_TCP_CS_LISTENING:
              break;
    772a:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1686
              return FNET_TRUE;
        }
    }

    /* Set the window size (of another side).*/
    if(sgmtype & FNET_TCP_SGT_SYN)
    772c:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
    7730:	f003 0302 	and.w	r3, r3, #2
    7734:	2b00      	cmp	r3, #0
    7736:	d00b      	beq.n	7750 <fnet_tcp_inputsk+0x430>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1687
        cb->tcpcb_sndwnd = fnet_ntohs(FNET_TCP_WND(insegment));
    7738:	68bb      	ldr	r3, [r7, #8]
    773a:	68db      	ldr	r3, [r3, #12]
    773c:	330e      	adds	r3, #14
    773e:	881b      	ldrh	r3, [r3, #0]
    7740:	4618      	mov	r0, r3
    7742:	f007 feed 	bl	f520 <fnet_htons>
    7746:	4603      	mov	r3, r0
    7748:	461a      	mov	r2, r3
    774a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    774c:	635a      	str	r2, [r3, #52]	; 0x34
    774e:	e010      	b.n	7772 <fnet_tcp_inputsk+0x452>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1689
    else
        cb->tcpcb_sndwnd = (unsigned long)(fnet_ntohs(FNET_TCP_WND(insegment)) << cb->tcpcb_sendscale);
    7750:	68bb      	ldr	r3, [r7, #8]
    7752:	68db      	ldr	r3, [r3, #12]
    7754:	330e      	adds	r3, #14
    7756:	881b      	ldrh	r3, [r3, #0]
    7758:	4618      	mov	r0, r3
    775a:	f007 fee1 	bl	f520 <fnet_htons>
    775e:	4603      	mov	r3, r0
    7760:	461a      	mov	r2, r3
    7762:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7764:	f893 304a 	ldrb.w	r3, [r3, #74]	; 0x4a
    7768:	fa02 f303 	lsl.w	r3, r2, r3
    776c:	461a      	mov	r2, r3
    776e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7770:	635a      	str	r2, [r3, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1691

    if(cb->tcpcb_maxwnd < cb->tcpcb_sndwnd)
    7772:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7774:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    7776:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7778:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    777a:	429a      	cmp	r2, r3
    777c:	d203      	bcs.n	7786 <fnet_tcp_inputsk+0x466>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1692
        cb->tcpcb_maxwnd = cb->tcpcb_sndwnd;
    777e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7780:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    7782:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7784:	639a      	str	r2, [r3, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1695

    /* Main processing.*/
    switch(cb->tcpcb_connection_state)
    7786:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7788:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    778c:	3b01      	subs	r3, #1
    778e:	2b09      	cmp	r3, #9
    7790:	f200 81d4 	bhi.w	7b3c <fnet_tcp_inputsk+0x81c>
    7794:	a201      	add	r2, pc, #4	; (adr r2, 779c <fnet_tcp_inputsk+0x47c>)
    7796:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    779a:	bf00      	nop
    779c:	000077c5 	.word	0x000077c5
    77a0:	00007a1d 	.word	0x00007a1d
    77a4:	000078b9 	.word	0x000078b9
    77a8:	00007a9f 	.word	0x00007a9f
    77ac:	00007ab3 	.word	0x00007ab3
    77b0:	00007a9f 	.word	0x00007a9f
    77b4:	00007a9f 	.word	0x00007a9f
    77b8:	00007afb 	.word	0x00007afb
    77bc:	00007ae7 	.word	0x00007ae7
    77c0:	00007b27 	.word	0x00007b27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1698
    {
        case FNET_TCP_CS_SYN_SENT:
          cb->tcpcb_sndack = tcp_seq + 1; 
    77c4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    77c6:	1c5a      	adds	r2, r3, #1
    77c8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    77ca:	631a      	str	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1701

          /* Process the second segment of the open.*/
          if(sgmtype & FNET_TCP_SGT_ACK)
    77cc:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
    77d0:	f003 0310 	and.w	r3, r3, #16
    77d4:	2b00      	cmp	r3, #0
    77d6:	d040      	beq.n	785a <fnet_tcp_inputsk+0x53a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1703
          {
              cb->tcpcb_rcvack = tcp_ack;
    77d8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    77da:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    77dc:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1707

#if FNET_CFG_TCP_URGENT
              /* Initialize the urgent sequence number.*/
              cb->tcpcb_rcvurgseq = tcp_seq;
    77de:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    77e0:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    77e2:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1711
#endif /* FNET_CFG_TCP_URGENT */

              /* Receive the options.*/
              fnet_tcp_getopt(sk, insegment);
    77e4:	68bb      	ldr	r3, [r7, #8]
    77e6:	68f8      	ldr	r0, [r7, #12]
    77e8:	4619      	mov	r1, r3
    77ea:	f001 ffe9 	bl	97c0 <fnet_tcp_getopt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1712
              fnet_tcp_getsynopt(sk);
    77ee:	68f8      	ldr	r0, [r7, #12]
    77f0:	f002 f8ca 	bl	9988 <fnet_tcp_getsynopt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1715

              /* If MSS of another side 0, return.*/
              if(!cb->tcpcb_sndmss)
    77f4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    77f6:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    77fa:	2b00      	cmp	r3, #0
    77fc:	d10e      	bne.n	781c <fnet_tcp_inputsk+0x4fc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1717
              {
                  fnet_tcp_sendrst(&sk->options, insegment, dest_addr, src_addr);
    77fe:	68fb      	ldr	r3, [r7, #12]
    7800:	f103 0264 	add.w	r2, r3, #100	; 0x64
    7804:	68bb      	ldr	r3, [r7, #8]
    7806:	4610      	mov	r0, r2
    7808:	4619      	mov	r1, r3
    780a:	683a      	ldr	r2, [r7, #0]
    780c:	687b      	ldr	r3, [r7, #4]
    780e:	f001 fe95 	bl	953c <fnet_tcp_sendrst>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1718
                  fnet_tcp_closesk(sk);
    7812:	68f8      	ldr	r0, [r7, #12]
    7814:	f002 f9b4 	bl	9b80 <fnet_tcp_closesk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1719
                  return FNET_TRUE;
    7818:	2301      	movs	r3, #1
    781a:	e19d      	b.n	7b58 <fnet_tcp_inputsk+0x838>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1723
              }

              /* Stop the timers.*/
              cb->tcpcb_timers.retransmission = FNET_TCP_TIMER_OFF;
    781c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    781e:	f04f 32ff 	mov.w	r2, #4294967295
    7822:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1724
              cb->tcpcb_timers.connection = FNET_TCP_TIMER_OFF;
    7824:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7826:	f04f 32ff 	mov.w	r2, #4294967295
    782a:	679a      	str	r2, [r3, #120]	; 0x78
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1727

              /* Send the acknowledgment (third segment of the open).*/
              fnet_tcp_sendack(sk);
    782c:	68f8      	ldr	r0, [r7, #12]
    782e:	f001 fe2b 	bl	9488 <fnet_tcp_sendack>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1730

              /* Change the states.*/
              cb->tcpcb_connection_state = FNET_TCP_CS_ESTABLISHED;
    7832:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7834:	2204      	movs	r2, #4
    7836:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1731
              sk->state = SS_CONNECTED;
    783a:	68fb      	ldr	r3, [r7, #12]
    783c:	2202      	movs	r2, #2
    783e:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1734

              /* Initialize the keepalive timer.*/
              if(sk->options.flags & SO_KEEPALIVE)
    7840:	68fb      	ldr	r3, [r7, #12]
    7842:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    7846:	f003 0302 	and.w	r3, r3, #2
    784a:	2b00      	cmp	r3, #0
    784c:	d004      	beq.n	7858 <fnet_tcp_inputsk+0x538>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1735
                cb->tcpcb_timers.keepalive = sk->options.tcp_opt.keep_idle;
    784e:	68fb      	ldr	r3, [r7, #12]
    7850:	6f1a      	ldr	r2, [r3, #112]	; 0x70
    7852:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7854:	675a      	str	r2, [r3, #116]	; 0x74
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1737

              break;
    7856:	e171      	b.n	7b3c <fnet_tcp_inputsk+0x81c>
    7858:	e170      	b.n	7b3c <fnet_tcp_inputsk+0x81c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1743
          }
          else
          /* Process the simultaneous open.*/
          {
              /* Reinitialize the retrasmission timer.*/
              cb->tcpcb_timers.retransmission = cb->tcpcb_rto;
    785a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    785c:	6d9a      	ldr	r2, [r3, #88]	; 0x58
    785e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7860:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1746

              /* Receive the options.*/
              fnet_tcp_getopt(sk, insegment);
    7862:	68bb      	ldr	r3, [r7, #8]
    7864:	68f8      	ldr	r0, [r7, #12]
    7866:	4619      	mov	r1, r3
    7868:	f001 ffaa 	bl	97c0 <fnet_tcp_getopt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1747
              fnet_tcp_getsynopt(sk);
    786c:	68f8      	ldr	r0, [r7, #12]
    786e:	f002 f88b 	bl	9988 <fnet_tcp_getsynopt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1750

              /* If MSS of another side 0, return.*/
              if(!cb->tcpcb_sndmss)
    7872:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7874:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    7878:	2b00      	cmp	r3, #0
    787a:	d10e      	bne.n	789a <fnet_tcp_inputsk+0x57a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1752
              {
                  fnet_tcp_sendrst(&sk->options, insegment, dest_addr, src_addr);
    787c:	68fb      	ldr	r3, [r7, #12]
    787e:	f103 0264 	add.w	r2, r3, #100	; 0x64
    7882:	68bb      	ldr	r3, [r7, #8]
    7884:	4610      	mov	r0, r2
    7886:	4619      	mov	r1, r3
    7888:	683a      	ldr	r2, [r7, #0]
    788a:	687b      	ldr	r3, [r7, #4]
    788c:	f001 fe56 	bl	953c <fnet_tcp_sendrst>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1753
                  fnet_tcp_closesk(sk);
    7890:	68f8      	ldr	r0, [r7, #12]
    7892:	f002 f975 	bl	9b80 <fnet_tcp_closesk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1754
                  return FNET_TRUE;
    7896:	2301      	movs	r3, #1
    7898:	e15e      	b.n	7b58 <fnet_tcp_inputsk+0x838>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1759
              }

#if FNET_CFG_TCP_URGENT
              /* Initialize the urgent sequence number.*/
              cb->tcpcb_rcvurgseq = tcp_seq;
    789a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    789c:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    789e:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1763
#endif /* FNET_CFG_TCP_URGENT */

              /* Change the states.*/
              cb->tcpcb_connection_state = FNET_TCP_CS_SYN_RCVD;
    78a0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    78a2:	2202      	movs	r2, #2
    78a4:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1764
              cb->tcpcb_prev_connection_state = FNET_TCP_CS_SYN_SENT;
    78a8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    78aa:	2201      	movs	r2, #1
    78ac:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1767

              /* Send acknowledgment.*/
              fnet_tcp_sendack(sk);
    78b0:	68f8      	ldr	r0, [r7, #12]
    78b2:	f001 fde9 	bl	9488 <fnet_tcp_sendack>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1768
              break;
    78b6:	e141      	b.n	7b3c <fnet_tcp_inputsk+0x81c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1775

        /* Process the first segment.*/       
        case FNET_TCP_CS_LISTENING:

            /* If socket can't be created, return.*/
            if(sk->partial_con_len + sk->incoming_con_len >= sk->con_limit)
    78b8:	68fb      	ldr	r3, [r7, #12]
    78ba:	6a1a      	ldr	r2, [r3, #32]
    78bc:	68fb      	ldr	r3, [r7, #12]
    78be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    78c0:	441a      	add	r2, r3
    78c2:	68fb      	ldr	r3, [r7, #12]
    78c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    78c6:	429a      	cmp	r2, r3
    78c8:	db0c      	blt.n	78e4 <fnet_tcp_inputsk+0x5c4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1777
            {
                fnet_memset_zero(&sk->foreign_addr, sizeof(sk->foreign_addr));
    78ca:	68fb      	ldr	r3, [r7, #12]
    78cc:	3354      	adds	r3, #84	; 0x54
    78ce:	4618      	mov	r0, r3
    78d0:	2108      	movs	r1, #8
    78d2:	f7fe f99b 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1778
                cb->tcpcb_sndwnd = 0;
    78d6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    78d8:	2200      	movs	r2, #0
    78da:	635a      	str	r2, [r3, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1779
                cb->tcpcb_maxwnd = 0;
    78dc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    78de:	2200      	movs	r2, #0
    78e0:	639a      	str	r2, [r3, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1780
                break;
    78e2:	e12b      	b.n	7b3c <fnet_tcp_inputsk+0x81c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1784
            }

            /* Create the socket.*/
            psk = fnet_socket_copy(sk);
    78e4:	68f8      	ldr	r0, [r7, #12]
    78e6:	f7fc fe51 	bl	458c <fnet_socket_copy>
    78ea:	62b8      	str	r0, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1786

            fnet_memset_zero(&sk->foreign_addr, sizeof(sk->foreign_addr));         
    78ec:	68fb      	ldr	r3, [r7, #12]
    78ee:	3354      	adds	r3, #84	; 0x54
    78f0:	4618      	mov	r0, r3
    78f2:	2108      	movs	r1, #8
    78f4:	f7fe f98a 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1789

            /* Check the memory allocation.*/
            if(!psk)
    78f8:	6abb      	ldr	r3, [r7, #40]	; 0x28
    78fa:	2b00      	cmp	r3, #0
    78fc:	d106      	bne.n	790c <fnet_tcp_inputsk+0x5ec>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1791
            {
                cb->tcpcb_sndwnd = 0;
    78fe:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7900:	2200      	movs	r2, #0
    7902:	635a      	str	r2, [r3, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1792
                cb->tcpcb_maxwnd = 0;
    7904:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7906:	2200      	movs	r2, #0
    7908:	639a      	str	r2, [r3, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1793
                break;
    790a:	e117      	b.n	7b3c <fnet_tcp_inputsk+0x81c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1797
            }

            /* Set the local address.*/
            psk->local_addr = *dest_addr;
    790c:	6abb      	ldr	r3, [r7, #40]	; 0x28
    790e:	683a      	ldr	r2, [r7, #0]
    7910:	335c      	adds	r3, #92	; 0x5c
    7912:	6810      	ldr	r0, [r2, #0]
    7914:	6851      	ldr	r1, [r2, #4]
    7916:	c303      	stmia	r3!, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1800

            /* Create the control block.*/
            pcb = (fnet_tcp_control_t *)fnet_malloc(sizeof(fnet_tcp_control_t));
    7918:	2094      	movs	r0, #148	; 0x94
    791a:	f7fb fc79 	bl	3210 <fnet_malloc>
    791e:	6278      	str	r0, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1803

            /* Check the memory allocation.*/
            if(!pcb)
    7920:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    7922:	2b00      	cmp	r3, #0
    7924:	d109      	bne.n	793a <fnet_tcp_inputsk+0x61a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1805
            {
                fnet_free(psk);
    7926:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    7928:	f7fb fc62 	bl	31f0 <fnet_free>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1806
                cb->tcpcb_sndwnd = 0;
    792c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    792e:	2200      	movs	r2, #0
    7930:	635a      	str	r2, [r3, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1807
                cb->tcpcb_maxwnd = 0;
    7932:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7934:	2200      	movs	r2, #0
    7936:	639a      	str	r2, [r3, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1808
                break;
    7938:	e100      	b.n	7b3c <fnet_tcp_inputsk+0x81c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1812
            }

            /* Initialize the pointer.*/
            psk->protocol_control = (void *)pcb;
    793a:	6abb      	ldr	r3, [r7, #40]	; 0x28
    793c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    793e:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1813
            fnet_tcp_initconnection(psk);
    7940:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    7942:	f7ff fc73 	bl	722c <fnet_tcp_initconnection>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1816

            /* Copy the control block parameters.*/
            pcb->tcpcb_sndwnd = cb->tcpcb_sndwnd;
    7946:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7948:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    794a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    794c:	635a      	str	r2, [r3, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1817
            pcb->tcpcb_maxwnd = cb->tcpcb_maxwnd;
    794e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7950:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    7952:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    7954:	639a      	str	r2, [r3, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1818
            cb->tcpcb_sndwnd = 0;
    7956:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7958:	2200      	movs	r2, #0
    795a:	635a      	str	r2, [r3, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1819
            cb->tcpcb_maxwnd = 0;
    795c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    795e:	2200      	movs	r2, #0
    7960:	639a      	str	r2, [r3, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1822

            /* Add the new socket to the partial list.*/
            fnet_tcp_addpartialsk(sk, psk);
    7962:	68f8      	ldr	r0, [r7, #12]
    7964:	6ab9      	ldr	r1, [r7, #40]	; 0x28
    7966:	f002 f8d5 	bl	9b14 <fnet_tcp_addpartialsk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1825

            /* Initialize the parameters of the control block.*/
            pcb->tcpcb_sndack = tcp_seq + 1;
    796a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    796c:	1c5a      	adds	r2, r3, #1
    796e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    7970:	631a      	str	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1826
            pcb->tcpcb_sndseq = fnet_tcp_isntime;
    7972:	4b7b      	ldr	r3, [pc, #492]	; (7b60 <fnet_tcp_inputsk+0x840>)
    7974:	681a      	ldr	r2, [r3, #0]
    7976:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    7978:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1827
            pcb->tcpcb_maxrcvack = fnet_tcp_isntime + 1;
    797a:	4b79      	ldr	r3, [pc, #484]	; (7b60 <fnet_tcp_inputsk+0x840>)
    797c:	681b      	ldr	r3, [r3, #0]
    797e:	1c5a      	adds	r2, r3, #1
    7980:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    7982:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1831
          

#if FNET_CFG_TCP_URGENT  
            pcb->tcpcb_sndurgseq = pcb->tcpcb_sndseq;        
    7984:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    7986:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    7988:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    798a:	64da      	str	r2, [r3, #76]	; 0x4c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1832
            pcb->tcpcb_rcvurgseq = tcp_seq;
    798c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    798e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    7990:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1836
#endif /* FNET_CFG_TCP_URGENT */

            /* Change the states.*/
            psk->state = SS_CONNECTING;
    7992:	6abb      	ldr	r3, [r7, #40]	; 0x28
    7994:	2201      	movs	r2, #1
    7996:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1837
            pcb->tcpcb_prev_connection_state = FNET_TCP_CS_LISTENING;
    7998:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    799a:	2203      	movs	r2, #3
    799c:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1838
            pcb->tcpcb_connection_state = FNET_TCP_CS_SYN_RCVD;
    79a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    79a2:	2202      	movs	r2, #2
    79a4:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1841

            /* Receive the options.*/
            fnet_tcp_getopt(psk, insegment);
    79a8:	68bb      	ldr	r3, [r7, #8]
    79aa:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    79ac:	4619      	mov	r1, r3
    79ae:	f001 ff07 	bl	97c0 <fnet_tcp_getopt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1842
            fnet_tcp_getsynopt(psk);
    79b2:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    79b4:	f001 ffe8 	bl	9988 <fnet_tcp_getsynopt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1845

            /* If MSS of another side 0, return.*/
            if(!pcb->tcpcb_sndmss)
    79b8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    79ba:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    79be:	2b00      	cmp	r3, #0
    79c0:	d10d      	bne.n	79de <fnet_tcp_inputsk+0x6be>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1847
            {
                fnet_tcp_sendrst(&sk->options, insegment, dest_addr, src_addr);
    79c2:	68fb      	ldr	r3, [r7, #12]
    79c4:	f103 0264 	add.w	r2, r3, #100	; 0x64
    79c8:	68bb      	ldr	r3, [r7, #8]
    79ca:	4610      	mov	r0, r2
    79cc:	4619      	mov	r1, r3
    79ce:	683a      	ldr	r2, [r7, #0]
    79d0:	687b      	ldr	r3, [r7, #4]
    79d2:	f001 fdb3 	bl	953c <fnet_tcp_sendrst>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1848
                fnet_tcp_closesk(psk);
    79d6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    79d8:	f002 f8d2 	bl	9b80 <fnet_tcp_closesk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1849
                break;
    79dc:	e0ae      	b.n	7b3c <fnet_tcp_inputsk+0x81c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1853
            }

            /* Set the options.*/
            fnet_tcp_setsynopt(psk, options, &optionlen);
    79de:	f107 021c 	add.w	r2, r7, #28
    79e2:	f107 031b 	add.w	r3, r7, #27
    79e6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    79e8:	4611      	mov	r1, r2
    79ea:	461a      	mov	r2, r3
    79ec:	f001 ff78 	bl	98e0 <fnet_tcp_setsynopt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1856

            /* Send SYN segment.*/
            fnet_tcp_sendheadseg(psk, FNET_TCP_SGT_SYN | FNET_TCP_SGT_ACK, options, optionlen);
    79f0:	7efb      	ldrb	r3, [r7, #27]
    79f2:	f107 021c 	add.w	r2, r7, #28
    79f6:	b25b      	sxtb	r3, r3
    79f8:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    79fa:	2112      	movs	r1, #18
    79fc:	f001 fb22 	bl	9044 <fnet_tcp_sendheadseg>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1859

            /* Increase ISN (Initial Sequence Number).*/
            fnet_tcp_isntime += FNET_TCP_STEPISN;
    7a00:	4b57      	ldr	r3, [pc, #348]	; (7b60 <fnet_tcp_inputsk+0x840>)
    7a02:	681b      	ldr	r3, [r3, #0]
    7a04:	f503 427a 	add.w	r2, r3, #64000	; 0xfa00
    7a08:	4b55      	ldr	r3, [pc, #340]	; (7b60 <fnet_tcp_inputsk+0x840>)
    7a0a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1862

            /* Initialization the connection timer.*/
            pcb->tcpcb_timers.connection = FNET_TCP_ABORT_INTERVAL_CON;
    7a0c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    7a0e:	221e      	movs	r2, #30
    7a10:	679a      	str	r2, [r3, #120]	; 0x78
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1863
            pcb->tcpcb_timers.retransmission = pcb->tcpcb_rto;
    7a12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    7a14:	6d9a      	ldr	r2, [r3, #88]	; 0x58
    7a16:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    7a18:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1864
            break;
    7a1a:	e08f      	b.n	7b3c <fnet_tcp_inputsk+0x81c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1869

        case FNET_TCP_CS_SYN_RCVD:

          /* Change the states.*/
          cb->tcpcb_connection_state = FNET_TCP_CS_ESTABLISHED;
    7a1c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7a1e:	2204      	movs	r2, #4
    7a20:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1870
          sk->state = SS_CONNECTED;
    7a24:	68fb      	ldr	r3, [r7, #12]
    7a26:	2202      	movs	r2, #2
    7a28:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1873

          /* Stop the connection and retransmission timers.*/
          cb->tcpcb_timers.connection = FNET_TCP_TIMER_OFF;
    7a2a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7a2c:	f04f 32ff 	mov.w	r2, #4294967295
    7a30:	679a      	str	r2, [r3, #120]	; 0x78
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1874
          cb->tcpcb_timers.retransmission = FNET_TCP_TIMER_OFF;
    7a32:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7a34:	f04f 32ff 	mov.w	r2, #4294967295
    7a38:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1876

          cb->tcpcb_rcvack = tcp_ack;
    7a3a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7a3c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    7a3e:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1880

          /* If previous state is FNET_TCP_CS_LISTENING, process the acknowledgment (third segment of the open)
           * Otherwise, process the SYN segment.*/
          if(cb->tcpcb_prev_connection_state == FNET_TCP_CS_LISTENING)
    7a40:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7a42:	f893 308d 	ldrb.w	r3, [r3, #141]	; 0x8d
    7a46:	2b03      	cmp	r3, #3
    7a48:	d10c      	bne.n	7a64 <fnet_tcp_inputsk+0x744>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1883
          {
              /* Add the partial socket to the list of incoming socket.*/
              fnet_tcp_movesk2incominglist(sk);
    7a4a:	68f8      	ldr	r0, [r7, #12]
    7a4c:	f002 f878 	bl	9b40 <fnet_tcp_movesk2incominglist>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1886

              /* Proceed the processing.*/
              result = fnet_tcp_dataprocess(sk, insegment, &ackparam);
    7a50:	68ba      	ldr	r2, [r7, #8]
    7a52:	f107 0314 	add.w	r3, r7, #20
    7a56:	68f8      	ldr	r0, [r7, #12]
    7a58:	4611      	mov	r1, r2
    7a5a:	461a      	mov	r2, r3
    7a5c:	f000 f882 	bl	7b64 <fnet_tcp_dataprocess>
    7a60:	6438      	str	r0, [r7, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1887
              break;
    7a62:	e06b      	b.n	7b3c <fnet_tcp_inputsk+0x81c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1891
          }
          else
          {
              if(!(sgmtype & FNET_TCP_SGT_SYN))
    7a64:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
    7a68:	f003 0302 	and.w	r3, r3, #2
    7a6c:	2b00      	cmp	r3, #0
    7a6e:	d109      	bne.n	7a84 <fnet_tcp_inputsk+0x764>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1894
              {
                  /* Proseed the processing.*/
                  result = fnet_tcp_dataprocess(sk, insegment, &ackparam);
    7a70:	68ba      	ldr	r2, [r7, #8]
    7a72:	f107 0314 	add.w	r3, r7, #20
    7a76:	68f8      	ldr	r0, [r7, #12]
    7a78:	4611      	mov	r1, r2
    7a7a:	461a      	mov	r2, r3
    7a7c:	f000 f872 	bl	7b64 <fnet_tcp_dataprocess>
    7a80:	6438      	str	r0, [r7, #64]	; 0x40
    7a82:	e00b      	b.n	7a9c <fnet_tcp_inputsk+0x77c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1899
              }
              else
              {
                  /* Initialize the keepalive timer.*/
                  if(sk->options.flags & SO_KEEPALIVE)
    7a84:	68fb      	ldr	r3, [r7, #12]
    7a86:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    7a8a:	f003 0302 	and.w	r3, r3, #2
    7a8e:	2b00      	cmp	r3, #0
    7a90:	d004      	beq.n	7a9c <fnet_tcp_inputsk+0x77c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1900
                      cb->tcpcb_timers.keepalive = sk->options.tcp_opt.keep_idle;//FNET_TCP_KEEP_ALIVE_TIMEO;
    7a92:	68fb      	ldr	r3, [r7, #12]
    7a94:	6f1a      	ldr	r2, [r3, #112]	; 0x70
    7a96:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7a98:	675a      	str	r2, [r3, #116]	; 0x74
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1903
              }

              break;
    7a9a:	e04f      	b.n	7b3c <fnet_tcp_inputsk+0x81c>
    7a9c:	e04e      	b.n	7b3c <fnet_tcp_inputsk+0x81c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1911
        case FNET_TCP_CS_FIN_WAIT_2:
        case FNET_TCP_CS_CLOSE_WAIT:
        case FNET_TCP_CS_ESTABLISHED:

          /* Proseed the processing.*/
          result = fnet_tcp_dataprocess(sk, insegment, &ackparam);
    7a9e:	68ba      	ldr	r2, [r7, #8]
    7aa0:	f107 0314 	add.w	r3, r7, #20
    7aa4:	68f8      	ldr	r0, [r7, #12]
    7aa6:	4611      	mov	r1, r2
    7aa8:	461a      	mov	r2, r3
    7aaa:	f000 f85b 	bl	7b64 <fnet_tcp_dataprocess>
    7aae:	6438      	str	r0, [r7, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1912
          break;
    7ab0:	e044      	b.n	7b3c <fnet_tcp_inputsk+0x81c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1917

        case FNET_TCP_CS_FIN_WAIT_1:

          /* Proseed the processing.*/
          result = fnet_tcp_dataprocess(sk, insegment, &ackparam);
    7ab2:	68ba      	ldr	r2, [r7, #8]
    7ab4:	f107 0314 	add.w	r3, r7, #20
    7ab8:	68f8      	ldr	r0, [r7, #12]
    7aba:	4611      	mov	r1, r2
    7abc:	461a      	mov	r2, r3
    7abe:	f000 f851 	bl	7b64 <fnet_tcp_dataprocess>
    7ac2:	6438      	str	r0, [r7, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1919

          if(cb->tcpcb_sndseq == cb->tcpcb_rcvack && cb->tcpcb_connection_state == FNET_TCP_CS_FIN_WAIT_1)
    7ac4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7ac6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    7ac8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7aca:	68db      	ldr	r3, [r3, #12]
    7acc:	429a      	cmp	r2, r3
    7ace:	d109      	bne.n	7ae4 <fnet_tcp_inputsk+0x7c4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1919 (discriminator 1)
    7ad0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7ad2:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    7ad6:	2b05      	cmp	r3, #5
    7ad8:	d104      	bne.n	7ae4 <fnet_tcp_inputsk+0x7c4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1921
              /* Change the state.*/
              cb->tcpcb_connection_state = FNET_TCP_CS_FIN_WAIT_2;
    7ada:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7adc:	2206      	movs	r2, #6
    7ade:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1923

          break;
    7ae2:	e02b      	b.n	7b3c <fnet_tcp_inputsk+0x81c>
    7ae4:	e02a      	b.n	7b3c <fnet_tcp_inputsk+0x81c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1926

        case FNET_TCP_CS_LAST_ACK:
          if(tcp_ack == cb->tcpcb_sndseq) 
    7ae6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7ae8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    7aea:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    7aec:	429a      	cmp	r2, r3
    7aee:	d102      	bne.n	7af6 <fnet_tcp_inputsk+0x7d6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1928
              /* Close the socket.*/
              fnet_tcp_closesk(sk);
    7af0:	68f8      	ldr	r0, [r7, #12]
    7af2:	f002 f845 	bl	9b80 <fnet_tcp_closesk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1930

          return FNET_TRUE;
    7af6:	2301      	movs	r3, #1
    7af8:	e02e      	b.n	7b58 <fnet_tcp_inputsk+0x838>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1933

        case FNET_TCP_CS_CLOSING:
          if(tcp_ack == cb->tcpcb_sndseq) 
    7afa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7afc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    7afe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    7b00:	429a      	cmp	r2, r3
    7b02:	d10f      	bne.n	7b24 <fnet_tcp_inputsk+0x804>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1935
          {
              cb->tcpcb_connection_state = FNET_TCP_CS_TIME_WAIT;
    7b04:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7b06:	220a      	movs	r2, #10
    7b08:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1937
              /* Set the  timeout of the TIME_WAIT state.*/
              cb->tcpcb_timers.connection = FNET_TCP_TIME_WAIT;
    7b0c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7b0e:	2230      	movs	r2, #48	; 0x30
    7b10:	679a      	str	r2, [r3, #120]	; 0x78
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1938
              cb->tcpcb_timers.retransmission = FNET_TCP_TIMER_OFF;
    7b12:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7b14:	f04f 32ff 	mov.w	r2, #4294967295
    7b18:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1939
              cb->tcpcb_timers.keepalive = FNET_TCP_TIMER_OFF;
    7b1a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    7b1c:	f04f 32ff 	mov.w	r2, #4294967295
    7b20:	675a      	str	r2, [r3, #116]	; 0x74
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1942
          }

          break;
    7b22:	e00b      	b.n	7b3c <fnet_tcp_inputsk+0x81c>
    7b24:	e00a      	b.n	7b3c <fnet_tcp_inputsk+0x81c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1945

        case FNET_TCP_CS_TIME_WAIT:
          fnet_tcp_sendrst(&sk->options, insegment, dest_addr, src_addr);
    7b26:	68fb      	ldr	r3, [r7, #12]
    7b28:	f103 0264 	add.w	r2, r3, #100	; 0x64
    7b2c:	68bb      	ldr	r3, [r7, #8]
    7b2e:	4610      	mov	r0, r2
    7b30:	4619      	mov	r1, r3
    7b32:	683a      	ldr	r2, [r7, #0]
    7b34:	687b      	ldr	r3, [r7, #4]
    7b36:	f001 fd01 	bl	953c <fnet_tcp_sendrst>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1946
          break;
    7b3a:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1950
    }

    /* If the input buffer is closed, delete the input data.*/
    if(sk->receive_buffer.is_shutdown && sk->receive_buffer.count)
    7b3c:	68fb      	ldr	r3, [r7, #12]
    7b3e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    7b40:	2b00      	cmp	r3, #0
    7b42:	d008      	beq.n	7b56 <fnet_tcp_inputsk+0x836>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1950 (discriminator 1)
    7b44:	68fb      	ldr	r3, [r7, #12]
    7b46:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    7b48:	2b00      	cmp	r3, #0
    7b4a:	d004      	beq.n	7b56 <fnet_tcp_inputsk+0x836>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1951
        fnet_socket_buffer_release(&sk->receive_buffer);
    7b4c:	68fb      	ldr	r3, [r7, #12]
    7b4e:	3334      	adds	r3, #52	; 0x34
    7b50:	4618      	mov	r0, r3
    7b52:	f7fd fc03 	bl	535c <fnet_socket_buffer_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1953
    
    return result;
    7b56:	6c3b      	ldr	r3, [r7, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1954
}
    7b58:	4618      	mov	r0, r3
    7b5a:	374c      	adds	r7, #76	; 0x4c
    7b5c:	46bd      	mov	sp, r7
    7b5e:	bd90      	pop	{r4, r7, pc}
    7b60:	10000054 	.word	0x10000054

00007b64 <fnet_tcp_dataprocess>:
fnet_tcp_dataprocess():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1965
*               
* RETURNS: TRUE if the input segment must be deleted. Otherwise
*          this function returns FALSE.             
*************************************************************************/
static int fnet_tcp_dataprocess( fnet_socket_t *sk, fnet_netbuf_t *insegment, int *ackparam )
{
    7b64:	b580      	push	{r7, lr}
    7b66:	b08a      	sub	sp, #40	; 0x28
    7b68:	af00      	add	r7, sp, #0
    7b6a:	60f8      	str	r0, [r7, #12]
    7b6c:	60b9      	str	r1, [r7, #8]
    7b6e:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1966
    fnet_tcp_control_t  *cb = (fnet_tcp_control_t *)sk->protocol_control;       
    7b70:	68fb      	ldr	r3, [r7, #12]
    7b72:	699b      	ldr	r3, [r3, #24]
    7b74:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1969
    long                size;                                     
    short               err;
    int                 delflag = 1;
    7b76:	2301      	movs	r3, #1
    7b78:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1971
    unsigned long       seq;
    unsigned long       tcp_ack = fnet_ntohl(FNET_TCP_ACK(insegment));
    7b7a:	68bb      	ldr	r3, [r7, #8]
    7b7c:	68db      	ldr	r3, [r3, #12]
    7b7e:	3308      	adds	r3, #8
    7b80:	681b      	ldr	r3, [r3, #0]
    7b82:	4618      	mov	r0, r3
    7b84:	f007 fce2 	bl	f54c <fnet_htonl>
    7b88:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1974

    /* Reinitialize the keepalive timer.*/
    if(sk->options.flags & SO_KEEPALIVE)
    7b8a:	68fb      	ldr	r3, [r7, #12]
    7b8c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    7b90:	f003 0302 	and.w	r3, r3, #2
    7b94:	2b00      	cmp	r3, #0
    7b96:	d004      	beq.n	7ba2 <fnet_tcp_dataprocess+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1975
        cb->tcpcb_timers.keepalive = sk->options.tcp_opt.keep_idle;
    7b98:	68fb      	ldr	r3, [r7, #12]
    7b9a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
    7b9c:	69bb      	ldr	r3, [r7, #24]
    7b9e:	675a      	str	r2, [r3, #116]	; 0x74
    7ba0:	e003      	b.n	7baa <fnet_tcp_dataprocess+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1977
    else
        cb->tcpcb_timers.keepalive = FNET_TCP_TIMER_OFF;
    7ba2:	69bb      	ldr	r3, [r7, #24]
    7ba4:	f04f 32ff 	mov.w	r2, #4294967295
    7ba8:	675a      	str	r2, [r3, #116]	; 0x74
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1980

    /* Reset the abort timer.*/
    cb->tcpcb_timers.abort = FNET_TCP_TIMER_OFF;
    7baa:	69bb      	ldr	r3, [r7, #24]
    7bac:	f04f 32ff 	mov.w	r2, #4294967295
    7bb0:	671a      	str	r2, [r3, #112]	; 0x70
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1983

    /* If acknowledgment is repeated.*/
    if(cb->tcpcb_rcvack == tcp_ack)
    7bb2:	69bb      	ldr	r3, [r7, #24]
    7bb4:	68da      	ldr	r2, [r3, #12]
    7bb6:	697b      	ldr	r3, [r7, #20]
    7bb8:	429a      	cmp	r2, r3
    7bba:	d160      	bne.n	7c7e <fnet_tcp_dataprocess+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1986
    {
        /* If unacknowledged data is present.*/
        if(cb->tcpcb_sndseq != cb->tcpcb_rcvack && sk->send_buffer.count)
    7bbc:	69bb      	ldr	r3, [r7, #24]
    7bbe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    7bc0:	69bb      	ldr	r3, [r7, #24]
    7bc2:	68db      	ldr	r3, [r3, #12]
    7bc4:	429a      	cmp	r2, r3
    7bc6:	f000 815e 	beq.w	7e86 <fnet_tcp_dataprocess+0x322>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1986 (discriminator 1)
    7bca:	68fb      	ldr	r3, [r7, #12]
    7bcc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    7bce:	2b00      	cmp	r3, #0
    7bd0:	f000 8159 	beq.w	7e86 <fnet_tcp_dataprocess+0x322>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1989
        {
            /* Increase the timer of rpeated acknowledgments.*/
            cb->tcpcb_fastretrcounter++;
    7bd4:	69bb      	ldr	r3, [r7, #24]
    7bd6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    7bd8:	1c5a      	adds	r2, r3, #1
    7bda:	69bb      	ldr	r3, [r7, #24]
    7bdc:	655a      	str	r2, [r3, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1993

            /* If the number of repeated acknowledgments is FNET_TCP_NUMBER_FOR_FAST_RET,
             * process the fast retransmission.*/
            if(cb->tcpcb_fastretrcounter == FNET_TCP_NUMBER_FOR_FAST_RET)
    7bde:	69bb      	ldr	r3, [r7, #24]
    7be0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    7be2:	2b03      	cmp	r3, #3
    7be4:	f040 814f 	bne.w	7e86 <fnet_tcp_dataprocess+0x322>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1996
            {
                /* Increase the timer of rpeated acknowledgments.*/  
                cb->tcpcb_fastretrcounter++;
    7be8:	69bb      	ldr	r3, [r7, #24]
    7bea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    7bec:	1c5a      	adds	r2, r3, #1
    7bee:	69bb      	ldr	r3, [r7, #24]
    7bf0:	655a      	str	r2, [r3, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:1999

                /* Recalculate the congestion window and slow start threshold values.*/
                if(cb->tcpcb_cwnd > cb->tcpcb_sndwnd)
    7bf2:	69bb      	ldr	r3, [r7, #24]
    7bf4:	6bda      	ldr	r2, [r3, #60]	; 0x3c
    7bf6:	69bb      	ldr	r3, [r7, #24]
    7bf8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    7bfa:	429a      	cmp	r2, r3
    7bfc:	d905      	bls.n	7c0a <fnet_tcp_dataprocess+0xa6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2000
                    cb->tcpcb_ssthresh = cb->tcpcb_sndwnd >> 1;
    7bfe:	69bb      	ldr	r3, [r7, #24]
    7c00:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    7c02:	085a      	lsrs	r2, r3, #1
    7c04:	69bb      	ldr	r3, [r7, #24]
    7c06:	645a      	str	r2, [r3, #68]	; 0x44
    7c08:	e004      	b.n	7c14 <fnet_tcp_dataprocess+0xb0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2002
                else
                    cb->tcpcb_ssthresh = cb->tcpcb_cwnd >> 1;
    7c0a:	69bb      	ldr	r3, [r7, #24]
    7c0c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    7c0e:	085a      	lsrs	r2, r3, #1
    7c10:	69bb      	ldr	r3, [r7, #24]
    7c12:	645a      	str	r2, [r3, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2004

                if(cb->tcpcb_ssthresh < (cb->tcpcb_sndmss << 1))
    7c14:	69bb      	ldr	r3, [r7, #24]
    7c16:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    7c18:	69bb      	ldr	r3, [r7, #24]
    7c1a:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    7c1e:	005b      	lsls	r3, r3, #1
    7c20:	429a      	cmp	r2, r3
    7c22:	d206      	bcs.n	7c32 <fnet_tcp_dataprocess+0xce>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2005
                    cb->tcpcb_ssthresh = (unsigned long)(cb->tcpcb_sndmss << 1);
    7c24:	69bb      	ldr	r3, [r7, #24]
    7c26:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    7c2a:	005b      	lsls	r3, r3, #1
    7c2c:	461a      	mov	r2, r3
    7c2e:	69bb      	ldr	r3, [r7, #24]
    7c30:	645a      	str	r2, [r3, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2007

                cb->tcpcb_cwnd = cb->tcpcb_ssthresh;
    7c32:	69bb      	ldr	r3, [r7, #24]
    7c34:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    7c36:	69bb      	ldr	r3, [r7, #24]
    7c38:	63da      	str	r2, [r3, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2010

                /* Retransmit the segment.*/
                seq = cb->tcpcb_sndseq;
    7c3a:	69bb      	ldr	r3, [r7, #24]
    7c3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    7c3e:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2011
                cb->tcpcb_sndseq = cb->tcpcb_rcvack;
    7c40:	69bb      	ldr	r3, [r7, #24]
    7c42:	68da      	ldr	r2, [r3, #12]
    7c44:	69bb      	ldr	r3, [r7, #24]
    7c46:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2012
                fnet_tcp_senddataseg(sk, 0, 0, cb->tcpcb_sndmss);
    7c48:	69bb      	ldr	r3, [r7, #24]
    7c4a:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    7c4e:	68f8      	ldr	r0, [r7, #12]
    7c50:	2100      	movs	r1, #0
    7c52:	2200      	movs	r2, #0
    7c54:	f001 fad6 	bl	9204 <fnet_tcp_senddataseg>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2013
                cb->tcpcb_sndseq = seq;
    7c58:	69bb      	ldr	r3, [r7, #24]
    7c5a:	693a      	ldr	r2, [r7, #16]
    7c5c:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2016

                /* Acknowledgment is sent in retransmited segment.*/
                *ackparam |= FNET_TCP_AP_NO_SENDING;
    7c5e:	687b      	ldr	r3, [r7, #4]
    7c60:	681b      	ldr	r3, [r3, #0]
    7c62:	f043 0201 	orr.w	r2, r3, #1
    7c66:	687b      	ldr	r3, [r7, #4]
    7c68:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2019

                /* Round trip time can't be measured in this case.*/
                cb->tcpcb_timers.round_trip = FNET_TCP_TIMER_OFF;
    7c6a:	69bb      	ldr	r3, [r7, #24]
    7c6c:	f04f 32ff 	mov.w	r2, #4294967295
    7c70:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2020
                cb->tcpcb_timing_state = TCP_TS_SEGMENT_LOST;
    7c74:	69bb      	ldr	r3, [r7, #24]
    7c76:	2202      	movs	r2, #2
    7c78:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
    7c7c:	e103      	b.n	7e86 <fnet_tcp_dataprocess+0x322>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2027
        }
    }
    else
    {
        /* Reset the counter of repeated acknowledgments.*/
        cb->tcpcb_fastretrcounter = 0;
    7c7e:	69bb      	ldr	r3, [r7, #24]
    7c80:	2200      	movs	r2, #0
    7c82:	655a      	str	r2, [r3, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2030

        /* Recalculate the congestion window and slow start threshold values.*/
        size = (long)fnet_tcp_getsize(cb->tcpcb_rcvack, tcp_ack);
    7c84:	69bb      	ldr	r3, [r7, #24]
    7c86:	68db      	ldr	r3, [r3, #12]
    7c88:	4618      	mov	r0, r3
    7c8a:	6979      	ldr	r1, [r7, #20]
    7c8c:	f002 f840 	bl	9d10 <fnet_tcp_getsize>
    7c90:	4603      	mov	r3, r0
    7c92:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2032

        if(size > sk->send_buffer.count)
    7c94:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    7c96:	68fb      	ldr	r3, [r7, #12]
    7c98:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    7c9a:	429a      	cmp	r2, r3
    7c9c:	d902      	bls.n	7ca4 <fnet_tcp_dataprocess+0x140>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2033
            size = (long)sk->send_buffer.count;
    7c9e:	68fb      	ldr	r3, [r7, #12]
    7ca0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    7ca2:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2035

        if(cb->tcpcb_cwnd < FNET_TCP_MAX_BUFFER)
    7ca4:	69bb      	ldr	r3, [r7, #24]
    7ca6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
    7ca8:	4b81      	ldr	r3, [pc, #516]	; (7eb0 <fnet_tcp_dataprocess+0x34c>)
    7caa:	429a      	cmp	r2, r3
    7cac:	d840      	bhi.n	7d30 <fnet_tcp_dataprocess+0x1cc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2037
        {
            if(cb->tcpcb_cwnd > cb->tcpcb_ssthresh)
    7cae:	69bb      	ldr	r3, [r7, #24]
    7cb0:	6bda      	ldr	r2, [r3, #60]	; 0x3c
    7cb2:	69bb      	ldr	r3, [r7, #24]
    7cb4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    7cb6:	429a      	cmp	r2, r3
    7cb8:	d906      	bls.n	7cc8 <fnet_tcp_dataprocess+0x164>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2040
            {
                /* Congestion avoidance mode.*/
                cb->tcpcb_pcount += size;
    7cba:	69bb      	ldr	r3, [r7, #24]
    7cbc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    7cbe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    7cc0:	441a      	add	r2, r3
    7cc2:	69bb      	ldr	r3, [r7, #24]
    7cc4:	641a      	str	r2, [r3, #64]	; 0x40
    7cc6:	e01e      	b.n	7d06 <fnet_tcp_dataprocess+0x1a2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2045
            }
            else
            {
                /* Slow start mode.*/
                if(cb->tcpcb_cwnd + size > cb->tcpcb_ssthresh)
    7cc8:	69bb      	ldr	r3, [r7, #24]
    7cca:	6bda      	ldr	r2, [r3, #60]	; 0x3c
    7ccc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    7cce:	441a      	add	r2, r3
    7cd0:	69bb      	ldr	r3, [r7, #24]
    7cd2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    7cd4:	429a      	cmp	r2, r3
    7cd6:	d910      	bls.n	7cfa <fnet_tcp_dataprocess+0x196>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2047
                {
                    cb->tcpcb_pcount = cb->tcpcb_pcount + cb->tcpcb_cwnd + size - cb->tcpcb_ssthresh;
    7cd8:	69bb      	ldr	r3, [r7, #24]
    7cda:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    7cdc:	69bb      	ldr	r3, [r7, #24]
    7cde:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    7ce0:	441a      	add	r2, r3
    7ce2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    7ce4:	441a      	add	r2, r3
    7ce6:	69bb      	ldr	r3, [r7, #24]
    7ce8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    7cea:	1ad2      	subs	r2, r2, r3
    7cec:	69bb      	ldr	r3, [r7, #24]
    7cee:	641a      	str	r2, [r3, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2048
                    cb->tcpcb_cwnd = cb->tcpcb_ssthresh;
    7cf0:	69bb      	ldr	r3, [r7, #24]
    7cf2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    7cf4:	69bb      	ldr	r3, [r7, #24]
    7cf6:	63da      	str	r2, [r3, #60]	; 0x3c
    7cf8:	e005      	b.n	7d06 <fnet_tcp_dataprocess+0x1a2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2052
                }
                else
                {
                    cb->tcpcb_cwnd += size;
    7cfa:	69bb      	ldr	r3, [r7, #24]
    7cfc:	6bda      	ldr	r2, [r3, #60]	; 0x3c
    7cfe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    7d00:	441a      	add	r2, r3
    7d02:	69bb      	ldr	r3, [r7, #24]
    7d04:	63da      	str	r2, [r3, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2056
                }
            }

            if(cb->tcpcb_pcount >= cb->tcpcb_cwnd)
    7d06:	69bb      	ldr	r3, [r7, #24]
    7d08:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    7d0a:	69bb      	ldr	r3, [r7, #24]
    7d0c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    7d0e:	429a      	cmp	r2, r3
    7d10:	d30e      	bcc.n	7d30 <fnet_tcp_dataprocess+0x1cc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2058
            {
                cb->tcpcb_pcount -= cb->tcpcb_cwnd;
    7d12:	69bb      	ldr	r3, [r7, #24]
    7d14:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    7d16:	69bb      	ldr	r3, [r7, #24]
    7d18:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    7d1a:	1ad2      	subs	r2, r2, r3
    7d1c:	69bb      	ldr	r3, [r7, #24]
    7d1e:	641a      	str	r2, [r3, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2059
                cb->tcpcb_cwnd += cb->tcpcb_sndmss;
    7d20:	69bb      	ldr	r3, [r7, #24]
    7d22:	6bda      	ldr	r2, [r3, #60]	; 0x3c
    7d24:	69bb      	ldr	r3, [r7, #24]
    7d26:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    7d2a:	441a      	add	r2, r3
    7d2c:	69bb      	ldr	r3, [r7, #24]
    7d2e:	63da      	str	r2, [r3, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2064
            }
        }

        /* Delete the acknowledged data.*/
        fnet_netbuf_trim(&sk->send_buffer.net_buf_chain, size);
    7d30:	68fb      	ldr	r3, [r7, #12]
    7d32:	334c      	adds	r3, #76	; 0x4c
    7d34:	4618      	mov	r0, r3
    7d36:	6a79      	ldr	r1, [r7, #36]	; 0x24
    7d38:	f7fa ffc0 	bl	2cbc <fnet_netbuf_trim>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2065
        sk->send_buffer.count -= size;
    7d3c:	68fb      	ldr	r3, [r7, #12]
    7d3e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    7d40:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    7d42:	1ad2      	subs	r2, r2, r3
    7d44:	68fb      	ldr	r3, [r7, #12]
    7d46:	645a      	str	r2, [r3, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2068

        /* Save the acknowledgment number.*/
        cb->tcpcb_rcvack = tcp_ack;
    7d48:	69bb      	ldr	r3, [r7, #24]
    7d4a:	697a      	ldr	r2, [r7, #20]
    7d4c:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2070

        if(FNET_TCP_COMP_G(cb->tcpcb_rcvack, cb->tcpcb_sndseq))
    7d4e:	69bb      	ldr	r3, [r7, #24]
    7d50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    7d52:	1c59      	adds	r1, r3, #1
    7d54:	69bb      	ldr	r3, [r7, #24]
    7d56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    7d58:	f103 5200 	add.w	r2, r3, #536870912	; 0x20000000
    7d5c:	69bb      	ldr	r3, [r7, #24]
    7d5e:	68db      	ldr	r3, [r3, #12]
    7d60:	4608      	mov	r0, r1
    7d62:	4611      	mov	r1, r2
    7d64:	461a      	mov	r2, r3
    7d66:	f001 ffad 	bl	9cc4 <fnet_tcp_hit>
    7d6a:	4603      	mov	r3, r0
    7d6c:	2b00      	cmp	r3, #0
    7d6e:	d003      	beq.n	7d78 <fnet_tcp_dataprocess+0x214>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2071
            cb->tcpcb_sndseq = cb->tcpcb_rcvack;
    7d70:	69bb      	ldr	r3, [r7, #24]
    7d72:	68da      	ldr	r2, [r3, #12]
    7d74:	69bb      	ldr	r3, [r7, #24]
    7d76:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2074

        /* Calculate the retransmission timeout ( using Jacobson method ).*/
        if(FNET_TCP_COMP_GE(cb->tcpcb_rcvack, cb->tcpcb_timingack) && cb->tcpcb_timing_state == TCP_TS_SEGMENT_SENT)
    7d78:	69bb      	ldr	r3, [r7, #24]
    7d7a:	6959      	ldr	r1, [r3, #20]
    7d7c:	69bb      	ldr	r3, [r7, #24]
    7d7e:	695b      	ldr	r3, [r3, #20]
    7d80:	f103 5200 	add.w	r2, r3, #536870912	; 0x20000000
    7d84:	69bb      	ldr	r3, [r7, #24]
    7d86:	68db      	ldr	r3, [r3, #12]
    7d88:	4608      	mov	r0, r1
    7d8a:	4611      	mov	r1, r2
    7d8c:	461a      	mov	r2, r3
    7d8e:	f001 ff99 	bl	9cc4 <fnet_tcp_hit>
    7d92:	4603      	mov	r3, r0
    7d94:	2b00      	cmp	r3, #0
    7d96:	d076      	beq.n	7e86 <fnet_tcp_dataprocess+0x322>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2074 (discriminator 1)
    7d98:	69bb      	ldr	r3, [r7, #24]
    7d9a:	f893 306c 	ldrb.w	r3, [r3, #108]	; 0x6c
    7d9e:	2b01      	cmp	r3, #1
    7da0:	d171      	bne.n	7e86 <fnet_tcp_dataprocess+0x322>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2076
        {
            if(cb->tcpcb_srtt)
    7da2:	69bb      	ldr	r3, [r7, #24]
    7da4:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
    7da8:	2b00      	cmp	r3, #0
    7daa:	d041      	beq.n	7e30 <fnet_tcp_dataprocess+0x2cc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2078
            {
                err = (short)(cb->tcpcb_timers.round_trip - (cb->tcpcb_srtt >> FNET_TCP_RTT_SHIFT));
    7dac:	69bb      	ldr	r3, [r7, #24]
    7dae:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    7db2:	b29a      	uxth	r2, r3
    7db4:	69bb      	ldr	r3, [r7, #24]
    7db6:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
    7dba:	08db      	lsrs	r3, r3, #3
    7dbc:	b29b      	uxth	r3, r3
    7dbe:	1ad3      	subs	r3, r2, r3
    7dc0:	b29b      	uxth	r3, r3
    7dc2:	847b      	strh	r3, [r7, #34]	; 0x22
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2080

                if((cb->tcpcb_srtt += err) <= 0)
    7dc4:	69bb      	ldr	r3, [r7, #24]
    7dc6:	f8b3 2068 	ldrh.w	r2, [r3, #104]	; 0x68
    7dca:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
    7dcc:	4413      	add	r3, r2
    7dce:	b29a      	uxth	r2, r3
    7dd0:	69bb      	ldr	r3, [r7, #24]
    7dd2:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
    7dd6:	69bb      	ldr	r3, [r7, #24]
    7dd8:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
    7ddc:	2b00      	cmp	r3, #0
    7dde:	d103      	bne.n	7de8 <fnet_tcp_dataprocess+0x284>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2081
                    cb->tcpcb_srtt = 1;
    7de0:	69bb      	ldr	r3, [r7, #24]
    7de2:	2201      	movs	r2, #1
    7de4:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2083

                if(err < 0)
    7de8:	f9b7 3022 	ldrsh.w	r3, [r7, #34]	; 0x22
    7dec:	2b00      	cmp	r3, #0
    7dee:	da03      	bge.n	7df8 <fnet_tcp_dataprocess+0x294>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2084
                    err = (short)(-err);
    7df0:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
    7df2:	425b      	negs	r3, r3
    7df4:	b29b      	uxth	r3, r3
    7df6:	847b      	strh	r3, [r7, #34]	; 0x22
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2086

                err -= (cb->tcpcb_rttvar >> FNET_TCP_RTTVAR_SHIFT);
    7df8:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
    7dfa:	69bb      	ldr	r3, [r7, #24]
    7dfc:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
    7e00:	089b      	lsrs	r3, r3, #2
    7e02:	b29b      	uxth	r3, r3
    7e04:	1ad3      	subs	r3, r2, r3
    7e06:	b29b      	uxth	r3, r3
    7e08:	847b      	strh	r3, [r7, #34]	; 0x22
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2088

                if((cb->tcpcb_rttvar += err) <= 0)
    7e0a:	69bb      	ldr	r3, [r7, #24]
    7e0c:	f8b3 206a 	ldrh.w	r2, [r3, #106]	; 0x6a
    7e10:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
    7e12:	4413      	add	r3, r2
    7e14:	b29a      	uxth	r2, r3
    7e16:	69bb      	ldr	r3, [r7, #24]
    7e18:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
    7e1c:	69bb      	ldr	r3, [r7, #24]
    7e1e:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
    7e22:	2b00      	cmp	r3, #0
    7e24:	d11a      	bne.n	7e5c <fnet_tcp_dataprocess+0x2f8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2089
                    cb->tcpcb_rttvar = 1;
    7e26:	69bb      	ldr	r3, [r7, #24]
    7e28:	2201      	movs	r2, #1
    7e2a:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
    7e2e:	e015      	b.n	7e5c <fnet_tcp_dataprocess+0x2f8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2094
            }
            else
            {
                /* Initial calculation of the retransmission variables.*/
                cb->tcpcb_srtt = (unsigned short)((cb->tcpcb_timers.round_trip + 1) << FNET_TCP_RTT_SHIFT);
    7e30:	69bb      	ldr	r3, [r7, #24]
    7e32:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    7e36:	b29b      	uxth	r3, r3
    7e38:	3301      	adds	r3, #1
    7e3a:	b29b      	uxth	r3, r3
    7e3c:	00db      	lsls	r3, r3, #3
    7e3e:	b29a      	uxth	r2, r3
    7e40:	69bb      	ldr	r3, [r7, #24]
    7e42:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2095
                cb->tcpcb_rttvar = (unsigned short)((cb->tcpcb_timers.round_trip + 1)
    7e46:	69bb      	ldr	r3, [r7, #24]
    7e48:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    7e4c:	b29b      	uxth	r3, r3
    7e4e:	3301      	adds	r3, #1
    7e50:	b29b      	uxth	r3, r3
    7e52:	005b      	lsls	r3, r3, #1
    7e54:	b29a      	uxth	r2, r3
    7e56:	69bb      	ldr	r3, [r7, #24]
    7e58:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2099
                                                        << (FNET_TCP_RTTVAR_SHIFT - 1));
            }

            cb->tcpcb_timing_state = TCP_TS_ACK_RECEIVED;
    7e5c:	69bb      	ldr	r3, [r7, #24]
    7e5e:	2200      	movs	r2, #0
    7e60:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2100
            cb->tcpcb_rto = (cb->tcpcb_srtt >> FNET_TCP_RTT_SHIFT) + cb->tcpcb_rttvar;
    7e64:	69bb      	ldr	r3, [r7, #24]
    7e66:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
    7e6a:	08db      	lsrs	r3, r3, #3
    7e6c:	b29b      	uxth	r3, r3
    7e6e:	461a      	mov	r2, r3
    7e70:	69bb      	ldr	r3, [r7, #24]
    7e72:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
    7e76:	441a      	add	r2, r3
    7e78:	69bb      	ldr	r3, [r7, #24]
    7e7a:	659a      	str	r2, [r3, #88]	; 0x58
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2101
            cb->tcpcb_timers.round_trip = FNET_TCP_TIMER_OFF;
    7e7c:	69bb      	ldr	r3, [r7, #24]
    7e7e:	f04f 32ff 	mov.w	r2, #4294967295
    7e82:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2106
        }
    }

    /* If the final segment is not received, add the data to the input buffer.*/
    if(!(cb->tcpcb_flags & FNET_TCP_CBF_FIN_RCVD))
    7e86:	69bb      	ldr	r3, [r7, #24]
    7e88:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    7e8c:	f003 0308 	and.w	r3, r3, #8
    7e90:	2b00      	cmp	r3, #0
    7e92:	d10f      	bne.n	7eb4 <fnet_tcp_dataprocess+0x350>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2108
    {
        delflag = !fnet_tcp_addinpbuf(sk, insegment, ackparam);
    7e94:	68f8      	ldr	r0, [r7, #12]
    7e96:	68b9      	ldr	r1, [r7, #8]
    7e98:	687a      	ldr	r2, [r7, #4]
    7e9a:	f000 f89f 	bl	7fdc <fnet_tcp_addinpbuf>
    7e9e:	4603      	mov	r3, r0
    7ea0:	2b00      	cmp	r3, #0
    7ea2:	bf14      	ite	ne
    7ea4:	2300      	movne	r3, #0
    7ea6:	2301      	moveq	r3, #1
    7ea8:	b2db      	uxtb	r3, r3
    7eaa:	61fb      	str	r3, [r7, #28]
    7eac:	e018      	b.n	7ee0 <fnet_tcp_dataprocess+0x37c>
    7eae:	bf00      	nop
    7eb0:	0ffeffff 	.word	0x0ffeffff
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2112

    }

    else if((insegment->total_length - FNET_TCP_LENGTH(insegment)) > 0)
    7eb4:	68bb      	ldr	r3, [r7, #8]
    7eb6:	6959      	ldr	r1, [r3, #20]
    7eb8:	68bb      	ldr	r3, [r7, #8]
    7eba:	68db      	ldr	r3, [r3, #12]
    7ebc:	330c      	adds	r3, #12
    7ebe:	781b      	ldrb	r3, [r3, #0]
    7ec0:	091b      	lsrs	r3, r3, #4
    7ec2:	b2db      	uxtb	r3, r3
    7ec4:	461a      	mov	r2, r3
    7ec6:	4613      	mov	r3, r2
    7ec8:	079b      	lsls	r3, r3, #30
    7eca:	1a9b      	subs	r3, r3, r2
    7ecc:	009b      	lsls	r3, r3, #2
    7ece:	440b      	add	r3, r1
    7ed0:	2b00      	cmp	r3, #0
    7ed2:	d005      	beq.n	7ee0 <fnet_tcp_dataprocess+0x37c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2113
            *ackparam |= FNET_TCP_AP_SEND_IMMEDIATELLY;
    7ed4:	687b      	ldr	r3, [r7, #4]
    7ed6:	681b      	ldr	r3, [r3, #0]
    7ed8:	f043 0202 	orr.w	r2, r3, #2
    7edc:	687b      	ldr	r3, [r7, #4]
    7ede:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2116

    /* Acknowledgment of the final segment must be send immediatelly.*/
    if((*ackparam & FNET_TCP_AP_FIN_ACK)
    7ee0:	687b      	ldr	r3, [r7, #4]
    7ee2:	681b      	ldr	r3, [r3, #0]
    7ee4:	f003 0308 	and.w	r3, r3, #8
    7ee8:	2b00      	cmp	r3, #0
    7eea:	d107      	bne.n	7efc <fnet_tcp_dataprocess+0x398>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2117
         ||(FNET_TCP_FLAGS(insegment) & FNET_TCP_SGT_PSH)) //TBD
    7eec:	68bb      	ldr	r3, [r7, #8]
    7eee:	68db      	ldr	r3, [r3, #12]
    7ef0:	330d      	adds	r3, #13
    7ef2:	781b      	ldrb	r3, [r3, #0]
    7ef4:	f003 0308 	and.w	r3, r3, #8
    7ef8:	2b00      	cmp	r3, #0
    7efa:	d002      	beq.n	7f02 <fnet_tcp_dataprocess+0x39e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2119
    {
           fnet_tcp_sendack(sk);
    7efc:	68f8      	ldr	r0, [r7, #12]
    7efe:	f001 fac3 	bl	9488 <fnet_tcp_sendack>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2123
    }

    /* Try to sent the data.*/
    if(fnet_tcp_sendanydata(sk, (int)(cb->tcpcb_flags & FNET_TCP_CBF_INSND)))
    7f02:	69bb      	ldr	r3, [r7, #24]
    7f04:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    7f08:	f003 0380 	and.w	r3, r3, #128	; 0x80
    7f0c:	68f8      	ldr	r0, [r7, #12]
    7f0e:	4619      	mov	r1, r3
    7f10:	f000 fa6e 	bl	83f0 <fnet_tcp_sendanydata>
    7f14:	4603      	mov	r3, r0
    7f16:	2b00      	cmp	r3, #0
    7f18:	d005      	beq.n	7f26 <fnet_tcp_dataprocess+0x3c2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2124
      *ackparam |= FNET_TCP_AP_NO_SENDING;
    7f1a:	687b      	ldr	r3, [r7, #4]
    7f1c:	681b      	ldr	r3, [r3, #0]
    7f1e:	f043 0201 	orr.w	r2, r3, #1
    7f22:	687b      	ldr	r3, [r7, #4]
    7f24:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2127

    /* If the window of another side is closed, turn on the persist timer.*/
    if(!cb->tcpcb_sndwnd && sk->send_buffer.count)
    7f26:	69bb      	ldr	r3, [r7, #24]
    7f28:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    7f2a:	2b00      	cmp	r3, #0
    7f2c:	d113      	bne.n	7f56 <fnet_tcp_dataprocess+0x3f2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2127 (discriminator 1)
    7f2e:	68fb      	ldr	r3, [r7, #12]
    7f30:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    7f32:	2b00      	cmp	r3, #0
    7f34:	d00f      	beq.n	7f56 <fnet_tcp_dataprocess+0x3f2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2129
    {
        if(cb->tcpcb_timers.persist == FNET_TCP_TIMER_OFF)
    7f36:	69bb      	ldr	r3, [r7, #24]
    7f38:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    7f3c:	f1b3 3fff 	cmp.w	r3, #4294967295
    7f40:	d103      	bne.n	7f4a <fnet_tcp_dataprocess+0x3e6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2130
            cb->tcpcb_cprto = cb->tcpcb_rto;
    7f42:	69bb      	ldr	r3, [r7, #24]
    7f44:	6d9a      	ldr	r2, [r3, #88]	; 0x58
    7f46:	69bb      	ldr	r3, [r7, #24]
    7f48:	661a      	str	r2, [r3, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2132

        cb->tcpcb_timers.persist = cb->tcpcb_cprto;
    7f4a:	69bb      	ldr	r3, [r7, #24]
    7f4c:	6e1a      	ldr	r2, [r3, #96]	; 0x60
    7f4e:	69bb      	ldr	r3, [r7, #24]
    7f50:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    7f54:	e00b      	b.n	7f6e <fnet_tcp_dataprocess+0x40a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2136
    }
    else
    {
        if(!(cb->tcpcb_flags & FNET_TCP_CBF_SEND_TIMEOUT))
    7f56:	69bb      	ldr	r3, [r7, #24]
    7f58:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    7f5c:	f003 0340 	and.w	r3, r3, #64	; 0x40
    7f60:	2b00      	cmp	r3, #0
    7f62:	d104      	bne.n	7f6e <fnet_tcp_dataprocess+0x40a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2137
            cb->tcpcb_timers.persist = FNET_TCP_TIMER_OFF;
    7f64:	69bb      	ldr	r3, [r7, #24]
    7f66:	f04f 32ff 	mov.w	r2, #4294967295
    7f6a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2141
    }

    /* If the sent data is acknowledged, turn of the retransmission timer.*/
    if(cb->tcpcb_rcvack == cb->tcpcb_sndseq)
    7f6e:	69bb      	ldr	r3, [r7, #24]
    7f70:	68da      	ldr	r2, [r3, #12]
    7f72:	69bb      	ldr	r3, [r7, #24]
    7f74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    7f76:	429a      	cmp	r2, r3
    7f78:	d104      	bne.n	7f84 <fnet_tcp_dataprocess+0x420>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2142
        cb->tcpcb_timers.retransmission = FNET_TCP_TIMER_OFF;
    7f7a:	69bb      	ldr	r3, [r7, #24]
    7f7c:	f04f 32ff 	mov.w	r2, #4294967295
    7f80:	67da      	str	r2, [r3, #124]	; 0x7c
    7f82:	e003      	b.n	7f8c <fnet_tcp_dataprocess+0x428>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2144
    else
        cb->tcpcb_timers.retransmission = cb->tcpcb_rto;
    7f84:	69bb      	ldr	r3, [r7, #24]
    7f86:	6d9a      	ldr	r2, [r3, #88]	; 0x58
    7f88:	69bb      	ldr	r3, [r7, #24]
    7f8a:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2149

    /* If the acknowledgment is sent, return
     * If the acnkowledgment must be sent immediatelly, send it
     * If the acnkowledgment must be sent after delay, turn on the acknowledgment timer.*/
    if((*ackparam & FNET_TCP_AP_NO_SENDING) || (*ackparam & FNET_TCP_AP_FIN_ACK))
    7f8c:	687b      	ldr	r3, [r7, #4]
    7f8e:	681b      	ldr	r3, [r3, #0]
    7f90:	f003 0301 	and.w	r3, r3, #1
    7f94:	2b00      	cmp	r3, #0
    7f96:	d105      	bne.n	7fa4 <fnet_tcp_dataprocess+0x440>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2149 (discriminator 1)
    7f98:	687b      	ldr	r3, [r7, #4]
    7f9a:	681b      	ldr	r3, [r3, #0]
    7f9c:	f003 0308 	and.w	r3, r3, #8
    7fa0:	2b00      	cmp	r3, #0
    7fa2:	d001      	beq.n	7fa8 <fnet_tcp_dataprocess+0x444>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2150
        return delflag;
    7fa4:	69fb      	ldr	r3, [r7, #28]
    7fa6:	e015      	b.n	7fd4 <fnet_tcp_dataprocess+0x470>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2152

    if(*ackparam & FNET_TCP_AP_SEND_IMMEDIATELLY)
    7fa8:	687b      	ldr	r3, [r7, #4]
    7faa:	681b      	ldr	r3, [r3, #0]
    7fac:	f003 0302 	and.w	r3, r3, #2
    7fb0:	2b00      	cmp	r3, #0
    7fb2:	d004      	beq.n	7fbe <fnet_tcp_dataprocess+0x45a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2154
    {
        fnet_tcp_sendack(sk);
    7fb4:	68f8      	ldr	r0, [r7, #12]
    7fb6:	f001 fa67 	bl	9488 <fnet_tcp_sendack>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2155
        return delflag;
    7fba:	69fb      	ldr	r3, [r7, #28]
    7fbc:	e00a      	b.n	7fd4 <fnet_tcp_dataprocess+0x470>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2158
    }

    if(*ackparam & FNET_TCP_AP_SEND_WITH_DELAY)
    7fbe:	687b      	ldr	r3, [r7, #4]
    7fc0:	681b      	ldr	r3, [r3, #0]
    7fc2:	f003 0304 	and.w	r3, r3, #4
    7fc6:	2b00      	cmp	r3, #0
    7fc8:	d003      	beq.n	7fd2 <fnet_tcp_dataprocess+0x46e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2159
        cb->tcpcb_timers.delayed_ack = 1; /* Delay 200 ms*/
    7fca:	69bb      	ldr	r3, [r7, #24]
    7fcc:	2201      	movs	r2, #1
    7fce:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2161

    return delflag;
    7fd2:	69fb      	ldr	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2162
}
    7fd4:	4618      	mov	r0, r3
    7fd6:	3728      	adds	r7, #40	; 0x28
    7fd8:	46bd      	mov	sp, r7
    7fda:	bd80      	pop	{r7, pc}

00007fdc <fnet_tcp_addinpbuf>:
fnet_tcp_addinpbuf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2174
*
* RETURNS: TRUE if the input segment is added to the buffer. Otherwise
*          this function returns FALSE.
*************************************************************************/
static int fnet_tcp_addinpbuf( fnet_socket_t *sk, fnet_netbuf_t *insegment, int *ackparam )
{
    7fdc:	b5b0      	push	{r4, r5, r7, lr}
    7fde:	b08c      	sub	sp, #48	; 0x30
    7fe0:	af00      	add	r7, sp, #0
    7fe2:	60f8      	str	r0, [r7, #12]
    7fe4:	60b9      	str	r1, [r7, #8]
    7fe6:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2175
    fnet_tcp_control_t  *cb = (fnet_tcp_control_t *)sk->protocol_control;
    7fe8:	68fb      	ldr	r3, [r7, #12]
    7fea:	699b      	ldr	r3, [r3, #24]
    7fec:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2176
    unsigned long       tcp_length = (unsigned long)FNET_TCP_LENGTH(insegment);
    7fee:	68bb      	ldr	r3, [r7, #8]
    7ff0:	68db      	ldr	r3, [r3, #12]
    7ff2:	330c      	adds	r3, #12
    7ff4:	781b      	ldrb	r3, [r3, #0]
    7ff6:	091b      	lsrs	r3, r3, #4
    7ff8:	b2db      	uxtb	r3, r3
    7ffa:	009b      	lsls	r3, r3, #2
    7ffc:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2177
    unsigned long       tcp_flags = (unsigned long)FNET_TCP_FLAGS(insegment); 
    7ffe:	68bb      	ldr	r3, [r7, #8]
    8000:	68db      	ldr	r3, [r3, #12]
    8002:	330d      	adds	r3, #13
    8004:	781b      	ldrb	r3, [r3, #0]
    8006:	f003 033f 	and.w	r3, r3, #63	; 0x3f
    800a:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2183
    int                 result;                   
    
    
    /* If segment doesn't include the data and the FIN or URG flag,
     * return from the function.*/
    if(!(insegment->total_length - tcp_length)         
    800c:	68bb      	ldr	r3, [r7, #8]
    800e:	695a      	ldr	r2, [r3, #20]
    8010:	69fb      	ldr	r3, [r7, #28]
    8012:	429a      	cmp	r2, r3
    8014:	d106      	bne.n	8024 <fnet_tcp_addinpbuf+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2184
            && !(tcp_flags & (FNET_TCP_SGT_URG | FNET_TCP_SGT_FIN))) 
    8016:	69bb      	ldr	r3, [r7, #24]
    8018:	f003 0321 	and.w	r3, r3, #33	; 0x21
    801c:	2b00      	cmp	r3, #0
    801e:	d101      	bne.n	8024 <fnet_tcp_addinpbuf+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2185
        return 0; /* The data isn't added.*/
    8020:	2300      	movs	r3, #0
    8022:	e1e1      	b.n	83e8 <fnet_tcp_addinpbuf+0x40c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2189

    
    /* Process the segment that came in order.*/
    if(fnet_ntohl(FNET_TCP_SEQ(insegment)) == cb->tcpcb_sndack 
    8024:	68bb      	ldr	r3, [r7, #8]
    8026:	68db      	ldr	r3, [r3, #12]
    8028:	3304      	adds	r3, #4
    802a:	681b      	ldr	r3, [r3, #0]
    802c:	4618      	mov	r0, r3
    802e:	f007 fa8d 	bl	f54c <fnet_htonl>
    8032:	4602      	mov	r2, r0
    8034:	6a3b      	ldr	r3, [r7, #32]
    8036:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    8038:	429a      	cmp	r2, r3
    803a:	d15c      	bne.n	80f6 <fnet_tcp_addinpbuf+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2191
        #if !FNET_CFG_TCP_DISCARD_OUT_OF_ORDER 
            && !cb->tcpcb_count
    803c:	6a3b      	ldr	r3, [r7, #32]
    803e:	685b      	ldr	r3, [r3, #4]
    8040:	2b00      	cmp	r3, #0
    8042:	d158      	bne.n	80f6 <fnet_tcp_addinpbuf+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2196
        #endif
        )
    {
    #if FNET_CFG_TCP_URGENT    
        if(tcp_flags & FNET_TCP_SGT_URG)
    8044:	69bb      	ldr	r3, [r7, #24]
    8046:	f003 0320 	and.w	r3, r3, #32
    804a:	2b00      	cmp	r3, #0
    804c:	d008      	beq.n	8060 <fnet_tcp_addinpbuf+0x84>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2199
        {
            /* Process the urgent data.*/
            fnet_tcp_urgprocessing(sk, &insegment, 0, ackparam);
    804e:	f107 0308 	add.w	r3, r7, #8
    8052:	68f8      	ldr	r0, [r7, #12]
    8054:	4619      	mov	r1, r3
    8056:	2200      	movs	r2, #0
    8058:	687b      	ldr	r3, [r7, #4]
    805a:	f000 fb13 	bl	8684 <fnet_tcp_urgprocessing>
    805e:	e004      	b.n	806a <fnet_tcp_addinpbuf+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2205
        }
        else
        {
            /* Pull  the receive urgent pointer
             * along with the receive window */
            cb->tcpcb_rcvurgseq = cb->tcpcb_sndack - 1;
    8060:	6a3b      	ldr	r3, [r7, #32]
    8062:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    8064:	1e5a      	subs	r2, r3, #1
    8066:	6a3b      	ldr	r3, [r7, #32]
    8068:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2210
        }
    #endif /* FNET_CFG_TCP_URGENT */        

        /* Process the final segment. */
        if(tcp_flags & FNET_TCP_SGT_FIN)
    806a:	69bb      	ldr	r3, [r7, #24]
    806c:	f003 0301 	and.w	r3, r3, #1
    8070:	2b00      	cmp	r3, #0
    8072:	d016      	beq.n	80a2 <fnet_tcp_addinpbuf+0xc6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2212
        {
            fnet_tcp_finprocessing(sk, fnet_ntohl(FNET_TCP_ACK(insegment)));
    8074:	68bb      	ldr	r3, [r7, #8]
    8076:	68db      	ldr	r3, [r3, #12]
    8078:	3308      	adds	r3, #8
    807a:	681b      	ldr	r3, [r3, #0]
    807c:	4618      	mov	r0, r3
    807e:	f007 fa65 	bl	f54c <fnet_htonl>
    8082:	4603      	mov	r3, r0
    8084:	68f8      	ldr	r0, [r7, #12]
    8086:	4619      	mov	r1, r3
    8088:	f000 fbca 	bl	8820 <fnet_tcp_finprocessing>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2213
            cb->tcpcb_sndack++;
    808c:	6a3b      	ldr	r3, [r7, #32]
    808e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    8090:	1c5a      	adds	r2, r3, #1
    8092:	6a3b      	ldr	r3, [r7, #32]
    8094:	631a      	str	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2214
            *ackparam |= FNET_TCP_AP_FIN_ACK;
    8096:	687b      	ldr	r3, [r7, #4]
    8098:	681b      	ldr	r3, [r3, #0]
    809a:	f043 0208 	orr.w	r2, r3, #8
    809e:	687b      	ldr	r3, [r7, #4]
    80a0:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2218
        }

        /* Delete the header.*/
        fnet_netbuf_trim(&insegment, (int)tcp_length);
    80a2:	69fb      	ldr	r3, [r7, #28]
    80a4:	f107 0208 	add.w	r2, r7, #8
    80a8:	4610      	mov	r0, r2
    80aa:	4619      	mov	r1, r3
    80ac:	f7fa fe06 	bl	2cbc <fnet_netbuf_trim>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2222


        /* Add the data.*/
        if(insegment)
    80b0:	68bb      	ldr	r3, [r7, #8]
    80b2:	2b00      	cmp	r3, #0
    80b4:	d01d      	beq.n	80f2 <fnet_tcp_addinpbuf+0x116>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2224
        {
            cb->tcpcb_sndack += insegment->total_length;
    80b6:	6a3b      	ldr	r3, [r7, #32]
    80b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    80ba:	68bb      	ldr	r3, [r7, #8]
    80bc:	695b      	ldr	r3, [r3, #20]
    80be:	441a      	add	r2, r3
    80c0:	6a3b      	ldr	r3, [r7, #32]
    80c2:	631a      	str	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2225
            sk->receive_buffer.net_buf_chain = fnet_netbuf_concat(sk->receive_buffer.net_buf_chain,
    80c4:	68fb      	ldr	r3, [r7, #12]
    80c6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
    80c8:	68bb      	ldr	r3, [r7, #8]
    80ca:	4610      	mov	r0, r2
    80cc:	4619      	mov	r1, r3
    80ce:	f7fa ffa3 	bl	3018 <fnet_netbuf_concat>
    80d2:	4602      	mov	r2, r0
    80d4:	68fb      	ldr	r3, [r7, #12]
    80d6:	63da      	str	r2, [r3, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2227
                                                                  insegment);
            sk->receive_buffer.count += insegment->total_length;
    80d8:	68fb      	ldr	r3, [r7, #12]
    80da:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    80dc:	68bb      	ldr	r3, [r7, #8]
    80de:	695b      	ldr	r3, [r3, #20]
    80e0:	441a      	add	r2, r3
    80e2:	68fb      	ldr	r3, [r7, #12]
    80e4:	635a      	str	r2, [r3, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2229
           
            *ackparam |= FNET_TCP_AP_SEND_WITH_DELAY;
    80e6:	687b      	ldr	r3, [r7, #4]
    80e8:	681b      	ldr	r3, [r3, #0]
    80ea:	f043 0204 	orr.w	r2, r3, #4
    80ee:	687b      	ldr	r3, [r7, #4]
    80f0:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2232
        }
        
        return FNET_TRUE;
    80f2:	2301      	movs	r3, #1
    80f4:	e178      	b.n	83e8 <fnet_tcp_addinpbuf+0x40c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2235
    }

    result = 0; /* The data is not added to the buffer.*/
    80f6:	2300      	movs	r3, #0
    80f8:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2244
        fnet_netbuf_t *buf, *prevbuf; 
        unsigned long seq, size;
    
    
        /* Add to the temporary input buffer.*/
        if(cb->tcpcb_count + insegment->total_length <= cb->tcpcb_rcvcountmax
    80fa:	6a3b      	ldr	r3, [r7, #32]
    80fc:	685a      	ldr	r2, [r3, #4]
    80fe:	68bb      	ldr	r3, [r7, #8]
    8100:	695b      	ldr	r3, [r3, #20]
    8102:	441a      	add	r2, r3
    8104:	6a3b      	ldr	r3, [r7, #32]
    8106:	689b      	ldr	r3, [r3, #8]
    8108:	429a      	cmp	r2, r3
    810a:	d90b      	bls.n	8124 <fnet_tcp_addinpbuf+0x148>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2245
               || fnet_ntohl(FNET_TCP_SEQ(insegment)) == cb->tcpcb_sndack)
    810c:	68bb      	ldr	r3, [r7, #8]
    810e:	68db      	ldr	r3, [r3, #12]
    8110:	3304      	adds	r3, #4
    8112:	681b      	ldr	r3, [r3, #0]
    8114:	4618      	mov	r0, r3
    8116:	f007 fa19 	bl	f54c <fnet_htonl>
    811a:	4602      	mov	r2, r0
    811c:	6a3b      	ldr	r3, [r7, #32]
    811e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    8120:	429a      	cmp	r2, r3
    8122:	d15a      	bne.n	81da <fnet_tcp_addinpbuf+0x1fe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2248
        {
            /* Acknowledgement must be sent immediately.*/
            *ackparam |= FNET_TCP_AP_SEND_IMMEDIATELLY;
    8124:	687b      	ldr	r3, [r7, #4]
    8126:	681b      	ldr	r3, [r3, #0]
    8128:	f043 0202 	orr.w	r2, r3, #2
    812c:	687b      	ldr	r3, [r7, #4]
    812e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2251

            /* Data is added to the buffer.*/
            result = 1;
    8130:	2301      	movs	r3, #1
    8132:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2254

            /* Add the segment to the temporary buffer (with sorting).*/
            if(cb->tcpcb_rcvchain)
    8134:	6a3b      	ldr	r3, [r7, #32]
    8136:	681b      	ldr	r3, [r3, #0]
    8138:	2b00      	cmp	r3, #0
    813a:	d044      	beq.n	81c6 <fnet_tcp_addinpbuf+0x1ea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2256
            {
                buf = cb->tcpcb_rcvchain;
    813c:	6a3b      	ldr	r3, [r7, #32]
    813e:	681b      	ldr	r3, [r3, #0]
    8140:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2257
                prevbuf = 0;
    8142:	2300      	movs	r3, #0
    8144:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2261

                while(1)
                {
                    if(FNET_TCP_COMP_G(fnet_ntohl(FNET_TCP_SEQ(buf)), fnet_ntohl(FNET_TCP_SEQ(insegment))))
    8146:	68bb      	ldr	r3, [r7, #8]
    8148:	68db      	ldr	r3, [r3, #12]
    814a:	3304      	adds	r3, #4
    814c:	681b      	ldr	r3, [r3, #0]
    814e:	4618      	mov	r0, r3
    8150:	f007 f9fc 	bl	f54c <fnet_htonl>
    8154:	4603      	mov	r3, r0
    8156:	1c5d      	adds	r5, r3, #1
    8158:	68bb      	ldr	r3, [r7, #8]
    815a:	68db      	ldr	r3, [r3, #12]
    815c:	3304      	adds	r3, #4
    815e:	681b      	ldr	r3, [r3, #0]
    8160:	4618      	mov	r0, r3
    8162:	f007 f9f3 	bl	f54c <fnet_htonl>
    8166:	4603      	mov	r3, r0
    8168:	f103 5400 	add.w	r4, r3, #536870912	; 0x20000000
    816c:	693b      	ldr	r3, [r7, #16]
    816e:	68db      	ldr	r3, [r3, #12]
    8170:	3304      	adds	r3, #4
    8172:	681b      	ldr	r3, [r3, #0]
    8174:	4618      	mov	r0, r3
    8176:	f007 f9e9 	bl	f54c <fnet_htonl>
    817a:	4603      	mov	r3, r0
    817c:	4628      	mov	r0, r5
    817e:	4621      	mov	r1, r4
    8180:	461a      	mov	r2, r3
    8182:	f001 fd9f 	bl	9cc4 <fnet_tcp_hit>
    8186:	4603      	mov	r3, r0
    8188:	2b00      	cmp	r3, #0
    818a:	d00d      	beq.n	81a8 <fnet_tcp_addinpbuf+0x1cc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2263
                    {
                        if(prevbuf)
    818c:	6abb      	ldr	r3, [r7, #40]	; 0x28
    818e:	2b00      	cmp	r3, #0
    8190:	d003      	beq.n	819a <fnet_tcp_addinpbuf+0x1be>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2264
                            prevbuf->next_chain = insegment;
    8192:	68ba      	ldr	r2, [r7, #8]
    8194:	6abb      	ldr	r3, [r7, #40]	; 0x28
    8196:	605a      	str	r2, [r3, #4]
    8198:	e002      	b.n	81a0 <fnet_tcp_addinpbuf+0x1c4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2266
                        else
                            cb->tcpcb_rcvchain = insegment;
    819a:	68ba      	ldr	r2, [r7, #8]
    819c:	6a3b      	ldr	r3, [r7, #32]
    819e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2268

                        insegment->next_chain = buf;
    81a0:	68bb      	ldr	r3, [r7, #8]
    81a2:	693a      	ldr	r2, [r7, #16]
    81a4:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2269
                        break;
    81a6:	e00d      	b.n	81c4 <fnet_tcp_addinpbuf+0x1e8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2272
                    }

                    if(!buf->next_chain)
    81a8:	693b      	ldr	r3, [r7, #16]
    81aa:	685b      	ldr	r3, [r3, #4]
    81ac:	2b00      	cmp	r3, #0
    81ae:	d103      	bne.n	81b8 <fnet_tcp_addinpbuf+0x1dc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2274
                    {
                        buf->next_chain = insegment;
    81b0:	693b      	ldr	r3, [r7, #16]
    81b2:	68ba      	ldr	r2, [r7, #8]
    81b4:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2275
                        break;
    81b6:	e005      	b.n	81c4 <fnet_tcp_addinpbuf+0x1e8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2278
                    }

                    prevbuf = buf;
    81b8:	693b      	ldr	r3, [r7, #16]
    81ba:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2279
                    buf = buf->next_chain;
    81bc:	693b      	ldr	r3, [r7, #16]
    81be:	685b      	ldr	r3, [r3, #4]
    81c0:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2280
                }
    81c2:	e7c0      	b.n	8146 <fnet_tcp_addinpbuf+0x16a>
    81c4:	e002      	b.n	81cc <fnet_tcp_addinpbuf+0x1f0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2284
            }
            else
            {
                cb->tcpcb_rcvchain = insegment;
    81c6:	68ba      	ldr	r2, [r7, #8]
    81c8:	6a3b      	ldr	r3, [r7, #32]
    81ca:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2287
            }

            cb->tcpcb_count += insegment->total_length;
    81cc:	6a3b      	ldr	r3, [r7, #32]
    81ce:	685a      	ldr	r2, [r3, #4]
    81d0:	68bb      	ldr	r3, [r7, #8]
    81d2:	695b      	ldr	r3, [r3, #20]
    81d4:	441a      	add	r2, r3
    81d6:	6a3b      	ldr	r3, [r7, #32]
    81d8:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2292
        }

        /* If the temporary buffer received the lost segment
         * move the data from the temporary buffer to the input buffer of the socket.*/
        if(fnet_ntohl(FNET_TCP_SEQ(insegment)) == cb->tcpcb_sndack) 
    81da:	68bb      	ldr	r3, [r7, #8]
    81dc:	68db      	ldr	r3, [r3, #12]
    81de:	3304      	adds	r3, #4
    81e0:	681b      	ldr	r3, [r3, #0]
    81e2:	4618      	mov	r0, r3
    81e4:	f007 f9b2 	bl	f54c <fnet_htonl>
    81e8:	4602      	mov	r2, r0
    81ea:	6a3b      	ldr	r3, [r7, #32]
    81ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    81ee:	429a      	cmp	r2, r3
    81f0:	f040 80f9 	bne.w	83e6 <fnet_tcp_addinpbuf+0x40a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2294
        {
            seq = cb->tcpcb_sndack;
    81f4:	6a3b      	ldr	r3, [r7, #32]
    81f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    81f8:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2296

            while(cb->tcpcb_rcvchain)
    81fa:	e0ef      	b.n	83dc <fnet_tcp_addinpbuf+0x400>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2298
            {
                if(FNET_TCP_COMP_GE(seq, fnet_ntohl(FNET_TCP_SEQ(cb->tcpcb_rcvchain))))
    81fc:	6a3b      	ldr	r3, [r7, #32]
    81fe:	681b      	ldr	r3, [r3, #0]
    8200:	68db      	ldr	r3, [r3, #12]
    8202:	3304      	adds	r3, #4
    8204:	681b      	ldr	r3, [r3, #0]
    8206:	4618      	mov	r0, r3
    8208:	f007 f9a0 	bl	f54c <fnet_htonl>
    820c:	4604      	mov	r4, r0
    820e:	6a3b      	ldr	r3, [r7, #32]
    8210:	681b      	ldr	r3, [r3, #0]
    8212:	68db      	ldr	r3, [r3, #12]
    8214:	3304      	adds	r3, #4
    8216:	681b      	ldr	r3, [r3, #0]
    8218:	4618      	mov	r0, r3
    821a:	f007 f997 	bl	f54c <fnet_htonl>
    821e:	4603      	mov	r3, r0
    8220:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
    8224:	4620      	mov	r0, r4
    8226:	4619      	mov	r1, r3
    8228:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    822a:	f001 fd4b 	bl	9cc4 <fnet_tcp_hit>
    822e:	4603      	mov	r3, r0
    8230:	2b00      	cmp	r3, #0
    8232:	f000 80d2 	beq.w	83da <fnet_tcp_addinpbuf+0x3fe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2300
                {
                    if(FNET_TCP_COMP_GE(fnet_ntohl(FNET_TCP_SEQ(cb->tcpcb_rcvchain)) + cb->tcpcb_rcvchain->total_length 
    8236:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    8238:	f103 5400 	add.w	r4, r3, #536870912	; 0x20000000
    823c:	6a3b      	ldr	r3, [r7, #32]
    823e:	681b      	ldr	r3, [r3, #0]
    8240:	68db      	ldr	r3, [r3, #12]
    8242:	3304      	adds	r3, #4
    8244:	681b      	ldr	r3, [r3, #0]
    8246:	4618      	mov	r0, r3
    8248:	f007 f980 	bl	f54c <fnet_htonl>
    824c:	4602      	mov	r2, r0
    824e:	6a3b      	ldr	r3, [r7, #32]
    8250:	681b      	ldr	r3, [r3, #0]
    8252:	695b      	ldr	r3, [r3, #20]
    8254:	18d1      	adds	r1, r2, r3
    8256:	6a3b      	ldr	r3, [r7, #32]
    8258:	681b      	ldr	r3, [r3, #0]
    825a:	68db      	ldr	r3, [r3, #12]
    825c:	330c      	adds	r3, #12
    825e:	781b      	ldrb	r3, [r3, #0]
    8260:	091b      	lsrs	r3, r3, #4
    8262:	b2db      	uxtb	r3, r3
    8264:	461a      	mov	r2, r3
    8266:	4613      	mov	r3, r2
    8268:	079b      	lsls	r3, r3, #30
    826a:	1a9b      	subs	r3, r3, r2
    826c:	009b      	lsls	r3, r3, #2
    826e:	440b      	add	r3, r1
    8270:	6a78      	ldr	r0, [r7, #36]	; 0x24
    8272:	4621      	mov	r1, r4
    8274:	461a      	mov	r2, r3
    8276:	f001 fd25 	bl	9cc4 <fnet_tcp_hit>
    827a:	4603      	mov	r3, r0
    827c:	2b00      	cmp	r3, #0
    827e:	f000 8097 	beq.w	83b0 <fnet_tcp_addinpbuf+0x3d4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2306
                                            - FNET_TCP_LENGTH(cb->tcpcb_rcvchain),
                                        seq))
                    {

                        /* Receive the size of the repeated segment.*/
                        size = fnet_tcp_getsize(fnet_ntohl(FNET_TCP_SEQ(cb->tcpcb_rcvchain)), seq);
    8282:	6a3b      	ldr	r3, [r7, #32]
    8284:	681b      	ldr	r3, [r3, #0]
    8286:	68db      	ldr	r3, [r3, #12]
    8288:	3304      	adds	r3, #4
    828a:	681b      	ldr	r3, [r3, #0]
    828c:	4618      	mov	r0, r3
    828e:	f007 f95d 	bl	f54c <fnet_htonl>
    8292:	4603      	mov	r3, r0
    8294:	4618      	mov	r0, r3
    8296:	6a79      	ldr	r1, [r7, #36]	; 0x24
    8298:	f001 fd3a 	bl	9d10 <fnet_tcp_getsize>
    829c:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2309

                        /* Receive the new sequnce number.*/
                        seq = fnet_ntohl(FNET_TCP_SEQ(cb->tcpcb_rcvchain)) + cb->tcpcb_rcvchain->total_length 
    829e:	6a3b      	ldr	r3, [r7, #32]
    82a0:	681b      	ldr	r3, [r3, #0]
    82a2:	68db      	ldr	r3, [r3, #12]
    82a4:	3304      	adds	r3, #4
    82a6:	681b      	ldr	r3, [r3, #0]
    82a8:	4618      	mov	r0, r3
    82aa:	f007 f94f 	bl	f54c <fnet_htonl>
    82ae:	4602      	mov	r2, r0
    82b0:	6a3b      	ldr	r3, [r7, #32]
    82b2:	681b      	ldr	r3, [r3, #0]
    82b4:	695b      	ldr	r3, [r3, #20]
    82b6:	18d1      	adds	r1, r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2310
                                  - FNET_TCP_LENGTH(cb->tcpcb_rcvchain);
    82b8:	6a3b      	ldr	r3, [r7, #32]
    82ba:	681b      	ldr	r3, [r3, #0]
    82bc:	68db      	ldr	r3, [r3, #12]
    82be:	330c      	adds	r3, #12
    82c0:	781b      	ldrb	r3, [r3, #0]
    82c2:	091b      	lsrs	r3, r3, #4
    82c4:	b2db      	uxtb	r3, r3
    82c6:	461a      	mov	r2, r3
    82c8:	4613      	mov	r3, r2
    82ca:	079b      	lsls	r3, r3, #30
    82cc:	1a9b      	subs	r3, r3, r2
    82ce:	009b      	lsls	r3, r3, #2
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2309

                        /* Receive the size of the repeated segment.*/
                        size = fnet_tcp_getsize(fnet_ntohl(FNET_TCP_SEQ(cb->tcpcb_rcvchain)), seq);

                        /* Receive the new sequnce number.*/
                        seq = fnet_ntohl(FNET_TCP_SEQ(cb->tcpcb_rcvchain)) + cb->tcpcb_rcvchain->total_length 
    82d0:	440b      	add	r3, r1
    82d2:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2313
                                  - FNET_TCP_LENGTH(cb->tcpcb_rcvchain);

                        /* Set the size of the temporary buffer.*/
                        cb->tcpcb_count -= cb->tcpcb_rcvchain->total_length;
    82d4:	6a3b      	ldr	r3, [r7, #32]
    82d6:	685a      	ldr	r2, [r3, #4]
    82d8:	6a3b      	ldr	r3, [r7, #32]
    82da:	681b      	ldr	r3, [r3, #0]
    82dc:	695b      	ldr	r3, [r3, #20]
    82de:	1ad2      	subs	r2, r2, r3
    82e0:	6a3b      	ldr	r3, [r7, #32]
    82e2:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2315

                        buf = cb->tcpcb_rcvchain;
    82e4:	6a3b      	ldr	r3, [r7, #32]
    82e6:	681b      	ldr	r3, [r3, #0]
    82e8:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2316
                        cb->tcpcb_rcvchain = cb->tcpcb_rcvchain->next_chain;
    82ea:	6a3b      	ldr	r3, [r7, #32]
    82ec:	681b      	ldr	r3, [r3, #0]
    82ee:	685a      	ldr	r2, [r3, #4]
    82f0:	6a3b      	ldr	r3, [r7, #32]
    82f2:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2317
                        buf->next_chain = 0;
    82f4:	693b      	ldr	r3, [r7, #16]
    82f6:	2200      	movs	r2, #0
    82f8:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2320

                    #if FNET_CFG_TCP_URGENT
                        if(FNET_TCP_FLAGS(buf) & FNET_TCP_SGT_URG)
    82fa:	693b      	ldr	r3, [r7, #16]
    82fc:	68db      	ldr	r3, [r3, #12]
    82fe:	330d      	adds	r3, #13
    8300:	781b      	ldrb	r3, [r3, #0]
    8302:	f003 0320 	and.w	r3, r3, #32
    8306:	2b00      	cmp	r3, #0
    8308:	d008      	beq.n	831c <fnet_tcp_addinpbuf+0x340>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2323
                        {
                            /* Process the urgent data.*/
                            fnet_tcp_urgprocessing(sk, &buf, size, ackparam);
    830a:	f107 0310 	add.w	r3, r7, #16
    830e:	68f8      	ldr	r0, [r7, #12]
    8310:	4619      	mov	r1, r3
    8312:	697a      	ldr	r2, [r7, #20]
    8314:	687b      	ldr	r3, [r7, #4]
    8316:	f000 f9b5 	bl	8684 <fnet_tcp_urgprocessing>
    831a:	e004      	b.n	8326 <fnet_tcp_addinpbuf+0x34a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2330
                        else
                                           
                        {
                            /* Pull the receive urgent pointer
                             * along with the receive window */
                            cb->tcpcb_rcvurgseq = cb->tcpcb_sndack - 1;
    831c:	6a3b      	ldr	r3, [r7, #32]
    831e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    8320:	1e5a      	subs	r2, r3, #1
    8322:	6a3b      	ldr	r3, [r7, #32]
    8324:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2336
                        }
                    #endif      


                        /* Process the final segment.*/
                        if(FNET_TCP_FLAGS(buf) & FNET_TCP_SGT_FIN)
    8326:	693b      	ldr	r3, [r7, #16]
    8328:	68db      	ldr	r3, [r3, #12]
    832a:	330d      	adds	r3, #13
    832c:	781b      	ldrb	r3, [r3, #0]
    832e:	f003 0301 	and.w	r3, r3, #1
    8332:	2b00      	cmp	r3, #0
    8334:	d014      	beq.n	8360 <fnet_tcp_addinpbuf+0x384>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2338
                        {
                            fnet_tcp_finprocessing(sk, fnet_ntohl(FNET_TCP_ACK(buf)));
    8336:	693b      	ldr	r3, [r7, #16]
    8338:	68db      	ldr	r3, [r3, #12]
    833a:	3308      	adds	r3, #8
    833c:	681b      	ldr	r3, [r3, #0]
    833e:	4618      	mov	r0, r3
    8340:	f007 f904 	bl	f54c <fnet_htonl>
    8344:	4603      	mov	r3, r0
    8346:	68f8      	ldr	r0, [r7, #12]
    8348:	4619      	mov	r1, r3
    834a:	f000 fa69 	bl	8820 <fnet_tcp_finprocessing>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2339
                            *ackparam |= FNET_TCP_AP_FIN_ACK;
    834e:	687b      	ldr	r3, [r7, #4]
    8350:	681b      	ldr	r3, [r3, #0]
    8352:	f043 0208 	orr.w	r2, r3, #8
    8356:	687b      	ldr	r3, [r7, #4]
    8358:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2340
                            seq++;
    835a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    835c:	3301      	adds	r3, #1
    835e:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2345
                        }


                        /* Delete the header and repeated part.*/
                        fnet_netbuf_trim(&buf, (int)(FNET_TCP_LENGTH(buf) + size));
    8360:	693b      	ldr	r3, [r7, #16]
    8362:	68db      	ldr	r3, [r3, #12]
    8364:	330c      	adds	r3, #12
    8366:	781b      	ldrb	r3, [r3, #0]
    8368:	091b      	lsrs	r3, r3, #4
    836a:	b2db      	uxtb	r3, r3
    836c:	009b      	lsls	r3, r3, #2
    836e:	461a      	mov	r2, r3
    8370:	697b      	ldr	r3, [r7, #20]
    8372:	4413      	add	r3, r2
    8374:	f107 0210 	add.w	r2, r7, #16
    8378:	4610      	mov	r0, r2
    837a:	4619      	mov	r1, r3
    837c:	f7fa fc9e 	bl	2cbc <fnet_netbuf_trim>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2348

                        /* Add the data.*/
                        if(buf)
    8380:	693b      	ldr	r3, [r7, #16]
    8382:	2b00      	cmp	r3, #0
    8384:	d010      	beq.n	83a8 <fnet_tcp_addinpbuf+0x3cc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2350
                        {
                            sk->receive_buffer.count += buf->total_length;
    8386:	68fb      	ldr	r3, [r7, #12]
    8388:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    838a:	693b      	ldr	r3, [r7, #16]
    838c:	695b      	ldr	r3, [r3, #20]
    838e:	441a      	add	r2, r3
    8390:	68fb      	ldr	r3, [r7, #12]
    8392:	635a      	str	r2, [r3, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2352
                            sk->receive_buffer.net_buf_chain =
                                fnet_netbuf_concat(sk->receive_buffer.net_buf_chain,
    8394:	68fb      	ldr	r3, [r7, #12]
    8396:	6bda      	ldr	r2, [r3, #60]	; 0x3c
    8398:	693b      	ldr	r3, [r7, #16]
    839a:	4610      	mov	r0, r2
    839c:	4619      	mov	r1, r3
    839e:	f7fa fe3b 	bl	3018 <fnet_netbuf_concat>
    83a2:	4602      	mov	r2, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2351

                        /* Add the data.*/
                        if(buf)
                        {
                            sk->receive_buffer.count += buf->total_length;
                            sk->receive_buffer.net_buf_chain =
    83a4:	68fb      	ldr	r3, [r7, #12]
    83a6:	63da      	str	r2, [r3, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2357
                                fnet_netbuf_concat(sk->receive_buffer.net_buf_chain,
                                                   buf);
                        }

                        /* Set the  new acknowledgment number.*/
                        cb->tcpcb_sndack = seq;
    83a8:	6a3b      	ldr	r3, [r7, #32]
    83aa:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    83ac:	631a      	str	r2, [r3, #48]	; 0x30
    83ae:	e015      	b.n	83dc <fnet_tcp_addinpbuf+0x400>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2362
                    }
                    else
                    {
                        /* Delete the repeated segment.*/
                        buf = cb->tcpcb_rcvchain;
    83b0:	6a3b      	ldr	r3, [r7, #32]
    83b2:	681b      	ldr	r3, [r3, #0]
    83b4:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2363
                        cb->tcpcb_rcvchain = cb->tcpcb_rcvchain->next_chain;
    83b6:	6a3b      	ldr	r3, [r7, #32]
    83b8:	681b      	ldr	r3, [r3, #0]
    83ba:	685a      	ldr	r2, [r3, #4]
    83bc:	6a3b      	ldr	r3, [r7, #32]
    83be:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2366

                        /* Set the new size of the temporary buffer.*/
                        cb->tcpcb_count -= cb->tcpcb_rcvchain->total_length;
    83c0:	6a3b      	ldr	r3, [r7, #32]
    83c2:	685a      	ldr	r2, [r3, #4]
    83c4:	6a3b      	ldr	r3, [r7, #32]
    83c6:	681b      	ldr	r3, [r3, #0]
    83c8:	695b      	ldr	r3, [r3, #20]
    83ca:	1ad2      	subs	r2, r2, r3
    83cc:	6a3b      	ldr	r3, [r7, #32]
    83ce:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2367
                        fnet_netbuf_free_chain(buf);
    83d0:	693b      	ldr	r3, [r7, #16]
    83d2:	4618      	mov	r0, r3
    83d4:	f7fa fb94 	bl	2b00 <fnet_netbuf_free_chain>
    83d8:	e000      	b.n	83dc <fnet_tcp_addinpbuf+0x400>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2372
                    }
                }
                else
                {
                    break;
    83da:	e004      	b.n	83e6 <fnet_tcp_addinpbuf+0x40a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2296 (discriminator 1)
         * move the data from the temporary buffer to the input buffer of the socket.*/
        if(fnet_ntohl(FNET_TCP_SEQ(insegment)) == cb->tcpcb_sndack) 
        {
            seq = cb->tcpcb_sndack;

            while(cb->tcpcb_rcvchain)
    83dc:	6a3b      	ldr	r3, [r7, #32]
    83de:	681b      	ldr	r3, [r3, #0]
    83e0:	2b00      	cmp	r3, #0
    83e2:	f47f af0b 	bne.w	81fc <fnet_tcp_addinpbuf+0x220>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2379
            }
        }
    }
#endif 

    return result;
    83e6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2380
}
    83e8:	4618      	mov	r0, r3
    83ea:	3730      	adds	r7, #48	; 0x30
    83ec:	46bd      	mov	sp, r7
    83ee:	bdb0      	pop	{r4, r5, r7, pc}

000083f0 <fnet_tcp_sendanydata>:
fnet_tcp_sendanydata():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2392
*
* RETURNS: TRUE if some data are sent. Otherwise
*          this function returns FALSE.       
*************************************************************************/
static int fnet_tcp_sendanydata( fnet_socket_t *sk, int oneexec )
{
    83f0:	b580      	push	{r7, lr}
    83f2:	b08a      	sub	sp, #40	; 0x28
    83f4:	af00      	add	r7, sp, #0
    83f6:	6078      	str	r0, [r7, #4]
    83f8:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2393
    fnet_tcp_control_t  *cb = (fnet_tcp_control_t *)sk->protocol_control;
    83fa:	687b      	ldr	r3, [r7, #4]
    83fc:	699b      	ldr	r3, [r3, #24]
    83fe:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2399
    long                sndwnd;     /* Size of the data that can be sent.*/
    unsigned long       cwnd;       /* Congestion window.*/
    unsigned long       sntdata;    /* Size of data that is sent.*/
    long                wnd;        /* Windows */
    long                datasize;   /* Size of the data that can be sent from the output buffer.*/
    int                 result = 0;
    8400:	2300      	movs	r3, #0
    8402:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2402
    
    /* Reset the silly window avoidance flag.*/
    cb->tcpcb_flags &= ~FNET_TCP_CBF_SEND_TIMEOUT;
    8404:	697b      	ldr	r3, [r7, #20]
    8406:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    840a:	f023 0240 	bic.w	r2, r3, #64	; 0x40
    840e:	697b      	ldr	r3, [r7, #20]
    8410:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2405

    /* Receive the size of the data that is sent.*/
    sntdata = fnet_tcp_getsize(cb->tcpcb_rcvack, cb->tcpcb_sndseq);
    8414:	697b      	ldr	r3, [r7, #20]
    8416:	68da      	ldr	r2, [r3, #12]
    8418:	697b      	ldr	r3, [r7, #20]
    841a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    841c:	4610      	mov	r0, r2
    841e:	4619      	mov	r1, r3
    8420:	f001 fc76 	bl	9d10 <fnet_tcp_getsize>
    8424:	6238      	str	r0, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2408

    /* Receive the size of the data that is allowed by the window.*/
    wnd = (long)(cb->tcpcb_sndwnd - sntdata);
    8426:	697b      	ldr	r3, [r7, #20]
    8428:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    842a:	6a3b      	ldr	r3, [r7, #32]
    842c:	1ad3      	subs	r3, r2, r3
    842e:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2410

    if(wnd < 0)
    8430:	69fb      	ldr	r3, [r7, #28]
    8432:	2b00      	cmp	r3, #0
    8434:	da0f      	bge.n	8456 <fnet_tcp_sendanydata+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2413
    {
        /* The window is shrinked.*/
        cb->tcpcb_timing_state = TCP_TS_SEGMENT_LOST;
    8436:	697b      	ldr	r3, [r7, #20]
    8438:	2202      	movs	r2, #2
    843a:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2414
        cb->tcpcb_sndseq += wnd;
    843e:	697b      	ldr	r3, [r7, #20]
    8440:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    8442:	69fb      	ldr	r3, [r7, #28]
    8444:	441a      	add	r2, r3
    8446:	697b      	ldr	r3, [r7, #20]
    8448:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2415
        sntdata += wnd;
    844a:	69fb      	ldr	r3, [r7, #28]
    844c:	6a3a      	ldr	r2, [r7, #32]
    844e:	4413      	add	r3, r2
    8450:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2416
        wnd = 0;
    8452:	2300      	movs	r3, #0
    8454:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2420
    }

    /* The size of the data in the output buffer that can be sent.*/
    datasize = (long)(sk->send_buffer.count - sntdata);
    8456:	687b      	ldr	r3, [r7, #4]
    8458:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    845a:	6a3b      	ldr	r3, [r7, #32]
    845c:	1ad3      	subs	r3, r2, r3
    845e:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2423

    /* Congestion window.*/
    cwnd = cb->tcpcb_cwnd - sntdata;
    8460:	697b      	ldr	r3, [r7, #20]
    8462:	6bda      	ldr	r2, [r3, #60]	; 0x3c
    8464:	6a3b      	ldr	r3, [r7, #32]
    8466:	1ad3      	subs	r3, r2, r3
    8468:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2424
    cwnd = ((unsigned long)(cwnd / cb->tcpcb_sndmss)) * cb->tcpcb_sndmss;
    846a:	697b      	ldr	r3, [r7, #20]
    846c:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    8470:	68fa      	ldr	r2, [r7, #12]
    8472:	fbb2 f3f3 	udiv	r3, r2, r3
    8476:	697a      	ldr	r2, [r7, #20]
    8478:	f8b2 2048 	ldrh.w	r2, [r2, #72]	; 0x48
    847c:	fb02 f303 	mul.w	r3, r2, r3
    8480:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2427

    /* Calculate sndwnd (size of the data that will be sent).*/
    if(wnd > cwnd)
    8482:	69fa      	ldr	r2, [r7, #28]
    8484:	68fb      	ldr	r3, [r7, #12]
    8486:	429a      	cmp	r2, r3
    8488:	d902      	bls.n	8490 <fnet_tcp_sendanydata+0xa0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2428
        sndwnd = (long)cwnd;
    848a:	68fb      	ldr	r3, [r7, #12]
    848c:	627b      	str	r3, [r7, #36]	; 0x24
    848e:	e001      	b.n	8494 <fnet_tcp_sendanydata+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2430
    else
        sndwnd = wnd;
    8490:	69fb      	ldr	r3, [r7, #28]
    8492:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2432

    if(sndwnd > datasize)
    8494:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    8496:	693b      	ldr	r3, [r7, #16]
    8498:	429a      	cmp	r2, r3
    849a:	dd01      	ble.n	84a0 <fnet_tcp_sendanydata+0xb0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2433
        sndwnd = datasize;
    849c:	693b      	ldr	r3, [r7, #16]
    849e:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2436

    /* If the data can't be sent.*/
    if(sndwnd <= 0)
    84a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    84a2:	2b00      	cmp	r3, #0
    84a4:	dc20      	bgt.n	84e8 <fnet_tcp_sendanydata+0xf8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2439
    {
        /* Send the final segment without data.*/
        if(sk->send_buffer.is_shutdown && !datasize && !(cb->tcpcb_flags & FNET_TCP_CBF_FIN_SENT))
    84a6:	687b      	ldr	r3, [r7, #4]
    84a8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    84aa:	2b00      	cmp	r3, #0
    84ac:	d01a      	beq.n	84e4 <fnet_tcp_sendanydata+0xf4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2439 (discriminator 1)
    84ae:	693b      	ldr	r3, [r7, #16]
    84b0:	2b00      	cmp	r3, #0
    84b2:	d117      	bne.n	84e4 <fnet_tcp_sendanydata+0xf4>
    84b4:	697b      	ldr	r3, [r7, #20]
    84b6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    84ba:	f003 0304 	and.w	r3, r3, #4
    84be:	2b00      	cmp	r3, #0
    84c0:	d110      	bne.n	84e4 <fnet_tcp_sendanydata+0xf4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2441
        {
            fnet_tcp_sendheadseg(sk, FNET_TCP_SGT_FIN | FNET_TCP_SGT_ACK, 0, 0);
    84c2:	6878      	ldr	r0, [r7, #4]
    84c4:	2111      	movs	r1, #17
    84c6:	2200      	movs	r2, #0
    84c8:	2300      	movs	r3, #0
    84ca:	f000 fdbb 	bl	9044 <fnet_tcp_sendheadseg>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2444

            /* Reinitialize the retransmission timer.*/
            if(cb->tcpcb_timers.retransmission == FNET_TCP_TIMER_OFF)
    84ce:	697b      	ldr	r3, [r7, #20]
    84d0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    84d2:	f1b3 3fff 	cmp.w	r3, #4294967295
    84d6:	d103      	bne.n	84e0 <fnet_tcp_sendanydata+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2445
                cb->tcpcb_timers.retransmission = cb->tcpcb_rto;
    84d8:	697b      	ldr	r3, [r7, #20]
    84da:	6d9a      	ldr	r2, [r3, #88]	; 0x58
    84dc:	697b      	ldr	r3, [r7, #20]
    84de:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2447

            result = 1;
    84e0:	2301      	movs	r3, #1
    84e2:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2450
        }

        return result;
    84e4:	69bb      	ldr	r3, [r7, #24]
    84e6:	e0c9      	b.n	867c <fnet_tcp_sendanydata+0x28c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2455
    }


    /* The sntdata variable will include the size of the data that is sent.*/
    sntdata = 0;
    84e8:	2300      	movs	r3, #0
    84ea:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2457

    while(sndwnd > 0)
    84ec:	e084      	b.n	85f8 <fnet_tcp_sendanydata+0x208>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2460
    {
        /* Sending of the maximal size segment.*/
        if(cb->tcpcb_sndmss <= sndwnd)
    84ee:	697b      	ldr	r3, [r7, #20]
    84f0:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    84f4:	461a      	mov	r2, r3
    84f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    84f8:	429a      	cmp	r2, r3
    84fa:	dc14      	bgt.n	8526 <fnet_tcp_sendanydata+0x136>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2463
        {
            /* Send the full sized segment.*/
            fnet_tcp_senddataseg(sk, 0, 0, cb->tcpcb_sndmss);
    84fc:	697b      	ldr	r3, [r7, #20]
    84fe:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    8502:	6878      	ldr	r0, [r7, #4]
    8504:	2100      	movs	r1, #0
    8506:	2200      	movs	r2, #0
    8508:	f000 fe7c 	bl	9204 <fnet_tcp_senddataseg>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2465

            sndwnd -= cb->tcpcb_sndmss;
    850c:	697b      	ldr	r3, [r7, #20]
    850e:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    8512:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    8514:	1ad3      	subs	r3, r2, r3
    8516:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2466
            sntdata += cb->tcpcb_sndmss;
    8518:	697b      	ldr	r3, [r7, #20]
    851a:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    851e:	6a3a      	ldr	r2, [r7, #32]
    8520:	4413      	add	r3, r2
    8522:	623b      	str	r3, [r7, #32]
    8524:	e064      	b.n	85f0 <fnet_tcp_sendanydata+0x200>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2476
             * If the data must be sent in any cases
             * If the urgent data is present
             * If the size of the input buffer of another side greater than the half of its maximal size
             * If the Nagle algorithm is blocked and all data can be sent in this segment
             * If all sent data is acknowledged and all data can be sent in this segment.*/
            if(sndwnd > (cb->tcpcb_maxwnd >> 1) 
    8526:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    8528:	697b      	ldr	r3, [r7, #20]
    852a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    852c:	085b      	lsrs	r3, r3, #1
    852e:	429a      	cmp	r2, r3
    8530:	d816      	bhi.n	8560 <fnet_tcp_sendanydata+0x170>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2477
                || (cb->tcpcb_flags & FNET_TCP_CBF_FORCE_SEND)
    8532:	697b      	ldr	r3, [r7, #20]
    8534:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    8538:	f003 0310 	and.w	r3, r3, #16
    853c:	2b00      	cmp	r3, #0
    853e:	d10f      	bne.n	8560 <fnet_tcp_sendanydata+0x170>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2479
            #if FNET_CFG_TCP_URGENT                      
                || FNET_TCP_COMP_GE(cb->tcpcb_sndurgseq, cb->tcpcb_sndseq)
    8540:	697b      	ldr	r3, [r7, #20]
    8542:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
    8544:	697b      	ldr	r3, [r7, #20]
    8546:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    8548:	f103 5200 	add.w	r2, r3, #536870912	; 0x20000000
    854c:	697b      	ldr	r3, [r7, #20]
    854e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    8550:	4608      	mov	r0, r1
    8552:	4611      	mov	r1, r2
    8554:	461a      	mov	r2, r3
    8556:	f001 fbb5 	bl	9cc4 <fnet_tcp_hit>
    855a:	4603      	mov	r3, r0
    855c:	2b00      	cmp	r3, #0
    855e:	d00a      	beq.n	8576 <fnet_tcp_sendanydata+0x186>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2484
            #endif /* FNET_CFG_TCP_URGENT */
              )
            {
                /* Send the partial segment.*/
                fnet_tcp_senddataseg(sk, 0, 0, (unsigned long)sndwnd);
    8560:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    8562:	6878      	ldr	r0, [r7, #4]
    8564:	2100      	movs	r1, #0
    8566:	2200      	movs	r2, #0
    8568:	f000 fe4c 	bl	9204 <fnet_tcp_senddataseg>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2485
                sntdata += sndwnd;
    856c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    856e:	6a3a      	ldr	r2, [r7, #32]
    8570:	4413      	add	r3, r2
    8572:	623b      	str	r3, [r7, #32]
    8574:	e03a      	b.n	85ec <fnet_tcp_sendanydata+0x1fc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2489
            }
            else
            {
                if(cb->tcpcb_rcvack == cb->tcpcb_sndseq || (sk->options.tcp_opt.flags & TCP_NODELAY))
    8576:	697b      	ldr	r3, [r7, #20]
    8578:	68da      	ldr	r2, [r3, #12]
    857a:	697b      	ldr	r3, [r7, #20]
    857c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    857e:	429a      	cmp	r2, r3
    8580:	d005      	beq.n	858e <fnet_tcp_sendanydata+0x19e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2489 (discriminator 1)
    8582:	687b      	ldr	r3, [r7, #4]
    8584:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    8586:	f003 0304 	and.w	r3, r3, #4
    858a:	2b00      	cmp	r3, #0
    858c:	d02e      	beq.n	85ec <fnet_tcp_sendanydata+0x1fc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2491
                {
                    if(sntdata + sndwnd == datasize)
    858e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    8590:	6a3b      	ldr	r3, [r7, #32]
    8592:	441a      	add	r2, r3
    8594:	693b      	ldr	r3, [r7, #16]
    8596:	429a      	cmp	r2, r3
    8598:	d10a      	bne.n	85b0 <fnet_tcp_sendanydata+0x1c0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2494
                    {
                        /* Send the partial segment.*/
                        fnet_tcp_senddataseg(sk, 0, 0, (unsigned long)sndwnd);
    859a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    859c:	6878      	ldr	r0, [r7, #4]
    859e:	2100      	movs	r1, #0
    85a0:	2200      	movs	r2, #0
    85a2:	f000 fe2f 	bl	9204 <fnet_tcp_senddataseg>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2495
                        sntdata += sndwnd;
    85a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    85a8:	6a3a      	ldr	r2, [r7, #32]
    85aa:	4413      	add	r3, r2
    85ac:	623b      	str	r3, [r7, #32]
    85ae:	e01d      	b.n	85ec <fnet_tcp_sendanydata+0x1fc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2500
                    }
                    else
                    {
                        /* Set the silly window avoidance flag.*/
                        if(cb->tcpcb_timers.persist == FNET_TCP_TIMER_OFF
    85b0:	697b      	ldr	r3, [r7, #20]
    85b2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    85b6:	f1b3 3fff 	cmp.w	r3, #4294967295
    85ba:	d006      	beq.n	85ca <fnet_tcp_sendanydata+0x1da>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2501
                               || cb->tcpcb_timers.persist > cb->tcpcb_rto)
    85bc:	697b      	ldr	r3, [r7, #20]
    85be:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
    85c2:	697b      	ldr	r3, [r7, #20]
    85c4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    85c6:	429a      	cmp	r2, r3
    85c8:	dd08      	ble.n	85dc <fnet_tcp_sendanydata+0x1ec>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2503
                        {
                            cb->tcpcb_cprto = cb->tcpcb_rto;
    85ca:	697b      	ldr	r3, [r7, #20]
    85cc:	6d9a      	ldr	r2, [r3, #88]	; 0x58
    85ce:	697b      	ldr	r3, [r7, #20]
    85d0:	661a      	str	r2, [r3, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2504
                            cb->tcpcb_timers.persist = cb->tcpcb_cprto;
    85d2:	697b      	ldr	r3, [r7, #20]
    85d4:	6e1a      	ldr	r2, [r3, #96]	; 0x60
    85d6:	697b      	ldr	r3, [r7, #20]
    85d8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2507
                        }

                        cb->tcpcb_flags |= FNET_TCP_CBF_SEND_TIMEOUT;
    85dc:	697b      	ldr	r3, [r7, #20]
    85de:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    85e2:	f043 0240 	orr.w	r2, r3, #64	; 0x40
    85e6:	697b      	ldr	r3, [r7, #20]
    85e8:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2512
                    }
                }
            }

            sndwnd = 0;
    85ec:	2300      	movs	r3, #0
    85ee:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2516
        }

        /* If the execution of the function must be without delay, return.*/
        if(oneexec)
    85f0:	683b      	ldr	r3, [r7, #0]
    85f2:	2b00      	cmp	r3, #0
    85f4:	d000      	beq.n	85f8 <fnet_tcp_sendanydata+0x208>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2517
            break;
    85f6:	e003      	b.n	8600 <fnet_tcp_sendanydata+0x210>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2457 (discriminator 1)


    /* The sntdata variable will include the size of the data that is sent.*/
    sntdata = 0;

    while(sndwnd > 0)
    85f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    85fa:	2b00      	cmp	r3, #0
    85fc:	f73f af77 	bgt.w	84ee <fnet_tcp_sendanydata+0xfe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2521
        if(oneexec)
            break;
    }

    /* If the data is sent.*/
    if(sntdata > 0)
    8600:	6a3b      	ldr	r3, [r7, #32]
    8602:	2b00      	cmp	r3, #0
    8604:	d02d      	beq.n	8662 <fnet_tcp_sendanydata+0x272>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2525
    {

        /* Process the states of round trip time measurement.*/
        if(cb->tcpcb_timing_state == TCP_TS_ACK_RECEIVED || (cb->tcpcb_timing_state == TCP_TS_SEGMENT_LOST
    8606:	697b      	ldr	r3, [r7, #20]
    8608:	f893 306c 	ldrb.w	r3, [r3, #108]	; 0x6c
    860c:	2b00      	cmp	r3, #0
    860e:	d015      	beq.n	863c <fnet_tcp_sendanydata+0x24c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2525 (discriminator 1)
    8610:	697b      	ldr	r3, [r7, #20]
    8612:	f893 306c 	ldrb.w	r3, [r3, #108]	; 0x6c
    8616:	2b02      	cmp	r3, #2
    8618:	d11c      	bne.n	8654 <fnet_tcp_sendanydata+0x264>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2526
               && FNET_TCP_COMP_G(cb->tcpcb_sndseq, cb->tcpcb_timingack)))
    861a:	697b      	ldr	r3, [r7, #20]
    861c:	695b      	ldr	r3, [r3, #20]
    861e:	1c59      	adds	r1, r3, #1
    8620:	697b      	ldr	r3, [r7, #20]
    8622:	695b      	ldr	r3, [r3, #20]
    8624:	f103 5200 	add.w	r2, r3, #536870912	; 0x20000000
    8628:	697b      	ldr	r3, [r7, #20]
    862a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    862c:	4608      	mov	r0, r1
    862e:	4611      	mov	r1, r2
    8630:	461a      	mov	r2, r3
    8632:	f001 fb47 	bl	9cc4 <fnet_tcp_hit>
    8636:	4603      	mov	r3, r0
    8638:	2b00      	cmp	r3, #0
    863a:	d00b      	beq.n	8654 <fnet_tcp_sendanydata+0x264>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2528
        {
            cb->tcpcb_timingack = cb->tcpcb_sndseq;
    863c:	697b      	ldr	r3, [r7, #20]
    863e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    8640:	697b      	ldr	r3, [r7, #20]
    8642:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2529
            cb->tcpcb_timers.round_trip = FNET_TCP_TIMER_ON_INCREMENT;
    8644:	697b      	ldr	r3, [r7, #20]
    8646:	2200      	movs	r2, #0
    8648:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2531

            cb->tcpcb_timing_state = TCP_TS_SEGMENT_SENT;
    864c:	697b      	ldr	r3, [r7, #20]
    864e:	2201      	movs	r2, #1
    8650:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2534
        }

        result = 1;
    8654:	2301      	movs	r3, #1
    8656:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2535
        cb->tcpcb_timers.persist = FNET_TCP_TIMER_OFF;
    8658:	697b      	ldr	r3, [r7, #20]
    865a:	f04f 32ff 	mov.w	r2, #4294967295
    865e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2539
    }

    /* Reinitialize the retransmission timer.*/
    if(sntdata > 0 && cb->tcpcb_timers.retransmission == FNET_TCP_TIMER_OFF)
    8662:	6a3b      	ldr	r3, [r7, #32]
    8664:	2b00      	cmp	r3, #0
    8666:	d008      	beq.n	867a <fnet_tcp_sendanydata+0x28a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2539 (discriminator 1)
    8668:	697b      	ldr	r3, [r7, #20]
    866a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    866c:	f1b3 3fff 	cmp.w	r3, #4294967295
    8670:	d103      	bne.n	867a <fnet_tcp_sendanydata+0x28a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2540
        cb->tcpcb_timers.retransmission = cb->tcpcb_rto;
    8672:	697b      	ldr	r3, [r7, #20]
    8674:	6d9a      	ldr	r2, [r3, #88]	; 0x58
    8676:	697b      	ldr	r3, [r7, #20]
    8678:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2542

    return result;
    867a:	69bb      	ldr	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2543
}
    867c:	4618      	mov	r0, r3
    867e:	3728      	adds	r7, #40	; 0x28
    8680:	46bd      	mov	sp, r7
    8682:	bd80      	pop	{r7, pc}

00008684 <fnet_tcp_urgprocessing>:
fnet_tcp_urgprocessing():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2555
*
* RETURNS: None.              
*************************************************************************/
static void fnet_tcp_urgprocessing( fnet_socket_t *sk, fnet_netbuf_t ** segment, unsigned long repdatasize,
                                    int *ackparam )
{
    8684:	b580      	push	{r7, lr}
    8686:	b088      	sub	sp, #32
    8688:	af00      	add	r7, sp, #0
    868a:	60f8      	str	r0, [r7, #12]
    868c:	60b9      	str	r1, [r7, #8]
    868e:	607a      	str	r2, [r7, #4]
    8690:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2556
    fnet_tcp_control_t  *cb = (fnet_tcp_control_t *)sk->protocol_control;
    8692:	68fb      	ldr	r3, [r7, #12]
    8694:	699b      	ldr	r3, [r3, #24]
    8696:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2563
    unsigned short      uoffset;  
    fnet_netbuf_t       *buf;
    unsigned long       tcp_seq;
    

    buf = (fnet_netbuf_t *) *segment;
    8698:	68bb      	ldr	r3, [r7, #8]
    869a:	681b      	ldr	r3, [r3, #0]
    869c:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2567
    

    /* Receive the urgent pointer.*/
    upointer = fnet_ntohs(FNET_TCP_URG(buf));
    869e:	69bb      	ldr	r3, [r7, #24]
    86a0:	68db      	ldr	r3, [r3, #12]
    86a2:	3312      	adds	r3, #18
    86a4:	881b      	ldrh	r3, [r3, #0]
    86a6:	4618      	mov	r0, r3
    86a8:	f006 ff3a 	bl	f520 <fnet_htons>
    86ac:	4603      	mov	r3, r0
    86ae:	83fb      	strh	r3, [r7, #30]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2570

    /* Different interpretation of the urgent pointer in the TCP header.*/
    if(sk->options.tcp_opt.flags & TCP_BSD)
    86b0:	68fb      	ldr	r3, [r7, #12]
    86b2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    86b4:	f003 0302 	and.w	r3, r3, #2
    86b8:	2b00      	cmp	r3, #0
    86ba:	d006      	beq.n	86ca <fnet_tcp_urgprocessing+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2573
    {
        /* BSD interpretation.*/
        if(!upointer)
    86bc:	8bfb      	ldrh	r3, [r7, #30]
    86be:	2b00      	cmp	r3, #0
    86c0:	d100      	bne.n	86c4 <fnet_tcp_urgprocessing+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2574
            return;
    86c2:	e0a9      	b.n	8818 <fnet_tcp_urgprocessing+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2576

        upointer--;
    86c4:	8bfb      	ldrh	r3, [r7, #30]
    86c6:	3b01      	subs	r3, #1
    86c8:	83fb      	strh	r3, [r7, #30]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2580
    }

    /*  Only  the new data must be processed.*/
    if(upointer < repdatasize || (repdatasize && (buf->total_length - FNET_TCP_LENGTH(buf) <= repdatasize)))
    86ca:	8bfa      	ldrh	r2, [r7, #30]
    86cc:	687b      	ldr	r3, [r7, #4]
    86ce:	429a      	cmp	r2, r3
    86d0:	d313      	bcc.n	86fa <fnet_tcp_urgprocessing+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2580 (discriminator 1)
    86d2:	687b      	ldr	r3, [r7, #4]
    86d4:	2b00      	cmp	r3, #0
    86d6:	d011      	beq.n	86fc <fnet_tcp_urgprocessing+0x78>
    86d8:	69bb      	ldr	r3, [r7, #24]
    86da:	6959      	ldr	r1, [r3, #20]
    86dc:	69bb      	ldr	r3, [r7, #24]
    86de:	68db      	ldr	r3, [r3, #12]
    86e0:	330c      	adds	r3, #12
    86e2:	781b      	ldrb	r3, [r3, #0]
    86e4:	091b      	lsrs	r3, r3, #4
    86e6:	b2db      	uxtb	r3, r3
    86e8:	461a      	mov	r2, r3
    86ea:	4613      	mov	r3, r2
    86ec:	079b      	lsls	r3, r3, #30
    86ee:	1a9b      	subs	r3, r3, r2
    86f0:	009b      	lsls	r3, r3, #2
    86f2:	18ca      	adds	r2, r1, r3
    86f4:	687b      	ldr	r3, [r7, #4]
    86f6:	429a      	cmp	r2, r3
    86f8:	d800      	bhi.n	86fc <fnet_tcp_urgprocessing+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2581
        return;
    86fa:	e08d      	b.n	8818 <fnet_tcp_urgprocessing+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2583
    
    tcp_seq = fnet_ntohl(FNET_TCP_SEQ(buf));
    86fc:	69bb      	ldr	r3, [r7, #24]
    86fe:	68db      	ldr	r3, [r3, #12]
    8700:	3304      	adds	r3, #4
    8702:	681b      	ldr	r3, [r3, #0]
    8704:	4618      	mov	r0, r3
    8706:	f006 ff21 	bl	f54c <fnet_htonl>
    870a:	6138      	str	r0, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2586
    
    /* Receive the new urgent pointer.*/
    if(FNET_TCP_COMP_G(tcp_seq + upointer, cb->tcpcb_rcvurgseq)) 
    870c:	697b      	ldr	r3, [r7, #20]
    870e:	6a1b      	ldr	r3, [r3, #32]
    8710:	1c59      	adds	r1, r3, #1
    8712:	697b      	ldr	r3, [r7, #20]
    8714:	6a1b      	ldr	r3, [r3, #32]
    8716:	f103 5200 	add.w	r2, r3, #536870912	; 0x20000000
    871a:	8bf8      	ldrh	r0, [r7, #30]
    871c:	693b      	ldr	r3, [r7, #16]
    871e:	4403      	add	r3, r0
    8720:	4608      	mov	r0, r1
    8722:	4611      	mov	r1, r2
    8724:	461a      	mov	r2, r3
    8726:	f001 facd 	bl	9cc4 <fnet_tcp_hit>
    872a:	4603      	mov	r3, r0
    872c:	2b00      	cmp	r3, #0
    872e:	d005      	beq.n	873c <fnet_tcp_urgprocessing+0xb8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2587
        cb->tcpcb_rcvurgseq = tcp_seq + upointer;
    8730:	8bfa      	ldrh	r2, [r7, #30]
    8732:	693b      	ldr	r3, [r7, #16]
    8734:	441a      	add	r2, r3
    8736:	697b      	ldr	r3, [r7, #20]
    8738:	621a      	str	r2, [r3, #32]
    873a:	e006      	b.n	874a <fnet_tcp_urgprocessing+0xc6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2589
    else
        upointer = (unsigned short)(cb->tcpcb_rcvurgseq - tcp_seq);
    873c:	697b      	ldr	r3, [r7, #20]
    873e:	6a1b      	ldr	r3, [r3, #32]
    8740:	b29a      	uxth	r2, r3
    8742:	693b      	ldr	r3, [r7, #16]
    8744:	b29b      	uxth	r3, r3
    8746:	1ad3      	subs	r3, r2, r3
    8748:	83fb      	strh	r3, [r7, #30]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2592

    /* If the urgent byte is not in this segment.*/
    if(upointer >= buf->total_length - FNET_TCP_LENGTH(buf))
    874a:	8bf9      	ldrh	r1, [r7, #30]
    874c:	69bb      	ldr	r3, [r7, #24]
    874e:	6958      	ldr	r0, [r3, #20]
    8750:	69bb      	ldr	r3, [r7, #24]
    8752:	68db      	ldr	r3, [r3, #12]
    8754:	330c      	adds	r3, #12
    8756:	781b      	ldrb	r3, [r3, #0]
    8758:	091b      	lsrs	r3, r3, #4
    875a:	b2db      	uxtb	r3, r3
    875c:	461a      	mov	r2, r3
    875e:	4613      	mov	r3, r2
    8760:	079b      	lsls	r3, r3, #30
    8762:	1a9b      	subs	r3, r3, r2
    8764:	009b      	lsls	r3, r3, #2
    8766:	4403      	add	r3, r0
    8768:	4299      	cmp	r1, r3
    876a:	d300      	bcc.n	876e <fnet_tcp_urgprocessing+0xea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2593
        return;
    876c:	e054      	b.n	8818 <fnet_tcp_urgprocessing+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2596

    /* Set the number of bytes before the urgent character.*/
    cb->tcpcb_rcvurgmark = (long)(sk->receive_buffer.count + upointer);
    876e:	68fb      	ldr	r3, [r7, #12]
    8770:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    8772:	8bfb      	ldrh	r3, [r7, #30]
    8774:	4413      	add	r3, r2
    8776:	461a      	mov	r2, r3
    8778:	697b      	ldr	r3, [r7, #20]
    877a:	625a      	str	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2599

    /* If the urgent data must be in the stream, return from this function. */
    if(sk->options.flags & SO_OOBINLINE)
    877c:	68fb      	ldr	r3, [r7, #12]
    877e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    8782:	f003 0310 	and.w	r3, r3, #16
    8786:	2b00      	cmp	r3, #0
    8788:	d000      	beq.n	878c <fnet_tcp_urgprocessing+0x108>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2600
        return;
    878a:	e045      	b.n	8818 <fnet_tcp_urgprocessing+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2603

    /* Find and read the urgent byte.*/
    uoffset = (unsigned short)(upointer + FNET_TCP_LENGTH(buf));
    878c:	69bb      	ldr	r3, [r7, #24]
    878e:	68db      	ldr	r3, [r3, #12]
    8790:	330c      	adds	r3, #12
    8792:	781b      	ldrb	r3, [r3, #0]
    8794:	091b      	lsrs	r3, r3, #4
    8796:	b2db      	uxtb	r3, r3
    8798:	009b      	lsls	r3, r3, #2
    879a:	b29a      	uxth	r2, r3
    879c:	8bfb      	ldrh	r3, [r7, #30]
    879e:	4413      	add	r3, r2
    87a0:	83bb      	strh	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2605

    while(uoffset >= buf->length)
    87a2:	e008      	b.n	87b6 <fnet_tcp_urgprocessing+0x132>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2607
    {
        uoffset -= buf->length;
    87a4:	69bb      	ldr	r3, [r7, #24]
    87a6:	691b      	ldr	r3, [r3, #16]
    87a8:	b29b      	uxth	r3, r3
    87aa:	8bba      	ldrh	r2, [r7, #28]
    87ac:	1ad3      	subs	r3, r2, r3
    87ae:	83bb      	strh	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2608
        buf = buf->next;
    87b0:	69bb      	ldr	r3, [r7, #24]
    87b2:	681b      	ldr	r3, [r3, #0]
    87b4:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2605 (discriminator 1)
        return;

    /* Find and read the urgent byte.*/
    uoffset = (unsigned short)(upointer + FNET_TCP_LENGTH(buf));

    while(uoffset >= buf->length)
    87b6:	8bba      	ldrh	r2, [r7, #28]
    87b8:	69bb      	ldr	r3, [r7, #24]
    87ba:	691b      	ldr	r3, [r3, #16]
    87bc:	429a      	cmp	r2, r3
    87be:	d2f1      	bcs.n	87a4 <fnet_tcp_urgprocessing+0x120>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2611
    {
        uoffset -= buf->length;
        buf = buf->next;
    }

    cb->tcpcb_flags |= FNET_TCP_CBF_RCVURGENT;
    87c0:	697b      	ldr	r3, [r7, #20]
    87c2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    87c6:	f043 0202 	orr.w	r2, r3, #2
    87ca:	697b      	ldr	r3, [r7, #20]
    87cc:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2612
    cb->tcpcb_iobc = (char)FNET_TCP_GETUCHAR(buf->data_ptr, uoffset);
    87d0:	69bb      	ldr	r3, [r7, #24]
    87d2:	68db      	ldr	r3, [r3, #12]
    87d4:	461a      	mov	r2, r3
    87d6:	8bbb      	ldrh	r3, [r7, #28]
    87d8:	4413      	add	r3, r2
    87da:	781b      	ldrb	r3, [r3, #0]
    87dc:	b2da      	uxtb	r2, r3
    87de:	697b      	ldr	r3, [r7, #20]
    87e0:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2613
    cb->tcpcb_sndack++;
    87e4:	697b      	ldr	r3, [r7, #20]
    87e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    87e8:	1c5a      	adds	r2, r3, #1
    87ea:	697b      	ldr	r3, [r7, #20]
    87ec:	631a      	str	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2616

    /* Delete the urgent byte from the stream.*/
    fnet_netbuf_cut_center(segment, upointer + FNET_TCP_LENGTH((fnet_netbuf_t *)(*segment)), FNET_TRUE );
    87ee:	8bfa      	ldrh	r2, [r7, #30]
    87f0:	68bb      	ldr	r3, [r7, #8]
    87f2:	681b      	ldr	r3, [r3, #0]
    87f4:	68db      	ldr	r3, [r3, #12]
    87f6:	330c      	adds	r3, #12
    87f8:	781b      	ldrb	r3, [r3, #0]
    87fa:	091b      	lsrs	r3, r3, #4
    87fc:	b2db      	uxtb	r3, r3
    87fe:	009b      	lsls	r3, r3, #2
    8800:	4413      	add	r3, r2
    8802:	68b8      	ldr	r0, [r7, #8]
    8804:	4619      	mov	r1, r3
    8806:	2201      	movs	r2, #1
    8808:	f7fa faf4 	bl	2df4 <fnet_netbuf_cut_center>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2619

    /* Acknowledgment must be sent immediately.*/
    *ackparam |= FNET_TCP_AP_SEND_IMMEDIATELLY;
    880c:	683b      	ldr	r3, [r7, #0]
    880e:	681b      	ldr	r3, [r3, #0]
    8810:	f043 0202 	orr.w	r2, r3, #2
    8814:	683b      	ldr	r3, [r7, #0]
    8816:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2621

}
    8818:	3720      	adds	r7, #32
    881a:	46bd      	mov	sp, r7
    881c:	bd80      	pop	{r7, pc}
    881e:	bf00      	nop

00008820 <fnet_tcp_finprocessing>:
fnet_tcp_finprocessing():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2632
* DESCRIPTION: This function processes the final segment.
*     
* RETURNS: None.         
*************************************************************************/
static void fnet_tcp_finprocessing( fnet_socket_t *sk, unsigned long ack )
{
    8820:	b480      	push	{r7}
    8822:	b085      	sub	sp, #20
    8824:	af00      	add	r7, sp, #0
    8826:	6078      	str	r0, [r7, #4]
    8828:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2635

    /* Initialize the pointer to the control block.*/
    fnet_tcp_control_t  *cb = (fnet_tcp_control_t *)sk->protocol_control;
    882a:	687b      	ldr	r3, [r7, #4]
    882c:	699b      	ldr	r3, [r3, #24]
    882e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2638
    
    /* Process the final segment depend on state.*/
    switch(cb->tcpcb_connection_state)
    8830:	68fb      	ldr	r3, [r7, #12]
    8832:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    8836:	2b05      	cmp	r3, #5
    8838:	d009      	beq.n	884e <fnet_tcp_finprocessing+0x2e>
    883a:	2b06      	cmp	r3, #6
    883c:	d011      	beq.n	8862 <fnet_tcp_finprocessing+0x42>
    883e:	2b04      	cmp	r3, #4
    8840:	d000      	beq.n	8844 <fnet_tcp_finprocessing+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2665
          
            cb->tcpcb_timers.keepalive = FNET_TCP_TIMER_OFF;
            break;

        default:
            return;
    8842:	e026      	b.n	8892 <fnet_tcp_finprocessing+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2641
    
    /* Process the final segment depend on state.*/
    switch(cb->tcpcb_connection_state)
    {
        case FNET_TCP_CS_ESTABLISHED:
            cb->tcpcb_connection_state = FNET_TCP_CS_CLOSE_WAIT;
    8844:	68fb      	ldr	r3, [r7, #12]
    8846:	2207      	movs	r2, #7
    8848:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2645
        /*RStevens: The connection can remain in this state forever. 
         * The other end is still in the CLOSE_WAIT state, and can remain 
         * there forever, until the application decides to issue its close.*/ 
            break;
    884c:	e019      	b.n	8882 <fnet_tcp_finprocessing+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2648

        case FNET_TCP_CS_FIN_WAIT_1:
            if(ack != cb->tcpcb_sndseq)
    884e:	68fb      	ldr	r3, [r7, #12]
    8850:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    8852:	683b      	ldr	r3, [r7, #0]
    8854:	429a      	cmp	r2, r3
    8856:	d004      	beq.n	8862 <fnet_tcp_finprocessing+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2651
            {
                /* Simultaneous close.*/
                cb->tcpcb_connection_state = FNET_TCP_CS_CLOSING;
    8858:	68fb      	ldr	r3, [r7, #12]
    885a:	2208      	movs	r2, #8
    885c:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2652
                break;
    8860:	e00f      	b.n	8882 <fnet_tcp_finprocessing+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2656
            }

        case FNET_TCP_CS_FIN_WAIT_2:
            cb->tcpcb_connection_state = FNET_TCP_CS_TIME_WAIT;
    8862:	68fb      	ldr	r3, [r7, #12]
    8864:	220a      	movs	r2, #10
    8866:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2658
            /* Set timewait timeout.*/
            if(cb->tcpcb_timers.connection <= 0) /* If it was already set before by other state. */          
    886a:	68fb      	ldr	r3, [r7, #12]
    886c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
    886e:	2b00      	cmp	r3, #0
    8870:	dc02      	bgt.n	8878 <fnet_tcp_finprocessing+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2659
                cb->tcpcb_timers.connection = FNET_TCP_TIME_WAIT;
    8872:	68fb      	ldr	r3, [r7, #12]
    8874:	2230      	movs	r2, #48	; 0x30
    8876:	679a      	str	r2, [r3, #120]	; 0x78
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2661
          
            cb->tcpcb_timers.keepalive = FNET_TCP_TIMER_OFF;
    8878:	68fb      	ldr	r3, [r7, #12]
    887a:	f04f 32ff 	mov.w	r2, #4294967295
    887e:	675a      	str	r2, [r3, #116]	; 0x74
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2662
            break;
    8880:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2668

        default:
            return;
    }

    cb->tcpcb_flags |= FNET_TCP_CBF_FIN_RCVD;
    8882:	68fb      	ldr	r3, [r7, #12]
    8884:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    8888:	f043 0208 	orr.w	r2, r3, #8
    888c:	68fb      	ldr	r3, [r7, #12]
    888e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2670

}
    8892:	3714      	adds	r7, #20
    8894:	46bd      	mov	sp, r7
    8896:	f85d 7b04 	ldr.w	r7, [sp], #4
    889a:	4770      	bx	lr

0000889c <fnet_tcp_getrcvwnd>:
fnet_tcp_getrcvwnd():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2680
* DESCRIPTION: This function receives a new window size. 
*   
* RETURNS: The new window.              
*************************************************************************/
static unsigned long fnet_tcp_getrcvwnd( fnet_socket_t *sk )
{
    889c:	b480      	push	{r7}
    889e:	b087      	sub	sp, #28
    88a0:	af00      	add	r7, sp, #0
    88a2:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2685
    long wnd; 
    unsigned long rcvwnd;
    
    /* Initialize the pointer to the control block.*/
    fnet_tcp_control_t *cb = (fnet_tcp_control_t *)sk->protocol_control;
    88a4:	687b      	ldr	r3, [r7, #4]
    88a6:	699b      	ldr	r3, [r3, #24]
    88a8:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2687

    rcvwnd = cb->tcpcb_rcvwnd;
    88aa:	68fb      	ldr	r3, [r7, #12]
    88ac:	699b      	ldr	r3, [r3, #24]
    88ae:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2690

    /* Set the receive window size.*/
    wnd = (long)(cb->tcpcb_rcvcountmax - sk->receive_buffer.count);
    88b0:	68fb      	ldr	r3, [r7, #12]
    88b2:	689a      	ldr	r2, [r3, #8]
    88b4:	687b      	ldr	r3, [r7, #4]
    88b6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    88b8:	1ad3      	subs	r3, r2, r3
    88ba:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2692

    if(wnd < 0)
    88bc:	697b      	ldr	r3, [r7, #20]
    88be:	2b00      	cmp	r3, #0
    88c0:	da01      	bge.n	88c6 <fnet_tcp_getrcvwnd+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2693
        wnd = 0;
    88c2:	2300      	movs	r3, #0
    88c4:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2695

    if(rcvwnd < wnd)
    88c6:	697a      	ldr	r2, [r7, #20]
    88c8:	693b      	ldr	r3, [r7, #16]
    88ca:	429a      	cmp	r2, r3
    88cc:	d914      	bls.n	88f8 <fnet_tcp_getrcvwnd+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2698
    {
        /* Window can be opened only on condition that*/
        if(wnd - rcvwnd >= cb->tcpcb_rcvmss || wnd - rcvwnd >= (cb->tcpcb_rcvcountmax >> 1) || !rcvwnd)
    88ce:	697a      	ldr	r2, [r7, #20]
    88d0:	693b      	ldr	r3, [r7, #16]
    88d2:	1ad2      	subs	r2, r2, r3
    88d4:	68fb      	ldr	r3, [r7, #12]
    88d6:	8b9b      	ldrh	r3, [r3, #28]
    88d8:	429a      	cmp	r2, r3
    88da:	d20a      	bcs.n	88f2 <fnet_tcp_getrcvwnd+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2698 (discriminator 1)
    88dc:	697a      	ldr	r2, [r7, #20]
    88de:	693b      	ldr	r3, [r7, #16]
    88e0:	1ad2      	subs	r2, r2, r3
    88e2:	68fb      	ldr	r3, [r7, #12]
    88e4:	689b      	ldr	r3, [r3, #8]
    88e6:	085b      	lsrs	r3, r3, #1
    88e8:	429a      	cmp	r2, r3
    88ea:	d202      	bcs.n	88f2 <fnet_tcp_getrcvwnd+0x56>
    88ec:	693b      	ldr	r3, [r7, #16]
    88ee:	2b00      	cmp	r3, #0
    88f0:	d104      	bne.n	88fc <fnet_tcp_getrcvwnd+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2699
            rcvwnd = (unsigned long)wnd;
    88f2:	697b      	ldr	r3, [r7, #20]
    88f4:	613b      	str	r3, [r7, #16]
    88f6:	e001      	b.n	88fc <fnet_tcp_getrcvwnd+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2703
    }
    else
    {
        rcvwnd = (unsigned long)wnd;
    88f8:	697b      	ldr	r3, [r7, #20]
    88fa:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2706
    }

    return rcvwnd;
    88fc:	693b      	ldr	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2707
}
    88fe:	4618      	mov	r0, r3
    8900:	371c      	adds	r7, #28
    8902:	46bd      	mov	sp, r7
    8904:	f85d 7b04 	ldr.w	r7, [sp], #4
    8908:	4770      	bx	lr
    890a:	bf00      	nop

0000890c <fnet_tcp_slowtimo>:
fnet_tcp_slowtimo():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2718
*              (fnet_tcp_slowtimo is performed every 500 ms).
*
* RETURNS: None. 
*************************************************************************/
static void fnet_tcp_slowtimo(void *cookie)
{
    890c:	b580      	push	{r7, lr}
    890e:	b086      	sub	sp, #24
    8910:	af00      	add	r7, sp, #0
    8912:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2725
    fnet_socket_t *addedsk; 
    fnet_socket_t *nextsk;

    FNET_COMP_UNUSED_ARG(cookie);      

    fnet_isr_lock();
    8914:	f7f9 fc9c 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2726
    sk = fnet_tcp_prot_if.head;
    8918:	4b1b      	ldr	r3, [pc, #108]	; (8988 <fnet_tcp_slowtimo+0x7c>)
    891a:	681b      	ldr	r3, [r3, #0]
    891c:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2728

    while(sk)
    891e:	e025      	b.n	896c <fnet_tcp_slowtimo+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2730
    {
        addedsk = sk->partial_con;
    8920:	697b      	ldr	r3, [r7, #20]
    8922:	69db      	ldr	r3, [r3, #28]
    8924:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2732

        while(addedsk)
    8926:	e007      	b.n	8938 <fnet_tcp_slowtimo+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2734
        {
            nextsk = addedsk->next;
    8928:	693b      	ldr	r3, [r7, #16]
    892a:	681b      	ldr	r3, [r3, #0]
    892c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2736
            /* Process the partial sockets.*/
            fnet_tcp_slowtimosk(addedsk);
    892e:	6938      	ldr	r0, [r7, #16]
    8930:	f000 f856 	bl	89e0 <fnet_tcp_slowtimosk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2737
            addedsk = nextsk;
    8934:	68fb      	ldr	r3, [r7, #12]
    8936:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2732 (discriminator 1)

    while(sk)
    {
        addedsk = sk->partial_con;

        while(addedsk)
    8938:	693b      	ldr	r3, [r7, #16]
    893a:	2b00      	cmp	r3, #0
    893c:	d1f4      	bne.n	8928 <fnet_tcp_slowtimo+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2740
            /* Process the partial sockets.*/
            fnet_tcp_slowtimosk(addedsk);
            addedsk = nextsk;
        }

        addedsk = sk->incoming_con;
    893e:	697b      	ldr	r3, [r7, #20]
    8940:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    8942:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2742

        while(addedsk)
    8944:	e007      	b.n	8956 <fnet_tcp_slowtimo+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2744
        {
            nextsk = addedsk->next;
    8946:	693b      	ldr	r3, [r7, #16]
    8948:	681b      	ldr	r3, [r3, #0]
    894a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2746
            /* Process the incoming sockets.*/
            fnet_tcp_slowtimosk(addedsk);
    894c:	6938      	ldr	r0, [r7, #16]
    894e:	f000 f847 	bl	89e0 <fnet_tcp_slowtimosk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2747
            addedsk = nextsk;
    8952:	68fb      	ldr	r3, [r7, #12]
    8954:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2742 (discriminator 1)
            addedsk = nextsk;
        }

        addedsk = sk->incoming_con;

        while(addedsk)
    8956:	693b      	ldr	r3, [r7, #16]
    8958:	2b00      	cmp	r3, #0
    895a:	d1f4      	bne.n	8946 <fnet_tcp_slowtimo+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2751
            fnet_tcp_slowtimosk(addedsk);
            addedsk = nextsk;
        }

        /* Processg the main socket.*/
        nextsk = sk->next;
    895c:	697b      	ldr	r3, [r7, #20]
    895e:	681b      	ldr	r3, [r3, #0]
    8960:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2752
        fnet_tcp_slowtimosk(sk);
    8962:	6978      	ldr	r0, [r7, #20]
    8964:	f000 f83c 	bl	89e0 <fnet_tcp_slowtimosk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2753
        sk = nextsk;
    8968:	68fb      	ldr	r3, [r7, #12]
    896a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2728 (discriminator 1)
    FNET_COMP_UNUSED_ARG(cookie);      

    fnet_isr_lock();
    sk = fnet_tcp_prot_if.head;

    while(sk)
    896c:	697b      	ldr	r3, [r7, #20]
    896e:	2b00      	cmp	r3, #0
    8970:	d1d6      	bne.n	8920 <fnet_tcp_slowtimo+0x14>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2756
        nextsk = sk->next;
        fnet_tcp_slowtimosk(sk);
        sk = nextsk;
    }

    fnet_tcp_isntime += FNET_TCP_STEPISN;
    8972:	4b06      	ldr	r3, [pc, #24]	; (898c <fnet_tcp_slowtimo+0x80>)
    8974:	681b      	ldr	r3, [r3, #0]
    8976:	f503 427a 	add.w	r2, r3, #64000	; 0xfa00
    897a:	4b04      	ldr	r3, [pc, #16]	; (898c <fnet_tcp_slowtimo+0x80>)
    897c:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2758

    fnet_isr_unlock();
    897e:	f7f9 fc75 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2759
}
    8982:	3718      	adds	r7, #24
    8984:	46bd      	mov	sp, r7
    8986:	bd80      	pop	{r7, pc}
    8988:	10000058 	.word	0x10000058
    898c:	10000054 	.word	0x10000054

00008990 <fnet_tcp_fasttimo>:
fnet_tcp_fasttimo():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2770
*              (fnet_tcp_fasttimo is performed every 200 ms).
*
* RETURNS: None. 
*************************************************************************/
static void fnet_tcp_fasttimo( void *cookie )
{
    8990:	b580      	push	{r7, lr}
    8992:	b084      	sub	sp, #16
    8994:	af00      	add	r7, sp, #0
    8996:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2776
    fnet_socket_t *sk; 
    fnet_socket_t *addedsk;
    
    FNET_COMP_UNUSED_ARG(cookie);
    
    fnet_isr_lock();
    8998:	f7f9 fc5a 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2777
    sk = fnet_tcp_prot_if.head;
    899c:	4b0f      	ldr	r3, [pc, #60]	; (89dc <fnet_tcp_fasttimo+0x4c>)
    899e:	681b      	ldr	r3, [r3, #0]
    89a0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2779

    while(sk)
    89a2:	e012      	b.n	89ca <fnet_tcp_fasttimo+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2781
    {
        fnet_tcp_fasttimosk(sk);
    89a4:	68f8      	ldr	r0, [r7, #12]
    89a6:	f000 f8d3 	bl	8b50 <fnet_tcp_fasttimosk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2782
        addedsk = sk->incoming_con;
    89aa:	68fb      	ldr	r3, [r7, #12]
    89ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    89ae:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2784

        while(addedsk)
    89b0:	e005      	b.n	89be <fnet_tcp_fasttimo+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2786
        {
            fnet_tcp_fasttimosk(addedsk);
    89b2:	68b8      	ldr	r0, [r7, #8]
    89b4:	f000 f8cc 	bl	8b50 <fnet_tcp_fasttimosk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2787
            addedsk = addedsk->next;
    89b8:	68bb      	ldr	r3, [r7, #8]
    89ba:	681b      	ldr	r3, [r3, #0]
    89bc:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2784 (discriminator 1)
    while(sk)
    {
        fnet_tcp_fasttimosk(sk);
        addedsk = sk->incoming_con;

        while(addedsk)
    89be:	68bb      	ldr	r3, [r7, #8]
    89c0:	2b00      	cmp	r3, #0
    89c2:	d1f6      	bne.n	89b2 <fnet_tcp_fasttimo+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2790
        {
            fnet_tcp_fasttimosk(addedsk);
            addedsk = addedsk->next;
        }

        sk = sk->next;
    89c4:	68fb      	ldr	r3, [r7, #12]
    89c6:	681b      	ldr	r3, [r3, #0]
    89c8:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2779 (discriminator 1)
    FNET_COMP_UNUSED_ARG(cookie);
    
    fnet_isr_lock();
    sk = fnet_tcp_prot_if.head;

    while(sk)
    89ca:	68fb      	ldr	r3, [r7, #12]
    89cc:	2b00      	cmp	r3, #0
    89ce:	d1e9      	bne.n	89a4 <fnet_tcp_fasttimo+0x14>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2793
        }

        sk = sk->next;
    }

    fnet_isr_unlock();
    89d0:	f7f9 fc4c 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2794
}
    89d4:	3710      	adds	r7, #16
    89d6:	46bd      	mov	sp, r7
    89d8:	bd80      	pop	{r7, pc}
    89da:	bf00      	nop
    89dc:	10000058 	.word	0x10000058

000089e0 <fnet_tcp_slowtimosk>:
fnet_tcp_slowtimosk():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2805
*              (fnet_tcp_slowtimosk is performed every 500 ms).
*
* RETURNS: None. 
*************************************************************************/
static void fnet_tcp_slowtimosk( fnet_socket_t *sk )
{
    89e0:	b580      	push	{r7, lr}
    89e2:	b084      	sub	sp, #16
    89e4:	af00      	add	r7, sp, #0
    89e6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2807

    fnet_tcp_control_t *cb = (fnet_tcp_control_t *)sk->protocol_control;
    89e8:	687b      	ldr	r3, [r7, #4]
    89ea:	699b      	ldr	r3, [r3, #24]
    89ec:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2811

    
    /* If the socket is not connected, return.*/
    if(sk->state != SS_UNCONNECTED)
    89ee:	687b      	ldr	r3, [r7, #4]
    89f0:	7b1b      	ldrb	r3, [r3, #12]
    89f2:	2b00      	cmp	r3, #0
    89f4:	f000 80a8 	beq.w	8b48 <fnet_tcp_slowtimosk+0x168>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2814
    {
        /* Check the abort timer.*/
        if(cb->tcpcb_timers.abort != FNET_TCP_TIMER_OFF)
    89f8:	68fb      	ldr	r3, [r7, #12]
    89fa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    89fc:	f1b3 3fff 	cmp.w	r3, #4294967295
    8a00:	d019      	beq.n	8a36 <fnet_tcp_slowtimosk+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2816
        {
            cb->tcpcb_timers.abort--;
    8a02:	68fb      	ldr	r3, [r7, #12]
    8a04:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    8a06:	1e5a      	subs	r2, r3, #1
    8a08:	68fb      	ldr	r3, [r7, #12]
    8a0a:	671a      	str	r2, [r3, #112]	; 0x70
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2818

            if(!cb->tcpcb_timers.abort)
    8a0c:	68fb      	ldr	r3, [r7, #12]
    8a0e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    8a10:	2b00      	cmp	r3, #0
    8a12:	d110      	bne.n	8a36 <fnet_tcp_slowtimosk+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2820
            {
                cb->tcpcb_timers.abort = FNET_TCP_TIMER_OFF;
    8a14:	68fb      	ldr	r3, [r7, #12]
    8a16:	f04f 32ff 	mov.w	r2, #4294967295
    8a1a:	671a      	str	r2, [r3, #112]	; 0x70
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2822

                if(sk->options.local_error != FNET_ERR_HOSTUNREACH)
    8a1c:	687b      	ldr	r3, [r7, #4]
    8a1e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    8a22:	2b18      	cmp	r3, #24
    8a24:	d003      	beq.n	8a2e <fnet_tcp_slowtimosk+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2823
                    sk->options.local_error = FNET_ERR_CONNABORTED;
    8a26:	687b      	ldr	r3, [r7, #4]
    8a28:	2211      	movs	r2, #17
    8a2a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2825

                fnet_tcp_closesk(sk);
    8a2e:	6878      	ldr	r0, [r7, #4]
    8a30:	f001 f8a6 	bl	9b80 <fnet_tcp_closesk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2826
                return;
    8a34:	e088      	b.n	8b48 <fnet_tcp_slowtimosk+0x168>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2831
            }
        }

        /* Check the connection timer.*/
        if(cb->tcpcb_timers.connection != FNET_TCP_TIMER_OFF)
    8a36:	68fb      	ldr	r3, [r7, #12]
    8a38:	6f9b      	ldr	r3, [r3, #120]	; 0x78
    8a3a:	f1b3 3fff 	cmp.w	r3, #4294967295
    8a3e:	d032      	beq.n	8aa6 <fnet_tcp_slowtimosk+0xc6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2833
        {
            cb->tcpcb_timers.connection--;
    8a40:	68fb      	ldr	r3, [r7, #12]
    8a42:	6f9b      	ldr	r3, [r3, #120]	; 0x78
    8a44:	1e5a      	subs	r2, r3, #1
    8a46:	68fb      	ldr	r3, [r7, #12]
    8a48:	679a      	str	r2, [r3, #120]	; 0x78
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2835

            if(!cb->tcpcb_timers.connection)
    8a4a:	68fb      	ldr	r3, [r7, #12]
    8a4c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
    8a4e:	2b00      	cmp	r3, #0
    8a50:	d129      	bne.n	8aa6 <fnet_tcp_slowtimosk+0xc6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2837
            {
                cb->tcpcb_timers.connection = FNET_TCP_TIMER_OFF;
    8a52:	68fb      	ldr	r3, [r7, #12]
    8a54:	f04f 32ff 	mov.w	r2, #4294967295
    8a58:	679a      	str	r2, [r3, #120]	; 0x78
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2839

                if(cb->tcpcb_flags & FNET_TCP_CBF_CLOSE)
    8a5a:	68fb      	ldr	r3, [r7, #12]
    8a5c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    8a60:	f003 0301 	and.w	r3, r3, #1
    8a64:	2b00      	cmp	r3, #0
    8a66:	d00c      	beq.n	8a82 <fnet_tcp_slowtimosk+0xa2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2841
                {
                    if(cb->tcpcb_connection_state == FNET_TCP_CS_TIME_WAIT)
    8a68:	68fb      	ldr	r3, [r7, #12]
    8a6a:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    8a6e:	2b0a      	cmp	r3, #10
    8a70:	d103      	bne.n	8a7a <fnet_tcp_slowtimosk+0x9a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2842
                        fnet_tcp_closesk(sk);
    8a72:	6878      	ldr	r0, [r7, #4]
    8a74:	f001 f884 	bl	9b80 <fnet_tcp_closesk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2854
                           && sk->options.local_error != FNET_ERR_NOPROTOOPT)
                        sk->options.local_error = FNET_ERR_TIMEDOUT;

                    fnet_tcp_closesk(sk);
                }
                return;
    8a78:	e066      	b.n	8b48 <fnet_tcp_slowtimosk+0x168>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2844
                if(cb->tcpcb_flags & FNET_TCP_CBF_CLOSE)
                {
                    if(cb->tcpcb_connection_state == FNET_TCP_CS_TIME_WAIT)
                        fnet_tcp_closesk(sk);
                    else
                        fnet_tcp_abortsk(sk);
    8a7a:	6878      	ldr	r0, [r7, #4]
    8a7c:	f000 fe1c 	bl	96b8 <fnet_tcp_abortsk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2854
                           && sk->options.local_error != FNET_ERR_NOPROTOOPT)
                        sk->options.local_error = FNET_ERR_TIMEDOUT;

                    fnet_tcp_closesk(sk);
                }
                return;
    8a80:	e062      	b.n	8b48 <fnet_tcp_slowtimosk+0x168>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2848
                    else
                        fnet_tcp_abortsk(sk);
                }
                else
                {
                    if(sk->options.local_error != FNET_ERR_HOSTUNREACH
    8a82:	687b      	ldr	r3, [r7, #4]
    8a84:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    8a88:	2b18      	cmp	r3, #24
    8a8a:	d008      	beq.n	8a9e <fnet_tcp_slowtimosk+0xbe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2849
                           && sk->options.local_error != FNET_ERR_NOPROTOOPT)
    8a8c:	687b      	ldr	r3, [r7, #4]
    8a8e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    8a92:	2b09      	cmp	r3, #9
    8a94:	d003      	beq.n	8a9e <fnet_tcp_slowtimosk+0xbe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2850
                        sk->options.local_error = FNET_ERR_TIMEDOUT;
    8a96:	687b      	ldr	r3, [r7, #4]
    8a98:	2217      	movs	r2, #23
    8a9a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2852

                    fnet_tcp_closesk(sk);
    8a9e:	6878      	ldr	r0, [r7, #4]
    8aa0:	f001 f86e 	bl	9b80 <fnet_tcp_closesk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2854
                }
                return;
    8aa4:	e050      	b.n	8b48 <fnet_tcp_slowtimosk+0x168>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2859
            }
        }

        /* Check the retransmission timer.*/
        if(cb->tcpcb_timers.retransmission != FNET_TCP_TIMER_OFF)
    8aa6:	68fb      	ldr	r3, [r7, #12]
    8aa8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    8aaa:	f1b3 3fff 	cmp.w	r3, #4294967295
    8aae:	d00f      	beq.n	8ad0 <fnet_tcp_slowtimosk+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2861
        {
            cb->tcpcb_timers.retransmission--;
    8ab0:	68fb      	ldr	r3, [r7, #12]
    8ab2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    8ab4:	1e5a      	subs	r2, r3, #1
    8ab6:	68fb      	ldr	r3, [r7, #12]
    8ab8:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2863

            if(!cb->tcpcb_timers.retransmission)
    8aba:	68fb      	ldr	r3, [r7, #12]
    8abc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    8abe:	2b00      	cmp	r3, #0
    8ac0:	d106      	bne.n	8ad0 <fnet_tcp_slowtimosk+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2865
            {
                cb->tcpcb_timers.retransmission = FNET_TCP_TIMER_OFF;
    8ac2:	68fb      	ldr	r3, [r7, #12]
    8ac4:	f04f 32ff 	mov.w	r2, #4294967295
    8ac8:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2866
                fnet_tcp_rtimeo(sk);
    8aca:	6878      	ldr	r0, [r7, #4]
    8acc:	f000 f86a 	bl	8ba4 <fnet_tcp_rtimeo>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2871
            }
        }

        /* Check the keepalive timer.*/
        if(cb->tcpcb_timers.keepalive != FNET_TCP_TIMER_OFF)
    8ad0:	68fb      	ldr	r3, [r7, #12]
    8ad2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
    8ad4:	f1b3 3fff 	cmp.w	r3, #4294967295
    8ad8:	d00f      	beq.n	8afa <fnet_tcp_slowtimosk+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2873
        {
            cb->tcpcb_timers.keepalive--;
    8ada:	68fb      	ldr	r3, [r7, #12]
    8adc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
    8ade:	1e5a      	subs	r2, r3, #1
    8ae0:	68fb      	ldr	r3, [r7, #12]
    8ae2:	675a      	str	r2, [r3, #116]	; 0x74
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2875

            if(!cb->tcpcb_timers.keepalive)
    8ae4:	68fb      	ldr	r3, [r7, #12]
    8ae6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
    8ae8:	2b00      	cmp	r3, #0
    8aea:	d106      	bne.n	8afa <fnet_tcp_slowtimosk+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2877
            {
                cb->tcpcb_timers.keepalive = FNET_TCP_TIMER_OFF;
    8aec:	68fb      	ldr	r3, [r7, #12]
    8aee:	f04f 32ff 	mov.w	r2, #4294967295
    8af2:	675a      	str	r2, [r3, #116]	; 0x74
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2878
                fnet_tcp_ktimeo(sk);
    8af4:	6878      	ldr	r0, [r7, #4]
    8af6:	f000 f90f 	bl	8d18 <fnet_tcp_ktimeo>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2883
            }
        }

        /* Check the persist timer.*/
        if(cb->tcpcb_timers.persist != FNET_TCP_TIMER_OFF)
    8afa:	68fb      	ldr	r3, [r7, #12]
    8afc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    8b00:	f1b3 3fff 	cmp.w	r3, #4294967295
    8b04:	d013      	beq.n	8b2e <fnet_tcp_slowtimosk+0x14e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2885
        {
            cb->tcpcb_timers.persist--;
    8b06:	68fb      	ldr	r3, [r7, #12]
    8b08:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    8b0c:	1e5a      	subs	r2, r3, #1
    8b0e:	68fb      	ldr	r3, [r7, #12]
    8b10:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2887

            if(!cb->tcpcb_timers.persist)
    8b14:	68fb      	ldr	r3, [r7, #12]
    8b16:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    8b1a:	2b00      	cmp	r3, #0
    8b1c:	d107      	bne.n	8b2e <fnet_tcp_slowtimosk+0x14e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2889
            {
                cb->tcpcb_timers.persist = FNET_TCP_TIMER_OFF;
    8b1e:	68fb      	ldr	r3, [r7, #12]
    8b20:	f04f 32ff 	mov.w	r2, #4294967295
    8b24:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2890
                fnet_tcp_ptimeo(sk);
    8b28:	6878      	ldr	r0, [r7, #4]
    8b2a:	f000 f959 	bl	8de0 <fnet_tcp_ptimeo>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2895
            }
        }

        /* If the round trip timer is turned on, recalculate it.*/
        if(cb->tcpcb_timers.round_trip != FNET_TCP_TIMER_OFF)
    8b2e:	68fb      	ldr	r3, [r7, #12]
    8b30:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    8b34:	f1b3 3fff 	cmp.w	r3, #4294967295
    8b38:	d006      	beq.n	8b48 <fnet_tcp_slowtimosk+0x168>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2896
            cb->tcpcb_timers.round_trip++;
    8b3a:	68fb      	ldr	r3, [r7, #12]
    8b3c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    8b40:	1c5a      	adds	r2, r3, #1
    8b42:	68fb      	ldr	r3, [r7, #12]
    8b44:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2899
    }
    
}
    8b48:	3710      	adds	r7, #16
    8b4a:	46bd      	mov	sp, r7
    8b4c:	bd80      	pop	{r7, pc}
    8b4e:	bf00      	nop

00008b50 <fnet_tcp_fasttimosk>:
fnet_tcp_fasttimosk():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2910
*              of the socket (fnet_tcp_fasttimo is performed every 200 ms).
*
* RETURNS: None. 
*************************************************************************/
static void fnet_tcp_fasttimosk( fnet_socket_t *sk )
{
    8b50:	b580      	push	{r7, lr}
    8b52:	b084      	sub	sp, #16
    8b54:	af00      	add	r7, sp, #0
    8b56:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2911
    fnet_tcp_control_t *cb = (fnet_tcp_control_t *)sk->protocol_control;
    8b58:	687b      	ldr	r3, [r7, #4]
    8b5a:	699b      	ldr	r3, [r3, #24]
    8b5c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2914
    
   
    if(sk->state != SS_UNCONNECTED)
    8b5e:	687b      	ldr	r3, [r7, #4]
    8b60:	7b1b      	ldrb	r3, [r3, #12]
    8b62:	2b00      	cmp	r3, #0
    8b64:	d01a      	beq.n	8b9c <fnet_tcp_fasttimosk+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2917
    {
        /* Check the delayed acknowledgment timer.*/
        if(cb->tcpcb_timers.delayed_ack != FNET_TCP_TIMER_OFF)
    8b66:	68fb      	ldr	r3, [r7, #12]
    8b68:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    8b6c:	f1b3 3fff 	cmp.w	r3, #4294967295
    8b70:	d014      	beq.n	8b9c <fnet_tcp_fasttimosk+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2919
        {
            cb->tcpcb_timers.delayed_ack--;
    8b72:	68fb      	ldr	r3, [r7, #12]
    8b74:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    8b78:	1e5a      	subs	r2, r3, #1
    8b7a:	68fb      	ldr	r3, [r7, #12]
    8b7c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2921

            if(!cb->tcpcb_timers.delayed_ack)
    8b80:	68fb      	ldr	r3, [r7, #12]
    8b82:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    8b86:	2b00      	cmp	r3, #0
    8b88:	d108      	bne.n	8b9c <fnet_tcp_fasttimosk+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2923
            {
                cb->tcpcb_timers.delayed_ack = FNET_TCP_TIMER_OFF;
    8b8a:	68fb      	ldr	r3, [r7, #12]
    8b8c:	f04f 32ff 	mov.w	r2, #4294967295
    8b90:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2924
                fnet_tcp_sendack(sk);
    8b94:	6878      	ldr	r0, [r7, #4]
    8b96:	f000 fc77 	bl	9488 <fnet_tcp_sendack>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2925
                return;
    8b9a:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2930
            }
        }
    }
    
}
    8b9c:	3710      	adds	r7, #16
    8b9e:	46bd      	mov	sp, r7
    8ba0:	bd80      	pop	{r7, pc}
    8ba2:	bf00      	nop

00008ba4 <fnet_tcp_rtimeo>:
fnet_tcp_rtimeo():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2941
*              timer.
*
* RETURNS: None.                
*************************************************************************/
static void fnet_tcp_rtimeo( fnet_socket_t *sk )
{
    8ba4:	b580      	push	{r7, lr}
    8ba6:	b086      	sub	sp, #24
    8ba8:	af00      	add	r7, sp, #0
    8baa:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2942
    fnet_tcp_control_t  *cb = (fnet_tcp_control_t *)sk->protocol_control;
    8bac:	687b      	ldr	r3, [r7, #4]
    8bae:	699b      	ldr	r3, [r3, #24]
    8bb0:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2946
    char                options[FNET_TCP_MAX_OPT_SIZE]; 
    char                optionlen;                      
    
    switch(cb->tcpcb_connection_state)
    8bb2:	697b      	ldr	r3, [r7, #20]
    8bb4:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    8bb8:	2b01      	cmp	r3, #1
    8bba:	d018      	beq.n	8bee <fnet_tcp_rtimeo+0x4a>
    8bbc:	2b02      	cmp	r3, #2
    8bbe:	d12d      	bne.n	8c1c <fnet_tcp_rtimeo+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2951
    {
        case FNET_TCP_CS_SYN_RCVD:

          /* Reinitialize of the sequnce number.*/
          cb->tcpcb_sndseq--;
    8bc0:	697b      	ldr	r3, [r7, #20]
    8bc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    8bc4:	1e5a      	subs	r2, r3, #1
    8bc6:	697b      	ldr	r3, [r7, #20]
    8bc8:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2952
          fnet_tcp_setsynopt(sk, options, &optionlen);
    8bca:	f107 020c 	add.w	r2, r7, #12
    8bce:	f107 030b 	add.w	r3, r7, #11
    8bd2:	6878      	ldr	r0, [r7, #4]
    8bd4:	4611      	mov	r1, r2
    8bd6:	461a      	mov	r2, r3
    8bd8:	f000 fe82 	bl	98e0 <fnet_tcp_setsynopt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2955

          /* Create and send the SYN segment.*/
          fnet_tcp_sendheadseg(sk, FNET_TCP_SGT_SYN | FNET_TCP_SGT_ACK, options, optionlen);
    8bdc:	7afb      	ldrb	r3, [r7, #11]
    8bde:	f107 020c 	add.w	r2, r7, #12
    8be2:	b25b      	sxtb	r3, r3
    8be4:	6878      	ldr	r0, [r7, #4]
    8be6:	2112      	movs	r1, #18
    8be8:	f000 fa2c 	bl	9044 <fnet_tcp_sendheadseg>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2957

          break;
    8bec:	e06d      	b.n	8cca <fnet_tcp_rtimeo+0x126>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2963

        case FNET_TCP_CS_SYN_SENT:
          /* Retransmission of the first segment.*/

          /* Recalculate the sequence number.*/
          cb->tcpcb_sndseq--;
    8bee:	697b      	ldr	r3, [r7, #20]
    8bf0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    8bf2:	1e5a      	subs	r2, r3, #1
    8bf4:	697b      	ldr	r3, [r7, #20]
    8bf6:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2965

          fnet_tcp_setsynopt(sk, options, &optionlen);
    8bf8:	f107 020c 	add.w	r2, r7, #12
    8bfc:	f107 030b 	add.w	r3, r7, #11
    8c00:	6878      	ldr	r0, [r7, #4]
    8c02:	4611      	mov	r1, r2
    8c04:	461a      	mov	r2, r3
    8c06:	f000 fe6b 	bl	98e0 <fnet_tcp_setsynopt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2968

          /* Send the SYN segment.*/
          fnet_tcp_sendheadseg(sk, FNET_TCP_SGT_SYN, options, optionlen);
    8c0a:	7afb      	ldrb	r3, [r7, #11]
    8c0c:	f107 020c 	add.w	r2, r7, #12
    8c10:	b25b      	sxtb	r3, r3
    8c12:	6878      	ldr	r0, [r7, #4]
    8c14:	2102      	movs	r1, #2
    8c16:	f000 fa15 	bl	9044 <fnet_tcp_sendheadseg>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2970

          break;
    8c1a:	e056      	b.n	8cca <fnet_tcp_rtimeo+0x126>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2975

        default:

          /* If FIN segment is sent, it must be retransmited.*/
          cb->tcpcb_flags &= ~FNET_TCP_CBF_FIN_SENT;
    8c1c:	697b      	ldr	r3, [r7, #20]
    8c1e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    8c22:	f023 0204 	bic.w	r2, r3, #4
    8c26:	697b      	ldr	r3, [r7, #20]
    8c28:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2978

          /* Initialize of the abort timer.*/
          if(cb->tcpcb_timers.abort == FNET_TCP_TIMER_OFF)
    8c2c:	697b      	ldr	r3, [r7, #20]
    8c2e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    8c30:	f1b3 3fff 	cmp.w	r3, #4294967295
    8c34:	d102      	bne.n	8c3c <fnet_tcp_rtimeo+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2979
              cb->tcpcb_timers.abort = FNET_TCP_ABORT_INTERVAL;
    8c36:	697b      	ldr	r3, [r7, #20]
    8c38:	2230      	movs	r2, #48	; 0x30
    8c3a:	671a      	str	r2, [r3, #112]	; 0x70
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2982

          /* Recalculate the sequence number.*/
          cb->tcpcb_sndseq = cb->tcpcb_rcvack;
    8c3c:	697b      	ldr	r3, [r7, #20]
    8c3e:	68da      	ldr	r2, [r3, #12]
    8c40:	697b      	ldr	r3, [r7, #20]
    8c42:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2985

          /* Recalculate the congestion window and slow start threshold values (for case of  retransmission).*/
          if(cb->tcpcb_cwnd > cb->tcpcb_sndwnd)
    8c44:	697b      	ldr	r3, [r7, #20]
    8c46:	6bda      	ldr	r2, [r3, #60]	; 0x3c
    8c48:	697b      	ldr	r3, [r7, #20]
    8c4a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    8c4c:	429a      	cmp	r2, r3
    8c4e:	d905      	bls.n	8c5c <fnet_tcp_rtimeo+0xb8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2986
              cb->tcpcb_ssthresh = cb->tcpcb_sndwnd >> 1;
    8c50:	697b      	ldr	r3, [r7, #20]
    8c52:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    8c54:	085a      	lsrs	r2, r3, #1
    8c56:	697b      	ldr	r3, [r7, #20]
    8c58:	645a      	str	r2, [r3, #68]	; 0x44
    8c5a:	e004      	b.n	8c66 <fnet_tcp_rtimeo+0xc2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2988
          else
              cb->tcpcb_ssthresh = cb->tcpcb_cwnd >> 1;
    8c5c:	697b      	ldr	r3, [r7, #20]
    8c5e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    8c60:	085a      	lsrs	r2, r3, #1
    8c62:	697b      	ldr	r3, [r7, #20]
    8c64:	645a      	str	r2, [r3, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2990

          if(cb->tcpcb_ssthresh < (cb->tcpcb_sndmss << 1))
    8c66:	697b      	ldr	r3, [r7, #20]
    8c68:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    8c6a:	697b      	ldr	r3, [r7, #20]
    8c6c:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    8c70:	005b      	lsls	r3, r3, #1
    8c72:	429a      	cmp	r2, r3
    8c74:	d206      	bcs.n	8c84 <fnet_tcp_rtimeo+0xe0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2991
              cb->tcpcb_ssthresh = (unsigned long)(cb->tcpcb_sndmss << 1);
    8c76:	697b      	ldr	r3, [r7, #20]
    8c78:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    8c7c:	005b      	lsls	r3, r3, #1
    8c7e:	461a      	mov	r2, r3
    8c80:	697b      	ldr	r3, [r7, #20]
    8c82:	645a      	str	r2, [r3, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2993

          cb->tcpcb_cwnd = cb->tcpcb_sndmss;
    8c84:	697b      	ldr	r3, [r7, #20]
    8c86:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    8c8a:	461a      	mov	r2, r3
    8c8c:	697b      	ldr	r3, [r7, #20]
    8c8e:	63da      	str	r2, [r3, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2996

          /* Round trip time can't be measured in this case.*/
          cb->tcpcb_timers.round_trip = FNET_TCP_TIMER_OFF;
    8c90:	697b      	ldr	r3, [r7, #20]
    8c92:	f04f 32ff 	mov.w	r2, #4294967295
    8c96:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2997
          cb->tcpcb_timing_state = TCP_TS_SEGMENT_LOST;
    8c9a:	697b      	ldr	r3, [r7, #20]
    8c9c:	2202      	movs	r2, #2
    8c9e:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:2999

          cb->tcpcb_flags |= FNET_TCP_CBF_FORCE_SEND;
    8ca2:	697b      	ldr	r3, [r7, #20]
    8ca4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    8ca8:	f043 0210 	orr.w	r2, r3, #16
    8cac:	697b      	ldr	r3, [r7, #20]
    8cae:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3000
          fnet_tcp_sendanydata(sk, 0);
    8cb2:	6878      	ldr	r0, [r7, #4]
    8cb4:	2100      	movs	r1, #0
    8cb6:	f7ff fb9b 	bl	83f0 <fnet_tcp_sendanydata>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3001
          cb->tcpcb_flags &= ~FNET_TCP_CBF_FORCE_SEND;
    8cba:	697b      	ldr	r3, [r7, #20]
    8cbc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    8cc0:	f023 0210 	bic.w	r2, r3, #16
    8cc4:	697b      	ldr	r3, [r7, #20]
    8cc6:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3005
    }

    /* If the first timeout is occured, initialize the retransmission timer.*/
    if(cb->tcpcb_retrseq != cb->tcpcb_rcvack)
    8cca:	697b      	ldr	r3, [r7, #20]
    8ccc:	6e5a      	ldr	r2, [r3, #100]	; 0x64
    8cce:	697b      	ldr	r3, [r7, #20]
    8cd0:	68db      	ldr	r3, [r3, #12]
    8cd2:	429a      	cmp	r2, r3
    8cd4:	d007      	beq.n	8ce6 <fnet_tcp_rtimeo+0x142>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3007
    {
        cb->tcpcb_crto = cb->tcpcb_rto;
    8cd6:	697b      	ldr	r3, [r7, #20]
    8cd8:	6d9a      	ldr	r2, [r3, #88]	; 0x58
    8cda:	697b      	ldr	r3, [r7, #20]
    8cdc:	65da      	str	r2, [r3, #92]	; 0x5c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3008
        cb->tcpcb_retrseq = cb->tcpcb_rcvack;
    8cde:	697b      	ldr	r3, [r7, #20]
    8ce0:	68da      	ldr	r2, [r3, #12]
    8ce2:	697b      	ldr	r3, [r7, #20]
    8ce4:	665a      	str	r2, [r3, #100]	; 0x64
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3012
    }

    /* Recalculate the retransission timer.*/
    if(cb->tcpcb_crto != FNET_TCP_TIMERS_LIMIT)
    8ce6:	697b      	ldr	r3, [r7, #20]
    8ce8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
    8cea:	2b78      	cmp	r3, #120	; 0x78
    8cec:	d00d      	beq.n	8d0a <fnet_tcp_rtimeo+0x166>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3014
    {
        if((cb->tcpcb_crto << 1) > FNET_TCP_TIMERS_LIMIT)
    8cee:	697b      	ldr	r3, [r7, #20]
    8cf0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
    8cf2:	005b      	lsls	r3, r3, #1
    8cf4:	2b78      	cmp	r3, #120	; 0x78
    8cf6:	dd03      	ble.n	8d00 <fnet_tcp_rtimeo+0x15c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3016
            /* Timeout must be less or equal than TIMER_LIMIT.*/
            cb->tcpcb_crto = FNET_TCP_TIMERS_LIMIT;
    8cf8:	697b      	ldr	r3, [r7, #20]
    8cfa:	2278      	movs	r2, #120	; 0x78
    8cfc:	65da      	str	r2, [r3, #92]	; 0x5c
    8cfe:	e004      	b.n	8d0a <fnet_tcp_rtimeo+0x166>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3019
        else
            /* Increase the timeout (*2).*/
            cb->tcpcb_crto <<= 1;
    8d00:	697b      	ldr	r3, [r7, #20]
    8d02:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
    8d04:	005a      	lsls	r2, r3, #1
    8d06:	697b      	ldr	r3, [r7, #20]
    8d08:	65da      	str	r2, [r3, #92]	; 0x5c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3022
    }

    cb->tcpcb_timers.retransmission = cb->tcpcb_crto;
    8d0a:	697b      	ldr	r3, [r7, #20]
    8d0c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
    8d0e:	697b      	ldr	r3, [r7, #20]
    8d10:	67da      	str	r2, [r3, #124]	; 0x7c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3024
    
}
    8d12:	3718      	adds	r7, #24
    8d14:	46bd      	mov	sp, r7
    8d16:	bd80      	pop	{r7, pc}

00008d18 <fnet_tcp_ktimeo>:
fnet_tcp_ktimeo():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3035
*              timer.
*
* RETURNS: None.                
*************************************************************************/
static void fnet_tcp_ktimeo( fnet_socket_t *sk )
{
    8d18:	b580      	push	{r7, lr}
    8d1a:	b092      	sub	sp, #72	; 0x48
    8d1c:	af00      	add	r7, sp, #0
    8d1e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3038
    fnet_netbuf_t           *data;   
    unsigned short          rcvwnd; 
    fnet_tcp_control_t      *cb = (fnet_tcp_control_t *)sk->protocol_control;
    8d20:	687b      	ldr	r3, [r7, #4]
    8d22:	699b      	ldr	r3, [r3, #24]
    8d24:	647b      	str	r3, [r7, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3042
    struct fnet_tcp_segment segment;
    
    /* Create the keepalive segment.*/
    data = fnet_netbuf_new(1, FNET_FALSE);
    8d26:	2001      	movs	r0, #1
    8d28:	2100      	movs	r1, #0
    8d2a:	f7f9 fccf 	bl	26cc <fnet_netbuf_new>
    8d2e:	6438      	str	r0, [r7, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3045

    /* Check the memory allocation.*/
    if(!data)
    8d30:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    8d32:	2b00      	cmp	r3, #0
    8d34:	d050      	beq.n	8dd8 <fnet_tcp_ktimeo+0xc0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3049
        return;

    /* Receive the window size.*/
    rcvwnd = (unsigned short)(fnet_tcp_getrcvwnd(sk) >> cb->tcpcb_recvscale);
    8d36:	6878      	ldr	r0, [r7, #4]
    8d38:	f7ff fdb0 	bl	889c <fnet_tcp_getrcvwnd>
    8d3c:	4602      	mov	r2, r0
    8d3e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    8d40:	7f9b      	ldrb	r3, [r3, #30]
    8d42:	fa22 f303 	lsr.w	r3, r2, r3
    8d46:	87fb      	strh	r3, [r7, #62]	; 0x3e
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3052

    /* Send the segment.*/
    segment.sockoption = &sk->options; 
    8d48:	687b      	ldr	r3, [r7, #4]
    8d4a:	3364      	adds	r3, #100	; 0x64
    8d4c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3053
    segment.src_addr = sk->local_addr;
    8d4e:	687a      	ldr	r2, [r7, #4]
    8d50:	f107 0310 	add.w	r3, r7, #16
    8d54:	325c      	adds	r2, #92	; 0x5c
    8d56:	e892 0003 	ldmia.w	r2, {r0, r1}
    8d5a:	e883 0003 	stmia.w	r3, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3054
    segment.dest_addr = sk->foreign_addr;
    8d5e:	687a      	ldr	r2, [r7, #4]
    8d60:	f107 0318 	add.w	r3, r7, #24
    8d64:	3254      	adds	r2, #84	; 0x54
    8d66:	e892 0003 	ldmia.w	r2, {r0, r1}
    8d6a:	e883 0003 	stmia.w	r3, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3055
    segment.seq = cb->tcpcb_rcvack - 1;
    8d6e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    8d70:	68db      	ldr	r3, [r3, #12]
    8d72:	3b01      	subs	r3, #1
    8d74:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3056
    segment.ack = cb->tcpcb_sndack;
    8d76:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    8d78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    8d7a:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3057
    segment.flags = FNET_TCP_SGT_ACK;
    8d7c:	2310      	movs	r3, #16
    8d7e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3058
    segment.wnd = rcvwnd;
    8d82:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
    8d84:	857b      	strh	r3, [r7, #42]	; 0x2a
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3059
    segment.urgpointer = 0;
    8d86:	2300      	movs	r3, #0
    8d88:	85bb      	strh	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3060
    segment.options = 0;
    8d8a:	2300      	movs	r3, #0
    8d8c:	633b      	str	r3, [r7, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3061
    segment.optlen = 0;
    8d8e:	2300      	movs	r3, #0
    8d90:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3062
    segment.data = data;
    8d94:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    8d96:	63bb      	str	r3, [r7, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3064
    
    fnet_tcp_sendseg(&segment);    //TBD res check       
    8d98:	f107 030c 	add.w	r3, r7, #12
    8d9c:	4618      	mov	r0, r3
    8d9e:	f000 f86d 	bl	8e7c <fnet_tcp_sendseg>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3067

    /* Set the timers.*/
    cb->tcpcb_timers.keepalive = sk->options.tcp_opt.keep_intvl;
    8da2:	687b      	ldr	r3, [r7, #4]
    8da4:	6f5a      	ldr	r2, [r3, #116]	; 0x74
    8da6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    8da8:	675a      	str	r2, [r3, #116]	; 0x74
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3069

    if((cb->tcpcb_timers.abort == FNET_TCP_TIMER_OFF) || (cb->tcpcb_timers.abort > (sk->options.tcp_opt.keep_cnt * sk->options.tcp_opt.keep_intvl) ))
    8daa:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    8dac:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    8dae:	f1b3 3fff 	cmp.w	r3, #4294967295
    8db2:	d009      	beq.n	8dc8 <fnet_tcp_ktimeo+0xb0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3069 (discriminator 1)
    8db4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    8db6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
    8db8:	687b      	ldr	r3, [r7, #4]
    8dba:	6f9b      	ldr	r3, [r3, #120]	; 0x78
    8dbc:	6879      	ldr	r1, [r7, #4]
    8dbe:	6f49      	ldr	r1, [r1, #116]	; 0x74
    8dc0:	fb01 f303 	mul.w	r3, r1, r3
    8dc4:	429a      	cmp	r2, r3
    8dc6:	dd07      	ble.n	8dd8 <fnet_tcp_ktimeo+0xc0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3071
    {
        cb->tcpcb_timers.abort = sk->options.tcp_opt.keep_cnt * sk->options.tcp_opt.keep_intvl;
    8dc8:	687b      	ldr	r3, [r7, #4]
    8dca:	6f9b      	ldr	r3, [r3, #120]	; 0x78
    8dcc:	687a      	ldr	r2, [r7, #4]
    8dce:	6f52      	ldr	r2, [r2, #116]	; 0x74
    8dd0:	fb02 f203 	mul.w	r2, r2, r3
    8dd4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    8dd6:	671a      	str	r2, [r3, #112]	; 0x70
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3073
    }
}
    8dd8:	3748      	adds	r7, #72	; 0x48
    8dda:	46bd      	mov	sp, r7
    8ddc:	bd80      	pop	{r7, pc}
    8dde:	bf00      	nop

00008de0 <fnet_tcp_ptimeo>:
fnet_tcp_ptimeo():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3084
*              timer.
*
* RETURNS: None.                
*************************************************************************/
static void fnet_tcp_ptimeo( fnet_socket_t *sk )
{
    8de0:	b580      	push	{r7, lr}
    8de2:	b084      	sub	sp, #16
    8de4:	af00      	add	r7, sp, #0
    8de6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3085
    fnet_tcp_control_t *cb = (fnet_tcp_control_t *)sk->protocol_control;
    8de8:	687b      	ldr	r3, [r7, #4]
    8dea:	699b      	ldr	r3, [r3, #24]
    8dec:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3090

    
    /* If the window is closed, send the probe segment
     * Otherwise, try to send any data.*/
    if(!cb->tcpcb_sndwnd)
    8dee:	68fb      	ldr	r3, [r7, #12]
    8df0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    8df2:	2b00      	cmp	r3, #0
    8df4:	d10f      	bne.n	8e16 <fnet_tcp_ptimeo+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3092
    {
        fnet_tcp_senddataseg(sk, 0, 0, 1);
    8df6:	6878      	ldr	r0, [r7, #4]
    8df8:	2100      	movs	r1, #0
    8dfa:	2200      	movs	r2, #0
    8dfc:	2301      	movs	r3, #1
    8dfe:	f000 fa01 	bl	9204 <fnet_tcp_senddataseg>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3093
        cb->tcpcb_sndseq--;
    8e02:	68fb      	ldr	r3, [r7, #12]
    8e04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    8e06:	1e5a      	subs	r2, r3, #1
    8e08:	68fb      	ldr	r3, [r7, #12]
    8e0a:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3104
        cb->tcpcb_flags &= ~FNET_TCP_CBF_FORCE_SEND;
        return;
    }

    /* Reinitialize the persist timer.*/
    if(cb->tcpcb_cprto != FNET_TCP_TIMERS_LIMIT)
    8e0c:	68fb      	ldr	r3, [r7, #12]
    8e0e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    8e10:	2b78      	cmp	r3, #120	; 0x78
    8e12:	d023      	beq.n	8e5c <fnet_tcp_ptimeo+0x7c>
    8e14:	e014      	b.n	8e40 <fnet_tcp_ptimeo+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3097
        fnet_tcp_senddataseg(sk, 0, 0, 1);
        cb->tcpcb_sndseq--;
    }
    else
    {
        cb->tcpcb_flags |= FNET_TCP_CBF_FORCE_SEND;
    8e16:	68fb      	ldr	r3, [r7, #12]
    8e18:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    8e1c:	f043 0210 	orr.w	r2, r3, #16
    8e20:	68fb      	ldr	r3, [r7, #12]
    8e22:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3098
        fnet_tcp_sendanydata(sk, 0);
    8e26:	6878      	ldr	r0, [r7, #4]
    8e28:	2100      	movs	r1, #0
    8e2a:	f7ff fae1 	bl	83f0 <fnet_tcp_sendanydata>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3099
        cb->tcpcb_flags &= ~FNET_TCP_CBF_FORCE_SEND;
    8e2e:	68fb      	ldr	r3, [r7, #12]
    8e30:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    8e34:	f023 0210 	bic.w	r2, r3, #16
    8e38:	68fb      	ldr	r3, [r7, #12]
    8e3a:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3100
        return;
    8e3e:	e01a      	b.n	8e76 <fnet_tcp_ptimeo+0x96>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3106
    }

    /* Reinitialize the persist timer.*/
    if(cb->tcpcb_cprto != FNET_TCP_TIMERS_LIMIT)
    {
        if((cb->tcpcb_cprto << 1) > FNET_TCP_TIMERS_LIMIT)
    8e40:	68fb      	ldr	r3, [r7, #12]
    8e42:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    8e44:	005b      	lsls	r3, r3, #1
    8e46:	2b78      	cmp	r3, #120	; 0x78
    8e48:	dd03      	ble.n	8e52 <fnet_tcp_ptimeo+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3108
            /* Timeout must be less or equal than TIMER_LIMIT.*/
            cb->tcpcb_cprto = FNET_TCP_TIMERS_LIMIT;
    8e4a:	68fb      	ldr	r3, [r7, #12]
    8e4c:	2278      	movs	r2, #120	; 0x78
    8e4e:	661a      	str	r2, [r3, #96]	; 0x60
    8e50:	e004      	b.n	8e5c <fnet_tcp_ptimeo+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3111
        else
            /* Increase the timeout (*2).*/
            cb->tcpcb_cprto <<= 1;
    8e52:	68fb      	ldr	r3, [r7, #12]
    8e54:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    8e56:	005a      	lsls	r2, r3, #1
    8e58:	68fb      	ldr	r3, [r7, #12]
    8e5a:	661a      	str	r2, [r3, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3114
    }

    cb->tcpcb_timers.persist = cb->tcpcb_cprto;
    8e5c:	68fb      	ldr	r3, [r7, #12]
    8e5e:	6e1a      	ldr	r2, [r3, #96]	; 0x60
    8e60:	68fb      	ldr	r3, [r7, #12]
    8e62:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3117

    /* Initialize the abort timer.*/
    if(cb->tcpcb_timers.abort == FNET_TCP_TIMER_OFF)
    8e66:	68fb      	ldr	r3, [r7, #12]
    8e68:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    8e6a:	f1b3 3fff 	cmp.w	r3, #4294967295
    8e6e:	d102      	bne.n	8e76 <fnet_tcp_ptimeo+0x96>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3118
        cb->tcpcb_timers.abort = FNET_TCP_ABORT_INTERVAL;
    8e70:	68fb      	ldr	r3, [r7, #12]
    8e72:	2230      	movs	r2, #48	; 0x30
    8e74:	671a      	str	r2, [r3, #112]	; 0x70
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3121

    
}
    8e76:	3710      	adds	r7, #16
    8e78:	46bd      	mov	sp, r7
    8e7a:	bd80      	pop	{r7, pc}

00008e7c <fnet_tcp_sendseg>:
fnet_tcp_sendseg():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3132
*
* RETURNS: FNET_OK if the segment is sent. Otherwise
*          this function returns the error code.                 
*************************************************************************/
static int fnet_tcp_sendseg(struct fnet_tcp_segment *segment)
{
    8e7c:	b590      	push	{r4, r7, lr}
    8e7e:	b08d      	sub	sp, #52	; 0x34
    8e80:	af06      	add	r7, sp, #24
    8e82:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3134
    fnet_netbuf_t                           *nb;
    int                                     error = FNET_OK;
    8e84:	2300      	movs	r3, #0
    8e86:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3146
        /* Check Scope ID.*/
        netif = fnet_netif_get_by_scope_id( ((struct sockaddr_in6 *)(&segment->dest_addr))->sin6_scope_id );
    }
    else
#endif
        netif = FNET_NULL;  
    8e88:	2300      	movs	r3, #0
    8e8a:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3149

    /* Create the header.*/
    nb = fnet_netbuf_new(FNET_TCP_SIZE_HEADER, FNET_FALSE);
    8e8c:	2014      	movs	r0, #20
    8e8e:	2100      	movs	r1, #0
    8e90:	f7f9 fc1c 	bl	26cc <fnet_netbuf_new>
    8e94:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3151

    if(!nb)
    8e96:	68fb      	ldr	r3, [r7, #12]
    8e98:	2b00      	cmp	r3, #0
    8e9a:	d10a      	bne.n	8eb2 <fnet_tcp_sendseg+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3153
    {
        if(segment->data)
    8e9c:	687b      	ldr	r3, [r7, #4]
    8e9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    8ea0:	2b00      	cmp	r3, #0
    8ea2:	d004      	beq.n	8eae <fnet_tcp_sendseg+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3154
            fnet_netbuf_free_chain(segment->data);
    8ea4:	687b      	ldr	r3, [r7, #4]
    8ea6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    8ea8:	4618      	mov	r0, r3
    8eaa:	f7f9 fe29 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3156

        return FNET_ERR_NOMEM;
    8eae:	2303      	movs	r3, #3
    8eb0:	e0c3      	b.n	903a <fnet_tcp_sendseg+0x1be>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3159
    }

    fnet_memset_zero(nb->data_ptr, FNET_TCP_SIZE_HEADER);
    8eb2:	68fb      	ldr	r3, [r7, #12]
    8eb4:	68db      	ldr	r3, [r3, #12]
    8eb6:	4618      	mov	r0, r3
    8eb8:	2114      	movs	r1, #20
    8eba:	f7fc fea7 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3162

    /* Add TCP options.*/
    if(segment->options && segment->optlen)
    8ebe:	687b      	ldr	r3, [r7, #4]
    8ec0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    8ec2:	2b00      	cmp	r3, #0
    8ec4:	d024      	beq.n	8f10 <fnet_tcp_sendseg+0x94>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3162 (discriminator 1)
    8ec6:	687b      	ldr	r3, [r7, #4]
    8ec8:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
    8ecc:	2b00      	cmp	r3, #0
    8ece:	d01f      	beq.n	8f10 <fnet_tcp_sendseg+0x94>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3164
    {
        error = (unsigned char)fnet_tcp_addopt(nb, (unsigned char)segment->optlen, segment->options);
    8ed0:	687b      	ldr	r3, [r7, #4]
    8ed2:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
    8ed6:	b2da      	uxtb	r2, r3
    8ed8:	687b      	ldr	r3, [r7, #4]
    8eda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    8edc:	68f8      	ldr	r0, [r7, #12]
    8ede:	4611      	mov	r1, r2
    8ee0:	461a      	mov	r2, r3
    8ee2:	f000 fc0f 	bl	9704 <fnet_tcp_addopt>
    8ee6:	4603      	mov	r3, r0
    8ee8:	b2db      	uxtb	r3, r3
    8eea:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3166

        if(error)
    8eec:	697b      	ldr	r3, [r7, #20]
    8eee:	2b00      	cmp	r3, #0
    8ef0:	d00d      	beq.n	8f0e <fnet_tcp_sendseg+0x92>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3168
        {
            fnet_netbuf_free_chain(nb);
    8ef2:	68f8      	ldr	r0, [r7, #12]
    8ef4:	f7f9 fe04 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3170

            if(segment->data)
    8ef8:	687b      	ldr	r3, [r7, #4]
    8efa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    8efc:	2b00      	cmp	r3, #0
    8efe:	d004      	beq.n	8f0a <fnet_tcp_sendseg+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3171
                fnet_netbuf_free_chain(segment->data);
    8f00:	687b      	ldr	r3, [r7, #4]
    8f02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    8f04:	4618      	mov	r0, r3
    8f06:	f7f9 fdfb 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3173

            return error;
    8f0a:	697b      	ldr	r3, [r7, #20]
    8f0c:	e095      	b.n	903a <fnet_tcp_sendseg+0x1be>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3166 (discriminator 1)
    /* Add TCP options.*/
    if(segment->options && segment->optlen)
    {
        error = (unsigned char)fnet_tcp_addopt(nb, (unsigned char)segment->optlen, segment->options);

        if(error)
    8f0e:	e004      	b.n	8f1a <fnet_tcp_sendseg+0x9e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3178
            return error;
        }
    }
    else
    {
        FNET_TCP_SET_LENGTH(nb) = FNET_TCP_SIZE_HEADER << 2;  /* (FNET_TCP_SIZE_HEADER/4 + opt_len/4) */
    8f10:	68fb      	ldr	r3, [r7, #12]
    8f12:	68db      	ldr	r3, [r3, #12]
    8f14:	330c      	adds	r3, #12
    8f16:	2250      	movs	r2, #80	; 0x50
    8f18:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3182
    }

    /* Initialization of the header.*/
    FNET_TCP_SPORT(nb) = segment->src_addr.sa_port;
    8f1a:	68fb      	ldr	r3, [r7, #12]
    8f1c:	68db      	ldr	r3, [r3, #12]
    8f1e:	687a      	ldr	r2, [r7, #4]
    8f20:	88d2      	ldrh	r2, [r2, #6]
    8f22:	801a      	strh	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3183
    FNET_TCP_DPORT(nb) = segment->dest_addr.sa_port;
    8f24:	68fb      	ldr	r3, [r7, #12]
    8f26:	68db      	ldr	r3, [r3, #12]
    8f28:	3302      	adds	r3, #2
    8f2a:	687a      	ldr	r2, [r7, #4]
    8f2c:	89d2      	ldrh	r2, [r2, #14]
    8f2e:	801a      	strh	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3184
    FNET_TCP_SEQ(nb) = fnet_htonl(segment->seq);
    8f30:	68fb      	ldr	r3, [r7, #12]
    8f32:	68db      	ldr	r3, [r3, #12]
    8f34:	3304      	adds	r3, #4
    8f36:	461c      	mov	r4, r3
    8f38:	687b      	ldr	r3, [r7, #4]
    8f3a:	695b      	ldr	r3, [r3, #20]
    8f3c:	4618      	mov	r0, r3
    8f3e:	f006 fb05 	bl	f54c <fnet_htonl>
    8f42:	4603      	mov	r3, r0
    8f44:	6023      	str	r3, [r4, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3185
    FNET_TCP_ACK(nb) = fnet_htonl(segment->ack);
    8f46:	68fb      	ldr	r3, [r7, #12]
    8f48:	68db      	ldr	r3, [r3, #12]
    8f4a:	3308      	adds	r3, #8
    8f4c:	461c      	mov	r4, r3
    8f4e:	687b      	ldr	r3, [r7, #4]
    8f50:	699b      	ldr	r3, [r3, #24]
    8f52:	4618      	mov	r0, r3
    8f54:	f006 fafa 	bl	f54c <fnet_htonl>
    8f58:	4603      	mov	r3, r0
    8f5a:	6023      	str	r3, [r4, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3186
    FNET_TCP_SET_FLAGS(nb) = segment->flags;
    8f5c:	68fb      	ldr	r3, [r7, #12]
    8f5e:	68db      	ldr	r3, [r3, #12]
    8f60:	330d      	adds	r3, #13
    8f62:	687a      	ldr	r2, [r7, #4]
    8f64:	7f12      	ldrb	r2, [r2, #28]
    8f66:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3187
    FNET_TCP_WND(nb) = fnet_htons(segment->wnd);
    8f68:	68fb      	ldr	r3, [r7, #12]
    8f6a:	68db      	ldr	r3, [r3, #12]
    8f6c:	330e      	adds	r3, #14
    8f6e:	461c      	mov	r4, r3
    8f70:	687b      	ldr	r3, [r7, #4]
    8f72:	8bdb      	ldrh	r3, [r3, #30]
    8f74:	4618      	mov	r0, r3
    8f76:	f006 fad3 	bl	f520 <fnet_htons>
    8f7a:	4603      	mov	r3, r0
    8f7c:	8023      	strh	r3, [r4, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3190

    /* Add the data.*/
    nb = fnet_netbuf_concat(nb, segment->data);
    8f7e:	687b      	ldr	r3, [r7, #4]
    8f80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    8f82:	68f8      	ldr	r0, [r7, #12]
    8f84:	4619      	mov	r1, r3
    8f86:	f7fa f847 	bl	3018 <fnet_netbuf_concat>
    8f8a:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3193

    /* Set the pointer to the urgent data.*/
    FNET_TCP_URG(nb) = fnet_htons(segment->urgpointer);
    8f8c:	68fb      	ldr	r3, [r7, #12]
    8f8e:	68db      	ldr	r3, [r3, #12]
    8f90:	3312      	adds	r3, #18
    8f92:	461c      	mov	r4, r3
    8f94:	687b      	ldr	r3, [r7, #4]
    8f96:	8c1b      	ldrh	r3, [r3, #32]
    8f98:	4618      	mov	r0, r3
    8f9a:	f006 fac1 	bl	f520 <fnet_htons>
    8f9e:	4603      	mov	r3, r0
    8fa0:	8023      	strh	r3, [r4, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3196

    /* Checksum calculation.*/
    FNET_TCP_CHECKSUM(nb) = 0; 
    8fa2:	68fb      	ldr	r3, [r7, #12]
    8fa4:	68db      	ldr	r3, [r3, #12]
    8fa6:	3310      	adds	r3, #16
    8fa8:	2200      	movs	r2, #0
    8faa:	801a      	strh	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3222
        checksum_p = 0;
    }
    else
#endif /* FNET_CFG_CPU_ETH_HW_TX_IP_CHECKSUM */
    {
        FNET_TCP_CHECKSUM(nb) = fnet_checksum_pseudo_start(nb, FNET_HTONS((unsigned short)FNET_IP_PROTOCOL_TCP), (unsigned short)nb->total_length);
    8fac:	68fb      	ldr	r3, [r7, #12]
    8fae:	68db      	ldr	r3, [r3, #12]
    8fb0:	3310      	adds	r3, #16
    8fb2:	461c      	mov	r4, r3
    8fb4:	68fb      	ldr	r3, [r7, #12]
    8fb6:	695b      	ldr	r3, [r3, #20]
    8fb8:	b29b      	uxth	r3, r3
    8fba:	68f8      	ldr	r0, [r7, #12]
    8fbc:	f44f 61c0 	mov.w	r1, #1536	; 0x600
    8fc0:	461a      	mov	r2, r3
    8fc2:	f7f7 fe8b 	bl	cdc <fnet_checksum_pseudo_start>
    8fc6:	4603      	mov	r3, r0
    8fc8:	8023      	strh	r3, [r4, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3223
        checksum_p = &FNET_TCP_CHECKSUM(nb);
    8fca:	68fb      	ldr	r3, [r7, #12]
    8fcc:	68db      	ldr	r3, [r3, #12]
    8fce:	3310      	adds	r3, #16
    8fd0:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3230
#endif /* FNET_CFG_UDP_CHECKSUM */
                                   


#if FNET_CFG_IP4
    if(segment->dest_addr.sa_family == AF_INET)
    8fd2:	687b      	ldr	r3, [r7, #4]
    8fd4:	899b      	ldrh	r3, [r3, #12]
    8fd6:	2b01      	cmp	r3, #1
    8fd8:	d12e      	bne.n	9038 <fnet_tcp_sendseg+0x1bc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3232
    {
        error = fnet_ip_output(netif, ((struct sockaddr_in *)(&segment->src_addr))->sin_addr.s_addr, 
    8fda:	687b      	ldr	r3, [r7, #4]
    8fdc:	3304      	adds	r3, #4
    8fde:	6859      	ldr	r1, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3233
                                ((struct sockaddr_in *)(&segment->dest_addr))->sin_addr.s_addr, 
    8fe0:	687b      	ldr	r3, [r7, #4]
    8fe2:	330c      	adds	r3, #12
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3232


#if FNET_CFG_IP4
    if(segment->dest_addr.sa_family == AF_INET)
    {
        error = fnet_ip_output(netif, ((struct sockaddr_in *)(&segment->src_addr))->sin_addr.s_addr, 
    8fe4:	685c      	ldr	r4, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3234
                                ((struct sockaddr_in *)(&segment->dest_addr))->sin_addr.s_addr, 
                                FNET_IP_PROTOCOL_TCP, segment->sockoption->ip_opt.tos,
    8fe6:	687b      	ldr	r3, [r7, #4]
    8fe8:	681b      	ldr	r3, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3232


#if FNET_CFG_IP4
    if(segment->dest_addr.sa_family == AF_INET)
    {
        error = fnet_ip_output(netif, ((struct sockaddr_in *)(&segment->src_addr))->sin_addr.s_addr, 
    8fea:	7858      	ldrb	r0, [r3, #1]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3235
                                ((struct sockaddr_in *)(&segment->dest_addr))->sin_addr.s_addr, 
                                FNET_IP_PROTOCOL_TCP, segment->sockoption->ip_opt.tos,
                                (unsigned char)(segment->sockoption ? segment->sockoption->ip_opt.ttl : FNET_TCP_TTL_DEFAULT),
    8fec:	687b      	ldr	r3, [r7, #4]
    8fee:	681b      	ldr	r3, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3232


#if FNET_CFG_IP4
    if(segment->dest_addr.sa_family == AF_INET)
    {
        error = fnet_ip_output(netif, ((struct sockaddr_in *)(&segment->src_addr))->sin_addr.s_addr, 
    8ff0:	2b00      	cmp	r3, #0
    8ff2:	d003      	beq.n	8ffc <fnet_tcp_sendseg+0x180>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3235
                                ((struct sockaddr_in *)(&segment->dest_addr))->sin_addr.s_addr, 
                                FNET_IP_PROTOCOL_TCP, segment->sockoption->ip_opt.tos,
                                (unsigned char)(segment->sockoption ? segment->sockoption->ip_opt.ttl : FNET_TCP_TTL_DEFAULT),
    8ff4:	687b      	ldr	r3, [r7, #4]
    8ff6:	681b      	ldr	r3, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3232


#if FNET_CFG_IP4
    if(segment->dest_addr.sa_family == AF_INET)
    {
        error = fnet_ip_output(netif, ((struct sockaddr_in *)(&segment->src_addr))->sin_addr.s_addr, 
    8ff8:	781a      	ldrb	r2, [r3, #0]
    8ffa:	e000      	b.n	8ffe <fnet_tcp_sendseg+0x182>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3232 (discriminator 1)
    8ffc:	2240      	movs	r2, #64	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3237 (discriminator 2)
                                ((struct sockaddr_in *)(&segment->dest_addr))->sin_addr.s_addr, 
                                FNET_IP_PROTOCOL_TCP, segment->sockoption->ip_opt.tos,
                                (unsigned char)(segment->sockoption ? segment->sockoption->ip_opt.ttl : FNET_TCP_TTL_DEFAULT),
                                nb, 0, 
                                segment->sockoption ? ((segment->sockoption->flags & SO_DONTROUTE) > 0) : 0,
    8ffe:	687b      	ldr	r3, [r7, #4]
    9000:	681b      	ldr	r3, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3232 (discriminator 2)


#if FNET_CFG_IP4
    if(segment->dest_addr.sa_family == AF_INET)
    {
        error = fnet_ip_output(netif, ((struct sockaddr_in *)(&segment->src_addr))->sin_addr.s_addr, 
    9002:	2b00      	cmp	r3, #0
    9004:	d008      	beq.n	9018 <fnet_tcp_sendseg+0x19c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3237 (discriminator 3)
                                ((struct sockaddr_in *)(&segment->dest_addr))->sin_addr.s_addr, 
                                FNET_IP_PROTOCOL_TCP, segment->sockoption->ip_opt.tos,
                                (unsigned char)(segment->sockoption ? segment->sockoption->ip_opt.ttl : FNET_TCP_TTL_DEFAULT),
                                nb, 0, 
                                segment->sockoption ? ((segment->sockoption->flags & SO_DONTROUTE) > 0) : 0,
    9006:	687b      	ldr	r3, [r7, #4]
    9008:	681b      	ldr	r3, [r3, #0]
    900a:	6a1b      	ldr	r3, [r3, #32]
    900c:	f003 0304 	and.w	r3, r3, #4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3232 (discriminator 3)


#if FNET_CFG_IP4
    if(segment->dest_addr.sa_family == AF_INET)
    {
        error = fnet_ip_output(netif, ((struct sockaddr_in *)(&segment->src_addr))->sin_addr.s_addr, 
    9010:	2b00      	cmp	r3, #0
    9012:	dd01      	ble.n	9018 <fnet_tcp_sendseg+0x19c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3232 (discriminator 5)
    9014:	2301      	movs	r3, #1
    9016:	e000      	b.n	901a <fnet_tcp_sendseg+0x19e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3232 (discriminator 4)
    9018:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3232 (discriminator 6)
    901a:	9000      	str	r0, [sp, #0]
    901c:	9201      	str	r2, [sp, #4]
    901e:	68fa      	ldr	r2, [r7, #12]
    9020:	9202      	str	r2, [sp, #8]
    9022:	2200      	movs	r2, #0
    9024:	9203      	str	r2, [sp, #12]
    9026:	9304      	str	r3, [sp, #16]
    9028:	68bb      	ldr	r3, [r7, #8]
    902a:	9305      	str	r3, [sp, #20]
    902c:	6938      	ldr	r0, [r7, #16]
    902e:	4622      	mov	r2, r4
    9030:	2306      	movs	r3, #6
    9032:	f7f8 fc83 	bl	193c <fnet_ip_output>
    9036:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3257
    }
    else
#endif    
    {};
                      
    return error;
    9038:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3258
}
    903a:	4618      	mov	r0, r3
    903c:	371c      	adds	r7, #28
    903e:	46bd      	mov	sp, r7
    9040:	bd90      	pop	{r4, r7, pc}
    9042:	bf00      	nop

00009044 <fnet_tcp_sendheadseg>:
fnet_tcp_sendheadseg():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3270
*
* RETURNS: TRUE if no error occurs. Otherwise
*          this function returns the error code.                 
*************************************************************************/
static int fnet_tcp_sendheadseg( fnet_socket_t *sk, unsigned char flags, void *options, char optlen )
{
    9044:	b580      	push	{r7, lr}
    9046:	b096      	sub	sp, #88	; 0x58
    9048:	af00      	add	r7, sp, #0
    904a:	60f8      	str	r0, [r7, #12]
    904c:	607a      	str	r2, [r7, #4]
    904e:	460a      	mov	r2, r1
    9050:	72fa      	strb	r2, [r7, #11]
    9052:	72bb      	strb	r3, [r7, #10]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3273
    unsigned long   seq;             
    unsigned short  wnd;           
    int             error = FNET_OK;           
    9054:	2300      	movs	r3, #0
    9056:	647b      	str	r3, [r7, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3274
    unsigned long   ack = 0;         
    9058:	2300      	movs	r3, #0
    905a:	64fb      	str	r3, [r7, #76]	; 0x4c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3275
    unsigned short  urgpointer = 0;
    905c:	2300      	movs	r3, #0
    905e:	f8a7 304a 	strh.w	r3, [r7, #74]	; 0x4a
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3278
    struct fnet_tcp_segment segment;

    fnet_tcp_control_t *cb = (fnet_tcp_control_t *)sk->protocol_control;
    9062:	68fb      	ldr	r3, [r7, #12]
    9064:	699b      	ldr	r3, [r3, #24]
    9066:	643b      	str	r3, [r7, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3282

    
    /* Get the sequence number.*/
    seq = cb->tcpcb_sndseq;
    9068:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    906a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    906c:	657b      	str	r3, [r7, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3285

    /* Get the window.*/
    cb->tcpcb_rcvwnd = fnet_tcp_getrcvwnd(sk);
    906e:	68f8      	ldr	r0, [r7, #12]
    9070:	f7ff fc14 	bl	889c <fnet_tcp_getrcvwnd>
    9074:	4602      	mov	r2, r0
    9076:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    9078:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3288

    /* Process the SYN flag.*/
    if(flags & FNET_TCP_SGT_SYN)
    907a:	7afb      	ldrb	r3, [r7, #11]
    907c:	f003 0302 	and.w	r3, r3, #2
    9080:	2b00      	cmp	r3, #0
    9082:	d011      	beq.n	90a8 <fnet_tcp_sendheadseg+0x64>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3290
    {
        seq++;
    9084:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    9086:	3301      	adds	r3, #1
    9088:	657b      	str	r3, [r7, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3292

        if(cb->tcpcb_rcvwnd > FNET_TCP_MAXWIN)
    908a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    908c:	699b      	ldr	r3, [r3, #24]
    908e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    9092:	d904      	bls.n	909e <fnet_tcp_sendheadseg+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3293
            wnd = FNET_TCP_MAXWIN;
    9094:	f44f 5380 	mov.w	r3, #4096	; 0x1000
    9098:	f8a7 3052 	strh.w	r3, [r7, #82]	; 0x52
    909c:	e00c      	b.n	90b8 <fnet_tcp_sendheadseg+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3295
        else
            wnd = (unsigned short)cb->tcpcb_rcvwnd;
    909e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    90a0:	699b      	ldr	r3, [r3, #24]
    90a2:	f8a7 3052 	strh.w	r3, [r7, #82]	; 0x52
    90a6:	e007      	b.n	90b8 <fnet_tcp_sendheadseg+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3299
    }
    else
    {
        wnd = (unsigned short)(cb->tcpcb_rcvwnd >> cb->tcpcb_recvscale);
    90a8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    90aa:	699a      	ldr	r2, [r3, #24]
    90ac:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    90ae:	7f9b      	ldrb	r3, [r3, #30]
    90b0:	fa22 f303 	lsr.w	r3, r2, r3
    90b4:	f8a7 3052 	strh.w	r3, [r7, #82]	; 0x52
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3303
    }

    /* Process the FIN flag.*/
    if(flags & FNET_TCP_SGT_FIN)
    90b8:	7afb      	ldrb	r3, [r7, #11]
    90ba:	f003 0301 	and.w	r3, r3, #1
    90be:	2b00      	cmp	r3, #0
    90c0:	d01d      	beq.n	90fe <fnet_tcp_sendheadseg+0xba>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3305
    {
        seq++;
    90c2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    90c4:	3301      	adds	r3, #1
    90c6:	657b      	str	r3, [r7, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3308

        /* Change the state after sending of the final segment*/
        if(cb->tcpcb_connection_state == FNET_TCP_CS_ESTABLISHED)
    90c8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    90ca:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    90ce:	2b04      	cmp	r3, #4
    90d0:	d104      	bne.n	90dc <fnet_tcp_sendheadseg+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3309
            cb->tcpcb_connection_state = FNET_TCP_CS_FIN_WAIT_1;
    90d2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    90d4:	2205      	movs	r2, #5
    90d6:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
    90da:	e008      	b.n	90ee <fnet_tcp_sendheadseg+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3310
        else if(cb->tcpcb_connection_state == FNET_TCP_CS_CLOSE_WAIT)
    90dc:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    90de:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    90e2:	2b07      	cmp	r3, #7
    90e4:	d103      	bne.n	90ee <fnet_tcp_sendheadseg+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3311
            cb->tcpcb_connection_state = FNET_TCP_CS_LAST_ACK;
    90e6:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    90e8:	2209      	movs	r2, #9
    90ea:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3313

        cb->tcpcb_flags |= FNET_TCP_CBF_FIN_SENT;
    90ee:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    90f0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    90f4:	f043 0204 	orr.w	r2, r3, #4
    90f8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    90fa:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3318
    }

#if FNET_CFG_TCP_URGENT
    /* Process the URG flag.*/
    if((flags & FNET_TCP_SGT_URG)
    90fe:	7afb      	ldrb	r3, [r7, #11]
    9100:	f003 0320 	and.w	r3, r3, #32
    9104:	2b00      	cmp	r3, #0
    9106:	d021      	beq.n	914c <fnet_tcp_sendheadseg+0x108>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3319
           && fnet_tcp_getsize(cb->tcpcb_sndseq, cb->tcpcb_sndurgseq) < FNET_TCP_MAXWIN)
    9108:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    910a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    910c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    910e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    9110:	4610      	mov	r0, r2
    9112:	4619      	mov	r1, r3
    9114:	f000 fdfc 	bl	9d10 <fnet_tcp_getsize>
    9118:	4603      	mov	r3, r0
    911a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    911e:	d215      	bcs.n	914c <fnet_tcp_sendheadseg+0x108>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3321
    {
        urgpointer = (unsigned short)fnet_tcp_getsize(cb->tcpcb_sndseq, cb->tcpcb_sndurgseq);
    9120:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    9122:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    9124:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    9126:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    9128:	4610      	mov	r0, r2
    912a:	4619      	mov	r1, r3
    912c:	f000 fdf0 	bl	9d10 <fnet_tcp_getsize>
    9130:	4603      	mov	r3, r0
    9132:	f8a7 304a 	strh.w	r3, [r7, #74]	; 0x4a
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3323

        if(sk->options.tcp_opt.flags & TCP_BSD)
    9136:	68fb      	ldr	r3, [r7, #12]
    9138:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    913a:	f003 0302 	and.w	r3, r3, #2
    913e:	2b00      	cmp	r3, #0
    9140:	d004      	beq.n	914c <fnet_tcp_sendheadseg+0x108>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3324
            urgpointer++;
    9142:	f8b7 304a 	ldrh.w	r3, [r7, #74]	; 0x4a
    9146:	3301      	adds	r3, #1
    9148:	f8a7 304a 	strh.w	r3, [r7, #74]	; 0x4a
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3329
    }
#endif /* FNET_CFG_TCP_URGENT */

    /* Process the ACK flag.*/
    if(flags & FNET_TCP_SGT_ACK)
    914c:	7afb      	ldrb	r3, [r7, #11]
    914e:	f003 0310 	and.w	r3, r3, #16
    9152:	2b00      	cmp	r3, #0
    9154:	d002      	beq.n	915c <fnet_tcp_sendheadseg+0x118>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3330
        ack = cb->tcpcb_sndack;
    9156:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    9158:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    915a:	64fb      	str	r3, [r7, #76]	; 0x4c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3333

    /* Send the segment.*/ 
    segment.sockoption = &sk->options; 
    915c:	68fb      	ldr	r3, [r7, #12]
    915e:	3364      	adds	r3, #100	; 0x64
    9160:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3334
    segment.src_addr = sk->local_addr;
    9162:	68fa      	ldr	r2, [r7, #12]
    9164:	f107 0314 	add.w	r3, r7, #20
    9168:	325c      	adds	r2, #92	; 0x5c
    916a:	e892 0003 	ldmia.w	r2, {r0, r1}
    916e:	e883 0003 	stmia.w	r3, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3335
    segment.dest_addr = sk->foreign_addr;
    9172:	68fa      	ldr	r2, [r7, #12]
    9174:	f107 031c 	add.w	r3, r7, #28
    9178:	3254      	adds	r2, #84	; 0x54
    917a:	e892 0003 	ldmia.w	r2, {r0, r1}
    917e:	e883 0003 	stmia.w	r3, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3336
    segment.seq = cb->tcpcb_sndseq;
    9182:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    9184:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    9186:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3337
    segment.ack = ack;
    9188:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    918a:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3338
    segment.flags = flags;
    918c:	7afb      	ldrb	r3, [r7, #11]
    918e:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3339
    segment.wnd = wnd;
    9192:	f8b7 3052 	ldrh.w	r3, [r7, #82]	; 0x52
    9196:	85fb      	strh	r3, [r7, #46]	; 0x2e
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3340
    segment.urgpointer = urgpointer;
    9198:	f8b7 304a 	ldrh.w	r3, [r7, #74]	; 0x4a
    919c:	863b      	strh	r3, [r7, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3341
    segment.options = options;
    919e:	687b      	ldr	r3, [r7, #4]
    91a0:	637b      	str	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3342
    segment.optlen = optlen;
    91a2:	7abb      	ldrb	r3, [r7, #10]
    91a4:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3343
    segment.data = 0;
    91a8:	2300      	movs	r3, #0
    91aa:	63fb      	str	r3, [r7, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3345
    
    error = fnet_tcp_sendseg(&segment);
    91ac:	f107 0310 	add.w	r3, r7, #16
    91b0:	4618      	mov	r0, r3
    91b2:	f7ff fe63 	bl	8e7c <fnet_tcp_sendseg>
    91b6:	6478      	str	r0, [r7, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3349
    

    /* Turn off the delayed acknowledgment timer.*/
    cb->tcpcb_timers.delayed_ack = FNET_TCP_TIMER_OFF;
    91b8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    91ba:	f04f 32ff 	mov.w	r2, #4294967295
    91be:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3351

    cb->tcpcb_newfreercvsize = 0;
    91c2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    91c4:	2200      	movs	r2, #0
    91c6:	651a      	str	r2, [r3, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3354

    /* Set the new sequence number.*/
    cb->tcpcb_sndseq = seq;
    91c8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    91ca:	6d7a      	ldr	r2, [r7, #84]	; 0x54
    91cc:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3356

    if(FNET_TCP_COMP_G(cb->tcpcb_sndseq, cb->tcpcb_maxrcvack))
    91ce:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    91d0:	691b      	ldr	r3, [r3, #16]
    91d2:	1c59      	adds	r1, r3, #1
    91d4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    91d6:	691b      	ldr	r3, [r3, #16]
    91d8:	f103 5200 	add.w	r2, r3, #536870912	; 0x20000000
    91dc:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    91de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    91e0:	4608      	mov	r0, r1
    91e2:	4611      	mov	r1, r2
    91e4:	461a      	mov	r2, r3
    91e6:	f000 fd6d 	bl	9cc4 <fnet_tcp_hit>
    91ea:	4603      	mov	r3, r0
    91ec:	2b00      	cmp	r3, #0
    91ee:	d003      	beq.n	91f8 <fnet_tcp_sendheadseg+0x1b4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3357
        cb->tcpcb_maxrcvack = cb->tcpcb_sndseq;
    91f0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    91f2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    91f4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    91f6:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3359

    return error;
    91f8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3360
}
    91fa:	4618      	mov	r0, r3
    91fc:	3758      	adds	r7, #88	; 0x58
    91fe:	46bd      	mov	sp, r7
    9200:	bd80      	pop	{r7, pc}
    9202:	bf00      	nop

00009204 <fnet_tcp_senddataseg>:
fnet_tcp_senddataseg():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3371
*
* RETURNS: TRUE if no error occurs. Otherwise
*          this function returns the error code.                 
*************************************************************************/
static int fnet_tcp_senddataseg( fnet_socket_t *sk, void *options, char optlen, unsigned long datasize )
{
    9204:	b590      	push	{r4, r7, lr}
    9206:	b099      	sub	sp, #100	; 0x64
    9208:	af00      	add	r7, sp, #0
    920a:	60f8      	str	r0, [r7, #12]
    920c:	60b9      	str	r1, [r7, #8]
    920e:	603b      	str	r3, [r7, #0]
    9210:	4613      	mov	r3, r2
    9212:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3374
    unsigned char           flags;          
    long                    newdatasize;    /* Datasize that can be sent.*/
    unsigned long           urgpointer = 0; /* Pointer of the urgent data.*/
    9214:	2300      	movs	r3, #0
    9216:	65bb      	str	r3, [r7, #88]	; 0x58
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3375
    fnet_netbuf_t           *data = 0;      /* Data pointer.*/
    9218:	2300      	movs	r3, #0
    921a:	657b      	str	r3, [r7, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3380
    unsigned long           seq;            /* Sequence number.*/
    int                     error;                   
    unsigned long           tmp;
    struct fnet_tcp_segment segment;
    fnet_tcp_control_t      *cb = (fnet_tcp_control_t *)sk->protocol_control;
    921c:	68fb      	ldr	r3, [r7, #12]
    921e:	699b      	ldr	r3, [r3, #24]
    9220:	64fb      	str	r3, [r7, #76]	; 0x4c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3383
    
    /* Receive the sequence number.*/
    seq = cb->tcpcb_sndseq;
    9222:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9224:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    9226:	653b      	str	r3, [r7, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3386

    /* Reset the flags.*/
    flags = 0;
    9228:	2300      	movs	r3, #0
    922a:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3389

    /* Data that can be sent.*/
    newdatasize = (long)(sk->send_buffer.count - fnet_tcp_getsize(cb->tcpcb_rcvack, cb->tcpcb_sndseq));
    922e:	68fb      	ldr	r3, [r7, #12]
    9230:	6c5c      	ldr	r4, [r3, #68]	; 0x44
    9232:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9234:	68da      	ldr	r2, [r3, #12]
    9236:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9238:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    923a:	4610      	mov	r0, r2
    923c:	4619      	mov	r1, r3
    923e:	f000 fd67 	bl	9d10 <fnet_tcp_getsize>
    9242:	4603      	mov	r3, r0
    9244:	1ae3      	subs	r3, r4, r3
    9246:	64bb      	str	r3, [r7, #72]	; 0x48
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3392

    /* Check the data size.*/
    if(datasize > newdatasize)
    9248:	6cba      	ldr	r2, [r7, #72]	; 0x48
    924a:	683b      	ldr	r3, [r7, #0]
    924c:	429a      	cmp	r2, r3
    924e:	d201      	bcs.n	9254 <fnet_tcp_senddataseg+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3393
        datasize = (unsigned long)newdatasize;
    9250:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    9252:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3396

#if FNET_CFG_IP4
    tmp = fnet_ip_maximum_packet(((struct sockaddr_in *)(&sk->foreign_addr))->sin_addr.s_addr);
    9254:	68fb      	ldr	r3, [r7, #12]
    9256:	3354      	adds	r3, #84	; 0x54
    9258:	685b      	ldr	r3, [r3, #4]
    925a:	4618      	mov	r0, r3
    925c:	f7f8 fdc8 	bl	1df0 <fnet_ip_maximum_packet>
    9260:	6478      	str	r0, [r7, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3402
#else //TBD
//    tmp = 0;
    tmp = 10240;
#endif    

    if((datasize + FNET_TCP_SIZE_HEADER) > tmp)
    9262:	683b      	ldr	r3, [r7, #0]
    9264:	f103 0214 	add.w	r2, r3, #20
    9268:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    926a:	429a      	cmp	r2, r3
    926c:	d902      	bls.n	9274 <fnet_tcp_senddataseg+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3403
        datasize = (tmp - FNET_TCP_SIZE_HEADER);
    926e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    9270:	3b14      	subs	r3, #20
    9272:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3406

    /* Create the flags.*/
    flags |= FNET_TCP_SGT_ACK;
    9274:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
    9278:	f043 0310 	orr.w	r3, r3, #16
    927c:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3410

    /* If the data of the segment is the last in the output buffer,*/
    /* Set PSH flag.*/
    if(newdatasize == datasize && datasize)
    9280:	6cba      	ldr	r2, [r7, #72]	; 0x48
    9282:	683b      	ldr	r3, [r7, #0]
    9284:	429a      	cmp	r2, r3
    9286:	d108      	bne.n	929a <fnet_tcp_senddataseg+0x96>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3410 (discriminator 1)
    9288:	683b      	ldr	r3, [r7, #0]
    928a:	2b00      	cmp	r3, #0
    928c:	d005      	beq.n	929a <fnet_tcp_senddataseg+0x96>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3411
        flags |= FNET_TCP_SGT_PSH;
    928e:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
    9292:	f043 0308 	orr.w	r3, r3, #8
    9296:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3415

#if FNET_CFG_TCP_URGENT
    /* Process the urgent request.*/
    if(FNET_TCP_COMP_GE(cb->tcpcb_sndurgseq, cb->tcpcb_sndseq))
    929a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    929c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
    929e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    92a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    92a2:	f103 5200 	add.w	r2, r3, #536870912	; 0x20000000
    92a6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    92a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    92aa:	4608      	mov	r0, r1
    92ac:	4611      	mov	r1, r2
    92ae:	461a      	mov	r2, r3
    92b0:	f000 fd08 	bl	9cc4 <fnet_tcp_hit>
    92b4:	4603      	mov	r3, r0
    92b6:	2b00      	cmp	r3, #0
    92b8:	d025      	beq.n	9306 <fnet_tcp_senddataseg+0x102>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3417
    {
        if(fnet_tcp_getsize(cb->tcpcb_sndseq, cb->tcpcb_sndurgseq) < FNET_TCP_MAX_URG_POINTER)
    92ba:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    92bc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    92be:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    92c0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    92c2:	4610      	mov	r0, r2
    92c4:	4619      	mov	r1, r3
    92c6:	f000 fd23 	bl	9d10 <fnet_tcp_getsize>
    92ca:	4602      	mov	r2, r0
    92cc:	f64f 73fe 	movw	r3, #65534	; 0xfffe
    92d0:	429a      	cmp	r2, r3
    92d2:	d82f      	bhi.n	9334 <fnet_tcp_senddataseg+0x130>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3420
        {
            /* Set the urgent pointer.*/
            urgpointer = fnet_tcp_getsize(cb->tcpcb_sndseq, cb->tcpcb_sndurgseq);
    92d4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    92d6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    92d8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    92da:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    92dc:	4610      	mov	r0, r2
    92de:	4619      	mov	r1, r3
    92e0:	f000 fd16 	bl	9d10 <fnet_tcp_getsize>
    92e4:	65b8      	str	r0, [r7, #88]	; 0x58
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3421
            flags |= FNET_TCP_SGT_URG;
    92e6:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
    92ea:	f043 0320 	orr.w	r3, r3, #32
    92ee:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3424

            /* If the BSD interpretation, increase the urgent pointer.*/
            if(sk->options.tcp_opt.flags & TCP_BSD)
    92f2:	68fb      	ldr	r3, [r7, #12]
    92f4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    92f6:	f003 0302 	and.w	r3, r3, #2
    92fa:	2b00      	cmp	r3, #0
    92fc:	d01a      	beq.n	9334 <fnet_tcp_senddataseg+0x130>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3425
                urgpointer++;
    92fe:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    9300:	3301      	adds	r3, #1
    9302:	65bb      	str	r3, [r7, #88]	; 0x58
    9304:	e016      	b.n	9334 <fnet_tcp_senddataseg+0x130>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3431
        }
    }
    else
    {
        /* Pull the send urgent pointer along with the send window.*/
        if(FNET_TCP_COMP_G(cb->tcpcb_rcvack - 1, cb->tcpcb_sndurgseq))
    9306:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9308:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    930a:	1c59      	adds	r1, r3, #1
    930c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    930e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    9310:	f103 5200 	add.w	r2, r3, #536870912	; 0x20000000
    9314:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9316:	68db      	ldr	r3, [r3, #12]
    9318:	3b01      	subs	r3, #1
    931a:	4608      	mov	r0, r1
    931c:	4611      	mov	r1, r2
    931e:	461a      	mov	r2, r3
    9320:	f000 fcd0 	bl	9cc4 <fnet_tcp_hit>
    9324:	4603      	mov	r3, r0
    9326:	2b00      	cmp	r3, #0
    9328:	d004      	beq.n	9334 <fnet_tcp_senddataseg+0x130>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3432
            cb->tcpcb_sndurgseq = cb->tcpcb_rcvack - 1;
    932a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    932c:	68db      	ldr	r3, [r3, #12]
    932e:	1e5a      	subs	r2, r3, #1
    9330:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9332:	64da      	str	r2, [r3, #76]	; 0x4c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3437
    }
#endif /* FNET_CFG_TCP_URGENT */

    /* If final segment must be sent.*/
    if(sk->send_buffer.is_shutdown)
    9334:	68fb      	ldr	r3, [r7, #12]
    9336:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    9338:	2b00      	cmp	r3, #0
    933a:	d027      	beq.n	938c <fnet_tcp_senddataseg+0x188>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3439
    {
        if(newdatasize == datasize)
    933c:	6cba      	ldr	r2, [r7, #72]	; 0x48
    933e:	683b      	ldr	r3, [r7, #0]
    9340:	429a      	cmp	r2, r3
    9342:	d123      	bne.n	938c <fnet_tcp_senddataseg+0x188>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3442
        {
            /* End of the data sending.*/
            flags |= FNET_TCP_SGT_FIN;
    9344:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
    9348:	f043 0301 	orr.w	r3, r3, #1
    934c:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3443
            seq++;
    9350:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    9352:	3301      	adds	r3, #1
    9354:	653b      	str	r3, [r7, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3446

            /* Change the state after the sending of the final segment.*/
            if(cb->tcpcb_connection_state == FNET_TCP_CS_ESTABLISHED)
    9356:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9358:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    935c:	2b04      	cmp	r3, #4
    935e:	d104      	bne.n	936a <fnet_tcp_senddataseg+0x166>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3447
                cb->tcpcb_connection_state = FNET_TCP_CS_FIN_WAIT_1;
    9360:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9362:	2205      	movs	r2, #5
    9364:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
    9368:	e008      	b.n	937c <fnet_tcp_senddataseg+0x178>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3449

            else if(cb->tcpcb_connection_state == FNET_TCP_CS_CLOSE_WAIT)
    936a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    936c:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    9370:	2b07      	cmp	r3, #7
    9372:	d103      	bne.n	937c <fnet_tcp_senddataseg+0x178>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3450
                cb->tcpcb_connection_state = FNET_TCP_CS_LAST_ACK;
    9374:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9376:	2209      	movs	r2, #9
    9378:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3452

            cb->tcpcb_flags |= FNET_TCP_CBF_FIN_SENT;
    937c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    937e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    9382:	f043 0204 	orr.w	r2, r3, #4
    9386:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9388:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3457
        }
    }

    /* Receive the window size.*/
    cb->tcpcb_rcvwnd = fnet_tcp_getrcvwnd(sk);
    938c:	68f8      	ldr	r0, [r7, #12]
    938e:	f7ff fa85 	bl	889c <fnet_tcp_getrcvwnd>
    9392:	4602      	mov	r2, r0
    9394:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9396:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3460

    /* If the data is present, add it.*/
    if(datasize)
    9398:	683b      	ldr	r3, [r7, #0]
    939a:	2b00      	cmp	r3, #0
    939c:	d018      	beq.n	93d0 <fnet_tcp_senddataseg+0x1cc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3462
    {
        data = fnet_netbuf_copy(sk->send_buffer.net_buf_chain, (int)(sk->send_buffer.count - newdatasize),
    939e:	68fb      	ldr	r3, [r7, #12]
    93a0:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
    93a2:	68fb      	ldr	r3, [r7, #12]
    93a4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    93a6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    93a8:	1ad3      	subs	r3, r2, r3
    93aa:	461a      	mov	r2, r3
    93ac:	683b      	ldr	r3, [r7, #0]
    93ae:	4608      	mov	r0, r1
    93b0:	4611      	mov	r1, r2
    93b2:	461a      	mov	r2, r3
    93b4:	2300      	movs	r3, #0
    93b6:	f7f9 f9e3 	bl	2780 <fnet_netbuf_copy>
    93ba:	6578      	str	r0, [r7, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3466
                                (int)datasize,                 0);

        /* Check the memory allocation.*/
        if(!data)
    93bc:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    93be:	2b00      	cmp	r3, #0
    93c0:	d106      	bne.n	93d0 <fnet_tcp_senddataseg+0x1cc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3468
        {
            cb->tcpcb_sndseq = seq + datasize;
    93c2:	6d3a      	ldr	r2, [r7, #80]	; 0x50
    93c4:	683b      	ldr	r3, [r7, #0]
    93c6:	441a      	add	r2, r3
    93c8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    93ca:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3469
            return FNET_ERR_NOMEM;
    93cc:	2303      	movs	r3, #3
    93ce:	e057      	b.n	9480 <fnet_tcp_senddataseg+0x27c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3474
        }
    }

    /* Send the segment.*/
    segment.sockoption = &sk->options; 
    93d0:	68fb      	ldr	r3, [r7, #12]
    93d2:	3364      	adds	r3, #100	; 0x64
    93d4:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3475
    segment.src_addr = sk->local_addr;
    93d6:	68fa      	ldr	r2, [r7, #12]
    93d8:	f107 0314 	add.w	r3, r7, #20
    93dc:	325c      	adds	r2, #92	; 0x5c
    93de:	e892 0003 	ldmia.w	r2, {r0, r1}
    93e2:	e883 0003 	stmia.w	r3, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3476
    segment.dest_addr = sk->foreign_addr;    
    93e6:	68fa      	ldr	r2, [r7, #12]
    93e8:	f107 031c 	add.w	r3, r7, #28
    93ec:	3254      	adds	r2, #84	; 0x54
    93ee:	e892 0003 	ldmia.w	r2, {r0, r1}
    93f2:	e883 0003 	stmia.w	r3, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3477
    segment.seq = cb->tcpcb_sndseq;
    93f6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    93f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    93fa:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3478
    segment.ack = cb->tcpcb_sndack;
    93fc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    93fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    9400:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3479
    segment.flags = flags;
    9402:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
    9406:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3480
    segment.wnd = (unsigned short)(cb->tcpcb_rcvwnd >> cb->tcpcb_recvscale);
    940a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    940c:	699a      	ldr	r2, [r3, #24]
    940e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9410:	7f9b      	ldrb	r3, [r3, #30]
    9412:	fa22 f303 	lsr.w	r3, r2, r3
    9416:	b29b      	uxth	r3, r3
    9418:	85fb      	strh	r3, [r7, #46]	; 0x2e
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3481
    segment.urgpointer = (unsigned short)urgpointer;
    941a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    941c:	b29b      	uxth	r3, r3
    941e:	863b      	strh	r3, [r7, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3482
    segment.options = options;
    9420:	68bb      	ldr	r3, [r7, #8]
    9422:	637b      	str	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3483
    segment.optlen = optlen;
    9424:	79fb      	ldrb	r3, [r7, #7]
    9426:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3484
    segment.data = data;
    942a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    942c:	63fb      	str	r3, [r7, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3486
    
    error = fnet_tcp_sendseg(&segment);
    942e:	f107 0310 	add.w	r3, r7, #16
    9432:	4618      	mov	r0, r3
    9434:	f7ff fd22 	bl	8e7c <fnet_tcp_sendseg>
    9438:	6438      	str	r0, [r7, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3489

    /* Turn off the delayed acknowledgment timer.*/
    cb->tcpcb_timers.delayed_ack = FNET_TCP_TIMER_OFF;
    943a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    943c:	f04f 32ff 	mov.w	r2, #4294967295
    9440:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3490
    cb->tcpcb_newfreercvsize = 0;
    9444:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9446:	2200      	movs	r2, #0
    9448:	651a      	str	r2, [r3, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3493

    /* Set the new sequence number.*/
    cb->tcpcb_sndseq = seq + datasize;
    944a:	6d3a      	ldr	r2, [r7, #80]	; 0x50
    944c:	683b      	ldr	r3, [r7, #0]
    944e:	441a      	add	r2, r3
    9450:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9452:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3495

    if(FNET_TCP_COMP_G(cb->tcpcb_sndseq, cb->tcpcb_maxrcvack))
    9454:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9456:	691b      	ldr	r3, [r3, #16]
    9458:	1c59      	adds	r1, r3, #1
    945a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    945c:	691b      	ldr	r3, [r3, #16]
    945e:	f103 5200 	add.w	r2, r3, #536870912	; 0x20000000
    9462:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9464:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    9466:	4608      	mov	r0, r1
    9468:	4611      	mov	r1, r2
    946a:	461a      	mov	r2, r3
    946c:	f000 fc2a 	bl	9cc4 <fnet_tcp_hit>
    9470:	4603      	mov	r3, r0
    9472:	2b00      	cmp	r3, #0
    9474:	d003      	beq.n	947e <fnet_tcp_senddataseg+0x27a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3496
        cb->tcpcb_maxrcvack = cb->tcpcb_sndseq;
    9476:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    9478:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    947a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    947c:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3498

    return error;
    947e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3499
}
    9480:	4618      	mov	r0, r3
    9482:	3764      	adds	r7, #100	; 0x64
    9484:	46bd      	mov	sp, r7
    9486:	bd90      	pop	{r4, r7, pc}

00009488 <fnet_tcp_sendack>:
fnet_tcp_sendack():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3509
* DESCRIPTION: This function sends the acknowledgement segment.
*
* RETURNS: None.                 
*************************************************************************/
static void fnet_tcp_sendack( fnet_socket_t *sk )
{
    9488:	b580      	push	{r7, lr}
    948a:	b086      	sub	sp, #24
    948c:	af00      	add	r7, sp, #0
    948e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3513
    char                options[FNET_TCP_MAX_OPT_SIZE]; 
    char                optionlen;                     

    fnet_tcp_control_t  *cb = (fnet_tcp_control_t *)sk->protocol_control;
    9490:	687b      	ldr	r3, [r7, #4]
    9492:	699b      	ldr	r3, [r3, #24]
    9494:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3515
    
    switch(cb->tcpcb_connection_state)
    9496:	697b      	ldr	r3, [r7, #20]
    9498:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    949c:	2b05      	cmp	r3, #5
    949e:	d01a      	beq.n	94d6 <fnet_tcp_sendack+0x4e>
    94a0:	2b09      	cmp	r3, #9
    94a2:	d018      	beq.n	94d6 <fnet_tcp_sendack+0x4e>
    94a4:	2b02      	cmp	r3, #2
    94a6:	d122      	bne.n	94ee <fnet_tcp_sendack+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3521
    {
        /* In the SYN_RCVD state acknowledgement must be with the SYN flag.*/ 
        case FNET_TCP_CS_SYN_RCVD:

          /* Reinitialize of the sequnce number.*/
          cb->tcpcb_sndseq--;
    94a8:	697b      	ldr	r3, [r7, #20]
    94aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    94ac:	1e5a      	subs	r2, r3, #1
    94ae:	697b      	ldr	r3, [r7, #20]
    94b0:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3523

          fnet_tcp_setsynopt(sk, options, &optionlen);
    94b2:	f107 020c 	add.w	r2, r7, #12
    94b6:	f107 030b 	add.w	r3, r7, #11
    94ba:	6878      	ldr	r0, [r7, #4]
    94bc:	4611      	mov	r1, r2
    94be:	461a      	mov	r2, r3
    94c0:	f000 fa0e 	bl	98e0 <fnet_tcp_setsynopt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3526

          /* Create and send the SYN segment.*/      
          fnet_tcp_sendheadseg(sk, FNET_TCP_SGT_SYN | FNET_TCP_SGT_ACK, options, optionlen);
    94c4:	7afb      	ldrb	r3, [r7, #11]
    94c6:	f107 020c 	add.w	r2, r7, #12
    94ca:	b25b      	sxtb	r3, r3
    94cc:	6878      	ldr	r0, [r7, #4]
    94ce:	2112      	movs	r1, #18
    94d0:	f7ff fdb8 	bl	9044 <fnet_tcp_sendheadseg>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3527
          break;
    94d4:	e029      	b.n	952a <fnet_tcp_sendack+0xa2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3534
        /* In the FIN_WAIT_1 and LAST_ACK states acknowledgement must be with the FIN flag.*/
        case FNET_TCP_CS_FIN_WAIT_1:
        case FNET_TCP_CS_LAST_ACK:

          /* Reinitialize the sequnce number.*/
          cb->tcpcb_sndseq--;
    94d6:	697b      	ldr	r3, [r7, #20]
    94d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    94da:	1e5a      	subs	r2, r3, #1
    94dc:	697b      	ldr	r3, [r7, #20]
    94de:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3537

          /* Create and send the FIN segment.*/
          fnet_tcp_sendheadseg(sk, FNET_TCP_SGT_FIN | FNET_TCP_SGT_ACK, 0, 0);
    94e0:	6878      	ldr	r0, [r7, #4]
    94e2:	2111      	movs	r1, #17
    94e4:	2200      	movs	r2, #0
    94e6:	2300      	movs	r3, #0
    94e8:	f7ff fdac 	bl	9044 <fnet_tcp_sendheadseg>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3538
          break;
    94ec:	e01d      	b.n	952a <fnet_tcp_sendack+0xa2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3543

        default:
    #if FNET_CFG_TCP_URGENT        
          /* If the urgent data is present, set the urgent flag.*/
          if(FNET_TCP_COMP_GE(cb->tcpcb_sndurgseq, cb->tcpcb_sndseq))
    94ee:	697b      	ldr	r3, [r7, #20]
    94f0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
    94f2:	697b      	ldr	r3, [r7, #20]
    94f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    94f6:	f103 5200 	add.w	r2, r3, #536870912	; 0x20000000
    94fa:	697b      	ldr	r3, [r7, #20]
    94fc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    94fe:	4608      	mov	r0, r1
    9500:	4611      	mov	r1, r2
    9502:	461a      	mov	r2, r3
    9504:	f000 fbde 	bl	9cc4 <fnet_tcp_hit>
    9508:	4603      	mov	r3, r0
    950a:	2b00      	cmp	r3, #0
    950c:	d006      	beq.n	951c <fnet_tcp_sendack+0x94>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3544
              fnet_tcp_sendheadseg(sk, FNET_TCP_SGT_ACK | FNET_TCP_SGT_URG, 0, 0);
    950e:	6878      	ldr	r0, [r7, #4]
    9510:	2130      	movs	r1, #48	; 0x30
    9512:	2200      	movs	r2, #0
    9514:	2300      	movs	r3, #0
    9516:	f7ff fd95 	bl	9044 <fnet_tcp_sendheadseg>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3549
          else
    #endif /* FNET_CFG_TCP_URGENT */
              fnet_tcp_sendheadseg(sk, FNET_TCP_SGT_ACK, 0, 0);

          break;
    951a:	e005      	b.n	9528 <fnet_tcp_sendack+0xa0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3547
          /* If the urgent data is present, set the urgent flag.*/
          if(FNET_TCP_COMP_GE(cb->tcpcb_sndurgseq, cb->tcpcb_sndseq))
              fnet_tcp_sendheadseg(sk, FNET_TCP_SGT_ACK | FNET_TCP_SGT_URG, 0, 0);
          else
    #endif /* FNET_CFG_TCP_URGENT */
              fnet_tcp_sendheadseg(sk, FNET_TCP_SGT_ACK, 0, 0);
    951c:	6878      	ldr	r0, [r7, #4]
    951e:	2110      	movs	r1, #16
    9520:	2200      	movs	r2, #0
    9522:	2300      	movs	r3, #0
    9524:	f7ff fd8e 	bl	9044 <fnet_tcp_sendheadseg>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3549

          break;
    9528:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3553
    }

    /* Turn of the delayed acknowledgment timer.*/
    cb->tcpcb_timers.delayed_ack = FNET_TCP_TIMER_OFF;
    952a:	697b      	ldr	r3, [r7, #20]
    952c:	f04f 32ff 	mov.w	r2, #4294967295
    9530:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3556
    

}
    9534:	3718      	adds	r7, #24
    9536:	46bd      	mov	sp, r7
    9538:	bd80      	pop	{r7, pc}
    953a:	bf00      	nop

0000953c <fnet_tcp_sendrst>:
fnet_tcp_sendrst():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3567
*
* RETURNS: None.                  
*************************************************************************/
static void fnet_tcp_sendrst( fnet_socket_option_t *sockoption, fnet_netbuf_t *insegment,
                              struct sockaddr *src_addr,  struct sockaddr *dest_addr)
{
    953c:	b580      	push	{r7, lr}
    953e:	b090      	sub	sp, #64	; 0x40
    9540:	af00      	add	r7, sp, #0
    9542:	60f8      	str	r0, [r7, #12]
    9544:	60b9      	str	r1, [r7, #8]
    9546:	607a      	str	r2, [r7, #4]
    9548:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3570
    struct fnet_tcp_segment segment;
    
    if(FNET_TCP_FLAGS(insegment) & FNET_TCP_SGT_ACK)
    954a:	68bb      	ldr	r3, [r7, #8]
    954c:	68db      	ldr	r3, [r3, #12]
    954e:	330d      	adds	r3, #13
    9550:	781b      	ldrb	r3, [r3, #0]
    9552:	f003 0310 	and.w	r3, r3, #16
    9556:	2b00      	cmp	r3, #0
    9558:	d00e      	beq.n	9578 <fnet_tcp_sendrst+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3573
    {
        /* Send the reset segment without acknowledgment*/
        segment.seq = fnet_ntohl(FNET_TCP_ACK(insegment));
    955a:	68bb      	ldr	r3, [r7, #8]
    955c:	68db      	ldr	r3, [r3, #12]
    955e:	3308      	adds	r3, #8
    9560:	681b      	ldr	r3, [r3, #0]
    9562:	4618      	mov	r0, r3
    9564:	f005 fff2 	bl	f54c <fnet_htonl>
    9568:	4603      	mov	r3, r0
    956a:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3574
        segment.ack = 0;
    956c:	2300      	movs	r3, #0
    956e:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3575
        segment.flags = FNET_TCP_SGT_RST;
    9570:	2304      	movs	r3, #4
    9572:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
    9576:	e02b      	b.n	95d0 <fnet_tcp_sendrst+0x94>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3580
    }                         
    else
    {
        /* Send the reset segment with acknowledgment*/
        segment.seq = 0;
    9578:	2300      	movs	r3, #0
    957a:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3581
        segment.ack = fnet_ntohl(FNET_TCP_SEQ(insegment)) + insegment->total_length - FNET_TCP_LENGTH(insegment)
    957c:	68bb      	ldr	r3, [r7, #8]
    957e:	68db      	ldr	r3, [r3, #12]
    9580:	3304      	adds	r3, #4
    9582:	681b      	ldr	r3, [r3, #0]
    9584:	4618      	mov	r0, r3
    9586:	f005 ffe1 	bl	f54c <fnet_htonl>
    958a:	4602      	mov	r2, r0
    958c:	68bb      	ldr	r3, [r7, #8]
    958e:	695b      	ldr	r3, [r3, #20]
    9590:	18d1      	adds	r1, r2, r3
    9592:	68bb      	ldr	r3, [r7, #8]
    9594:	68db      	ldr	r3, [r3, #12]
    9596:	330c      	adds	r3, #12
    9598:	781b      	ldrb	r3, [r3, #0]
    959a:	091b      	lsrs	r3, r3, #4
    959c:	b2db      	uxtb	r3, r3
    959e:	461a      	mov	r2, r3
    95a0:	4613      	mov	r3, r2
    95a2:	079b      	lsls	r3, r3, #30
    95a4:	1a9b      	subs	r3, r3, r2
    95a6:	009b      	lsls	r3, r3, #2
    95a8:	18ca      	adds	r2, r1, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3582
                      + (FNET_TCP_SGT_FIN & FNET_TCP_FLAGS(insegment)) + ((FNET_TCP_SGT_SYN
    95aa:	68bb      	ldr	r3, [r7, #8]
    95ac:	68db      	ldr	r3, [r3, #12]
    95ae:	330d      	adds	r3, #13
    95b0:	781b      	ldrb	r3, [r3, #0]
    95b2:	f003 0301 	and.w	r3, r3, #1
    95b6:	441a      	add	r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3583
                       & FNET_TCP_FLAGS(insegment)) >> 1);
    95b8:	68bb      	ldr	r3, [r7, #8]
    95ba:	68db      	ldr	r3, [r3, #12]
    95bc:	330d      	adds	r3, #13
    95be:	781b      	ldrb	r3, [r3, #0]
    95c0:	f003 0302 	and.w	r3, r3, #2
    95c4:	105b      	asrs	r3, r3, #1
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3582
    else
    {
        /* Send the reset segment with acknowledgment*/
        segment.seq = 0;
        segment.ack = fnet_ntohl(FNET_TCP_SEQ(insegment)) + insegment->total_length - FNET_TCP_LENGTH(insegment)
                      + (FNET_TCP_SGT_FIN & FNET_TCP_FLAGS(insegment)) + ((FNET_TCP_SGT_SYN
    95c6:	4413      	add	r3, r2
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3581
    }                         
    else
    {
        /* Send the reset segment with acknowledgment*/
        segment.seq = 0;
        segment.ack = fnet_ntohl(FNET_TCP_SEQ(insegment)) + insegment->total_length - FNET_TCP_LENGTH(insegment)
    95c8:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3584
                      + (FNET_TCP_SGT_FIN & FNET_TCP_FLAGS(insegment)) + ((FNET_TCP_SGT_SYN
                       & FNET_TCP_FLAGS(insegment)) >> 1);
        segment.flags = FNET_TCP_SGT_RST | FNET_TCP_SGT_ACK;
    95ca:	2314      	movs	r3, #20
    95cc:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3587
    } 
    
    segment.sockoption = sockoption; 
    95d0:	68fb      	ldr	r3, [r7, #12]
    95d2:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3588
    segment.src_addr = *src_addr;
    95d4:	687a      	ldr	r2, [r7, #4]
    95d6:	f107 0314 	add.w	r3, r7, #20
    95da:	6810      	ldr	r0, [r2, #0]
    95dc:	6851      	ldr	r1, [r2, #4]
    95de:	c303      	stmia	r3!, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3589
    segment.dest_addr = *dest_addr;
    95e0:	683a      	ldr	r2, [r7, #0]
    95e2:	f107 031c 	add.w	r3, r7, #28
    95e6:	6810      	ldr	r0, [r2, #0]
    95e8:	6851      	ldr	r1, [r2, #4]
    95ea:	c303      	stmia	r3!, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3590
    segment.wnd = 0;
    95ec:	2300      	movs	r3, #0
    95ee:	85fb      	strh	r3, [r7, #46]	; 0x2e
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3591
    segment.urgpointer = 0;
    95f0:	2300      	movs	r3, #0
    95f2:	863b      	strh	r3, [r7, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3592
    segment.options = 0;
    95f4:	2300      	movs	r3, #0
    95f6:	637b      	str	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3593
    segment.optlen = 0;
    95f8:	2300      	movs	r3, #0
    95fa:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3594
    segment.data = 0;  
    95fe:	2300      	movs	r3, #0
    9600:	63fb      	str	r3, [r7, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3596
        
    fnet_tcp_sendseg(&segment);                      
    9602:	f107 0310 	add.w	r3, r7, #16
    9606:	4618      	mov	r0, r3
    9608:	f7ff fc38 	bl	8e7c <fnet_tcp_sendseg>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3597
}
    960c:	3740      	adds	r7, #64	; 0x40
    960e:	46bd      	mov	sp, r7
    9610:	bd80      	pop	{r7, pc}
    9612:	bf00      	nop

00009614 <fnet_tcp_sendrstsk>:
fnet_tcp_sendrstsk():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3607
* DESCRIPTION: This function sends the reset segment.
*
* RETURNS: None.                  
*************************************************************************/
static void fnet_tcp_sendrstsk( fnet_socket_t *sk )
{
    9614:	b580      	push	{r7, lr}
    9616:	b090      	sub	sp, #64	; 0x40
    9618:	af00      	add	r7, sp, #0
    961a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3612

    struct fnet_tcp_segment segment;
    
    /* Initialize the pointer to the control block.*/
    fnet_tcp_control_t *cb = (fnet_tcp_control_t *)sk->protocol_control;
    961c:	687b      	ldr	r3, [r7, #4]
    961e:	699b      	ldr	r3, [r3, #24]
    9620:	63fb      	str	r3, [r7, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3614

    if(sk->state != SS_UNCONNECTED && cb->tcpcb_connection_state != FNET_TCP_CS_SYN_SENT
    9622:	687b      	ldr	r3, [r7, #4]
    9624:	7b1b      	ldrb	r3, [r3, #12]
    9626:	2b00      	cmp	r3, #0
    9628:	d042      	beq.n	96b0 <fnet_tcp_sendrstsk+0x9c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3614 (discriminator 1)
    962a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    962c:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    9630:	2b01      	cmp	r3, #1
    9632:	d03d      	beq.n	96b0 <fnet_tcp_sendrstsk+0x9c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3615
           && cb->tcpcb_connection_state != FNET_TCP_CS_TIME_WAIT)
    9634:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    9636:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    963a:	2b0a      	cmp	r3, #10
    963c:	d038      	beq.n	96b0 <fnet_tcp_sendrstsk+0x9c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3617
    {
        if(cb->tcpcb_connection_state == FNET_TCP_CS_SYN_RCVD)
    963e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    9640:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
    9644:	2b02      	cmp	r3, #2
    9646:	d108      	bne.n	965a <fnet_tcp_sendrstsk+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3620
        {
            /* Send the reset segment with acknowledgment.*/
            segment.seq = 0;
    9648:	2300      	movs	r3, #0
    964a:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3621
            segment.ack = cb->tcpcb_sndack;
    964c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    964e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    9650:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3622
            segment.flags = FNET_TCP_SGT_RST | FNET_TCP_SGT_ACK;
    9652:	2314      	movs	r3, #20
    9654:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
    9658:	e007      	b.n	966a <fnet_tcp_sendrstsk+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3627
        }  
        else
        {
            /* Send the reset segment without acknowledgment.*/
            segment.seq = cb->tcpcb_rcvack;
    965a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    965c:	68db      	ldr	r3, [r3, #12]
    965e:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3628
            segment.ack = 0;
    9660:	2300      	movs	r3, #0
    9662:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3629
            segment.flags = FNET_TCP_SGT_RST;
    9664:	2304      	movs	r3, #4
    9666:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3632
        } 
  
        segment.sockoption = &sk->options; 
    966a:	687b      	ldr	r3, [r7, #4]
    966c:	3364      	adds	r3, #100	; 0x64
    966e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3633
        segment.src_addr = sk->local_addr;
    9670:	687a      	ldr	r2, [r7, #4]
    9672:	f107 0310 	add.w	r3, r7, #16
    9676:	325c      	adds	r2, #92	; 0x5c
    9678:	e892 0003 	ldmia.w	r2, {r0, r1}
    967c:	e883 0003 	stmia.w	r3, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3634
        segment.dest_addr = sk->foreign_addr;
    9680:	687a      	ldr	r2, [r7, #4]
    9682:	f107 0318 	add.w	r3, r7, #24
    9686:	3254      	adds	r2, #84	; 0x54
    9688:	e892 0003 	ldmia.w	r2, {r0, r1}
    968c:	e883 0003 	stmia.w	r3, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3635
        segment.wnd = 0;
    9690:	2300      	movs	r3, #0
    9692:	857b      	strh	r3, [r7, #42]	; 0x2a
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3636
        segment.urgpointer = 0;
    9694:	2300      	movs	r3, #0
    9696:	85bb      	strh	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3637
        segment.options = 0;
    9698:	2300      	movs	r3, #0
    969a:	633b      	str	r3, [r7, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3638
        segment.optlen = 0;
    969c:	2300      	movs	r3, #0
    969e:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3639
        segment.data = 0;
    96a2:	2300      	movs	r3, #0
    96a4:	63bb      	str	r3, [r7, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3641
            
        fnet_tcp_sendseg(&segment);                            
    96a6:	f107 030c 	add.w	r3, r7, #12
    96aa:	4618      	mov	r0, r3
    96ac:	f7ff fbe6 	bl	8e7c <fnet_tcp_sendseg>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3643
    }
}
    96b0:	3740      	adds	r7, #64	; 0x40
    96b2:	46bd      	mov	sp, r7
    96b4:	bd80      	pop	{r7, pc}
    96b6:	bf00      	nop

000096b8 <fnet_tcp_abortsk>:
fnet_tcp_abortsk():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3653
* DESCRIPTION: This function sends the reset segment and closes the socket.
*
* RETURNS: None.                               
*************************************************************************/
static void fnet_tcp_abortsk( fnet_socket_t *sk )
{
    96b8:	b580      	push	{r7, lr}
    96ba:	b082      	sub	sp, #8
    96bc:	af00      	add	r7, sp, #0
    96be:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3656
   
    /* If the incoming or the partial socket is present, abort it.*/
    if(sk->state == SS_LISTENING)
    96c0:	687b      	ldr	r3, [r7, #4]
    96c2:	7b1b      	ldrb	r3, [r3, #12]
    96c4:	2b03      	cmp	r3, #3
    96c6:	d114      	bne.n	96f2 <fnet_tcp_abortsk+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3658
    {
        while(sk->partial_con)
    96c8:	e004      	b.n	96d4 <fnet_tcp_abortsk+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3659
          fnet_tcp_abortsk(sk->partial_con);
    96ca:	687b      	ldr	r3, [r7, #4]
    96cc:	69db      	ldr	r3, [r3, #28]
    96ce:	4618      	mov	r0, r3
    96d0:	f7ff fff2 	bl	96b8 <fnet_tcp_abortsk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3658 (discriminator 1)
{
   
    /* If the incoming or the partial socket is present, abort it.*/
    if(sk->state == SS_LISTENING)
    {
        while(sk->partial_con)
    96d4:	687b      	ldr	r3, [r7, #4]
    96d6:	69db      	ldr	r3, [r3, #28]
    96d8:	2b00      	cmp	r3, #0
    96da:	d1f6      	bne.n	96ca <fnet_tcp_abortsk+0x12>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3661
          fnet_tcp_abortsk(sk->partial_con);

        while(sk->incoming_con)
    96dc:	e004      	b.n	96e8 <fnet_tcp_abortsk+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3662
          fnet_tcp_abortsk(sk->incoming_con);
    96de:	687b      	ldr	r3, [r7, #4]
    96e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    96e2:	4618      	mov	r0, r3
    96e4:	f7ff ffe8 	bl	96b8 <fnet_tcp_abortsk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3661 (discriminator 1)
    if(sk->state == SS_LISTENING)
    {
        while(sk->partial_con)
          fnet_tcp_abortsk(sk->partial_con);

        while(sk->incoming_con)
    96e8:	687b      	ldr	r3, [r7, #4]
    96ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    96ec:	2b00      	cmp	r3, #0
    96ee:	d1f6      	bne.n	96de <fnet_tcp_abortsk+0x26>
    96f0:	e002      	b.n	96f8 <fnet_tcp_abortsk+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3665
          fnet_tcp_abortsk(sk->incoming_con);
    }
    else
        fnet_tcp_sendrstsk(sk);
    96f2:	6878      	ldr	r0, [r7, #4]
    96f4:	f7ff ff8e 	bl	9614 <fnet_tcp_sendrstsk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3668

    /* Close the socket.*/
    fnet_tcp_closesk(sk);
    96f8:	6878      	ldr	r0, [r7, #4]
    96fa:	f000 fa41 	bl	9b80 <fnet_tcp_closesk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3670

}
    96fe:	3708      	adds	r7, #8
    9700:	46bd      	mov	sp, r7
    9702:	bd80      	pop	{r7, pc}

00009704 <fnet_tcp_addopt>:
fnet_tcp_addopt():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3683
*
* RETURNS: If no error occurs, this function returns FNET_OK. Otherwise,
*          it returns FNET_ERR.
*************************************************************************/
static int fnet_tcp_addopt( fnet_netbuf_t *segment, unsigned char len, void *data )
{
    9704:	b580      	push	{r7, lr}
    9706:	b088      	sub	sp, #32
    9708:	af00      	add	r7, sp, #0
    970a:	60f8      	str	r0, [r7, #12]
    970c:	460b      	mov	r3, r1
    970e:	607a      	str	r2, [r7, #4]
    9710:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3689
    fnet_netbuf_t   *buf; 
    int             i;             
    char            size;   /* Size of options.*/

    /* Create the buffer of the options.*/
    buf = fnet_netbuf_new(FNET_TCP_SIZE_OPTIONS, FNET_FALSE);
    9712:	2028      	movs	r0, #40	; 0x28
    9714:	2100      	movs	r1, #0
    9716:	f7f8 ffd9 	bl	26cc <fnet_netbuf_new>
    971a:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3692

    /* Check the memory allocatio.*/
    if(!buf)
    971c:	697b      	ldr	r3, [r7, #20]
    971e:	2b00      	cmp	r3, #0
    9720:	d101      	bne.n	9726 <fnet_tcp_addopt+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3693
        return FNET_ERR_NOMEM;
    9722:	2303      	movs	r3, #3
    9724:	e047      	b.n	97b6 <fnet_tcp_addopt+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3696

    /* Reset the buffer and add it to the header.*/
    fnet_memset_zero(buf->data_ptr, FNET_TCP_SIZE_OPTIONS); /* Set to FNET_TCP_OTYPES_END.*/
    9726:	697b      	ldr	r3, [r7, #20]
    9728:	68db      	ldr	r3, [r3, #12]
    972a:	4618      	mov	r0, r3
    972c:	2128      	movs	r1, #40	; 0x28
    972e:	f7fc fa6d 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3697
    segment = fnet_netbuf_concat(segment, buf);
    9732:	68fb      	ldr	r3, [r7, #12]
    9734:	4618      	mov	r0, r3
    9736:	6979      	ldr	r1, [r7, #20]
    9738:	f7f9 fc6e 	bl	3018 <fnet_netbuf_concat>
    973c:	4603      	mov	r3, r0
    973e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3698
    buf = segment->next;
    9740:	68fb      	ldr	r3, [r7, #12]
    9742:	681b      	ldr	r3, [r3, #0]
    9744:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3701

    /* Copy the options.*/
    for (i = 0; i < len; ++i)
    9746:	2300      	movs	r3, #0
    9748:	61fb      	str	r3, [r7, #28]
    974a:	e00c      	b.n	9766 <fnet_tcp_addopt+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3702 (discriminator 2)
      FNET_TCP_GETUCHAR(buf->data_ptr, i) = FNET_TCP_GETUCHAR(data, i);
    974c:	697b      	ldr	r3, [r7, #20]
    974e:	68db      	ldr	r3, [r3, #12]
    9750:	461a      	mov	r2, r3
    9752:	69fb      	ldr	r3, [r7, #28]
    9754:	4413      	add	r3, r2
    9756:	6879      	ldr	r1, [r7, #4]
    9758:	69fa      	ldr	r2, [r7, #28]
    975a:	440a      	add	r2, r1
    975c:	7812      	ldrb	r2, [r2, #0]
    975e:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3701 (discriminator 2)
    fnet_memset_zero(buf->data_ptr, FNET_TCP_SIZE_OPTIONS); /* Set to FNET_TCP_OTYPES_END.*/
    segment = fnet_netbuf_concat(segment, buf);
    buf = segment->next;

    /* Copy the options.*/
    for (i = 0; i < len; ++i)
    9760:	69fb      	ldr	r3, [r7, #28]
    9762:	3301      	adds	r3, #1
    9764:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3701 (discriminator 1)
    9766:	7afa      	ldrb	r2, [r7, #11]
    9768:	69fb      	ldr	r3, [r7, #28]
    976a:	429a      	cmp	r2, r3
    976c:	dcee      	bgt.n	974c <fnet_tcp_addopt+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3705
      FNET_TCP_GETUCHAR(buf->data_ptr, i) = FNET_TCP_GETUCHAR(data, i);

    /* Set the length  (this value is saved in 4-byte words format).*/
    if(len & 0x3)
    976e:	7afb      	ldrb	r3, [r7, #11]
    9770:	f003 0303 	and.w	r3, r3, #3
    9774:	2b00      	cmp	r3, #0
    9776:	d007      	beq.n	9788 <fnet_tcp_addopt+0x84>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3706
        size = (char)((len & 0xfffc) + 4);
    9778:	7afb      	ldrb	r3, [r7, #11]
    977a:	f023 0303 	bic.w	r3, r3, #3
    977e:	b2db      	uxtb	r3, r3
    9780:	3304      	adds	r3, #4
    9782:	b2db      	uxtb	r3, r3
    9784:	76fb      	strb	r3, [r7, #27]
    9786:	e001      	b.n	978c <fnet_tcp_addopt+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3708
    else
        size = (char)len;
    9788:	7afb      	ldrb	r3, [r7, #11]
    978a:	76fb      	strb	r3, [r7, #27]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3711

    /* Trim the buffer of the options.*/
    fnet_netbuf_trim(&segment, size - FNET_TCP_SIZE_OPTIONS);
    978c:	f997 301b 	ldrsb.w	r3, [r7, #27]
    9790:	3b28      	subs	r3, #40	; 0x28
    9792:	f107 020c 	add.w	r2, r7, #12
    9796:	4610      	mov	r0, r2
    9798:	4619      	mov	r1, r3
    979a:	f7f9 fa8f 	bl	2cbc <fnet_netbuf_trim>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3714

    /* Recalculate the header length.*/
    FNET_TCP_SET_LENGTH(segment) = (unsigned char)((buf->length + FNET_TCP_SIZE_HEADER) << 2);
    979e:	68fb      	ldr	r3, [r7, #12]
    97a0:	68db      	ldr	r3, [r3, #12]
    97a2:	330c      	adds	r3, #12
    97a4:	697a      	ldr	r2, [r7, #20]
    97a6:	6912      	ldr	r2, [r2, #16]
    97a8:	b2d2      	uxtb	r2, r2
    97aa:	3214      	adds	r2, #20
    97ac:	b2d2      	uxtb	r2, r2
    97ae:	0092      	lsls	r2, r2, #2
    97b0:	b2d2      	uxtb	r2, r2
    97b2:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3716

    return FNET_OK;
    97b4:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3717
}
    97b6:	4618      	mov	r0, r3
    97b8:	3720      	adds	r7, #32
    97ba:	46bd      	mov	sp, r7
    97bc:	bd80      	pop	{r7, pc}
    97be:	bf00      	nop

000097c0 <fnet_tcp_getopt>:
fnet_tcp_getopt():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3727
* DESCRIPTION: This function processes the received options.
*
* RETURNS: None.
*************************************************************************/
static void fnet_tcp_getopt( fnet_socket_t *sk, fnet_netbuf_t *segment )
{
    97c0:	b580      	push	{r7, lr}
    97c2:	b084      	sub	sp, #16
    97c4:	af00      	add	r7, sp, #0
    97c6:	6078      	str	r0, [r7, #4]
    97c8:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3730
    int i; /* index variable.*/

    fnet_tcp_control_t *cb = (fnet_tcp_control_t *)sk->protocol_control;
    97ca:	687b      	ldr	r3, [r7, #4]
    97cc:	699b      	ldr	r3, [r3, #24]
    97ce:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3732

    if(!segment)
    97d0:	683b      	ldr	r3, [r7, #0]
    97d2:	2b00      	cmp	r3, #0
    97d4:	d100      	bne.n	97d8 <fnet_tcp_getopt+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3733
        return;
    97d6:	e080      	b.n	98da <fnet_tcp_getopt+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3736

    /* Start position of the options.*/
    i = FNET_TCP_SIZE_HEADER;
    97d8:	2314      	movs	r3, #20
    97da:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3739

    /* Receive the of the options.*/
    while(i < FNET_TCP_LENGTH(segment) && FNET_TCP_GETUCHAR(segment->data_ptr, i) != FNET_TCP_OTYPES_END)
    97dc:	e06b      	b.n	98b6 <fnet_tcp_getopt+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3741
    {
        if(FNET_TCP_GETUCHAR(segment->data_ptr, i) == FNET_TCP_OTYPES_NOP)
    97de:	683b      	ldr	r3, [r7, #0]
    97e0:	68db      	ldr	r3, [r3, #12]
    97e2:	461a      	mov	r2, r3
    97e4:	68fb      	ldr	r3, [r7, #12]
    97e6:	4413      	add	r3, r2
    97e8:	781b      	ldrb	r3, [r3, #0]
    97ea:	2b01      	cmp	r3, #1
    97ec:	d103      	bne.n	97f6 <fnet_tcp_getopt+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3743
        {
            ++i;
    97ee:	68fb      	ldr	r3, [r7, #12]
    97f0:	3301      	adds	r3, #1
    97f2:	60fb      	str	r3, [r7, #12]
    97f4:	e05f      	b.n	98b6 <fnet_tcp_getopt+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3747
        }
        else
        {
            if(i + 1 >= FNET_TCP_LENGTH(segment)
    97f6:	68fb      	ldr	r3, [r7, #12]
    97f8:	1c5a      	adds	r2, r3, #1
    97fa:	683b      	ldr	r3, [r7, #0]
    97fc:	68db      	ldr	r3, [r3, #12]
    97fe:	330c      	adds	r3, #12
    9800:	781b      	ldrb	r3, [r3, #0]
    9802:	091b      	lsrs	r3, r3, #4
    9804:	b2db      	uxtb	r3, r3
    9806:	009b      	lsls	r3, r3, #2
    9808:	429a      	cmp	r2, r3
    980a:	da66      	bge.n	98da <fnet_tcp_getopt+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3748
                   || i + FNET_TCP_GETUCHAR(segment->data_ptr, i + 1) - 1 >= FNET_TCP_LENGTH(segment))
    980c:	683b      	ldr	r3, [r7, #0]
    980e:	68db      	ldr	r3, [r3, #12]
    9810:	461a      	mov	r2, r3
    9812:	68fb      	ldr	r3, [r7, #12]
    9814:	4413      	add	r3, r2
    9816:	3301      	adds	r3, #1
    9818:	781b      	ldrb	r3, [r3, #0]
    981a:	461a      	mov	r2, r3
    981c:	68fb      	ldr	r3, [r7, #12]
    981e:	4413      	add	r3, r2
    9820:	1e5a      	subs	r2, r3, #1
    9822:	683b      	ldr	r3, [r7, #0]
    9824:	68db      	ldr	r3, [r3, #12]
    9826:	330c      	adds	r3, #12
    9828:	781b      	ldrb	r3, [r3, #0]
    982a:	091b      	lsrs	r3, r3, #4
    982c:	b2db      	uxtb	r3, r3
    982e:	009b      	lsls	r3, r3, #2
    9830:	429a      	cmp	r2, r3
    9832:	da52      	bge.n	98da <fnet_tcp_getopt+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3752
                break;

            /* Process the options.*/
            switch(FNET_TCP_GETUCHAR(segment->data_ptr, i))
    9834:	683b      	ldr	r3, [r7, #0]
    9836:	68db      	ldr	r3, [r3, #12]
    9838:	461a      	mov	r2, r3
    983a:	68fb      	ldr	r3, [r7, #12]
    983c:	4413      	add	r3, r2
    983e:	781b      	ldrb	r3, [r3, #0]
    9840:	2b02      	cmp	r3, #2
    9842:	d002      	beq.n	984a <fnet_tcp_getopt+0x8a>
    9844:	2b03      	cmp	r3, #3
    9846:	d010      	beq.n	986a <fnet_tcp_getopt+0xaa>
    9848:	e02b      	b.n	98a2 <fnet_tcp_getopt+0xe2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3755
            {
                case FNET_TCP_OTYPES_MSS:
                  cb->tcpcb_sndmss = fnet_ntohs(FNET_TCP_GETUSHORT(segment->data_ptr, i + 2));
    984a:	683b      	ldr	r3, [r7, #0]
    984c:	68db      	ldr	r3, [r3, #12]
    984e:	461a      	mov	r2, r3
    9850:	68fb      	ldr	r3, [r7, #12]
    9852:	4413      	add	r3, r2
    9854:	3302      	adds	r3, #2
    9856:	881b      	ldrh	r3, [r3, #0]
    9858:	4618      	mov	r0, r3
    985a:	f005 fe61 	bl	f520 <fnet_htons>
    985e:	4603      	mov	r3, r0
    9860:	461a      	mov	r2, r3
    9862:	68bb      	ldr	r3, [r7, #8]
    9864:	f8a3 2048 	strh.w	r2, [r3, #72]	; 0x48
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3756
                  break;
    9868:	e01b      	b.n	98a2 <fnet_tcp_getopt+0xe2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3759

                case FNET_TCP_OTYPES_WINDOW:
                  cb->tcpcb_sendscale = FNET_TCP_GETUCHAR(segment->data_ptr, i + 2);
    986a:	683b      	ldr	r3, [r7, #0]
    986c:	68db      	ldr	r3, [r3, #12]
    986e:	461a      	mov	r2, r3
    9870:	68fb      	ldr	r3, [r7, #12]
    9872:	4413      	add	r3, r2
    9874:	3302      	adds	r3, #2
    9876:	781a      	ldrb	r2, [r3, #0]
    9878:	68bb      	ldr	r3, [r7, #8]
    987a:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3761

                  if(cb->tcpcb_sendscale > FNET_TCP_MAX_WINSHIFT)
    987e:	68bb      	ldr	r3, [r7, #8]
    9880:	f893 304a 	ldrb.w	r3, [r3, #74]	; 0x4a
    9884:	2b0c      	cmp	r3, #12
    9886:	d903      	bls.n	9890 <fnet_tcp_getopt+0xd0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3762
                      cb->tcpcb_sendscale = FNET_TCP_MAX_WINSHIFT;
    9888:	68bb      	ldr	r3, [r7, #8]
    988a:	220c      	movs	r2, #12
    988c:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3764

                  cb->tcpcb_flags |= FNET_TCP_CBF_RCVD_SCALE;
    9890:	68bb      	ldr	r3, [r7, #8]
    9892:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    9896:	f043 0220 	orr.w	r2, r3, #32
    989a:	68bb      	ldr	r3, [r7, #8]
    989c:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3765
                  break;
    98a0:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3768
            }

            i += FNET_TCP_GETUCHAR(segment->data_ptr, i + 1);
    98a2:	683b      	ldr	r3, [r7, #0]
    98a4:	68db      	ldr	r3, [r3, #12]
    98a6:	461a      	mov	r2, r3
    98a8:	68fb      	ldr	r3, [r7, #12]
    98aa:	4413      	add	r3, r2
    98ac:	3301      	adds	r3, #1
    98ae:	781b      	ldrb	r3, [r3, #0]
    98b0:	68fa      	ldr	r2, [r7, #12]
    98b2:	4413      	add	r3, r2
    98b4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3739 (discriminator 1)

    /* Start position of the options.*/
    i = FNET_TCP_SIZE_HEADER;

    /* Receive the of the options.*/
    while(i < FNET_TCP_LENGTH(segment) && FNET_TCP_GETUCHAR(segment->data_ptr, i) != FNET_TCP_OTYPES_END)
    98b6:	683b      	ldr	r3, [r7, #0]
    98b8:	68db      	ldr	r3, [r3, #12]
    98ba:	330c      	adds	r3, #12
    98bc:	781b      	ldrb	r3, [r3, #0]
    98be:	091b      	lsrs	r3, r3, #4
    98c0:	b2db      	uxtb	r3, r3
    98c2:	009a      	lsls	r2, r3, #2
    98c4:	68fb      	ldr	r3, [r7, #12]
    98c6:	429a      	cmp	r2, r3
    98c8:	dd07      	ble.n	98da <fnet_tcp_getopt+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3739 (discriminator 2)
    98ca:	683b      	ldr	r3, [r7, #0]
    98cc:	68db      	ldr	r3, [r3, #12]
    98ce:	461a      	mov	r2, r3
    98d0:	68fb      	ldr	r3, [r7, #12]
    98d2:	4413      	add	r3, r2
    98d4:	781b      	ldrb	r3, [r3, #0]
    98d6:	2b00      	cmp	r3, #0
    98d8:	d181      	bne.n	97de <fnet_tcp_getopt+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3772

            i += FNET_TCP_GETUCHAR(segment->data_ptr, i + 1);
        }
    }

}
    98da:	3710      	adds	r7, #16
    98dc:	46bd      	mov	sp, r7
    98de:	bd80      	pop	{r7, pc}

000098e0 <fnet_tcp_setsynopt>:
fnet_tcp_setsynopt():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3782
* DESCRIPTION: This function sets the options of the synchronized (SYN )
*              segment.
* RETURNS: None.
*************************************************************************/
static void fnet_tcp_setsynopt( fnet_socket_t *sk, char *options, char *optionlen )
{
    98e0:	b590      	push	{r4, r7, lr}
    98e2:	b087      	sub	sp, #28
    98e4:	af00      	add	r7, sp, #0
    98e6:	60f8      	str	r0, [r7, #12]
    98e8:	60b9      	str	r1, [r7, #8]
    98ea:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3783
    fnet_tcp_control_t *cb = (fnet_tcp_control_t *)sk->protocol_control;
    98ec:	68fb      	ldr	r3, [r7, #12]
    98ee:	699b      	ldr	r3, [r3, #24]
    98f0:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3784
    *optionlen = 0;                                                      
    98f2:	687b      	ldr	r3, [r7, #4]
    98f4:	2200      	movs	r2, #0
    98f6:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3787
    
    /* If 0, detect MSS based on interface MTU minus "TCP,IP header size".*/
    if(cb->tcpcb_rcvmss == 0)
    98f8:	697b      	ldr	r3, [r7, #20]
    98fa:	8b9b      	ldrh	r3, [r3, #28]
    98fc:	2b00      	cmp	r3, #0
    98fe:	d110      	bne.n	9922 <fnet_tcp_setsynopt+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3792
    {
    #if FNET_CFG_IP4 //TBD
        fnet_netif_t *netif;
        
        if((netif = fnet_ip_route(((struct sockaddr_in *)(&sk->foreign_addr))->sin_addr.s_addr)) != 0) 
    9900:	68fb      	ldr	r3, [r7, #12]
    9902:	3354      	adds	r3, #84	; 0x54
    9904:	685b      	ldr	r3, [r3, #4]
    9906:	4618      	mov	r0, r3
    9908:	f7f7 ffdc 	bl	18c4 <fnet_ip_route>
    990c:	6138      	str	r0, [r7, #16]
    990e:	693b      	ldr	r3, [r7, #16]
    9910:	2b00      	cmp	r3, #0
    9912:	d006      	beq.n	9922 <fnet_tcp_setsynopt+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3794
        {
            cb->tcpcb_rcvmss = (unsigned short) (netif->mtu - 40); /* MTU - [TCP,IP header size].*/
    9914:	693b      	ldr	r3, [r7, #16]
    9916:	691b      	ldr	r3, [r3, #16]
    9918:	b29b      	uxth	r3, r3
    991a:	3b28      	subs	r3, #40	; 0x28
    991c:	b29a      	uxth	r2, r3
    991e:	697b      	ldr	r3, [r7, #20]
    9920:	839a      	strh	r2, [r3, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3805
    #endif /* FNET_CFG_IP4 */ //TBD        
    }
    

    /* Set the MSS option.*/
    *((unsigned long *)(options + *optionlen)) = fnet_htonl((unsigned long)(cb->tcpcb_rcvmss | FNET_TCP_MSS_HEADER));
    9922:	687b      	ldr	r3, [r7, #4]
    9924:	781b      	ldrb	r3, [r3, #0]
    9926:	b25b      	sxtb	r3, r3
    9928:	68ba      	ldr	r2, [r7, #8]
    992a:	18d4      	adds	r4, r2, r3
    992c:	697b      	ldr	r3, [r7, #20]
    992e:	8b9b      	ldrh	r3, [r3, #28]
    9930:	f043 7301 	orr.w	r3, r3, #33816576	; 0x2040000
    9934:	4618      	mov	r0, r3
    9936:	f005 fe09 	bl	f54c <fnet_htonl>
    993a:	4603      	mov	r3, r0
    993c:	6023      	str	r3, [r4, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3806
    *optionlen += FNET_TCP_MSS_SIZE;
    993e:	687b      	ldr	r3, [r7, #4]
    9940:	781b      	ldrb	r3, [r3, #0]
    9942:	b2db      	uxtb	r3, r3
    9944:	3304      	adds	r3, #4
    9946:	b2db      	uxtb	r3, r3
    9948:	b2da      	uxtb	r2, r3
    994a:	687b      	ldr	r3, [r7, #4]
    994c:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3809

    /* Set the window scale option.*/
    *((unsigned long *)(options + *optionlen))
    994e:	687b      	ldr	r3, [r7, #4]
    9950:	781b      	ldrb	r3, [r3, #0]
    9952:	b25b      	sxtb	r3, r3
    9954:	68ba      	ldr	r2, [r7, #8]
    9956:	18d4      	adds	r4, r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3810
         = fnet_htonl((unsigned long)((cb->tcpcb_recvscale | FNET_TCP_WINDOW_HEADER) << 8));
    9958:	697b      	ldr	r3, [r7, #20]
    995a:	7f9b      	ldrb	r3, [r3, #30]
    995c:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
    9960:	f443 7340 	orr.w	r3, r3, #768	; 0x300
    9964:	021b      	lsls	r3, r3, #8
    9966:	4618      	mov	r0, r3
    9968:	f005 fdf0 	bl	f54c <fnet_htonl>
    996c:	4603      	mov	r3, r0
    996e:	6023      	str	r3, [r4, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3811
    *optionlen += FNET_TCP_WINDOW_SIZE;
    9970:	687b      	ldr	r3, [r7, #4]
    9972:	781b      	ldrb	r3, [r3, #0]
    9974:	b2db      	uxtb	r3, r3
    9976:	3303      	adds	r3, #3
    9978:	b2db      	uxtb	r3, r3
    997a:	b2da      	uxtb	r2, r3
    997c:	687b      	ldr	r3, [r7, #4]
    997e:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3813

}
    9980:	371c      	adds	r7, #28
    9982:	46bd      	mov	sp, r7
    9984:	bd90      	pop	{r4, r7, pc}
    9986:	bf00      	nop

00009988 <fnet_tcp_getsynopt>:
fnet_tcp_getsynopt():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3824
*              options of the synchronized (SYN) segment.
*
* RETURNS: None.
*************************************************************************/
static void fnet_tcp_getsynopt( fnet_socket_t *sk )
{
    9988:	b480      	push	{r7}
    998a:	b085      	sub	sp, #20
    998c:	af00      	add	r7, sp, #0
    998e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3826
    /* Pointer to the control block.*/
    fnet_tcp_control_t *cb = (fnet_tcp_control_t *)sk->protocol_control;
    9990:	687b      	ldr	r3, [r7, #4]
    9992:	699b      	ldr	r3, [r3, #24]
    9994:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3828
    
    if(!(cb->tcpcb_flags & FNET_TCP_CBF_RCVD_SCALE))
    9996:	68fb      	ldr	r3, [r7, #12]
    9998:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    999c:	f003 0320 	and.w	r3, r3, #32
    99a0:	2b00      	cmp	r3, #0
    99a2:	d10b      	bne.n	99bc <fnet_tcp_getsynopt+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3831
    {
        /* Reset the scale variable if the scale option is not received.*/
        cb->tcpcb_recvscale = 0;
    99a4:	68fb      	ldr	r3, [r7, #12]
    99a6:	2200      	movs	r2, #0
    99a8:	779a      	strb	r2, [r3, #30]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3835

        /* If the size of the input buffer greater than
         * the maximal size of the window , reinitialze the buffer size.*/
        if(cb->tcpcb_rcvcountmax > FNET_TCP_MAXWIN)
    99aa:	68fb      	ldr	r3, [r7, #12]
    99ac:	689b      	ldr	r3, [r3, #8]
    99ae:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    99b2:	d903      	bls.n	99bc <fnet_tcp_getsynopt+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3836
            cb->tcpcb_rcvcountmax = FNET_TCP_MAXWIN;
    99b4:	68fb      	ldr	r3, [r7, #12]
    99b6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    99ba:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3840
    }

    /* Initialize the congestion window.*/
    cb->tcpcb_cwnd = cb->tcpcb_sndmss;
    99bc:	68fb      	ldr	r3, [r7, #12]
    99be:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
    99c2:	461a      	mov	r2, r3
    99c4:	68fb      	ldr	r3, [r7, #12]
    99c6:	63da      	str	r2, [r3, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3842

}
    99c8:	3714      	adds	r7, #20
    99ca:	46bd      	mov	sp, r7
    99cc:	f85d 7b04 	ldr.w	r7, [sp], #4
    99d0:	4770      	bx	lr
    99d2:	bf00      	nop

000099d4 <fnet_tcp_findsk>:
fnet_tcp_findsk():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3854
*
* RETURNS: If the socket is found this function returns the pointer to the
*          socket. Otherwise, this function returns 0.
*************************************************************************/
static fnet_socket_t *fnet_tcp_findsk( struct sockaddr *src_addr,  struct sockaddr *dest_addr )                                       
{
    99d4:	b580      	push	{r7, lr}
    99d6:	b084      	sub	sp, #16
    99d8:	af00      	add	r7, sp, #0
    99da:	6078      	str	r0, [r7, #4]
    99dc:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3855
    fnet_socket_t   *listensk = 0;
    99de:	2300      	movs	r3, #0
    99e0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3858
    fnet_socket_t   *sk;

    fnet_isr_lock();
    99e2:	f7f8 fc35 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3860
    
    sk = fnet_tcp_prot_if.head;
    99e6:	4b4a      	ldr	r3, [pc, #296]	; (9b10 <fnet_tcp_findsk+0x13c>)
    99e8:	681b      	ldr	r3, [r3, #0]
    99ea:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3862

    while(sk)
    99ec:	e042      	b.n	9a74 <fnet_tcp_findsk+0xa0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3864
    {
        if(sk->local_addr.sa_port == dest_addr->sa_port)
    99ee:	68bb      	ldr	r3, [r7, #8]
    99f0:	f8b3 205e 	ldrh.w	r2, [r3, #94]	; 0x5e
    99f4:	683b      	ldr	r3, [r7, #0]
    99f6:	885b      	ldrh	r3, [r3, #2]
    99f8:	429a      	cmp	r2, r3
    99fa:	d138      	bne.n	9a6e <fnet_tcp_findsk+0x9a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3867
        {
            /* Listening socket.*/
            if(sk->state == SS_LISTENING)
    99fc:	68bb      	ldr	r3, [r7, #8]
    99fe:	7b1b      	ldrb	r3, [r3, #12]
    9a00:	2b03      	cmp	r3, #3
    9a02:	d116      	bne.n	9a32 <fnet_tcp_findsk+0x5e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3869
            {
                if(!listensk && (fnet_socket_addr_is_unspecified(&sk->local_addr) || fnet_socket_addr_are_equal(&sk->local_addr, dest_addr) ))
    9a04:	68fb      	ldr	r3, [r7, #12]
    9a06:	2b00      	cmp	r3, #0
    9a08:	d131      	bne.n	9a6e <fnet_tcp_findsk+0x9a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3869 (discriminator 1)
    9a0a:	68bb      	ldr	r3, [r7, #8]
    9a0c:	335c      	adds	r3, #92	; 0x5c
    9a0e:	4618      	mov	r0, r3
    9a10:	f7fb fe28 	bl	5664 <fnet_socket_addr_is_unspecified>
    9a14:	4603      	mov	r3, r0
    9a16:	2b00      	cmp	r3, #0
    9a18:	d108      	bne.n	9a2c <fnet_tcp_findsk+0x58>
    9a1a:	68bb      	ldr	r3, [r7, #8]
    9a1c:	335c      	adds	r3, #92	; 0x5c
    9a1e:	4618      	mov	r0, r3
    9a20:	6839      	ldr	r1, [r7, #0]
    9a22:	f7fb fe3d 	bl	56a0 <fnet_socket_addr_are_equal>
    9a26:	4603      	mov	r3, r0
    9a28:	2b00      	cmp	r3, #0
    9a2a:	d020      	beq.n	9a6e <fnet_tcp_findsk+0x9a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3870
                    listensk = sk;
    9a2c:	68bb      	ldr	r3, [r7, #8]
    9a2e:	60fb      	str	r3, [r7, #12]
    9a30:	e01d      	b.n	9a6e <fnet_tcp_findsk+0x9a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3875
            }
            else
            {
                /* Not listening socket.*/
                if(fnet_socket_addr_are_equal(&sk->local_addr, dest_addr) && sk->state != SS_UNCONNECTED && 
    9a32:	68bb      	ldr	r3, [r7, #8]
    9a34:	335c      	adds	r3, #92	; 0x5c
    9a36:	4618      	mov	r0, r3
    9a38:	6839      	ldr	r1, [r7, #0]
    9a3a:	f7fb fe31 	bl	56a0 <fnet_socket_addr_are_equal>
    9a3e:	4603      	mov	r3, r0
    9a40:	2b00      	cmp	r3, #0
    9a42:	d014      	beq.n	9a6e <fnet_tcp_findsk+0x9a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3875 (discriminator 1)
    9a44:	68bb      	ldr	r3, [r7, #8]
    9a46:	7b1b      	ldrb	r3, [r3, #12]
    9a48:	2b00      	cmp	r3, #0
    9a4a:	d010      	beq.n	9a6e <fnet_tcp_findsk+0x9a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3876 (discriminator 1)
                   fnet_socket_addr_are_equal(&sk->foreign_addr, src_addr) && sk->foreign_addr.sa_port == src_addr->sa_port)
    9a4c:	68bb      	ldr	r3, [r7, #8]
    9a4e:	3354      	adds	r3, #84	; 0x54
    9a50:	4618      	mov	r0, r3
    9a52:	6879      	ldr	r1, [r7, #4]
    9a54:	f7fb fe24 	bl	56a0 <fnet_socket_addr_are_equal>
    9a58:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3875 (discriminator 1)
                    listensk = sk;
            }
            else
            {
                /* Not listening socket.*/
                if(fnet_socket_addr_are_equal(&sk->local_addr, dest_addr) && sk->state != SS_UNCONNECTED && 
    9a5a:	2b00      	cmp	r3, #0
    9a5c:	d007      	beq.n	9a6e <fnet_tcp_findsk+0x9a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3876
                   fnet_socket_addr_are_equal(&sk->foreign_addr, src_addr) && sk->foreign_addr.sa_port == src_addr->sa_port)
    9a5e:	68bb      	ldr	r3, [r7, #8]
    9a60:	f8b3 2056 	ldrh.w	r2, [r3, #86]	; 0x56
    9a64:	687b      	ldr	r3, [r7, #4]
    9a66:	885b      	ldrh	r3, [r3, #2]
    9a68:	429a      	cmp	r2, r3
    9a6a:	d100      	bne.n	9a6e <fnet_tcp_findsk+0x9a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3877
                     break;
    9a6c:	e005      	b.n	9a7a <fnet_tcp_findsk+0xa6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3880
            }
        }
        sk = sk->next;
    9a6e:	68bb      	ldr	r3, [r7, #8]
    9a70:	681b      	ldr	r3, [r3, #0]
    9a72:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3862 (discriminator 1)

    fnet_isr_lock();
    
    sk = fnet_tcp_prot_if.head;

    while(sk)
    9a74:	68bb      	ldr	r3, [r7, #8]
    9a76:	2b00      	cmp	r3, #0
    9a78:	d1b9      	bne.n	99ee <fnet_tcp_findsk+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3884
        }
        sk = sk->next;
    }

    /* If the listening socket with the same local parameters (address and port) is present.*/
    if(!sk && listensk)
    9a7a:	68bb      	ldr	r3, [r7, #8]
    9a7c:	2b00      	cmp	r3, #0
    9a7e:	d140      	bne.n	9b02 <fnet_tcp_findsk+0x12e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3884 (discriminator 1)
    9a80:	68fb      	ldr	r3, [r7, #12]
    9a82:	2b00      	cmp	r3, #0
    9a84:	d03d      	beq.n	9b02 <fnet_tcp_findsk+0x12e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3887
    {
        /* Search the partial socket with the same foreign parameters (address and port).*/
        sk = listensk->partial_con;
    9a86:	68fb      	ldr	r3, [r7, #12]
    9a88:	69db      	ldr	r3, [r3, #28]
    9a8a:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3889

        while(sk)
    9a8c:	e013      	b.n	9ab6 <fnet_tcp_findsk+0xe2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3891
        {
            if(fnet_socket_addr_are_equal(&sk->foreign_addr, src_addr) && sk->foreign_addr.sa_port == src_addr->sa_port)
    9a8e:	68bb      	ldr	r3, [r7, #8]
    9a90:	3354      	adds	r3, #84	; 0x54
    9a92:	4618      	mov	r0, r3
    9a94:	6879      	ldr	r1, [r7, #4]
    9a96:	f7fb fe03 	bl	56a0 <fnet_socket_addr_are_equal>
    9a9a:	4603      	mov	r3, r0
    9a9c:	2b00      	cmp	r3, #0
    9a9e:	d007      	beq.n	9ab0 <fnet_tcp_findsk+0xdc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3891 (discriminator 1)
    9aa0:	68bb      	ldr	r3, [r7, #8]
    9aa2:	f8b3 2056 	ldrh.w	r2, [r3, #86]	; 0x56
    9aa6:	687b      	ldr	r3, [r7, #4]
    9aa8:	885b      	ldrh	r3, [r3, #2]
    9aaa:	429a      	cmp	r2, r3
    9aac:	d100      	bne.n	9ab0 <fnet_tcp_findsk+0xdc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3892
                break;
    9aae:	e005      	b.n	9abc <fnet_tcp_findsk+0xe8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3894

            sk = sk->next;
    9ab0:	68bb      	ldr	r3, [r7, #8]
    9ab2:	681b      	ldr	r3, [r3, #0]
    9ab4:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3889 (discriminator 1)
    if(!sk && listensk)
    {
        /* Search the partial socket with the same foreign parameters (address and port).*/
        sk = listensk->partial_con;

        while(sk)
    9ab6:	68bb      	ldr	r3, [r7, #8]
    9ab8:	2b00      	cmp	r3, #0
    9aba:	d1e8      	bne.n	9a8e <fnet_tcp_findsk+0xba>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3897
                break;

            sk = sk->next;
        }

        if(!sk)
    9abc:	68bb      	ldr	r3, [r7, #8]
    9abe:	2b00      	cmp	r3, #0
    9ac0:	d11a      	bne.n	9af8 <fnet_tcp_findsk+0x124>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3900
        {
            /* Search the incoming socket with the same foreign parameters (address and port).*/
            sk = listensk->incoming_con;
    9ac2:	68fb      	ldr	r3, [r7, #12]
    9ac4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    9ac6:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3902

            while(sk)
    9ac8:	e013      	b.n	9af2 <fnet_tcp_findsk+0x11e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3904
            {
                if(fnet_socket_addr_are_equal(&sk->foreign_addr, src_addr) && sk->foreign_addr.sa_port == src_addr->sa_port)
    9aca:	68bb      	ldr	r3, [r7, #8]
    9acc:	3354      	adds	r3, #84	; 0x54
    9ace:	4618      	mov	r0, r3
    9ad0:	6879      	ldr	r1, [r7, #4]
    9ad2:	f7fb fde5 	bl	56a0 <fnet_socket_addr_are_equal>
    9ad6:	4603      	mov	r3, r0
    9ad8:	2b00      	cmp	r3, #0
    9ada:	d007      	beq.n	9aec <fnet_tcp_findsk+0x118>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3904 (discriminator 1)
    9adc:	68bb      	ldr	r3, [r7, #8]
    9ade:	f8b3 2056 	ldrh.w	r2, [r3, #86]	; 0x56
    9ae2:	687b      	ldr	r3, [r7, #4]
    9ae4:	885b      	ldrh	r3, [r3, #2]
    9ae6:	429a      	cmp	r2, r3
    9ae8:	d100      	bne.n	9aec <fnet_tcp_findsk+0x118>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3905
                    break;
    9aea:	e005      	b.n	9af8 <fnet_tcp_findsk+0x124>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3907

                sk = sk->next;
    9aec:	68bb      	ldr	r3, [r7, #8]
    9aee:	681b      	ldr	r3, [r3, #0]
    9af0:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3902 (discriminator 1)
        if(!sk)
        {
            /* Search the incoming socket with the same foreign parameters (address and port).*/
            sk = listensk->incoming_con;

            while(sk)
    9af2:	68bb      	ldr	r3, [r7, #8]
    9af4:	2b00      	cmp	r3, #0
    9af6:	d1e8      	bne.n	9aca <fnet_tcp_findsk+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3912
                sk = sk->next;
            }
        }

        /* Listening socket is unique (with the same local parameters).*/
        if(!sk)
    9af8:	68bb      	ldr	r3, [r7, #8]
    9afa:	2b00      	cmp	r3, #0
    9afc:	d101      	bne.n	9b02 <fnet_tcp_findsk+0x12e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3913
            sk = listensk;
    9afe:	68fb      	ldr	r3, [r7, #12]
    9b00:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3916
    }

    fnet_isr_unlock();
    9b02:	f7f8 fbb3 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3918

    return sk;
    9b06:	68bb      	ldr	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3919
}
    9b08:	4618      	mov	r0, r3
    9b0a:	3710      	adds	r7, #16
    9b0c:	46bd      	mov	sp, r7
    9b0e:	bd80      	pop	{r7, pc}
    9b10:	10000058 	.word	0x10000058

00009b14 <fnet_tcp_addpartialsk>:
fnet_tcp_addpartialsk():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3929
* DESCRIPTION: This function adds the socket to the partial sockets list.
*
* RETURNS: None.
*************************************************************************/
static void fnet_tcp_addpartialsk( fnet_socket_t *mainsk, fnet_socket_t *partialsk )
{
    9b14:	b580      	push	{r7, lr}
    9b16:	b082      	sub	sp, #8
    9b18:	af00      	add	r7, sp, #0
    9b1a:	6078      	str	r0, [r7, #4]
    9b1c:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3930
    mainsk->partial_con_len++;
    9b1e:	687b      	ldr	r3, [r7, #4]
    9b20:	6a1b      	ldr	r3, [r3, #32]
    9b22:	1c5a      	adds	r2, r3, #1
    9b24:	687b      	ldr	r3, [r7, #4]
    9b26:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3931
    partialsk->head_con = mainsk;
    9b28:	683b      	ldr	r3, [r7, #0]
    9b2a:	687a      	ldr	r2, [r7, #4]
    9b2c:	631a      	str	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3932
    fnet_socket_list_add(&mainsk->partial_con, partialsk);
    9b2e:	687b      	ldr	r3, [r7, #4]
    9b30:	331c      	adds	r3, #28
    9b32:	4618      	mov	r0, r3
    9b34:	6839      	ldr	r1, [r7, #0]
    9b36:	f7fa fb45 	bl	41c4 <fnet_socket_list_add>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3933
}
    9b3a:	3708      	adds	r7, #8
    9b3c:	46bd      	mov	sp, r7
    9b3e:	bd80      	pop	{r7, pc}

00009b40 <fnet_tcp_movesk2incominglist>:
fnet_tcp_movesk2incominglist():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3944
*              to the incoming list.
*
* RETURNS: None.                
*************************************************************************/
static void fnet_tcp_movesk2incominglist( fnet_socket_t *sk )
{
    9b40:	b580      	push	{r7, lr}
    9b42:	b084      	sub	sp, #16
    9b44:	af00      	add	r7, sp, #0
    9b46:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3946
    fnet_socket_t *mainsk;
    mainsk = sk->head_con;
    9b48:	687b      	ldr	r3, [r7, #4]
    9b4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    9b4c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3948

    mainsk->partial_con_len--;
    9b4e:	68fb      	ldr	r3, [r7, #12]
    9b50:	6a1b      	ldr	r3, [r3, #32]
    9b52:	1e5a      	subs	r2, r3, #1
    9b54:	68fb      	ldr	r3, [r7, #12]
    9b56:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3949
    mainsk->incoming_con_len++;
    9b58:	68fb      	ldr	r3, [r7, #12]
    9b5a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    9b5c:	1c5a      	adds	r2, r3, #1
    9b5e:	68fb      	ldr	r3, [r7, #12]
    9b60:	629a      	str	r2, [r3, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3951

    fnet_socket_list_del(&mainsk->partial_con, sk);
    9b62:	68fb      	ldr	r3, [r7, #12]
    9b64:	331c      	adds	r3, #28
    9b66:	4618      	mov	r0, r3
    9b68:	6879      	ldr	r1, [r7, #4]
    9b6a:	f7fa fb49 	bl	4200 <fnet_socket_list_del>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3952
    fnet_socket_list_add(&mainsk->incoming_con, sk);
    9b6e:	68fb      	ldr	r3, [r7, #12]
    9b70:	3324      	adds	r3, #36	; 0x24
    9b72:	4618      	mov	r0, r3
    9b74:	6879      	ldr	r1, [r7, #4]
    9b76:	f7fa fb25 	bl	41c4 <fnet_socket_list_add>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3953
}
    9b7a:	3710      	adds	r7, #16
    9b7c:	46bd      	mov	sp, r7
    9b7e:	bd80      	pop	{r7, pc}

00009b80 <fnet_tcp_closesk>:
fnet_tcp_closesk():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3963
* DESCRIPTION: This function closes the socket.
*         
* RETURNS: None.     
*************************************************************************/
static void fnet_tcp_closesk( fnet_socket_t *sk )
{
    9b80:	b580      	push	{r7, lr}
    9b82:	b084      	sub	sp, #16
    9b84:	af00      	add	r7, sp, #0
    9b86:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3966

    /* Initialize the pointer to the control block.*/
    fnet_tcp_control_t *cb = (fnet_tcp_control_t *)sk->protocol_control;
    9b88:	687b      	ldr	r3, [r7, #4]
    9b8a:	699b      	ldr	r3, [r3, #24]
    9b8c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3968

    if(sk->head_con)
    9b8e:	687b      	ldr	r3, [r7, #4]
    9b90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    9b92:	2b00      	cmp	r3, #0
    9b94:	d00b      	beq.n	9bae <fnet_tcp_closesk+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3971
    {
        /* If the socket is partial or incoming.*/
        if(sk->state == SS_CONNECTING)
    9b96:	687b      	ldr	r3, [r7, #4]
    9b98:	7b1b      	ldrb	r3, [r3, #12]
    9b9a:	2b01      	cmp	r3, #1
    9b9c:	d103      	bne.n	9ba6 <fnet_tcp_closesk+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3973
            /* Delete from the partial list.*/
            fnet_tcp_delpartialsk(sk);
    9b9e:	6878      	ldr	r0, [r7, #4]
    9ba0:	f000 f828 	bl	9bf4 <fnet_tcp_delpartialsk>
    9ba4:	e020      	b.n	9be8 <fnet_tcp_closesk+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3976
        else
            /* Delete from the incoming list.*/
            fnet_tcp_delincomingsk(sk);
    9ba6:	6878      	ldr	r0, [r7, #4]
    9ba8:	f000 f838 	bl	9c1c <fnet_tcp_delincomingsk>
    9bac:	e01c      	b.n	9be8 <fnet_tcp_closesk+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3982
    }
    else
    {
        /* If the socket must be deleted, free the structures
         * Otherwise, change the state and free the unused data.*/
        if(cb->tcpcb_flags & FNET_TCP_CBF_CLOSE)
    9bae:	68fb      	ldr	r3, [r7, #12]
    9bb0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    9bb4:	f003 0301 	and.w	r3, r3, #1
    9bb8:	2b00      	cmp	r3, #0
    9bba:	d004      	beq.n	9bc6 <fnet_tcp_closesk+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3984
        {
            fnet_tcp_delsk(&fnet_tcp_prot_if.head, sk);
    9bbc:	480c      	ldr	r0, [pc, #48]	; (9bf0 <fnet_tcp_closesk+0x70>)
    9bbe:	6879      	ldr	r1, [r7, #4]
    9bc0:	f000 f86e 	bl	9ca0 <fnet_tcp_delsk>
    9bc4:	e010      	b.n	9be8 <fnet_tcp_closesk+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3989
        }
        else
        {
#if !FNET_CFG_TCP_DISCARD_OUT_OF_ORDER        
            fnet_tcp_deletetmpbuf(cb);
    9bc6:	68f8      	ldr	r0, [r7, #12]
    9bc8:	f000 f84e 	bl	9c68 <fnet_tcp_deletetmpbuf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3991
#endif            
            fnet_socket_buffer_release(&sk->send_buffer);
    9bcc:	687b      	ldr	r3, [r7, #4]
    9bce:	3344      	adds	r3, #68	; 0x44
    9bd0:	4618      	mov	r0, r3
    9bd2:	f7fb fbc3 	bl	535c <fnet_socket_buffer_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3992
            sk->state = SS_UNCONNECTED;
    9bd6:	687b      	ldr	r3, [r7, #4]
    9bd8:	2200      	movs	r2, #0
    9bda:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3993
            fnet_memset_zero(&sk->foreign_addr, sizeof(sk->foreign_addr));
    9bdc:	687b      	ldr	r3, [r7, #4]
    9bde:	3354      	adds	r3, #84	; 0x54
    9be0:	4618      	mov	r0, r3
    9be2:	2108      	movs	r1, #8
    9be4:	f7fc f812 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:3996
        }
    }
}
    9be8:	3710      	adds	r7, #16
    9bea:	46bd      	mov	sp, r7
    9bec:	bd80      	pop	{r7, pc}
    9bee:	bf00      	nop
    9bf0:	10000058 	.word	0x10000058

00009bf4 <fnet_tcp_delpartialsk>:
fnet_tcp_delpartialsk():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4006
*              the partial list.
*
* RETURNS: None.                 
*************************************************************************/
static void fnet_tcp_delpartialsk( fnet_socket_t *sk )
{
    9bf4:	b580      	push	{r7, lr}
    9bf6:	b082      	sub	sp, #8
    9bf8:	af00      	add	r7, sp, #0
    9bfa:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4007
    sk->head_con->partial_con_len--;
    9bfc:	687b      	ldr	r3, [r7, #4]
    9bfe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    9c00:	6a1a      	ldr	r2, [r3, #32]
    9c02:	3a01      	subs	r2, #1
    9c04:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4008
    fnet_tcp_delsk(&sk->head_con->partial_con, sk);
    9c06:	687b      	ldr	r3, [r7, #4]
    9c08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    9c0a:	331c      	adds	r3, #28
    9c0c:	4618      	mov	r0, r3
    9c0e:	6879      	ldr	r1, [r7, #4]
    9c10:	f000 f846 	bl	9ca0 <fnet_tcp_delsk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4009
}
    9c14:	3708      	adds	r7, #8
    9c16:	46bd      	mov	sp, r7
    9c18:	bd80      	pop	{r7, pc}
    9c1a:	bf00      	nop

00009c1c <fnet_tcp_delincomingsk>:
fnet_tcp_delincomingsk():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4019
* DESCRIPTION: This function deletes the socket from the incoming list.
*
* RETURNS: None.                
*************************************************************************/
static void fnet_tcp_delincomingsk( fnet_socket_t *sk )
{
    9c1c:	b580      	push	{r7, lr}
    9c1e:	b082      	sub	sp, #8
    9c20:	af00      	add	r7, sp, #0
    9c22:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4020
    sk->head_con->incoming_con_len--;
    9c24:	687b      	ldr	r3, [r7, #4]
    9c26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    9c28:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    9c2a:	3a01      	subs	r2, #1
    9c2c:	629a      	str	r2, [r3, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4021
    fnet_tcp_delsk(&sk->head_con->incoming_con, sk);
    9c2e:	687b      	ldr	r3, [r7, #4]
    9c30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    9c32:	3324      	adds	r3, #36	; 0x24
    9c34:	4618      	mov	r0, r3
    9c36:	6879      	ldr	r1, [r7, #4]
    9c38:	f000 f832 	bl	9ca0 <fnet_tcp_delsk>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4022
}
    9c3c:	3708      	adds	r7, #8
    9c3e:	46bd      	mov	sp, r7
    9c40:	bd80      	pop	{r7, pc}
    9c42:	bf00      	nop

00009c44 <fnet_tcp_delcb>:
fnet_tcp_delcb():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4032
* DESCRIPTION: This function deletes the control block.
*
* RETURNS: None. 
*************************************************************************/
static void fnet_tcp_delcb( fnet_tcp_control_t *cb )
{
    9c44:	b580      	push	{r7, lr}
    9c46:	b082      	sub	sp, #8
    9c48:	af00      	add	r7, sp, #0
    9c4a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4033
    if(!cb)
    9c4c:	687b      	ldr	r3, [r7, #4]
    9c4e:	2b00      	cmp	r3, #0
    9c50:	d100      	bne.n	9c54 <fnet_tcp_delcb+0x10>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4034
        return;
    9c52:	e005      	b.n	9c60 <fnet_tcp_delcb+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4036
#if !FNET_CFG_TCP_DISCARD_OUT_OF_ORDER
    fnet_tcp_deletetmpbuf(cb);
    9c54:	6878      	ldr	r0, [r7, #4]
    9c56:	f000 f807 	bl	9c68 <fnet_tcp_deletetmpbuf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4038
#endif    
    fnet_free(cb);
    9c5a:	6878      	ldr	r0, [r7, #4]
    9c5c:	f7f9 fac8 	bl	31f0 <fnet_free>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4039
}
    9c60:	3708      	adds	r7, #8
    9c62:	46bd      	mov	sp, r7
    9c64:	bd80      	pop	{r7, pc}
    9c66:	bf00      	nop

00009c68 <fnet_tcp_deletetmpbuf>:
fnet_tcp_deletetmpbuf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4050
*
* RETURNS: None. 
*************************************************************************/
#if !FNET_CFG_TCP_DISCARD_OUT_OF_ORDER
static void fnet_tcp_deletetmpbuf( fnet_tcp_control_t *cb )
{
    9c68:	b580      	push	{r7, lr}
    9c6a:	b084      	sub	sp, #16
    9c6c:	af00      	add	r7, sp, #0
    9c6e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4053
    fnet_netbuf_t *buf, *delbuf;

    buf = cb->tcpcb_rcvchain;
    9c70:	687b      	ldr	r3, [r7, #4]
    9c72:	681b      	ldr	r3, [r3, #0]
    9c74:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4056


    while(buf)
    9c76:	e007      	b.n	9c88 <fnet_tcp_deletetmpbuf+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4058
    {
        delbuf = buf;
    9c78:	68fb      	ldr	r3, [r7, #12]
    9c7a:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4059
        buf = buf->next_chain;
    9c7c:	68fb      	ldr	r3, [r7, #12]
    9c7e:	685b      	ldr	r3, [r3, #4]
    9c80:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4060
        fnet_netbuf_free_chain(delbuf);
    9c82:	68b8      	ldr	r0, [r7, #8]
    9c84:	f7f8 ff3c 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4056 (discriminator 1)
    fnet_netbuf_t *buf, *delbuf;

    buf = cb->tcpcb_rcvchain;


    while(buf)
    9c88:	68fb      	ldr	r3, [r7, #12]
    9c8a:	2b00      	cmp	r3, #0
    9c8c:	d1f4      	bne.n	9c78 <fnet_tcp_deletetmpbuf+0x10>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4063
        delbuf = buf;
        buf = buf->next_chain;
        fnet_netbuf_free_chain(delbuf);
    }

    cb->tcpcb_count = 0;
    9c8e:	687b      	ldr	r3, [r7, #4]
    9c90:	2200      	movs	r2, #0
    9c92:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4064
    cb->tcpcb_rcvchain = 0;
    9c94:	687b      	ldr	r3, [r7, #4]
    9c96:	2200      	movs	r2, #0
    9c98:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4065
}
    9c9a:	3710      	adds	r7, #16
    9c9c:	46bd      	mov	sp, r7
    9c9e:	bd80      	pop	{r7, pc}

00009ca0 <fnet_tcp_delsk>:
fnet_tcp_delsk():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4076
* DESCRIPTION: This function deletes the socket.
*
* RETURNS: None.                 
*************************************************************************/
static void fnet_tcp_delsk( fnet_socket_t ** head, fnet_socket_t *sk )
{
    9ca0:	b580      	push	{r7, lr}
    9ca2:	b082      	sub	sp, #8
    9ca4:	af00      	add	r7, sp, #0
    9ca6:	6078      	str	r0, [r7, #4]
    9ca8:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4077
    fnet_tcp_delcb((fnet_tcp_control_t *)sk->protocol_control);
    9caa:	683b      	ldr	r3, [r7, #0]
    9cac:	699b      	ldr	r3, [r3, #24]
    9cae:	4618      	mov	r0, r3
    9cb0:	f7ff ffc8 	bl	9c44 <fnet_tcp_delcb>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4078
    fnet_socket_release(head, sk);
    9cb4:	6878      	ldr	r0, [r7, #4]
    9cb6:	6839      	ldr	r1, [r7, #0]
    9cb8:	f7fa fb38 	bl	432c <fnet_socket_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4079
}
    9cbc:	3708      	adds	r7, #8
    9cbe:	46bd      	mov	sp, r7
    9cc0:	bd80      	pop	{r7, pc}
    9cc2:	bf00      	nop

00009cc4 <fnet_tcp_hit>:
fnet_tcp_hit():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4091
* RETURNS:  This function returns TRUE if position (pos) is located 
*           in the interval between startpos and endpos. Otherwise
*           this function returns FALSE.             
*************************************************************************/
static int fnet_tcp_hit( unsigned long startpos, unsigned long endpos, unsigned long pos )
{
    9cc4:	b480      	push	{r7}
    9cc6:	b085      	sub	sp, #20
    9cc8:	af00      	add	r7, sp, #0
    9cca:	60f8      	str	r0, [r7, #12]
    9ccc:	60b9      	str	r1, [r7, #8]
    9cce:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4092
    if(endpos >= startpos)
    9cd0:	68ba      	ldr	r2, [r7, #8]
    9cd2:	68fb      	ldr	r3, [r7, #12]
    9cd4:	429a      	cmp	r2, r3
    9cd6:	d309      	bcc.n	9cec <fnet_tcp_hit+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4094
    {
        if(pos < startpos || pos > endpos)
    9cd8:	687a      	ldr	r2, [r7, #4]
    9cda:	68fb      	ldr	r3, [r7, #12]
    9cdc:	429a      	cmp	r2, r3
    9cde:	d303      	bcc.n	9ce8 <fnet_tcp_hit+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4094 (discriminator 1)
    9ce0:	687a      	ldr	r2, [r7, #4]
    9ce2:	68bb      	ldr	r3, [r7, #8]
    9ce4:	429a      	cmp	r2, r3
    9ce6:	d90b      	bls.n	9d00 <fnet_tcp_hit+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4095
            return 0;
    9ce8:	2300      	movs	r3, #0
    9cea:	e00a      	b.n	9d02 <fnet_tcp_hit+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4099
    }
    else
    {
        if(pos < startpos && pos > endpos)
    9cec:	687a      	ldr	r2, [r7, #4]
    9cee:	68fb      	ldr	r3, [r7, #12]
    9cf0:	429a      	cmp	r2, r3
    9cf2:	d205      	bcs.n	9d00 <fnet_tcp_hit+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4099 (discriminator 1)
    9cf4:	687a      	ldr	r2, [r7, #4]
    9cf6:	68bb      	ldr	r3, [r7, #8]
    9cf8:	429a      	cmp	r2, r3
    9cfa:	d901      	bls.n	9d00 <fnet_tcp_hit+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4100
            return 0;
    9cfc:	2300      	movs	r3, #0
    9cfe:	e000      	b.n	9d02 <fnet_tcp_hit+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4103
    }

    return 1;
    9d00:	2301      	movs	r3, #1
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4104
}
    9d02:	4618      	mov	r0, r3
    9d04:	3714      	adds	r7, #20
    9d06:	46bd      	mov	sp, r7
    9d08:	f85d 7b04 	ldr.w	r7, [sp], #4
    9d0c:	4770      	bx	lr
    9d0e:	bf00      	nop

00009d10 <fnet_tcp_getsize>:
fnet_tcp_getsize():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4115
*
* RETURNS: This function returns the length of the interval
*              (from pos1 to pos2 ).                 
*************************************************************************/
static unsigned long fnet_tcp_getsize( unsigned long pos1, unsigned long pos2 )
{
    9d10:	b480      	push	{r7}
    9d12:	b085      	sub	sp, #20
    9d14:	af00      	add	r7, sp, #0
    9d16:	6078      	str	r0, [r7, #4]
    9d18:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4118
    unsigned long size;

    if(pos1 <= pos2)
    9d1a:	687a      	ldr	r2, [r7, #4]
    9d1c:	683b      	ldr	r3, [r7, #0]
    9d1e:	429a      	cmp	r2, r3
    9d20:	d804      	bhi.n	9d2c <fnet_tcp_getsize+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4120
    {
        size = pos2 - pos1;
    9d22:	683a      	ldr	r2, [r7, #0]
    9d24:	687b      	ldr	r3, [r7, #4]
    9d26:	1ad3      	subs	r3, r2, r3
    9d28:	60fb      	str	r3, [r7, #12]
    9d2a:	e003      	b.n	9d34 <fnet_tcp_getsize+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4124
    }
    else
    {
        size = FNET_TCP_MAX_SEQ - pos1 + pos2 + 1;
    9d2c:	683a      	ldr	r2, [r7, #0]
    9d2e:	687b      	ldr	r3, [r7, #4]
    9d30:	1ad3      	subs	r3, r2, r3
    9d32:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4127
    }

    return size;
    9d34:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_tcp.c:4128
}
    9d36:	4618      	mov	r0, r3
    9d38:	3714      	adds	r7, #20
    9d3a:	46bd      	mov	sp, r7
    9d3c:	f85d 7b04 	ldr.w	r7, [sp], #4
    9d40:	4770      	bx	lr
    9d42:	bf00      	nop

00009d44 <fnet_timer_init>:
fnet_timer_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:78
* NAME: fnet_timer_init
*
* DESCRIPTION: Starts TCP/IP hardware timer. delay_ms - period of timer (ms)
*************************************************************************/
int fnet_timer_init( unsigned int period_ms )
{
    9d44:	b580      	push	{r7, lr}
    9d46:	b084      	sub	sp, #16
    9d48:	af00      	add	r7, sp, #0
    9d4a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:81
   int result;
   
   fnet_current_time = 0;           /* Reset RTC counter. */
    9d4c:	4b05      	ldr	r3, [pc, #20]	; (9d64 <fnet_timer_init+0x20>)
    9d4e:	2200      	movs	r2, #0
    9d50:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:82
   result = FNET_HW_TIMER_INIT(period_ms);  /* Start HW timer. */
    9d52:	6878      	ldr	r0, [r7, #4]
    9d54:	f004 feac 	bl	eab0 <fnet_cpu_timer_init>
    9d58:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:84
   
   return result;
    9d5a:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:85
}
    9d5c:	4618      	mov	r0, r3
    9d5e:	3710      	adds	r7, #16
    9d60:	46bd      	mov	sp, r7
    9d62:	bd80      	pop	{r7, pc}
    9d64:	1000439c 	.word	0x1000439c

00009d68 <fnet_timer_release>:
fnet_timer_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:94
*
* DESCRIPTION: Frees the memory, which was allocated for all
*              TCP/IP timers, and removes hardware timer
*************************************************************************/
void fnet_timer_release( void )
{
    9d68:	b580      	push	{r7, lr}
    9d6a:	b082      	sub	sp, #8
    9d6c:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:97
    struct fnet_net_timer *tmp_tl;

    FNET_HW_TIMER_RELEASE();
    9d6e:	f004 ff13 	bl	eb98 <fnet_cpu_timer_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:99
    
    while(fnet_tl_head != 0)
    9d72:	e00b      	b.n	9d8c <fnet_timer_release+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:101
    {
        tmp_tl = fnet_tl_head->next;
    9d74:	4b09      	ldr	r3, [pc, #36]	; (9d9c <fnet_timer_release+0x34>)
    9d76:	681b      	ldr	r3, [r3, #0]
    9d78:	681b      	ldr	r3, [r3, #0]
    9d7a:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:103

        fnet_free(fnet_tl_head);
    9d7c:	4b07      	ldr	r3, [pc, #28]	; (9d9c <fnet_timer_release+0x34>)
    9d7e:	681b      	ldr	r3, [r3, #0]
    9d80:	4618      	mov	r0, r3
    9d82:	f7f9 fa35 	bl	31f0 <fnet_free>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:105

        fnet_tl_head = tmp_tl;
    9d86:	4b05      	ldr	r3, [pc, #20]	; (9d9c <fnet_timer_release+0x34>)
    9d88:	687a      	ldr	r2, [r7, #4]
    9d8a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:99 (discriminator 1)
{
    struct fnet_net_timer *tmp_tl;

    FNET_HW_TIMER_RELEASE();
    
    while(fnet_tl_head != 0)
    9d8c:	4b03      	ldr	r3, [pc, #12]	; (9d9c <fnet_timer_release+0x34>)
    9d8e:	681b      	ldr	r3, [r3, #0]
    9d90:	2b00      	cmp	r3, #0
    9d92:	d1ef      	bne.n	9d74 <fnet_timer_release+0xc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:107

        fnet_free(fnet_tl_head);

        fnet_tl_head = tmp_tl;
    }
}
    9d94:	3708      	adds	r7, #8
    9d96:	46bd      	mov	sp, r7
    9d98:	bd80      	pop	{r7, pc}
    9d9a:	bf00      	nop
    9d9c:	10004398 	.word	0x10004398

00009da0 <fnet_timer_ticks>:
fnet_timer_ticks():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:115
* NAME: fnet_timer_ticks
*
* DESCRIPTION: This function returns current value of the timer in ticks. 
*************************************************************************/
unsigned long fnet_timer_ticks( void )
{
    9da0:	b480      	push	{r7}
    9da2:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:116
    return fnet_current_time;
    9da4:	4b03      	ldr	r3, [pc, #12]	; (9db4 <fnet_timer_ticks+0x14>)
    9da6:	681b      	ldr	r3, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:117
}
    9da8:	4618      	mov	r0, r3
    9daa:	46bd      	mov	sp, r7
    9dac:	f85d 7b04 	ldr.w	r7, [sp], #4
    9db0:	4770      	bx	lr
    9db2:	bf00      	nop
    9db4:	1000439c 	.word	0x1000439c

00009db8 <fnet_timer_seconds>:
fnet_timer_seconds():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:125
* NAME: fnet_timer_seconds
*
* DESCRIPTION: This function returns current value of the timer in seconds. 
*************************************************************************/
unsigned long fnet_timer_seconds( void )
{
    9db8:	b480      	push	{r7}
    9dba:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:126
    return (fnet_current_time/FNET_TIMER_TICK_IN_SEC);
    9dbc:	4b05      	ldr	r3, [pc, #20]	; (9dd4 <fnet_timer_seconds+0x1c>)
    9dbe:	681a      	ldr	r2, [r3, #0]
    9dc0:	4b05      	ldr	r3, [pc, #20]	; (9dd8 <fnet_timer_seconds+0x20>)
    9dc2:	fba3 1302 	umull	r1, r3, r3, r2
    9dc6:	08db      	lsrs	r3, r3, #3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:127
}
    9dc8:	4618      	mov	r0, r3
    9dca:	46bd      	mov	sp, r7
    9dcc:	f85d 7b04 	ldr.w	r7, [sp], #4
    9dd0:	4770      	bx	lr
    9dd2:	bf00      	nop
    9dd4:	1000439c 	.word	0x1000439c
    9dd8:	cccccccd 	.word	0xcccccccd

00009ddc <fnet_timer_ms>:
fnet_timer_ms():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:136
*
* DESCRIPTION: This function returns current value of the timer 
* in milliseconds. 
*************************************************************************/
unsigned long fnet_timer_ms( void )
{
    9ddc:	b480      	push	{r7}
    9dde:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:137
    return (fnet_current_time*FNET_TIMER_PERIOD_MS);
    9de0:	4b04      	ldr	r3, [pc, #16]	; (9df4 <fnet_timer_ms+0x18>)
    9de2:	681b      	ldr	r3, [r3, #0]
    9de4:	2264      	movs	r2, #100	; 0x64
    9de6:	fb02 f303 	mul.w	r3, r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:138
}
    9dea:	4618      	mov	r0, r3
    9dec:	46bd      	mov	sp, r7
    9dee:	f85d 7b04 	ldr.w	r7, [sp], #4
    9df2:	4770      	bx	lr
    9df4:	1000439c 	.word	0x1000439c

00009df8 <fnet_timer_ticks_inc>:
fnet_timer_ticks_inc():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:146
* NAME: fnet_timer_ticks_inc
*
* DESCRIPTION: This function increments current value of the RTC counter. 
*************************************************************************/
void fnet_timer_ticks_inc( void )
{
    9df8:	b480      	push	{r7}
    9dfa:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:147
    fnet_current_time++; 
    9dfc:	4b04      	ldr	r3, [pc, #16]	; (9e10 <fnet_timer_ticks_inc+0x18>)
    9dfe:	681b      	ldr	r3, [r3, #0]
    9e00:	1c5a      	adds	r2, r3, #1
    9e02:	4b03      	ldr	r3, [pc, #12]	; (9e10 <fnet_timer_ticks_inc+0x18>)
    9e04:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:153
    
#if FNET_CFG_DEBUG_TIMER
   if((fnet_current_time%10) == 0)    
	    FNET_DEBUG_TIMER("!");
#endif	    
}
    9e06:	46bd      	mov	sp, r7
    9e08:	f85d 7b04 	ldr.w	r7, [sp], #4
    9e0c:	4770      	bx	lr
    9e0e:	bf00      	nop
    9e10:	1000439c 	.word	0x1000439c

00009e14 <fnet_timer_handler_bottom>:
fnet_timer_handler_bottom():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:162
*
* DESCRIPTION: Handles timer interrupts 
*              
*************************************************************************/
void fnet_timer_handler_bottom(void *cookie)
{
    9e14:	b580      	push	{r7, lr}
    9e16:	b084      	sub	sp, #16
    9e18:	af00      	add	r7, sp, #0
    9e1a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:163
    struct fnet_net_timer *timer = fnet_tl_head;
    9e1c:	4b13      	ldr	r3, [pc, #76]	; (9e6c <fnet_timer_handler_bottom+0x58>)
    9e1e:	681b      	ldr	r3, [r3, #0]
    9e20:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:167
    
    FNET_COMP_UNUSED_ARG(cookie);
    
    while(timer)
    9e22:	e01d      	b.n	9e60 <fnet_timer_handler_bottom+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:169
    {
        if(fnet_timer_get_interval(timer->timer_cnt, fnet_current_time) >= timer->timer_rv)
    9e24:	68fb      	ldr	r3, [r7, #12]
    9e26:	685a      	ldr	r2, [r3, #4]
    9e28:	4b11      	ldr	r3, [pc, #68]	; (9e70 <fnet_timer_handler_bottom+0x5c>)
    9e2a:	681b      	ldr	r3, [r3, #0]
    9e2c:	4610      	mov	r0, r2
    9e2e:	4619      	mov	r1, r3
    9e30:	f000 f896 	bl	9f60 <fnet_timer_get_interval>
    9e34:	4602      	mov	r2, r0
    9e36:	68fb      	ldr	r3, [r7, #12]
    9e38:	689b      	ldr	r3, [r3, #8]
    9e3a:	429a      	cmp	r2, r3
    9e3c:	d30d      	bcc.n	9e5a <fnet_timer_handler_bottom+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:171
        {
            timer->timer_cnt = fnet_current_time;
    9e3e:	4b0c      	ldr	r3, [pc, #48]	; (9e70 <fnet_timer_handler_bottom+0x5c>)
    9e40:	681a      	ldr	r2, [r3, #0]
    9e42:	68fb      	ldr	r3, [r7, #12]
    9e44:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:173

            if(timer->handler)
    9e46:	68fb      	ldr	r3, [r7, #12]
    9e48:	68db      	ldr	r3, [r3, #12]
    9e4a:	2b00      	cmp	r3, #0
    9e4c:	d005      	beq.n	9e5a <fnet_timer_handler_bottom+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:174
                timer->handler(timer->cookie);
    9e4e:	68fb      	ldr	r3, [r7, #12]
    9e50:	68db      	ldr	r3, [r3, #12]
    9e52:	68fa      	ldr	r2, [r7, #12]
    9e54:	6912      	ldr	r2, [r2, #16]
    9e56:	4610      	mov	r0, r2
    9e58:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:177
        }

        timer = timer->next;
    9e5a:	68fb      	ldr	r3, [r7, #12]
    9e5c:	681b      	ldr	r3, [r3, #0]
    9e5e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:167 (discriminator 1)
{
    struct fnet_net_timer *timer = fnet_tl_head;
    
    FNET_COMP_UNUSED_ARG(cookie);
    
    while(timer)
    9e60:	68fb      	ldr	r3, [r7, #12]
    9e62:	2b00      	cmp	r3, #0
    9e64:	d1de      	bne.n	9e24 <fnet_timer_handler_bottom+0x10>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:179
                timer->handler(timer->cookie);
        }

        timer = timer->next;
    }
}
    9e66:	3710      	adds	r7, #16
    9e68:	46bd      	mov	sp, r7
    9e6a:	bd80      	pop	{r7, pc}
    9e6c:	10004398 	.word	0x10004398
    9e70:	1000439c 	.word	0x1000439c

00009e74 <fnet_timer_new>:
fnet_timer_new():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:188
*
* DESCRIPTION: Creates new software timer with the period 
*              
*************************************************************************/
fnet_timer_desc_t fnet_timer_new( unsigned long period_ticks, void (*handler)( void * ), void *cookie )
{
    9e74:	b580      	push	{r7, lr}
    9e76:	b086      	sub	sp, #24
    9e78:	af00      	add	r7, sp, #0
    9e7a:	60f8      	str	r0, [r7, #12]
    9e7c:	60b9      	str	r1, [r7, #8]
    9e7e:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:189
    struct fnet_net_timer *timer = FNET_NULL;
    9e80:	2300      	movs	r3, #0
    9e82:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:191

    if( period_ticks && handler )
    9e84:	68fb      	ldr	r3, [r7, #12]
    9e86:	2b00      	cmp	r3, #0
    9e88:	d01c      	beq.n	9ec4 <fnet_timer_new+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:191 (discriminator 1)
    9e8a:	68bb      	ldr	r3, [r7, #8]
    9e8c:	2b00      	cmp	r3, #0
    9e8e:	d019      	beq.n	9ec4 <fnet_timer_new+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:193
    {
        timer = (struct fnet_net_timer *)fnet_malloc(sizeof(struct fnet_net_timer));
    9e90:	2014      	movs	r0, #20
    9e92:	f7f9 f9bd 	bl	3210 <fnet_malloc>
    9e96:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:195

        if(timer)
    9e98:	697b      	ldr	r3, [r7, #20]
    9e9a:	2b00      	cmp	r3, #0
    9e9c:	d012      	beq.n	9ec4 <fnet_timer_new+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:197
        {
            timer->next = fnet_tl_head;
    9e9e:	4b0c      	ldr	r3, [pc, #48]	; (9ed0 <fnet_timer_new+0x5c>)
    9ea0:	681a      	ldr	r2, [r3, #0]
    9ea2:	697b      	ldr	r3, [r7, #20]
    9ea4:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:199

            fnet_tl_head = timer;
    9ea6:	4b0a      	ldr	r3, [pc, #40]	; (9ed0 <fnet_timer_new+0x5c>)
    9ea8:	697a      	ldr	r2, [r7, #20]
    9eaa:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:201

            timer->timer_cnt = 0;
    9eac:	697b      	ldr	r3, [r7, #20]
    9eae:	2200      	movs	r2, #0
    9eb0:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:203

            timer->timer_rv = period_ticks;
    9eb2:	697b      	ldr	r3, [r7, #20]
    9eb4:	68fa      	ldr	r2, [r7, #12]
    9eb6:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:205

            timer->handler = handler;
    9eb8:	697b      	ldr	r3, [r7, #20]
    9eba:	68ba      	ldr	r2, [r7, #8]
    9ebc:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:206
            timer->cookie = cookie;
    9ebe:	697b      	ldr	r3, [r7, #20]
    9ec0:	687a      	ldr	r2, [r7, #4]
    9ec2:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:210
        }
    }

    return (fnet_timer_desc_t)timer;
    9ec4:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:211
}
    9ec6:	4618      	mov	r0, r3
    9ec8:	3718      	adds	r7, #24
    9eca:	46bd      	mov	sp, r7
    9ecc:	bd80      	pop	{r7, pc}
    9ece:	bf00      	nop
    9ed0:	10004398 	.word	0x10004398

00009ed4 <fnet_timer_free>:
fnet_timer_free():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:220
*
* DESCRIPTION: Frees software timer, which is pointed by tl_ptr 
*              
*************************************************************************/
void fnet_timer_free( fnet_timer_desc_t timer )
{
    9ed4:	b580      	push	{r7, lr}
    9ed6:	b084      	sub	sp, #16
    9ed8:	af00      	add	r7, sp, #0
    9eda:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:221
    struct fnet_net_timer *tl = timer;
    9edc:	687b      	ldr	r3, [r7, #4]
    9ede:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:224
    struct fnet_net_timer *tl_temp;

    if(tl)
    9ee0:	68bb      	ldr	r3, [r7, #8]
    9ee2:	2b00      	cmp	r3, #0
    9ee4:	d01d      	beq.n	9f22 <fnet_timer_free+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:226
    {
        if(tl == fnet_tl_head)
    9ee6:	4b10      	ldr	r3, [pc, #64]	; (9f28 <fnet_timer_free+0x54>)
    9ee8:	681b      	ldr	r3, [r3, #0]
    9eea:	68ba      	ldr	r2, [r7, #8]
    9eec:	429a      	cmp	r2, r3
    9eee:	d105      	bne.n	9efc <fnet_timer_free+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:227
            fnet_tl_head = fnet_tl_head->next;
    9ef0:	4b0d      	ldr	r3, [pc, #52]	; (9f28 <fnet_timer_free+0x54>)
    9ef2:	681b      	ldr	r3, [r3, #0]
    9ef4:	681a      	ldr	r2, [r3, #0]
    9ef6:	4b0c      	ldr	r3, [pc, #48]	; (9f28 <fnet_timer_free+0x54>)
    9ef8:	601a      	str	r2, [r3, #0]
    9efa:	e00f      	b.n	9f1c <fnet_timer_free+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:230
        else
        {
            tl_temp = fnet_tl_head;
    9efc:	4b0a      	ldr	r3, [pc, #40]	; (9f28 <fnet_timer_free+0x54>)
    9efe:	681b      	ldr	r3, [r3, #0]
    9f00:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:232

            while(tl_temp->next != tl)
    9f02:	e002      	b.n	9f0a <fnet_timer_free+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:233
              tl_temp = tl_temp->next;
    9f04:	68fb      	ldr	r3, [r7, #12]
    9f06:	681b      	ldr	r3, [r3, #0]
    9f08:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:232 (discriminator 1)
            fnet_tl_head = fnet_tl_head->next;
        else
        {
            tl_temp = fnet_tl_head;

            while(tl_temp->next != tl)
    9f0a:	68fb      	ldr	r3, [r7, #12]
    9f0c:	681a      	ldr	r2, [r3, #0]
    9f0e:	68bb      	ldr	r3, [r7, #8]
    9f10:	429a      	cmp	r2, r3
    9f12:	d1f7      	bne.n	9f04 <fnet_timer_free+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:235
              tl_temp = tl_temp->next;

            tl_temp->next = tl->next;
    9f14:	68bb      	ldr	r3, [r7, #8]
    9f16:	681a      	ldr	r2, [r3, #0]
    9f18:	68fb      	ldr	r3, [r7, #12]
    9f1a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:238
        }

        fnet_free(tl);
    9f1c:	68b8      	ldr	r0, [r7, #8]
    9f1e:	f7f9 f967 	bl	31f0 <fnet_free>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:240
    }
}
    9f22:	3710      	adds	r7, #16
    9f24:	46bd      	mov	sp, r7
    9f26:	bd80      	pop	{r7, pc}
    9f28:	10004398 	.word	0x10004398

00009f2c <fnet_timer_reset_all>:
fnet_timer_reset_all():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:249
*
* DESCRIPTION: Resets all timers' counters
*              
*************************************************************************/
void fnet_timer_reset_all( void )
{
    9f2c:	b480      	push	{r7}
    9f2e:	b083      	sub	sp, #12
    9f30:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:252
    struct fnet_net_timer *tl;

    tl = fnet_tl_head;
    9f32:	4b09      	ldr	r3, [pc, #36]	; (9f58 <fnet_timer_reset_all+0x2c>)
    9f34:	681b      	ldr	r3, [r3, #0]
    9f36:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:254

    while(tl != 0)
    9f38:	e006      	b.n	9f48 <fnet_timer_reset_all+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:256
    {
        tl->timer_cnt = fnet_current_time;
    9f3a:	4b08      	ldr	r3, [pc, #32]	; (9f5c <fnet_timer_reset_all+0x30>)
    9f3c:	681a      	ldr	r2, [r3, #0]
    9f3e:	687b      	ldr	r3, [r7, #4]
    9f40:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:257
        tl = tl->next;
    9f42:	687b      	ldr	r3, [r7, #4]
    9f44:	681b      	ldr	r3, [r3, #0]
    9f46:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:254 (discriminator 1)
{
    struct fnet_net_timer *tl;

    tl = fnet_tl_head;

    while(tl != 0)
    9f48:	687b      	ldr	r3, [r7, #4]
    9f4a:	2b00      	cmp	r3, #0
    9f4c:	d1f5      	bne.n	9f3a <fnet_timer_reset_all+0xe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:259
    {
        tl->timer_cnt = fnet_current_time;
        tl = tl->next;
    }
}
    9f4e:	370c      	adds	r7, #12
    9f50:	46bd      	mov	sp, r7
    9f52:	f85d 7b04 	ldr.w	r7, [sp], #4
    9f56:	4770      	bx	lr
    9f58:	10004398 	.word	0x10004398
    9f5c:	1000439c 	.word	0x1000439c

00009f60 <fnet_timer_get_interval>:
fnet_timer_get_interval():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:268
*
* DESCRIPTION: Calaculates an interval between two moments of time
*              
*************************************************************************/
unsigned long fnet_timer_get_interval( unsigned long start, unsigned long end )
{
    9f60:	b480      	push	{r7}
    9f62:	b083      	sub	sp, #12
    9f64:	af00      	add	r7, sp, #0
    9f66:	6078      	str	r0, [r7, #4]
    9f68:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:269
    if(start <= end)
    9f6a:	687a      	ldr	r2, [r7, #4]
    9f6c:	683b      	ldr	r3, [r7, #0]
    9f6e:	429a      	cmp	r2, r3
    9f70:	d803      	bhi.n	9f7a <fnet_timer_get_interval+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:270
        return (end - start);
    9f72:	683a      	ldr	r2, [r7, #0]
    9f74:	687b      	ldr	r3, [r7, #4]
    9f76:	1ad3      	subs	r3, r2, r3
    9f78:	e002      	b.n	9f80 <fnet_timer_get_interval+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:272
    else
        return (0xffffffff - start + end + 1);
    9f7a:	683a      	ldr	r2, [r7, #0]
    9f7c:	687b      	ldr	r3, [r7, #4]
    9f7e:	1ad3      	subs	r3, r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:273
}
    9f80:	4618      	mov	r0, r3
    9f82:	370c      	adds	r7, #12
    9f84:	46bd      	mov	sp, r7
    9f86:	f85d 7b04 	ldr.w	r7, [sp], #4
    9f8a:	4770      	bx	lr

00009f8c <fnet_timer_delay>:
fnet_timer_delay():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:282
*
* DESCRIPTION: Do delay for a given number of timer ticks.
*              
*************************************************************************/
void fnet_timer_delay( unsigned long delay_ticks )
{
    9f8c:	b580      	push	{r7, lr}
    9f8e:	b084      	sub	sp, #16
    9f90:	af00      	add	r7, sp, #0
    9f92:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:283
    unsigned long start = fnet_current_time;
    9f94:	4b08      	ldr	r3, [pc, #32]	; (9fb8 <fnet_timer_delay+0x2c>)
    9f96:	681b      	ldr	r3, [r3, #0]
    9f98:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:285

    while(fnet_timer_get_interval(start, fnet_timer_ticks()) < delay_ticks)
    9f9a:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:285 (discriminator 1)
    9f9c:	f7ff ff00 	bl	9da0 <fnet_timer_ticks>
    9fa0:	4603      	mov	r3, r0
    9fa2:	68f8      	ldr	r0, [r7, #12]
    9fa4:	4619      	mov	r1, r3
    9fa6:	f7ff ffdb 	bl	9f60 <fnet_timer_get_interval>
    9faa:	4602      	mov	r2, r0
    9fac:	687b      	ldr	r3, [r7, #4]
    9fae:	429a      	cmp	r2, r3
    9fb0:	d3f4      	bcc.n	9f9c <fnet_timer_delay+0x10>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:287
    { };
}
    9fb2:	3710      	adds	r7, #16
    9fb4:	46bd      	mov	sp, r7
    9fb6:	bd80      	pop	{r7, pc}
    9fb8:	1000439c 	.word	0x1000439c

00009fbc <fnet_timer_ms2ticks>:
fnet_timer_ms2ticks():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:296
*
* DESCRIPTION: Convert milliseconds to timer ticks.
*              
*************************************************************************/
unsigned long fnet_timer_ms2ticks( unsigned long time_ms )
{
    9fbc:	b480      	push	{r7}
    9fbe:	b083      	sub	sp, #12
    9fc0:	af00      	add	r7, sp, #0
    9fc2:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:297
    return time_ms / FNET_TIMER_PERIOD_MS;
    9fc4:	687a      	ldr	r2, [r7, #4]
    9fc6:	4b05      	ldr	r3, [pc, #20]	; (9fdc <fnet_timer_ms2ticks+0x20>)
    9fc8:	fba3 1302 	umull	r1, r3, r3, r2
    9fcc:	095b      	lsrs	r3, r3, #5
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_timer.c:298
}
    9fce:	4618      	mov	r0, r3
    9fd0:	370c      	adds	r7, #12
    9fd2:	46bd      	mov	sp, r7
    9fd4:	f85d 7b04 	ldr.w	r7, [sp], #4
    9fd8:	4770      	bx	lr
    9fda:	bf00      	nop
    9fdc:	51eb851f 	.word	0x51eb851f

00009fe0 <fnet_udp_release>:
fnet_udp_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:126
*
* DESCRIPTION: This function releases all sockets associated 
*              with UDP protocol. 
*************************************************************************/
static void fnet_udp_release( void )
{
    9fe0:	b580      	push	{r7, lr}
    9fe2:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:127
    while(fnet_udp_prot_if.head)
    9fe4:	e005      	b.n	9ff2 <fnet_udp_release+0x12>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:128
      fnet_socket_release(&fnet_udp_prot_if.head, fnet_udp_prot_if.head);
    9fe6:	4b05      	ldr	r3, [pc, #20]	; (9ffc <fnet_udp_release+0x1c>)
    9fe8:	681b      	ldr	r3, [r3, #0]
    9fea:	4804      	ldr	r0, [pc, #16]	; (9ffc <fnet_udp_release+0x1c>)
    9fec:	4619      	mov	r1, r3
    9fee:	f7fa f99d 	bl	432c <fnet_socket_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:127 (discriminator 1)
* DESCRIPTION: This function releases all sockets associated 
*              with UDP protocol. 
*************************************************************************/
static void fnet_udp_release( void )
{
    while(fnet_udp_prot_if.head)
    9ff2:	4b02      	ldr	r3, [pc, #8]	; (9ffc <fnet_udp_release+0x1c>)
    9ff4:	681b      	ldr	r3, [r3, #0]
    9ff6:	2b00      	cmp	r3, #0
    9ff8:	d1f5      	bne.n	9fe6 <fnet_udp_release+0x6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:129
      fnet_socket_release(&fnet_udp_prot_if.head, fnet_udp_prot_if.head);
}
    9ffa:	bd80      	pop	{r7, pc}
    9ffc:	1000007c 	.word	0x1000007c

0000a000 <fnet_udp_output>:
fnet_udp_output():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:138
*
* DESCRIPTION: UDP output function
*************************************************************************/
static int fnet_udp_output(  struct sockaddr *src_addr, const struct sockaddr *dest_addr,
                             fnet_socket_option_t *sockoption, fnet_netbuf_t *nb )                            
{
    a000:	b590      	push	{r4, r7, lr}
    a002:	b091      	sub	sp, #68	; 0x44
    a004:	af06      	add	r7, sp, #24
    a006:	60f8      	str	r0, [r7, #12]
    a008:	60b9      	str	r1, [r7, #8]
    a00a:	607a      	str	r2, [r7, #4]
    a00c:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:141
    fnet_netbuf_t                           *nb_header;
    fnet_udp_header_t                       *udp_header;
    int                                     error =  FNET_OK;
    a00e:	2300      	movs	r3, #0
    a010:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:153
        /* Check Scope ID.*/
        netif = fnet_netif_get_by_scope_id( ((struct sockaddr_in6 *)dest_addr)->sin6_scope_id );
    }
    else
#endif
        netif = FNET_NULL;  
    a012:	2300      	movs	r3, #0
    a014:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:156

    /* Construct UDP header.*/
    if((nb_header = fnet_netbuf_new(sizeof(fnet_udp_header_t), FNET_TRUE)) == 0)
    a016:	2008      	movs	r0, #8
    a018:	2101      	movs	r1, #1
    a01a:	f7f8 fb57 	bl	26cc <fnet_netbuf_new>
    a01e:	61f8      	str	r0, [r7, #28]
    a020:	69fb      	ldr	r3, [r7, #28]
    a022:	2b00      	cmp	r3, #0
    a024:	d104      	bne.n	a030 <fnet_udp_output+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:158
    {
        fnet_netbuf_free_chain(nb); 
    a026:	6838      	ldr	r0, [r7, #0]
    a028:	f7f8 fd6a 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:159
        return (FNET_ERR_NOMEM);
    a02c:	2303      	movs	r3, #3
    a02e:	e054      	b.n	a0da <fnet_udp_output+0xda>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:162
    }

    udp_header = nb_header->data_ptr;
    a030:	69fb      	ldr	r3, [r7, #28]
    a032:	68db      	ldr	r3, [r3, #12]
    a034:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:164

    udp_header->source_port = src_addr->sa_port;             /* Source port number.*/
    a036:	68fb      	ldr	r3, [r7, #12]
    a038:	885a      	ldrh	r2, [r3, #2]
    a03a:	69bb      	ldr	r3, [r7, #24]
    a03c:	801a      	strh	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:165
    udp_header->destination_port = dest_addr->sa_port;       /* Destination port number.*/
    a03e:	68bb      	ldr	r3, [r7, #8]
    a040:	885a      	ldrh	r2, [r3, #2]
    a042:	69bb      	ldr	r3, [r7, #24]
    a044:	805a      	strh	r2, [r3, #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:166
    nb = fnet_netbuf_concat(nb_header, nb);
    a046:	69f8      	ldr	r0, [r7, #28]
    a048:	6839      	ldr	r1, [r7, #0]
    a04a:	f7f8 ffe5 	bl	3018 <fnet_netbuf_concat>
    a04e:	6038      	str	r0, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:167
    udp_header->length = fnet_htons((unsigned short)nb->total_length);  /* Length.*/
    a050:	683b      	ldr	r3, [r7, #0]
    a052:	695b      	ldr	r3, [r3, #20]
    a054:	b29b      	uxth	r3, r3
    a056:	4618      	mov	r0, r3
    a058:	f005 fa62 	bl	f520 <fnet_htons>
    a05c:	4603      	mov	r3, r0
    a05e:	461a      	mov	r2, r3
    a060:	69bb      	ldr	r3, [r7, #24]
    a062:	809a      	strh	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:170

    /* Checksum calculation.*/
    udp_header->checksum = 0;  
    a064:	69bb      	ldr	r3, [r7, #24]
    a066:	2200      	movs	r2, #0
    a068:	719a      	strb	r2, [r3, #6]
    a06a:	2200      	movs	r2, #0
    a06c:	71da      	strb	r2, [r3, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:196
        checksum_p = 0;
    }
    else
#endif /* FNET_CFG_CPU_ETH_HW_TX_IP_CHECKSUM */
    {
        udp_header->checksum = fnet_checksum_pseudo_start( nb, FNET_HTONS((unsigned short)FNET_IP_PROTOCOL_UDP), (unsigned short)nb->total_length );
    a06e:	683b      	ldr	r3, [r7, #0]
    a070:	695b      	ldr	r3, [r3, #20]
    a072:	b29b      	uxth	r3, r3
    a074:	6838      	ldr	r0, [r7, #0]
    a076:	f44f 5188 	mov.w	r1, #4352	; 0x1100
    a07a:	461a      	mov	r2, r3
    a07c:	f7f6 fe2e 	bl	cdc <fnet_checksum_pseudo_start>
    a080:	4603      	mov	r3, r0
    a082:	461a      	mov	r2, r3
    a084:	69bb      	ldr	r3, [r7, #24]
    a086:	80da      	strh	r2, [r3, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:197
        checksum_p = &udp_header->checksum;
    a088:	69bb      	ldr	r3, [r7, #24]
    a08a:	3306      	adds	r3, #6
    a08c:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:202
    }
#endif /* FNET_CFG_UDP_CHECKSUM */

#if FNET_CFG_IP4
    if(dest_addr->sa_family == AF_INET)
    a08e:	68bb      	ldr	r3, [r7, #8]
    a090:	881b      	ldrh	r3, [r3, #0]
    a092:	2b01      	cmp	r3, #1
    a094:	d120      	bne.n	a0d8 <fnet_udp_output+0xd8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:204
    {
        error = fnet_ip_output(netif, 
    a096:	68fb      	ldr	r3, [r7, #12]
    a098:	685a      	ldr	r2, [r3, #4]
    a09a:	68bb      	ldr	r3, [r7, #8]
    a09c:	685b      	ldr	r3, [r3, #4]
    a09e:	6879      	ldr	r1, [r7, #4]
    a0a0:	784c      	ldrb	r4, [r1, #1]
    a0a2:	6879      	ldr	r1, [r7, #4]
    a0a4:	7808      	ldrb	r0, [r1, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:213
                            #if FNET_CFG_MULTICAST
                                (unsigned char)((FNET_IP4_ADDR_IS_MULTICAST(((struct sockaddr_in *)(dest_addr))->sin_addr.s_addr)?sockoption->ip_opt.ttl_multicast:sockoption->ip_opt.ttl)),                               
                            #else
                                sockoption->ip_opt.ttl, 
                            #endif /* FNET_CFG_MULTICAST */                               
                                nb, FNET_UDP_DF, ((sockoption->flags & SO_DONTROUTE) > 0),
    a0a6:	6879      	ldr	r1, [r7, #4]
    a0a8:	6a09      	ldr	r1, [r1, #32]
    a0aa:	f001 0104 	and.w	r1, r1, #4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:204
#endif /* FNET_CFG_UDP_CHECKSUM */

#if FNET_CFG_IP4
    if(dest_addr->sa_family == AF_INET)
    {
        error = fnet_ip_output(netif, 
    a0ae:	2900      	cmp	r1, #0
    a0b0:	bfd4      	ite	le
    a0b2:	2100      	movle	r1, #0
    a0b4:	2101      	movgt	r1, #1
    a0b6:	b2c9      	uxtb	r1, r1
    a0b8:	9400      	str	r4, [sp, #0]
    a0ba:	9001      	str	r0, [sp, #4]
    a0bc:	6838      	ldr	r0, [r7, #0]
    a0be:	9002      	str	r0, [sp, #8]
    a0c0:	2000      	movs	r0, #0
    a0c2:	9003      	str	r0, [sp, #12]
    a0c4:	9104      	str	r1, [sp, #16]
    a0c6:	6979      	ldr	r1, [r7, #20]
    a0c8:	9105      	str	r1, [sp, #20]
    a0ca:	6a38      	ldr	r0, [r7, #32]
    a0cc:	4611      	mov	r1, r2
    a0ce:	461a      	mov	r2, r3
    a0d0:	2311      	movs	r3, #17
    a0d2:	f7f7 fc33 	bl	193c <fnet_ip_output>
    a0d6:	6278      	str	r0, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:233
    }
    else
#endif                               
    {};

    return (error);
    a0d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:234
}
    a0da:	4618      	mov	r0, r3
    a0dc:	372c      	adds	r7, #44	; 0x2c
    a0de:	46bd      	mov	sp, r7
    a0e0:	bd90      	pop	{r4, r7, pc}
    a0e2:	bf00      	nop

0000a0e4 <fnet_udp_input_ip4>:
fnet_udp_input_ip4():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:244
* DESCRIPTION: UDP input function, from IPv4.
*************************************************************************/
#if FNET_CFG_IP4 
static void fnet_udp_input_ip4( fnet_netif_t *netif, fnet_ip4_addr_t src_ip, fnet_ip4_addr_t dest_ip,
                           fnet_netbuf_t *nb, fnet_netbuf_t *ip4_nb)
{
    a0e4:	b580      	push	{r7, lr}
    a0e6:	b08a      	sub	sp, #40	; 0x28
    a0e8:	af02      	add	r7, sp, #8
    a0ea:	60f8      	str	r0, [r7, #12]
    a0ec:	60b9      	str	r1, [r7, #8]
    a0ee:	607a      	str	r2, [r7, #4]
    a0f0:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:248
    struct sockaddr     src_addr;
    struct sockaddr     dest_addr;
    
    fnet_memset_zero(&src_addr, sizeof(struct sockaddr));
    a0f2:	f107 0318 	add.w	r3, r7, #24
    a0f6:	4618      	mov	r0, r3
    a0f8:	2108      	movs	r1, #8
    a0fa:	f7fb fd87 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:249
     src_addr.sa_family = AF_INET;
    a0fe:	2301      	movs	r3, #1
    a100:	833b      	strh	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:250
    ((struct sockaddr_in*)(&src_addr))->sin_addr.s_addr = src_ip;
    a102:	f107 0318 	add.w	r3, r7, #24
    a106:	68ba      	ldr	r2, [r7, #8]
    a108:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:252
    
    fnet_memset_zero(&dest_addr, sizeof(struct sockaddr));
    a10a:	f107 0310 	add.w	r3, r7, #16
    a10e:	4618      	mov	r0, r3
    a110:	2108      	movs	r1, #8
    a112:	f7fb fd7b 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:253
    dest_addr.sa_family = AF_INET;
    a116:	2301      	movs	r3, #1
    a118:	823b      	strh	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:254
    ((struct sockaddr_in*)(&dest_addr))->sin_addr.s_addr = dest_ip;
    a11a:	f107 0310 	add.w	r3, r7, #16
    a11e:	687a      	ldr	r2, [r7, #4]
    a120:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:256

    fnet_udp_input(netif, &src_addr,  &dest_addr, nb, ip4_nb);    
    a122:	f107 0218 	add.w	r2, r7, #24
    a126:	f107 0310 	add.w	r3, r7, #16
    a12a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
    a12c:	9100      	str	r1, [sp, #0]
    a12e:	68f8      	ldr	r0, [r7, #12]
    a130:	4611      	mov	r1, r2
    a132:	461a      	mov	r2, r3
    a134:	683b      	ldr	r3, [r7, #0]
    a136:	f000 f803 	bl	a140 <fnet_udp_input>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:257
}
    a13a:	3720      	adds	r7, #32
    a13c:	46bd      	mov	sp, r7
    a13e:	bd80      	pop	{r7, pc}

0000a140 <fnet_udp_input>:
fnet_udp_input():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:292
* NAME: fnet_udp_input
*
* DESCRIPTION: UDP input function.
*************************************************************************/
static void fnet_udp_input(fnet_netif_t *netif, struct sockaddr *foreign_addr,  struct sockaddr *local_addr, fnet_netbuf_t *nb, fnet_netbuf_t *ip_nb)
{
    a140:	b580      	push	{r7, lr}
    a142:	b08a      	sub	sp, #40	; 0x28
    a144:	af00      	add	r7, sp, #0
    a146:	60f8      	str	r0, [r7, #12]
    a148:	60b9      	str	r1, [r7, #8]
    a14a:	607a      	str	r2, [r7, #4]
    a14c:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:293
    fnet_udp_header_t   *udp_header = nb->data_ptr;
    a14e:	683b      	ldr	r3, [r7, #0]
    a150:	68db      	ldr	r3, [r3, #12]
    a152:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:299
    fnet_socket_t       *sock;
    fnet_socket_t       *last;
    fnet_netbuf_t       *nb_tmp;
    unsigned long       udp_length;

    if((netif != 0) && (nb != 0))
    a154:	68fb      	ldr	r3, [r7, #12]
    a156:	2b00      	cmp	r3, #0
    a158:	f000 811d 	beq.w	a396 <fnet_udp_input+0x256>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:299 (discriminator 1)
    a15c:	683b      	ldr	r3, [r7, #0]
    a15e:	2b00      	cmp	r3, #0
    a160:	f000 8119 	beq.w	a396 <fnet_udp_input+0x256>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:302
    {
        /* The header must reside in contiguous area of memory.*/
        if((nb_tmp = fnet_netbuf_pullup(nb, sizeof(fnet_udp_header_t))) == 0) 
    a164:	683b      	ldr	r3, [r7, #0]
    a166:	4618      	mov	r0, r3
    a168:	2108      	movs	r1, #8
    a16a:	f7f8 fcef 	bl	2b4c <fnet_netbuf_pullup>
    a16e:	61b8      	str	r0, [r7, #24]
    a170:	69bb      	ldr	r3, [r7, #24]
    a172:	2b00      	cmp	r3, #0
    a174:	d100      	bne.n	a178 <fnet_udp_input+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:304
        {
            goto BAD;
    a176:	e10e      	b.n	a396 <fnet_udp_input+0x256>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:307
        }
        
        nb = nb_tmp;
    a178:	69bb      	ldr	r3, [r7, #24]
    a17a:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:309
        
        udp_length = fnet_ntohs(udp_header->length);
    a17c:	69fb      	ldr	r3, [r7, #28]
    a17e:	889b      	ldrh	r3, [r3, #4]
    a180:	b29b      	uxth	r3, r3
    a182:	4618      	mov	r0, r3
    a184:	f005 f9cc 	bl	f520 <fnet_htons>
    a188:	4603      	mov	r3, r0
    a18a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:311

        if(nb->total_length >= udp_length)  /* Check the amount of data.*/
    a18c:	683b      	ldr	r3, [r7, #0]
    a18e:	695a      	ldr	r2, [r3, #20]
    a190:	697b      	ldr	r3, [r7, #20]
    a192:	429a      	cmp	r2, r3
    a194:	f0c0 80fd 	bcc.w	a392 <fnet_udp_input+0x252>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:313
        {
            if(nb->total_length > udp_length)
    a198:	683b      	ldr	r3, [r7, #0]
    a19a:	695a      	ldr	r2, [r3, #20]
    a19c:	697b      	ldr	r3, [r7, #20]
    a19e:	429a      	cmp	r2, r3
    a1a0:	d908      	bls.n	a1b4 <fnet_udp_input+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:316
            {
                /* Logical size and the physical size of the packet should be the same.*/
                fnet_netbuf_trim(&nb, (int)(udp_length - nb->total_length)); 
    a1a2:	683b      	ldr	r3, [r7, #0]
    a1a4:	695b      	ldr	r3, [r3, #20]
    a1a6:	697a      	ldr	r2, [r7, #20]
    a1a8:	1ad3      	subs	r3, r2, r3
    a1aa:	463a      	mov	r2, r7
    a1ac:	4610      	mov	r0, r2
    a1ae:	4619      	mov	r1, r3
    a1b0:	f7f8 fd84 	bl	2cbc <fnet_netbuf_trim>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:320
            }

#if FNET_CFG_UDP_CHECKSUM
            if((udp_header->checksum != 0)
    a1b4:	69fb      	ldr	r3, [r7, #28]
    a1b6:	88db      	ldrh	r3, [r3, #6]
    a1b8:	b29b      	uxth	r3, r3
    a1ba:	2b00      	cmp	r3, #0
    a1bc:	d01e      	beq.n	a1fc <fnet_udp_input+0xbc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:328
        #endif
            )
            {
                unsigned short sum;
                
                sum = fnet_checksum_pseudo_start( nb, FNET_HTONS((unsigned short)FNET_IP_PROTOCOL_UDP), (unsigned short)udp_length );
    a1be:	683a      	ldr	r2, [r7, #0]
    a1c0:	697b      	ldr	r3, [r7, #20]
    a1c2:	b29b      	uxth	r3, r3
    a1c4:	4610      	mov	r0, r2
    a1c6:	f44f 5188 	mov.w	r1, #4352	; 0x1100
    a1ca:	461a      	mov	r2, r3
    a1cc:	f7f6 fd86 	bl	cdc <fnet_checksum_pseudo_start>
    a1d0:	4603      	mov	r3, r0
    a1d2:	827b      	strh	r3, [r7, #18]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:329
                sum = fnet_checksum_pseudo_end( sum, (char *)foreign_addr->sa_data, (char *)local_addr->sa_data, 
    a1d4:	68bb      	ldr	r3, [r7, #8]
    a1d6:	1d19      	adds	r1, r3, #4
    a1d8:	687b      	ldr	r3, [r7, #4]
    a1da:	1d1a      	adds	r2, r3, #4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:330
                            (local_addr->sa_family == AF_INET) ? sizeof(fnet_ip4_addr_t) : sizeof(fnet_ip6_addr_t));
    a1dc:	687b      	ldr	r3, [r7, #4]
    a1de:	881b      	ldrh	r3, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:329
            )
            {
                unsigned short sum;
                
                sum = fnet_checksum_pseudo_start( nb, FNET_HTONS((unsigned short)FNET_IP_PROTOCOL_UDP), (unsigned short)udp_length );
                sum = fnet_checksum_pseudo_end( sum, (char *)foreign_addr->sa_data, (char *)local_addr->sa_data, 
    a1e0:	2b01      	cmp	r3, #1
    a1e2:	d101      	bne.n	a1e8 <fnet_udp_input+0xa8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:329 (discriminator 1)
    a1e4:	2304      	movs	r3, #4
    a1e6:	e000      	b.n	a1ea <fnet_udp_input+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:329 (discriminator 2)
    a1e8:	2310      	movs	r3, #16
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:329 (discriminator 3)
    a1ea:	8a78      	ldrh	r0, [r7, #18]
    a1ec:	f7f6 fda0 	bl	d30 <fnet_checksum_pseudo_end>
    a1f0:	4603      	mov	r3, r0
    a1f2:	827b      	strh	r3, [r7, #18]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:332 (discriminator 3)
                            (local_addr->sa_family == AF_INET) ? sizeof(fnet_ip4_addr_t) : sizeof(fnet_ip6_addr_t));

                if(sum)
    a1f4:	8a7b      	ldrh	r3, [r7, #18]
    a1f6:	2b00      	cmp	r3, #0
    a1f8:	d000      	beq.n	a1fc <fnet_udp_input+0xbc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:333
                    goto BAD;
    a1fa:	e0cc      	b.n	a396 <fnet_udp_input+0x256>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:338
            }
#endif
            fnet_udp_trace("RX", udp_header); /* Trace UDP header.*/

            local_addr->sa_port = udp_header->destination_port;
    a1fc:	69fb      	ldr	r3, [r7, #28]
    a1fe:	885b      	ldrh	r3, [r3, #2]
    a200:	b29a      	uxth	r2, r3
    a202:	687b      	ldr	r3, [r7, #4]
    a204:	805a      	strh	r2, [r3, #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:339
            foreign_addr->sa_port = udp_header->source_port;
    a206:	69fb      	ldr	r3, [r7, #28]
    a208:	881b      	ldrh	r3, [r3, #0]
    a20a:	b29a      	uxth	r2, r3
    a20c:	68bb      	ldr	r3, [r7, #8]
    a20e:	805a      	strh	r2, [r3, #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:341

            fnet_netbuf_trim(&nb, sizeof(fnet_udp_header_t));
    a210:	463b      	mov	r3, r7
    a212:	4618      	mov	r0, r3
    a214:	2108      	movs	r1, #8
    a216:	f7f8 fd51 	bl	2cbc <fnet_netbuf_trim>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:344

            /* Demultiplex broadcast & multicast datagrams.*/
            if(fnet_socket_addr_is_broadcast(local_addr, netif) || fnet_socket_addr_is_multicast(local_addr)) 
    a21a:	6878      	ldr	r0, [r7, #4]
    a21c:	68f9      	ldr	r1, [r7, #12]
    a21e:	f7fb fa05 	bl	562c <fnet_socket_addr_is_broadcast>
    a222:	4603      	mov	r3, r0
    a224:	2b00      	cmp	r3, #0
    a226:	d105      	bne.n	a234 <fnet_udp_input+0xf4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:344 (discriminator 1)
    a228:	6878      	ldr	r0, [r7, #4]
    a22a:	f7fb f9df 	bl	55ec <fnet_socket_addr_is_multicast>
    a22e:	4603      	mov	r3, r0
    a230:	2b00      	cmp	r3, #0
    a232:	d07c      	beq.n	a32e <fnet_udp_input+0x1ee>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:346
            {
                last = 0;
    a234:	2300      	movs	r3, #0
    a236:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:348

                for (sock = fnet_udp_prot_if.head; sock != 0; sock = sock->next)
    a238:	4b5c      	ldr	r3, [pc, #368]	; (a3ac <fnet_udp_input+0x26c>)
    a23a:	681b      	ldr	r3, [r3, #0]
    a23c:	627b      	str	r3, [r7, #36]	; 0x24
    a23e:	e058      	b.n	a2f2 <fnet_udp_input+0x1b2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:351
                {
                    /* Compare local port number.*/
                    if(sock->local_addr.sa_port != local_addr->sa_port)
    a240:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    a242:	f8b3 205e 	ldrh.w	r2, [r3, #94]	; 0x5e
    a246:	687b      	ldr	r3, [r7, #4]
    a248:	885b      	ldrh	r3, [r3, #2]
    a24a:	429a      	cmp	r2, r3
    a24c:	d000      	beq.n	a250 <fnet_udp_input+0x110>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:352
                        continue; /* => ignore.*/
    a24e:	e04d      	b.n	a2ec <fnet_udp_input+0x1ac>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:377
                    else
#endif /* FNET_CFG_MULTICAST */                   
                    {

                        /* Compare local address.*/
                        if(!fnet_socket_addr_is_unspecified(&sock->local_addr))
    a250:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    a252:	335c      	adds	r3, #92	; 0x5c
    a254:	4618      	mov	r0, r3
    a256:	f7fb fa05 	bl	5664 <fnet_socket_addr_is_unspecified>
    a25a:	4603      	mov	r3, r0
    a25c:	2b00      	cmp	r3, #0
    a25e:	d109      	bne.n	a274 <fnet_udp_input+0x134>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:379
                        {
                            if(!fnet_socket_addr_are_equal(&sock->local_addr, local_addr))
    a260:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    a262:	335c      	adds	r3, #92	; 0x5c
    a264:	4618      	mov	r0, r3
    a266:	6879      	ldr	r1, [r7, #4]
    a268:	f7fb fa1a 	bl	56a0 <fnet_socket_addr_are_equal>
    a26c:	4603      	mov	r3, r0
    a26e:	2b00      	cmp	r3, #0
    a270:	d100      	bne.n	a274 <fnet_udp_input+0x134>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:380
                                continue;
    a272:	e03b      	b.n	a2ec <fnet_udp_input+0x1ac>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:384
                        }

                        /* Compare foreign address and port number.*/
                        if(!fnet_socket_addr_is_unspecified(&sock->foreign_addr))
    a274:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    a276:	3354      	adds	r3, #84	; 0x54
    a278:	4618      	mov	r0, r3
    a27a:	f7fb f9f3 	bl	5664 <fnet_socket_addr_is_unspecified>
    a27e:	4603      	mov	r3, r0
    a280:	2b00      	cmp	r3, #0
    a282:	d110      	bne.n	a2a6 <fnet_udp_input+0x166>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:386
                        {
                            if((!fnet_socket_addr_are_equal(&sock->foreign_addr, foreign_addr)) || (sock->foreign_addr.sa_port != foreign_addr->sa_port))
    a284:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    a286:	3354      	adds	r3, #84	; 0x54
    a288:	4618      	mov	r0, r3
    a28a:	68b9      	ldr	r1, [r7, #8]
    a28c:	f7fb fa08 	bl	56a0 <fnet_socket_addr_are_equal>
    a290:	4603      	mov	r3, r0
    a292:	2b00      	cmp	r3, #0
    a294:	d006      	beq.n	a2a4 <fnet_udp_input+0x164>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:386 (discriminator 1)
    a296:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    a298:	f8b3 2056 	ldrh.w	r2, [r3, #86]	; 0x56
    a29c:	68bb      	ldr	r3, [r7, #8]
    a29e:	885b      	ldrh	r3, [r3, #2]
    a2a0:	429a      	cmp	r2, r3
    a2a2:	d000      	beq.n	a2a6 <fnet_udp_input+0x166>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:387
                                continue;
    a2a4:	e022      	b.n	a2ec <fnet_udp_input+0x1ac>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:392
                        }
                    
                    }

                    if((last != 0) && (last->receive_buffer.is_shutdown == 0))
    a2a6:	6a3b      	ldr	r3, [r7, #32]
    a2a8:	2b00      	cmp	r3, #0
    a2aa:	d01d      	beq.n	a2e8 <fnet_udp_input+0x1a8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:392 (discriminator 1)
    a2ac:	6a3b      	ldr	r3, [r7, #32]
    a2ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    a2b0:	2b00      	cmp	r3, #0
    a2b2:	d119      	bne.n	a2e8 <fnet_udp_input+0x1a8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:394
                    {
                        if((nb_tmp = fnet_netbuf_copy(nb, 0, FNET_NETBUF_COPYALL, 0)) != 0)
    a2b4:	683b      	ldr	r3, [r7, #0]
    a2b6:	4618      	mov	r0, r3
    a2b8:	2100      	movs	r1, #0
    a2ba:	f04f 32ff 	mov.w	r2, #4294967295
    a2be:	2300      	movs	r3, #0
    a2c0:	f7f8 fa5e 	bl	2780 <fnet_netbuf_copy>
    a2c4:	61b8      	str	r0, [r7, #24]
    a2c6:	69bb      	ldr	r3, [r7, #24]
    a2c8:	2b00      	cmp	r3, #0
    a2ca:	d00d      	beq.n	a2e8 <fnet_udp_input+0x1a8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:396
                        {
                            if(fnet_socket_buffer_append_address(&(last->receive_buffer), nb_tmp, foreign_addr) == FNET_ERR)
    a2cc:	6a3b      	ldr	r3, [r7, #32]
    a2ce:	3334      	adds	r3, #52	; 0x34
    a2d0:	4618      	mov	r0, r3
    a2d2:	69b9      	ldr	r1, [r7, #24]
    a2d4:	68ba      	ldr	r2, [r7, #8]
    a2d6:	f7fb f895 	bl	5404 <fnet_socket_buffer_append_address>
    a2da:	4603      	mov	r3, r0
    a2dc:	f1b3 3fff 	cmp.w	r3, #4294967295
    a2e0:	d102      	bne.n	a2e8 <fnet_udp_input+0x1a8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:398
                            {
                                fnet_netbuf_free_chain(nb_tmp);
    a2e2:	69b8      	ldr	r0, [r7, #24]
    a2e4:	f7f8 fc0c 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:402
                            }
                        }
                    }
                    last = sock;
    a2e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    a2ea:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:348
            /* Demultiplex broadcast & multicast datagrams.*/
            if(fnet_socket_addr_is_broadcast(local_addr, netif) || fnet_socket_addr_is_multicast(local_addr)) 
            {
                last = 0;

                for (sock = fnet_udp_prot_if.head; sock != 0; sock = sock->next)
    a2ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    a2ee:	681b      	ldr	r3, [r3, #0]
    a2f0:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:348 (discriminator 1)
    a2f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    a2f4:	2b00      	cmp	r3, #0
    a2f6:	d1a3      	bne.n	a240 <fnet_udp_input+0x100>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:405
                        }
                    }
                    last = sock;
                }

                if(last == 0)
    a2f8:	6a3b      	ldr	r3, [r7, #32]
    a2fa:	2b00      	cmp	r3, #0
    a2fc:	d100      	bne.n	a300 <fnet_udp_input+0x1c0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:406
                    goto BAD;
    a2fe:	e04a      	b.n	a396 <fnet_udp_input+0x256>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:408

                if(last->receive_buffer.is_shutdown) /* Is shutdown.*/
    a300:	6a3b      	ldr	r3, [r7, #32]
    a302:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    a304:	2b00      	cmp	r3, #0
    a306:	d000      	beq.n	a30a <fnet_udp_input+0x1ca>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:409
                    goto BAD;
    a308:	e045      	b.n	a396 <fnet_udp_input+0x256>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:411

                if(fnet_socket_buffer_append_address(&(last->receive_buffer), nb, foreign_addr) == FNET_ERR)
    a30a:	6a3b      	ldr	r3, [r7, #32]
    a30c:	f103 0234 	add.w	r2, r3, #52	; 0x34
    a310:	683b      	ldr	r3, [r7, #0]
    a312:	4610      	mov	r0, r2
    a314:	4619      	mov	r1, r3
    a316:	68ba      	ldr	r2, [r7, #8]
    a318:	f7fb f874 	bl	5404 <fnet_socket_buffer_append_address>
    a31c:	4603      	mov	r3, r0
    a31e:	f1b3 3fff 	cmp.w	r3, #4294967295
    a322:	d100      	bne.n	a326 <fnet_udp_input+0x1e6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:412
                    goto BAD;
    a324:	e037      	b.n	a396 <fnet_udp_input+0x256>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:414
                
                fnet_netbuf_free_chain(ip_nb);                  
    a326:	6b38      	ldr	r0, [r7, #48]	; 0x30
    a328:	f7f8 fbea 	bl	2b00 <fnet_netbuf_free_chain>
    a32c:	e032      	b.n	a394 <fnet_udp_input+0x254>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:418
            }
            else /* For unicast datagram.*/
            {
                sock = fnet_socket_lookup(fnet_udp_prot_if.head, local_addr, foreign_addr, FNET_IP_PROTOCOL_UDP);
    a32e:	4b1f      	ldr	r3, [pc, #124]	; (a3ac <fnet_udp_input+0x26c>)
    a330:	681b      	ldr	r3, [r3, #0]
    a332:	4618      	mov	r0, r3
    a334:	6879      	ldr	r1, [r7, #4]
    a336:	68ba      	ldr	r2, [r7, #8]
    a338:	2311      	movs	r3, #17
    a33a:	f7fa f865 	bl	4408 <fnet_socket_lookup>
    a33e:	6278      	str	r0, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:420

                if(sock)
    a340:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    a342:	2b00      	cmp	r3, #0
    a344:	d016      	beq.n	a374 <fnet_udp_input+0x234>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:422
                {
                    if(sock->receive_buffer.is_shutdown) /* Is shutdown.*/
    a346:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    a348:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    a34a:	2b00      	cmp	r3, #0
    a34c:	d000      	beq.n	a350 <fnet_udp_input+0x210>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:423
                        goto BAD;
    a34e:	e022      	b.n	a396 <fnet_udp_input+0x256>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:425

                    if(fnet_socket_buffer_append_address(&(sock->receive_buffer), nb, foreign_addr) == FNET_ERR)
    a350:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    a352:	f103 0234 	add.w	r2, r3, #52	; 0x34
    a356:	683b      	ldr	r3, [r7, #0]
    a358:	4610      	mov	r0, r2
    a35a:	4619      	mov	r1, r3
    a35c:	68ba      	ldr	r2, [r7, #8]
    a35e:	f7fb f851 	bl	5404 <fnet_socket_buffer_append_address>
    a362:	4603      	mov	r3, r0
    a364:	f1b3 3fff 	cmp.w	r3, #4294967295
    a368:	d100      	bne.n	a36c <fnet_udp_input+0x22c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:426
                        goto BAD;
    a36a:	e014      	b.n	a396 <fnet_udp_input+0x256>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:428
                    
                    fnet_netbuf_free_chain(ip_nb);
    a36c:	6b38      	ldr	r0, [r7, #48]	; 0x30
    a36e:	f7f8 fbc7 	bl	2b00 <fnet_netbuf_free_chain>
    a372:	e00f      	b.n	a394 <fnet_udp_input+0x254>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:432
                }
                else
                {
                    fnet_netbuf_free_chain(nb); /* No match was found, send ICMP destination port unreachable.*/
    a374:	683b      	ldr	r3, [r7, #0]
    a376:	4618      	mov	r0, r3
    a378:	f7f8 fbc2 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:434
                #if FNET_CFG_IP4                    
                    if(local_addr->sa_family == AF_INET)
    a37c:	687b      	ldr	r3, [r7, #4]
    a37e:	881b      	ldrh	r3, [r3, #0]
    a380:	2b01      	cmp	r3, #1
    a382:	d107      	bne.n	a394 <fnet_udp_input+0x254>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:435
                        fnet_icmp_error(netif, FNET_ICMP_UNREACHABLE, FNET_ICMP_UNREACHABLE_PORT, ip_nb);
    a384:	68f8      	ldr	r0, [r7, #12]
    a386:	2103      	movs	r1, #3
    a388:	2203      	movs	r2, #3
    a38a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    a38c:	f7f7 f832 	bl	13f4 <fnet_icmp_error>
    a390:	e000      	b.n	a394 <fnet_udp_input+0x254>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:445
                #endif                        
                }
            }
        }
        else
            goto BAD;
    a392:	e000      	b.n	a396 <fnet_udp_input+0x256>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:311
        
        nb = nb_tmp;
        
        udp_length = fnet_ntohs(udp_header->length);

        if(nb->total_length >= udp_length)  /* Check the amount of data.*/
    a394:	e006      	b.n	a3a4 <fnet_udp_input+0x264>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:450
            goto BAD;
    }
    else
    {
BAD:
        fnet_netbuf_free_chain(ip_nb);
    a396:	6b38      	ldr	r0, [r7, #48]	; 0x30
    a398:	f7f8 fbb2 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:451
        fnet_netbuf_free_chain(nb);
    a39c:	683b      	ldr	r3, [r7, #0]
    a39e:	4618      	mov	r0, r3
    a3a0:	f7f8 fbae 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:453
    }
}
    a3a4:	3728      	adds	r7, #40	; 0x28
    a3a6:	46bd      	mov	sp, r7
    a3a8:	bd80      	pop	{r7, pc}
    a3aa:	bf00      	nop
    a3ac:	1000007c 	.word	0x1000007c

0000a3b0 <fnet_udp_attach>:
fnet_udp_attach():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:461
* NAME: fnet_udp_attach
*
* DESCRIPTION: UDP attach function. 
*************************************************************************/
static int fnet_udp_attach( fnet_socket_t *sk )
{
    a3b0:	b480      	push	{r7}
    a3b2:	b083      	sub	sp, #12
    a3b4:	af00      	add	r7, sp, #0
    a3b6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:463
#if FNET_CFG_IP4
    sk->options.ip_opt.ttl = FNET_UDP_TTL;
    a3b8:	687b      	ldr	r3, [r7, #4]
    a3ba:	2240      	movs	r2, #64	; 0x40
    a3bc:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:467
#if FNET_CFG_MULTICAST 
    sk->options.ip_opt.ttl_multicast = FNET_UDP_TTL_MULTICAST;
#endif /* FNET_CFG_MULTICAST */     
    sk->options.ip_opt.tos = 0;
    a3c0:	687b      	ldr	r3, [r7, #4]
    a3c2:	2200      	movs	r2, #0
    a3c4:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:474
    
#if FNET_CFG_IP6
    sk->options.ip6_opt.unicast_hops = 0; /* Defined by ND.*/ 
#endif    

    sk->send_buffer.count_max = FNET_UDP_TX_BUF_MAX;
    a3c8:	687b      	ldr	r3, [r7, #4]
    a3ca:	f44f 6200 	mov.w	r2, #2048	; 0x800
    a3ce:	649a      	str	r2, [r3, #72]	; 0x48
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:475
    sk->receive_buffer.count_max = FNET_UDP_RX_BUF_MAX;
    a3d0:	687b      	ldr	r3, [r7, #4]
    a3d2:	f44f 6200 	mov.w	r2, #2048	; 0x800
    a3d6:	639a      	str	r2, [r3, #56]	; 0x38
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:476
    return (FNET_OK);
    a3d8:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:477
}
    a3da:	4618      	mov	r0, r3
    a3dc:	370c      	adds	r7, #12
    a3de:	46bd      	mov	sp, r7
    a3e0:	f85d 7b04 	ldr.w	r7, [sp], #4
    a3e4:	4770      	bx	lr
    a3e6:	bf00      	nop

0000a3e8 <fnet_udp_detach>:
fnet_udp_detach():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:485
* NAME: fnet_udp_detach
*
* DESCRIPTION: UDP close function.
*************************************************************************/
static int fnet_udp_detach( fnet_socket_t *sk )
{
    a3e8:	b580      	push	{r7, lr}
    a3ea:	b082      	sub	sp, #8
    a3ec:	af00      	add	r7, sp, #0
    a3ee:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:486
    fnet_isr_lock();
    a3f0:	f7f7 ff2e 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:487
    fnet_socket_release(&fnet_udp_prot_if.head, sk);
    a3f4:	4805      	ldr	r0, [pc, #20]	; (a40c <fnet_udp_detach+0x24>)
    a3f6:	6879      	ldr	r1, [r7, #4]
    a3f8:	f7f9 ff98 	bl	432c <fnet_socket_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:488
    fnet_isr_unlock();
    a3fc:	f7f7 ff36 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:489
    return (FNET_OK);
    a400:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:490
}
    a402:	4618      	mov	r0, r3
    a404:	3708      	adds	r7, #8
    a406:	46bd      	mov	sp, r7
    a408:	bd80      	pop	{r7, pc}
    a40a:	bf00      	nop
    a40c:	1000007c 	.word	0x1000007c

0000a410 <fnet_udp_shutdown>:
fnet_udp_shutdown():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:498
* NAME: fnet_udp_shutdown
*
* DESCRIPTION:  UDP shutdown function.
*************************************************************************/
static int fnet_udp_shutdown( fnet_socket_t *sk, int how )
{
    a410:	b580      	push	{r7, lr}
    a412:	b082      	sub	sp, #8
    a414:	af00      	add	r7, sp, #0
    a416:	6078      	str	r0, [r7, #4]
    a418:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:499
    fnet_isr_lock();
    a41a:	f7f7 ff19 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:501

    if(how & SD_READ)
    a41e:	683b      	ldr	r3, [r7, #0]
    a420:	f003 0301 	and.w	r3, r3, #1
    a424:	2b00      	cmp	r3, #0
    a426:	d007      	beq.n	a438 <fnet_udp_shutdown+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:503
    {
        sk->receive_buffer.is_shutdown = 1;
    a428:	687b      	ldr	r3, [r7, #4]
    a42a:	2201      	movs	r2, #1
    a42c:	641a      	str	r2, [r3, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:504
        fnet_socket_buffer_release(&sk->receive_buffer);
    a42e:	687b      	ldr	r3, [r7, #4]
    a430:	3334      	adds	r3, #52	; 0x34
    a432:	4618      	mov	r0, r3
    a434:	f7fa ff92 	bl	535c <fnet_socket_buffer_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:507
    }

    if(how & SD_WRITE)
    a438:	683b      	ldr	r3, [r7, #0]
    a43a:	f003 0302 	and.w	r3, r3, #2
    a43e:	2b00      	cmp	r3, #0
    a440:	d002      	beq.n	a448 <fnet_udp_shutdown+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:509
    {
        sk->send_buffer.is_shutdown = 1;
    a442:	687b      	ldr	r3, [r7, #4]
    a444:	2201      	movs	r2, #1
    a446:	651a      	str	r2, [r3, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:512
    }

    fnet_isr_unlock();
    a448:	f7f7 ff10 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:514

    return (FNET_OK);
    a44c:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:515
}
    a44e:	4618      	mov	r0, r3
    a450:	3708      	adds	r7, #8
    a452:	46bd      	mov	sp, r7
    a454:	bd80      	pop	{r7, pc}
    a456:	bf00      	nop

0000a458 <fnet_udp_connect>:
fnet_udp_connect():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:523
* NAME: fnet_udp_connect
*
* DESCRIPTION: UDP connect function.
*************************************************************************/
static int fnet_udp_connect( fnet_socket_t *sk, struct sockaddr *foreign_addr)
{
    a458:	b580      	push	{r7, lr}
    a45a:	b082      	sub	sp, #8
    a45c:	af00      	add	r7, sp, #0
    a45e:	6078      	str	r0, [r7, #4]
    a460:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:524
    fnet_isr_lock();
    a462:	f7f7 fef5 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:526
    
    sk->foreign_addr = *foreign_addr;
    a466:	687b      	ldr	r3, [r7, #4]
    a468:	683a      	ldr	r2, [r7, #0]
    a46a:	3354      	adds	r3, #84	; 0x54
    a46c:	6810      	ldr	r0, [r2, #0]
    a46e:	6851      	ldr	r1, [r2, #4]
    a470:	c303      	stmia	r3!, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:528
    
    sk->state = SS_CONNECTED;
    a472:	687b      	ldr	r3, [r7, #4]
    a474:	2202      	movs	r2, #2
    a476:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:529
    fnet_socket_buffer_release(&sk->receive_buffer);
    a478:	687b      	ldr	r3, [r7, #4]
    a47a:	3334      	adds	r3, #52	; 0x34
    a47c:	4618      	mov	r0, r3
    a47e:	f7fa ff6d 	bl	535c <fnet_socket_buffer_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:530
    fnet_isr_unlock();
    a482:	f7f7 fef3 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:531
    return (FNET_OK);
    a486:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:532
}
    a488:	4618      	mov	r0, r3
    a48a:	3708      	adds	r7, #8
    a48c:	46bd      	mov	sp, r7
    a48e:	bd80      	pop	{r7, pc}

0000a490 <fnet_udp_snd>:
fnet_udp_snd():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:540
* NAME: fnet_udp_snd
*
* DESCRIPTION: UDP send function.
*************************************************************************/
static int fnet_udp_snd( fnet_socket_t *sk, char *buf, int len, int flags, const struct sockaddr *addr)
{
    a490:	b580      	push	{r7, lr}
    a492:	b088      	sub	sp, #32
    a494:	af00      	add	r7, sp, #0
    a496:	60f8      	str	r0, [r7, #12]
    a498:	60b9      	str	r1, [r7, #8]
    a49a:	607a      	str	r2, [r7, #4]
    a49c:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:542
    fnet_netbuf_t           *nb;
    int                     error = FNET_OK;
    a49e:	2300      	movs	r3, #0
    a4a0:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:544
    const struct sockaddr   *foreign_addr;
    int                     flags_save = 0;
    a4a2:	2300      	movs	r3, #0
    a4a4:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:547

#if FNET_CFG_TCP_URGENT
    if(flags & MSG_OOB)
    a4a6:	683b      	ldr	r3, [r7, #0]
    a4a8:	f003 0301 	and.w	r3, r3, #1
    a4ac:	2b00      	cmp	r3, #0
    a4ae:	d002      	beq.n	a4b6 <fnet_udp_snd+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:549
    {
        error = FNET_ERR_OPNOTSUPP; /* Operation not supported.*/
    a4b0:	230b      	movs	r3, #11
    a4b2:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:550
        goto ERROR;
    a4b4:	e05f      	b.n	a576 <fnet_udp_snd+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:554
    }
#endif /* FNET_CFG_TCP_URGENT */

    if(len > sk->send_buffer.count_max)
    a4b6:	687a      	ldr	r2, [r7, #4]
    a4b8:	68fb      	ldr	r3, [r7, #12]
    a4ba:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    a4bc:	429a      	cmp	r2, r3
    a4be:	d902      	bls.n	a4c6 <fnet_udp_snd+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:556
    {
        error = FNET_ERR_MSGSIZE;   /* Message too long. */
    a4c0:	2308      	movs	r3, #8
    a4c2:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:557
        goto ERROR;
    a4c4:	e057      	b.n	a576 <fnet_udp_snd+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:560
    }

    if(addr)
    a4c6:	6abb      	ldr	r3, [r7, #40]	; 0x28
    a4c8:	2b00      	cmp	r3, #0
    a4ca:	d002      	beq.n	a4d2 <fnet_udp_snd+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:562
    {
        foreign_addr = addr;
    a4cc:	6abb      	ldr	r3, [r7, #40]	; 0x28
    a4ce:	61bb      	str	r3, [r7, #24]
    a4d0:	e002      	b.n	a4d8 <fnet_udp_snd+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:566
    }
    else
    {
        foreign_addr = &sk->foreign_addr;
    a4d2:	68fb      	ldr	r3, [r7, #12]
    a4d4:	3354      	adds	r3, #84	; 0x54
    a4d6:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:569
    }

    if((nb = fnet_netbuf_from_buf(buf, len, FNET_FALSE)) == 0)
    a4d8:	68b8      	ldr	r0, [r7, #8]
    a4da:	6879      	ldr	r1, [r7, #4]
    a4dc:	2200      	movs	r2, #0
    a4de:	f7f8 fa4f 	bl	2980 <fnet_netbuf_from_buf>
    a4e2:	6138      	str	r0, [r7, #16]
    a4e4:	693b      	ldr	r3, [r7, #16]
    a4e6:	2b00      	cmp	r3, #0
    a4e8:	d102      	bne.n	a4f0 <fnet_udp_snd+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:571
    {
        error = FNET_ERR_NOMEM;     /* Cannot allocate memory.*/
    a4ea:	2303      	movs	r3, #3
    a4ec:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:572
        goto ERROR;
    a4ee:	e042      	b.n	a576 <fnet_udp_snd+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:575
    }

    if(sk->local_addr.sa_port == 0)
    a4f0:	68fb      	ldr	r3, [r7, #12]
    a4f2:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
    a4f6:	2b00      	cmp	r3, #0
    a4f8:	d10d      	bne.n	a516 <fnet_udp_snd+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:577
    {
        sk->local_addr.sa_port = fnet_socket_get_uniqueport(sk->protocol_interface->head, &sk->local_addr); /* Get ephemeral port.*/
    a4fa:	68fb      	ldr	r3, [r7, #12]
    a4fc:	695b      	ldr	r3, [r3, #20]
    a4fe:	681a      	ldr	r2, [r3, #0]
    a500:	68fb      	ldr	r3, [r7, #12]
    a502:	335c      	adds	r3, #92	; 0x5c
    a504:	4610      	mov	r0, r2
    a506:	4619      	mov	r1, r3
    a508:	f7fa f804 	bl	4514 <fnet_socket_get_uniqueport>
    a50c:	4603      	mov	r3, r0
    a50e:	461a      	mov	r2, r3
    a510:	68fb      	ldr	r3, [r7, #12]
    a512:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:580
    }

    if(flags & MSG_DONTROUTE) /* Save */
    a516:	683b      	ldr	r3, [r7, #0]
    a518:	f003 0304 	and.w	r3, r3, #4
    a51c:	2b00      	cmp	r3, #0
    a51e:	d00b      	beq.n	a538 <fnet_udp_snd+0xa8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:582
    {
        flags_save = sk->options.flags;
    a520:	68fb      	ldr	r3, [r7, #12]
    a522:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    a526:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:583
        sk->options.flags |= SO_DONTROUTE;
    a528:	68fb      	ldr	r3, [r7, #12]
    a52a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    a52e:	f043 0204 	orr.w	r2, r3, #4
    a532:	68fb      	ldr	r3, [r7, #12]
    a534:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:586
    }

    error = fnet_udp_output(&sk->local_addr, foreign_addr, &(sk->options), nb);
    a538:	68fb      	ldr	r3, [r7, #12]
    a53a:	f103 025c 	add.w	r2, r3, #92	; 0x5c
    a53e:	68fb      	ldr	r3, [r7, #12]
    a540:	3364      	adds	r3, #100	; 0x64
    a542:	4610      	mov	r0, r2
    a544:	69b9      	ldr	r1, [r7, #24]
    a546:	461a      	mov	r2, r3
    a548:	693b      	ldr	r3, [r7, #16]
    a54a:	f7ff fd59 	bl	a000 <fnet_udp_output>
    a54e:	61f8      	str	r0, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:588

    if(flags & MSG_DONTROUTE) /* Restore.*/
    a550:	683b      	ldr	r3, [r7, #0]
    a552:	f003 0304 	and.w	r3, r3, #4
    a556:	2b00      	cmp	r3, #0
    a558:	d003      	beq.n	a562 <fnet_udp_snd+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:590
    {
        sk->options.flags = flags_save;
    a55a:	68fb      	ldr	r3, [r7, #12]
    a55c:	697a      	ldr	r2, [r7, #20]
    a55e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:593
    }

    if((error == FNET_OK) && (sk->options.local_error == FNET_OK)) /* We get UDP or ICMP error.*/
    a562:	69fb      	ldr	r3, [r7, #28]
    a564:	2b00      	cmp	r3, #0
    a566:	d106      	bne.n	a576 <fnet_udp_snd+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:593 (discriminator 1)
    a568:	68fb      	ldr	r3, [r7, #12]
    a56a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    a56e:	2b00      	cmp	r3, #0
    a570:	d101      	bne.n	a576 <fnet_udp_snd+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:595
    {
        return (len);
    a572:	687b      	ldr	r3, [r7, #4]
    a574:	e005      	b.n	a582 <fnet_udp_snd+0xf2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:599
    }

ERROR:
    fnet_socket_set_error(sk, error);
    a576:	68f8      	ldr	r0, [r7, #12]
    a578:	69f9      	ldr	r1, [r7, #28]
    a57a:	f7f9 fe07 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:600
    return (SOCKET_ERROR);
    a57e:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:601
}
    a582:	4618      	mov	r0, r3
    a584:	3720      	adds	r7, #32
    a586:	46bd      	mov	sp, r7
    a588:	bd80      	pop	{r7, pc}
    a58a:	bf00      	nop

0000a58c <fnet_udp_rcv>:
fnet_udp_rcv():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:609
* NAME: fnet_udp_rcv
*
* DESCRIPTION :UDP receive function.
*************************************************************************/
static int fnet_udp_rcv(fnet_socket_t *sk, char *buf, int len, int flags, struct sockaddr *addr)
{
    a58c:	b580      	push	{r7, lr}
    a58e:	b08a      	sub	sp, #40	; 0x28
    a590:	af02      	add	r7, sp, #8
    a592:	60f8      	str	r0, [r7, #12]
    a594:	60b9      	str	r1, [r7, #8]
    a596:	607a      	str	r2, [r7, #4]
    a598:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:610
    int             error = FNET_OK;
    a59a:	2300      	movs	r3, #0
    a59c:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:614
    int             length;
    struct sockaddr foreign_addr;
    
    fnet_memset_zero ((void *)&foreign_addr, sizeof(foreign_addr));
    a59e:	f107 0310 	add.w	r3, r7, #16
    a5a2:	4618      	mov	r0, r3
    a5a4:	2108      	movs	r1, #8
    a5a6:	f7fb fb31 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:617
    
#if FNET_CFG_TCP_URGENT
    if(flags & MSG_OOB)
    a5aa:	683b      	ldr	r3, [r7, #0]
    a5ac:	f003 0301 	and.w	r3, r3, #1
    a5b0:	2b00      	cmp	r3, #0
    a5b2:	d002      	beq.n	a5ba <fnet_udp_rcv+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:619
    {
        error = FNET_ERR_OPNOTSUPP; /* Operation not supported.*/
    a5b4:	230b      	movs	r3, #11
    a5b6:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:620
        goto ERROR;
    a5b8:	e02f      	b.n	a61a <fnet_udp_rcv+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:624
    }
#endif /* FNET_CFG_TCP_URGENT */
    
    if((length = fnet_socket_buffer_read_address(&(sk->receive_buffer), buf,
    a5ba:	68fb      	ldr	r3, [r7, #12]
    a5bc:	f103 0234 	add.w	r2, r3, #52	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:625
            len, &foreign_addr, ((flags &MSG_PEEK)== 0))) == FNET_ERR)
    a5c0:	683b      	ldr	r3, [r7, #0]
    a5c2:	f003 0302 	and.w	r3, r3, #2
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:624
        error = FNET_ERR_OPNOTSUPP; /* Operation not supported.*/
        goto ERROR;
    }
#endif /* FNET_CFG_TCP_URGENT */
    
    if((length = fnet_socket_buffer_read_address(&(sk->receive_buffer), buf,
    a5c6:	2b00      	cmp	r3, #0
    a5c8:	bf14      	ite	ne
    a5ca:	2300      	movne	r3, #0
    a5cc:	2301      	moveq	r3, #1
    a5ce:	b2db      	uxtb	r3, r3
    a5d0:	4619      	mov	r1, r3
    a5d2:	f107 0310 	add.w	r3, r7, #16
    a5d6:	9100      	str	r1, [sp, #0]
    a5d8:	4610      	mov	r0, r2
    a5da:	68b9      	ldr	r1, [r7, #8]
    a5dc:	687a      	ldr	r2, [r7, #4]
    a5de:	f7fa ff8b 	bl	54f8 <fnet_socket_buffer_read_address>
    a5e2:	61b8      	str	r0, [r7, #24]
    a5e4:	69bb      	ldr	r3, [r7, #24]
    a5e6:	f1b3 3fff 	cmp.w	r3, #4294967295
    a5ea:	d102      	bne.n	a5f2 <fnet_udp_rcv+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:628
            len, &foreign_addr, ((flags &MSG_PEEK)== 0))) == FNET_ERR)
    {
        /* The message was too large to fit into the specified buffer and was truncated.*/
        error = FNET_ERR_MSGSIZE;
    a5ec:	2308      	movs	r3, #8
    a5ee:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:629
        goto ERROR;
    a5f0:	e013      	b.n	a61a <fnet_udp_rcv+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:632
    }

    if(sk->options.local_error == FNET_OK) 
    a5f2:	68fb      	ldr	r3, [r7, #12]
    a5f4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    a5f8:	2b00      	cmp	r3, #0
    a5fa:	d10a      	bne.n	a612 <fnet_udp_rcv+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:634
    {
        if(addr)
    a5fc:	6abb      	ldr	r3, [r7, #40]	; 0x28
    a5fe:	2b00      	cmp	r3, #0
    a600:	d005      	beq.n	a60e <fnet_udp_rcv+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:636
        {
            fnet_socket_addr_copy(&foreign_addr, addr);
    a602:	f107 0310 	add.w	r3, r7, #16
    a606:	4618      	mov	r0, r3
    a608:	6ab9      	ldr	r1, [r7, #40]	; 0x28
    a60a:	f7fb f893 	bl	5734 <fnet_socket_addr_copy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:639
        }
        
        return (length);
    a60e:	69bb      	ldr	r3, [r7, #24]
    a610:	e009      	b.n	a626 <fnet_udp_rcv+0x9a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:643
    }
    else /* We get UDP or ICMP error.*/
    {
        error = sk->options.local_error;
    a612:	68fb      	ldr	r3, [r7, #12]
    a614:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    a618:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:647
    }

ERROR:
    fnet_socket_set_error(sk, error);
    a61a:	68f8      	ldr	r0, [r7, #12]
    a61c:	69f9      	ldr	r1, [r7, #28]
    a61e:	f7f9 fdb5 	bl	418c <fnet_socket_set_error>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:648
    return (SOCKET_ERROR);
    a622:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:649
}
    a626:	4618      	mov	r0, r3
    a628:	3720      	adds	r7, #32
    a62a:	46bd      	mov	sp, r7
    a62c:	bd80      	pop	{r7, pc}
    a62e:	bf00      	nop

0000a630 <fnet_udp_control_input>:
fnet_udp_control_input():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:657
* NAME: fnet_udp_control_input
*
* DESCRIPTION: This function processes the ICMP error.
*************************************************************************/
static void fnet_udp_control_input( fnet_prot_notify_t command, fnet_ip_header_t *ip_header )
{
    a630:	b480      	push	{r7}
    a632:	b08b      	sub	sp, #44	; 0x2c
    a634:	af00      	add	r7, sp, #0
    a636:	4603      	mov	r3, r0
    a638:	6039      	str	r1, [r7, #0]
    a63a:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:666
    fnet_ip4_addr_t     local_addr;   /* Local IP address.*/
    unsigned short      local_port;   /* Local port.*/
    int                 error;
    fnet_socket_t       *sock;

    if(ip_header)
    a63c:	683b      	ldr	r3, [r7, #0]
    a63e:	2b00      	cmp	r3, #0
    a640:	d06b      	beq.n	a71a <fnet_udp_control_input+0xea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:668
    {
        udp_header = (fnet_udp_header_t *)((char *)ip_header + (FNET_IP_HEADER_GET_HEADER_LENGTH(ip_header) << 2));
    a642:	683b      	ldr	r3, [r7, #0]
    a644:	781b      	ldrb	r3, [r3, #0]
    a646:	f003 030f 	and.w	r3, r3, #15
    a64a:	009b      	lsls	r3, r3, #2
    a64c:	683a      	ldr	r2, [r7, #0]
    a64e:	4413      	add	r3, r2
    a650:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:669
        foreign_addr = ip_header->desination_addr;
    a652:	683b      	ldr	r3, [r7, #0]
    a654:	691b      	ldr	r3, [r3, #16]
    a656:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:670
        foreign_port = udp_header->destination_port;
    a658:	69fb      	ldr	r3, [r7, #28]
    a65a:	789a      	ldrb	r2, [r3, #2]
    a65c:	78db      	ldrb	r3, [r3, #3]
    a65e:	021b      	lsls	r3, r3, #8
    a660:	4313      	orrs	r3, r2
    a662:	82fb      	strh	r3, [r7, #22]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:671
        local_addr = ip_header->source_addr;
    a664:	683b      	ldr	r3, [r7, #0]
    a666:	68db      	ldr	r3, [r3, #12]
    a668:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:672
        local_port = udp_header->source_port;
    a66a:	69fb      	ldr	r3, [r7, #28]
    a66c:	781a      	ldrb	r2, [r3, #0]
    a66e:	785b      	ldrb	r3, [r3, #1]
    a670:	021b      	lsls	r3, r3, #8
    a672:	4313      	orrs	r3, r2
    a674:	81fb      	strh	r3, [r7, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:674

        if(foreign_addr == INADDR_ANY)
    a676:	69bb      	ldr	r3, [r7, #24]
    a678:	2b00      	cmp	r3, #0
    a67a:	d100      	bne.n	a67e <fnet_udp_control_input+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:675
            return;
    a67c:	e04d      	b.n	a71a <fnet_udp_control_input+0xea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:677

        switch(command)
    a67e:	79fb      	ldrb	r3, [r7, #7]
    a680:	3b01      	subs	r3, #1
    a682:	2b08      	cmp	r3, #8
    a684:	d848      	bhi.n	a718 <fnet_udp_control_input+0xe8>
    a686:	a201      	add	r2, pc, #4	; (adr r2, a68c <fnet_udp_control_input+0x5c>)
    a688:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    a68c:	0000a6b1 	.word	0x0000a6b1
    a690:	0000a6b7 	.word	0x0000a6b7
    a694:	0000a6bd 	.word	0x0000a6bd
    a698:	0000a6bd 	.word	0x0000a6bd
    a69c:	0000a6b7 	.word	0x0000a6b7
    a6a0:	0000a6b7 	.word	0x0000a6b7
    a6a4:	0000a719 	.word	0x0000a719
    a6a8:	0000a719 	.word	0x0000a719
    a6ac:	0000a6c3 	.word	0x0000a6c3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:680
        {
            case FNET_PROT_NOTIFY_MSGSIZE:          /* Message size forced drop.*/
              error = FNET_ERR_MSGSIZE;
    a6b0:	2308      	movs	r3, #8
    a6b2:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:681
              break;
    a6b4:	e008      	b.n	a6c8 <fnet_udp_control_input+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:686

            case FNET_PROT_NOTIFY_UNREACH_HOST:     /* No route to host.*/
            case FNET_PROT_NOTIFY_UNREACH_NET:      /* No route to network.*/
            case FNET_PROT_NOTIFY_UNREACH_SRCFAIL:  /* Source route failed.*/
              error = FNET_ERR_HOSTUNREACH;
    a6b6:	2318      	movs	r3, #24
    a6b8:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:687
              break;
    a6ba:	e005      	b.n	a6c8 <fnet_udp_control_input+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:691

            case FNET_PROT_NOTIFY_UNREACH_PROTOCOL: /* Dst says bad protocol.*/
            case FNET_PROT_NOTIFY_UNREACH_PORT:     /* Bad port #.*/
              error = FNET_ERR_CONNRESET;
    a6bc:	2312      	movs	r3, #18
    a6be:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:692
              break;
    a6c0:	e002      	b.n	a6c8 <fnet_udp_control_input+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:695

            case FNET_PROT_NOTIFY_PARAMPROB:        /* Header incorrect.*/
              error = FNET_ERR_NOPROTOOPT;          /* Bad protocol option.*/
    a6c2:	2309      	movs	r3, #9
    a6c4:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:696
              break;
    a6c6:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:702

            default:
              return;
        }

        for (sock = fnet_udp_prot_if.head; sock != 0; sock = sock->next)
    a6c8:	4b16      	ldr	r3, [pc, #88]	; (a724 <fnet_udp_control_input+0xf4>)
    a6ca:	681b      	ldr	r3, [r3, #0]
    a6cc:	623b      	str	r3, [r7, #32]
    a6ce:	e01f      	b.n	a710 <fnet_udp_control_input+0xe0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:704
        {
            if((((struct sockaddr_in *)(&sock->foreign_addr))->sin_addr.s_addr != foreign_addr) || (sock->foreign_addr.sa_port != foreign_port)
    a6d0:	6a3b      	ldr	r3, [r7, #32]
    a6d2:	3354      	adds	r3, #84	; 0x54
    a6d4:	685a      	ldr	r2, [r3, #4]
    a6d6:	69bb      	ldr	r3, [r7, #24]
    a6d8:	429a      	cmp	r2, r3
    a6da:	d111      	bne.n	a700 <fnet_udp_control_input+0xd0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:704 (discriminator 1)
    a6dc:	6a3b      	ldr	r3, [r7, #32]
    a6de:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
    a6e2:	8afa      	ldrh	r2, [r7, #22]
    a6e4:	429a      	cmp	r2, r3
    a6e6:	d10b      	bne.n	a700 <fnet_udp_control_input+0xd0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:705
                   || (sock->local_addr.sa_port != local_port) || (((struct sockaddr_in *)(&sock->local_addr))->sin_addr.s_addr != local_addr))
    a6e8:	6a3b      	ldr	r3, [r7, #32]
    a6ea:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
    a6ee:	89fa      	ldrh	r2, [r7, #14]
    a6f0:	429a      	cmp	r2, r3
    a6f2:	d105      	bne.n	a700 <fnet_udp_control_input+0xd0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:705 (discriminator 1)
    a6f4:	6a3b      	ldr	r3, [r7, #32]
    a6f6:	335c      	adds	r3, #92	; 0x5c
    a6f8:	685a      	ldr	r2, [r3, #4]
    a6fa:	693b      	ldr	r3, [r7, #16]
    a6fc:	429a      	cmp	r2, r3
    a6fe:	d000      	beq.n	a702 <fnet_udp_control_input+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:706
                continue;
    a700:	e003      	b.n	a70a <fnet_udp_control_input+0xda>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:708

            sock->options.local_error = error;
    a702:	6a3b      	ldr	r3, [r7, #32]
    a704:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    a706:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:702

            default:
              return;
        }

        for (sock = fnet_udp_prot_if.head; sock != 0; sock = sock->next)
    a70a:	6a3b      	ldr	r3, [r7, #32]
    a70c:	681b      	ldr	r3, [r3, #0]
    a70e:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:702 (discriminator 1)
    a710:	6a3b      	ldr	r3, [r7, #32]
    a712:	2b00      	cmp	r3, #0
    a714:	d1dc      	bne.n	a6d0 <fnet_udp_control_input+0xa0>
    a716:	e000      	b.n	a71a <fnet_udp_control_input+0xea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:699
            case FNET_PROT_NOTIFY_PARAMPROB:        /* Header incorrect.*/
              error = FNET_ERR_NOPROTOOPT;          /* Bad protocol option.*/
              break;

            default:
              return;
    a718:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/stack/fnet_udp.c:711
                continue;

            sock->options.local_error = error;
        }
    }
}
    a71a:	372c      	adds	r7, #44	; 0x2c
    a71c:	46bd      	mov	sp, r7
    a71e:	f85d 7b04 	ldr.w	r7, [sp], #4
    a722:	4770      	bx	lr
    a724:	1000007c 	.word	0x1000007c

0000a728 <tx_buffer_write>:
tx_buffer_write():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:202
* Buffer functions. 
************************************************************************/
/* Write to Tx liner buffer. */
/* It's posible to write FNET_TELNET_TX_BUFFER_SIZE-1 characters. */
static void tx_buffer_write (struct fnet_telnet_session_if *session, char data)
{
    a728:	b480      	push	{r7}
    a72a:	b083      	sub	sp, #12
    a72c:	af00      	add	r7, sp, #0
    a72e:	6078      	str	r0, [r7, #4]
    a730:	460b      	mov	r3, r1
    a732:	70fb      	strb	r3, [r7, #3]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:203
   session->tx_buffer[session->tx_buffer_head_index] = data;
    a734:	687b      	ldr	r3, [r7, #4]
    a736:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    a738:	687a      	ldr	r2, [r7, #4]
    a73a:	4413      	add	r3, r2
    a73c:	78fa      	ldrb	r2, [r7, #3]
    a73e:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:204
   session->tx_buffer_head_index++;
    a740:	687b      	ldr	r3, [r7, #4]
    a742:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    a744:	1c5a      	adds	r2, r3, #1
    a746:	687b      	ldr	r3, [r7, #4]
    a748:	645a      	str	r2, [r3, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:205
}
    a74a:	370c      	adds	r7, #12
    a74c:	46bd      	mov	sp, r7
    a74e:	f85d 7b04 	ldr.w	r7, [sp], #4
    a752:	4770      	bx	lr

0000a754 <tx_buffer_free_space>:
tx_buffer_free_space():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:209

/* Free space in Tx Liner buffer. */
static int tx_buffer_free_space(struct fnet_telnet_session_if *session)
{
    a754:	b480      	push	{r7}
    a756:	b083      	sub	sp, #12
    a758:	af00      	add	r7, sp, #0
    a75a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:210
   return(FNET_TELNET_TX_BUFFER_SIZE  - session->tx_buffer_head_index);   
    a75c:	687b      	ldr	r3, [r7, #4]
    a75e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    a760:	f1c3 033c 	rsb	r3, r3, #60	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:211
}
    a764:	4618      	mov	r0, r3
    a766:	370c      	adds	r7, #12
    a768:	46bd      	mov	sp, r7
    a76a:	f85d 7b04 	ldr.w	r7, [sp], #4
    a76e:	4770      	bx	lr

0000a770 <rx_buffer_write>:
rx_buffer_write():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:217


/* Write to Rx circular buffer. */
/* It's posible to write FNET_TELNET_RX_BUFFER_SIZE-1 characters. */
static void rx_buffer_write (struct fnet_telnet_session_if *session, char data)
{
    a770:	b480      	push	{r7}
    a772:	b083      	sub	sp, #12
    a774:	af00      	add	r7, sp, #0
    a776:	6078      	str	r0, [r7, #4]
    a778:	460b      	mov	r3, r1
    a77a:	70fb      	strb	r3, [r7, #3]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:218
   *session->rx_buffer_head = data;
    a77c:	687b      	ldr	r3, [r7, #4]
    a77e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    a780:	78fa      	ldrb	r2, [r7, #3]
    a782:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:219
   if(++session->rx_buffer_head==session->rx_buffer_end)
    a784:	687b      	ldr	r3, [r7, #4]
    a786:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    a788:	1c5a      	adds	r2, r3, #1
    a78a:	687b      	ldr	r3, [r7, #4]
    a78c:	655a      	str	r2, [r3, #84]	; 0x54
    a78e:	687b      	ldr	r3, [r7, #4]
    a790:	6d5a      	ldr	r2, [r3, #84]	; 0x54
    a792:	687b      	ldr	r3, [r7, #4]
    a794:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
    a796:	429a      	cmp	r2, r3
    a798:	d104      	bne.n	a7a4 <rx_buffer_write+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:220
      session->rx_buffer_head=session->rx_buffer;
    a79a:	687b      	ldr	r3, [r7, #4]
    a79c:	f103 0248 	add.w	r2, r3, #72	; 0x48
    a7a0:	687b      	ldr	r3, [r7, #4]
    a7a2:	655a      	str	r2, [r3, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:221
}
    a7a4:	370c      	adds	r7, #12
    a7a6:	46bd      	mov	sp, r7
    a7a8:	f85d 7b04 	ldr.w	r7, [sp], #4
    a7ac:	4770      	bx	lr
    a7ae:	bf00      	nop

0000a7b0 <rx_buffer_read>:
rx_buffer_read():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:225

/* Read from Rx circular buffer. */
static char rx_buffer_read (struct fnet_telnet_session_if *session)
{
    a7b0:	b480      	push	{r7}
    a7b2:	b085      	sub	sp, #20
    a7b4:	af00      	add	r7, sp, #0
    a7b6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:226
   char data = *session->rx_buffer_tail;
    a7b8:	687b      	ldr	r3, [r7, #4]
    a7ba:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    a7bc:	781b      	ldrb	r3, [r3, #0]
    a7be:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:227
   if(++session->rx_buffer_tail==session->rx_buffer_end)
    a7c0:	687b      	ldr	r3, [r7, #4]
    a7c2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    a7c4:	1c5a      	adds	r2, r3, #1
    a7c6:	687b      	ldr	r3, [r7, #4]
    a7c8:	659a      	str	r2, [r3, #88]	; 0x58
    a7ca:	687b      	ldr	r3, [r7, #4]
    a7cc:	6d9a      	ldr	r2, [r3, #88]	; 0x58
    a7ce:	687b      	ldr	r3, [r7, #4]
    a7d0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
    a7d2:	429a      	cmp	r2, r3
    a7d4:	d104      	bne.n	a7e0 <rx_buffer_read+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:228
      session->rx_buffer_tail=session->rx_buffer;
    a7d6:	687b      	ldr	r3, [r7, #4]
    a7d8:	f103 0248 	add.w	r2, r3, #72	; 0x48
    a7dc:	687b      	ldr	r3, [r7, #4]
    a7de:	659a      	str	r2, [r3, #88]	; 0x58
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:229
   return data;       
    a7e0:	7bfb      	ldrb	r3, [r7, #15]
    a7e2:	b25b      	sxtb	r3, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:230
}
    a7e4:	4618      	mov	r0, r3
    a7e6:	3714      	adds	r7, #20
    a7e8:	46bd      	mov	sp, r7
    a7ea:	f85d 7b04 	ldr.w	r7, [sp], #4
    a7ee:	4770      	bx	lr

0000a7f0 <rx_buffer_free_space>:
rx_buffer_free_space():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:234

/* Free space in Rx circular buffer. */
static int rx_buffer_free_space(struct fnet_telnet_session_if *session)
{
    a7f0:	b480      	push	{r7}
    a7f2:	b085      	sub	sp, #20
    a7f4:	af00      	add	r7, sp, #0
    a7f6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:235
   int  space = session->rx_buffer_tail - session->rx_buffer_head;
    a7f8:	687b      	ldr	r3, [r7, #4]
    a7fa:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    a7fc:	461a      	mov	r2, r3
    a7fe:	687b      	ldr	r3, [r7, #4]
    a800:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    a802:	1ad3      	subs	r3, r2, r3
    a804:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:236
   if (space<=0)
    a806:	68fb      	ldr	r3, [r7, #12]
    a808:	2b00      	cmp	r3, #0
    a80a:	dc02      	bgt.n	a812 <rx_buffer_free_space+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:237
      space += FNET_TELNET_RX_BUFFER_SIZE;    
    a80c:	68fb      	ldr	r3, [r7, #12]
    a80e:	330a      	adds	r3, #10
    a810:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:239
   
   return (space-1);   
    a812:	68fb      	ldr	r3, [r7, #12]
    a814:	3b01      	subs	r3, #1
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:240
}
    a816:	4618      	mov	r0, r3
    a818:	3714      	adds	r7, #20
    a81a:	46bd      	mov	sp, r7
    a81c:	f85d 7b04 	ldr.w	r7, [sp], #4
    a820:	4770      	bx	lr
    a822:	bf00      	nop

0000a824 <fnet_telnet_putchar>:
fnet_telnet_putchar():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:248
* NAME: fnet_telnet_putchar
*
* DESCRIPTION: 
************************************************************************/
static void fnet_telnet_putchar(long id, int character)
{
    a824:	b580      	push	{r7, lr}
    a826:	b084      	sub	sp, #16
    a828:	af00      	add	r7, sp, #0
    a82a:	6078      	str	r0, [r7, #4]
    a82c:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:249
    struct fnet_telnet_session_if *session = (struct fnet_telnet_session_if *)id;
    a82e:	687b      	ldr	r3, [r7, #4]
    a830:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:251
    
    if(session->state != FNET_TELNET_STATE_CLOSING)
    a832:	68fb      	ldr	r3, [r7, #12]
    a834:	781b      	ldrb	r3, [r3, #0]
    a836:	2b07      	cmp	r3, #7
    a838:	d00f      	beq.n	a85a <fnet_telnet_putchar+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:253
    {
        tx_buffer_write(session, (char)character);         
    a83a:	683b      	ldr	r3, [r7, #0]
    a83c:	b2db      	uxtb	r3, r3
    a83e:	b25b      	sxtb	r3, r3
    a840:	68f8      	ldr	r0, [r7, #12]
    a842:	4619      	mov	r1, r3
    a844:	f7ff ff70 	bl	a728 <tx_buffer_write>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:255

        if(tx_buffer_free_space(session) < 1) /* Buffer is full => flush. */
    a848:	68f8      	ldr	r0, [r7, #12]
    a84a:	f7ff ff83 	bl	a754 <tx_buffer_free_space>
    a84e:	4603      	mov	r3, r0
    a850:	2b00      	cmp	r3, #0
    a852:	dc02      	bgt.n	a85a <fnet_telnet_putchar+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:257
        {
            fnet_telnet_send(session);
    a854:	68f8      	ldr	r0, [r7, #12]
    a856:	f000 f827 	bl	a8a8 <fnet_telnet_send>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:260
        }
    }
}
    a85a:	3710      	adds	r7, #16
    a85c:	46bd      	mov	sp, r7
    a85e:	bd80      	pop	{r7, pc}

0000a860 <fnet_telnet_getchar>:
fnet_telnet_getchar():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:268
* NAME: fnet_telnet_getchar
*
* DESCRIPTION: 
************************************************************************/
static int fnet_telnet_getchar(long id)
{
    a860:	b580      	push	{r7, lr}
    a862:	b084      	sub	sp, #16
    a864:	af00      	add	r7, sp, #0
    a866:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:269
    struct fnet_telnet_session_if *session = (struct fnet_telnet_session_if *)id;
    a868:	687b      	ldr	r3, [r7, #4]
    a86a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:271
    
    if(session->rx_buffer_tail != session->rx_buffer_head) /* If there is something. */
    a86c:	68fb      	ldr	r3, [r7, #12]
    a86e:	6d9a      	ldr	r2, [r3, #88]	; 0x58
    a870:	68fb      	ldr	r3, [r7, #12]
    a872:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    a874:	429a      	cmp	r2, r3
    a876:	d004      	beq.n	a882 <fnet_telnet_getchar+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:273
    {
        return rx_buffer_read (session);
    a878:	68f8      	ldr	r0, [r7, #12]
    a87a:	f7ff ff99 	bl	a7b0 <rx_buffer_read>
    a87e:	4603      	mov	r3, r0
    a880:	e001      	b.n	a886 <fnet_telnet_getchar+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:276
    }
    else
        return FNET_ERR;
    a882:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:277
}
    a886:	4618      	mov	r0, r3
    a888:	3710      	adds	r7, #16
    a88a:	46bd      	mov	sp, r7
    a88c:	bd80      	pop	{r7, pc}
    a88e:	bf00      	nop

0000a890 <fnet_telnet_flush>:
fnet_telnet_flush():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:285
* NAME: fnet_telnet_flush
*
* DESCRIPTION: 
************************************************************************/
static void fnet_telnet_flush(long id)
{
    a890:	b580      	push	{r7, lr}
    a892:	b084      	sub	sp, #16
    a894:	af00      	add	r7, sp, #0
    a896:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:286
    struct fnet_telnet_session_if *session = (struct fnet_telnet_session_if *)id;
    a898:	687b      	ldr	r3, [r7, #4]
    a89a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:288
    
    fnet_telnet_send(session);
    a89c:	68f8      	ldr	r0, [r7, #12]
    a89e:	f000 f803 	bl	a8a8 <fnet_telnet_send>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:289
}
    a8a2:	3710      	adds	r7, #16
    a8a4:	46bd      	mov	sp, r7
    a8a6:	bd80      	pop	{r7, pc}

0000a8a8 <fnet_telnet_send>:
fnet_telnet_send():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:297
* NAME: fnet_telnet_send
*
* DESCRIPTION: 
************************************************************************/
static void fnet_telnet_send(struct fnet_telnet_session_if *session)
{
    a8a8:	b580      	push	{r7, lr}
    a8aa:	b086      	sub	sp, #24
    a8ac:	af00      	add	r7, sp, #0
    a8ae:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:299
    int             res;
    int             tx_buffer_tail_index = 0;
    a8b0:	2300      	movs	r3, #0
    a8b2:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:300
    unsigned long   timeout = fnet_timer_ticks();
    a8b4:	f7ff fa74 	bl	9da0 <fnet_timer_ticks>
    a8b8:	6138      	str	r0, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:303
    
    /* Send all data in the buffer.*/
    while(tx_buffer_tail_index != session->tx_buffer_head_index)
    a8ba:	e02e      	b.n	a91a <fnet_telnet_send+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:305
    {
        if((res = send(session->socket_foreign, &session->tx_buffer[tx_buffer_tail_index], session->tx_buffer_head_index - tx_buffer_tail_index, 0)) != SOCKET_ERROR)
    a8bc:	687b      	ldr	r3, [r7, #4]
    a8be:	6859      	ldr	r1, [r3, #4]
    a8c0:	697b      	ldr	r3, [r7, #20]
    a8c2:	3308      	adds	r3, #8
    a8c4:	687a      	ldr	r2, [r7, #4]
    a8c6:	441a      	add	r2, r3
    a8c8:	687b      	ldr	r3, [r7, #4]
    a8ca:	6c58      	ldr	r0, [r3, #68]	; 0x44
    a8cc:	697b      	ldr	r3, [r7, #20]
    a8ce:	1ac3      	subs	r3, r0, r3
    a8d0:	4608      	mov	r0, r1
    a8d2:	4611      	mov	r1, r2
    a8d4:	461a      	mov	r2, r3
    a8d6:	2300      	movs	r3, #0
    a8d8:	f7fa f9a6 	bl	4c28 <send>
    a8dc:	60f8      	str	r0, [r7, #12]
    a8de:	68fb      	ldr	r3, [r7, #12]
    a8e0:	f1b3 3fff 	cmp.w	r3, #4294967295
    a8e4:	d015      	beq.n	a912 <fnet_telnet_send+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:307
        {
            if(res) /* >0 */
    a8e6:	68fb      	ldr	r3, [r7, #12]
    a8e8:	2b00      	cmp	r3, #0
    a8ea:	d007      	beq.n	a8fc <fnet_telnet_send+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:310
            {
                /* Update buffer pointers. */
                tx_buffer_tail_index += res;
    a8ec:	697a      	ldr	r2, [r7, #20]
    a8ee:	68fb      	ldr	r3, [r7, #12]
    a8f0:	4413      	add	r3, r2
    a8f2:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:313

                /* Reset timeout. */
                timeout = fnet_timer_ticks();           
    a8f4:	f7ff fa54 	bl	9da0 <fnet_timer_ticks>
    a8f8:	6138      	str	r0, [r7, #16]
    a8fa:	e00e      	b.n	a91a <fnet_telnet_send+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:315
            }
            else if( fnet_timer_get_interval(timeout, fnet_timer_ticks())
    a8fc:	f7ff fa50 	bl	9da0 <fnet_timer_ticks>
    a900:	4603      	mov	r3, r0
    a902:	6938      	ldr	r0, [r7, #16]
    a904:	4619      	mov	r1, r3
    a906:	f7ff fb2b 	bl	9f60 <fnet_timer_get_interval>
    a90a:	4603      	mov	r3, r0
    a90c:	2b14      	cmp	r3, #20
    a90e:	d904      	bls.n	a91a <fnet_telnet_send+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:319
                         > (FNET_TELNET_WAIT_SEND_MS / FNET_TIMER_PERIOD_MS) ) /* Check timeout */
            {
                FNET_DEBUG_TELNET("TELNET:Send timeout.");
                break; /* Time-out. */
    a910:	e008      	b.n	a924 <fnet_telnet_send+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:325
            }
        }
        else /* Error.*/
        {
            FNET_DEBUG_TELNET("TELNET:Send error.");
            session->state = FNET_TELNET_STATE_CLOSING; /*=> CLOSING */
    a912:	687b      	ldr	r3, [r7, #4]
    a914:	2207      	movs	r2, #7
    a916:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:326
            break; 
    a918:	e004      	b.n	a924 <fnet_telnet_send+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:303 (discriminator 1)
    int             res;
    int             tx_buffer_tail_index = 0;
    unsigned long   timeout = fnet_timer_ticks();
    
    /* Send all data in the buffer.*/
    while(tx_buffer_tail_index != session->tx_buffer_head_index)
    a91a:	687b      	ldr	r3, [r7, #4]
    a91c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    a91e:	697b      	ldr	r3, [r7, #20]
    a920:	429a      	cmp	r2, r3
    a922:	d1cb      	bne.n	a8bc <fnet_telnet_send+0x14>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:331
            break; 
        }
    }
    
    /* Reset TX buffer index. */ 
    session->tx_buffer_head_index = 0;
    a924:	687b      	ldr	r3, [r7, #4]
    a926:	2200      	movs	r2, #0
    a928:	645a      	str	r2, [r3, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:332
}
    a92a:	3718      	adds	r7, #24
    a92c:	46bd      	mov	sp, r7
    a92e:	bd80      	pop	{r7, pc}

0000a930 <fnet_telnet_send_cmd>:
fnet_telnet_send_cmd():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:340
* NAME: fnet_telnet_send_cmd
*
* DESCRIPTION: Wrie command to the TX buffer.
************************************************************************/
static void fnet_telnet_send_cmd(struct fnet_telnet_session_if *session, char command, char option )
{
    a930:	b580      	push	{r7, lr}
    a932:	b082      	sub	sp, #8
    a934:	af00      	add	r7, sp, #0
    a936:	6078      	str	r0, [r7, #4]
    a938:	4613      	mov	r3, r2
    a93a:	460a      	mov	r2, r1
    a93c:	70fa      	strb	r2, [r7, #3]
    a93e:	70bb      	strb	r3, [r7, #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:341
    tx_buffer_write(session, (char)FNET_TELNET_CMD_IAC);
    a940:	6878      	ldr	r0, [r7, #4]
    a942:	f04f 31ff 	mov.w	r1, #4294967295
    a946:	f7ff feef 	bl	a728 <tx_buffer_write>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:342
    tx_buffer_write(session, command);
    a94a:	f997 3003 	ldrsb.w	r3, [r7, #3]
    a94e:	6878      	ldr	r0, [r7, #4]
    a950:	4619      	mov	r1, r3
    a952:	f7ff fee9 	bl	a728 <tx_buffer_write>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:343
    tx_buffer_write(session, option);
    a956:	f997 3002 	ldrsb.w	r3, [r7, #2]
    a95a:	6878      	ldr	r0, [r7, #4]
    a95c:	4619      	mov	r1, r3
    a95e:	f7ff fee3 	bl	a728 <tx_buffer_write>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:346
    
    /* Send the command.*/
    fnet_telnet_send(session);
    a962:	6878      	ldr	r0, [r7, #4]
    a964:	f7ff ffa0 	bl	a8a8 <fnet_telnet_send>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:349
    
    FNET_DEBUG_TELNET("TELNET: Send option = %d", option);
}
    a968:	3708      	adds	r7, #8
    a96a:	46bd      	mov	sp, r7
    a96c:	bd80      	pop	{r7, pc}
    a96e:	bf00      	nop

0000a970 <fnet_telnet_state_machine>:
fnet_telnet_state_machine():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:357
* NAME: fnet_telnet_state_machine
*
* DESCRIPTION: Telnet server state machine.
************************************************************************/
static void fnet_telnet_state_machine( void *telnet_if_p )
{
    a970:	b580      	push	{r7, lr}
    a972:	b08c      	sub	sp, #48	; 0x30
    a974:	af00      	add	r7, sp, #0
    a976:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:360
    struct sockaddr                 foreign_addr;
    int                             res;
    struct fnet_telnet_if           *telnet = (struct fnet_telnet_if *)telnet_if_p;
    a978:	687b      	ldr	r3, [r7, #4]
    a97a:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:366
    char                            rx_data[1];
    int                             len;
    int                             i;
    struct fnet_telnet_session_if   *session;
    
    for(i=0; i<FNET_CFG_TELNET_SESSION_MAX; i++) 
    a97c:	2300      	movs	r3, #0
    a97e:	62fb      	str	r3, [r7, #44]	; 0x2c
    a980:	e153      	b.n	ac2a <fnet_telnet_state_machine+0x2ba>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:368
    { 
        session = &telnet->session[i];
    a982:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    a984:	22c4      	movs	r2, #196	; 0xc4
    a986:	fb02 f303 	mul.w	r3, r2, r3
    a98a:	3310      	adds	r3, #16
    a98c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    a98e:	4413      	add	r3, r2
    a990:	3304      	adds	r3, #4
    a992:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:369
        telnet->session_active = session;
    a994:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    a996:	6a3a      	ldr	r2, [r7, #32]
    a998:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:373
        
        do
        {
            switch(session->state)
    a99a:	6a3b      	ldr	r3, [r7, #32]
    a99c:	781b      	ldrb	r3, [r3, #0]
    a99e:	3b01      	subs	r3, #1
    a9a0:	2b06      	cmp	r3, #6
    a9a2:	f200 8139 	bhi.w	ac18 <fnet_telnet_state_machine+0x2a8>
    a9a6:	a201      	add	r2, pc, #4	; (adr r2, a9ac <fnet_telnet_state_machine+0x3c>)
    a9a8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    a9ac:	0000a9c9 	.word	0x0000a9c9
    a9b0:	0000aa3f 	.word	0x0000aa3f
    a9b4:	0000aa99 	.word	0x0000aa99
    a9b8:	0000ab19 	.word	0x0000ab19
    a9bc:	0000ab19 	.word	0x0000ab19
    a9c0:	0000ab83 	.word	0x0000ab83
    a9c4:	0000abb9 	.word	0x0000abb9
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:377
            {
                /*---- LISTENING ------------------------------------------------*/
                case FNET_TELNET_STATE_LISTENING:
                     len = sizeof(foreign_addr);
    a9c8:	2308      	movs	r3, #8
    a9ca:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:378
                    session->socket_foreign = accept(telnet->socket_listen, (struct sockaddr *) &foreign_addr, &len);
    a9cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    a9ce:	6819      	ldr	r1, [r3, #0]
    a9d0:	f107 0214 	add.w	r2, r7, #20
    a9d4:	f107 030c 	add.w	r3, r7, #12
    a9d8:	4608      	mov	r0, r1
    a9da:	4611      	mov	r1, r2
    a9dc:	461a      	mov	r2, r3
    a9de:	f7fa f8a5 	bl	4b2c <accept>
    a9e2:	4602      	mov	r2, r0
    a9e4:	6a3b      	ldr	r3, [r7, #32]
    a9e6:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:380
                    
                    if(session->socket_foreign != SOCKET_INVALID)
    a9e8:	6a3b      	ldr	r3, [r7, #32]
    a9ea:	685b      	ldr	r3, [r3, #4]
    a9ec:	f1b3 3fff 	cmp.w	r3, #4294967295
    a9f0:	d024      	beq.n	aa3c <fnet_telnet_state_machine+0xcc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:391
                            FNET_DEBUG_TELNET("\nTELNET: New connection: %s; Port: %d.", ip_str, fnet_ntohs(foreign_addr.sa_port));
                        }
                        #endif

                        /* Init Shell. */
                        session->shell_descriptor = fnet_shell_init(&session->shell_params); 
    a9f2:	6a3b      	ldr	r3, [r7, #32]
    a9f4:	3364      	adds	r3, #100	; 0x64
    a9f6:	4618      	mov	r0, r3
    a9f8:	f000 fc9a 	bl	b330 <fnet_shell_init>
    a9fc:	4602      	mov	r2, r0
    a9fe:	6a3b      	ldr	r3, [r7, #32]
    aa00:	661a      	str	r2, [r3, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:393
        
                        if(session->shell_descriptor == FNET_ERR)
    aa02:	6a3b      	ldr	r3, [r7, #32]
    aa04:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    aa06:	f1b3 3fff 	cmp.w	r3, #4294967295
    aa0a:	d106      	bne.n	aa1a <fnet_telnet_state_machine+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:395
                        {
                            session->shell_descriptor = 0;
    aa0c:	6a3b      	ldr	r3, [r7, #32]
    aa0e:	2200      	movs	r2, #0
    aa10:	661a      	str	r2, [r3, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:398
                            
                            FNET_DEBUG_TELNET("TELNET: Shell Service registration error.");
                            session->state = FNET_TELNET_STATE_CLOSING;   /*=> CLOSING */
    aa12:	6a3b      	ldr	r3, [r7, #32]
    aa14:	2207      	movs	r2, #7
    aa16:	701a      	strb	r2, [r3, #0]
    aa18:	e010      	b.n	aa3c <fnet_telnet_state_machine+0xcc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:402
                        }
                        else
                        {    
                            listen(telnet->socket_listen, --telnet->backlog); /* Ignor other connections.*/
    aa1a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    aa1c:	681a      	ldr	r2, [r3, #0]
    aa1e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    aa20:	68db      	ldr	r3, [r3, #12]
    aa22:	1e59      	subs	r1, r3, #1
    aa24:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    aa26:	60d9      	str	r1, [r3, #12]
    aa28:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    aa2a:	68db      	ldr	r3, [r3, #12]
    aa2c:	4610      	mov	r0, r2
    aa2e:	4619      	mov	r1, r3
    aa30:	f7fa f830 	bl	4a94 <listen>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:405
                            
                            /* Reset TX timeout. */
                            session->state = FNET_TELNET_STATE_RECEIVING; /* => WAITING data */
    aa34:	6a3b      	ldr	r3, [r7, #32]
    aa36:	2202      	movs	r2, #2
    aa38:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:408
                        }
                    }
                    break;
    aa3a:	e0ee      	b.n	ac1a <fnet_telnet_state_machine+0x2aa>
    aa3c:	e0ed      	b.n	ac1a <fnet_telnet_state_machine+0x2aa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:411
                /*---- NORMAL -----------------------------------------------*/
                case FNET_TELNET_STATE_RECEIVING:
                    if(rx_buffer_free_space(session)>0) 
    aa3e:	6a38      	ldr	r0, [r7, #32]
    aa40:	f7ff fed6 	bl	a7f0 <rx_buffer_free_space>
    aa44:	4603      	mov	r3, r0
    aa46:	2b00      	cmp	r3, #0
    aa48:	dd25      	ble.n	aa96 <fnet_telnet_state_machine+0x126>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:413
                    {                
                        res = recv(session->socket_foreign, rx_data, 1, 0);
    aa4a:	6a3b      	ldr	r3, [r7, #32]
    aa4c:	685a      	ldr	r2, [r3, #4]
    aa4e:	f107 0310 	add.w	r3, r7, #16
    aa52:	4610      	mov	r0, r2
    aa54:	4619      	mov	r1, r3
    aa56:	2201      	movs	r2, #1
    aa58:	2300      	movs	r3, #0
    aa5a:	f7fa f969 	bl	4d30 <recv>
    aa5e:	61f8      	str	r0, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:414
                        if(res == 1)
    aa60:	69fb      	ldr	r3, [r7, #28]
    aa62:	2b01      	cmp	r3, #1
    aa64:	d10f      	bne.n	aa86 <fnet_telnet_state_machine+0x116>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:416
                        {
                            if(rx_data[0] == FNET_TELNET_CMD_IAC )
    aa66:	7c3b      	ldrb	r3, [r7, #16]
    aa68:	b25b      	sxtb	r3, r3
    aa6a:	f1b3 3fff 	cmp.w	r3, #4294967295
    aa6e:	d103      	bne.n	aa78 <fnet_telnet_state_machine+0x108>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:418
                            {
                                session->state = FNET_TELNET_STATE_IAC; /*=> Handle IAC */
    aa70:	6a3b      	ldr	r3, [r7, #32]
    aa72:	2203      	movs	r2, #3
    aa74:	701a      	strb	r2, [r3, #0]
    aa76:	e00e      	b.n	aa96 <fnet_telnet_state_machine+0x126>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:422
                            }
                            else
                            {
                                rx_buffer_write (session, rx_data[0]);
    aa78:	7c3b      	ldrb	r3, [r7, #16]
    aa7a:	b25b      	sxtb	r3, r3
    aa7c:	6a38      	ldr	r0, [r7, #32]
    aa7e:	4619      	mov	r1, r3
    aa80:	f7ff fe76 	bl	a770 <rx_buffer_write>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:430
                        else if (res == SOCKET_ERROR)
                        {              
                            session->state = FNET_TELNET_STATE_CLOSING; /*=> CLOSING */
                        }
                    }                
                    break;
    aa84:	e0c9      	b.n	ac1a <fnet_telnet_state_machine+0x2aa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:425
                            else
                            {
                                rx_buffer_write (session, rx_data[0]);
                            }
                        }
                        else if (res == SOCKET_ERROR)
    aa86:	69fb      	ldr	r3, [r7, #28]
    aa88:	f1b3 3fff 	cmp.w	r3, #4294967295
    aa8c:	d103      	bne.n	aa96 <fnet_telnet_state_machine+0x126>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:427
                        {              
                            session->state = FNET_TELNET_STATE_CLOSING; /*=> CLOSING */
    aa8e:	6a3b      	ldr	r3, [r7, #32]
    aa90:	2207      	movs	r2, #7
    aa92:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:430
                        }
                    }                
                    break;
    aa94:	e0c1      	b.n	ac1a <fnet_telnet_state_machine+0x2aa>
    aa96:	e0c0      	b.n	ac1a <fnet_telnet_state_machine+0x2aa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:435
                /*---- IAC -----------------------------------------------*/    
                case FNET_TELNET_STATE_IAC:
                    FNET_DEBUG_TELNET("TELNET: STATE_IAC");
                    
                    if((res = recv(session->socket_foreign, rx_data, 1, 0) )!= SOCKET_ERROR)
    aa98:	6a3b      	ldr	r3, [r7, #32]
    aa9a:	685a      	ldr	r2, [r3, #4]
    aa9c:	f107 0310 	add.w	r3, r7, #16
    aaa0:	4610      	mov	r0, r2
    aaa2:	4619      	mov	r1, r3
    aaa4:	2201      	movs	r2, #1
    aaa6:	2300      	movs	r3, #0
    aaa8:	f7fa f942 	bl	4d30 <recv>
    aaac:	61f8      	str	r0, [r7, #28]
    aaae:	69fb      	ldr	r3, [r7, #28]
    aab0:	f1b3 3fff 	cmp.w	r3, #4294967295
    aab4:	d02b      	beq.n	ab0e <fnet_telnet_state_machine+0x19e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:437
                    {
                        if(res)
    aab6:	69fb      	ldr	r3, [r7, #28]
    aab8:	2b00      	cmp	r3, #0
    aaba:	d02c      	beq.n	ab16 <fnet_telnet_state_machine+0x1a6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:439
                        {
                            switch(rx_data[0])
    aabc:	7c3b      	ldrb	r3, [r7, #16]
    aabe:	b25b      	sxtb	r3, r3
    aac0:	3305      	adds	r3, #5
    aac2:	2b04      	cmp	r3, #4
    aac4:	d81e      	bhi.n	ab04 <fnet_telnet_state_machine+0x194>
    aac6:	a201      	add	r2, pc, #4	; (adr r2, aacc <fnet_telnet_state_machine+0x15c>)
    aac8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    aacc:	0000aae1 	.word	0x0000aae1
    aad0:	0000aaf1 	.word	0x0000aaf1
    aad4:	0000aae9 	.word	0x0000aae9
    aad8:	0000aaf1 	.word	0x0000aaf1
    aadc:	0000aaf9 	.word	0x0000aaf9
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:442
                            {
                                case FNET_TELNET_CMD_WILL:
                                    session->state = FNET_TELNET_STATE_DONT;
    aae0:	6a3b      	ldr	r3, [r7, #32]
    aae2:	2204      	movs	r2, #4
    aae4:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:443
                                    break;
    aae6:	e011      	b.n	ab0c <fnet_telnet_state_machine+0x19c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:445
                                case FNET_TELNET_CMD_DO:
                                    session->state = FNET_TELNET_STATE_WONT;
    aae8:	6a3b      	ldr	r3, [r7, #32]
    aaea:	2205      	movs	r2, #5
    aaec:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:446
                                    break;                        
    aaee:	e00d      	b.n	ab0c <fnet_telnet_state_machine+0x19c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:449
                                case FNET_TELNET_CMD_WONT:
                                case FNET_TELNET_CMD_DONT:
                                    session->state = FNET_TELNET_STATE_SKIP ;
    aaf0:	6a3b      	ldr	r3, [r7, #32]
    aaf2:	2206      	movs	r2, #6
    aaf4:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:450
                                    break;   
    aaf6:	e009      	b.n	ab0c <fnet_telnet_state_machine+0x19c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:456
                                case FNET_TELNET_CMD_IAC:
                                    /*
                                    the IAC need be doubled to be sent as data, and
                                    the other 255 codes may be passed transparently.
                                    */
                                    rx_buffer_write (session, rx_data[0]);
    aaf8:	7c3b      	ldrb	r3, [r7, #16]
    aafa:	b25b      	sxtb	r3, r3
    aafc:	6a38      	ldr	r0, [r7, #32]
    aafe:	4619      	mov	r1, r3
    ab00:	f7ff fe36 	bl	a770 <rx_buffer_write>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:458
                                default:
                                    session->state = FNET_TELNET_STATE_RECEIVING; /*=> Ignore commands */ 
    ab04:	6a3b      	ldr	r3, [r7, #32]
    ab06:	2202      	movs	r2, #2
    ab08:	701a      	strb	r2, [r3, #0]
    ab0a:	e004      	b.n	ab16 <fnet_telnet_state_machine+0x1a6>
    ab0c:	e003      	b.n	ab16 <fnet_telnet_state_machine+0x1a6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:464
                            }
                        }
                    }
                    else
                    {              
                        session->state = FNET_TELNET_STATE_CLOSING; /*=> CLOSING */
    ab0e:	6a3b      	ldr	r3, [r7, #32]
    ab10:	2207      	movs	r2, #7
    ab12:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:466
                    }
                    break;
    ab14:	e081      	b.n	ac1a <fnet_telnet_state_machine+0x2aa>
    ab16:	e080      	b.n	ac1a <fnet_telnet_state_machine+0x2aa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:473
                case FNET_TELNET_STATE_DONT:
                case FNET_TELNET_STATE_WONT:
                    {
                        char command;
                        
                        if(session->state == FNET_TELNET_STATE_DONT)
    ab18:	6a3b      	ldr	r3, [r7, #32]
    ab1a:	781b      	ldrb	r3, [r3, #0]
    ab1c:	2b04      	cmp	r3, #4
    ab1e:	d103      	bne.n	ab28 <fnet_telnet_state_machine+0x1b8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:476
                        {
                            FNET_DEBUG_TELNET("TELNET: STATE_DONT");
                            command = FNET_TELNET_CMD_DONT;
    ab20:	23fe      	movs	r3, #254	; 0xfe
    ab22:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    ab26:	e002      	b.n	ab2e <fnet_telnet_state_machine+0x1be>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:481
                        }
                        else
                        {
                            FNET_DEBUG_TELNET("TELNET: STATE_WONT");
                            command =  FNET_TELNET_CMD_WONT;
    ab28:	23fc      	movs	r3, #252	; 0xfc
    ab2a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:484
                        }
                         
                        if(tx_buffer_free_space(session) >= 3)
    ab2e:	6a38      	ldr	r0, [r7, #32]
    ab30:	f7ff fe10 	bl	a754 <tx_buffer_free_space>
    ab34:	4603      	mov	r3, r0
    ab36:	2b02      	cmp	r3, #2
    ab38:	dd22      	ble.n	ab80 <fnet_telnet_state_machine+0x210>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:486
        	            {
                            res = recv(session->socket_foreign, rx_data, 1, 0);
    ab3a:	6a3b      	ldr	r3, [r7, #32]
    ab3c:	685a      	ldr	r2, [r3, #4]
    ab3e:	f107 0310 	add.w	r3, r7, #16
    ab42:	4610      	mov	r0, r2
    ab44:	4619      	mov	r1, r3
    ab46:	2201      	movs	r2, #1
    ab48:	2300      	movs	r3, #0
    ab4a:	f7fa f8f1 	bl	4d30 <recv>
    ab4e:	61f8      	str	r0, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:488
                            
                            if(res == 1)
    ab50:	69fb      	ldr	r3, [r7, #28]
    ab52:	2b01      	cmp	r3, #1
    ab54:	d10c      	bne.n	ab70 <fnet_telnet_state_machine+0x200>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:491
                            {
                                /* Send command. */
                                fnet_telnet_send_cmd(session, command, rx_data[0]);
    ab56:	7c3b      	ldrb	r3, [r7, #16]
    ab58:	f997 202b 	ldrsb.w	r2, [r7, #43]	; 0x2b
    ab5c:	b25b      	sxtb	r3, r3
    ab5e:	6a38      	ldr	r0, [r7, #32]
    ab60:	4611      	mov	r1, r2
    ab62:	461a      	mov	r2, r3
    ab64:	f7ff fee4 	bl	a930 <fnet_telnet_send_cmd>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:492
                                session->state = FNET_TELNET_STATE_RECEIVING; 
    ab68:	6a3b      	ldr	r3, [r7, #32]
    ab6a:	2202      	movs	r2, #2
    ab6c:	701a      	strb	r2, [r3, #0]
    ab6e:	e007      	b.n	ab80 <fnet_telnet_state_machine+0x210>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:494
                            }
                            else if (res == SOCKET_ERROR)
    ab70:	69fb      	ldr	r3, [r7, #28]
    ab72:	f1b3 3fff 	cmp.w	r3, #4294967295
    ab76:	d103      	bne.n	ab80 <fnet_telnet_state_machine+0x210>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:496
                            {              
                                session->state = FNET_TELNET_STATE_CLOSING; /*=> CLOSING */
    ab78:	6a3b      	ldr	r3, [r7, #32]
    ab7a:	2207      	movs	r2, #7
    ab7c:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:500
                            }
                        }
                    }
                    break;
    ab7e:	e04c      	b.n	ac1a <fnet_telnet_state_machine+0x2aa>
    ab80:	e04b      	b.n	ac1a <fnet_telnet_state_machine+0x2aa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:505
                /*---- SKIP -----------------------------------------------*/                    
                case FNET_TELNET_STATE_SKIP:
                    FNET_DEBUG_TELNET("TELNET: STATE_SKIP");
                     
                    res = recv(session->socket_foreign, rx_data, 1, 0);
    ab82:	6a3b      	ldr	r3, [r7, #32]
    ab84:	685a      	ldr	r2, [r3, #4]
    ab86:	f107 0310 	add.w	r3, r7, #16
    ab8a:	4610      	mov	r0, r2
    ab8c:	4619      	mov	r1, r3
    ab8e:	2201      	movs	r2, #1
    ab90:	2300      	movs	r3, #0
    ab92:	f7fa f8cd 	bl	4d30 <recv>
    ab96:	61f8      	str	r0, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:506
                    if(res == 1)
    ab98:	69fb      	ldr	r3, [r7, #28]
    ab9a:	2b01      	cmp	r3, #1
    ab9c:	d103      	bne.n	aba6 <fnet_telnet_state_machine+0x236>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:508
                    {
                        session->state = FNET_TELNET_STATE_RECEIVING; 
    ab9e:	6a3b      	ldr	r3, [r7, #32]
    aba0:	2202      	movs	r2, #2
    aba2:	701a      	strb	r2, [r3, #0]
    aba4:	e007      	b.n	abb6 <fnet_telnet_state_machine+0x246>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:510
                    }
                    else if (res == SOCKET_ERROR)
    aba6:	69fb      	ldr	r3, [r7, #28]
    aba8:	f1b3 3fff 	cmp.w	r3, #4294967295
    abac:	d103      	bne.n	abb6 <fnet_telnet_state_machine+0x246>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:512
                    {              
                        session->state = FNET_TELNET_STATE_CLOSING; /*=> CLOSING */
    abae:	6a3b      	ldr	r3, [r7, #32]
    abb0:	2207      	movs	r2, #7
    abb2:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:515
                    }

                    break;
    abb4:	e031      	b.n	ac1a <fnet_telnet_state_machine+0x2aa>
    abb6:	e030      	b.n	ac1a <fnet_telnet_state_machine+0x2aa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:520
                /*---- CLOSING --------------------------------------------*/
                case FNET_TELNET_STATE_CLOSING:
                    FNET_DEBUG_TELNET("TELNET: STATE_CLOSING");
                    
                    if(session->shell_descriptor)
    abb8:	6a3b      	ldr	r3, [r7, #32]
    abba:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    abbc:	2b00      	cmp	r3, #0
    abbe:	d007      	beq.n	abd0 <fnet_telnet_state_machine+0x260>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:522
                    {
                        fnet_shell_release(session->shell_descriptor);
    abc0:	6a3b      	ldr	r3, [r7, #32]
    abc2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    abc4:	4618      	mov	r0, r3
    abc6:	f000 fc33 	bl	b430 <fnet_shell_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:523
                        session->shell_descriptor = 0;
    abca:	6a3b      	ldr	r3, [r7, #32]
    abcc:	2200      	movs	r2, #0
    abce:	661a      	str	r2, [r3, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:526
                    }
                    
                    session->rx_buffer_head = session->rx_buffer;
    abd0:	6a3b      	ldr	r3, [r7, #32]
    abd2:	f103 0248 	add.w	r2, r3, #72	; 0x48
    abd6:	6a3b      	ldr	r3, [r7, #32]
    abd8:	655a      	str	r2, [r3, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:527
                    session->rx_buffer_tail = session->rx_buffer; 
    abda:	6a3b      	ldr	r3, [r7, #32]
    abdc:	f103 0248 	add.w	r2, r3, #72	; 0x48
    abe0:	6a3b      	ldr	r3, [r7, #32]
    abe2:	659a      	str	r2, [r3, #88]	; 0x58
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:529
                  
                    closesocket(session->socket_foreign);
    abe4:	6a3b      	ldr	r3, [r7, #32]
    abe6:	685b      	ldr	r3, [r3, #4]
    abe8:	4618      	mov	r0, r3
    abea:	f7f9 fef3 	bl	49d4 <closesocket>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:530
                    session->socket_foreign = SOCKET_INVALID;
    abee:	6a3b      	ldr	r3, [r7, #32]
    abf0:	f04f 32ff 	mov.w	r2, #4294967295
    abf4:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:532
                    
                    listen(telnet->socket_listen, ++telnet->backlog); /* Allow connection.*/
    abf6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    abf8:	681a      	ldr	r2, [r3, #0]
    abfa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    abfc:	68db      	ldr	r3, [r3, #12]
    abfe:	1c59      	adds	r1, r3, #1
    ac00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    ac02:	60d9      	str	r1, [r3, #12]
    ac04:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    ac06:	68db      	ldr	r3, [r3, #12]
    ac08:	4610      	mov	r0, r2
    ac0a:	4619      	mov	r1, r3
    ac0c:	f7f9 ff42 	bl	4a94 <listen>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:534
                    
                    session->state = FNET_TELNET_STATE_LISTENING; /*=> LISTENING */
    ac10:	6a3b      	ldr	r3, [r7, #32]
    ac12:	2201      	movs	r2, #1
    ac14:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:535
                    break;
    ac16:	e000      	b.n	ac1a <fnet_telnet_state_machine+0x2aa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:537
                default:
                    break;
    ac18:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:542

            }

        }
        while(session->state == FNET_TELNET_STATE_CLOSING);
    ac1a:	6a3b      	ldr	r3, [r7, #32]
    ac1c:	781b      	ldrb	r3, [r3, #0]
    ac1e:	2b07      	cmp	r3, #7
    ac20:	f43f aebb 	beq.w	a99a <fnet_telnet_state_machine+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:366
    char                            rx_data[1];
    int                             len;
    int                             i;
    struct fnet_telnet_session_if   *session;
    
    for(i=0; i<FNET_CFG_TELNET_SESSION_MAX; i++) 
    ac24:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ac26:	3301      	adds	r3, #1
    ac28:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:366 (discriminator 1)
    ac2a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ac2c:	2b00      	cmp	r3, #0
    ac2e:	f77f aea8 	ble.w	a982 <fnet_telnet_state_machine+0x12>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:544
            }

        }
        while(session->state == FNET_TELNET_STATE_CLOSING);
    }
}
    ac32:	3730      	adds	r7, #48	; 0x30
    ac34:	46bd      	mov	sp, r7
    ac36:	bd80      	pop	{r7, pc}

0000ac38 <fnet_telnet_init>:
fnet_telnet_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:552
* NAME: fnet_telnet_init
*
* DESCRIPTION: Initialization of the Telnet server.
*************************************************************************/
fnet_telnet_desc_t fnet_telnet_init( struct fnet_telnet_params *params )
{
    ac38:	b580      	push	{r7, lr}
    ac3a:	b090      	sub	sp, #64	; 0x40
    ac3c:	af02      	add	r7, sp, #8
    ac3e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:554
    struct sockaddr         local_addr;
    struct fnet_telnet_if   *telnet_if = 0;
    ac40:	2300      	movs	r3, #0
    ac42:	637b      	str	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:557
    
    /* Socket options. */
    const struct linger     linger_option ={1, /*l_onoff*/
    ac44:	4a9f      	ldr	r2, [pc, #636]	; (aec4 <fnet_telnet_init+0x28c>)
    ac46:	f107 0320 	add.w	r3, r7, #32
    ac4a:	6810      	ldr	r0, [r2, #0]
    ac4c:	6018      	str	r0, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:559
                                        4  /*l_linger*/};
    const unsigned long     bufsize_option = FNET_CFG_TELNET_SOCKET_BUF_SIZE;
    ac4e:	233c      	movs	r3, #60	; 0x3c
    ac50:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:560
    const int               keepalive_option = 1;
    ac52:	2301      	movs	r3, #1
    ac54:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:561
    const int               keepcnt_option = FNET_TELNET_TCP_KEEPCNT;
    ac56:	2302      	movs	r3, #2
    ac58:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:562
    const int               keepintvl_option = FNET_TELNET_TCP_KEEPINTVL;
    ac5a:	2304      	movs	r3, #4
    ac5c:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:563
    const int               keepidle_option = FNET_TELNET_TCP_KEEPIDLE;
    ac5e:	2307      	movs	r3, #7
    ac60:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:566
    int                     i;
    
    if(params == 0 )
    ac62:	687b      	ldr	r3, [r7, #4]
    ac64:	2b00      	cmp	r3, #0
    ac66:	d100      	bne.n	ac6a <fnet_telnet_init+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:569
    {
        FNET_DEBUG_TELNET("TELNET: Wrong init parameters.");
        goto ERROR_1;
    ac68:	e126      	b.n	aeb8 <fnet_telnet_init+0x280>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:586
                break; 
            }
        }
    }
#else
    if(telnet_if_list[0].enabled == FNET_FALSE)
    ac6a:	4b97      	ldr	r3, [pc, #604]	; (aec8 <fnet_telnet_init+0x290>)
    ac6c:	689b      	ldr	r3, [r3, #8]
    ac6e:	2b00      	cmp	r3, #0
    ac70:	d101      	bne.n	ac76 <fnet_telnet_init+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:587
        telnet_if = &telnet_if_list[0];
    ac72:	4b95      	ldr	r3, [pc, #596]	; (aec8 <fnet_telnet_init+0x290>)
    ac74:	637b      	str	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:591
#endif

    /* No free Telnet server descriptor. */
    if(telnet_if == 0)
    ac76:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    ac78:	2b00      	cmp	r3, #0
    ac7a:	d100      	bne.n	ac7e <fnet_telnet_init+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:594
    {
        FNET_DEBUG_TELNET("TELNET: No free Telnet Server.");
        goto ERROR_1;
    ac7c:	e11c      	b.n	aeb8 <fnet_telnet_init+0x280>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:597
    }
   
    local_addr = params->address;
    ac7e:	687a      	ldr	r2, [r7, #4]
    ac80:	f107 0324 	add.w	r3, r7, #36	; 0x24
    ac84:	e892 0003 	ldmia.w	r2, {r0, r1}
    ac88:	e883 0003 	stmia.w	r3, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:599
    
    if(local_addr.sa_port == 0)
    ac8c:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
    ac8e:	2b00      	cmp	r3, #0
    ac90:	d102      	bne.n	ac98 <fnet_telnet_init+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:600
        local_addr.sa_port = FNET_CFG_TELNET_PORT;  /* Aply the default port. */
    ac92:	f44f 53b8 	mov.w	r3, #5888	; 0x1700
    ac96:	84fb      	strh	r3, [r7, #38]	; 0x26
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:602
    
    if(local_addr.sa_family == AF_UNSPEC)
    ac98:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
    ac9a:	2b00      	cmp	r3, #0
    ac9c:	d101      	bne.n	aca2 <fnet_telnet_init+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:603
        local_addr.sa_family = AF_SUPPORTED;   /* Asign supported families.*/
    ac9e:	2301      	movs	r3, #1
    aca0:	84bb      	strh	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:606
    
     /* Create listen socket */
    if((telnet_if->socket_listen = socket(local_addr.sa_family, SOCK_STREAM, 0)) == SOCKET_INVALID)
    aca2:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
    aca4:	4618      	mov	r0, r3
    aca6:	2101      	movs	r1, #1
    aca8:	2200      	movs	r2, #0
    acaa:	f7f9 fcb3 	bl	4614 <socket>
    acae:	4602      	mov	r2, r0
    acb0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    acb2:	601a      	str	r2, [r3, #0]
    acb4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    acb6:	681b      	ldr	r3, [r3, #0]
    acb8:	f1b3 3fff 	cmp.w	r3, #4294967295
    acbc:	d100      	bne.n	acc0 <fnet_telnet_init+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:609
    {
        FNET_DEBUG_TELNET("TELNET: Socket creation error.");
        goto ERROR_1;
    acbe:	e0fb      	b.n	aeb8 <fnet_telnet_init+0x280>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:612
    }   

    if(bind(telnet_if->socket_listen, (struct sockaddr *)(&local_addr), sizeof(local_addr)) == SOCKET_ERROR)
    acc0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    acc2:	681a      	ldr	r2, [r3, #0]
    acc4:	f107 0324 	add.w	r3, r7, #36	; 0x24
    acc8:	4610      	mov	r0, r2
    acca:	4619      	mov	r1, r3
    accc:	2208      	movs	r2, #8
    acce:	f7f9 fde9 	bl	48a4 <bind>
    acd2:	4603      	mov	r3, r0
    acd4:	f1b3 3fff 	cmp.w	r3, #4294967295
    acd8:	d100      	bne.n	acdc <fnet_telnet_init+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:615
    {
        FNET_DEBUG_TELNET("TELNET: Socket bind error.");
        goto ERROR_2;
    acda:	e0e8      	b.n	aeae <fnet_telnet_init+0x276>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:620
    }
    
    /* Set socket options. */    
    if( /* Setup linger option. */
        (setsockopt (telnet_if->socket_listen, SOL_SOCKET, SO_LINGER, (char *)&linger_option, sizeof(linger_option)) == SOCKET_ERROR) ||
    acdc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    acde:	681a      	ldr	r2, [r3, #0]
    ace0:	f107 0320 	add.w	r3, r7, #32
    ace4:	2104      	movs	r1, #4
    ace6:	9100      	str	r1, [sp, #0]
    ace8:	4610      	mov	r0, r2
    acea:	f64f 71ff 	movw	r1, #65535	; 0xffff
    acee:	2208      	movs	r2, #8
    acf0:	f7fa f932 	bl	4f58 <setsockopt>
    acf4:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:619
        FNET_DEBUG_TELNET("TELNET: Socket bind error.");
        goto ERROR_2;
    }
    
    /* Set socket options. */    
    if( /* Setup linger option. */
    acf6:	f1b3 3fff 	cmp.w	r3, #4294967295
    acfa:	f000 80d8 	beq.w	aeae <fnet_telnet_init+0x276>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:622
        (setsockopt (telnet_if->socket_listen, SOL_SOCKET, SO_LINGER, (char *)&linger_option, sizeof(linger_option)) == SOCKET_ERROR) ||
         /* Set socket buffer size. */
        (setsockopt(telnet_if->socket_listen, SOL_SOCKET, SO_RCVBUF, (char *) &bufsize_option, sizeof(bufsize_option))== SOCKET_ERROR) ||
    acfe:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    ad00:	681a      	ldr	r2, [r3, #0]
    ad02:	f107 031c 	add.w	r3, r7, #28
    ad06:	2104      	movs	r1, #4
    ad08:	9100      	str	r1, [sp, #0]
    ad0a:	4610      	mov	r0, r2
    ad0c:	f64f 71ff 	movw	r1, #65535	; 0xffff
    ad10:	f241 0202 	movw	r2, #4098	; 0x1002
    ad14:	f7fa f920 	bl	4f58 <setsockopt>
    ad18:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:620
        goto ERROR_2;
    }
    
    /* Set socket options. */    
    if( /* Setup linger option. */
        (setsockopt (telnet_if->socket_listen, SOL_SOCKET, SO_LINGER, (char *)&linger_option, sizeof(linger_option)) == SOCKET_ERROR) ||
    ad1a:	f1b3 3fff 	cmp.w	r3, #4294967295
    ad1e:	f000 80c6 	beq.w	aeae <fnet_telnet_init+0x276>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:623
         /* Set socket buffer size. */
        (setsockopt(telnet_if->socket_listen, SOL_SOCKET, SO_RCVBUF, (char *) &bufsize_option, sizeof(bufsize_option))== SOCKET_ERROR) ||
        (setsockopt(telnet_if->socket_listen, SOL_SOCKET, SO_SNDBUF, (char *) &bufsize_option, sizeof(bufsize_option))== SOCKET_ERROR) ||
    ad22:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    ad24:	681a      	ldr	r2, [r3, #0]
    ad26:	f107 031c 	add.w	r3, r7, #28
    ad2a:	2104      	movs	r1, #4
    ad2c:	9100      	str	r1, [sp, #0]
    ad2e:	4610      	mov	r0, r2
    ad30:	f64f 71ff 	movw	r1, #65535	; 0xffff
    ad34:	f241 0201 	movw	r2, #4097	; 0x1001
    ad38:	f7fa f90e 	bl	4f58 <setsockopt>
    ad3c:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:622
    
    /* Set socket options. */    
    if( /* Setup linger option. */
        (setsockopt (telnet_if->socket_listen, SOL_SOCKET, SO_LINGER, (char *)&linger_option, sizeof(linger_option)) == SOCKET_ERROR) ||
         /* Set socket buffer size. */
        (setsockopt(telnet_if->socket_listen, SOL_SOCKET, SO_RCVBUF, (char *) &bufsize_option, sizeof(bufsize_option))== SOCKET_ERROR) ||
    ad3e:	f1b3 3fff 	cmp.w	r3, #4294967295
    ad42:	f000 80b4 	beq.w	aeae <fnet_telnet_init+0x276>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:625
        (setsockopt(telnet_if->socket_listen, SOL_SOCKET, SO_SNDBUF, (char *) &bufsize_option, sizeof(bufsize_option))== SOCKET_ERROR) ||
        /* Enable keepalive_option option. */
        (setsockopt (telnet_if->socket_listen, SOL_SOCKET, SO_KEEPALIVE, (char *)&keepalive_option, sizeof(keepalive_option)) == SOCKET_ERROR) ||
    ad46:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    ad48:	681a      	ldr	r2, [r3, #0]
    ad4a:	f107 0318 	add.w	r3, r7, #24
    ad4e:	2104      	movs	r1, #4
    ad50:	9100      	str	r1, [sp, #0]
    ad52:	4610      	mov	r0, r2
    ad54:	f64f 71ff 	movw	r1, #65535	; 0xffff
    ad58:	2202      	movs	r2, #2
    ad5a:	f7fa f8fd 	bl	4f58 <setsockopt>
    ad5e:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:623
    /* Set socket options. */    
    if( /* Setup linger option. */
        (setsockopt (telnet_if->socket_listen, SOL_SOCKET, SO_LINGER, (char *)&linger_option, sizeof(linger_option)) == SOCKET_ERROR) ||
         /* Set socket buffer size. */
        (setsockopt(telnet_if->socket_listen, SOL_SOCKET, SO_RCVBUF, (char *) &bufsize_option, sizeof(bufsize_option))== SOCKET_ERROR) ||
        (setsockopt(telnet_if->socket_listen, SOL_SOCKET, SO_SNDBUF, (char *) &bufsize_option, sizeof(bufsize_option))== SOCKET_ERROR) ||
    ad60:	f1b3 3fff 	cmp.w	r3, #4294967295
    ad64:	f000 80a3 	beq.w	aeae <fnet_telnet_init+0x276>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:627
        /* Enable keepalive_option option. */
        (setsockopt (telnet_if->socket_listen, SOL_SOCKET, SO_KEEPALIVE, (char *)&keepalive_option, sizeof(keepalive_option)) == SOCKET_ERROR) ||
        /* Keepalive probe retransmit limit. */
        (setsockopt (telnet_if->socket_listen, IPPROTO_TCP, TCP_KEEPCNT, (char *)&keepcnt_option, sizeof(keepcnt_option)) == SOCKET_ERROR) ||
    ad68:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    ad6a:	681a      	ldr	r2, [r3, #0]
    ad6c:	f107 0314 	add.w	r3, r7, #20
    ad70:	2104      	movs	r1, #4
    ad72:	9100      	str	r1, [sp, #0]
    ad74:	4610      	mov	r0, r2
    ad76:	2106      	movs	r1, #6
    ad78:	2280      	movs	r2, #128	; 0x80
    ad7a:	f7fa f8ed 	bl	4f58 <setsockopt>
    ad7e:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:625
        (setsockopt (telnet_if->socket_listen, SOL_SOCKET, SO_LINGER, (char *)&linger_option, sizeof(linger_option)) == SOCKET_ERROR) ||
         /* Set socket buffer size. */
        (setsockopt(telnet_if->socket_listen, SOL_SOCKET, SO_RCVBUF, (char *) &bufsize_option, sizeof(bufsize_option))== SOCKET_ERROR) ||
        (setsockopt(telnet_if->socket_listen, SOL_SOCKET, SO_SNDBUF, (char *) &bufsize_option, sizeof(bufsize_option))== SOCKET_ERROR) ||
        /* Enable keepalive_option option. */
        (setsockopt (telnet_if->socket_listen, SOL_SOCKET, SO_KEEPALIVE, (char *)&keepalive_option, sizeof(keepalive_option)) == SOCKET_ERROR) ||
    ad80:	f1b3 3fff 	cmp.w	r3, #4294967295
    ad84:	f000 8093 	beq.w	aeae <fnet_telnet_init+0x276>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:629
        /* Keepalive probe retransmit limit. */
        (setsockopt (telnet_if->socket_listen, IPPROTO_TCP, TCP_KEEPCNT, (char *)&keepcnt_option, sizeof(keepcnt_option)) == SOCKET_ERROR) ||
        /* Keepalive retransmit interval.*/
        (setsockopt (telnet_if->socket_listen, IPPROTO_TCP, TCP_KEEPINTVL, (char *)&keepintvl_option, sizeof(keepintvl_option)) == SOCKET_ERROR) ||
    ad88:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    ad8a:	681a      	ldr	r2, [r3, #0]
    ad8c:	f107 0310 	add.w	r3, r7, #16
    ad90:	2104      	movs	r1, #4
    ad92:	9100      	str	r1, [sp, #0]
    ad94:	4610      	mov	r0, r2
    ad96:	2106      	movs	r1, #6
    ad98:	2240      	movs	r2, #64	; 0x40
    ad9a:	f7fa f8dd 	bl	4f58 <setsockopt>
    ad9e:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:627
        (setsockopt(telnet_if->socket_listen, SOL_SOCKET, SO_RCVBUF, (char *) &bufsize_option, sizeof(bufsize_option))== SOCKET_ERROR) ||
        (setsockopt(telnet_if->socket_listen, SOL_SOCKET, SO_SNDBUF, (char *) &bufsize_option, sizeof(bufsize_option))== SOCKET_ERROR) ||
        /* Enable keepalive_option option. */
        (setsockopt (telnet_if->socket_listen, SOL_SOCKET, SO_KEEPALIVE, (char *)&keepalive_option, sizeof(keepalive_option)) == SOCKET_ERROR) ||
        /* Keepalive probe retransmit limit. */
        (setsockopt (telnet_if->socket_listen, IPPROTO_TCP, TCP_KEEPCNT, (char *)&keepcnt_option, sizeof(keepcnt_option)) == SOCKET_ERROR) ||
    ada0:	f1b3 3fff 	cmp.w	r3, #4294967295
    ada4:	f000 8083 	beq.w	aeae <fnet_telnet_init+0x276>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:631
        /* Keepalive retransmit interval.*/
        (setsockopt (telnet_if->socket_listen, IPPROTO_TCP, TCP_KEEPINTVL, (char *)&keepintvl_option, sizeof(keepintvl_option)) == SOCKET_ERROR) ||
        /* Time between keepalive probes.*/
        (setsockopt (telnet_if->socket_listen, IPPROTO_TCP, TCP_KEEPIDLE, (char *)&keepidle_option, sizeof(keepidle_option)) == SOCKET_ERROR)
    ada8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    adaa:	681a      	ldr	r2, [r3, #0]
    adac:	f107 030c 	add.w	r3, r7, #12
    adb0:	2104      	movs	r1, #4
    adb2:	9100      	str	r1, [sp, #0]
    adb4:	4610      	mov	r0, r2
    adb6:	2106      	movs	r1, #6
    adb8:	2220      	movs	r2, #32
    adba:	f7fa f8cd 	bl	4f58 <setsockopt>
    adbe:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:629
        /* Enable keepalive_option option. */
        (setsockopt (telnet_if->socket_listen, SOL_SOCKET, SO_KEEPALIVE, (char *)&keepalive_option, sizeof(keepalive_option)) == SOCKET_ERROR) ||
        /* Keepalive probe retransmit limit. */
        (setsockopt (telnet_if->socket_listen, IPPROTO_TCP, TCP_KEEPCNT, (char *)&keepcnt_option, sizeof(keepcnt_option)) == SOCKET_ERROR) ||
        /* Keepalive retransmit interval.*/
        (setsockopt (telnet_if->socket_listen, IPPROTO_TCP, TCP_KEEPINTVL, (char *)&keepintvl_option, sizeof(keepintvl_option)) == SOCKET_ERROR) ||
    adc0:	f1b3 3fff 	cmp.w	r3, #4294967295
    adc4:	d073      	beq.n	aeae <fnet_telnet_init+0x276>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:638
    {
        FNET_DEBUG_TELNET("TELNET: Socket setsockopt() error.");
        goto ERROR_2;
    }

    telnet_if->backlog = FNET_CFG_TELNET_SESSION_MAX;
    adc6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    adc8:	2201      	movs	r2, #1
    adca:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:640
        
    if(listen(telnet_if->socket_listen, telnet_if->backlog) == SOCKET_ERROR)
    adcc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    adce:	681a      	ldr	r2, [r3, #0]
    add0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    add2:	68db      	ldr	r3, [r3, #12]
    add4:	4610      	mov	r0, r2
    add6:	4619      	mov	r1, r3
    add8:	f7f9 fe5c 	bl	4a94 <listen>
    addc:	4603      	mov	r3, r0
    adde:	f1b3 3fff 	cmp.w	r3, #4294967295
    ade2:	d100      	bne.n	ade6 <fnet_telnet_init+0x1ae>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:643
    {
        FNET_DEBUG_TELNET("TELNET: Socket listen error.");
        goto ERROR_2;
    ade4:	e063      	b.n	aeae <fnet_telnet_init+0x276>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:647
    }
    
    /* Register service. */
    telnet_if->service_descriptor = fnet_poll_service_register(fnet_telnet_state_machine, (void *) telnet_if);
    ade6:	4839      	ldr	r0, [pc, #228]	; (aecc <fnet_telnet_init+0x294>)
    ade8:	6b79      	ldr	r1, [r7, #52]	; 0x34
    adea:	f001 fa19 	bl	c220 <fnet_poll_service_register>
    adee:	4602      	mov	r2, r0
    adf0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    adf2:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:649
    
    if(telnet_if->service_descriptor == (fnet_poll_desc_t)FNET_ERR)
    adf4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    adf6:	685b      	ldr	r3, [r3, #4]
    adf8:	f1b3 3fff 	cmp.w	r3, #4294967295
    adfc:	d100      	bne.n	ae00 <fnet_telnet_init+0x1c8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:652
    {
        FNET_DEBUG_TELNET("TELNET: Service registration error.");
        goto ERROR_2;
    adfe:	e056      	b.n	aeae <fnet_telnet_init+0x276>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:655
    }
  
    for(i=0; i<FNET_CFG_TELNET_SESSION_MAX; i++) 
    ae00:	2300      	movs	r3, #0
    ae02:	633b      	str	r3, [r7, #48]	; 0x30
    ae04:	e048      	b.n	ae98 <fnet_telnet_init+0x260>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:657 (discriminator 2)
    {
        struct fnet_telnet_session_if   *session = &telnet_if->session[i];
    ae06:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    ae08:	22c4      	movs	r2, #196	; 0xc4
    ae0a:	fb02 f303 	mul.w	r3, r2, r3
    ae0e:	3310      	adds	r3, #16
    ae10:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    ae12:	4413      	add	r3, r2
    ae14:	3304      	adds	r3, #4
    ae16:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:660 (discriminator 2)
         
        /* Reset buffer pointers. Move it to init state. */ 
        session->tx_buffer_head_index = 0;
    ae18:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae1a:	2200      	movs	r2, #0
    ae1c:	645a      	str	r2, [r3, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:661 (discriminator 2)
        session->rx_buffer_head = session->rx_buffer;
    ae1e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae20:	f103 0248 	add.w	r2, r3, #72	; 0x48
    ae24:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae26:	655a      	str	r2, [r3, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:662 (discriminator 2)
        session->rx_buffer_tail = session->rx_buffer; 
    ae28:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae2a:	f103 0248 	add.w	r2, r3, #72	; 0x48
    ae2e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae30:	659a      	str	r2, [r3, #88]	; 0x58
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:663 (discriminator 2)
        session->rx_buffer_end = &session->rx_buffer[FNET_TELNET_RX_BUFFER_SIZE]; 
    ae32:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae34:	f103 0252 	add.w	r2, r3, #82	; 0x52
    ae38:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae3a:	65da      	str	r2, [r3, #92]	; 0x5c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:666 (discriminator 2)

        /* Setup stream. */
        session->stream.id = (long)(session);
    ae3c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    ae3e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae40:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:667 (discriminator 2)
        session->stream.putchar = fnet_telnet_putchar;
    ae44:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae46:	4a22      	ldr	r2, [pc, #136]	; (aed0 <fnet_telnet_init+0x298>)
    ae48:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:668 (discriminator 2)
        session->stream.getchar = fnet_telnet_getchar;
    ae4c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae4e:	4a21      	ldr	r2, [pc, #132]	; (aed4 <fnet_telnet_init+0x29c>)
    ae50:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:669 (discriminator 2)
        session->stream.flush = fnet_telnet_flush;
    ae54:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae56:	4a20      	ldr	r2, [pc, #128]	; (aed8 <fnet_telnet_init+0x2a0>)
    ae58:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:672 (discriminator 2)
        
        /* Init shell. */
        session->shell_params.shell = params->shell;
    ae5c:	687b      	ldr	r3, [r7, #4]
    ae5e:	689a      	ldr	r2, [r3, #8]
    ae60:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae62:	665a      	str	r2, [r3, #100]	; 0x64
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:673 (discriminator 2)
        session->shell_params.cmd_line_buffer = session->cmd_line_buffer;
    ae64:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae66:	f103 0278 	add.w	r2, r3, #120	; 0x78
    ae6a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae6c:	669a      	str	r2, [r3, #104]	; 0x68
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:674 (discriminator 2)
        session->shell_params.cmd_line_buffer_size = sizeof(session->cmd_line_buffer);
    ae6e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae70:	223c      	movs	r2, #60	; 0x3c
    ae72:	66da      	str	r2, [r3, #108]	; 0x6c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:675 (discriminator 2)
        session->shell_params.stream = &session->stream;
    ae74:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae76:	f103 02b4 	add.w	r2, r3, #180	; 0xb4
    ae7a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae7c:	671a      	str	r2, [r3, #112]	; 0x70
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:676 (discriminator 2)
        session->shell_params.echo = FNET_CFG_TELNET_SHELL_ECHO;
    ae7e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae80:	2200      	movs	r2, #0
    ae82:	675a      	str	r2, [r3, #116]	; 0x74
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:678 (discriminator 2)

        session->socket_foreign = SOCKET_INVALID;
    ae84:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae86:	f04f 32ff 	mov.w	r2, #4294967295
    ae8a:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:680 (discriminator 2)
                
        session->state = FNET_TELNET_STATE_LISTENING;
    ae8c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ae8e:	2201      	movs	r2, #1
    ae90:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:655 (discriminator 2)
    {
        FNET_DEBUG_TELNET("TELNET: Service registration error.");
        goto ERROR_2;
    }
  
    for(i=0; i<FNET_CFG_TELNET_SESSION_MAX; i++) 
    ae92:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    ae94:	3301      	adds	r3, #1
    ae96:	633b      	str	r3, [r7, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:655 (discriminator 1)
    ae98:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    ae9a:	2b00      	cmp	r3, #0
    ae9c:	ddb3      	ble.n	ae06 <fnet_telnet_init+0x1ce>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:684
                
        session->state = FNET_TELNET_STATE_LISTENING;
    }
    
    
    telnet_if->session_active = FNET_NULL;
    ae9e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    aea0:	2200      	movs	r2, #0
    aea2:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:685
    telnet_if->enabled = FNET_TRUE;
    aea4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    aea6:	2201      	movs	r2, #1
    aea8:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:687
    
    return (fnet_telnet_desc_t)telnet_if;
    aeaa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    aeac:	e006      	b.n	aebc <fnet_telnet_init+0x284>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:690

ERROR_2:
    closesocket(telnet_if->socket_listen);
    aeae:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    aeb0:	681b      	ldr	r3, [r3, #0]
    aeb2:	4618      	mov	r0, r3
    aeb4:	f7f9 fd8e 	bl	49d4 <closesocket>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:693

ERROR_1:
    return (fnet_telnet_desc_t)FNET_ERR;
    aeb8:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:694
}
    aebc:	4618      	mov	r0, r3
    aebe:	3738      	adds	r7, #56	; 0x38
    aec0:	46bd      	mov	sp, r7
    aec2:	bd80      	pop	{r7, pc}
    aec4:	00014084 	.word	0x00014084
    aec8:	100043a0 	.word	0x100043a0
    aecc:	0000a971 	.word	0x0000a971
    aed0:	0000a825 	.word	0x0000a825
    aed4:	0000a861 	.word	0x0000a861
    aed8:	0000a891 	.word	0x0000a891

0000aedc <fnet_telnet_release>:
fnet_telnet_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:702
* NAME: fnet_telnet_release
*
* DESCRIPTION: Telnet server release.
************************************************************************/
void fnet_telnet_release(fnet_telnet_desc_t desc)
{
    aedc:	b580      	push	{r7, lr}
    aede:	b086      	sub	sp, #24
    aee0:	af00      	add	r7, sp, #0
    aee2:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:703
    struct fnet_telnet_if   *telnet_if = (struct fnet_telnet_if *) desc;
    aee4:	687b      	ldr	r3, [r7, #4]
    aee6:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:706
    int                     i;
    
    if(telnet_if && (telnet_if->enabled == FNET_TRUE))
    aee8:	693b      	ldr	r3, [r7, #16]
    aeea:	2b00      	cmp	r3, #0
    aeec:	d03a      	beq.n	af64 <fnet_telnet_release+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:706 (discriminator 1)
    aeee:	693b      	ldr	r3, [r7, #16]
    aef0:	689b      	ldr	r3, [r3, #8]
    aef2:	2b01      	cmp	r3, #1
    aef4:	d136      	bne.n	af64 <fnet_telnet_release+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:708
    {
        for(i=0; i<FNET_CFG_TELNET_SESSION_MAX; i++) 
    aef6:	2300      	movs	r3, #0
    aef8:	617b      	str	r3, [r7, #20]
    aefa:	e023      	b.n	af44 <fnet_telnet_release+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:710
        {
            struct fnet_telnet_session_if   *session = &telnet_if->session[i];
    aefc:	697b      	ldr	r3, [r7, #20]
    aefe:	22c4      	movs	r2, #196	; 0xc4
    af00:	fb02 f303 	mul.w	r3, r2, r3
    af04:	3310      	adds	r3, #16
    af06:	693a      	ldr	r2, [r7, #16]
    af08:	4413      	add	r3, r2
    af0a:	3304      	adds	r3, #4
    af0c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:712
            
            closesocket(session->socket_foreign);        
    af0e:	68fb      	ldr	r3, [r7, #12]
    af10:	685b      	ldr	r3, [r3, #4]
    af12:	4618      	mov	r0, r3
    af14:	f7f9 fd5e 	bl	49d4 <closesocket>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:713
            session->socket_foreign = SOCKET_INVALID;
    af18:	68fb      	ldr	r3, [r7, #12]
    af1a:	f04f 32ff 	mov.w	r2, #4294967295
    af1e:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:715
            
            if(session->shell_descriptor)
    af20:	68fb      	ldr	r3, [r7, #12]
    af22:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    af24:	2b00      	cmp	r3, #0
    af26:	d007      	beq.n	af38 <fnet_telnet_release+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:717
            {
                fnet_shell_release(session->shell_descriptor);
    af28:	68fb      	ldr	r3, [r7, #12]
    af2a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    af2c:	4618      	mov	r0, r3
    af2e:	f000 fa7f 	bl	b430 <fnet_shell_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:718
                session->shell_descriptor = 0;
    af32:	68fb      	ldr	r3, [r7, #12]
    af34:	2200      	movs	r2, #0
    af36:	661a      	str	r2, [r3, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:720
            }
            session->state = FNET_TELNET_STATE_DISABLED;
    af38:	68fb      	ldr	r3, [r7, #12]
    af3a:	2200      	movs	r2, #0
    af3c:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:708
    struct fnet_telnet_if   *telnet_if = (struct fnet_telnet_if *) desc;
    int                     i;
    
    if(telnet_if && (telnet_if->enabled == FNET_TRUE))
    {
        for(i=0; i<FNET_CFG_TELNET_SESSION_MAX; i++) 
    af3e:	697b      	ldr	r3, [r7, #20]
    af40:	3301      	adds	r3, #1
    af42:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:708 (discriminator 1)
    af44:	697b      	ldr	r3, [r7, #20]
    af46:	2b00      	cmp	r3, #0
    af48:	ddd8      	ble.n	aefc <fnet_telnet_release+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:722
                fnet_shell_release(session->shell_descriptor);
                session->shell_descriptor = 0;
            }
            session->state = FNET_TELNET_STATE_DISABLED;
        }
        closesocket(telnet_if->socket_listen);
    af4a:	693b      	ldr	r3, [r7, #16]
    af4c:	681b      	ldr	r3, [r3, #0]
    af4e:	4618      	mov	r0, r3
    af50:	f7f9 fd40 	bl	49d4 <closesocket>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:723
        fnet_poll_service_unregister(telnet_if->service_descriptor); /* Delete service.*/
    af54:	693b      	ldr	r3, [r7, #16]
    af56:	685b      	ldr	r3, [r3, #4]
    af58:	4618      	mov	r0, r3
    af5a:	f001 f99d 	bl	c298 <fnet_poll_service_unregister>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:726

        
        telnet_if->enabled = FNET_FALSE;
    af5e:	693b      	ldr	r3, [r7, #16]
    af60:	2200      	movs	r2, #0
    af62:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:728
    }
}
    af64:	3718      	adds	r7, #24
    af66:	46bd      	mov	sp, r7
    af68:	bd80      	pop	{r7, pc}
    af6a:	bf00      	nop

0000af6c <fnet_telnet_close_session>:
fnet_telnet_close_session():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:736
* NAME: fnet_telnet_close_session
*
* DESCRIPTION: Close current Telnet server session.
************************************************************************/
void fnet_telnet_close_session(fnet_telnet_desc_t desc)
{
    af6c:	b480      	push	{r7}
    af6e:	b085      	sub	sp, #20
    af70:	af00      	add	r7, sp, #0
    af72:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:737
    struct fnet_telnet_if *telnet_if = (struct fnet_telnet_if *) desc;
    af74:	687b      	ldr	r3, [r7, #4]
    af76:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:739
    
    if(telnet_if && (telnet_if->enabled == FNET_TRUE) && telnet_if->session_active)
    af78:	68fb      	ldr	r3, [r7, #12]
    af7a:	2b00      	cmp	r3, #0
    af7c:	d00b      	beq.n	af96 <fnet_telnet_close_session+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:739 (discriminator 1)
    af7e:	68fb      	ldr	r3, [r7, #12]
    af80:	689b      	ldr	r3, [r3, #8]
    af82:	2b01      	cmp	r3, #1
    af84:	d107      	bne.n	af96 <fnet_telnet_close_session+0x2a>
    af86:	68fb      	ldr	r3, [r7, #12]
    af88:	691b      	ldr	r3, [r3, #16]
    af8a:	2b00      	cmp	r3, #0
    af8c:	d003      	beq.n	af96 <fnet_telnet_close_session+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:741
    {
        telnet_if->session_active->state = FNET_TELNET_STATE_CLOSING;
    af8e:	68fb      	ldr	r3, [r7, #12]
    af90:	691b      	ldr	r3, [r3, #16]
    af92:	2207      	movs	r2, #7
    af94:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:743
    }
}
    af96:	3714      	adds	r7, #20
    af98:	46bd      	mov	sp, r7
    af9a:	f85d 7b04 	ldr.w	r7, [sp], #4
    af9e:	4770      	bx	lr

0000afa0 <fnet_telnet_enabled>:
fnet_telnet_enabled():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:752
*
* DESCRIPTION: This function returns FNET_TRUE if the Telnet server 
*              is enabled/initialised.
************************************************************************/
int fnet_telnet_enabled(fnet_telnet_desc_t desc)
{
    afa0:	b480      	push	{r7}
    afa2:	b085      	sub	sp, #20
    afa4:	af00      	add	r7, sp, #0
    afa6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:753
    struct fnet_telnet_if   *telnet_if = (struct fnet_telnet_if *) desc;
    afa8:	687b      	ldr	r3, [r7, #4]
    afaa:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:756
    int                     result;
    
    if(telnet_if)
    afac:	68bb      	ldr	r3, [r7, #8]
    afae:	2b00      	cmp	r3, #0
    afb0:	d003      	beq.n	afba <fnet_telnet_enabled+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:757
        result = telnet_if->enabled;
    afb2:	68bb      	ldr	r3, [r7, #8]
    afb4:	689b      	ldr	r3, [r3, #8]
    afb6:	60fb      	str	r3, [r7, #12]
    afb8:	e001      	b.n	afbe <fnet_telnet_enabled+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:759
    else
        result = FNET_FALSE;    
    afba:	2300      	movs	r3, #0
    afbc:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:761
    
    return result;
    afbe:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/telnet/fnet_telnet.c:762
}
    afc0:	4618      	mov	r0, r3
    afc2:	3714      	adds	r7, #20
    afc4:	46bd      	mov	sp, r7
    afc6:	f85d 7b04 	ldr.w	r7, [sp], #4
    afca:	4770      	bx	lr

0000afcc <fnet_shell_echo>:
fnet_shell_echo():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:126
* NAME: fnet_shell_echo
*
* DESCRIPTION:
************************************************************************/
static void fnet_shell_echo( struct fnet_shell_if *shell_if, int character )
{
    afcc:	b580      	push	{r7, lr}
    afce:	b082      	sub	sp, #8
    afd0:	af00      	add	r7, sp, #0
    afd2:	6078      	str	r0, [r7, #4]
    afd4:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:127
    if(shell_if->echo)  
    afd6:	687b      	ldr	r3, [r7, #4]
    afd8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    afda:	2b00      	cmp	r3, #0
    afdc:	d005      	beq.n	afea <fnet_shell_echo+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:128
        fnet_serial_putchar(shell_if->stream, character);  
    afde:	687b      	ldr	r3, [r7, #4]
    afe0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    afe2:	4618      	mov	r0, r3
    afe4:	6839      	ldr	r1, [r7, #0]
    afe6:	f000 fc21 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:129
}
    afea:	3708      	adds	r7, #8
    afec:	46bd      	mov	sp, r7
    afee:	bd80      	pop	{r7, pc}

0000aff0 <fnet_shell_state_machine>:
fnet_shell_state_machine():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:137
* NAME: fnet_shell_state_machine
*
* DESCRIPTION: Shell state machine.
************************************************************************/
static void fnet_shell_state_machine( void *shell_if_p )
{
    aff0:	b580      	push	{r7, lr}
    aff2:	b098      	sub	sp, #96	; 0x60
    aff4:	af00      	add	r7, sp, #0
    aff6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:138
    struct fnet_shell_if * shell_if = (struct fnet_shell_if *)shell_if_p;
    aff8:	687b      	ldr	r3, [r7, #4]
    affa:	65bb      	str	r3, [r7, #88]	; 0x58
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:139
    const struct fnet_shell *shell = ((struct fnet_shell_if *)shell_if_p)->shell;
    affc:	687b      	ldr	r3, [r7, #4]
    affe:	681b      	ldr	r3, [r3, #0]
    b000:	657b      	str	r3, [r7, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:145

    int ch;
    int argc;
    char *argv[FNET_CFG_SHELL_ARGS_MAX + 1]; /* One extra for 0 terminator.*/
   
    switch(shell_if->state)
    b002:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b004:	7a1b      	ldrb	r3, [r3, #8]
    b006:	3b01      	subs	r3, #1
    b008:	2b04      	cmp	r3, #4
    b00a:	f200 818b 	bhi.w	b324 <fnet_shell_state_machine+0x334>
    b00e:	a201      	add	r2, pc, #4	; (adr r2, b014 <fnet_shell_state_machine+0x24>)
    b010:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    b014:	0000b029 	.word	0x0000b029
    b018:	0000b03f 	.word	0x0000b03f
    b01c:	0000b11f 	.word	0x0000b11f
    b020:	0000b2c9 	.word	0x0000b2c9
    b024:	0000b30f 	.word	0x0000b30f
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:150
    {

        case FNET_SHELL_STATE_INIT:
            /* Print the shell prompt. */
            fnet_shell_printf((fnet_shell_desc_t)shell_if_p, "%s", shell->prompt_str);
    b028:	687a      	ldr	r2, [r7, #4]
    b02a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    b02c:	685b      	ldr	r3, [r3, #4]
    b02e:	4610      	mov	r0, r2
    b030:	4991      	ldr	r1, [pc, #580]	; (b278 <fnet_shell_state_machine+0x288>)
    b032:	461a      	mov	r2, r3
    b034:	f000 fad2 	bl	b5dc <fnet_shell_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:158
            /* Debug: Prints mempool free memery (max posible allocated chunk) on every enter. */
            FNET_DEBUG_MEMPOOL("MAIN pool = %d (%d), FNET pool = %d (%d)", fnet_free_mem_status(), fnet_malloc_max(), fnet_free_mem_status_netbuf(), fnet_malloc_max_netbuf());
            /* Debug: Prints maximum stack usage. */
            FNET_DEBUG_STACK("Max Stack usage = %d", fnet_dbg_stack_max);

            shell_if->state = FNET_SHELL_STATE_GET_USER_INPUT;
    b038:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b03a:	2202      	movs	r2, #2
    b03c:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:161
        /*-------------------------------------*/    
        case FNET_SHELL_STATE_GET_USER_INPUT:
            if( (ch = fnet_serial_getchar(shell_if->stream)) != FNET_ERR) 
    b03e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b040:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    b042:	4618      	mov	r0, r3
    b044:	f000 fc02 	bl	b84c <fnet_serial_getchar>
    b048:	6538      	str	r0, [r7, #80]	; 0x50
    b04a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    b04c:	f1b3 3fff 	cmp.w	r3, #4294967295
    b050:	d064      	beq.n	b11c <fnet_shell_state_machine+0x12c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:164
            {
                /* CR or Buffer is full. */
                if((ch != FNET_SHELL_CR) && (shell_if->pos < shell_if->cmd_line_size))
    b052:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    b054:	2b0d      	cmp	r3, #13
    b056:	d046      	beq.n	b0e6 <fnet_shell_state_machine+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:164 (discriminator 1)
    b058:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b05a:	691b      	ldr	r3, [r3, #16]
    b05c:	461a      	mov	r2, r3
    b05e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b060:	6a1b      	ldr	r3, [r3, #32]
    b062:	429a      	cmp	r2, r3
    b064:	d23f      	bcs.n	b0e6 <fnet_shell_state_machine+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:166
                {
                    switch(ch)
    b066:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    b068:	2b08      	cmp	r3, #8
    b06a:	d001      	beq.n	b070 <fnet_shell_state_machine+0x80>
    b06c:	2b7f      	cmp	r3, #127	; 0x7f
    b06e:	d11a      	bne.n	b0a6 <fnet_shell_state_machine+0xb6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:170
                    {
                        case FNET_SHELL_BACKSPACE:
                        case FNET_SHELL_DELETE: 
                            if(shell_if->pos > 0)
    b070:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b072:	691b      	ldr	r3, [r3, #16]
    b074:	2b00      	cmp	r3, #0
    b076:	dd15      	ble.n	b0a4 <fnet_shell_state_machine+0xb4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:172
                            {
                                shell_if->pos -= 1;
    b078:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b07a:	691b      	ldr	r3, [r3, #16]
    b07c:	1e5a      	subs	r2, r3, #1
    b07e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b080:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:173
                                fnet_shell_echo(shell_if, FNET_SHELL_BACKSPACE);
    b082:	6db8      	ldr	r0, [r7, #88]	; 0x58
    b084:	2108      	movs	r1, #8
    b086:	f7ff ffa1 	bl	afcc <fnet_shell_echo>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:174
                                fnet_serial_putchar(shell_if->stream, ' ');
    b08a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b08c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    b08e:	4618      	mov	r0, r3
    b090:	2120      	movs	r1, #32
    b092:	f000 fbcb 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:175
                                fnet_serial_putchar(shell_if->stream, FNET_SHELL_BACKSPACE);
    b096:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b098:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    b09a:	4618      	mov	r0, r3
    b09c:	2108      	movs	r1, #8
    b09e:	f000 fbc5 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:177
                            }
                            break;
    b0a2:	e01f      	b.n	b0e4 <fnet_shell_state_machine+0xf4>
    b0a4:	e01e      	b.n	b0e4 <fnet_shell_state_machine+0xf4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:179
                        default:
                            if((shell_if->pos + 1) < shell_if->cmd_line_size)
    b0a6:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b0a8:	691b      	ldr	r3, [r3, #16]
    b0aa:	3301      	adds	r3, #1
    b0ac:	461a      	mov	r2, r3
    b0ae:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b0b0:	6a1b      	ldr	r3, [r3, #32]
    b0b2:	429a      	cmp	r2, r3
    b0b4:	d215      	bcs.n	b0e2 <fnet_shell_state_machine+0xf2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:182
                            {
                                /* Only printable characters. */
                                if((ch >= FNET_SHELL_SPACE) && (ch <= FNET_SHELL_DELETE))
    b0b6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    b0b8:	2b1f      	cmp	r3, #31
    b0ba:	dd12      	ble.n	b0e2 <fnet_shell_state_machine+0xf2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:182 (discriminator 1)
    b0bc:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    b0be:	2b7f      	cmp	r3, #127	; 0x7f
    b0c0:	dc0f      	bgt.n	b0e2 <fnet_shell_state_machine+0xf2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:184
                                {
                                    shell_if->cmd_line[shell_if->pos++] = (char)ch;
    b0c2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b0c4:	69da      	ldr	r2, [r3, #28]
    b0c6:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b0c8:	691b      	ldr	r3, [r3, #16]
    b0ca:	1c58      	adds	r0, r3, #1
    b0cc:	6db9      	ldr	r1, [r7, #88]	; 0x58
    b0ce:	6108      	str	r0, [r1, #16]
    b0d0:	4413      	add	r3, r2
    b0d2:	6d3a      	ldr	r2, [r7, #80]	; 0x50
    b0d4:	b2d2      	uxtb	r2, r2
    b0d6:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:185
                                    fnet_shell_echo(shell_if, ch);
    b0d8:	6db8      	ldr	r0, [r7, #88]	; 0x58
    b0da:	6d39      	ldr	r1, [r7, #80]	; 0x50
    b0dc:	f7ff ff76 	bl	afcc <fnet_shell_echo>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:188
                                }
                            }
                            break;
    b0e0:	e7ff      	b.n	b0e2 <fnet_shell_state_machine+0xf2>
    b0e2:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:190
                    }
                }
    b0e4:	e01a      	b.n	b11c <fnet_shell_state_machine+0x12c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:193
                else
                {
                    shell_if->cmd_line[shell_if->pos] = '\0';
    b0e6:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b0e8:	69da      	ldr	r2, [r3, #28]
    b0ea:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b0ec:	691b      	ldr	r3, [r3, #16]
    b0ee:	4413      	add	r3, r2
    b0f0:	2200      	movs	r2, #0
    b0f2:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:195
                 
                    fnet_shell_echo(shell_if, FNET_SHELL_CR);
    b0f4:	6db8      	ldr	r0, [r7, #88]	; 0x58
    b0f6:	210d      	movs	r1, #13
    b0f8:	f7ff ff68 	bl	afcc <fnet_shell_echo>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:196
                    fnet_shell_echo(shell_if, FNET_SHELL_LF);
    b0fc:	6db8      	ldr	r0, [r7, #88]	; 0x58
    b0fe:	210a      	movs	r1, #10
    b100:	f7ff ff64 	bl	afcc <fnet_shell_echo>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:198
                        
                    shell_if->state = FNET_SHELL_STATE_EXEC_CMD;
    b104:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b106:	2203      	movs	r2, #3
    b108:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:200
                    /* Reset pointers */
                    shell_if->cmd_line_begin = shell_if->cmd_line;
    b10a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b10c:	69da      	ldr	r2, [r3, #28]
    b10e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b110:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:201
                    shell_if->cmd_line_end = shell_if->cmd_line;
    b112:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b114:	69da      	ldr	r2, [r3, #28]
    b116:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b118:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:204
                    }
            }
            break;
    b11a:	e104      	b.n	b326 <fnet_shell_state_machine+0x336>
    b11c:	e103      	b.n	b326 <fnet_shell_state_machine+0x336>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:208
        /*-------------------------------------------*/    
        case FNET_SHELL_STATE_EXEC_CMD:
  
            shell_if->cmd_line_begin = shell_if->cmd_line_end; 
    b11e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b120:	699a      	ldr	r2, [r3, #24]
    b122:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b124:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:212
                   
            do
            {
                if(*shell_if->cmd_line_end!= '\0')
    b126:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b128:	699b      	ldr	r3, [r3, #24]
    b12a:	781b      	ldrb	r3, [r3, #0]
    b12c:	2b00      	cmp	r3, #0
    b12e:	d004      	beq.n	b13a <fnet_shell_state_machine+0x14a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:213
                    shell_if->cmd_line_end ++;
    b130:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b132:	699b      	ldr	r3, [r3, #24]
    b134:	1c5a      	adds	r2, r3, #1
    b136:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b138:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:215
                            
                shell_if->cmd_line_end = fnet_strchr( shell_if->cmd_line_end, FNET_SHELL_COMMAND_SPLITTER );
    b13a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b13c:	699b      	ldr	r3, [r3, #24]
    b13e:	4618      	mov	r0, r3
    b140:	213b      	movs	r1, #59	; 0x3b
    b142:	f7fa fec5 	bl	5ed0 <fnet_strchr>
    b146:	4602      	mov	r2, r0
    b148:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b14a:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:217
                        
                if((shell_if->cmd_line_end != 0) &&(shell_if->cmd_line_begin != shell_if->cmd_line_end) && (shell_if->cmd_line_end[-1] != FNET_SHELL_ESCAPE_SYMBOL)) /* Found new command symbol.*/
    b14c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b14e:	699b      	ldr	r3, [r3, #24]
    b150:	2b00      	cmp	r3, #0
    b152:	d013      	beq.n	b17c <fnet_shell_state_machine+0x18c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:217 (discriminator 1)
    b154:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b156:	695a      	ldr	r2, [r3, #20]
    b158:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b15a:	699b      	ldr	r3, [r3, #24]
    b15c:	429a      	cmp	r2, r3
    b15e:	d00d      	beq.n	b17c <fnet_shell_state_machine+0x18c>
    b160:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b162:	699b      	ldr	r3, [r3, #24]
    b164:	3b01      	subs	r3, #1
    b166:	781b      	ldrb	r3, [r3, #0]
    b168:	b25b      	sxtb	r3, r3
    b16a:	2b5c      	cmp	r3, #92	; 0x5c
    b16c:	d006      	beq.n	b17c <fnet_shell_state_machine+0x18c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:219
                {
                    *shell_if->cmd_line_end++ = '\0'; /* Set of end of line */
    b16e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b170:	699b      	ldr	r3, [r3, #24]
    b172:	1c59      	adds	r1, r3, #1
    b174:	6dba      	ldr	r2, [r7, #88]	; 0x58
    b176:	6191      	str	r1, [r2, #24]
    b178:	2200      	movs	r2, #0
    b17a:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:223
                        
                }
            }
            while(shell_if->cmd_line_end && (shell_if->cmd_line_end[-1] != '\0'));
    b17c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b17e:	699b      	ldr	r3, [r3, #24]
    b180:	2b00      	cmp	r3, #0
    b182:	d005      	beq.n	b190 <fnet_shell_state_machine+0x1a0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:223 (discriminator 1)
    b184:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b186:	699b      	ldr	r3, [r3, #24]
    b188:	3b01      	subs	r3, #1
    b18a:	781b      	ldrb	r3, [r3, #0]
    b18c:	2b00      	cmp	r3, #0
    b18e:	d1ca      	bne.n	b126 <fnet_shell_state_machine+0x136>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:226
                    
                    
            fnet_strncpy(shell_if->cmd_line, shell_if->cmd_line_begin, shell_if->cmd_line_size);
    b190:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b192:	69d9      	ldr	r1, [r3, #28]
    b194:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b196:	695a      	ldr	r2, [r3, #20]
    b198:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b19a:	6a1b      	ldr	r3, [r3, #32]
    b19c:	4608      	mov	r0, r1
    b19e:	4611      	mov	r1, r2
    b1a0:	461a      	mov	r2, r3
    b1a2:	f7fa fe31 	bl	5e08 <fnet_strncpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:228

            argc = fnet_shell_make_argv(shell_if->cmd_line, argv);
    b1a6:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b1a8:	69da      	ldr	r2, [r3, #28]
    b1aa:	f107 0308 	add.w	r3, r7, #8
    b1ae:	4610      	mov	r0, r2
    b1b0:	4619      	mov	r1, r3
    b1b2:	f000 f981 	bl	b4b8 <fnet_shell_make_argv>
    b1b6:	64f8      	str	r0, [r7, #76]	; 0x4c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:230

            if(argc)
    b1b8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    b1ba:	2b00      	cmp	r3, #0
    b1bc:	d072      	beq.n	b2a4 <fnet_shell_state_machine+0x2b4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:232
            {
                const struct fnet_shell_command *cur_command = shell->cmd_table;
    b1be:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    b1c0:	681b      	ldr	r3, [r3, #0]
    b1c2:	65fb      	str	r3, [r7, #92]	; 0x5c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:234

                while(cur_command->type)
    b1c4:	e05f      	b.n	b286 <fnet_shell_state_machine+0x296>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:236
                {
                    if(fnet_strcasecmp(cur_command->name, argv[0]) == 0) /* Command is found. */
    b1c6:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    b1c8:	685a      	ldr	r2, [r3, #4]
    b1ca:	68bb      	ldr	r3, [r7, #8]
    b1cc:	4610      	mov	r0, r2
    b1ce:	4619      	mov	r1, r3
    b1d0:	f7fb f816 	bl	6200 <fnet_strcasecmp>
    b1d4:	4603      	mov	r3, r0
    b1d6:	2b00      	cmp	r3, #0
    b1d8:	d152      	bne.n	b280 <fnet_shell_state_machine+0x290>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:238
                    {
                        if(((argc - 1) >= cur_command->min_args)
    b1da:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    b1dc:	1e5a      	subs	r2, r3, #1
    b1de:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    b1e0:	689b      	ldr	r3, [r3, #8]
    b1e2:	429a      	cmp	r2, r3
    b1e4:	db3f      	blt.n	b266 <fnet_shell_state_machine+0x276>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:239
                                       && ((argc - 1) <= cur_command->max_args))
    b1e6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    b1e8:	1e5a      	subs	r2, r3, #1
    b1ea:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    b1ec:	68db      	ldr	r3, [r3, #12]
    b1ee:	429a      	cmp	r2, r3
    b1f0:	dc39      	bgt.n	b266 <fnet_shell_state_machine+0x276>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:242
                        {
                            /* Shell. */
                            if(cur_command->type == FNET_SHELL_CMD_TYPE_SHELL) /* Command. */
    b1f2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    b1f4:	781b      	ldrb	r3, [r3, #0]
    b1f6:	2b03      	cmp	r3, #3
    b1f8:	d116      	bne.n	b228 <fnet_shell_state_machine+0x238>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:244
                            {
                                shell_if->cmd_line[0] = '\0'; /* Clear command line. */
    b1fa:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b1fc:	69db      	ldr	r3, [r3, #28]
    b1fe:	2200      	movs	r2, #0
    b200:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:246
                                        
                                shell = (struct fnet_shell *)cur_command->cmd_ptr;
    b202:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    b204:	691b      	ldr	r3, [r3, #16]
    b206:	657b      	str	r3, [r7, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:248

                                shell_if->shell = shell; /* Update current shell pointer. */
    b208:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b20a:	6d7a      	ldr	r2, [r7, #84]	; 0x54
    b20c:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:250

                                if(shell->shell_init)
    b20e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    b210:	689b      	ldr	r3, [r3, #8]
    b212:	2b00      	cmp	r3, #0
    b214:	d004      	beq.n	b220 <fnet_shell_state_machine+0x230>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:251
                                    shell->shell_init((fnet_shell_desc_t)shell_if_p);
    b216:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    b218:	689b      	ldr	r3, [r3, #8]
    b21a:	687a      	ldr	r2, [r7, #4]
    b21c:	4610      	mov	r0, r2
    b21e:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:253

                                cur_command = shell->cmd_table;/* => to avoid wrong command message. */
    b220:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    b222:	681b      	ldr	r3, [r3, #0]
    b224:	65fb      	str	r3, [r7, #92]	; 0x5c
    b226:	e01d      	b.n	b264 <fnet_shell_state_machine+0x274>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:257
                            }
                            else /* Command. */
                            {
                                if(cur_command->cmd_ptr)
    b228:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    b22a:	691b      	ldr	r3, [r3, #16]
    b22c:	2b00      	cmp	r3, #0
    b22e:	d007      	beq.n	b240 <fnet_shell_state_machine+0x250>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:258
                                            ((void(*)(fnet_shell_desc_t desc, int, char **))(cur_command->cmd_ptr))((fnet_shell_desc_t)shell_if, argc, argv);
    b230:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    b232:	691b      	ldr	r3, [r3, #16]
    b234:	6db9      	ldr	r1, [r7, #88]	; 0x58
    b236:	f107 0208 	add.w	r2, r7, #8
    b23a:	4608      	mov	r0, r1
    b23c:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
    b23e:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:261
                                
                                /* Check if the shell was released during command execution.*/
                                if(shell_if->state == FNET_SHELL_STATE_DISABLED)
    b240:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b242:	7a1b      	ldrb	r3, [r3, #8]
    b244:	2b00      	cmp	r3, #0
    b246:	d100      	bne.n	b24a <fnet_shell_state_machine+0x25a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:262
                                    return;
    b248:	e06d      	b.n	b326 <fnet_shell_state_machine+0x336>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:265
                                    
                                /* If user wants to exit from current shell.*/
                                if(cur_command->type == FNET_SHELL_CMD_TYPE_QUIT)
    b24a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    b24c:	781b      	ldrb	r3, [r3, #0]
    b24e:	2b02      	cmp	r3, #2
    b250:	d108      	bne.n	b264 <fnet_shell_state_machine+0x274>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:267
                                {
                                    shell_if->cmd_line[0] = '\0';
    b252:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b254:	69db      	ldr	r3, [r3, #28]
    b256:	2200      	movs	r2, #0
    b258:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:268
                                    shell_if->shell = shell_if->top_shell;
    b25a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b25c:	685a      	ldr	r2, [r3, #4]
    b25e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b260:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:242
                    {
                        if(((argc - 1) >= cur_command->min_args)
                                       && ((argc - 1) <= cur_command->max_args))
                        {
                            /* Shell. */
                            if(cur_command->type == FNET_SHELL_CMD_TYPE_SHELL) /* Command. */
    b262:	e008      	b.n	b276 <fnet_shell_state_machine+0x286>
    b264:	e007      	b.n	b276 <fnet_shell_state_machine+0x286>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:274
                                }
                            }
                        }
                        else /* Wrong command syntax. */
                        {
                                fnet_shell_println((fnet_shell_desc_t)shell_if_p, FNET_SHELL_ERR_SYNTAX, argv[0]);
    b266:	687a      	ldr	r2, [r7, #4]
    b268:	68bb      	ldr	r3, [r7, #8]
    b26a:	4610      	mov	r0, r2
    b26c:	4903      	ldr	r1, [pc, #12]	; (b27c <fnet_shell_state_machine+0x28c>)
    b26e:	461a      	mov	r2, r3
    b270:	f000 f9d8 	bl	b624 <fnet_shell_println>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:277
                        }
                                
                        break;
    b274:	e00b      	b.n	b28e <fnet_shell_state_machine+0x29e>
    b276:	e00a      	b.n	b28e <fnet_shell_state_machine+0x29e>
    b278:	00014088 	.word	0x00014088
    b27c:	0001408c 	.word	0x0001408c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:279
                    }
                    cur_command++; 
    b280:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    b282:	331c      	adds	r3, #28
    b284:	65fb      	str	r3, [r7, #92]	; 0x5c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:234 (discriminator 1)

            if(argc)
            {
                const struct fnet_shell_command *cur_command = shell->cmd_table;

                while(cur_command->type)
    b286:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    b288:	781b      	ldrb	r3, [r3, #0]
    b28a:	2b00      	cmp	r3, #0
    b28c:	d19b      	bne.n	b1c6 <fnet_shell_state_machine+0x1d6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:282
                        break;
                    }
                    cur_command++; 
                }

                if(cur_command->type == 0)
    b28e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    b290:	781b      	ldrb	r3, [r3, #0]
    b292:	2b00      	cmp	r3, #0
    b294:	d106      	bne.n	b2a4 <fnet_shell_state_machine+0x2b4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:284
                {
                    fnet_shell_println((fnet_shell_desc_t)shell_if_p, FNET_SHELL_ERR_CMD, argv[0]);
    b296:	687a      	ldr	r2, [r7, #4]
    b298:	68bb      	ldr	r3, [r7, #8]
    b29a:	4610      	mov	r0, r2
    b29c:	4923      	ldr	r1, [pc, #140]	; (b32c <fnet_shell_state_machine+0x33c>)
    b29e:	461a      	mov	r2, r3
    b2a0:	f000 f9c0 	bl	b624 <fnet_shell_println>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:289
                }

            }
             
            if(shell_if->_blocked)
    b2a4:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b2a6:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    b2aa:	2b00      	cmp	r3, #0
    b2ac:	d003      	beq.n	b2b6 <fnet_shell_state_machine+0x2c6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:290
                shell_if->state = FNET_SHELL_STATE_BLOCKED;    
    b2ae:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b2b0:	2204      	movs	r2, #4
    b2b2:	721a      	strb	r2, [r3, #8]
    b2b4:	e007      	b.n	b2c6 <fnet_shell_state_machine+0x2d6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:291
            else if(shell_if->cmd_line_end == 0)
    b2b6:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b2b8:	699b      	ldr	r3, [r3, #24]
    b2ba:	2b00      	cmp	r3, #0
    b2bc:	d103      	bne.n	b2c6 <fnet_shell_state_machine+0x2d6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:292
                shell_if->state = FNET_SHELL_STATE_END_CMD;
    b2be:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b2c0:	2205      	movs	r2, #5
    b2c2:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:294

            break;
    b2c4:	e02f      	b.n	b326 <fnet_shell_state_machine+0x336>
    b2c6:	e02e      	b.n	b326 <fnet_shell_state_machine+0x336>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:297
        /*----------------------------------*/    
        case FNET_SHELL_STATE_BLOCKED:
            if(shell_if->_blocked)
    b2c8:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b2ca:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    b2ce:	2b00      	cmp	r3, #0
    b2d0:	d010      	beq.n	b2f4 <fnet_shell_state_machine+0x304>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:299
            {
                if(fnet_shell_ctrlc ((fnet_shell_desc_t)shell_if_p))
    b2d2:	687b      	ldr	r3, [r7, #4]
    b2d4:	4618      	mov	r0, r3
    b2d6:	f000 fa5b 	bl	b790 <fnet_shell_ctrlc>
    b2da:	4603      	mov	r3, r0
    b2dc:	2b00      	cmp	r3, #0
    b2de:	d015      	beq.n	b30c <fnet_shell_state_machine+0x31c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:301
                {
                    shell_if->_exit_blocked((fnet_shell_desc_t) shell_if);
    b2e0:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b2e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    b2e4:	6dba      	ldr	r2, [r7, #88]	; 0x58
    b2e6:	4610      	mov	r0, r2
    b2e8:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:302
                    shell_if->_blocked = 0;    
    b2ea:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b2ec:	2200      	movs	r2, #0
    b2ee:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:309
            }
            else if(shell_if->cmd_line_end == 0)
                shell_if->state = FNET_SHELL_STATE_END_CMD;
            else
                shell_if->state = FNET_SHELL_STATE_EXEC_CMD;
            break;        
    b2f2:	e018      	b.n	b326 <fnet_shell_state_machine+0x336>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:305
                {
                    shell_if->_exit_blocked((fnet_shell_desc_t) shell_if);
                    shell_if->_blocked = 0;    
                }    
            }
            else if(shell_if->cmd_line_end == 0)
    b2f4:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b2f6:	699b      	ldr	r3, [r3, #24]
    b2f8:	2b00      	cmp	r3, #0
    b2fa:	d103      	bne.n	b304 <fnet_shell_state_machine+0x314>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:306
                shell_if->state = FNET_SHELL_STATE_END_CMD;
    b2fc:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b2fe:	2205      	movs	r2, #5
    b300:	721a      	strb	r2, [r3, #8]
    b302:	e003      	b.n	b30c <fnet_shell_state_machine+0x31c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:308
            else
                shell_if->state = FNET_SHELL_STATE_EXEC_CMD;
    b304:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b306:	2203      	movs	r2, #3
    b308:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:309
            break;        
    b30a:	e00c      	b.n	b326 <fnet_shell_state_machine+0x336>
    b30c:	e00b      	b.n	b326 <fnet_shell_state_machine+0x336>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:312
        /*----------------------------------*/    
        case FNET_SHELL_STATE_END_CMD:
            shell_if->state = FNET_SHELL_STATE_INIT;
    b30e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b310:	2201      	movs	r2, #1
    b312:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:313
            shell_if->pos = 0;
    b314:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b316:	2200      	movs	r2, #0
    b318:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:314
            shell_if->cmd_line[0] = 0;
    b31a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    b31c:	69db      	ldr	r3, [r3, #28]
    b31e:	2200      	movs	r2, #0
    b320:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:315
            break;
    b322:	e000      	b.n	b326 <fnet_shell_state_machine+0x336>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:317
        default:
            break;           
    b324:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:319
    }                
}
    b326:	3760      	adds	r7, #96	; 0x60
    b328:	46bd      	mov	sp, r7
    b32a:	bd80      	pop	{r7, pc}
    b32c:	000140ac 	.word	0x000140ac

0000b330 <fnet_shell_init>:
fnet_shell_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:327
* NAME: fnet_shell_init
*
* DESCRIPTION: 
************************************************************************/
fnet_shell_desc_t fnet_shell_init( struct fnet_shell_params * params)
{
    b330:	b580      	push	{r7, lr}
    b332:	b084      	sub	sp, #16
    b334:	af00      	add	r7, sp, #0
    b336:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:330
    int i;

    struct fnet_shell_if *shell_if = 0;
    b338:	2300      	movs	r3, #0
    b33a:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:333
    
    /* Check input parameters. */
    if((params == 0) || (params->cmd_line_buffer == 0 ) || (params->cmd_line_buffer_size == 0 ) )
    b33c:	687b      	ldr	r3, [r7, #4]
    b33e:	2b00      	cmp	r3, #0
    b340:	d06a      	beq.n	b418 <fnet_shell_init+0xe8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:333 (discriminator 1)
    b342:	687b      	ldr	r3, [r7, #4]
    b344:	685b      	ldr	r3, [r3, #4]
    b346:	2b00      	cmp	r3, #0
    b348:	d066      	beq.n	b418 <fnet_shell_init+0xe8>
    b34a:	687b      	ldr	r3, [r7, #4]
    b34c:	689b      	ldr	r3, [r3, #8]
    b34e:	2b00      	cmp	r3, #0
    b350:	d062      	beq.n	b418 <fnet_shell_init+0xe8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:340
        FNET_DEBUG_SHELL("Shell: Wrong init parameters.");
        goto ERROR;
    }

    /* Try to find free Shell service. */
    for(i=0; i<FNET_CFG_SHELL_MAX; i++)
    b352:	2300      	movs	r3, #0
    b354:	60fb      	str	r3, [r7, #12]
    b356:	e014      	b.n	b382 <fnet_shell_init+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:342
    {
        if(shell_if_list[i].state == FNET_SHELL_STATE_DISABLED)
    b358:	4a32      	ldr	r2, [pc, #200]	; (b424 <fnet_shell_init+0xf4>)
    b35a:	68fb      	ldr	r3, [r7, #12]
    b35c:	2134      	movs	r1, #52	; 0x34
    b35e:	fb01 f303 	mul.w	r3, r1, r3
    b362:	4413      	add	r3, r2
    b364:	3308      	adds	r3, #8
    b366:	781b      	ldrb	r3, [r3, #0]
    b368:	2b00      	cmp	r3, #0
    b36a:	d107      	bne.n	b37c <fnet_shell_init+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:344
        {
            shell_if = &shell_if_list[i];
    b36c:	68fb      	ldr	r3, [r7, #12]
    b36e:	2234      	movs	r2, #52	; 0x34
    b370:	fb02 f203 	mul.w	r2, r2, r3
    b374:	4b2b      	ldr	r3, [pc, #172]	; (b424 <fnet_shell_init+0xf4>)
    b376:	4413      	add	r3, r2
    b378:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:345
            break; 
    b37a:	e005      	b.n	b388 <fnet_shell_init+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:340
        FNET_DEBUG_SHELL("Shell: Wrong init parameters.");
        goto ERROR;
    }

    /* Try to find free Shell service. */
    for(i=0; i<FNET_CFG_SHELL_MAX; i++)
    b37c:	68fb      	ldr	r3, [r7, #12]
    b37e:	3301      	adds	r3, #1
    b380:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:340 (discriminator 1)
    b382:	68fb      	ldr	r3, [r7, #12]
    b384:	2b01      	cmp	r3, #1
    b386:	dde7      	ble.n	b358 <fnet_shell_init+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:350
            break; 
        }
    }

    /* Is Shell already initialized. */
    if(shell_if == 0)
    b388:	68bb      	ldr	r3, [r7, #8]
    b38a:	2b00      	cmp	r3, #0
    b38c:	d100      	bne.n	b390 <fnet_shell_init+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:353
    {
        FNET_DEBUG_SHELL("SHELL: No free Sheell service.");
        goto ERROR;
    b38e:	e043      	b.n	b418 <fnet_shell_init+0xe8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:356
    }

    shell_if->shell = params->shell;
    b390:	687b      	ldr	r3, [r7, #4]
    b392:	681a      	ldr	r2, [r3, #0]
    b394:	68bb      	ldr	r3, [r7, #8]
    b396:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:357
    shell_if->top_shell = shell_if->shell;
    b398:	68bb      	ldr	r3, [r7, #8]
    b39a:	681a      	ldr	r2, [r3, #0]
    b39c:	68bb      	ldr	r3, [r7, #8]
    b39e:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:358
    shell_if->cmd_line = params->cmd_line_buffer;
    b3a0:	687b      	ldr	r3, [r7, #4]
    b3a2:	685a      	ldr	r2, [r3, #4]
    b3a4:	68bb      	ldr	r3, [r7, #8]
    b3a6:	61da      	str	r2, [r3, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:359
    shell_if->cmd_line_size = params->cmd_line_buffer_size;
    b3a8:	687b      	ldr	r3, [r7, #4]
    b3aa:	689a      	ldr	r2, [r3, #8]
    b3ac:	68bb      	ldr	r3, [r7, #8]
    b3ae:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:360
    shell_if->echo = params->echo;
    b3b0:	687b      	ldr	r3, [r7, #4]
    b3b2:	691a      	ldr	r2, [r3, #16]
    b3b4:	68bb      	ldr	r3, [r7, #8]
    b3b6:	631a      	str	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:362
     
    if(params->stream)
    b3b8:	687b      	ldr	r3, [r7, #4]
    b3ba:	68db      	ldr	r3, [r3, #12]
    b3bc:	2b00      	cmp	r3, #0
    b3be:	d004      	beq.n	b3ca <fnet_shell_init+0x9a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:363
        shell_if->stream = params->stream;
    b3c0:	687b      	ldr	r3, [r7, #4]
    b3c2:	68da      	ldr	r2, [r3, #12]
    b3c4:	68bb      	ldr	r3, [r7, #8]
    b3c6:	62da      	str	r2, [r3, #44]	; 0x2c
    b3c8:	e002      	b.n	b3d0 <fnet_shell_init+0xa0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:365
    else
        shell_if->stream = FNET_SERIAL_STREAM_DEFAULT;
    b3ca:	68bb      	ldr	r3, [r7, #8]
    b3cc:	4a16      	ldr	r2, [pc, #88]	; (b428 <fnet_shell_init+0xf8>)
    b3ce:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:367
     
    shell_if->service_descriptor = fnet_poll_service_register(fnet_shell_state_machine, (void *) shell_if);
    b3d0:	4816      	ldr	r0, [pc, #88]	; (b42c <fnet_shell_init+0xfc>)
    b3d2:	68b9      	ldr	r1, [r7, #8]
    b3d4:	f000 ff24 	bl	c220 <fnet_poll_service_register>
    b3d8:	4602      	mov	r2, r0
    b3da:	68bb      	ldr	r3, [r7, #8]
    b3dc:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:368
    if(shell_if->service_descriptor == (fnet_poll_desc_t)FNET_ERR)
    b3de:	68bb      	ldr	r3, [r7, #8]
    b3e0:	68db      	ldr	r3, [r3, #12]
    b3e2:	f1b3 3fff 	cmp.w	r3, #4294967295
    b3e6:	d100      	bne.n	b3ea <fnet_shell_init+0xba>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:371
    {
        FNET_DEBUG_SHELL("Shell: Service registration error.");
        goto ERROR;
    b3e8:	e016      	b.n	b418 <fnet_shell_init+0xe8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:375
    }
  
     /* Reset parameters. */
    shell_if->state = FNET_SHELL_STATE_INIT;
    b3ea:	68bb      	ldr	r3, [r7, #8]
    b3ec:	2201      	movs	r2, #1
    b3ee:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:376
    shell_if->pos = 0;
    b3f0:	68bb      	ldr	r3, [r7, #8]
    b3f2:	2200      	movs	r2, #0
    b3f4:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:377
    shell_if->cmd_line[0] = 0;
    b3f6:	68bb      	ldr	r3, [r7, #8]
    b3f8:	69db      	ldr	r3, [r3, #28]
    b3fa:	2200      	movs	r2, #0
    b3fc:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:379

    if(shell_if->shell->shell_init)
    b3fe:	68bb      	ldr	r3, [r7, #8]
    b400:	681b      	ldr	r3, [r3, #0]
    b402:	689b      	ldr	r3, [r3, #8]
    b404:	2b00      	cmp	r3, #0
    b406:	d005      	beq.n	b414 <fnet_shell_init+0xe4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:380
        shell_if->shell->shell_init((fnet_shell_desc_t)shell_if); 
    b408:	68bb      	ldr	r3, [r7, #8]
    b40a:	681b      	ldr	r3, [r3, #0]
    b40c:	689b      	ldr	r3, [r3, #8]
    b40e:	68ba      	ldr	r2, [r7, #8]
    b410:	4610      	mov	r0, r2
    b412:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:382
    
    return (fnet_shell_desc_t)shell_if;
    b414:	68bb      	ldr	r3, [r7, #8]
    b416:	e001      	b.n	b41c <fnet_shell_init+0xec>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:384
ERROR:
    return FNET_ERR;     
    b418:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:385
}
    b41c:	4618      	mov	r0, r3
    b41e:	3710      	adds	r7, #16
    b420:	46bd      	mov	sp, r7
    b422:	bd80      	pop	{r7, pc}
    b424:	10004478 	.word	0x10004478
    b428:	000140dc 	.word	0x000140dc
    b42c:	0000aff1 	.word	0x0000aff1

0000b430 <fnet_shell_release>:
fnet_shell_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:393
* NAME: fnet_shell_release
*
* DESCRIPTION: 
************************************************************************/
void fnet_shell_release(fnet_shell_desc_t desc)
{
    b430:	b580      	push	{r7, lr}
    b432:	b084      	sub	sp, #16
    b434:	af00      	add	r7, sp, #0
    b436:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:394
    struct fnet_shell_if *shell_if = (struct fnet_shell_if *) desc;
    b438:	687b      	ldr	r3, [r7, #4]
    b43a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:395
    if(shell_if && (shell_if->state != FNET_SHELL_STATE_DISABLED))
    b43c:	68fb      	ldr	r3, [r7, #12]
    b43e:	2b00      	cmp	r3, #0
    b440:	d00b      	beq.n	b45a <fnet_shell_release+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:395 (discriminator 1)
    b442:	68fb      	ldr	r3, [r7, #12]
    b444:	7a1b      	ldrb	r3, [r3, #8]
    b446:	2b00      	cmp	r3, #0
    b448:	d007      	beq.n	b45a <fnet_shell_release+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:397
    {
        fnet_poll_service_unregister(shell_if->service_descriptor); /* Delete service.*/
    b44a:	68fb      	ldr	r3, [r7, #12]
    b44c:	68db      	ldr	r3, [r3, #12]
    b44e:	4618      	mov	r0, r3
    b450:	f000 ff22 	bl	c298 <fnet_poll_service_unregister>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:398
        shell_if->state = FNET_SHELL_STATE_DISABLED;    
    b454:	68fb      	ldr	r3, [r7, #12]
    b456:	2200      	movs	r2, #0
    b458:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:400
    }
}
    b45a:	3710      	adds	r7, #16
    b45c:	46bd      	mov	sp, r7
    b45e:	bd80      	pop	{r7, pc}

0000b460 <fnet_shell_esc_clear>:
fnet_shell_esc_clear():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:409
* NAME: fnet_shell_esc_clear
*
* DESCRIPTION: Eliminate escape symbols.
************************************************************************/
static void fnet_shell_esc_clear(char * str)
{
    b460:	b480      	push	{r7}
    b462:	b085      	sub	sp, #20
    b464:	af00      	add	r7, sp, #0
    b466:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:410
    char * dest = str ;
    b468:	687b      	ldr	r3, [r7, #4]
    b46a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:411
    char * src = str;
    b46c:	687b      	ldr	r3, [r7, #4]
    b46e:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:413

    while(*src != 0)
    b470:	e016      	b.n	b4a0 <fnet_shell_esc_clear+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:415
    {
        if((*src == FNET_SHELL_ESCAPE_SYMBOL) && (src[1] != FNET_SHELL_ESCAPE_SYMBOL))
    b472:	68bb      	ldr	r3, [r7, #8]
    b474:	781b      	ldrb	r3, [r3, #0]
    b476:	b25b      	sxtb	r3, r3
    b478:	2b5c      	cmp	r3, #92	; 0x5c
    b47a:	d109      	bne.n	b490 <fnet_shell_esc_clear+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:415 (discriminator 1)
    b47c:	68bb      	ldr	r3, [r7, #8]
    b47e:	3301      	adds	r3, #1
    b480:	781b      	ldrb	r3, [r3, #0]
    b482:	b25b      	sxtb	r3, r3
    b484:	2b5c      	cmp	r3, #92	; 0x5c
    b486:	d003      	beq.n	b490 <fnet_shell_esc_clear+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:417
        {
            src++; 
    b488:	68bb      	ldr	r3, [r7, #8]
    b48a:	3301      	adds	r3, #1
    b48c:	60bb      	str	r3, [r7, #8]
    b48e:	e007      	b.n	b4a0 <fnet_shell_esc_clear+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:420
        }
        else
            *dest++ = *src++;
    b490:	68fb      	ldr	r3, [r7, #12]
    b492:	1c5a      	adds	r2, r3, #1
    b494:	60fa      	str	r2, [r7, #12]
    b496:	68ba      	ldr	r2, [r7, #8]
    b498:	1c51      	adds	r1, r2, #1
    b49a:	60b9      	str	r1, [r7, #8]
    b49c:	7812      	ldrb	r2, [r2, #0]
    b49e:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:413 (discriminator 1)
static void fnet_shell_esc_clear(char * str)
{
    char * dest = str ;
    char * src = str;

    while(*src != 0)
    b4a0:	68bb      	ldr	r3, [r7, #8]
    b4a2:	781b      	ldrb	r3, [r3, #0]
    b4a4:	2b00      	cmp	r3, #0
    b4a6:	d1e4      	bne.n	b472 <fnet_shell_esc_clear+0x12>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:422
            src++; 
        }
        else
            *dest++ = *src++;
    }
    *dest= '\0';
    b4a8:	68fb      	ldr	r3, [r7, #12]
    b4aa:	2200      	movs	r2, #0
    b4ac:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:423
}
    b4ae:	3714      	adds	r7, #20
    b4b0:	46bd      	mov	sp, r7
    b4b2:	f85d 7b04 	ldr.w	r7, [sp], #4
    b4b6:	4770      	bx	lr

0000b4b8 <fnet_shell_make_argv>:
fnet_shell_make_argv():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:432
*
* DESCRIPTION: Calculates the quantity of arguments and splits them array
*              argv[]
************************************************************************/
static int fnet_shell_make_argv( char *cmdline, char *argv [] )
{
    b4b8:	b580      	push	{r7, lr}
    b4ba:	b086      	sub	sp, #24
    b4bc:	af00      	add	r7, sp, #0
    b4be:	6078      	str	r0, [r7, #4]
    b4c0:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:439
    int i;
    int in_text_flag;
    int qouted;

    /* Break cmdline into strings.*/
    argc = 0;
    b4c2:	2300      	movs	r3, #0
    b4c4:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:440
    in_text_flag = 0;
    b4c6:	2300      	movs	r3, #0
    b4c8:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:441
    qouted = 0;
    b4ca:	2300      	movs	r3, #0
    b4cc:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:443

    if( cmdline && argv)
    b4ce:	687b      	ldr	r3, [r7, #4]
    b4d0:	2b00      	cmp	r3, #0
    b4d2:	d07e      	beq.n	b5d2 <fnet_shell_make_argv+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:443 (discriminator 1)
    b4d4:	683b      	ldr	r3, [r7, #0]
    b4d6:	2b00      	cmp	r3, #0
    b4d8:	d07b      	beq.n	b5d2 <fnet_shell_make_argv+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:446
    { 
    
        for(i=0; cmdline[i] != '\0'; i++)
    b4da:	2300      	movs	r3, #0
    b4dc:	613b      	str	r3, [r7, #16]
    b4de:	e06c      	b.n	b5ba <fnet_shell_make_argv+0x102>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:448
        {
            if(((qouted == 0) && ((cmdline[i] == ' ') || (cmdline[i] == '\t')))
    b4e0:	68bb      	ldr	r3, [r7, #8]
    b4e2:	2b00      	cmp	r3, #0
    b4e4:	d10d      	bne.n	b502 <fnet_shell_make_argv+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:448 (discriminator 1)
    b4e6:	693b      	ldr	r3, [r7, #16]
    b4e8:	687a      	ldr	r2, [r7, #4]
    b4ea:	4413      	add	r3, r2
    b4ec:	781b      	ldrb	r3, [r3, #0]
    b4ee:	b25b      	sxtb	r3, r3
    b4f0:	2b20      	cmp	r3, #32
    b4f2:	d01b      	beq.n	b52c <fnet_shell_make_argv+0x74>
    b4f4:	693b      	ldr	r3, [r7, #16]
    b4f6:	687a      	ldr	r2, [r7, #4]
    b4f8:	4413      	add	r3, r2
    b4fa:	781b      	ldrb	r3, [r3, #0]
    b4fc:	b25b      	sxtb	r3, r3
    b4fe:	2b09      	cmp	r3, #9
    b500:	d014      	beq.n	b52c <fnet_shell_make_argv+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:449
             ||((qouted == 1) && ((cmdline[i] == FNET_SHELL_QUOTE_SYMBOL)&&((i==0)||(cmdline[i-1] != FNET_SHELL_ESCAPE_SYMBOL))  )   ) )
    b502:	68bb      	ldr	r3, [r7, #8]
    b504:	2b01      	cmp	r3, #1
    b506:	d12a      	bne.n	b55e <fnet_shell_make_argv+0xa6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:449 (discriminator 1)
    b508:	693b      	ldr	r3, [r7, #16]
    b50a:	687a      	ldr	r2, [r7, #4]
    b50c:	4413      	add	r3, r2
    b50e:	781b      	ldrb	r3, [r3, #0]
    b510:	b25b      	sxtb	r3, r3
    b512:	2b27      	cmp	r3, #39	; 0x27
    b514:	d123      	bne.n	b55e <fnet_shell_make_argv+0xa6>
    b516:	693b      	ldr	r3, [r7, #16]
    b518:	2b00      	cmp	r3, #0
    b51a:	d007      	beq.n	b52c <fnet_shell_make_argv+0x74>
    b51c:	693b      	ldr	r3, [r7, #16]
    b51e:	3b01      	subs	r3, #1
    b520:	687a      	ldr	r2, [r7, #4]
    b522:	4413      	add	r3, r2
    b524:	781b      	ldrb	r3, [r3, #0]
    b526:	b25b      	sxtb	r3, r3
    b528:	2b5c      	cmp	r3, #92	; 0x5c
    b52a:	d018      	beq.n	b55e <fnet_shell_make_argv+0xa6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:451
            {
                if(in_text_flag)
    b52c:	68fb      	ldr	r3, [r7, #12]
    b52e:	2b00      	cmp	r3, #0
    b530:	d014      	beq.n	b55c <fnet_shell_make_argv+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:454
                {
                    /* Set end of command line argument.*/
                    cmdline[i] = '\0';
    b532:	693b      	ldr	r3, [r7, #16]
    b534:	687a      	ldr	r2, [r7, #4]
    b536:	4413      	add	r3, r2
    b538:	2200      	movs	r2, #0
    b53a:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:455
                    in_text_flag = 0;
    b53c:	2300      	movs	r3, #0
    b53e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:456
                    qouted = 0;
    b540:	2300      	movs	r3, #0
    b542:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:457
                    fnet_shell_esc_clear(argv[argc-1]); /* Clear escape symbols. */
    b544:	697b      	ldr	r3, [r7, #20]
    b546:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    b54a:	3b01      	subs	r3, #1
    b54c:	009b      	lsls	r3, r3, #2
    b54e:	683a      	ldr	r2, [r7, #0]
    b550:	4413      	add	r3, r2
    b552:	681b      	ldr	r3, [r3, #0]
    b554:	4618      	mov	r0, r3
    b556:	f7ff ff83 	bl	b460 <fnet_shell_esc_clear>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:451
        for(i=0; cmdline[i] != '\0'; i++)
        {
            if(((qouted == 0) && ((cmdline[i] == ' ') || (cmdline[i] == '\t')))
             ||((qouted == 1) && ((cmdline[i] == FNET_SHELL_QUOTE_SYMBOL)&&((i==0)||(cmdline[i-1] != FNET_SHELL_ESCAPE_SYMBOL))  )   ) )
            {
                if(in_text_flag)
    b55a:	e02b      	b.n	b5b4 <fnet_shell_make_argv+0xfc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:451 (discriminator 1)
    b55c:	e02a      	b.n	b5b4 <fnet_shell_make_argv+0xfc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:463
                }
            }
            else
            {
                /* Got non-whitespace character. */
                if(!in_text_flag)
    b55e:	68fb      	ldr	r3, [r7, #12]
    b560:	2b00      	cmp	r3, #0
    b562:	d127      	bne.n	b5b4 <fnet_shell_make_argv+0xfc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:466
                {
                    /* Start of an argument. */
                    in_text_flag = 1;
    b564:	2301      	movs	r3, #1
    b566:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:468

                    if(argc < FNET_CFG_SHELL_ARGS_MAX)
    b568:	697b      	ldr	r3, [r7, #20]
    b56a:	2b0f      	cmp	r3, #15
    b56c:	dc21      	bgt.n	b5b2 <fnet_shell_make_argv+0xfa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:470
                    {
                        if((cmdline[i] == FNET_SHELL_QUOTE_SYMBOL)&&((i==0)||(cmdline[i-1] != FNET_SHELL_ESCAPE_SYMBOL)))
    b56e:	693b      	ldr	r3, [r7, #16]
    b570:	687a      	ldr	r2, [r7, #4]
    b572:	4413      	add	r3, r2
    b574:	781b      	ldrb	r3, [r3, #0]
    b576:	b25b      	sxtb	r3, r3
    b578:	2b27      	cmp	r3, #39	; 0x27
    b57a:	d10c      	bne.n	b596 <fnet_shell_make_argv+0xde>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:470 (discriminator 1)
    b57c:	693b      	ldr	r3, [r7, #16]
    b57e:	2b00      	cmp	r3, #0
    b580:	d007      	beq.n	b592 <fnet_shell_make_argv+0xda>
    b582:	693b      	ldr	r3, [r7, #16]
    b584:	3b01      	subs	r3, #1
    b586:	687a      	ldr	r2, [r7, #4]
    b588:	4413      	add	r3, r2
    b58a:	781b      	ldrb	r3, [r3, #0]
    b58c:	b25b      	sxtb	r3, r3
    b58e:	2b5c      	cmp	r3, #92	; 0x5c
    b590:	d001      	beq.n	b596 <fnet_shell_make_argv+0xde>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:471
                            qouted = 1;    
    b592:	2301      	movs	r3, #1
    b594:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:473

                        argv[argc] = &cmdline[i+qouted];
    b596:	697b      	ldr	r3, [r7, #20]
    b598:	009b      	lsls	r3, r3, #2
    b59a:	683a      	ldr	r2, [r7, #0]
    b59c:	4413      	add	r3, r2
    b59e:	6939      	ldr	r1, [r7, #16]
    b5a0:	68ba      	ldr	r2, [r7, #8]
    b5a2:	440a      	add	r2, r1
    b5a4:	6879      	ldr	r1, [r7, #4]
    b5a6:	440a      	add	r2, r1
    b5a8:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:475

                        argc++;
    b5aa:	697b      	ldr	r3, [r7, #20]
    b5ac:	3301      	adds	r3, #1
    b5ae:	617b      	str	r3, [r7, #20]
    b5b0:	e000      	b.n	b5b4 <fnet_shell_make_argv+0xfc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:478
                    }
                    else /* Return argc.*/
                        break;
    b5b2:	e008      	b.n	b5c6 <fnet_shell_make_argv+0x10e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:446
    qouted = 0;

    if( cmdline && argv)
    { 
    
        for(i=0; cmdline[i] != '\0'; i++)
    b5b4:	693b      	ldr	r3, [r7, #16]
    b5b6:	3301      	adds	r3, #1
    b5b8:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:446 (discriminator 1)
    b5ba:	693b      	ldr	r3, [r7, #16]
    b5bc:	687a      	ldr	r2, [r7, #4]
    b5be:	4413      	add	r3, r2
    b5c0:	781b      	ldrb	r3, [r3, #0]
    b5c2:	2b00      	cmp	r3, #0
    b5c4:	d18c      	bne.n	b4e0 <fnet_shell_make_argv+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:483
                        break;
                }
            }
        }

        argv[argc] = 0;
    b5c6:	697b      	ldr	r3, [r7, #20]
    b5c8:	009b      	lsls	r3, r3, #2
    b5ca:	683a      	ldr	r2, [r7, #0]
    b5cc:	4413      	add	r3, r2
    b5ce:	2200      	movs	r2, #0
    b5d0:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:486
    }
    
    return argc;
    b5d2:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:487
}
    b5d4:	4618      	mov	r0, r3
    b5d6:	3718      	adds	r7, #24
    b5d8:	46bd      	mov	sp, r7
    b5da:	bd80      	pop	{r7, pc}

0000b5dc <fnet_shell_printf>:
fnet_shell_printf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:497
* NAME: fnet_shell_printf
*
* DESCRIPTION:
************************************************************************/
int fnet_shell_printf(fnet_shell_desc_t desc, const char *format, ... )
{
    b5dc:	b40e      	push	{r1, r2, r3}
    b5de:	b580      	push	{r7, lr}
    b5e0:	b087      	sub	sp, #28
    b5e2:	af00      	add	r7, sp, #0
    b5e4:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:499
    fnet_va_list ap;
    int result = 0;
    b5e6:	2300      	movs	r3, #0
    b5e8:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:500
    struct fnet_shell_if *shell_if = (struct fnet_shell_if *) desc;
    b5ea:	687b      	ldr	r3, [r7, #4]
    b5ec:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:502
    
    if(shell_if)
    b5ee:	693b      	ldr	r3, [r7, #16]
    b5f0:	2b00      	cmp	r3, #0
    b5f2:	d00f      	beq.n	b614 <fnet_shell_printf+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:505
    {
        /* Initialize the pointer to the variable length argument list. */
        fnet_va_start(ap, format);
    b5f4:	f107 0328 	add.w	r3, r7, #40	; 0x28
    b5f8:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:506
        result = fnet_serial_vprintf(shell_if->stream, format, ap);
    b5fa:	693b      	ldr	r3, [r7, #16]
    b5fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    b5fe:	4618      	mov	r0, r3
    b600:	6a79      	ldr	r1, [r7, #36]	; 0x24
    b602:	68fa      	ldr	r2, [r7, #12]
    b604:	f000 f9e4 	bl	b9d0 <fnet_serial_vprintf>
    b608:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:508
        
        fnet_serial_flush(shell_if->stream);
    b60a:	693b      	ldr	r3, [r7, #16]
    b60c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    b60e:	4618      	mov	r0, r3
    b610:	f000 f92c 	bl	b86c <fnet_serial_flush>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:511
    }
    
    return result;
    b614:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:513

}
    b616:	4618      	mov	r0, r3
    b618:	371c      	adds	r7, #28
    b61a:	46bd      	mov	sp, r7
    b61c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
    b620:	b003      	add	sp, #12
    b622:	4770      	bx	lr

0000b624 <fnet_shell_println>:
fnet_shell_println():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:521
* NAME: fnet_shell_println
*
* DESCRIPTION:
************************************************************************/
int fnet_shell_println(fnet_shell_desc_t desc, const char *format, ... )
{
    b624:	b40e      	push	{r1, r2, r3}
    b626:	b580      	push	{r7, lr}
    b628:	b087      	sub	sp, #28
    b62a:	af00      	add	r7, sp, #0
    b62c:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:523
    fnet_va_list ap;
    int result = 0;
    b62e:	2300      	movs	r3, #0
    b630:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:524
    struct fnet_shell_if *shell_if = (struct fnet_shell_if *) desc;
    b632:	687b      	ldr	r3, [r7, #4]
    b634:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:526
    
    if(shell_if)
    b636:	693b      	ldr	r3, [r7, #16]
    b638:	2b00      	cmp	r3, #0
    b63a:	d017      	beq.n	b66c <fnet_shell_println+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:529
    {
        /* Initialize the pointer to the variable length argument list. */
        fnet_va_start(ap, format);
    b63c:	f107 0328 	add.w	r3, r7, #40	; 0x28
    b640:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:530
        result = fnet_serial_vprintf(shell_if->stream, format, ap);
    b642:	693b      	ldr	r3, [r7, #16]
    b644:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    b646:	4618      	mov	r0, r3
    b648:	6a79      	ldr	r1, [r7, #36]	; 0x24
    b64a:	68fa      	ldr	r2, [r7, #12]
    b64c:	f000 f9c0 	bl	b9d0 <fnet_serial_vprintf>
    b650:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:531
        result += fnet_shell_printf(desc, "\n"); /* Add new line.*/
    b652:	6878      	ldr	r0, [r7, #4]
    b654:	4909      	ldr	r1, [pc, #36]	; (b67c <fnet_shell_println+0x58>)
    b656:	f7ff ffc1 	bl	b5dc <fnet_shell_printf>
    b65a:	4603      	mov	r3, r0
    b65c:	697a      	ldr	r2, [r7, #20]
    b65e:	4413      	add	r3, r2
    b660:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:533
        
        fnet_serial_flush(shell_if->stream);
    b662:	693b      	ldr	r3, [r7, #16]
    b664:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    b666:	4618      	mov	r0, r3
    b668:	f000 f900 	bl	b86c <fnet_serial_flush>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:536
    }
    
    return result;
    b66c:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:538

}
    b66e:	4618      	mov	r0, r3
    b670:	371c      	adds	r7, #28
    b672:	46bd      	mov	sp, r7
    b674:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
    b678:	b003      	add	sp, #12
    b67a:	4770      	bx	lr
    b67c:	000140c8 	.word	0x000140c8

0000b680 <fnet_shell_putchar>:
fnet_shell_putchar():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:546
* NAME: fnet_shell_putchar
*
* DESCRIPTION:
************************************************************************/
void fnet_shell_putchar(fnet_shell_desc_t desc, int character)
{
    b680:	b580      	push	{r7, lr}
    b682:	b084      	sub	sp, #16
    b684:	af00      	add	r7, sp, #0
    b686:	6078      	str	r0, [r7, #4]
    b688:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:547
    struct fnet_shell_if *shell_if = (struct fnet_shell_if *) desc;
    b68a:	687b      	ldr	r3, [r7, #4]
    b68c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:549
    
    if(shell_if)
    b68e:	68fb      	ldr	r3, [r7, #12]
    b690:	2b00      	cmp	r3, #0
    b692:	d00a      	beq.n	b6aa <fnet_shell_putchar+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:551
    {
        fnet_serial_putchar(shell_if->stream, character);
    b694:	68fb      	ldr	r3, [r7, #12]
    b696:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    b698:	4618      	mov	r0, r3
    b69a:	6839      	ldr	r1, [r7, #0]
    b69c:	f000 f8c6 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:552
        fnet_serial_flush(shell_if->stream);
    b6a0:	68fb      	ldr	r3, [r7, #12]
    b6a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    b6a4:	4618      	mov	r0, r3
    b6a6:	f000 f8e1 	bl	b86c <fnet_serial_flush>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:554
    }
}
    b6aa:	3710      	adds	r7, #16
    b6ac:	46bd      	mov	sp, r7
    b6ae:	bd80      	pop	{r7, pc}

0000b6b0 <fnet_shell_getchar>:
fnet_shell_getchar():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:562
* NAME: fnet_shell_getchar
*
* DESCRIPTION:
************************************************************************/
int fnet_shell_getchar(fnet_shell_desc_t desc)
{
    b6b0:	b580      	push	{r7, lr}
    b6b2:	b084      	sub	sp, #16
    b6b4:	af00      	add	r7, sp, #0
    b6b6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:564
    int result;
    struct fnet_shell_if *shell_if = (struct fnet_shell_if *) desc;
    b6b8:	687b      	ldr	r3, [r7, #4]
    b6ba:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:566
    
    if(shell_if)
    b6bc:	68bb      	ldr	r3, [r7, #8]
    b6be:	2b00      	cmp	r3, #0
    b6c0:	d006      	beq.n	b6d0 <fnet_shell_getchar+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:567
        result = fnet_serial_getchar(shell_if->stream);
    b6c2:	68bb      	ldr	r3, [r7, #8]
    b6c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    b6c6:	4618      	mov	r0, r3
    b6c8:	f000 f8c0 	bl	b84c <fnet_serial_getchar>
    b6cc:	60f8      	str	r0, [r7, #12]
    b6ce:	e002      	b.n	b6d6 <fnet_shell_getchar+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:569
    else
        result = FNET_ERR;
    b6d0:	f04f 33ff 	mov.w	r3, #4294967295
    b6d4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:571
    
    return result;
    b6d6:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:572
}
    b6d8:	4618      	mov	r0, r3
    b6da:	3710      	adds	r7, #16
    b6dc:	46bd      	mov	sp, r7
    b6de:	bd80      	pop	{r7, pc}

0000b6e0 <fnet_shell_script>:
fnet_shell_script():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:580
* NAME: fnet_shell_script
*
* DESCRIPTION: Executes command-line script.
************************************************************************/
void fnet_shell_script(fnet_shell_desc_t desc, char *script )
{
    b6e0:	b580      	push	{r7, lr}
    b6e2:	b084      	sub	sp, #16
    b6e4:	af00      	add	r7, sp, #0
    b6e6:	6078      	str	r0, [r7, #4]
    b6e8:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:581
    struct fnet_shell_if *shell_if = (struct fnet_shell_if *) desc;
    b6ea:	687b      	ldr	r3, [r7, #4]
    b6ec:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:583
    
    if(shell_if)
    b6ee:	68fb      	ldr	r3, [r7, #12]
    b6f0:	2b00      	cmp	r3, #0
    b6f2:	d013      	beq.n	b71c <fnet_shell_script+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:586
    {
    
        fnet_strncpy( shell_if->cmd_line, script, shell_if->cmd_line_size );
    b6f4:	68fb      	ldr	r3, [r7, #12]
    b6f6:	69da      	ldr	r2, [r3, #28]
    b6f8:	68fb      	ldr	r3, [r7, #12]
    b6fa:	6a1b      	ldr	r3, [r3, #32]
    b6fc:	4610      	mov	r0, r2
    b6fe:	6839      	ldr	r1, [r7, #0]
    b700:	461a      	mov	r2, r3
    b702:	f7fa fb81 	bl	5e08 <fnet_strncpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:587
        shell_if->state = FNET_SHELL_STATE_EXEC_CMD;
    b706:	68fb      	ldr	r3, [r7, #12]
    b708:	2203      	movs	r2, #3
    b70a:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:589
        /* Reset pointers */
        shell_if->cmd_line_begin = shell_if->cmd_line;
    b70c:	68fb      	ldr	r3, [r7, #12]
    b70e:	69da      	ldr	r2, [r3, #28]
    b710:	68fb      	ldr	r3, [r7, #12]
    b712:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:590
        shell_if->cmd_line_end = shell_if->cmd_line;
    b714:	68fb      	ldr	r3, [r7, #12]
    b716:	69da      	ldr	r2, [r3, #28]
    b718:	68fb      	ldr	r3, [r7, #12]
    b71a:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:592
    }                        
}
    b71c:	3710      	adds	r7, #16
    b71e:	46bd      	mov	sp, r7
    b720:	bd80      	pop	{r7, pc}
    b722:	bf00      	nop

0000b724 <fnet_shell_script_release>:
fnet_shell_script_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:600
* NAME: fnet_shell_script_release
*
* DESCRIPTION: 
************************************************************************/
void fnet_shell_script_release( fnet_shell_desc_t desc)
{
    b724:	b580      	push	{r7, lr}
    b726:	b084      	sub	sp, #16
    b728:	af00      	add	r7, sp, #0
    b72a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:601
    struct fnet_shell_if *shell_if = (struct fnet_shell_if *) desc;
    b72c:	687b      	ldr	r3, [r7, #4]
    b72e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:603
    
    if(shell_if)
    b730:	68fb      	ldr	r3, [r7, #12]
    b732:	2b00      	cmp	r3, #0
    b734:	d007      	beq.n	b746 <fnet_shell_script_release+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:605
    {
       fnet_memset_zero(shell_if->cmd_line, shell_if->cmd_line_size );
    b736:	68fb      	ldr	r3, [r7, #12]
    b738:	69da      	ldr	r2, [r3, #28]
    b73a:	68fb      	ldr	r3, [r7, #12]
    b73c:	6a1b      	ldr	r3, [r3, #32]
    b73e:	4610      	mov	r0, r2
    b740:	4619      	mov	r1, r3
    b742:	f7fa fa63 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:607
    }
}
    b746:	3710      	adds	r7, #16
    b748:	46bd      	mov	sp, r7
    b74a:	bd80      	pop	{r7, pc}

0000b74c <fnet_shell_help>:
fnet_shell_help():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:615
* NAME: fnet_shell_help
*
* DESCRIPTION: Shows command shell help.
************************************************************************/
void fnet_shell_help( fnet_shell_desc_t desc)
{
    b74c:	b580      	push	{r7, lr}
    b74e:	b086      	sub	sp, #24
    b750:	af02      	add	r7, sp, #8
    b752:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:616
    const struct fnet_shell *shell = ((struct fnet_shell_if *)desc)->shell;
    b754:	687b      	ldr	r3, [r7, #4]
    b756:	681b      	ldr	r3, [r3, #0]
    b758:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:617
    const struct fnet_shell_command *cur_command = shell->cmd_table;
    b75a:	68bb      	ldr	r3, [r7, #8]
    b75c:	681b      	ldr	r3, [r3, #0]
    b75e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:619

    while(cur_command->type)
    b760:	e00d      	b.n	b77e <fnet_shell_help+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:621
    {
        fnet_shell_println(desc, FNET_CFG_SHELL_HELP_FORMAT,
    b762:	68fb      	ldr	r3, [r7, #12]
    b764:	685a      	ldr	r2, [r3, #4]
    b766:	68fb      	ldr	r3, [r7, #12]
    b768:	699b      	ldr	r3, [r3, #24]
    b76a:	68f9      	ldr	r1, [r7, #12]
    b76c:	6949      	ldr	r1, [r1, #20]
    b76e:	9100      	str	r1, [sp, #0]
    b770:	6878      	ldr	r0, [r7, #4]
    b772:	4906      	ldr	r1, [pc, #24]	; (b78c <fnet_shell_help+0x40>)
    b774:	f7ff ff56 	bl	b624 <fnet_shell_println>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:625
                        cur_command->name,
                        cur_command->syntax,
                        cur_command->description);
        cur_command++;                 
    b778:	68fb      	ldr	r3, [r7, #12]
    b77a:	331c      	adds	r3, #28
    b77c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:619 (discriminator 1)
void fnet_shell_help( fnet_shell_desc_t desc)
{
    const struct fnet_shell *shell = ((struct fnet_shell_if *)desc)->shell;
    const struct fnet_shell_command *cur_command = shell->cmd_table;

    while(cur_command->type)
    b77e:	68fb      	ldr	r3, [r7, #12]
    b780:	781b      	ldrb	r3, [r3, #0]
    b782:	2b00      	cmp	r3, #0
    b784:	d1ed      	bne.n	b762 <fnet_shell_help+0x16>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:627
                        cur_command->name,
                        cur_command->syntax,
                        cur_command->description);
        cur_command++;                 
    }
}
    b786:	3710      	adds	r7, #16
    b788:	46bd      	mov	sp, r7
    b78a:	bd80      	pop	{r7, pc}
    b78c:	000140cc 	.word	0x000140cc

0000b790 <fnet_shell_ctrlc>:
fnet_shell_ctrlc():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:646
 * It can be used by blocking shell commands to detect that a user wants to 
 * terminate the command activity.
 *
 ******************************************************************************/
int fnet_shell_ctrlc (fnet_shell_desc_t desc)
{
    b790:	b580      	push	{r7, lr}
    b792:	b086      	sub	sp, #24
    b794:	af00      	add	r7, sp, #0
    b796:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:648
    int                     res;
    struct fnet_shell_if    *shell_if = (struct fnet_shell_if *) desc;
    b798:	687b      	ldr	r3, [r7, #4]
    b79a:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:649
    int                     ch = fnet_serial_getchar(shell_if->stream);
    b79c:	693b      	ldr	r3, [r7, #16]
    b79e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    b7a0:	4618      	mov	r0, r3
    b7a2:	f000 f853 	bl	b84c <fnet_serial_getchar>
    b7a6:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:651
    
    if(ch == FNET_SHELL_CTRLC)
    b7a8:	68fb      	ldr	r3, [r7, #12]
    b7aa:	2b03      	cmp	r3, #3
    b7ac:	d102      	bne.n	b7b4 <fnet_shell_ctrlc+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:652
        res = 1;
    b7ae:	2301      	movs	r3, #1
    b7b0:	617b      	str	r3, [r7, #20]
    b7b2:	e001      	b.n	b7b8 <fnet_shell_ctrlc+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:654
    else
        res = 0;
    b7b4:	2300      	movs	r3, #0
    b7b6:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:656

    return res;
    b7b8:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:657
}
    b7ba:	4618      	mov	r0, r3
    b7bc:	3718      	adds	r7, #24
    b7be:	46bd      	mov	sp, r7
    b7c0:	bd80      	pop	{r7, pc}
    b7c2:	bf00      	nop

0000b7c4 <fnet_shell_block>:
fnet_shell_block():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:665
* NAME: fnet_shell_block
*
* DESCRIPTION: 
************************************************************************/
int fnet_shell_block( fnet_shell_desc_t desc, void (*on_ctrlc)(fnet_shell_desc_t shl_desc))
{
    b7c4:	b480      	push	{r7}
    b7c6:	b085      	sub	sp, #20
    b7c8:	af00      	add	r7, sp, #0
    b7ca:	6078      	str	r0, [r7, #4]
    b7cc:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:666
    struct fnet_shell_if *shell_if = (struct fnet_shell_if *) desc;
    b7ce:	687b      	ldr	r3, [r7, #4]
    b7d0:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:669
    int res;

    if(shell_if && on_ctrlc )
    b7d2:	68bb      	ldr	r3, [r7, #8]
    b7d4:	2b00      	cmp	r3, #0
    b7d6:	d00c      	beq.n	b7f2 <fnet_shell_block+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:669 (discriminator 1)
    b7d8:	683b      	ldr	r3, [r7, #0]
    b7da:	2b00      	cmp	r3, #0
    b7dc:	d009      	beq.n	b7f2 <fnet_shell_block+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:671
    {
        shell_if->_blocked = 1;
    b7de:	68bb      	ldr	r3, [r7, #8]
    b7e0:	2201      	movs	r2, #1
    b7e2:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:672
        shell_if->_exit_blocked = on_ctrlc;
    b7e6:	68bb      	ldr	r3, [r7, #8]
    b7e8:	683a      	ldr	r2, [r7, #0]
    b7ea:	629a      	str	r2, [r3, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:673
        res = FNET_OK;
    b7ec:	2300      	movs	r3, #0
    b7ee:	60fb      	str	r3, [r7, #12]
    b7f0:	e002      	b.n	b7f8 <fnet_shell_block+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:676
    }
    else
        res = FNET_ERR;
    b7f2:	f04f 33ff 	mov.w	r3, #4294967295
    b7f6:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:678
   
    return res;
    b7f8:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:679
}
    b7fa:	4618      	mov	r0, r3
    b7fc:	3714      	adds	r7, #20
    b7fe:	46bd      	mov	sp, r7
    b800:	f85d 7b04 	ldr.w	r7, [sp], #4
    b804:	4770      	bx	lr
    b806:	bf00      	nop

0000b808 <fnet_shell_unblock>:
fnet_shell_unblock():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:687
* NAME: fnet_shell_unblock
*
* DESCRIPTION: 
************************************************************************/
void fnet_shell_unblock( fnet_shell_desc_t desc)
{
    b808:	b480      	push	{r7}
    b80a:	b085      	sub	sp, #20
    b80c:	af00      	add	r7, sp, #0
    b80e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:688
    struct fnet_shell_if *shell_if = (struct fnet_shell_if *) desc;
    b810:	687b      	ldr	r3, [r7, #4]
    b812:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:690
    
    if(shell_if)
    b814:	68fb      	ldr	r3, [r7, #12]
    b816:	2b00      	cmp	r3, #0
    b818:	d003      	beq.n	b822 <fnet_shell_unblock+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:692
    {
        shell_if->_blocked = 0;
    b81a:	68fb      	ldr	r3, [r7, #12]
    b81c:	2200      	movs	r2, #0
    b81e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/shell/fnet_shell.c:694
    }
}
    b822:	3714      	adds	r7, #20
    b824:	46bd      	mov	sp, r7
    b826:	f85d 7b04 	ldr.w	r7, [sp], #4
    b82a:	4770      	bx	lr

0000b82c <fnet_serial_putchar>:
fnet_serial_putchar():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:102
    fnet_cpu_serial_getchar
};

/********************************************************************/
void fnet_serial_putchar(fnet_serial_stream_t stream, int character)
{
    b82c:	b580      	push	{r7, lr}
    b82e:	b082      	sub	sp, #8
    b830:	af00      	add	r7, sp, #0
    b832:	6078      	str	r0, [r7, #4]
    b834:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:103
    stream->putchar(stream->id, character);
    b836:	687b      	ldr	r3, [r7, #4]
    b838:	685b      	ldr	r3, [r3, #4]
    b83a:	687a      	ldr	r2, [r7, #4]
    b83c:	6812      	ldr	r2, [r2, #0]
    b83e:	4610      	mov	r0, r2
    b840:	6839      	ldr	r1, [r7, #0]
    b842:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:104
}
    b844:	3708      	adds	r7, #8
    b846:	46bd      	mov	sp, r7
    b848:	bd80      	pop	{r7, pc}
    b84a:	bf00      	nop

0000b84c <fnet_serial_getchar>:
fnet_serial_getchar():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:108

/********************************************************************/
int fnet_serial_getchar(fnet_serial_stream_t stream)
{
    b84c:	b580      	push	{r7, lr}
    b84e:	b082      	sub	sp, #8
    b850:	af00      	add	r7, sp, #0
    b852:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:109
    return stream->getchar(stream->id);
    b854:	687b      	ldr	r3, [r7, #4]
    b856:	689b      	ldr	r3, [r3, #8]
    b858:	687a      	ldr	r2, [r7, #4]
    b85a:	6812      	ldr	r2, [r2, #0]
    b85c:	4610      	mov	r0, r2
    b85e:	4798      	blx	r3
    b860:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:110
}
    b862:	4618      	mov	r0, r3
    b864:	3708      	adds	r7, #8
    b866:	46bd      	mov	sp, r7
    b868:	bd80      	pop	{r7, pc}
    b86a:	bf00      	nop

0000b86c <fnet_serial_flush>:
fnet_serial_flush():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:114

/********************************************************************/
void fnet_serial_flush(fnet_serial_stream_t stream)
{
    b86c:	b580      	push	{r7, lr}
    b86e:	b082      	sub	sp, #8
    b870:	af00      	add	r7, sp, #0
    b872:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:115
    if(stream->flush)
    b874:	687b      	ldr	r3, [r7, #4]
    b876:	68db      	ldr	r3, [r3, #12]
    b878:	2b00      	cmp	r3, #0
    b87a:	d005      	beq.n	b888 <fnet_serial_flush+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:116
        stream->flush(stream->id);
    b87c:	687b      	ldr	r3, [r7, #4]
    b87e:	68db      	ldr	r3, [r3, #12]
    b880:	687a      	ldr	r2, [r7, #4]
    b882:	6812      	ldr	r2, [r2, #0]
    b884:	4610      	mov	r0, r2
    b886:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:117
}
    b888:	3708      	adds	r7, #8
    b88a:	46bd      	mov	sp, r7
    b88c:	bd80      	pop	{r7, pc}
    b88e:	bf00      	nop

0000b890 <fnet_serial_printk_mknumstr>:
fnet_serial_printk_mknumstr():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:140
#define FNET_SERIAL_IS_FLAG_ZERO(a)     (a & FNET_SERIAL_FLAGS_ZERO)
#define FNET_SERIAL_IS_FLAG_POUND(a)    (a & FNET_SERIAL_FLAGS_POUND)

/********************************************************************/
static int fnet_serial_printk_mknumstr( char *numstr, void *nump, int neg, int radix )
{
    b890:	b480      	push	{r7}
    b892:	b08d      	sub	sp, #52	; 0x34
    b894:	af00      	add	r7, sp, #0
    b896:	60f8      	str	r0, [r7, #12]
    b898:	60b9      	str	r1, [r7, #8]
    b89a:	607a      	str	r2, [r7, #4]
    b89c:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:147
    unsigned int ua, ub, uc;

    int nlen;
    char *nstrp;

    nlen = 0;
    b89e:	2300      	movs	r3, #0
    b8a0:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:148
    nstrp = numstr;
    b8a2:	68fb      	ldr	r3, [r7, #12]
    b8a4:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:149
    *nstrp++ = '\0';
    b8a6:	69bb      	ldr	r3, [r7, #24]
    b8a8:	1c5a      	adds	r2, r3, #1
    b8aa:	61ba      	str	r2, [r7, #24]
    b8ac:	2200      	movs	r2, #0
    b8ae:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:151

    if(neg)
    b8b0:	687b      	ldr	r3, [r7, #4]
    b8b2:	2b00      	cmp	r3, #0
    b8b4:	d033      	beq.n	b91e <fnet_serial_printk_mknumstr+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:153
    {
        a = *(int *)nump;
    b8b6:	68bb      	ldr	r3, [r7, #8]
    b8b8:	681b      	ldr	r3, [r3, #0]
    b8ba:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:155

        if(a == 0)
    b8bc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    b8be:	2b00      	cmp	r3, #0
    b8c0:	d106      	bne.n	b8d0 <fnet_serial_printk_mknumstr+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:157
        {
            *nstrp = '0';
    b8c2:	69bb      	ldr	r3, [r7, #24]
    b8c4:	2230      	movs	r2, #48	; 0x30
    b8c6:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:158
            ++nlen;
    b8c8:	69fb      	ldr	r3, [r7, #28]
    b8ca:	3301      	adds	r3, #1
    b8cc:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:159
            goto done;
    b8ce:	e058      	b.n	b982 <fnet_serial_printk_mknumstr+0xf2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:162
        }

        while(a != 0)
    b8d0:	e021      	b.n	b916 <fnet_serial_printk_mknumstr+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:164
        {
            b = (int)a / (int)radix;
    b8d2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    b8d4:	683b      	ldr	r3, [r7, #0]
    b8d6:	fb92 f3f3 	sdiv	r3, r2, r3
    b8da:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:165
            c = (int)a - ((int)b * (int)radix);
    b8dc:	697b      	ldr	r3, [r7, #20]
    b8de:	683a      	ldr	r2, [r7, #0]
    b8e0:	fb02 f303 	mul.w	r3, r2, r3
    b8e4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    b8e6:	1ad3      	subs	r3, r2, r3
    b8e8:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:167

            if(c < 0)
    b8ea:	6abb      	ldr	r3, [r7, #40]	; 0x28
    b8ec:	2b00      	cmp	r3, #0
    b8ee:	da04      	bge.n	b8fa <fnet_serial_printk_mknumstr+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:169
            {
                c = ~c + 1 + '0';
    b8f0:	6abb      	ldr	r3, [r7, #40]	; 0x28
    b8f2:	f1c3 0330 	rsb	r3, r3, #48	; 0x30
    b8f6:	62bb      	str	r3, [r7, #40]	; 0x28
    b8f8:	e002      	b.n	b900 <fnet_serial_printk_mknumstr+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:173
            }
            else
            {
                c = c + '0';
    b8fa:	6abb      	ldr	r3, [r7, #40]	; 0x28
    b8fc:	3330      	adds	r3, #48	; 0x30
    b8fe:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:176
            }

            a = b;
    b900:	697b      	ldr	r3, [r7, #20]
    b902:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:177
            *nstrp++ = (char)c;
    b904:	69bb      	ldr	r3, [r7, #24]
    b906:	1c5a      	adds	r2, r3, #1
    b908:	61ba      	str	r2, [r7, #24]
    b90a:	6aba      	ldr	r2, [r7, #40]	; 0x28
    b90c:	b2d2      	uxtb	r2, r2
    b90e:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:178
            ++nlen;
    b910:	69fb      	ldr	r3, [r7, #28]
    b912:	3301      	adds	r3, #1
    b914:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:162 (discriminator 1)
            *nstrp = '0';
            ++nlen;
            goto done;
        }

        while(a != 0)
    b916:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    b918:	2b00      	cmp	r3, #0
    b91a:	d1da      	bne.n	b8d2 <fnet_serial_printk_mknumstr+0x42>
    b91c:	e031      	b.n	b982 <fnet_serial_printk_mknumstr+0xf2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:183
            ++nlen;
        }
    }
    else
    {
        ua = *(unsigned int *)nump;
    b91e:	68bb      	ldr	r3, [r7, #8]
    b920:	681b      	ldr	r3, [r3, #0]
    b922:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:185

        if(ua == 0)
    b924:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    b926:	2b00      	cmp	r3, #0
    b928:	d106      	bne.n	b938 <fnet_serial_printk_mknumstr+0xa8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:187
        {
            *nstrp = '0';
    b92a:	69bb      	ldr	r3, [r7, #24]
    b92c:	2230      	movs	r2, #48	; 0x30
    b92e:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:188
            ++nlen;
    b930:	69fb      	ldr	r3, [r7, #28]
    b932:	3301      	adds	r3, #1
    b934:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:189
            goto done;
    b936:	e024      	b.n	b982 <fnet_serial_printk_mknumstr+0xf2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:192
        }

        while(ua != 0)
    b938:	e020      	b.n	b97c <fnet_serial_printk_mknumstr+0xec>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:194
        {
            ub = (unsigned int)ua / (unsigned int)radix;
    b93a:	683b      	ldr	r3, [r7, #0]
    b93c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    b93e:	fbb2 f3f3 	udiv	r3, r2, r3
    b942:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:195
            uc = (unsigned int)ua - ((unsigned int)ub * (unsigned int)radix);
    b944:	683b      	ldr	r3, [r7, #0]
    b946:	693a      	ldr	r2, [r7, #16]
    b948:	fb02 f303 	mul.w	r3, r2, r3
    b94c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    b94e:	1ad3      	subs	r3, r2, r3
    b950:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:197

            if(uc < 10)
    b952:	6a3b      	ldr	r3, [r7, #32]
    b954:	2b09      	cmp	r3, #9
    b956:	d803      	bhi.n	b960 <fnet_serial_printk_mknumstr+0xd0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:199
            {
                uc = uc + '0';
    b958:	6a3b      	ldr	r3, [r7, #32]
    b95a:	3330      	adds	r3, #48	; 0x30
    b95c:	623b      	str	r3, [r7, #32]
    b95e:	e002      	b.n	b966 <fnet_serial_printk_mknumstr+0xd6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:203
            }
            else
            {
                uc = uc - 10 + 'a';
    b960:	6a3b      	ldr	r3, [r7, #32]
    b962:	3357      	adds	r3, #87	; 0x57
    b964:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:206
            }

            ua = ub;
    b966:	693b      	ldr	r3, [r7, #16]
    b968:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:207
            *nstrp++ = (char)uc;
    b96a:	69bb      	ldr	r3, [r7, #24]
    b96c:	1c5a      	adds	r2, r3, #1
    b96e:	61ba      	str	r2, [r7, #24]
    b970:	6a3a      	ldr	r2, [r7, #32]
    b972:	b2d2      	uxtb	r2, r2
    b974:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:208
            ++nlen;
    b976:	69fb      	ldr	r3, [r7, #28]
    b978:	3301      	adds	r3, #1
    b97a:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:192 (discriminator 1)
            *nstrp = '0';
            ++nlen;
            goto done;
        }

        while(ua != 0)
    b97c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    b97e:	2b00      	cmp	r3, #0
    b980:	d1db      	bne.n	b93a <fnet_serial_printk_mknumstr+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:213
            ++nlen;
        }
    }

    done:
    return nlen;
    b982:	69fb      	ldr	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:214
}
    b984:	4618      	mov	r0, r3
    b986:	3734      	adds	r7, #52	; 0x34
    b988:	46bd      	mov	sp, r7
    b98a:	f85d 7b04 	ldr.w	r7, [sp], #4
    b98e:	4770      	bx	lr

0000b990 <fnet_serial_printk_pad>:
fnet_serial_printk_pad():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:219

/********************************************************************/
static void fnet_serial_printk_pad(char c, fnet_serial_stream_t stream, int curlen, int field_width, int *count )

{
    b990:	b580      	push	{r7, lr}
    b992:	b086      	sub	sp, #24
    b994:	af00      	add	r7, sp, #0
    b996:	60b9      	str	r1, [r7, #8]
    b998:	607a      	str	r2, [r7, #4]
    b99a:	603b      	str	r3, [r7, #0]
    b99c:	4603      	mov	r3, r0
    b99e:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:222
    int i;

    for (i = curlen; i < field_width; i++)
    b9a0:	687b      	ldr	r3, [r7, #4]
    b9a2:	617b      	str	r3, [r7, #20]
    b9a4:	e00d      	b.n	b9c2 <fnet_serial_printk_pad+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:224 (discriminator 2)
    {
        (*count)++;
    b9a6:	6a3b      	ldr	r3, [r7, #32]
    b9a8:	681b      	ldr	r3, [r3, #0]
    b9aa:	1c5a      	adds	r2, r3, #1
    b9ac:	6a3b      	ldr	r3, [r7, #32]
    b9ae:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:225 (discriminator 2)
        fnet_serial_putchar(stream, c);
    b9b0:	f997 300f 	ldrsb.w	r3, [r7, #15]
    b9b4:	68b8      	ldr	r0, [r7, #8]
    b9b6:	4619      	mov	r1, r3
    b9b8:	f7ff ff38 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:222 (discriminator 2)
static void fnet_serial_printk_pad(char c, fnet_serial_stream_t stream, int curlen, int field_width, int *count )

{
    int i;

    for (i = curlen; i < field_width; i++)
    b9bc:	697b      	ldr	r3, [r7, #20]
    b9be:	3301      	adds	r3, #1
    b9c0:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:222 (discriminator 1)
    b9c2:	697a      	ldr	r2, [r7, #20]
    b9c4:	683b      	ldr	r3, [r7, #0]
    b9c6:	429a      	cmp	r2, r3
    b9c8:	dbed      	blt.n	b9a6 <fnet_serial_printk_pad+0x16>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:227
    {
        (*count)++;
        fnet_serial_putchar(stream, c);
    }
}
    b9ca:	3718      	adds	r7, #24
    b9cc:	46bd      	mov	sp, r7
    b9ce:	bd80      	pop	{r7, pc}

0000b9d0 <fnet_serial_vprintf>:
fnet_serial_vprintf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:231

/********************************************************************/
int fnet_serial_vprintf(fnet_serial_stream_t stream, const char *format, fnet_va_list ap )
{
    b9d0:	b580      	push	{r7, lr}
    b9d2:	b09e      	sub	sp, #120	; 0x78
    b9d4:	af02      	add	r7, sp, #8
    b9d6:	60f8      	str	r0, [r7, #12]
    b9d8:	60b9      	str	r1, [r7, #8]
    b9da:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:240
    char vstr[33];
    char *vstrp;
    int vlen;

    int done;
    int count = 0;
    b9dc:	2300      	movs	r3, #0
    b9de:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:264
    
    /*
     * Start parsing apart the format string and display appropriate
     * formats and data.
     */
    for (p = (char *)format; (c = *p) != 0; p++)
    b9e0:	68bb      	ldr	r3, [r7, #8]
    b9e2:	66fb      	str	r3, [r7, #108]	; 0x6c
    b9e4:	e2fb      	b.n	bfde <fnet_serial_vprintf+0x60e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:272
         * All formats begin with a '%' marker.  Special chars like
         * '\n' or '\t' are normally converted to the appropriate
         * character by the __compiler__.  Thus, no need for this
         * routine to account for the '\' character.
         */
        if(c != '%')
    b9e6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    b9e8:	2b25      	cmp	r3, #37	; 0x25
    b9ea:	d011      	beq.n	ba10 <fnet_serial_vprintf+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:276
        {
        
#if FNET_CFG_SERIAL_PRINTF_N_TO_RN
            if(c == '\n') /* LF.*/
    b9ec:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    b9ee:	2b0a      	cmp	r3, #10
    b9f0:	d106      	bne.n	ba00 <fnet_serial_vprintf+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:278
            {
                count++;
    b9f2:	69bb      	ldr	r3, [r7, #24]
    b9f4:	3301      	adds	r3, #1
    b9f6:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:279
                fnet_serial_putchar(stream, '\r' /* CR */);
    b9f8:	68f8      	ldr	r0, [r7, #12]
    b9fa:	210d      	movs	r1, #13
    b9fc:	f7ff ff16 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:283
            }
#endif            
            
            count++;
    ba00:	69bb      	ldr	r3, [r7, #24]
    ba02:	3301      	adds	r3, #1
    ba04:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:284
            fnet_serial_putchar(stream, c);
    ba06:	68f8      	ldr	r0, [r7, #12]
    ba08:	6cb9      	ldr	r1, [r7, #72]	; 0x48
    ba0a:	f7ff ff0f 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:286

            continue;
    ba0e:	e2e3      	b.n	bfd8 <fnet_serial_vprintf+0x608>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:292
        }

        /*
         * First check for specification modifier flags.
         */
        flags_used = 0;
    ba10:	2300      	movs	r3, #0
    ba12:	65fb      	str	r3, [r7, #92]	; 0x5c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:293
        done = 0;
    ba14:	2300      	movs	r3, #0
    ba16:	663b      	str	r3, [r7, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:295

        while(!done)
    ba18:	e04d      	b.n	bab6 <fnet_serial_vprintf+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:297
        {
            switch( /* c = */*++p)
    ba1a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    ba1c:	3301      	adds	r3, #1
    ba1e:	66fb      	str	r3, [r7, #108]	; 0x6c
    ba20:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    ba22:	781b      	ldrb	r3, [r3, #0]
    ba24:	b25b      	sxtb	r3, r3
    ba26:	3b20      	subs	r3, #32
    ba28:	2b10      	cmp	r3, #16
    ba2a:	d83e      	bhi.n	baaa <fnet_serial_vprintf+0xda>
    ba2c:	a201      	add	r2, pc, #4	; (adr r2, ba34 <fnet_serial_vprintf+0x64>)
    ba2e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    ba32:	bf00      	nop
    ba34:	0000ba8d 	.word	0x0000ba8d
    ba38:	0000baab 	.word	0x0000baab
    ba3c:	0000baab 	.word	0x0000baab
    ba40:	0000baa1 	.word	0x0000baa1
    ba44:	0000baab 	.word	0x0000baab
    ba48:	0000baab 	.word	0x0000baab
    ba4c:	0000baab 	.word	0x0000baab
    ba50:	0000baab 	.word	0x0000baab
    ba54:	0000baab 	.word	0x0000baab
    ba58:	0000baab 	.word	0x0000baab
    ba5c:	0000baab 	.word	0x0000baab
    ba60:	0000ba83 	.word	0x0000ba83
    ba64:	0000baab 	.word	0x0000baab
    ba68:	0000ba79 	.word	0x0000ba79
    ba6c:	0000baab 	.word	0x0000baab
    ba70:	0000baab 	.word	0x0000baab
    ba74:	0000ba97 	.word	0x0000ba97
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:300
            {
                case '-':
                  flags_used |= FNET_SERIAL_FLAGS_MINUS;
    ba78:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    ba7a:	f043 0301 	orr.w	r3, r3, #1
    ba7e:	65fb      	str	r3, [r7, #92]	; 0x5c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:301
                  break;
    ba80:	e019      	b.n	bab6 <fnet_serial_vprintf+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:304

                case '+':
                  flags_used |= FNET_SERIAL_FLAGS_PLUS;
    ba82:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    ba84:	f043 0302 	orr.w	r3, r3, #2
    ba88:	65fb      	str	r3, [r7, #92]	; 0x5c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:305
                  break;
    ba8a:	e014      	b.n	bab6 <fnet_serial_vprintf+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:308

                case ' ':
                  flags_used |= FNET_SERIAL_FLAGS_SPACE;
    ba8c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    ba8e:	f043 0304 	orr.w	r3, r3, #4
    ba92:	65fb      	str	r3, [r7, #92]	; 0x5c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:309
                  break;
    ba94:	e00f      	b.n	bab6 <fnet_serial_vprintf+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:312

                case '0':
                  flags_used |= FNET_SERIAL_FLAGS_ZERO;
    ba96:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    ba98:	f043 0308 	orr.w	r3, r3, #8
    ba9c:	65fb      	str	r3, [r7, #92]	; 0x5c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:313
                  break;
    ba9e:	e00a      	b.n	bab6 <fnet_serial_vprintf+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:316

                case '#':
                  flags_used |= FNET_SERIAL_FLAGS_POUND;
    baa0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    baa2:	f043 0310 	orr.w	r3, r3, #16
    baa6:	65fb      	str	r3, [r7, #92]	; 0x5c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:317
                  break;
    baa8:	e005      	b.n	bab6 <fnet_serial_vprintf+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:321

                default:
                  /* we've gone one char too far */
                  --p;
    baaa:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    baac:	3b01      	subs	r3, #1
    baae:	66fb      	str	r3, [r7, #108]	; 0x6c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:322
                  done = 1;
    bab0:	2301      	movs	r3, #1
    bab2:	663b      	str	r3, [r7, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:323
                  break;
    bab4:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:295 (discriminator 1)
         * First check for specification modifier flags.
         */
        flags_used = 0;
        done = 0;

        while(!done)
    bab6:	6e3b      	ldr	r3, [r7, #96]	; 0x60
    bab8:	2b00      	cmp	r3, #0
    baba:	d0ae      	beq.n	ba1a <fnet_serial_vprintf+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:330
        }

        /*
         * Next check for minimum field width.
         */
        field_width = 0;
    babc:	2300      	movs	r3, #0
    babe:	65bb      	str	r3, [r7, #88]	; 0x58
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:331
        done = 0;
    bac0:	2300      	movs	r3, #0
    bac2:	663b      	str	r3, [r7, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:333

        while(!done)
    bac4:	e01c      	b.n	bb00 <fnet_serial_vprintf+0x130>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:358
                  --p;
                  done = 1;
                  break;
            }
#else 
            c = *++p;
    bac6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    bac8:	3301      	adds	r3, #1
    baca:	66fb      	str	r3, [r7, #108]	; 0x6c
    bacc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    bace:	781b      	ldrb	r3, [r3, #0]
    bad0:	b25b      	sxtb	r3, r3
    bad2:	64bb      	str	r3, [r7, #72]	; 0x48
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:359
            if(c >= '0' && c <= '9')
    bad4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    bad6:	2b2f      	cmp	r3, #47	; 0x2f
    bad8:	dd0d      	ble.n	baf6 <fnet_serial_vprintf+0x126>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:359 (discriminator 1)
    bada:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    badc:	2b39      	cmp	r3, #57	; 0x39
    bade:	dc0a      	bgt.n	baf6 <fnet_serial_vprintf+0x126>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:361
            {
                field_width = (field_width * 10) + (c - '0');
    bae0:	6dba      	ldr	r2, [r7, #88]	; 0x58
    bae2:	4613      	mov	r3, r2
    bae4:	009b      	lsls	r3, r3, #2
    bae6:	4413      	add	r3, r2
    bae8:	005b      	lsls	r3, r3, #1
    baea:	461a      	mov	r2, r3
    baec:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    baee:	3b30      	subs	r3, #48	; 0x30
    baf0:	4413      	add	r3, r2
    baf2:	65bb      	str	r3, [r7, #88]	; 0x58
    baf4:	e004      	b.n	bb00 <fnet_serial_vprintf+0x130>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:366
            }
            else
            {
                /* we've gone one char too far */
                --p;
    baf6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    baf8:	3b01      	subs	r3, #1
    bafa:	66fb      	str	r3, [r7, #108]	; 0x6c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:367
                done = 1;
    bafc:	2301      	movs	r3, #1
    bafe:	663b      	str	r3, [r7, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:333 (discriminator 1)
         * Next check for minimum field width.
         */
        field_width = 0;
        done = 0;

        while(!done)
    bb00:	6e3b      	ldr	r3, [r7, #96]	; 0x60
    bb02:	2b00      	cmp	r3, #0
    bb04:	d0df      	beq.n	bac6 <fnet_serial_vprintf+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:377
        }

        /*
         * Next check for the width and precision field separator.
         */
        if( /* (c = *++p) */*++p == '.')
    bb06:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    bb08:	3301      	adds	r3, #1
    bb0a:	66fb      	str	r3, [r7, #108]	; 0x6c
    bb0c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    bb0e:	781b      	ldrb	r3, [r3, #0]
    bb10:	b25b      	sxtb	r3, r3
    bb12:	2b2e      	cmp	r3, #46	; 0x2e
    bb14:	d119      	bne.n	bb4a <fnet_serial_vprintf+0x17a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:385

            /*
             * Must get precision field width, if present.
             */
            /* precision_width = 0; */
            done = 0;
    bb16:	2300      	movs	r3, #0
    bb18:	663b      	str	r3, [r7, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:387

            while(!done)
    bb1a:	e012      	b.n	bb42 <fnet_serial_vprintf+0x172>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:420
                      --p;
                      done = 1;
                      break;
                }
#else
                c = *++p;
    bb1c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    bb1e:	3301      	adds	r3, #1
    bb20:	66fb      	str	r3, [r7, #108]	; 0x6c
    bb22:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    bb24:	781b      	ldrb	r3, [r3, #0]
    bb26:	b25b      	sxtb	r3, r3
    bb28:	64bb      	str	r3, [r7, #72]	; 0x48
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:421
                if(c >= '0' && c <= '9')
    bb2a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    bb2c:	2b2f      	cmp	r3, #47	; 0x2f
    bb2e:	dd03      	ble.n	bb38 <fnet_serial_vprintf+0x168>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:421 (discriminator 1)
    bb30:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    bb32:	2b39      	cmp	r3, #57	; 0x39
    bb34:	dc00      	bgt.n	bb38 <fnet_serial_vprintf+0x168>
    bb36:	e004      	b.n	bb42 <fnet_serial_vprintf+0x172>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:430
                    #endif
                }
                else
                {
                    /* we've gone one char too far */
                    --p;
    bb38:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    bb3a:	3b01      	subs	r3, #1
    bb3c:	66fb      	str	r3, [r7, #108]	; 0x6c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:431
                    done = 1;
    bb3e:	2301      	movs	r3, #1
    bb40:	663b      	str	r3, [r7, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:387 (discriminator 1)
             * Must get precision field width, if present.
             */
            /* precision_width = 0; */
            done = 0;

            while(!done)
    bb42:	6e3b      	ldr	r3, [r7, #96]	; 0x60
    bb44:	2b00      	cmp	r3, #0
    bb46:	d0e9      	beq.n	bb1c <fnet_serial_vprintf+0x14c>
    bb48:	e002      	b.n	bb50 <fnet_serial_vprintf+0x180>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:443
            }
        }
        else
        {
            /* we've gone one char too far */
            --p;
    bb4a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    bb4c:	3b01      	subs	r3, #1
    bb4e:	66fb      	str	r3, [r7, #108]	; 0x6c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:458

        /*
         * Check for the length modifier.
         */
        /* length_modifier = 0; */
        switch( /* c = */*++p)
    bb50:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    bb52:	3301      	adds	r3, #1
    bb54:	66fb      	str	r3, [r7, #108]	; 0x6c
    bb56:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    bb58:	781b      	ldrb	r3, [r3, #0]
    bb5a:	b25b      	sxtb	r3, r3
    bb5c:	2b68      	cmp	r3, #104	; 0x68
    bb5e:	d007      	beq.n	bb70 <fnet_serial_vprintf+0x1a0>
    bb60:	2b6c      	cmp	r3, #108	; 0x6c
    bb62:	d007      	beq.n	bb74 <fnet_serial_vprintf+0x1a4>
    bb64:	2b4c      	cmp	r3, #76	; 0x4c
    bb66:	d007      	beq.n	bb78 <fnet_serial_vprintf+0x1a8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:474
              /* length_modifier |= LENMOD_L; */
              break;

            default:
              /* we've gone one char too far */
              --p;
    bb68:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    bb6a:	3b01      	subs	r3, #1
    bb6c:	66fb      	str	r3, [r7, #108]	; 0x6c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:475
              break;
    bb6e:	e004      	b.n	bb7a <fnet_serial_vprintf+0x1aa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:462
        /* length_modifier = 0; */
        switch( /* c = */*++p)
        {
            case 'h':
              /* length_modifier |= LENMOD_h; */
              break;
    bb70:	bf00      	nop
    bb72:	e002      	b.n	bb7a <fnet_serial_vprintf+0x1aa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:466

            case 'l':
              /* length_modifier |= LENMOD_l; */
              break;
    bb74:	bf00      	nop
    bb76:	e000      	b.n	bb7a <fnet_serial_vprintf+0x1aa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:470

            case 'L':
              /* length_modifier |= LENMOD_L; */
              break;
    bb78:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:481
        }

        /*
         * Now we're ready to examine the format.
         */
        switch(c = *++p)
    bb7a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    bb7c:	3301      	adds	r3, #1
    bb7e:	66fb      	str	r3, [r7, #108]	; 0x6c
    bb80:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    bb82:	781b      	ldrb	r3, [r3, #0]
    bb84:	b25b      	sxtb	r3, r3
    bb86:	64bb      	str	r3, [r7, #72]	; 0x48
    bb88:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    bb8a:	3b58      	subs	r3, #88	; 0x58
    bb8c:	2b20      	cmp	r3, #32
    bb8e:	f200 821b 	bhi.w	bfc8 <fnet_serial_vprintf+0x5f8>
    bb92:	a201      	add	r2, pc, #4	; (adr r2, bb98 <fnet_serial_vprintf+0x1c8>)
    bb94:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    bb98:	0000bd19 	.word	0x0000bd19
    bb9c:	0000bfc9 	.word	0x0000bfc9
    bba0:	0000bfc9 	.word	0x0000bfc9
    bba4:	0000bfc9 	.word	0x0000bfc9
    bba8:	0000bfc9 	.word	0x0000bfc9
    bbac:	0000bfc9 	.word	0x0000bfc9
    bbb0:	0000bfc9 	.word	0x0000bfc9
    bbb4:	0000bfc9 	.word	0x0000bfc9
    bbb8:	0000bfc9 	.word	0x0000bfc9
    bbbc:	0000bfc9 	.word	0x0000bfc9
    bbc0:	0000be2f 	.word	0x0000be2f
    bbc4:	0000bf1f 	.word	0x0000bf1f
    bbc8:	0000bc1d 	.word	0x0000bc1d
    bbcc:	0000bfc9 	.word	0x0000bfc9
    bbd0:	0000bfc9 	.word	0x0000bfc9
    bbd4:	0000bfc9 	.word	0x0000bfc9
    bbd8:	0000bfc9 	.word	0x0000bfc9
    bbdc:	0000bc1d 	.word	0x0000bc1d
    bbe0:	0000bfc9 	.word	0x0000bfc9
    bbe4:	0000bfc9 	.word	0x0000bfc9
    bbe8:	0000bfc9 	.word	0x0000bfc9
    bbec:	0000bfc9 	.word	0x0000bfc9
    bbf0:	0000bfb7 	.word	0x0000bfb7
    bbf4:	0000be0d 	.word	0x0000be0d
    bbf8:	0000be51 	.word	0x0000be51
    bbfc:	0000bfc9 	.word	0x0000bfc9
    bc00:	0000bfc9 	.word	0x0000bfc9
    bc04:	0000bf3d 	.word	0x0000bf3d
    bc08:	0000bfc9 	.word	0x0000bfc9
    bc0c:	0000be73 	.word	0x0000be73
    bc10:	0000bfc9 	.word	0x0000bfc9
    bc14:	0000bfc9 	.word	0x0000bfc9
    bc18:	0000bd19 	.word	0x0000bd19
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:485
        {
            case 'd':
            case 'i':
                ival = (int)fnet_va_arg(ap, int);
    bc1c:	687b      	ldrgt	r3, [r7, #4]
    bc1e:	1d1a      	adds	r2, r3, #4
    bc20:	607a      	str	r2, [r7, #4]
    bc22:	681b      	ldr	r3, [r3, #0]
    bc24:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:486
                vlen = fnet_serial_printk_mknumstr(vstr, &ival, 1, 10);
    bc26:	f107 021c 	add.w	r2, r7, #28
    bc2a:	f107 0314 	add.w	r3, r7, #20
    bc2e:	4610      	mov	r0, r2
    bc30:	4619      	mov	r1, r3
    bc32:	2201      	movs	r2, #1
    bc34:	230a      	movs	r3, #10
    bc36:	f7ff fe2b 	bl	b890 <fnet_serial_printk_mknumstr>
    bc3a:	6678      	str	r0, [r7, #100]	; 0x64
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:487
                vstrp = &vstr[vlen];
    bc3c:	f107 021c 	add.w	r2, r7, #28
    bc40:	6e7b      	ldr	r3, [r7, #100]	; 0x64
    bc42:	4413      	add	r3, r2
    bc44:	66bb      	str	r3, [r7, #104]	; 0x68
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:489

                if(ival < 0)
    bc46:	697b      	ldr	r3, [r7, #20]
    bc48:	2b00      	cmp	r3, #0
    bc4a:	da05      	bge.n	bc58 <fnet_serial_vprintf+0x288>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:491
                {
                    schar = '-';
    bc4c:	232d      	movs	r3, #45	; 0x2d
    bc4e:	657b      	str	r3, [r7, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:492
                    ++vlen;
    bc50:	6e7b      	ldr	r3, [r7, #100]	; 0x64
    bc52:	3301      	adds	r3, #1
    bc54:	667b      	str	r3, [r7, #100]	; 0x64
    bc56:	e017      	b.n	bc88 <fnet_serial_vprintf+0x2b8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:496
                }
                else
                {
                    if(FNET_SERIAL_IS_FLAG_PLUS(flags_used))
    bc58:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    bc5a:	f003 0302 	and.w	r3, r3, #2
    bc5e:	2b00      	cmp	r3, #0
    bc60:	d005      	beq.n	bc6e <fnet_serial_vprintf+0x29e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:498
                    {
                        schar = '+';
    bc62:	232b      	movs	r3, #43	; 0x2b
    bc64:	657b      	str	r3, [r7, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:499
                        ++vlen;
    bc66:	6e7b      	ldr	r3, [r7, #100]	; 0x64
    bc68:	3301      	adds	r3, #1
    bc6a:	667b      	str	r3, [r7, #100]	; 0x64
    bc6c:	e00c      	b.n	bc88 <fnet_serial_vprintf+0x2b8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:503
                    }
                    else
                    {
                        if(FNET_SERIAL_IS_FLAG_SPACE(flags_used))
    bc6e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    bc70:	f003 0304 	and.w	r3, r3, #4
    bc74:	2b00      	cmp	r3, #0
    bc76:	d005      	beq.n	bc84 <fnet_serial_vprintf+0x2b4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:505
                        {
                            schar = ' ';
    bc78:	2320      	movs	r3, #32
    bc7a:	657b      	str	r3, [r7, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:506
                            ++vlen;
    bc7c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
    bc7e:	3301      	adds	r3, #1
    bc80:	667b      	str	r3, [r7, #100]	; 0x64
    bc82:	e001      	b.n	bc88 <fnet_serial_vprintf+0x2b8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:510
                        }
                        else
                        {
                            schar = 0;
    bc84:	2300      	movs	r3, #0
    bc86:	657b      	str	r3, [r7, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:515
                        }
                    }
                }

                dschar = 0;
    bc88:	2300      	movs	r3, #0
    bc8a:	653b      	str	r3, [r7, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:520

                /*
                * do the ZERO pad.
                */
                if(FNET_SERIAL_IS_FLAG_ZERO(flags_used))
    bc8c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    bc8e:	f003 0308 	and.w	r3, r3, #8
    bc92:	2b00      	cmp	r3, #0
    bc94:	d017      	beq.n	bcc6 <fnet_serial_vprintf+0x2f6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:522
                {
                    if(schar)
    bc96:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    bc98:	2b00      	cmp	r3, #0
    bc9a:	d006      	beq.n	bcaa <fnet_serial_vprintf+0x2da>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:524
                    {
                        count++;
    bc9c:	69bb      	ldr	r3, [r7, #24]
    bc9e:	3301      	adds	r3, #1
    bca0:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:525
                        fnet_serial_putchar(stream, schar);
    bca2:	68f8      	ldr	r0, [r7, #12]
    bca4:	6d79      	ldr	r1, [r7, #84]	; 0x54
    bca6:	f7ff fdc1 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:528
                    }

                    dschar = 1;
    bcaa:	2301      	movs	r3, #1
    bcac:	653b      	str	r3, [r7, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:530

                    fnet_serial_printk_pad('0', stream, vlen, field_width, &count);
    bcae:	f107 0318 	add.w	r3, r7, #24
    bcb2:	9300      	str	r3, [sp, #0]
    bcb4:	2030      	movs	r0, #48	; 0x30
    bcb6:	68f9      	ldr	r1, [r7, #12]
    bcb8:	6e7a      	ldr	r2, [r7, #100]	; 0x64
    bcba:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    bcbc:	f7ff fe68 	bl	b990 <fnet_serial_printk_pad>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:532
                    
                    vlen = field_width;
    bcc0:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    bcc2:	667b      	str	r3, [r7, #100]	; 0x64
    bcc4:	e019      	b.n	bcfa <fnet_serial_vprintf+0x32a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:536
                }
                else
                {
                    if(!FNET_SERIAL_IS_FLAG_MINUS(flags_used))
    bcc6:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    bcc8:	f003 0301 	and.w	r3, r3, #1
    bccc:	2b00      	cmp	r3, #0
    bcce:	d114      	bne.n	bcfa <fnet_serial_vprintf+0x32a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:538
                    {
                        fnet_serial_printk_pad(' ', stream, vlen, field_width, &count);
    bcd0:	f107 0318 	add.w	r3, r7, #24
    bcd4:	9300      	str	r3, [sp, #0]
    bcd6:	2020      	movs	r0, #32
    bcd8:	68f9      	ldr	r1, [r7, #12]
    bcda:	6e7a      	ldr	r2, [r7, #100]	; 0x64
    bcdc:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    bcde:	f7ff fe57 	bl	b990 <fnet_serial_printk_pad>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:540

                        if(schar)
    bce2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    bce4:	2b00      	cmp	r3, #0
    bce6:	d006      	beq.n	bcf6 <fnet_serial_vprintf+0x326>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:542
                        {
                            count++;
    bce8:	69bb      	ldr	r3, [r7, #24]
    bcea:	3301      	adds	r3, #1
    bcec:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:543
                            fnet_serial_putchar(stream, schar);
    bcee:	68f8      	ldr	r0, [r7, #12]
    bcf0:	6d79      	ldr	r1, [r7, #84]	; 0x54
    bcf2:	f7ff fd9b 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:546
                        }

                        dschar = 1;
    bcf6:	2301      	movs	r3, #1
    bcf8:	653b      	str	r3, [r7, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:552
                    }
                }

              /* the string was built in reverse order, now display in */
              /* correct order */
              if(!dschar && schar)
    bcfa:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    bcfc:	2b00      	cmp	r3, #0
    bcfe:	d10a      	bne.n	bd16 <fnet_serial_vprintf+0x346>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:552 (discriminator 1)
    bd00:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    bd02:	2b00      	cmp	r3, #0
    bd04:	d007      	beq.n	bd16 <fnet_serial_vprintf+0x346>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:554
              {
                  count++;
    bd06:	69bb      	ldr	r3, [r7, #24]
    bd08:	3301      	adds	r3, #1
    bd0a:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:555
                  fnet_serial_putchar(stream, schar);
    bd0c:	68f8      	ldr	r0, [r7, #12]
    bd0e:	6d79      	ldr	r1, [r7, #84]	; 0x54
    bd10:	f7ff fd8c 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:558
              }

              goto cont_xd;
    bd14:	e0e2      	b.n	bedc <fnet_serial_vprintf+0x50c>
    bd16:	e0e1      	b.n	bedc <fnet_serial_vprintf+0x50c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:562

            case 'x':
            case 'X':
                uval = (unsigned int)fnet_va_arg(ap, unsigned int);
    bd18:	687b      	ldr	r3, [r7, #4]
    bd1a:	1d1a      	adds	r2, r3, #4
    bd1c:	607a      	str	r2, [r7, #4]
    bd1e:	681b      	ldr	r3, [r3, #0]
    bd20:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:563
                vlen = fnet_serial_printk_mknumstr(vstr, &uval, 0, 16);
    bd22:	f107 021c 	add.w	r2, r7, #28
    bd26:	f107 0310 	add.w	r3, r7, #16
    bd2a:	4610      	mov	r0, r2
    bd2c:	4619      	mov	r1, r3
    bd2e:	2200      	movs	r2, #0
    bd30:	2310      	movs	r3, #16
    bd32:	f7ff fdad 	bl	b890 <fnet_serial_printk_mknumstr>
    bd36:	6678      	str	r0, [r7, #100]	; 0x64
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:564
                vstrp = &vstr[vlen];
    bd38:	f107 021c 	add.w	r2, r7, #28
    bd3c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
    bd3e:	4413      	add	r3, r2
    bd40:	66bb      	str	r3, [r7, #104]	; 0x68
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:566

                dschar = 0;
    bd42:	2300      	movs	r3, #0
    bd44:	653b      	str	r3, [r7, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:568

                if(FNET_SERIAL_IS_FLAG_ZERO(flags_used))
    bd46:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    bd48:	f003 0308 	and.w	r3, r3, #8
    bd4c:	2b00      	cmp	r3, #0
    bd4e:	d01d      	beq.n	bd8c <fnet_serial_vprintf+0x3bc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:570
                {
                    if(FNET_SERIAL_IS_FLAG_POUND(flags_used))
    bd50:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    bd52:	f003 0310 	and.w	r3, r3, #16
    bd56:	2b00      	cmp	r3, #0
    bd58:	d00c      	beq.n	bd74 <fnet_serial_vprintf+0x3a4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:572
                    {
                        count+=2;
    bd5a:	69bb      	ldr	r3, [r7, #24]
    bd5c:	3302      	adds	r3, #2
    bd5e:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:573
                        fnet_serial_putchar(stream, '0');
    bd60:	68f8      	ldr	r0, [r7, #12]
    bd62:	2130      	movs	r1, #48	; 0x30
    bd64:	f7ff fd62 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:574
                        fnet_serial_putchar(stream, 'x');
    bd68:	68f8      	ldr	r0, [r7, #12]
    bd6a:	2178      	movs	r1, #120	; 0x78
    bd6c:	f7ff fd5e 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:577
                      
                        /*vlen += 2;*/
                        dschar = 1;
    bd70:	2301      	movs	r3, #1
    bd72:	653b      	str	r3, [r7, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:580
                    }

                    fnet_serial_printk_pad('0', stream, vlen, field_width, &count);
    bd74:	f107 0318 	add.w	r3, r7, #24
    bd78:	9300      	str	r3, [sp, #0]
    bd7a:	2030      	movs	r0, #48	; 0x30
    bd7c:	68f9      	ldr	r1, [r7, #12]
    bd7e:	6e7a      	ldr	r2, [r7, #100]	; 0x64
    bd80:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    bd82:	f7ff fe05 	bl	b990 <fnet_serial_printk_pad>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:581
                    vlen = field_width;
    bd86:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    bd88:	667b      	str	r3, [r7, #100]	; 0x64
    bd8a:	e027      	b.n	bddc <fnet_serial_vprintf+0x40c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:585
                }
                else
                {
                    if(!FNET_SERIAL_IS_FLAG_MINUS(flags_used))
    bd8c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    bd8e:	f003 0301 	and.w	r3, r3, #1
    bd92:	2b00      	cmp	r3, #0
    bd94:	d122      	bne.n	bddc <fnet_serial_vprintf+0x40c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:587
                    {
                        if(FNET_SERIAL_IS_FLAG_POUND(flags_used))
    bd96:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    bd98:	f003 0310 	and.w	r3, r3, #16
    bd9c:	2b00      	cmp	r3, #0
    bd9e:	d002      	beq.n	bda6 <fnet_serial_vprintf+0x3d6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:589
                        {
                            vlen += 2;
    bda0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
    bda2:	3302      	adds	r3, #2
    bda4:	667b      	str	r3, [r7, #100]	; 0x64
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:592
                        }

                        fnet_serial_printk_pad(' ', stream, vlen, field_width, &count);
    bda6:	f107 0318 	add.w	r3, r7, #24
    bdaa:	9300      	str	r3, [sp, #0]
    bdac:	2020      	movs	r0, #32
    bdae:	68f9      	ldr	r1, [r7, #12]
    bdb0:	6e7a      	ldr	r2, [r7, #100]	; 0x64
    bdb2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    bdb4:	f7ff fdec 	bl	b990 <fnet_serial_printk_pad>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:594

                        if(FNET_SERIAL_IS_FLAG_POUND(flags_used))
    bdb8:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    bdba:	f003 0310 	and.w	r3, r3, #16
    bdbe:	2b00      	cmp	r3, #0
    bdc0:	d00c      	beq.n	bddc <fnet_serial_vprintf+0x40c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:596
                        {
                            count+=2;
    bdc2:	69bb      	ldr	r3, [r7, #24]
    bdc4:	3302      	adds	r3, #2
    bdc6:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:597
                            fnet_serial_putchar(stream, '0');
    bdc8:	68f8      	ldr	r0, [r7, #12]
    bdca:	2130      	movs	r1, #48	; 0x30
    bdcc:	f7ff fd2e 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:598
                            fnet_serial_putchar(stream, 'x');
    bdd0:	68f8      	ldr	r0, [r7, #12]
    bdd2:	2178      	movs	r1, #120	; 0x78
    bdd4:	f7ff fd2a 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:599
                            dschar = 1;
    bdd8:	2301      	movs	r3, #1
    bdda:	653b      	str	r3, [r7, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:604
                        }
                    }
                }
    
                if((FNET_SERIAL_IS_FLAG_POUND(flags_used)) && !dschar)
    bddc:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    bdde:	f003 0310 	and.w	r3, r3, #16
    bde2:	2b00      	cmp	r3, #0
    bde4:	d011      	beq.n	be0a <fnet_serial_vprintf+0x43a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:604 (discriminator 1)
    bde6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    bde8:	2b00      	cmp	r3, #0
    bdea:	d10e      	bne.n	be0a <fnet_serial_vprintf+0x43a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:606
                {
                    count+=2;
    bdec:	69bb      	ldr	r3, [r7, #24]
    bdee:	3302      	adds	r3, #2
    bdf0:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:607
                    fnet_serial_putchar(stream, '0');
    bdf2:	68f8      	ldr	r0, [r7, #12]
    bdf4:	2130      	movs	r1, #48	; 0x30
    bdf6:	f7ff fd19 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:608
                    fnet_serial_putchar(stream, 'x');
    bdfa:	68f8      	ldr	r0, [r7, #12]
    bdfc:	2178      	movs	r1, #120	; 0x78
    bdfe:	f7ff fd15 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:610
                    
                    vlen += 2;
    be02:	6e7b      	ldr	r3, [r7, #100]	; 0x64
    be04:	3302      	adds	r3, #2
    be06:	667b      	str	r3, [r7, #100]	; 0x64
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:613
                }

                goto cont_xd;
    be08:	e068      	b.n	bedc <fnet_serial_vprintf+0x50c>
    be0a:	e067      	b.n	bedc <fnet_serial_vprintf+0x50c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:616

            case 'o':
              uval = (unsigned int)fnet_va_arg(ap, unsigned int);
    be0c:	687b      	ldr	r3, [r7, #4]
    be0e:	1d1a      	adds	r2, r3, #4
    be10:	607a      	str	r2, [r7, #4]
    be12:	681b      	ldr	r3, [r3, #0]
    be14:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:617
              vlen = fnet_serial_printk_mknumstr(vstr, &uval, 0, 8);
    be16:	f107 021c 	add.w	r2, r7, #28
    be1a:	f107 0310 	add.w	r3, r7, #16
    be1e:	4610      	mov	r0, r2
    be20:	4619      	mov	r1, r3
    be22:	2200      	movs	r2, #0
    be24:	2308      	movs	r3, #8
    be26:	f7ff fd33 	bl	b890 <fnet_serial_printk_mknumstr>
    be2a:	6678      	str	r0, [r7, #100]	; 0x64
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:618
              goto cont_u;
    be2c:	e031      	b.n	be92 <fnet_serial_vprintf+0x4c2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:621

            case 'b':
              uval = (unsigned int)fnet_va_arg(ap, unsigned int);
    be2e:	687b      	ldr	r3, [r7, #4]
    be30:	1d1a      	adds	r2, r3, #4
    be32:	607a      	str	r2, [r7, #4]
    be34:	681b      	ldr	r3, [r3, #0]
    be36:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:622
              vlen = fnet_serial_printk_mknumstr(vstr, &uval, 0, 2);
    be38:	f107 021c 	add.w	r2, r7, #28
    be3c:	f107 0310 	add.w	r3, r7, #16
    be40:	4610      	mov	r0, r2
    be42:	4619      	mov	r1, r3
    be44:	2200      	movs	r2, #0
    be46:	2302      	movs	r3, #2
    be48:	f7ff fd22 	bl	b890 <fnet_serial_printk_mknumstr>
    be4c:	6678      	str	r0, [r7, #100]	; 0x64
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:623
              goto cont_u;
    be4e:	e020      	b.n	be92 <fnet_serial_vprintf+0x4c2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:626

            case 'p':
              uval = (unsigned int)fnet_va_arg(ap, void *);
    be50:	687b      	ldr	r3, [r7, #4]
    be52:	1d1a      	adds	r2, r3, #4
    be54:	607a      	str	r2, [r7, #4]
    be56:	681b      	ldr	r3, [r3, #0]
    be58:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:627
              vlen = fnet_serial_printk_mknumstr(vstr, &uval, 0, 16);
    be5a:	f107 021c 	add.w	r2, r7, #28
    be5e:	f107 0310 	add.w	r3, r7, #16
    be62:	4610      	mov	r0, r2
    be64:	4619      	mov	r1, r3
    be66:	2200      	movs	r2, #0
    be68:	2310      	movs	r3, #16
    be6a:	f7ff fd11 	bl	b890 <fnet_serial_printk_mknumstr>
    be6e:	6678      	str	r0, [r7, #100]	; 0x64
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:628
              goto cont_u;
    be70:	e00f      	b.n	be92 <fnet_serial_vprintf+0x4c2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:631

            case 'u':
                uval = (unsigned int)fnet_va_arg(ap, unsigned int);
    be72:	687b      	ldr	r3, [r7, #4]
    be74:	1d1a      	adds	r2, r3, #4
    be76:	607a      	str	r2, [r7, #4]
    be78:	681b      	ldr	r3, [r3, #0]
    be7a:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:632
                vlen = fnet_serial_printk_mknumstr(vstr, &uval, 0, 10);
    be7c:	f107 021c 	add.w	r2, r7, #28
    be80:	f107 0310 	add.w	r3, r7, #16
    be84:	4610      	mov	r0, r2
    be86:	4619      	mov	r1, r3
    be88:	2200      	movs	r2, #0
    be8a:	230a      	movs	r3, #10
    be8c:	f7ff fd00 	bl	b890 <fnet_serial_printk_mknumstr>
    be90:	6678      	str	r0, [r7, #100]	; 0x64
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:635

                cont_u:
                vstrp = &vstr[vlen];
    be92:	f107 021c 	add.w	r2, r7, #28
    be96:	6e7b      	ldr	r3, [r7, #100]	; 0x64
    be98:	4413      	add	r3, r2
    be9a:	66bb      	str	r3, [r7, #104]	; 0x68
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:637

                if(FNET_SERIAL_IS_FLAG_ZERO(flags_used))
    be9c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    be9e:	f003 0308 	and.w	r3, r3, #8
    bea2:	2b00      	cmp	r3, #0
    bea4:	d00b      	beq.n	bebe <fnet_serial_vprintf+0x4ee>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:639
                {
                    fnet_serial_printk_pad('0', stream, vlen, field_width, &count);
    bea6:	f107 0318 	add.w	r3, r7, #24
    beaa:	9300      	str	r3, [sp, #0]
    beac:	2030      	movs	r0, #48	; 0x30
    beae:	68f9      	ldr	r1, [r7, #12]
    beb0:	6e7a      	ldr	r2, [r7, #100]	; 0x64
    beb2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    beb4:	f7ff fd6c 	bl	b990 <fnet_serial_printk_pad>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:640
                    vlen = field_width;
    beb8:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    beba:	667b      	str	r3, [r7, #100]	; 0x64
    bebc:	e00e      	b.n	bedc <fnet_serial_vprintf+0x50c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:644
                }
                else
                {
                    if(!FNET_SERIAL_IS_FLAG_MINUS(flags_used))
    bebe:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    bec0:	f003 0301 	and.w	r3, r3, #1
    bec4:	2b00      	cmp	r3, #0
    bec6:	d109      	bne.n	bedc <fnet_serial_vprintf+0x50c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:646
                    {
                        fnet_serial_printk_pad(' ', stream, vlen, field_width, &count);
    bec8:	f107 0318 	add.w	r3, r7, #24
    becc:	9300      	str	r3, [sp, #0]
    bece:	2020      	movs	r0, #32
    bed0:	68f9      	ldr	r1, [r7, #12]
    bed2:	6e7a      	ldr	r2, [r7, #100]	; 0x64
    bed4:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    bed6:	f7ff fd5b 	bl	b990 <fnet_serial_printk_pad>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:651
                    }
                }

                cont_xd:
                while(*vstrp)
    beda:	e00c      	b.n	bef6 <fnet_serial_vprintf+0x526>
    bedc:	e00b      	b.n	bef6 <fnet_serial_vprintf+0x526>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:653
                {
                    count++;
    bede:	69bb      	ldr	r3, [r7, #24]
    bee0:	3301      	adds	r3, #1
    bee2:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:654
                    fnet_serial_putchar(stream, *vstrp--);
    bee4:	6ebb      	ldr	r3, [r7, #104]	; 0x68
    bee6:	1e5a      	subs	r2, r3, #1
    bee8:	66ba      	str	r2, [r7, #104]	; 0x68
    beea:	781b      	ldrb	r3, [r3, #0]
    beec:	b25b      	sxtb	r3, r3
    beee:	68f8      	ldr	r0, [r7, #12]
    bef0:	4619      	mov	r1, r3
    bef2:	f7ff fc9b 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:651 (discriminator 1)
                        fnet_serial_printk_pad(' ', stream, vlen, field_width, &count);
                    }
                }

                cont_xd:
                while(*vstrp)
    bef6:	6ebb      	ldr	r3, [r7, #104]	; 0x68
    bef8:	781b      	ldrb	r3, [r3, #0]
    befa:	2b00      	cmp	r3, #0
    befc:	d1ef      	bne.n	bede <fnet_serial_vprintf+0x50e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:656
                {
                    count++;
                    fnet_serial_putchar(stream, *vstrp--);
                }
                if(FNET_SERIAL_IS_FLAG_MINUS(flags_used))
    befe:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    bf00:	f003 0301 	and.w	r3, r3, #1
    bf04:	2b00      	cmp	r3, #0
    bf06:	d009      	beq.n	bf1c <fnet_serial_vprintf+0x54c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:658
                {
                    fnet_serial_printk_pad(' ', stream, vlen, field_width, &count);
    bf08:	f107 0318 	add.w	r3, r7, #24
    bf0c:	9300      	str	r3, [sp, #0]
    bf0e:	2020      	movs	r0, #32
    bf10:	68f9      	ldr	r1, [r7, #12]
    bf12:	6e7a      	ldr	r2, [r7, #100]	; 0x64
    bf14:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    bf16:	f7ff fd3b 	bl	b990 <fnet_serial_printk_pad>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:661
                }

                break;
    bf1a:	e05d      	b.n	bfd8 <fnet_serial_vprintf+0x608>
    bf1c:	e05c      	b.n	bfd8 <fnet_serial_vprintf+0x608>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:664

            case 'c':
                cval = (char)fnet_va_arg(ap, unsigned int);
    bf1e:	687b      	ldr	r3, [r7, #4]
    bf20:	1d1a      	adds	r2, r3, #4
    bf22:	607a      	str	r2, [r7, #4]
    bf24:	681b      	ldr	r3, [r3, #0]
    bf26:	b2db      	uxtb	r3, r3
    bf28:	b25b      	sxtb	r3, r3
    bf2a:	647b      	str	r3, [r7, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:665
                count++;
    bf2c:	69bb      	ldr	r3, [r7, #24]
    bf2e:	3301      	adds	r3, #1
    bf30:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:666
                fnet_serial_putchar(stream, cval);
    bf32:	68f8      	ldr	r0, [r7, #12]
    bf34:	6c79      	ldr	r1, [r7, #68]	; 0x44
    bf36:	f7ff fc79 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:667
                break;
    bf3a:	e04d      	b.n	bfd8 <fnet_serial_vprintf+0x608>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:670

            case 's':
                sval = (char *)fnet_va_arg(ap, char *);
    bf3c:	687b      	ldr	r3, [r7, #4]
    bf3e:	1d1a      	adds	r2, r3, #4
    bf40:	607a      	str	r2, [r7, #4]
    bf42:	681b      	ldr	r3, [r3, #0]
    bf44:	64fb      	str	r3, [r7, #76]	; 0x4c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:672

                if(sval)
    bf46:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    bf48:	2b00      	cmp	r3, #0
    bf4a:	d033      	beq.n	bfb4 <fnet_serial_vprintf+0x5e4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:674
                {
                    vlen = (int)fnet_strlen(sval);
    bf4c:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
    bf4e:	f7f9 febd 	bl	5ccc <fnet_strlen>
    bf52:	4603      	mov	r3, r0
    bf54:	667b      	str	r3, [r7, #100]	; 0x64
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:676

                    if(!FNET_SERIAL_IS_FLAG_MINUS(flags_used))
    bf56:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    bf58:	f003 0301 	and.w	r3, r3, #1
    bf5c:	2b00      	cmp	r3, #0
    bf5e:	d109      	bne.n	bf74 <fnet_serial_vprintf+0x5a4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:678
                    {
                        fnet_serial_printk_pad(' ', stream, vlen, field_width, &count);
    bf60:	f107 0318 	add.w	r3, r7, #24
    bf64:	9300      	str	r3, [sp, #0]
    bf66:	2020      	movs	r0, #32
    bf68:	68f9      	ldr	r1, [r7, #12]
    bf6a:	6e7a      	ldr	r2, [r7, #100]	; 0x64
    bf6c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    bf6e:	f7ff fd0f 	bl	b990 <fnet_serial_printk_pad>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:681
                    }

                    while(*sval)
    bf72:	e00c      	b.n	bf8e <fnet_serial_vprintf+0x5be>
    bf74:	e00b      	b.n	bf8e <fnet_serial_vprintf+0x5be>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:683
                    {
                        count++;
    bf76:	69bb      	ldr	r3, [r7, #24]
    bf78:	3301      	adds	r3, #1
    bf7a:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:684
                        fnet_serial_putchar(stream, *sval++);
    bf7c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    bf7e:	1c5a      	adds	r2, r3, #1
    bf80:	64fa      	str	r2, [r7, #76]	; 0x4c
    bf82:	781b      	ldrb	r3, [r3, #0]
    bf84:	b25b      	sxtb	r3, r3
    bf86:	68f8      	ldr	r0, [r7, #12]
    bf88:	4619      	mov	r1, r3
    bf8a:	f7ff fc4f 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:681 (discriminator 1)
                    if(!FNET_SERIAL_IS_FLAG_MINUS(flags_used))
                    {
                        fnet_serial_printk_pad(' ', stream, vlen, field_width, &count);
                    }

                    while(*sval)
    bf8e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    bf90:	781b      	ldrb	r3, [r3, #0]
    bf92:	2b00      	cmp	r3, #0
    bf94:	d1ef      	bne.n	bf76 <fnet_serial_vprintf+0x5a6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:687
                    {
                        count++;
                        fnet_serial_putchar(stream, *sval++);
                    }

                    if(FNET_SERIAL_IS_FLAG_MINUS(flags_used))
    bf96:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
    bf98:	f003 0301 	and.w	r3, r3, #1
    bf9c:	2b00      	cmp	r3, #0
    bf9e:	d009      	beq.n	bfb4 <fnet_serial_vprintf+0x5e4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:689
                    {
                        fnet_serial_printk_pad(' ', stream, vlen, field_width, &count);
    bfa0:	f107 0318 	add.w	r3, r7, #24
    bfa4:	9300      	str	r3, [sp, #0]
    bfa6:	2020      	movs	r0, #32
    bfa8:	68f9      	ldr	r1, [r7, #12]
    bfaa:	6e7a      	ldr	r2, [r7, #100]	; 0x64
    bfac:	6dbb      	ldr	r3, [r7, #88]	; 0x58
    bfae:	f7ff fcef 	bl	b990 <fnet_serial_printk_pad>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:693
                    }
                }

                break;
    bfb2:	e011      	b.n	bfd8 <fnet_serial_vprintf+0x608>
    bfb4:	e010      	b.n	bfd8 <fnet_serial_vprintf+0x608>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:696

            case 'n':
                ivalp = (int *)fnet_va_arg(ap, int *);
    bfb6:	687b      	ldr	r3, [r7, #4]
    bfb8:	1d1a      	adds	r2, r3, #4
    bfba:	607a      	str	r2, [r7, #4]
    bfbc:	681b      	ldr	r3, [r3, #0]
    bfbe:	643b      	str	r3, [r7, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:697
                *ivalp = count;
    bfc0:	69ba      	ldr	r2, [r7, #24]
    bfc2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    bfc4:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:698
                break;
    bfc6:	e007      	b.n	bfd8 <fnet_serial_vprintf+0x608>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:701

            default:
                count++;
    bfc8:	69bb      	ldr	r3, [r7, #24]
    bfca:	3301      	adds	r3, #1
    bfcc:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:702
                fnet_serial_putchar(stream, c);
    bfce:	68f8      	ldr	r0, [r7, #12]
    bfd0:	6cb9      	ldr	r1, [r7, #72]	; 0x48
    bfd2:	f7ff fc2b 	bl	b82c <fnet_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:703
                break;
    bfd6:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:264
    
    /*
     * Start parsing apart the format string and display appropriate
     * formats and data.
     */
    for (p = (char *)format; (c = *p) != 0; p++)
    bfd8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    bfda:	3301      	adds	r3, #1
    bfdc:	66fb      	str	r3, [r7, #108]	; 0x6c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:264 (discriminator 1)
    bfde:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    bfe0:	781b      	ldrb	r3, [r3, #0]
    bfe2:	b25b      	sxtb	r3, r3
    bfe4:	64bb      	str	r3, [r7, #72]	; 0x48
    bfe6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    bfe8:	2b00      	cmp	r3, #0
    bfea:	f47f acfc 	bne.w	b9e6 <fnet_serial_vprintf+0x16>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:707
                fnet_serial_putchar(stream, c);
                break;
        }
    }

    return count;
    bfee:	69bb      	ldr	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:708
}
    bff0:	4618      	mov	r0, r3
    bff2:	3770      	adds	r7, #112	; 0x70
    bff4:	46bd      	mov	sp, r7
    bff6:	bd80      	pop	{r7, pc}

0000bff8 <fnet_serial_printf>:
fnet_serial_printf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:713


/********************************************************************/
int fnet_serial_printf(fnet_serial_stream_t stream, const char *format, ... )
{
    bff8:	b40e      	push	{r1, r2, r3}
    bffa:	b580      	push	{r7, lr}
    bffc:	b085      	sub	sp, #20
    bffe:	af00      	add	r7, sp, #0
    c000:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:718
    fnet_va_list ap;
    /*
     * Initialize the pointer to the variable length argument list.
     */
    fnet_va_start(ap, format);
    c002:	f107 0320 	add.w	r3, r7, #32
    c006:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:719
    return fnet_serial_vprintf(stream, format, ap);
    c008:	6878      	ldr	r0, [r7, #4]
    c00a:	69f9      	ldr	r1, [r7, #28]
    c00c:	68fa      	ldr	r2, [r7, #12]
    c00e:	f7ff fcdf 	bl	b9d0 <fnet_serial_vprintf>
    c012:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:721

}
    c014:	4618      	mov	r0, r3
    c016:	3714      	adds	r7, #20
    c018:	46bd      	mov	sp, r7
    c01a:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
    c01e:	b003      	add	sp, #12
    c020:	4770      	bx	lr
    c022:	bf00      	nop

0000c024 <fnet_printf>:
fnet_printf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:725

/********************************************************************/
int fnet_printf(const char *format, ... )
{
    c024:	b40f      	push	{r0, r1, r2, r3}
    c026:	b580      	push	{r7, lr}
    c028:	b082      	sub	sp, #8
    c02a:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:730
    fnet_va_list ap;
    /*
     * Initialize the pointer to the variable length argument list.
     */
    fnet_va_start(ap, format);
    c02c:	f107 0314 	add.w	r3, r7, #20
    c030:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:731
    return fnet_serial_vprintf(FNET_SERIAL_STREAM_DEFAULT, format, ap);  
    c032:	4806      	ldr	r0, [pc, #24]	; (c04c <fnet_printf+0x28>)
    c034:	6939      	ldr	r1, [r7, #16]
    c036:	687a      	ldr	r2, [r7, #4]
    c038:	f7ff fcca 	bl	b9d0 <fnet_serial_vprintf>
    c03c:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:732
}
    c03e:	4618      	mov	r0, r3
    c040:	3708      	adds	r7, #8
    c042:	46bd      	mov	sp, r7
    c044:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
    c048:	b004      	add	sp, #16
    c04a:	4770      	bx	lr
    c04c:	000140dc 	.word	0x000140dc

0000c050 <fnet_println>:
fnet_println():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:741
* NAME: fnet_println
*
* DESCRIPTION:
************************************************************************/
int fnet_println(const char *format, ... )
{
    c050:	b40f      	push	{r0, r1, r2, r3}
    c052:	b580      	push	{r7, lr}
    c054:	b082      	sub	sp, #8
    c056:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:743
    fnet_va_list ap;
    int result = 0;
    c058:	2300      	movs	r3, #0
    c05a:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:748
    
    /*
     * Initialize the pointer to the variable length argument list.
     */
    fnet_va_start(ap, format);
    c05c:	f107 0314 	add.w	r3, r7, #20
    c060:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:749
    result = fnet_serial_vprintf(FNET_SERIAL_STREAM_DEFAULT, format, ap);
    c062:	480a      	ldr	r0, [pc, #40]	; (c08c <fnet_println+0x3c>)
    c064:	6939      	ldr	r1, [r7, #16]
    c066:	683a      	ldr	r2, [r7, #0]
    c068:	f7ff fcb2 	bl	b9d0 <fnet_serial_vprintf>
    c06c:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:750
    result += fnet_printf("\n");
    c06e:	4808      	ldr	r0, [pc, #32]	; (c090 <fnet_println+0x40>)
    c070:	f7ff ffd8 	bl	c024 <fnet_printf>
    c074:	4603      	mov	r3, r0
    c076:	687a      	ldr	r2, [r7, #4]
    c078:	4413      	add	r3, r2
    c07a:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:752
    
    return result;
    c07c:	687b      	ldr	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:753
}
    c07e:	4618      	mov	r0, r3
    c080:	3708      	adds	r7, #8
    c082:	46bd      	mov	sp, r7
    c084:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
    c088:	b004      	add	sp, #16
    c08a:	4770      	bx	lr
    c08c:	000140dc 	.word	0x000140dc
    c090:	0001413c 	.word	0x0001413c

0000c094 <fnet_serial_buffer_putchar>:
fnet_serial_buffer_putchar():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:769



/********************************************************************/
static void fnet_serial_buffer_putchar(long p_dest, int character)
{
    c094:	b480      	push	{r7}
    c096:	b085      	sub	sp, #20
    c098:	af00      	add	r7, sp, #0
    c09a:	6078      	str	r0, [r7, #4]
    c09c:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:770
    struct fnet_serial_buffer_id *buffer_id = (struct fnet_serial_buffer_id*)p_dest;
    c09e:	687b      	ldr	r3, [r7, #4]
    c0a0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:772

    if(buffer_id->dest_size)
    c0a2:	68fb      	ldr	r3, [r7, #12]
    c0a4:	685b      	ldr	r3, [r3, #4]
    c0a6:	2b00      	cmp	r3, #0
    c0a8:	d00e      	beq.n	c0c8 <fnet_serial_buffer_putchar+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:774
    {
        *(buffer_id->dest) = (char)character;
    c0aa:	68fb      	ldr	r3, [r7, #12]
    c0ac:	681b      	ldr	r3, [r3, #0]
    c0ae:	683a      	ldr	r2, [r7, #0]
    c0b0:	b2d2      	uxtb	r2, r2
    c0b2:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:775
        buffer_id->dest++;
    c0b4:	68fb      	ldr	r3, [r7, #12]
    c0b6:	681b      	ldr	r3, [r3, #0]
    c0b8:	1c5a      	adds	r2, r3, #1
    c0ba:	68fb      	ldr	r3, [r7, #12]
    c0bc:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:777
        
        --buffer_id->dest_size;
    c0be:	68fb      	ldr	r3, [r7, #12]
    c0c0:	685b      	ldr	r3, [r3, #4]
    c0c2:	1e5a      	subs	r2, r3, #1
    c0c4:	68fb      	ldr	r3, [r7, #12]
    c0c6:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:779
    }
}
    c0c8:	3714      	adds	r7, #20
    c0ca:	46bd      	mov	sp, r7
    c0cc:	f85d 7b04 	ldr.w	r7, [sp], #4
    c0d0:	4770      	bx	lr
    c0d2:	bf00      	nop

0000c0d4 <fnet_sprintf>:
fnet_sprintf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:783

/********************************************************************/
int fnet_sprintf( char *str, const char *format, ... )
{
    c0d4:	b40e      	push	{r1, r2, r3}
    c0d6:	b580      	push	{r7, lr}
    c0d8:	b08b      	sub	sp, #44	; 0x2c
    c0da:	af00      	add	r7, sp, #0
    c0dc:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:785
    fnet_va_list ap;
    int result = 0;
    c0de:	2300      	movs	r3, #0
    c0e0:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:790
   
    struct fnet_serial_stream buffer_stream;
    struct fnet_serial_buffer_id buffer_id;
    
    if(str != 0)
    c0e2:	687b      	ldr	r3, [r7, #4]
    c0e4:	2b00      	cmp	r3, #0
    c0e6:	d017      	beq.n	c118 <fnet_sprintf+0x44>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:792
    {
        buffer_id.dest = str;
    c0e8:	687b      	ldr	r3, [r7, #4]
    c0ea:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:793
        buffer_id.dest_size = (unsigned int)-1; /* No limit.*/
    c0ec:	f04f 33ff 	mov.w	r3, #4294967295
    c0f0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:795

        buffer_stream.id = (long)&buffer_id;//(long)&str;
    c0f2:	f107 0308 	add.w	r3, r7, #8
    c0f6:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:796
        buffer_stream.putchar = fnet_serial_buffer_putchar;
    c0f8:	4b0b      	ldr	r3, [pc, #44]	; (c128 <fnet_sprintf+0x54>)
    c0fa:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:801
        
        /*
         * Initialize the pointer to the variable length argument list.
         */
        fnet_va_start(ap, format);
    c0fc:	f107 0338 	add.w	r3, r7, #56	; 0x38
    c100:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:802
        result = fnet_serial_vprintf(&buffer_stream, format, ap);
    c102:	f107 0310 	add.w	r3, r7, #16
    c106:	4618      	mov	r0, r3
    c108:	6b79      	ldr	r1, [r7, #52]	; 0x34
    c10a:	6a3a      	ldr	r2, [r7, #32]
    c10c:	f7ff fc60 	bl	b9d0 <fnet_serial_vprintf>
    c110:	6278      	str	r0, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:803
        *buffer_id.dest = '\0'; /* Trailing null character.*/
    c112:	68bb      	ldr	r3, [r7, #8]
    c114:	2200      	movs	r2, #0
    c116:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:806
    }
    
    return result;
    c118:	6a7b      	ldr	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:807
}
    c11a:	4618      	mov	r0, r3
    c11c:	372c      	adds	r7, #44	; 0x2c
    c11e:	46bd      	mov	sp, r7
    c120:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
    c124:	b003      	add	sp, #12
    c126:	4770      	bx	lr
    c128:	0000c095 	.word	0x0000c095

0000c12c <fnet_snprintf>:
fnet_snprintf():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:811

/********************************************************************/
int fnet_snprintf( char *str, unsigned int size, const char *format, ... )
{
    c12c:	b40c      	push	{r2, r3}
    c12e:	b580      	push	{r7, lr}
    c130:	b08a      	sub	sp, #40	; 0x28
    c132:	af00      	add	r7, sp, #0
    c134:	6078      	str	r0, [r7, #4]
    c136:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:813
    fnet_va_list ap;
    int result = 0;
    c138:	2300      	movs	r3, #0
    c13a:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:819
   
    struct fnet_serial_stream buffer_stream;
    struct fnet_serial_buffer_id buffer_id;
    
    
    if((str != 0) && (size != 0))
    c13c:	687b      	ldr	r3, [r7, #4]
    c13e:	2b00      	cmp	r3, #0
    c140:	d022      	beq.n	c188 <fnet_snprintf+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:819 (discriminator 1)
    c142:	683b      	ldr	r3, [r7, #0]
    c144:	2b00      	cmp	r3, #0
    c146:	d01f      	beq.n	c188 <fnet_snprintf+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:821
    {
        --size; /* Space for the trailing null character.*/
    c148:	683b      	ldr	r3, [r7, #0]
    c14a:	3b01      	subs	r3, #1
    c14c:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:822
        buffer_id.dest = str;
    c14e:	687b      	ldr	r3, [r7, #4]
    c150:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:823
        buffer_id.dest_size = size; 
    c152:	683b      	ldr	r3, [r7, #0]
    c154:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:825
        
        buffer_stream.id = (long)&buffer_id;
    c156:	f107 0308 	add.w	r3, r7, #8
    c15a:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:826
        buffer_stream.putchar = fnet_serial_buffer_putchar;
    c15c:	4b0e      	ldr	r3, [pc, #56]	; (c198 <fnet_snprintf+0x6c>)
    c15e:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:831
        
        /*
         * Initialize the pointer to the variable length argument list.
         */
        fnet_va_start(ap, format);
    c160:	f107 0334 	add.w	r3, r7, #52	; 0x34
    c164:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:832
        result = fnet_serial_vprintf(&buffer_stream, format, ap);
    c166:	f107 0310 	add.w	r3, r7, #16
    c16a:	4618      	mov	r0, r3
    c16c:	6b39      	ldr	r1, [r7, #48]	; 0x30
    c16e:	6a3a      	ldr	r2, [r7, #32]
    c170:	f7ff fc2e 	bl	b9d0 <fnet_serial_vprintf>
    c174:	6278      	str	r0, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:833
        *buffer_id.dest = '\0'; /* Trailing null character.*/
    c176:	68bb      	ldr	r3, [r7, #8]
    c178:	2200      	movs	r2, #0
    c17a:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:834
        if(result > size)
    c17c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    c17e:	683b      	ldr	r3, [r7, #0]
    c180:	429a      	cmp	r2, r3
    c182:	d901      	bls.n	c188 <fnet_snprintf+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:835
            result = (int)size;
    c184:	683b      	ldr	r3, [r7, #0]
    c186:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:837
    } 
    return result;
    c188:	6a7b      	ldr	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:838
}
    c18a:	4618      	mov	r0, r3
    c18c:	3728      	adds	r7, #40	; 0x28
    c18e:	46bd      	mov	sp, r7
    c190:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
    c194:	b002      	add	sp, #8
    c196:	4770      	bx	lr
    c198:	0000c095 	.word	0x0000c095

0000c19c <fnet_putchar>:
fnet_putchar():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:842

/********************************************************************/
void fnet_putchar( int character )
{
    c19c:	b580      	push	{r7, lr}
    c19e:	b082      	sub	sp, #8
    c1a0:	af00      	add	r7, sp, #0
    c1a2:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:843
    fnet_cpu_serial_putchar( FNET_CFG_CPU_SERIAL_PORT_DEFAULT, character);
    c1a4:	2000      	movs	r0, #0
    c1a6:	6879      	ldr	r1, [r7, #4]
    c1a8:	f002 fbba 	bl	e920 <fnet_cpu_serial_putchar>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:844
}
    c1ac:	3708      	adds	r7, #8
    c1ae:	46bd      	mov	sp, r7
    c1b0:	bd80      	pop	{r7, pc}
    c1b2:	bf00      	nop

0000c1b4 <fnet_getchar>:
fnet_getchar():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:848

/********************************************************************/
int fnet_getchar( void )
{
    c1b4:	b580      	push	{r7, lr}
    c1b6:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:849
    return fnet_cpu_serial_getchar(FNET_CFG_CPU_SERIAL_PORT_DEFAULT);    
    c1b8:	2000      	movs	r0, #0
    c1ba:	f002 fbd3 	bl	e964 <fnet_cpu_serial_getchar>
    c1be:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/serial/fnet_serial.c:850
}
    c1c0:	4618      	mov	r0, r3
    c1c2:	bd80      	pop	{r7, pc}

0000c1c4 <fnet_poll_services>:
fnet_poll_services():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:79
*
* DESCRIPTION: This function calls all registered service routines in 
*              the polling list.
*************************************************************************/
void fnet_poll_services( void )
{
    c1c4:	b580      	push	{r7, lr}
    c1c6:	b082      	sub	sp, #8
    c1c8:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:82
    fnet_poll_desc_t i;

    for (i = 0; i < fnet_poll_if.last; i++)
    c1ca:	2300      	movs	r3, #0
    c1cc:	607b      	str	r3, [r7, #4]
    c1ce:	e013      	b.n	c1f8 <fnet_poll_services+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:84
    {
        if(fnet_poll_if.list[i].service)
    c1d0:	4b0d      	ldr	r3, [pc, #52]	; (c208 <fnet_poll_services+0x44>)
    c1d2:	687a      	ldr	r2, [r7, #4]
    c1d4:	f853 3032 	ldr.w	r3, [r3, r2, lsl #3]
    c1d8:	2b00      	cmp	r3, #0
    c1da:	d00a      	beq.n	c1f2 <fnet_poll_services+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:85
            fnet_poll_if.list[i].service(fnet_poll_if.list[i].service_param);
    c1dc:	4b0a      	ldr	r3, [pc, #40]	; (c208 <fnet_poll_services+0x44>)
    c1de:	687a      	ldr	r2, [r7, #4]
    c1e0:	f853 2032 	ldr.w	r2, [r3, r2, lsl #3]
    c1e4:	4908      	ldr	r1, [pc, #32]	; (c208 <fnet_poll_services+0x44>)
    c1e6:	687b      	ldr	r3, [r7, #4]
    c1e8:	00db      	lsls	r3, r3, #3
    c1ea:	440b      	add	r3, r1
    c1ec:	685b      	ldr	r3, [r3, #4]
    c1ee:	4618      	mov	r0, r3
    c1f0:	4790      	blx	r2
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:82
*************************************************************************/
void fnet_poll_services( void )
{
    fnet_poll_desc_t i;

    for (i = 0; i < fnet_poll_if.last; i++)
    c1f2:	687b      	ldr	r3, [r7, #4]
    c1f4:	3301      	adds	r3, #1
    c1f6:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:82 (discriminator 1)
    c1f8:	4b03      	ldr	r3, [pc, #12]	; (c208 <fnet_poll_services+0x44>)
    c1fa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    c1fc:	687b      	ldr	r3, [r7, #4]
    c1fe:	429a      	cmp	r2, r3
    c200:	d8e6      	bhi.n	c1d0 <fnet_poll_services+0xc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:87
    {
        if(fnet_poll_if.list[i].service)
            fnet_poll_if.list[i].service(fnet_poll_if.list[i].service_param);
    }
}
    c202:	3708      	adds	r7, #8
    c204:	46bd      	mov	sp, r7
    c206:	bd80      	pop	{r7, pc}
    c208:	100044e0 	.word	0x100044e0

0000c20c <fnet_poll_services_release>:
fnet_poll_services_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:96
*
* DESCRIPTION: This function calls all registered service routines in 
*              the polling list.
*************************************************************************/
void fnet_poll_services_release( void )
{
    c20c:	b580      	push	{r7, lr}
    c20e:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:97
    fnet_memset_zero(&fnet_poll_if, sizeof(fnet_poll_if));
    c210:	4802      	ldr	r0, [pc, #8]	; (c21c <fnet_poll_services_release+0x10>)
    c212:	212c      	movs	r1, #44	; 0x2c
    c214:	f7f9 fcfa 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:98
}
    c218:	bd80      	pop	{r7, pc}
    c21a:	bf00      	nop
    c21c:	100044e0 	.word	0x100044e0

0000c220 <fnet_poll_service_register>:
fnet_poll_service_register():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:106
* NAME: fnet_poll_service_register
*
* DESCRIPTION: This function adds service routine into the polling list.
*************************************************************************/
fnet_poll_desc_t fnet_poll_service_register( fnet_poll_service_t service, void *service_param )
{
    c220:	b480      	push	{r7}
    c222:	b085      	sub	sp, #20
    c224:	af00      	add	r7, sp, #0
    c226:	6078      	str	r0, [r7, #4]
    c228:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:107
    fnet_poll_desc_t i = 0;
    c22a:	2300      	movs	r3, #0
    c22c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:108
    fnet_poll_desc_t result = (fnet_poll_desc_t)FNET_ERR;
    c22e:	f04f 33ff 	mov.w	r3, #4294967295
    c232:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:110

    if(service)
    c234:	687b      	ldr	r3, [r7, #4]
    c236:	2b00      	cmp	r3, #0
    c238:	d025      	beq.n	c286 <fnet_poll_service_register+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:112
    {
        while(fnet_poll_if.list[i].service && i < FNET_CFG_POLL_MAX)
    c23a:	e002      	b.n	c242 <fnet_poll_service_register+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:114
        {
            i++;
    c23c:	68fb      	ldr	r3, [r7, #12]
    c23e:	3301      	adds	r3, #1
    c240:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:112 (discriminator 1)
    fnet_poll_desc_t i = 0;
    fnet_poll_desc_t result = (fnet_poll_desc_t)FNET_ERR;

    if(service)
    {
        while(fnet_poll_if.list[i].service && i < FNET_CFG_POLL_MAX)
    c242:	4b14      	ldr	r3, [pc, #80]	; (c294 <fnet_poll_service_register+0x74>)
    c244:	68fa      	ldr	r2, [r7, #12]
    c246:	f853 3032 	ldr.w	r3, [r3, r2, lsl #3]
    c24a:	2b00      	cmp	r3, #0
    c24c:	d002      	beq.n	c254 <fnet_poll_service_register+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:112 (discriminator 2)
    c24e:	68fb      	ldr	r3, [r7, #12]
    c250:	2b04      	cmp	r3, #4
    c252:	d9f3      	bls.n	c23c <fnet_poll_service_register+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:117
        {
            i++;
        };

        if(i != FNET_CFG_POLL_MAX)
    c254:	68fb      	ldr	r3, [r7, #12]
    c256:	2b05      	cmp	r3, #5
    c258:	d015      	beq.n	c286 <fnet_poll_service_register+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:119
        {
            fnet_poll_if.list[i].service = service;
    c25a:	4b0e      	ldr	r3, [pc, #56]	; (c294 <fnet_poll_service_register+0x74>)
    c25c:	68fa      	ldr	r2, [r7, #12]
    c25e:	6879      	ldr	r1, [r7, #4]
    c260:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:120
            fnet_poll_if.list[i].service_param = service_param;
    c264:	4a0b      	ldr	r2, [pc, #44]	; (c294 <fnet_poll_service_register+0x74>)
    c266:	68fb      	ldr	r3, [r7, #12]
    c268:	00db      	lsls	r3, r3, #3
    c26a:	4413      	add	r3, r2
    c26c:	683a      	ldr	r2, [r7, #0]
    c26e:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:121
            result = i;
    c270:	68fb      	ldr	r3, [r7, #12]
    c272:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:123

            if(result >= fnet_poll_if.last)
    c274:	4b07      	ldr	r3, [pc, #28]	; (c294 <fnet_poll_service_register+0x74>)
    c276:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    c278:	68bb      	ldr	r3, [r7, #8]
    c27a:	429a      	cmp	r2, r3
    c27c:	d803      	bhi.n	c286 <fnet_poll_service_register+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:124
                fnet_poll_if.last = result + 1;
    c27e:	68bb      	ldr	r3, [r7, #8]
    c280:	1c5a      	adds	r2, r3, #1
    c282:	4b04      	ldr	r3, [pc, #16]	; (c294 <fnet_poll_service_register+0x74>)
    c284:	629a      	str	r2, [r3, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:128
        }
    }

    return result;
    c286:	68bb      	ldr	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:129
}
    c288:	4618      	mov	r0, r3
    c28a:	3714      	adds	r7, #20
    c28c:	46bd      	mov	sp, r7
    c28e:	f85d 7b04 	ldr.w	r7, [sp], #4
    c292:	4770      	bx	lr
    c294:	100044e0 	.word	0x100044e0

0000c298 <fnet_poll_service_unregister>:
fnet_poll_service_unregister():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:137
* NAME: fnet_poll_service_unregister
*
* DESCRIPTION: This function removes service routine from the polling list.
*************************************************************************/
int fnet_poll_service_unregister( fnet_poll_desc_t descriptor )
{
    c298:	b480      	push	{r7}
    c29a:	b085      	sub	sp, #20
    c29c:	af00      	add	r7, sp, #0
    c29e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:140
    int result;

    if(descriptor < FNET_CFG_POLL_MAX)
    c2a0:	687b      	ldr	r3, [r7, #4]
    c2a2:	2b04      	cmp	r3, #4
    c2a4:	d807      	bhi.n	c2b6 <fnet_poll_service_unregister+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:142
    {
        fnet_poll_if.list[descriptor].service = 0;
    c2a6:	4b09      	ldr	r3, [pc, #36]	; (c2cc <fnet_poll_service_unregister+0x34>)
    c2a8:	687a      	ldr	r2, [r7, #4]
    c2aa:	2100      	movs	r1, #0
    c2ac:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:143
        result = FNET_OK;
    c2b0:	2300      	movs	r3, #0
    c2b2:	60fb      	str	r3, [r7, #12]
    c2b4:	e002      	b.n	c2bc <fnet_poll_service_unregister+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:146
    }
    else
        result = FNET_ERR;
    c2b6:	f04f 33ff 	mov.w	r3, #4294967295
    c2ba:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:148

    return result;
    c2bc:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/poll/fnet_poll.c:149
}
    c2be:	4618      	mov	r0, r3
    c2c0:	3714      	adds	r7, #20
    c2c2:	46bd      	mov	sp, r7
    c2c4:	f85d 7b04 	ldr.w	r7, [sp], #4
    c2c8:	4770      	bx	lr
    c2ca:	bf00      	nop
    c2cc:	100044e0 	.word	0x100044e0

0000c2d0 <fnet_ping_request>:
fnet_ping_request():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:110
* NAME: fnet_ping_request
*
* DESCRIPTION: Initializes PING service.
************************************************************************/
int fnet_ping_request( struct fnet_ping_params *params )
{
    c2d0:	b580      	push	{r7, lr}
    c2d2:	b086      	sub	sp, #24
    c2d4:	af02      	add	r7, sp, #8
    c2d6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:111
    const unsigned long bufsize_option = FNET_PING_BUFFER_SIZE;
    c2d8:	2348      	movs	r3, #72	; 0x48
    c2da:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:114

    /* Check input parameters. */
    if((params == 0) || (params->packet_count==0) || fnet_socket_addr_is_unspecified(&params->target_addr))
    c2dc:	687b      	ldr	r3, [r7, #4]
    c2de:	2b00      	cmp	r3, #0
    c2e0:	f000 809f 	beq.w	c422 <fnet_ping_request+0x152>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:114 (discriminator 1)
    c2e4:	687b      	ldr	r3, [r7, #4]
    c2e6:	68db      	ldr	r3, [r3, #12]
    c2e8:	2b00      	cmp	r3, #0
    c2ea:	f000 809a 	beq.w	c422 <fnet_ping_request+0x152>
    c2ee:	687b      	ldr	r3, [r7, #4]
    c2f0:	4618      	mov	r0, r3
    c2f2:	f7f9 f9b7 	bl	5664 <fnet_socket_addr_is_unspecified>
    c2f6:	4603      	mov	r3, r0
    c2f8:	2b00      	cmp	r3, #0
    c2fa:	f040 8092 	bne.w	c422 <fnet_ping_request+0x152>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:122
        goto ERROR;
    }

    
    /* Check if PING service is free.*/
    if(fnet_ping_if.state != FNET_PING_STATE_DISABLED)
    c2fe:	4b4c      	ldr	r3, [pc, #304]	; (c430 <fnet_ping_request+0x160>)
    c300:	7b1b      	ldrb	r3, [r3, #12]
    c302:	2b00      	cmp	r3, #0
    c304:	d000      	beq.n	c308 <fnet_ping_request+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:125
    {
        FNET_DEBUG_PING(FNET_PING_ERR_IS_INITIALIZED);
        goto ERROR;
    c306:	e08c      	b.n	c422 <fnet_ping_request+0x152>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:129
    }
    
    /* Save input parmeters.*/
    fnet_ping_if.handler = params->handler;
    c308:	687b      	ldr	r3, [r7, #4]
    c30a:	69da      	ldr	r2, [r3, #28]
    c30c:	4b48      	ldr	r3, [pc, #288]	; (c430 <fnet_ping_request+0x160>)
    c30e:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:130
    fnet_ping_if.handler_cookie = params->cookie;
    c310:	687b      	ldr	r3, [r7, #4]
    c312:	6a1a      	ldr	r2, [r3, #32]
    c314:	4b46      	ldr	r3, [pc, #280]	; (c430 <fnet_ping_request+0x160>)
    c316:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:131
    fnet_ping_if.timeout_clk = params->timeout/FNET_TIMER_PERIOD_MS;
    c318:	687b      	ldr	r3, [r7, #4]
    c31a:	691a      	ldr	r2, [r3, #16]
    c31c:	4b45      	ldr	r3, [pc, #276]	; (c434 <fnet_ping_request+0x164>)
    c31e:	fba3 1302 	umull	r1, r3, r3, r2
    c322:	095a      	lsrs	r2, r3, #5
    c324:	4b42      	ldr	r3, [pc, #264]	; (c430 <fnet_ping_request+0x160>)
    c326:	661a      	str	r2, [r3, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:132
    if(fnet_ping_if.timeout_clk == 0)
    c328:	4b41      	ldr	r3, [pc, #260]	; (c430 <fnet_ping_request+0x160>)
    c32a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    c32c:	2b00      	cmp	r3, #0
    c32e:	d102      	bne.n	c336 <fnet_ping_request+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:133
        fnet_ping_if.timeout_clk = 1;
    c330:	4b3f      	ldr	r3, [pc, #252]	; (c430 <fnet_ping_request+0x160>)
    c332:	2201      	movs	r2, #1
    c334:	661a      	str	r2, [r3, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:134
    fnet_ping_if.family = params->target_addr.sa_family;
    c336:	687b      	ldr	r3, [r7, #4]
    c338:	881a      	ldrh	r2, [r3, #0]
    c33a:	4b3d      	ldr	r3, [pc, #244]	; (c430 <fnet_ping_request+0x160>)
    c33c:	809a      	strh	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:135
    fnet_ping_if.packet_count = params->packet_count;
    c33e:	687b      	ldr	r3, [r7, #4]
    c340:	68da      	ldr	r2, [r3, #12]
    c342:	4b3b      	ldr	r3, [pc, #236]	; (c430 <fnet_ping_request+0x160>)
    c344:	669a      	str	r2, [r3, #104]	; 0x68
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:136
    fnet_ping_if.pattern = params->pattern;
    c346:	687b      	ldr	r3, [r7, #4]
    c348:	7e1a      	ldrb	r2, [r3, #24]
    c34a:	4b39      	ldr	r3, [pc, #228]	; (c430 <fnet_ping_request+0x160>)
    c34c:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:137
    fnet_ping_if.packet_size = params->packet_size;
    c350:	687b      	ldr	r3, [r7, #4]
    c352:	689a      	ldr	r2, [r3, #8]
    c354:	4b36      	ldr	r3, [pc, #216]	; (c430 <fnet_ping_request+0x160>)
    c356:	66da      	str	r2, [r3, #108]	; 0x6c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:138
    if(fnet_ping_if.packet_size > FNET_CFG_PING_PACKET_MAX)
    c358:	4b35      	ldr	r3, [pc, #212]	; (c430 <fnet_ping_request+0x160>)
    c35a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
    c35c:	2b40      	cmp	r3, #64	; 0x40
    c35e:	d902      	bls.n	c366 <fnet_ping_request+0x96>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:139
        fnet_ping_if.packet_size = FNET_CFG_PING_PACKET_MAX;
    c360:	4b33      	ldr	r3, [pc, #204]	; (c430 <fnet_ping_request+0x160>)
    c362:	2240      	movs	r2, #64	; 0x40
    c364:	66da      	str	r2, [r3, #108]	; 0x6c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:140
    fnet_ping_if.target_addr  = params->target_addr; 
    c366:	4a32      	ldr	r2, [pc, #200]	; (c430 <fnet_ping_request+0x160>)
    c368:	687b      	ldr	r3, [r7, #4]
    c36a:	3272      	adds	r2, #114	; 0x72
    c36c:	cb03      	ldmia	r3!, {r0, r1}
    c36e:	6010      	str	r0, [r2, #0]
    c370:	6051      	str	r1, [r2, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:143
       
    /* Create socket */
    if((fnet_ping_if.socket_foreign = socket(fnet_ping_if.family, SOCK_RAW, (params->target_addr.sa_family == AF_INET) ? IPPROTO_ICMP : IPPROTO_ICMPV6)) == SOCKET_INVALID)
    c372:	4b2f      	ldr	r3, [pc, #188]	; (c430 <fnet_ping_request+0x160>)
    c374:	889a      	ldrh	r2, [r3, #4]
    c376:	687b      	ldr	r3, [r7, #4]
    c378:	881b      	ldrh	r3, [r3, #0]
    c37a:	2b01      	cmp	r3, #1
    c37c:	d101      	bne.n	c382 <fnet_ping_request+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:143 (discriminator 1)
    c37e:	2301      	movs	r3, #1
    c380:	e000      	b.n	c384 <fnet_ping_request+0xb4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:143 (discriminator 2)
    c382:	233a      	movs	r3, #58	; 0x3a
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:143 (discriminator 3)
    c384:	4610      	mov	r0, r2
    c386:	2103      	movs	r1, #3
    c388:	461a      	mov	r2, r3
    c38a:	f7f8 f943 	bl	4614 <socket>
    c38e:	4602      	mov	r2, r0
    c390:	4b27      	ldr	r3, [pc, #156]	; (c430 <fnet_ping_request+0x160>)
    c392:	601a      	str	r2, [r3, #0]
    c394:	4b26      	ldr	r3, [pc, #152]	; (c430 <fnet_ping_request+0x160>)
    c396:	681b      	ldr	r3, [r3, #0]
    c398:	f1b3 3fff 	cmp.w	r3, #4294967295
    c39c:	d100      	bne.n	c3a0 <fnet_ping_request+0xd0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:146
    {
        FNET_DEBUG_PING(FNET_PING_ERR_SOCKET_CREATION);
        goto ERROR;
    c39e:	e040      	b.n	c422 <fnet_ping_request+0x152>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:151
    }
    
    /* Set Socket options. */
#if FNET_CFG_IP4    
    if(fnet_ping_if.family == AF_INET)    
    c3a0:	4b23      	ldr	r3, [pc, #140]	; (c430 <fnet_ping_request+0x160>)
    c3a2:	889b      	ldrh	r3, [r3, #4]
    c3a4:	2b01      	cmp	r3, #1
    c3a6:	d10a      	bne.n	c3be <fnet_ping_request+0xee>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:152
        setsockopt(fnet_ping_if.socket_foreign, IPPROTO_IP, IP_TTL, (char *) &params->ttl, sizeof(params->ttl));
    c3a8:	4b21      	ldr	r3, [pc, #132]	; (c430 <fnet_ping_request+0x160>)
    c3aa:	681a      	ldr	r2, [r3, #0]
    c3ac:	687b      	ldr	r3, [r7, #4]
    c3ae:	3314      	adds	r3, #20
    c3b0:	2104      	movs	r1, #4
    c3b2:	9100      	str	r1, [sp, #0]
    c3b4:	4610      	mov	r0, r2
    c3b6:	2100      	movs	r1, #0
    c3b8:	2204      	movs	r2, #4
    c3ba:	f7f8 fdcd 	bl	4f58 <setsockopt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:160
#if FNET_CFG_IP6        
    if(fnet_ping_if.family == AF_INET6)
        setsockopt(fnet_ping_if.socket_foreign, IPPROTO_IPV6, IPV6_UNICAST_HOPS, (char *) &params->ttl, sizeof(params->ttl));
#endif        
            
    setsockopt(fnet_ping_if.socket_foreign, SOL_SOCKET, SO_RCVBUF, (char *) &bufsize_option, sizeof(bufsize_option));
    c3be:	4b1c      	ldr	r3, [pc, #112]	; (c430 <fnet_ping_request+0x160>)
    c3c0:	681a      	ldr	r2, [r3, #0]
    c3c2:	f107 030c 	add.w	r3, r7, #12
    c3c6:	2104      	movs	r1, #4
    c3c8:	9100      	str	r1, [sp, #0]
    c3ca:	4610      	mov	r0, r2
    c3cc:	f64f 71ff 	movw	r1, #65535	; 0xffff
    c3d0:	f241 0202 	movw	r2, #4098	; 0x1002
    c3d4:	f7f8 fdc0 	bl	4f58 <setsockopt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:161
    setsockopt(fnet_ping_if.socket_foreign, SOL_SOCKET, SO_SNDBUF, (char *) &bufsize_option, sizeof(bufsize_option));
    c3d8:	4b15      	ldr	r3, [pc, #84]	; (c430 <fnet_ping_request+0x160>)
    c3da:	681a      	ldr	r2, [r3, #0]
    c3dc:	f107 030c 	add.w	r3, r7, #12
    c3e0:	2104      	movs	r1, #4
    c3e2:	9100      	str	r1, [sp, #0]
    c3e4:	4610      	mov	r0, r2
    c3e6:	f64f 71ff 	movw	r1, #65535	; 0xffff
    c3ea:	f241 0201 	movw	r2, #4097	; 0x1001
    c3ee:	f7f8 fdb3 	bl	4f58 <setsockopt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:164

    /* Register PING service. */
    fnet_ping_if.service_descriptor = fnet_poll_service_register(fnet_ping_state_machine, (void *) &fnet_ping_if);
    c3f2:	4811      	ldr	r0, [pc, #68]	; (c438 <fnet_ping_request+0x168>)
    c3f4:	490e      	ldr	r1, [pc, #56]	; (c430 <fnet_ping_request+0x160>)
    c3f6:	f7ff ff13 	bl	c220 <fnet_poll_service_register>
    c3fa:	4602      	mov	r2, r0
    c3fc:	4b0c      	ldr	r3, [pc, #48]	; (c430 <fnet_ping_request+0x160>)
    c3fe:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:165
    if(fnet_ping_if.service_descriptor == (fnet_poll_desc_t)FNET_ERR)
    c400:	4b0b      	ldr	r3, [pc, #44]	; (c430 <fnet_ping_request+0x160>)
    c402:	689b      	ldr	r3, [r3, #8]
    c404:	f1b3 3fff 	cmp.w	r3, #4294967295
    c408:	d106      	bne.n	c418 <fnet_ping_request+0x148>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:168
    {
        FNET_DEBUG_PING(FNET_PING_ERR_SERVICE);
        goto ERROR_1;
    c40a:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:176
    fnet_ping_if.state = FNET_PING_STATE_SENDING_REQUEST;
    
    return FNET_OK;
    
ERROR_1:
    closesocket(fnet_ping_if.socket_foreign);
    c40c:	4b08      	ldr	r3, [pc, #32]	; (c430 <fnet_ping_request+0x160>)
    c40e:	681b      	ldr	r3, [r3, #0]
    c410:	4618      	mov	r0, r3
    c412:	f7f8 fadf 	bl	49d4 <closesocket>
    c416:	e004      	b.n	c422 <fnet_ping_request+0x152>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:171
    {
        FNET_DEBUG_PING(FNET_PING_ERR_SERVICE);
        goto ERROR_1;
    }
    
    fnet_ping_if.state = FNET_PING_STATE_SENDING_REQUEST;
    c418:	4b05      	ldr	r3, [pc, #20]	; (c430 <fnet_ping_request+0x160>)
    c41a:	2201      	movs	r2, #1
    c41c:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:173
    
    return FNET_OK;
    c41e:	2300      	movs	r3, #0
    c420:	e001      	b.n	c426 <fnet_ping_request+0x156>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:179
    
ERROR_1:
    closesocket(fnet_ping_if.socket_foreign);

ERROR:
    return FNET_ERR;
    c422:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:180
}
    c426:	4618      	mov	r0, r3
    c428:	3710      	adds	r7, #16
    c42a:	46bd      	mov	sp, r7
    c42c:	bd80      	pop	{r7, pc}
    c42e:	bf00      	nop
    c430:	1000450c 	.word	0x1000450c
    c434:	51eb851f 	.word	0x51eb851f
    c438:	0000c43d 	.word	0x0000c43d

0000c43c <fnet_ping_state_machine>:
fnet_ping_state_machine():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:188
* NAME: fnet_ping_state_machine
*
* DESCRIPTION: PING service state machine.
************************************************************************/
static void fnet_ping_state_machine(void *fnet_ping_if_p)
{
    c43c:	b590      	push	{r4, r7, lr}
    c43e:	b08f      	sub	sp, #60	; 0x3c
    c440:	af02      	add	r7, sp, #8
    c442:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:191
    int                     received;    
    fnet_icmp_echo_header_t *hdr;
    fnet_ping_if_t          *ping_if = (fnet_ping_if_t *)fnet_ping_if_p;
    c444:	687b      	ldr	r3, [r7, #4]
    c446:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:193
    struct sockaddr         addr;
    int                     addr_len = sizeof(addr);
    c448:	2308      	movs	r3, #8
    c44a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:195

    switch(ping_if->state)
    c44c:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c44e:	7b1b      	ldrb	r3, [r3, #12]
    c450:	2b02      	cmp	r3, #2
    c452:	d062      	beq.n	c51a <fnet_ping_state_machine+0xde>
    c454:	2b03      	cmp	r3, #3
    c456:	f000 8111 	beq.w	c67c <fnet_ping_state_machine+0x240>
    c45a:	2b01      	cmp	r3, #1
    c45c:	f040 8120 	bne.w	c6a0 <fnet_ping_state_machine+0x264>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:200
    {
        /*===================================*/ 
        case FNET_PING_STATE_SENDING_REQUEST:
            /* Build message.*/
            hdr = (fnet_icmp_echo_header_t *)&fnet_ping_if.buffer[0];
    c460:	4b91      	ldr	r3, [pc, #580]	; (c6a8 <fnet_ping_state_machine+0x26c>)
    c462:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:203

            /* Fill ICMP Echo request header.*/
            fnet_memset_zero(hdr, sizeof(*hdr));
    c464:	6a78      	ldr	r0, [r7, #36]	; 0x24
    c466:	2108      	movs	r1, #8
    c468:	f7f9 fbd0 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:204
            hdr->header.type = (unsigned char)((fnet_ping_if.family == AF_INET) ? FNET_ICMP_ECHO: FNET_ICMP6_TYPE_ECHO_REQ);
    c46c:	4b8f      	ldr	r3, [pc, #572]	; (c6ac <fnet_ping_state_machine+0x270>)
    c46e:	889b      	ldrh	r3, [r3, #4]
    c470:	2b01      	cmp	r3, #1
    c472:	d101      	bne.n	c478 <fnet_ping_state_machine+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:204 (discriminator 1)
    c474:	2308      	movs	r3, #8
    c476:	e000      	b.n	c47a <fnet_ping_state_machine+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:204 (discriminator 2)
    c478:	2380      	movs	r3, #128	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:204 (discriminator 3)
    c47a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    c47c:	7013      	strb	r3, [r2, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:205 (discriminator 3)
            hdr->identifier = FNET_CFG_PING_IDENTIFIER;
    c47e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    c480:	2200      	movs	r2, #0
    c482:	711a      	strb	r2, [r3, #4]
    c484:	2200      	movs	r2, #0
    c486:	f042 0201 	orr.w	r2, r2, #1
    c48a:	715a      	strb	r2, [r3, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:206 (discriminator 3)
            fnet_ping_if.sequence_number++;
    c48c:	4b87      	ldr	r3, [pc, #540]	; (c6ac <fnet_ping_state_machine+0x270>)
    c48e:	88db      	ldrh	r3, [r3, #6]
    c490:	3301      	adds	r3, #1
    c492:	b29a      	uxth	r2, r3
    c494:	4b85      	ldr	r3, [pc, #532]	; (c6ac <fnet_ping_state_machine+0x270>)
    c496:	80da      	strh	r2, [r3, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:207 (discriminator 3)
            hdr->sequence_number = fnet_htons(fnet_ping_if.sequence_number);
    c498:	4b84      	ldr	r3, [pc, #528]	; (c6ac <fnet_ping_state_machine+0x270>)
    c49a:	88db      	ldrh	r3, [r3, #6]
    c49c:	4618      	mov	r0, r3
    c49e:	f003 f83f 	bl	f520 <fnet_htons>
    c4a2:	4603      	mov	r3, r0
    c4a4:	461a      	mov	r2, r3
    c4a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    c4a8:	80da      	strh	r2, [r3, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:210 (discriminator 3)
            
            /* Fill payload data by pattern.*/
            fnet_memset(&fnet_ping_if.buffer[sizeof(*hdr)], ping_if->pattern, ping_if->packet_size);
    c4aa:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c4ac:	f893 3070 	ldrb.w	r3, [r3, #112]	; 0x70
    c4b0:	461a      	mov	r2, r3
    c4b2:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c4b4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
    c4b6:	487e      	ldr	r0, [pc, #504]	; (c6b0 <fnet_ping_state_machine+0x274>)
    c4b8:	4611      	mov	r1, r2
    c4ba:	461a      	mov	r2, r3
    c4bc:	f7f9 fb88 	bl	5bd0 <fnet_memset>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:214 (discriminator 3)
                
            /* Checksum.*/
#if FNET_CFG_IP4
            if(ping_if->family == AF_INET)
    c4c0:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c4c2:	889b      	ldrh	r3, [r3, #4]
    c4c4:	2b01      	cmp	r3, #1
    c4c6:	d10a      	bne.n	c4de <fnet_ping_state_machine+0xa2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:216
            {
                hdr->header.checksum = fnet_checksum_buf(&fnet_ping_if.buffer[0], (int)(sizeof(*hdr) + ping_if->packet_size));
    c4c8:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c4ca:	6edb      	ldr	r3, [r3, #108]	; 0x6c
    c4cc:	3308      	adds	r3, #8
    c4ce:	4876      	ldr	r0, [pc, #472]	; (c6a8 <fnet_ping_state_machine+0x26c>)
    c4d0:	4619      	mov	r1, r3
    c4d2:	f7f4 fbab 	bl	c2c <fnet_checksum_buf>
    c4d6:	4603      	mov	r3, r0
    c4d8:	461a      	mov	r2, r3
    c4da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    c4dc:	805a      	strh	r2, [r3, #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:237
            else
#endif 
            {};
            
            /* Send request.*/    
            sendto(fnet_ping_if.socket_foreign, (char*)(&fnet_ping_if.buffer[0]), (int)(sizeof(*hdr) + ping_if->packet_size), 0,  &ping_if->target_addr, sizeof(ping_if->target_addr));
    c4de:	4b73      	ldr	r3, [pc, #460]	; (c6ac <fnet_ping_state_machine+0x270>)
    c4e0:	681a      	ldr	r2, [r3, #0]
    c4e2:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c4e4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
    c4e6:	3308      	adds	r3, #8
    c4e8:	6ab9      	ldr	r1, [r7, #40]	; 0x28
    c4ea:	3172      	adds	r1, #114	; 0x72
    c4ec:	9100      	str	r1, [sp, #0]
    c4ee:	2108      	movs	r1, #8
    c4f0:	9101      	str	r1, [sp, #4]
    c4f2:	4610      	mov	r0, r2
    c4f4:	496c      	ldr	r1, [pc, #432]	; (c6a8 <fnet_ping_state_machine+0x26c>)
    c4f6:	461a      	mov	r2, r3
    c4f8:	2300      	movs	r3, #0
    c4fa:	f7f8 fbab 	bl	4c54 <sendto>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:238
            ping_if->packet_count--;
    c4fe:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c500:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    c502:	1e5a      	subs	r2, r3, #1
    c504:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c506:	669a      	str	r2, [r3, #104]	; 0x68
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:240
           
            fnet_ping_if.send_time = fnet_timer_ticks();        
    c508:	f7fd fc4a 	bl	9da0 <fnet_timer_ticks>
    c50c:	4602      	mov	r2, r0
    c50e:	4b67      	ldr	r3, [pc, #412]	; (c6ac <fnet_ping_state_machine+0x270>)
    c510:	665a      	str	r2, [r3, #100]	; 0x64
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:242
            
            ping_if->state = FNET_PING_STATE_WAITING_REPLY;
    c512:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c514:	2202      	movs	r2, #2
    c516:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:243
            break;
    c518:	e0c2      	b.n	c6a0 <fnet_ping_state_machine+0x264>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:248
        /*===================================*/    
        case  FNET_PING_STATE_WAITING_REPLY:
            /* Receive data */
            
            received = recvfrom(ping_if->socket_foreign, (char*)(&ping_if->buffer[0]), FNET_PING_BUFFER_SIZE, 0, &addr, &addr_len );
    c51a:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c51c:	681a      	ldr	r2, [r3, #0]
    c51e:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c520:	3318      	adds	r3, #24
    c522:	f107 0118 	add.w	r1, r7, #24
    c526:	9100      	str	r1, [sp, #0]
    c528:	f107 0114 	add.w	r1, r7, #20
    c52c:	9101      	str	r1, [sp, #4]
    c52e:	4610      	mov	r0, r2
    c530:	4619      	mov	r1, r3
    c532:	2248      	movs	r2, #72	; 0x48
    c534:	2300      	movs	r3, #0
    c536:	f7f8 fc11 	bl	4d5c <recvfrom>
    c53a:	6238      	str	r0, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:250
            
            if(received > 0 )
    c53c:	6a3b      	ldr	r3, [r7, #32]
    c53e:	2b00      	cmp	r3, #0
    c540:	dd46      	ble.n	c5d0 <fnet_ping_state_machine+0x194>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:252
            {
                unsigned short  checksum = 0;
    c542:	2300      	movs	r3, #0
    c544:	85fb      	strh	r3, [r7, #46]	; 0x2e
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:254
                
                hdr = (fnet_icmp_echo_header_t *)(ping_if->buffer);
    c546:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c548:	3318      	adds	r3, #24
    c54a:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:259
                
                
                /* Check checksum.*/
#if FNET_CFG_IP4
                if(ping_if->family == AF_INET)
    c54c:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c54e:	889b      	ldrh	r3, [r3, #4]
    c550:	2b01      	cmp	r3, #1
    c552:	d105      	bne.n	c560 <fnet_ping_state_machine+0x124>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:261
                {
                    checksum = fnet_checksum_buf(&fnet_ping_if.buffer[0], received);
    c554:	4854      	ldr	r0, [pc, #336]	; (c6a8 <fnet_ping_state_machine+0x26c>)
    c556:	6a39      	ldr	r1, [r7, #32]
    c558:	f7f4 fb68 	bl	c2c <fnet_checksum_buf>
    c55c:	4603      	mov	r3, r0
    c55e:	85fb      	strh	r3, [r7, #46]	; 0x2e
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:279
                }
                else    
#endif                               
                {}; 
                /* Check header.*/
                if( checksum
    c560:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
    c562:	2b00      	cmp	r3, #0
    c564:	d162      	bne.n	c62c <fnet_ping_state_machine+0x1f0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:280
                    ||(hdr->header.type != (addr.sa_family == AF_INET) ? FNET_ICMP_ECHOREPLY: FNET_ICMP6_TYPE_ECHO_REPLY)
    c566:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    c568:	781b      	ldrb	r3, [r3, #0]
    c56a:	461a      	mov	r2, r3
    c56c:	8b3b      	ldrh	r3, [r7, #24]
    c56e:	2b01      	cmp	r3, #1
    c570:	bf14      	ite	ne
    c572:	2300      	movne	r3, #0
    c574:	2301      	moveq	r3, #1
    c576:	b2db      	uxtb	r3, r3
    c578:	429a      	cmp	r2, r3
    c57a:	d057      	beq.n	c62c <fnet_ping_state_machine+0x1f0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:281
                    ||(hdr->identifier != FNET_CFG_PING_IDENTIFIER)
    c57c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    c57e:	889b      	ldrh	r3, [r3, #4]
    c580:	b29b      	uxth	r3, r3
    c582:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
    c586:	d151      	bne.n	c62c <fnet_ping_state_machine+0x1f0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:282
                    ||(hdr->sequence_number != fnet_htons(ping_if->sequence_number)) )
    c588:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    c58a:	88db      	ldrh	r3, [r3, #6]
    c58c:	b29c      	uxth	r4, r3
    c58e:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c590:	88db      	ldrh	r3, [r3, #6]
    c592:	4618      	mov	r0, r3
    c594:	f002 ffc4 	bl	f520 <fnet_htons>
    c598:	4603      	mov	r3, r0
    c59a:	429c      	cmp	r4, r3
    c59c:	d146      	bne.n	c62c <fnet_ping_state_machine+0x1f0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:288
                {
                    goto NO_DATA;
                }     
                
                /* Call handler.*/
                if(ping_if->handler)                 
    c59e:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c5a0:	691b      	ldr	r3, [r3, #16]
    c5a2:	2b00      	cmp	r3, #0
    c5a4:	d009      	beq.n	c5ba <fnet_ping_state_machine+0x17e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:289
                    ping_if->handler(FNET_OK, ping_if->packet_count, &addr, ping_if->handler_cookie);
    c5a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c5a8:	691c      	ldr	r4, [r3, #16]
    c5aa:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c5ac:	6e99      	ldr	r1, [r3, #104]	; 0x68
    c5ae:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c5b0:	695b      	ldr	r3, [r3, #20]
    c5b2:	f107 0218 	add.w	r2, r7, #24
    c5b6:	2000      	movs	r0, #0
    c5b8:	47a0      	blx	r4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:291
                    
                if(ping_if->packet_count)
    c5ba:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c5bc:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    c5be:	2b00      	cmp	r3, #0
    c5c0:	d003      	beq.n	c5ca <fnet_ping_state_machine+0x18e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:292
                    ping_if->state = FNET_PING_STATE_WAITING_TIMEOUT;
    c5c2:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c5c4:	2203      	movs	r2, #3
    c5c6:	731a      	strb	r2, [r3, #12]
    c5c8:	e057      	b.n	c67a <fnet_ping_state_machine+0x23e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:294
                else
                    fnet_ping_release();              
    c5ca:	f000 f873 	bl	c6b4 <fnet_ping_release>
    c5ce:	e054      	b.n	c67a <fnet_ping_state_machine+0x23e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:296
            }
            else if(received == SOCKET_ERROR)
    c5d0:	6a3b      	ldr	r3, [r7, #32]
    c5d2:	f1b3 3fff 	cmp.w	r3, #4294967295
    c5d6:	d129      	bne.n	c62c <fnet_ping_state_machine+0x1f0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:299
            {
                /* Call handler.*/
                if(ping_if->handler)
    c5d8:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c5da:	691b      	ldr	r3, [r3, #16]
    c5dc:	2b00      	cmp	r3, #0
    c5de:	d01a      	beq.n	c616 <fnet_ping_state_machine+0x1da>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:305
                {
                    int     sock_err ;
                    int     option_len;
                    
                    /* Get socket error.*/
                    option_len = sizeof(sock_err); 
    c5e0:	2304      	movs	r3, #4
    c5e2:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:306
                    getsockopt(ping_if->socket_foreign, SOL_SOCKET, SO_ERROR, (char*)&sock_err, &option_len);
    c5e4:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c5e6:	681a      	ldr	r2, [r3, #0]
    c5e8:	f107 0310 	add.w	r3, r7, #16
    c5ec:	f107 010c 	add.w	r1, r7, #12
    c5f0:	9100      	str	r1, [sp, #0]
    c5f2:	4610      	mov	r0, r2
    c5f4:	f64f 71ff 	movw	r1, #65535	; 0xffff
    c5f8:	f241 0206 	movw	r2, #4102	; 0x1006
    c5fc:	f7f8 fd6a 	bl	50d4 <getsockopt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:308
                                 
                    ping_if->handler(sock_err, ping_if->packet_count, FNET_NULL, ping_if->handler_cookie);
    c600:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c602:	691c      	ldr	r4, [r3, #16]
    c604:	6939      	ldr	r1, [r7, #16]
    c606:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c608:	6e9a      	ldr	r2, [r3, #104]	; 0x68
    c60a:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c60c:	695b      	ldr	r3, [r3, #20]
    c60e:	4608      	mov	r0, r1
    c610:	4611      	mov	r1, r2
    c612:	2200      	movs	r2, #0
    c614:	47a0      	blx	r4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:312
                }
                
                
                if(ping_if->packet_count)
    c616:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c618:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    c61a:	2b00      	cmp	r3, #0
    c61c:	d003      	beq.n	c626 <fnet_ping_state_machine+0x1ea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:313
                    ping_if->state = FNET_PING_STATE_WAITING_TIMEOUT;
    c61e:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c620:	2203      	movs	r2, #3
    c622:	731a      	strb	r2, [r3, #12]
    c624:	e029      	b.n	c67a <fnet_ping_state_machine+0x23e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:315
                else
                    fnet_ping_release();
    c626:	f000 f845 	bl	c6b4 <fnet_ping_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:333
                        ping_if->state = FNET_PING_STATE_SENDING_REQUEST;
                    else
                        fnet_ping_release();    
                }
            }
            break;
    c62a:	e039      	b.n	c6a0 <fnet_ping_state_machine+0x264>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:321
                    
            }
            else /* No data. Check timeout */
            {
NO_DATA:            
                if(fnet_timer_get_interval(fnet_ping_if.send_time, fnet_timer_ticks()) > fnet_ping_if.timeout_clk)
    c62c:	4b1f      	ldr	r3, [pc, #124]	; (c6ac <fnet_ping_state_machine+0x270>)
    c62e:	6e5c      	ldr	r4, [r3, #100]	; 0x64
    c630:	f7fd fbb6 	bl	9da0 <fnet_timer_ticks>
    c634:	4603      	mov	r3, r0
    c636:	4620      	mov	r0, r4
    c638:	4619      	mov	r1, r3
    c63a:	f7fd fc91 	bl	9f60 <fnet_timer_get_interval>
    c63e:	4602      	mov	r2, r0
    c640:	4b1a      	ldr	r3, [pc, #104]	; (c6ac <fnet_ping_state_machine+0x270>)
    c642:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    c644:	429a      	cmp	r2, r3
    c646:	d918      	bls.n	c67a <fnet_ping_state_machine+0x23e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:324
                {
                    /* Call handler.*/
                    if(ping_if->handler)                 
    c648:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c64a:	691b      	ldr	r3, [r3, #16]
    c64c:	2b00      	cmp	r3, #0
    c64e:	d009      	beq.n	c664 <fnet_ping_state_machine+0x228>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:325
                        ping_if->handler(FNET_ERR_TIMEDOUT, ping_if->packet_count, FNET_NULL, ping_if->handler_cookie);
    c650:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c652:	691c      	ldr	r4, [r3, #16]
    c654:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c656:	6e9a      	ldr	r2, [r3, #104]	; 0x68
    c658:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c65a:	695b      	ldr	r3, [r3, #20]
    c65c:	2017      	movs	r0, #23
    c65e:	4611      	mov	r1, r2
    c660:	2200      	movs	r2, #0
    c662:	47a0      	blx	r4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:327
                        
                    if(ping_if->packet_count)
    c664:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c666:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    c668:	2b00      	cmp	r3, #0
    c66a:	d003      	beq.n	c674 <fnet_ping_state_machine+0x238>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:328
                        ping_if->state = FNET_PING_STATE_SENDING_REQUEST;
    c66c:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c66e:	2201      	movs	r2, #1
    c670:	731a      	strb	r2, [r3, #12]
    c672:	e002      	b.n	c67a <fnet_ping_state_machine+0x23e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:330
                    else
                        fnet_ping_release();    
    c674:	f000 f81e 	bl	c6b4 <fnet_ping_release>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:333
                }
            }
            break;
    c678:	e012      	b.n	c6a0 <fnet_ping_state_machine+0x264>
    c67a:	e011      	b.n	c6a0 <fnet_ping_state_machine+0x264>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:336
        /*===================================*/             
        case FNET_PING_STATE_WAITING_TIMEOUT:
            if(fnet_timer_get_interval(fnet_ping_if.send_time, fnet_timer_ticks()) > fnet_ping_if.timeout_clk)
    c67c:	4b0b      	ldr	r3, [pc, #44]	; (c6ac <fnet_ping_state_machine+0x270>)
    c67e:	6e5c      	ldr	r4, [r3, #100]	; 0x64
    c680:	f7fd fb8e 	bl	9da0 <fnet_timer_ticks>
    c684:	4603      	mov	r3, r0
    c686:	4620      	mov	r0, r4
    c688:	4619      	mov	r1, r3
    c68a:	f7fd fc69 	bl	9f60 <fnet_timer_get_interval>
    c68e:	4602      	mov	r2, r0
    c690:	4b06      	ldr	r3, [pc, #24]	; (c6ac <fnet_ping_state_machine+0x270>)
    c692:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    c694:	429a      	cmp	r2, r3
    c696:	d902      	bls.n	c69e <fnet_ping_state_machine+0x262>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:338
            {
                ping_if->state = FNET_PING_STATE_SENDING_REQUEST;
    c698:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c69a:	2201      	movs	r2, #1
    c69c:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:340
            }
            break;
    c69e:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:342
    }
}
    c6a0:	3734      	adds	r7, #52	; 0x34
    c6a2:	46bd      	mov	sp, r7
    c6a4:	bd90      	pop	{r4, r7, pc}
    c6a6:	bf00      	nop
    c6a8:	10004524 	.word	0x10004524
    c6ac:	1000450c 	.word	0x1000450c
    c6b0:	1000452c 	.word	0x1000452c

0000c6b4 <fnet_ping_release>:
fnet_ping_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:350
* NAME: fnet_ping_release
*
* DESCRIPTION: Releases the PING service.
************************************************************************/ 
void fnet_ping_release( void )
{
    c6b4:	b580      	push	{r7, lr}
    c6b6:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:351
    if(fnet_ping_if.state != FNET_PING_STATE_DISABLED)
    c6b8:	4b08      	ldr	r3, [pc, #32]	; (c6dc <fnet_ping_release+0x28>)
    c6ba:	7b1b      	ldrb	r3, [r3, #12]
    c6bc:	2b00      	cmp	r3, #0
    c6be:	d00c      	beq.n	c6da <fnet_ping_release+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:354
    {
        /* Close socket. */
        closesocket(fnet_ping_if.socket_foreign);
    c6c0:	4b06      	ldr	r3, [pc, #24]	; (c6dc <fnet_ping_release+0x28>)
    c6c2:	681b      	ldr	r3, [r3, #0]
    c6c4:	4618      	mov	r0, r3
    c6c6:	f7f8 f985 	bl	49d4 <closesocket>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:357
    
        /* Unregister the tftp service. */
        fnet_poll_service_unregister(fnet_ping_if.service_descriptor);
    c6ca:	4b04      	ldr	r3, [pc, #16]	; (c6dc <fnet_ping_release+0x28>)
    c6cc:	689b      	ldr	r3, [r3, #8]
    c6ce:	4618      	mov	r0, r3
    c6d0:	f7ff fde2 	bl	c298 <fnet_poll_service_unregister>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:359
    
        fnet_ping_if.state = FNET_PING_STATE_DISABLED; 
    c6d4:	4b01      	ldr	r3, [pc, #4]	; (c6dc <fnet_ping_release+0x28>)
    c6d6:	2200      	movs	r2, #0
    c6d8:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:361
    }
}
    c6da:	bd80      	pop	{r7, pc}
    c6dc:	1000450c 	.word	0x1000450c

0000c6e0 <fnet_ping_state>:
fnet_ping_state():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:370
*
* DESCRIPTION: Retrieves the current state of the PING service 
*              (for debugging purposes).
************************************************************************/
fnet_ping_state_t fnet_ping_state( void )
{
    c6e0:	b480      	push	{r7}
    c6e2:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:371
    return fnet_ping_if.state;
    c6e4:	4b03      	ldr	r3, [pc, #12]	; (c6f4 <fnet_ping_state+0x14>)
    c6e6:	7b1b      	ldrb	r3, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/ping/fnet_ping.c:372
}
    c6e8:	4618      	mov	r0, r3
    c6ea:	46bd      	mov	sp, r7
    c6ec:	f85d 7b04 	ldr.w	r7, [sp], #4
    c6f0:	4770      	bx	lr
    c6f2:	bf00      	nop
    c6f4:	1000450c 	.word	0x1000450c

0000c6f8 <fnet_http_state_machine>:
fnet_http_state_machine():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:170
* NAME: fnet_http_state_machine
*
* DESCRIPTION: Http server state machine.
************************************************************************/
static void fnet_http_state_machine( void *http_if_p )
{
    c6f8:	b590      	push	{r4, r7, lr}
    c6fa:	b08f      	sub	sp, #60	; 0x3c
    c6fc:	af00      	add	r7, sp, #0
    c6fe:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:174
    struct sockaddr         foreign_addr;
    int                     len;
    int                     res;
    struct fnet_http_if     *http = (struct fnet_http_if *)http_if_p;
    c700:	687b      	ldr	r3, [r7, #4]
    c702:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:180
    int                     iteration;
    char                    *ch;
    int                     i;
    struct fnet_http_session_if   *session;
    
    for(i=0; i<FNET_CFG_HTTP_SESSION_MAX; i++) 
    c704:	2300      	movs	r3, #0
    c706:	62fb      	str	r3, [r7, #44]	; 0x2c
    c708:	e225      	b.n	cb56 <fnet_http_state_machine+0x45e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:182
    { 
        session = &http->session[i];
    c70a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    c70c:	f240 52d4 	movw	r2, #1492	; 0x5d4
    c710:	fb02 f303 	mul.w	r3, r2, r3
    c714:	3320      	adds	r3, #32
    c716:	69fa      	ldr	r2, [r7, #28]
    c718:	4413      	add	r3, r2
    c71a:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:183
        http->session_active = session;
    c71c:	69fb      	ldr	r3, [r7, #28]
    c71e:	69ba      	ldr	r2, [r7, #24]
    c720:	61da      	str	r2, [r3, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:187



    for(iteration = 0; iteration < FNET_HTTP_ITERATION_NUMBER; iteration++)
    c722:	2300      	movs	r3, #0
    c724:	633b      	str	r3, [r7, #48]	; 0x30
    c726:	e20f      	b.n	cb48 <fnet_http_state_machine+0x450>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:189
    {
        switch(session->state)
    c728:	69bb      	ldr	r3, [r7, #24]
    c72a:	781b      	ldrb	r3, [r3, #0]
    c72c:	3b01      	subs	r3, #1
    c72e:	2b04      	cmp	r3, #4
    c730:	f200 8206 	bhi.w	cb40 <fnet_http_state_machine+0x448>
    c734:	a201      	add	r2, pc, #4	; (adr r2, c73c <fnet_http_state_machine+0x44>)
    c736:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    c73a:	bf00      	nop
    c73c:	0000c751 	.word	0x0000c751
    c740:	0000c7d5 	.word	0x0000c7d5
    c744:	0000cb41 	.word	0x0000cb41
    c748:	0000ca35 	.word	0x0000ca35
    c74c:	0000cb05 	.word	0x0000cb05
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:194
        {
            
            /*---- LISTENING ------------------------------------------------*/
            case FNET_HTTP_STATE_LISTENING:
                len = sizeof(foreign_addr);
    c750:	2308      	movs	r3, #8
    c752:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:196

                if((session->socket_foreign = accept(http->socket_listen, &foreign_addr, &len)) != SOCKET_INVALID)
    c754:	69fb      	ldr	r3, [r7, #28]
    c756:	6819      	ldr	r1, [r3, #0]
    c758:	f107 020c 	add.w	r2, r7, #12
    c75c:	f107 0308 	add.w	r3, r7, #8
    c760:	4608      	mov	r0, r1
    c762:	4611      	mov	r1, r2
    c764:	461a      	mov	r2, r3
    c766:	f7f8 f9e1 	bl	4b2c <accept>
    c76a:	4602      	mov	r2, r0
    c76c:	69bb      	ldr	r3, [r7, #24]
    c76e:	609a      	str	r2, [r3, #8]
    c770:	69bb      	ldr	r3, [r7, #24]
    c772:	689b      	ldr	r3, [r3, #8]
    c774:	f1b3 3fff 	cmp.w	r3, #4294967295
    c778:	d02b      	beq.n	c7d2 <fnet_http_state_machine+0xda>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:208
                        FNET_DEBUG_HTTP("HTTP: RX Request From: %s; Port: %d.", ip_str, fnet_ntohs(foreign_addr.sa_port));
                    }
#endif

                    /* Reset response & request parameters.*/
                    fnet_memset_zero(&session->response, sizeof(struct fnet_http_response));
    c77a:	69bb      	ldr	r3, [r7, #24]
    c77c:	f503 63b2 	add.w	r3, r3, #1424	; 0x590
    c780:	4618      	mov	r0, r3
    c782:	212c      	movs	r1, #44	; 0x2c
    c784:	f7f9 fa42 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:209
                    fnet_memset_zero(&session->request, sizeof(struct fnet_http_request));
    c788:	69bb      	ldr	r3, [r7, #24]
    c78a:	f203 53bc 	addw	r3, r3, #1468	; 0x5bc
    c78e:	4618      	mov	r0, r3
    c790:	2118      	movs	r1, #24
    c792:	f7f9 fa3b 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:212

#if FNET_CFG_HTTP_VERSION_MAJOR /* HTTP/1.x*/             
                    session->response.content_length = -1; /* No content length by default.*/ 
    c796:	69bb      	ldr	r3, [r7, #24]
    c798:	f04f 32ff 	mov.w	r2, #4294967295
    c79c:	f8c3 25b8 	str.w	r2, [r3, #1464]	; 0x5b8
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:214
                    /* Default HTTP version response.*/
                    session->response.version.major = FNET_HTTP_VERSION_MAJOR;
    c7a0:	69bb      	ldr	r3, [r7, #24]
    c7a2:	2201      	movs	r2, #1
    c7a4:	f883 25b4 	strb.w	r2, [r3, #1460]	; 0x5b4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:215
                    session->response.version.minor = FNET_HTTP_VERSION_MINOR;
    c7a8:	69bb      	ldr	r3, [r7, #24]
    c7aa:	2200      	movs	r2, #0
    c7ac:	f883 25b5 	strb.w	r2, [r3, #1461]	; 0x5b5
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:216
                    session->response.tx_data = fnet_http_tx_status_line;
    c7b0:	69bb      	ldr	r3, [r7, #24]
    c7b2:	4a9e      	ldr	r2, [pc, #632]	; (ca2c <fnet_http_state_machine+0x334>)
    c7b4:	f8c3 2594 	str.w	r2, [r3, #1428]	; 0x594
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:218
#endif                    
                    session->state_time = fnet_timer_ticks();          /* Reset timeout. */
    c7b8:	f7fd faf2 	bl	9da0 <fnet_timer_ticks>
    c7bc:	4602      	mov	r2, r0
    c7be:	69bb      	ldr	r3, [r7, #24]
    c7c0:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:219
                    session->buffer_actual_size = 0;
    c7c2:	69bb      	ldr	r3, [r7, #24]
    c7c4:	2200      	movs	r2, #0
    c7c6:	f8c3 2588 	str.w	r2, [r3, #1416]	; 0x588
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:220
                    session->state = FNET_HTTP_STATE_RX_REQUEST; /* => WAITING HTTP REQUEST */
    c7ca:	69bb      	ldr	r3, [r7, #24]
    c7cc:	2202      	movs	r2, #2
    c7ce:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:222
                }
                break;
    c7d0:	e1b7      	b.n	cb42 <fnet_http_state_machine+0x44a>
    c7d2:	e1b6      	b.n	cb42 <fnet_http_state_machine+0x44a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:229
            case FNET_HTTP_STATE_RX_REQUEST:    
                
                do
                {
                    /* Read character by character.*/
                    ch = &session->buffer[session->buffer_actual_size];
    c7d4:	69bb      	ldr	r3, [r7, #24]
    c7d6:	f8d3 3588 	ldr.w	r3, [r3, #1416]	; 0x588
    c7da:	3308      	adds	r3, #8
    c7dc:	69ba      	ldr	r2, [r7, #24]
    c7de:	4413      	add	r3, r2
    c7e0:	3304      	adds	r3, #4
    c7e2:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:231
                    
                    if((res = recv(session->socket_foreign, ch, 1, 0) )!= SOCKET_ERROR)
    c7e4:	69bb      	ldr	r3, [r7, #24]
    c7e6:	689b      	ldr	r3, [r3, #8]
    c7e8:	4618      	mov	r0, r3
    c7ea:	6979      	ldr	r1, [r7, #20]
    c7ec:	2201      	movs	r2, #1
    c7ee:	2300      	movs	r3, #0
    c7f0:	f7f8 fa9e 	bl	4d30 <recv>
    c7f4:	6378      	str	r0, [r7, #52]	; 0x34
    c7f6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    c7f8:	f1b3 3fff 	cmp.w	r3, #4294967295
    c7fc:	f000 8109 	beq.w	ca12 <fnet_http_state_machine+0x31a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:233
                    {
                        if(res > 0) /* Received a data.*/
    c800:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    c802:	2b00      	cmp	r3, #0
    c804:	f340 80f5 	ble.w	c9f2 <fnet_http_state_machine+0x2fa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:235
                        {
                            session->state_time = fnet_timer_ticks();  /* Reset timeout.*/
    c808:	f7fd faca 	bl	9da0 <fnet_timer_ticks>
    c80c:	4602      	mov	r2, r0
    c80e:	69bb      	ldr	r3, [r7, #24]
    c810:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:237
                            
                            session->buffer_actual_size++;
    c812:	69bb      	ldr	r3, [r7, #24]
    c814:	f8d3 3588 	ldr.w	r3, [r3, #1416]	; 0x588
    c818:	1c5a      	adds	r2, r3, #1
    c81a:	69bb      	ldr	r3, [r7, #24]
    c81c:	f8c3 2588 	str.w	r2, [r3, #1416]	; 0x588
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:239
                        
                            if(*ch == '\r')
    c820:	697b      	ldr	r3, [r7, #20]
    c822:	781b      	ldrb	r3, [r3, #0]
    c824:	b25b      	sxtb	r3, r3
    c826:	2b0d      	cmp	r3, #13
    c828:	d103      	bne.n	c832 <fnet_http_state_machine+0x13a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:240
                                *ch = '\0';
    c82a:	697b      	ldr	r3, [r7, #20]
    c82c:	2200      	movs	r2, #0
    c82e:	701a      	strb	r2, [r3, #0]
    c830:	e0f2      	b.n	ca18 <fnet_http_state_machine+0x320>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:241
                            else if(*ch == '\n')
    c832:	697b      	ldr	r3, [r7, #20]
    c834:	781b      	ldrb	r3, [r3, #0]
    c836:	b25b      	sxtb	r3, r3
    c838:	2b0a      	cmp	r3, #10
    c83a:	f040 80be 	bne.w	c9ba <fnet_http_state_machine+0x2c2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:244
                            /* Line received.*/
                            {
                                char * req_buf = &session->buffer[0];
    c83e:	69bb      	ldr	r3, [r7, #24]
    c840:	330c      	adds	r3, #12
    c842:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:246

                                *ch = '\0'; 
    c844:	697b      	ldr	r3, [r7, #20]
    c846:	2200      	movs	r2, #0
    c848:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:248
                                
                                if(session->request.method == 0)
    c84a:	69bb      	ldr	r3, [r7, #24]
    c84c:	f8d3 35bc 	ldr.w	r3, [r3, #1468]	; 0x5bc
    c850:	2b00      	cmp	r3, #0
    c852:	f040 8093 	bne.w	c97c <fnet_http_state_machine+0x284>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:251
                                /* Parse Request line.*/
                                {
                                    const struct fnet_http_method **method = &fnet_http_method_list[0];
    c856:	4b76      	ldr	r3, [pc, #472]	; (ca30 <fnet_http_state_machine+0x338>)
    c858:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:256
                                    
                                    FNET_DEBUG_HTTP("HTTP: RX Request: %s", req_buf);
                                    
                                    /* Determine the method type. */
               	                    while(*method)
    c85a:	e01d      	b.n	c898 <fnet_http_state_machine+0x1a0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:258
            	                    {
            			                if ( !fnet_strcmp_splitter(req_buf, (*method)->token, ' ') ) 
    c85c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    c85e:	681b      	ldr	r3, [r3, #0]
    c860:	681b      	ldr	r3, [r3, #0]
    c862:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    c864:	4619      	mov	r1, r3
    c866:	2220      	movs	r2, #32
    c868:	f7f9 fd00 	bl	626c <fnet_strcmp_splitter>
    c86c:	4603      	mov	r3, r0
    c86e:	2b00      	cmp	r3, #0
    c870:	d10f      	bne.n	c892 <fnet_http_state_machine+0x19a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:260
            			                {				 
            				                req_buf+=fnet_strlen((*method)->token);
    c872:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    c874:	681b      	ldr	r3, [r3, #0]
    c876:	681b      	ldr	r3, [r3, #0]
    c878:	4618      	mov	r0, r3
    c87a:	f7f9 fa27 	bl	5ccc <fnet_strlen>
    c87e:	4603      	mov	r3, r0
    c880:	6aba      	ldr	r2, [r7, #40]	; 0x28
    c882:	4413      	add	r3, r2
    c884:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:261
            				                session->request.method = *method;
    c886:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    c888:	681a      	ldr	r2, [r3, #0]
    c88a:	69bb      	ldr	r3, [r7, #24]
    c88c:	f8c3 25bc 	str.w	r2, [r3, #1468]	; 0x5bc
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:262
            				                break;
    c890:	e006      	b.n	c8a0 <fnet_http_state_machine+0x1a8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:264
            			                }
            			                method++;
    c892:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    c894:	3304      	adds	r3, #4
    c896:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:256 (discriminator 1)
                                    const struct fnet_http_method **method = &fnet_http_method_list[0];
                                    
                                    FNET_DEBUG_HTTP("HTTP: RX Request: %s", req_buf);
                                    
                                    /* Determine the method type. */
               	                    while(*method)
    c898:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    c89a:	681b      	ldr	r3, [r3, #0]
    c89c:	2b00      	cmp	r3, #0
    c89e:	d1dd      	bne.n	c85c <fnet_http_state_machine+0x164>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:268
            			                }
            			                method++;
            			            }
            			            
            			            /* Check if the method is supported? */
            			            if(session->request.method && session->request.method->handle) 
    c8a0:	69bb      	ldr	r3, [r7, #24]
    c8a2:	f8d3 35bc 	ldr.w	r3, [r3, #1468]	; 0x5bc
    c8a6:	2b00      	cmp	r3, #0
    c8a8:	d05a      	beq.n	c960 <fnet_http_state_machine+0x268>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:268 (discriminator 1)
    c8aa:	69bb      	ldr	r3, [r7, #24]
    c8ac:	f8d3 35bc 	ldr.w	r3, [r3, #1468]	; 0x5bc
    c8b0:	685b      	ldr	r3, [r3, #4]
    c8b2:	2b00      	cmp	r3, #0
    c8b4:	d054      	beq.n	c960 <fnet_http_state_machine+0x268>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:271
        			                {
                			            /* Parse URI.*/
                			            req_buf = fnet_http_uri_parse(req_buf, &session->request.uri);
    c8b6:	69bb      	ldr	r3, [r7, #24]
    c8b8:	f503 63b8 	add.w	r3, r3, #1472	; 0x5c0
    c8bc:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    c8be:	4619      	mov	r1, r3
    c8c0:	f000 fd66 	bl	d390 <fnet_http_uri_parse>
    c8c4:	62b8      	str	r0, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:277
                			            
                			            FNET_DEBUG_HTTP("HTTP: URI Path = %s; Query = %s", &session->request.uri.path, &session->request.uri.query);
                			            
    #if FNET_CFG_HTTP_VERSION_MAJOR /* HTTP/1.x*/                            
                                        /* Parse HTTP/x.x version.*/
                                        fnet_http_version_parse(++req_buf, &session->response.version);
    c8c6:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c8c8:	3301      	adds	r3, #1
    c8ca:	62bb      	str	r3, [r7, #40]	; 0x28
    c8cc:	69bb      	ldr	r3, [r7, #24]
    c8ce:	f203 53b4 	addw	r3, r3, #1460	; 0x5b4
    c8d2:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    c8d4:	4619      	mov	r1, r3
    c8d6:	f000 fdc9 	bl	d46c <fnet_http_version_parse>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:280
                                        
                                        /* Check the highest supported HTTP version.*/
                                        if(((session->response.version.major<<8)|session->response.version.minor) > ((FNET_HTTP_VERSION_MAJOR<<8)|FNET_HTTP_VERSION_MINOR))
    c8da:	69bb      	ldr	r3, [r7, #24]
    c8dc:	f893 35b4 	ldrb.w	r3, [r3, #1460]	; 0x5b4
    c8e0:	021a      	lsls	r2, r3, #8
    c8e2:	69bb      	ldr	r3, [r7, #24]
    c8e4:	f893 35b5 	ldrb.w	r3, [r3, #1461]	; 0x5b5
    c8e8:	4313      	orrs	r3, r2
    c8ea:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
    c8ee:	dd07      	ble.n	c900 <fnet_http_state_machine+0x208>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:282
                                        {
                                            session->response.version.major = FNET_HTTP_VERSION_MAJOR;
    c8f0:	69bb      	ldr	r3, [r7, #24]
    c8f2:	2201      	movs	r2, #1
    c8f4:	f883 25b4 	strb.w	r2, [r3, #1460]	; 0x5b4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:283
                                            session->response.version.minor = FNET_HTTP_VERSION_MINOR;
    c8f8:	69bb      	ldr	r3, [r7, #24]
    c8fa:	2200      	movs	r2, #0
    c8fc:	f883 25b5 	strb.w	r2, [r3, #1461]	; 0x5b5
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:286
                                        }
                                        
                                        if(session->response.version.major == 0) 
    c900:	69bb      	ldr	r3, [r7, #24]
    c902:	f893 35b4 	ldrb.w	r3, [r3, #1460]	; 0x5b4
    c906:	2b00      	cmp	r3, #0
    c908:	d103      	bne.n	c912 <fnet_http_state_machine+0x21a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:289
                                        /* HTTP/0.x */
                                        {
                                            session->state = FNET_HTTP_STATE_CLOSING; /* Client does not support HTTP/1.x*/
    c90a:	69bb      	ldr	r3, [r7, #24]
    c90c:	2205      	movs	r2, #5
    c90e:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:290
                                            break;
    c910:	e08a      	b.n	ca28 <fnet_http_state_machine+0x330>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:300
                                        fnet_http_auth_validate_uri(http);
    #endif
    #endif/*FNET_CFG_HTTP_VERSION_MAJOR*/
                                         
                                        /* Call method initial handler.*/
                                        res = session->request.method->handle(http, &session->request.uri);
    c912:	69bb      	ldr	r3, [r7, #24]
    c914:	f8d3 35bc 	ldr.w	r3, [r3, #1468]	; 0x5bc
    c918:	685b      	ldr	r3, [r3, #4]
    c91a:	69ba      	ldr	r2, [r7, #24]
    c91c:	f502 62b8 	add.w	r2, r2, #1472	; 0x5c0
    c920:	69f8      	ldr	r0, [r7, #28]
    c922:	4611      	mov	r1, r2
    c924:	4798      	blx	r3
    c926:	6378      	str	r0, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:303
                                        
    #if FNET_CFG_HTTP_VERSION_MAJOR /* HTTP/1.x*/                                       
                                        if(fnet_http_status_ok(res) == FNET_OK)
    c928:	6b78      	ldr	r0, [r7, #52]	; 0x34
    c92a:	f000 fe01 	bl	d530 <fnet_http_status_ok>
    c92e:	4603      	mov	r3, r0
    c930:	2b00      	cmp	r3, #0
    c932:	d104      	bne.n	c93e <fnet_http_state_machine+0x246>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:310
                                        if((res == FNET_OK))                     
    #endif                                    
                                           
                                        {
    #if FNET_CFG_HTTP_VERSION_MAJOR /* HTTP/1.x*/
                                            session->buffer_actual_size = 0;
    c934:	69bb      	ldr	r3, [r7, #24]
    c936:	2200      	movs	r2, #0
    c938:	f8c3 2588 	str.w	r2, [r3, #1416]	; 0x588
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:303
                                         
                                        /* Call method initial handler.*/
                                        res = session->request.method->handle(http, &session->request.uri);
                                        
    #if FNET_CFG_HTTP_VERSION_MAJOR /* HTTP/1.x*/                                       
                                        if(fnet_http_status_ok(res) == FNET_OK)
    c93c:	e01d      	b.n	c97a <fnet_http_state_machine+0x282>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:325
                                        /* Method error.*/
            			                else /* Error.*/
            			                {
    #if FNET_CFG_HTTP_VERSION_MAJOR /* HTTP/1.x*/
                                            /* Default code = FNET_HTTP_STATUS_CODE_INTERNAL_SERVER_ERROR. */
                                            if(res != FNET_ERR)
    c93e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    c940:	f1b3 3fff 	cmp.w	r3, #4294967295
    c944:	d004      	beq.n	c950 <fnet_http_state_machine+0x258>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:326
                                                session->response.status.code = (fnet_http_status_code_t)res;
    c946:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    c948:	b29a      	uxth	r2, r3
    c94a:	69bb      	ldr	r3, [r7, #24]
    c94c:	f8a3 25ac 	strh.w	r2, [r3, #1452]	; 0x5ac
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:329
                                            
                                            /* Send status line.*/
                                            session->buffer_actual_size = 0;
    c950:	69bb      	ldr	r3, [r7, #24]
    c952:	2200      	movs	r2, #0
    c954:	f8c3 2588 	str.w	r2, [r3, #1416]	; 0x588
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:330
                                            session->state = FNET_HTTP_STATE_TX; /* Send error.*/
    c958:	69bb      	ldr	r3, [r7, #24]
    c95a:	2204      	movs	r2, #4
    c95c:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:303
                                         
                                        /* Call method initial handler.*/
                                        res = session->request.method->handle(http, &session->request.uri);
                                        
    #if FNET_CFG_HTTP_VERSION_MAJOR /* HTTP/1.x*/                                       
                                        if(fnet_http_status_ok(res) == FNET_OK)
    c95e:	e00c      	b.n	c97a <fnet_http_state_machine+0x282>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:340
            			            }
            			            /* Method is not supported.*/
            			            else /* Error.*/
            			            {
    #if FNET_CFG_HTTP_VERSION_MAJOR /* HTTP/1.x*/
                                        session->response.status.code = FNET_HTTP_STATUS_CODE_NOT_IMPLEMENTED;    
    c960:	69bb      	ldr	r3, [r7, #24]
    c962:	f240 12f5 	movw	r2, #501	; 0x1f5
    c966:	f8a3 25ac 	strh.w	r2, [r3, #1452]	; 0x5ac
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:342
                                        /* Send status line.*/
                                        session->buffer_actual_size = 0;
    c96a:	69bb      	ldr	r3, [r7, #24]
    c96c:	2200      	movs	r2, #0
    c96e:	f8c3 2588 	str.w	r2, [r3, #1416]	; 0x588
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:343
                                        session->state = FNET_HTTP_STATE_TX; /* Send error.*/
    c972:	69bb      	ldr	r3, [r7, #24]
    c974:	2204      	movs	r2, #4
    c976:	701a      	strb	r2, [r3, #0]
    c978:	e01e      	b.n	c9b8 <fnet_http_state_machine+0x2c0>
    c97a:	e01d      	b.n	c9b8 <fnet_http_state_machine+0x2c0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:354
                                }
    #if FNET_CFG_HTTP_VERSION_MAJOR /* HTTP/1.x*/                            
                                /* Parse Header line.*/
                                else
                                {
                                    if(session->request.skip_line == 0)
    c97c:	69bb      	ldr	r3, [r7, #24]
    c97e:	f8d3 35d0 	ldr.w	r3, [r3, #1488]	; 0x5d0
    c982:	2b00      	cmp	r3, #0
    c984:	d10f      	bne.n	c9a6 <fnet_http_state_machine+0x2ae>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:356
                                    {
                                        if(*req_buf == 0)
    c986:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c988:	781b      	ldrb	r3, [r3, #0]
    c98a:	2b00      	cmp	r3, #0
    c98c:	d10f      	bne.n	c9ae <fnet_http_state_machine+0x2b6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:365
                                            if(session->response.auth_entry)
                                                /* Send UNAUTHORIZED error.*/
                                                session->response.status.code = FNET_HTTP_STATUS_CODE_UNAUTHORIZED;
                                            else /* Send Data.*/
    #endif                                            
                                                session->response.status.code = FNET_HTTP_STATUS_CODE_OK;
    c98e:	69bb      	ldr	r3, [r7, #24]
    c990:	22c8      	movs	r2, #200	; 0xc8
    c992:	f8a3 25ac 	strh.w	r2, [r3, #1452]	; 0x5ac
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:379
                                            else
    #endif                                            
                                            /* TX Full-Responce.*/
                                            {
                                                /* Send status line.*/
                                                session->buffer_actual_size = 0;
    c996:	69bb      	ldr	r3, [r7, #24]
    c998:	2200      	movs	r2, #0
    c99a:	f8c3 2588 	str.w	r2, [r3, #1416]	; 0x588
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:380
                                                session->state = FNET_HTTP_STATE_TX; 
    c99e:	69bb      	ldr	r3, [r7, #24]
    c9a0:	2204      	movs	r2, #4
    c9a2:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:382
                                            }
                                            break;
    c9a4:	e040      	b.n	ca28 <fnet_http_state_machine+0x330>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:417
    #endif                                            
                                        }
                                    }
                                    /* Line is skiped.*/
                                    else
                                        session->request.skip_line = 0; /* Reset the Skip flag.*/
    c9a6:	69bb      	ldr	r3, [r7, #24]
    c9a8:	2200      	movs	r2, #0
    c9aa:	f8c3 25d0 	str.w	r2, [r3, #1488]	; 0x5d0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:419
                                    
                                    session->buffer_actual_size = 0; /* => Parse Next Header line.*/ 
    c9ae:	69bb      	ldr	r3, [r7, #24]
    c9b0:	2200      	movs	r2, #0
    c9b2:	f8c3 2588 	str.w	r2, [r3, #1416]	; 0x588
    c9b6:	e02f      	b.n	ca18 <fnet_http_state_machine+0x320>
    c9b8:	e02e      	b.n	ca18 <fnet_http_state_machine+0x320>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:424
                                }
    #endif/* FNET_CFG_HTTP_VERSION_MAJOR */                            
                            }
                            /* Not whole line received yet.*/
                            else if (session->buffer_actual_size == FNET_HTTP_BUF_SIZE) 
    c9ba:	69bb      	ldr	r3, [r7, #24]
    c9bc:	f8d3 3588 	ldr.w	r3, [r3, #1416]	; 0x588
    c9c0:	f5b3 6faf 	cmp.w	r3, #1400	; 0x578
    c9c4:	d128      	bne.n	ca18 <fnet_http_state_machine+0x320>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:428
                            /* Buffer is full.*/
                            { 
    #if FNET_CFG_HTTP_VERSION_MAJOR /* HTTP/1.x*/
                                if(session->request.method != 0)
    c9c6:	69bb      	ldr	r3, [r7, #24]
    c9c8:	f8d3 35bc 	ldr.w	r3, [r3, #1468]	; 0x5bc
    c9cc:	2b00      	cmp	r3, #0
    c9ce:	d008      	beq.n	c9e2 <fnet_http_state_machine+0x2ea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:432
                                /* For header, skip the line.*/
                                {
                                    /* Skip line.*/
                                    session->request.skip_line = 1;
    c9d0:	69bb      	ldr	r3, [r7, #24]
    c9d2:	2201      	movs	r2, #1
    c9d4:	f8c3 25d0 	str.w	r2, [r3, #1488]	; 0x5d0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:433
                                    session->buffer_actual_size = 0;
    c9d8:	69bb      	ldr	r3, [r7, #24]
    c9da:	2200      	movs	r2, #0
    c9dc:	f8c3 2588 	str.w	r2, [r3, #1416]	; 0x588
    c9e0:	e01a      	b.n	ca18 <fnet_http_state_machine+0x320>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:438
                                }
                                else /* Error.*/
                                {
                                    /* Default code = FNET_HTTP_STATUS_CODE_INTERNAL_SERVER_ERROR. */ 
                                    session->buffer_actual_size = 0;
    c9e2:	69bb      	ldr	r3, [r7, #24]
    c9e4:	2200      	movs	r2, #0
    c9e6:	f8c3 2588 	str.w	r2, [r3, #1416]	; 0x588
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:439
                                    session->state = FNET_HTTP_STATE_TX; /* Send error.*/
    c9ea:	69bb      	ldr	r3, [r7, #24]
    c9ec:	2204      	movs	r2, #4
    c9ee:	701a      	strb	r2, [r3, #0]
    c9f0:	e012      	b.n	ca18 <fnet_http_state_machine+0x320>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:448
            			        session->state = FNET_HTTP_STATE_CLOSING;
    #endif            			                
                            }
                        }
                        /* No data.*/
                        else if(fnet_timer_get_interval(session->state_time, fnet_timer_ticks()) /* Time out? */
    c9f2:	69bb      	ldr	r3, [r7, #24]
    c9f4:	685c      	ldr	r4, [r3, #4]
    c9f6:	f7fd f9d3 	bl	9da0 <fnet_timer_ticks>
    c9fa:	4603      	mov	r3, r0
    c9fc:	4620      	mov	r0, r4
    c9fe:	4619      	mov	r1, r3
    ca00:	f7fd faae 	bl	9f60 <fnet_timer_get_interval>
    ca04:	4603      	mov	r3, r0
    ca06:	2b96      	cmp	r3, #150	; 0x96
    ca08:	d906      	bls.n	ca18 <fnet_http_state_machine+0x320>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:451
                                      > (FNET_HTTP_WAIT_RX_MS / FNET_TIMER_PERIOD_MS))
                        {
                                session->state = FNET_HTTP_STATE_CLOSING; /*=> CLOSING */
    ca0a:	69bb      	ldr	r3, [r7, #24]
    ca0c:	2205      	movs	r2, #5
    ca0e:	701a      	strb	r2, [r3, #0]
    ca10:	e002      	b.n	ca18 <fnet_http_state_machine+0x320>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:458
                        /* else => WAITING REQUEST. */
                    }
                    /* recv() error.*/
                    else  
                    {
                        session->state = FNET_HTTP_STATE_CLOSING; /*=> CLOSING */
    ca12:	69bb      	ldr	r3, [r7, #24]
    ca14:	2205      	movs	r2, #5
    ca16:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:461
                    }
                }
                while ((res > 0) && (session->state == FNET_HTTP_STATE_RX_REQUEST)); /* Till receiving the request header.*/
    ca18:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    ca1a:	2b00      	cmp	r3, #0
    ca1c:	dd04      	ble.n	ca28 <fnet_http_state_machine+0x330>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:461 (discriminator 1)
    ca1e:	69bb      	ldr	r3, [r7, #24]
    ca20:	781b      	ldrb	r3, [r3, #0]
    ca22:	2b02      	cmp	r3, #2
    ca24:	f43f aed6 	beq.w	c7d4 <fnet_http_state_machine+0xdc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:462
                break;
    ca28:	e08b      	b.n	cb42 <fnet_http_state_machine+0x44a>
    ca2a:	bf00      	nop
    ca2c:	0000ce51 	.word	0x0000ce51
    ca30:	100000a0 	.word	0x100000a0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:514
                
                break;            
    #endif /* FNET_CFG_HTTP_POST.*/
            /*---- TX --------------------------------------------------*/
            case FNET_HTTP_STATE_TX: /* Send data. */
                if(fnet_timer_get_interval(session->state_time, fnet_timer_ticks())
    ca34:	69bb      	ldr	r3, [r7, #24]
    ca36:	685c      	ldr	r4, [r3, #4]
    ca38:	f7fd f9b2 	bl	9da0 <fnet_timer_ticks>
    ca3c:	4603      	mov	r3, r0
    ca3e:	4620      	mov	r0, r4
    ca40:	4619      	mov	r1, r3
    ca42:	f7fd fa8d 	bl	9f60 <fnet_timer_get_interval>
    ca46:	4603      	mov	r3, r0
    ca48:	2b63      	cmp	r3, #99	; 0x63
    ca4a:	d857      	bhi.n	cafc <fnet_http_state_machine+0x404>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:519
                     < (FNET_HTTP_WAIT_TX_MS / FNET_TIMER_PERIOD_MS)) /* Check timeout */
                {
                    int send_size;
                  
                    if(session->buffer_actual_size == session->response.buffer_sent)
    ca4c:	69bb      	ldr	r3, [r7, #24]
    ca4e:	f8d3 2588 	ldr.w	r2, [r3, #1416]	; 0x588
    ca52:	69bb      	ldr	r3, [r7, #24]
    ca54:	f8d3 359c 	ldr.w	r3, [r3, #1436]	; 0x59c
    ca58:	429a      	cmp	r2, r3
    ca5a:	d119      	bne.n	ca90 <fnet_http_state_machine+0x398>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:522
                    {
                        /* Reset counters.*/
                        session->buffer_actual_size =0;
    ca5c:	69bb      	ldr	r3, [r7, #24]
    ca5e:	2200      	movs	r2, #0
    ca60:	f8c3 2588 	str.w	r2, [r3, #1416]	; 0x588
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:523
                        session->response.buffer_sent = 0;
    ca64:	69bb      	ldr	r3, [r7, #24]
    ca66:	2200      	movs	r2, #0
    ca68:	f8c3 259c 	str.w	r2, [r3, #1436]	; 0x59c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:525
                        
                        if(session->response.send_eof || session->response.tx_data(http) == FNET_ERR) /* get data for sending */
    ca6c:	69bb      	ldr	r3, [r7, #24]
    ca6e:	f893 3598 	ldrb.w	r3, [r3, #1432]	; 0x598
    ca72:	2b00      	cmp	r3, #0
    ca74:	d108      	bne.n	ca88 <fnet_http_state_machine+0x390>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:525 (discriminator 1)
    ca76:	69bb      	ldr	r3, [r7, #24]
    ca78:	f8d3 3594 	ldr.w	r3, [r3, #1428]	; 0x594
    ca7c:	69f8      	ldr	r0, [r7, #28]
    ca7e:	4798      	blx	r3
    ca80:	4603      	mov	r3, r0
    ca82:	f1b3 3fff 	cmp.w	r3, #4294967295
    ca86:	d103      	bne.n	ca90 <fnet_http_state_machine+0x398>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:527
                        {
                            session->state = FNET_HTTP_STATE_CLOSING; /*=> CLOSING */
    ca88:	69bb      	ldr	r3, [r7, #24]
    ca8a:	2205      	movs	r2, #5
    ca8c:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:528
                            break;
    ca8e:	e058      	b.n	cb42 <fnet_http_state_machine+0x44a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:532
                        }
                    }
                   
                    send_size = (int)(session->buffer_actual_size - (int)session->response.buffer_sent);
    ca90:	69bb      	ldr	r3, [r7, #24]
    ca92:	f8d3 2588 	ldr.w	r2, [r3, #1416]	; 0x588
    ca96:	69bb      	ldr	r3, [r7, #24]
    ca98:	f8d3 359c 	ldr.w	r3, [r3, #1436]	; 0x59c
    ca9c:	1ad3      	subs	r3, r2, r3
    ca9e:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:534

                    if(send_size > http->send_max)
    caa0:	6a3a      	ldr	r2, [r7, #32]
    caa2:	69fb      	ldr	r3, [r7, #28]
    caa4:	699b      	ldr	r3, [r3, #24]
    caa6:	429a      	cmp	r2, r3
    caa8:	d902      	bls.n	cab0 <fnet_http_state_machine+0x3b8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:535
                        send_size = (int)http->send_max;
    caaa:	69fb      	ldr	r3, [r7, #28]
    caac:	699b      	ldr	r3, [r3, #24]
    caae:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:537
                    
                    if((res = send(session->socket_foreign, session->buffer
    cab0:	69bb      	ldr	r3, [r7, #24]
    cab2:	689a      	ldr	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:538
                                  + session->response.buffer_sent, send_size, 0)) != SOCKET_ERROR)
    cab4:	69bb      	ldr	r3, [r7, #24]
    cab6:	f8d3 359c 	ldr.w	r3, [r3, #1436]	; 0x59c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:537
                    send_size = (int)(session->buffer_actual_size - (int)session->response.buffer_sent);

                    if(send_size > http->send_max)
                        send_size = (int)http->send_max;
                    
                    if((res = send(session->socket_foreign, session->buffer
    caba:	3308      	adds	r3, #8
    cabc:	69b9      	ldr	r1, [r7, #24]
    cabe:	440b      	add	r3, r1
    cac0:	3304      	adds	r3, #4
    cac2:	4610      	mov	r0, r2
    cac4:	4619      	mov	r1, r3
    cac6:	6a3a      	ldr	r2, [r7, #32]
    cac8:	2300      	movs	r3, #0
    caca:	f7f8 f8ad 	bl	4c28 <send>
    cace:	6378      	str	r0, [r7, #52]	; 0x34
    cad0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    cad2:	f1b3 3fff 	cmp.w	r3, #4294967295
    cad6:	d011      	beq.n	cafc <fnet_http_state_machine+0x404>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:540
                                  + session->response.buffer_sent, send_size, 0)) != SOCKET_ERROR)
                    {
                        if(res)
    cad8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    cada:	2b00      	cmp	r3, #0
    cadc:	d00d      	beq.n	cafa <fnet_http_state_machine+0x402>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:544
                        {
                            FNET_DEBUG_HTTP("HTTP: TX %d bytes.", res);

                            session->state_time = fnet_timer_ticks();              /* reset timeout */
    cade:	f7fd f95f 	bl	9da0 <fnet_timer_ticks>
    cae2:	4602      	mov	r2, r0
    cae4:	69bb      	ldr	r3, [r7, #24]
    cae6:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:545
                            session->response.buffer_sent += res;
    cae8:	69bb      	ldr	r3, [r7, #24]
    caea:	f8d3 259c 	ldr.w	r2, [r3, #1436]	; 0x59c
    caee:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    caf0:	441a      	add	r2, r3
    caf2:	69bb      	ldr	r3, [r7, #24]
    caf4:	f8c3 259c 	str.w	r2, [r3, #1436]	; 0x59c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:547
                        }
                        break; /* => SENDING */ 
    caf8:	e023      	b.n	cb42 <fnet_http_state_machine+0x44a>
    cafa:	e022      	b.n	cb42 <fnet_http_state_machine+0x44a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:551
                    }
                }

                session->state = FNET_HTTP_STATE_CLOSING; /*=> CLOSING */
    cafc:	69bb      	ldr	r3, [r7, #24]
    cafe:	2205      	movs	r2, #5
    cb00:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:552
                break;
    cb02:	e01e      	b.n	cb42 <fnet_http_state_machine+0x44a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:555
                /*---- CLOSING --------------------------------------------------*/
            case FNET_HTTP_STATE_CLOSING:
                if(session->request.method && session->request.method->close)
    cb04:	69bb      	ldr	r3, [r7, #24]
    cb06:	f8d3 35bc 	ldr.w	r3, [r3, #1468]	; 0x5bc
    cb0a:	2b00      	cmp	r3, #0
    cb0c:	d00b      	beq.n	cb26 <fnet_http_state_machine+0x42e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:555 (discriminator 1)
    cb0e:	69bb      	ldr	r3, [r7, #24]
    cb10:	f8d3 35bc 	ldr.w	r3, [r3, #1468]	; 0x5bc
    cb14:	691b      	ldr	r3, [r3, #16]
    cb16:	2b00      	cmp	r3, #0
    cb18:	d005      	beq.n	cb26 <fnet_http_state_machine+0x42e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:556
                    session->request.method->close(http);
    cb1a:	69bb      	ldr	r3, [r7, #24]
    cb1c:	f8d3 35bc 	ldr.w	r3, [r3, #1468]	; 0x5bc
    cb20:	691b      	ldr	r3, [r3, #16]
    cb22:	69f8      	ldr	r0, [r7, #28]
    cb24:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:558

                closesocket(session->socket_foreign);
    cb26:	69bb      	ldr	r3, [r7, #24]
    cb28:	689b      	ldr	r3, [r3, #8]
    cb2a:	4618      	mov	r0, r3
    cb2c:	f7f7 ff52 	bl	49d4 <closesocket>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:559
                session->socket_foreign = SOCKET_INVALID;
    cb30:	69bb      	ldr	r3, [r7, #24]
    cb32:	f04f 32ff 	mov.w	r2, #4294967295
    cb36:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:561
                    
                session->state = FNET_HTTP_STATE_LISTENING; /*=> LISTENING */
    cb38:	69bb      	ldr	r3, [r7, #24]
    cb3a:	2201      	movs	r2, #1
    cb3c:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:562
                break;
    cb3e:	e000      	b.n	cb42 <fnet_http_state_machine+0x44a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:564
            default:
                break;                
    cb40:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:187
        session = &http->session[i];
        http->session_active = session;



    for(iteration = 0; iteration < FNET_HTTP_ITERATION_NUMBER; iteration++)
    cb42:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    cb44:	3301      	adds	r3, #1
    cb46:	633b      	str	r3, [r7, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:187 (discriminator 1)
    cb48:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    cb4a:	2b01      	cmp	r3, #1
    cb4c:	f77f adec 	ble.w	c728 <fnet_http_state_machine+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:180
    int                     iteration;
    char                    *ch;
    int                     i;
    struct fnet_http_session_if   *session;
    
    for(i=0; i<FNET_CFG_HTTP_SESSION_MAX; i++) 
    cb50:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    cb52:	3301      	adds	r3, #1
    cb54:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:180 (discriminator 1)
    cb56:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    cb58:	2b13      	cmp	r3, #19
    cb5a:	f77f add6 	ble.w	c70a <fnet_http_state_machine+0x12>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:569
                break;                
        }
    }

    } /*for(sessions)*/
}
    cb5e:	373c      	adds	r7, #60	; 0x3c
    cb60:	46bd      	mov	sp, r7
    cb62:	bd90      	pop	{r4, r7, pc}

0000cb64 <fnet_http_init>:
fnet_http_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:577
* NAME: fnet_http_init
*
* DESCRIPTION: Initialization of the HTTP server.
*************************************************************************/
fnet_http_desc_t fnet_http_init( struct fnet_http_params *params )
{
    cb64:	b580      	push	{r7, lr}
    cb66:	b08e      	sub	sp, #56	; 0x38
    cb68:	af02      	add	r7, sp, #8
    cb6a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:581
    struct sockaddr         local_addr;
    struct fnet_http_uri    uri;
    int                     i;
    struct fnet_http_if     *http_if = 0;
    cb6c:	2300      	movs	r3, #0
    cb6e:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:582
    const struct linger     linger_option ={1, /*l_onoff*/
    cb70:	4a82      	ldr	r2, [pc, #520]	; (cd7c <fnet_http_init+0x218>)
    cb72:	f107 030c 	add.w	r3, r7, #12
    cb76:	6810      	ldr	r0, [r2, #0]
    cb78:	6018      	str	r0, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:587
                                             4  /*l_linger*/};
    int                     opt_len;                                        
    
    
    if(params == 0 || params->root_path == 0 || params->index_path == 0)
    cb7a:	687b      	ldr	r3, [r7, #4]
    cb7c:	2b00      	cmp	r3, #0
    cb7e:	f000 80f7 	beq.w	cd70 <fnet_http_init+0x20c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:587 (discriminator 1)
    cb82:	687b      	ldr	r3, [r7, #4]
    cb84:	681b      	ldr	r3, [r3, #0]
    cb86:	2b00      	cmp	r3, #0
    cb88:	f000 80f2 	beq.w	cd70 <fnet_http_init+0x20c>
    cb8c:	687b      	ldr	r3, [r7, #4]
    cb8e:	685b      	ldr	r3, [r3, #4]
    cb90:	2b00      	cmp	r3, #0
    cb92:	f000 80ed 	beq.w	cd70 <fnet_http_init+0x20c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:604
            http_if = &http_if_list[i]; 
            break
        }
    }
#else
    if(http_if_list[0].enabled == FNET_FALSE)
    cb96:	4b7a      	ldr	r3, [pc, #488]	; (cd80 <fnet_http_init+0x21c>)
    cb98:	689b      	ldr	r3, [r3, #8]
    cb9a:	2b00      	cmp	r3, #0
    cb9c:	d101      	bne.n	cba2 <fnet_http_init+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:605
        http_if = &http_if_list[0];
    cb9e:	4b78      	ldr	r3, [pc, #480]	; (cd80 <fnet_http_init+0x21c>)
    cba0:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:609
#endif

    /* Is HTTP server already initialized. */
    if(http_if == 0)
    cba2:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cba4:	2b00      	cmp	r3, #0
    cba6:	d100      	bne.n	cbaa <fnet_http_init+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:612
    {
        FNET_DEBUG_HTTP("HTTP: No free HTTP Server.");
        goto ERROR_1;
    cba8:	e0e2      	b.n	cd70 <fnet_http_init+0x20c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:616
    }

#if FNET_CFG_HTTP_SSI
    http_if->ssi.ssi_table = params->ssi_table;
    cbaa:	687b      	ldr	r3, [r7, #4]
    cbac:	691a      	ldr	r2, [r3, #16]
    cbae:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cbb0:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    cbb4:	3334      	adds	r3, #52	; 0x34
    cbb6:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:620
#endif    

#if FNET_CFG_HTTP_CGI    
    http_if->cgi_table = params->cgi_table;
    cbb8:	687b      	ldr	r3, [r7, #4]
    cbba:	695a      	ldr	r2, [r3, #20]
    cbbc:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cbbe:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    cbc2:	3340      	adds	r3, #64	; 0x40
    cbc4:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:631

#if FNET_CFG_HTTP_POST
    http_if->post_table = params->post_table;
#endif
    
    local_addr = params->address;
    cbc6:	687a      	ldr	r2, [r7, #4]
    cbc8:	f107 031c 	add.w	r3, r7, #28
    cbcc:	3208      	adds	r2, #8
    cbce:	e892 0003 	ldmia.w	r2, {r0, r1}
    cbd2:	e883 0003 	stmia.w	r3, {r0, r1}
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:633
    
    if(local_addr.sa_port == 0)
    cbd6:	8bfb      	ldrh	r3, [r7, #30]
    cbd8:	2b00      	cmp	r3, #0
    cbda:	d102      	bne.n	cbe2 <fnet_http_init+0x7e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:634
        local_addr.sa_port = FNET_CFG_HTTP_PORT; /* Aply the default port.*/
    cbdc:	f44f 43a0 	mov.w	r3, #20480	; 0x5000
    cbe0:	83fb      	strh	r3, [r7, #30]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:636
    
    if(local_addr.sa_family == AF_UNSPEC)
    cbe2:	8bbb      	ldrh	r3, [r7, #28]
    cbe4:	2b00      	cmp	r3, #0
    cbe6:	d101      	bne.n	cbec <fnet_http_init+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:637
        local_addr.sa_family = AF_SUPPORTED; /* Asign supported families.*/
    cbe8:	2301      	movs	r3, #1
    cbea:	83bb      	strh	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:640

    /* Create listen socket */
    if((http_if->socket_listen = socket(local_addr.sa_family, SOCK_STREAM, 0)) == SOCKET_INVALID)
    cbec:	8bbb      	ldrh	r3, [r7, #28]
    cbee:	4618      	mov	r0, r3
    cbf0:	2101      	movs	r1, #1
    cbf2:	2200      	movs	r2, #0
    cbf4:	f7f7 fd0e 	bl	4614 <socket>
    cbf8:	4602      	mov	r2, r0
    cbfa:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cbfc:	601a      	str	r2, [r3, #0]
    cbfe:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cc00:	681b      	ldr	r3, [r3, #0]
    cc02:	f1b3 3fff 	cmp.w	r3, #4294967295
    cc06:	d100      	bne.n	cc0a <fnet_http_init+0xa6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:643
    {
        FNET_DEBUG_HTTP("HTTP: Socket creation error.");
        goto ERROR_1;
    cc08:	e0b2      	b.n	cd70 <fnet_http_init+0x20c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:647
    }
    
    /* Bind.*/
    if(bind(http_if->socket_listen, &local_addr, sizeof(local_addr)) == SOCKET_ERROR)
    cc0a:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cc0c:	681a      	ldr	r2, [r3, #0]
    cc0e:	f107 031c 	add.w	r3, r7, #28
    cc12:	4610      	mov	r0, r2
    cc14:	4619      	mov	r1, r3
    cc16:	2208      	movs	r2, #8
    cc18:	f7f7 fe44 	bl	48a4 <bind>
    cc1c:	4603      	mov	r3, r0
    cc1e:	f1b3 3fff 	cmp.w	r3, #4294967295
    cc22:	d100      	bne.n	cc26 <fnet_http_init+0xc2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:650
    {
        FNET_DEBUG_HTTP("HTTP: Socket bind error.");
        goto ERROR_2;
    cc24:	e09f      	b.n	cd66 <fnet_http_init+0x202>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:654
    }
    
    /* Set socket options.*/
    setsockopt (http_if->socket_listen, SOL_SOCKET, SO_LINGER, 
    cc26:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cc28:	681a      	ldr	r2, [r3, #0]
    cc2a:	f107 030c 	add.w	r3, r7, #12
    cc2e:	2104      	movs	r1, #4
    cc30:	9100      	str	r1, [sp, #0]
    cc32:	4610      	mov	r0, r2
    cc34:	f64f 71ff 	movw	r1, #65535	; 0xffff
    cc38:	2208      	movs	r2, #8
    cc3a:	f7f8 f98d 	bl	4f58 <setsockopt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:657
                                    (char *)  &linger_option, sizeof(linger_option));   
    /* Get size of the socket send buffer */
    opt_len = sizeof(http_if->send_max);
    cc3e:	2304      	movs	r3, #4
    cc40:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:658
    if(getsockopt(http_if->socket_listen, SOL_SOCKET, SO_SNDBUF, 
    cc42:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cc44:	681a      	ldr	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:659
                                (char *) &http_if->send_max, &opt_len) == SOCKET_ERROR)
    cc46:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cc48:	3318      	adds	r3, #24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:658
    /* Set socket options.*/
    setsockopt (http_if->socket_listen, SOL_SOCKET, SO_LINGER, 
                                    (char *)  &linger_option, sizeof(linger_option));   
    /* Get size of the socket send buffer */
    opt_len = sizeof(http_if->send_max);
    if(getsockopt(http_if->socket_listen, SOL_SOCKET, SO_SNDBUF, 
    cc4a:	f107 0108 	add.w	r1, r7, #8
    cc4e:	9100      	str	r1, [sp, #0]
    cc50:	4610      	mov	r0, r2
    cc52:	f64f 71ff 	movw	r1, #65535	; 0xffff
    cc56:	f241 0201 	movw	r2, #4097	; 0x1001
    cc5a:	f7f8 fa3b 	bl	50d4 <getsockopt>
    cc5e:	4603      	mov	r3, r0
    cc60:	f1b3 3fff 	cmp.w	r3, #4294967295
    cc64:	d100      	bne.n	cc68 <fnet_http_init+0x104>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:662
                                (char *) &http_if->send_max, &opt_len) == SOCKET_ERROR)
    {
        FNET_DEBUG_HTTP("HTTP: Socket getsockopt() error.");
        goto ERROR_2;
    cc66:	e07e      	b.n	cd66 <fnet_http_init+0x202>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:666
    }

    /* Listen.*/
    if(listen(http_if->socket_listen, FNET_HTTP_BACKLOG_MAX) == SOCKET_ERROR)
    cc68:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cc6a:	681b      	ldr	r3, [r3, #0]
    cc6c:	4618      	mov	r0, r3
    cc6e:	2101      	movs	r1, #1
    cc70:	f7f7 ff10 	bl	4a94 <listen>
    cc74:	4603      	mov	r3, r0
    cc76:	f1b3 3fff 	cmp.w	r3, #4294967295
    cc7a:	d100      	bne.n	cc7e <fnet_http_init+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:669
    {
        FNET_DEBUG_HTTP("HTTP: Socket listen error.");
        goto ERROR_2;
    cc7c:	e073      	b.n	cd66 <fnet_http_init+0x202>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:673
    }
    
    /* Open root dir. */
    http_if->root_dir = fnet_fs_opendir(params->root_path);
    cc7e:	687b      	ldr	r3, [r7, #4]
    cc80:	681b      	ldr	r3, [r3, #0]
    cc82:	4618      	mov	r0, r3
    cc84:	f001 f894 	bl	ddb0 <fnet_fs_opendir>
    cc88:	4602      	mov	r2, r0
    cc8a:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cc8c:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:674
    if(http_if->root_dir == 0)
    cc8e:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cc90:	68db      	ldr	r3, [r3, #12]
    cc92:	2b00      	cmp	r3, #0
    cc94:	d100      	bne.n	cc98 <fnet_http_init+0x134>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:677
    {
        FNET_DEBUG_HTTP("HTTP: Root directory is failed.");
        goto ERROR_2;
    cc96:	e066      	b.n	cd66 <fnet_http_init+0x202>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:681
    }

    /* Open index file. */
    http_if->index_file = fnet_fs_fopen_re(params->index_path,"r", http_if->root_dir);
    cc98:	687b      	ldr	r3, [r7, #4]
    cc9a:	685a      	ldr	r2, [r3, #4]
    cc9c:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cc9e:	68db      	ldr	r3, [r3, #12]
    cca0:	4610      	mov	r0, r2
    cca2:	4938      	ldr	r1, [pc, #224]	; (cd84 <fnet_http_init+0x220>)
    cca4:	461a      	mov	r2, r3
    cca6:	f001 f94d 	bl	df44 <fnet_fs_fopen_re>
    ccaa:	4602      	mov	r2, r0
    ccac:	6abb      	ldr	r3, [r7, #40]	; 0x28
    ccae:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:682
    if(http_if->index_file == 0)
    ccb0:	6abb      	ldr	r3, [r7, #40]	; 0x28
    ccb2:	691b      	ldr	r3, [r3, #16]
    ccb4:	2b00      	cmp	r3, #0
    ccb6:	d100      	bne.n	ccba <fnet_http_init+0x156>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:685
    {
        FNET_DEBUG_HTTP("HTTP: Root directory is failed.");
        goto ERROR_3;
    ccb8:	e050      	b.n	cd5c <fnet_http_init+0x1f8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:688
    }
    
    fnet_http_uri_parse(params->index_path, &uri);
    ccba:	687b      	ldr	r3, [r7, #4]
    ccbc:	685a      	ldr	r2, [r3, #4]
    ccbe:	f107 0310 	add.w	r3, r7, #16
    ccc2:	4610      	mov	r0, r2
    ccc4:	4619      	mov	r1, r3
    ccc6:	f000 fb63 	bl	d390 <fnet_http_uri_parse>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:689
    http_if->index_file_handler = fnet_http_find_handler(http_if, &uri); /* Find Handler for the index file. */
    ccca:	f107 0310 	add.w	r3, r7, #16
    ccce:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    ccd0:	4619      	mov	r1, r3
    ccd2:	f000 f9cd 	bl	d070 <fnet_http_find_handler>
    ccd6:	4602      	mov	r2, r0
    ccd8:	6abb      	ldr	r3, [r7, #40]	; 0x28
    ccda:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:692
    
#if FNET_CFG_HTTP_VERSION_MAJOR    
    http_if->index_file_content_type = fnet_http_find_content_type(http_if, &uri); /* Find Content-Type for the index file. */
    ccdc:	f107 0310 	add.w	r3, r7, #16
    cce0:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    cce2:	4619      	mov	r1, r3
    cce4:	f000 fa00 	bl	d0e8 <fnet_http_find_content_type>
    cce8:	4602      	mov	r2, r0
    ccea:	6abb      	ldr	r3, [r7, #40]	; 0x28
    ccec:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    ccf0:	3330      	adds	r3, #48	; 0x30
    ccf2:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:696
#endif    

    /* Init session parameters.*/
    for(i=0; i<FNET_CFG_HTTP_SESSION_MAX; i++) 
    ccf4:	2300      	movs	r3, #0
    ccf6:	62fb      	str	r3, [r7, #44]	; 0x2c
    ccf8:	e012      	b.n	cd20 <fnet_http_init+0x1bc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:698 (discriminator 2)
    {
        struct fnet_http_session_if   *session = &http_if->session[i];
    ccfa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    ccfc:	f240 52d4 	movw	r2, #1492	; 0x5d4
    cd00:	fb02 f303 	mul.w	r3, r2, r3
    cd04:	3320      	adds	r3, #32
    cd06:	6aba      	ldr	r2, [r7, #40]	; 0x28
    cd08:	4413      	add	r3, r2
    cd0a:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:700 (discriminator 2)
        
        session->socket_foreign = SOCKET_INVALID;
    cd0c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    cd0e:	f04f 32ff 	mov.w	r2, #4294967295
    cd12:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:702 (discriminator 2)
      
        session->state = FNET_HTTP_STATE_LISTENING;
    cd14:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    cd16:	2201      	movs	r2, #1
    cd18:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:696 (discriminator 2)
#if FNET_CFG_HTTP_VERSION_MAJOR    
    http_if->index_file_content_type = fnet_http_find_content_type(http_if, &uri); /* Find Content-Type for the index file. */
#endif    

    /* Init session parameters.*/
    for(i=0; i<FNET_CFG_HTTP_SESSION_MAX; i++) 
    cd1a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    cd1c:	3301      	adds	r3, #1
    cd1e:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:696 (discriminator 1)
    cd20:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    cd22:	2b13      	cmp	r3, #19
    cd24:	dde9      	ble.n	ccfa <fnet_http_init+0x196>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:705
        session->socket_foreign = SOCKET_INVALID;
      
        session->state = FNET_HTTP_STATE_LISTENING;
    }

    http_if->service_descriptor = fnet_poll_service_register(fnet_http_state_machine, (void *) http_if);
    cd26:	4818      	ldr	r0, [pc, #96]	; (cd88 <fnet_http_init+0x224>)
    cd28:	6ab9      	ldr	r1, [r7, #40]	; 0x28
    cd2a:	f7ff fa79 	bl	c220 <fnet_poll_service_register>
    cd2e:	4602      	mov	r2, r0
    cd30:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cd32:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:706
    if(http_if->service_descriptor == (fnet_poll_desc_t)FNET_ERR)
    cd34:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cd36:	685b      	ldr	r3, [r3, #4]
    cd38:	f1b3 3fff 	cmp.w	r3, #4294967295
    cd3c:	d106      	bne.n	cd4c <fnet_http_init+0x1e8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:709
    {
        FNET_DEBUG_HTTP("HTTP: Service registration error.");
        goto ERROR_4;
    cd3e:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:718
    http_if->enabled = FNET_TRUE;

    return (fnet_http_desc_t)http_if;
    
ERROR_4:
    fnet_fs_fclose(http_if->index_file);
    cd40:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cd42:	691b      	ldr	r3, [r3, #16]
    cd44:	4618      	mov	r0, r3
    cd46:	f001 f9a3 	bl	e090 <fnet_fs_fclose>
    cd4a:	e007      	b.n	cd5c <fnet_http_init+0x1f8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:712
    {
        FNET_DEBUG_HTTP("HTTP: Service registration error.");
        goto ERROR_4;
    }

    http_if->session_active = FNET_NULL;
    cd4c:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cd4e:	2200      	movs	r2, #0
    cd50:	61da      	str	r2, [r3, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:713
    http_if->enabled = FNET_TRUE;
    cd52:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cd54:	2201      	movs	r2, #1
    cd56:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:715

    return (fnet_http_desc_t)http_if;
    cd58:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cd5a:	e00b      	b.n	cd74 <fnet_http_init+0x210>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:721
    
ERROR_4:
    fnet_fs_fclose(http_if->index_file);

ERROR_3:
    fnet_fs_closedir(http_if->root_dir);
    cd5c:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cd5e:	68db      	ldr	r3, [r3, #12]
    cd60:	4618      	mov	r0, r3
    cd62:	f001 f883 	bl	de6c <fnet_fs_closedir>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:724

ERROR_2:
    closesocket(http_if->socket_listen);
    cd66:	6abb      	ldr	r3, [r7, #40]	; 0x28
    cd68:	681b      	ldr	r3, [r3, #0]
    cd6a:	4618      	mov	r0, r3
    cd6c:	f7f7 fe32 	bl	49d4 <closesocket>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:727

ERROR_1:
    return FNET_ERR;
    cd70:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:728
}
    cd74:	4618      	mov	r0, r3
    cd76:	3730      	adds	r7, #48	; 0x30
    cd78:	46bd      	mov	sp, r7
    cd7a:	bd80      	pop	{r7, pc}
    cd7c:	0001426c 	.word	0x0001426c
    cd80:	10004588 	.word	0x10004588
    cd84:	00014268 	.word	0x00014268
    cd88:	0000c6f9 	.word	0x0000c6f9

0000cd8c <fnet_http_release>:
fnet_http_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:736
* NAME: fnet_http_release
*
* DESCRIPTION: HTTP server release.
************************************************************************/
void fnet_http_release(fnet_http_desc_t desc)
{
    cd8c:	b580      	push	{r7, lr}
    cd8e:	b086      	sub	sp, #24
    cd90:	af00      	add	r7, sp, #0
    cd92:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:737
    struct fnet_http_if     *http_if = (struct fnet_http_if *) desc;
    cd94:	687b      	ldr	r3, [r7, #4]
    cd96:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:740
    int                     i;
    
    if(http_if && (http_if->enabled == FNET_TRUE))
    cd98:	693b      	ldr	r3, [r7, #16]
    cd9a:	2b00      	cmp	r3, #0
    cd9c:	d03e      	beq.n	ce1c <fnet_http_release+0x90>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:740 (discriminator 1)
    cd9e:	693b      	ldr	r3, [r7, #16]
    cda0:	689b      	ldr	r3, [r3, #8]
    cda2:	2b01      	cmp	r3, #1
    cda4:	d13a      	bne.n	ce1c <fnet_http_release+0x90>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:742
    {
        for(i=0; i<FNET_CFG_HTTP_SESSION_MAX; i++) 
    cda6:	2300      	movs	r3, #0
    cda8:	617b      	str	r3, [r7, #20]
    cdaa:	e01d      	b.n	cde8 <fnet_http_release+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:744 (discriminator 2)
        {
            struct fnet_http_session_if   *session = &http_if->session[i];
    cdac:	697b      	ldr	r3, [r7, #20]
    cdae:	f240 52d4 	movw	r2, #1492	; 0x5d4
    cdb2:	fb02 f303 	mul.w	r3, r2, r3
    cdb6:	3320      	adds	r3, #32
    cdb8:	693a      	ldr	r2, [r7, #16]
    cdba:	4413      	add	r3, r2
    cdbc:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:746 (discriminator 2)
            
            closesocket(session->socket_foreign);        
    cdbe:	68fb      	ldr	r3, [r7, #12]
    cdc0:	689b      	ldr	r3, [r3, #8]
    cdc2:	4618      	mov	r0, r3
    cdc4:	f7f7 fe06 	bl	49d4 <closesocket>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:747 (discriminator 2)
            session->socket_foreign = SOCKET_INVALID;
    cdc8:	68fb      	ldr	r3, [r7, #12]
    cdca:	f04f 32ff 	mov.w	r2, #4294967295
    cdce:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:748 (discriminator 2)
            session->state = FNET_HTTP_STATE_DISABLED;
    cdd0:	68fb      	ldr	r3, [r7, #12]
    cdd2:	2200      	movs	r2, #0
    cdd4:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:749 (discriminator 2)
            fnet_fs_fclose(session->send_param.file_desc);
    cdd6:	68fb      	ldr	r3, [r7, #12]
    cdd8:	f8d3 358c 	ldr.w	r3, [r3, #1420]	; 0x58c
    cddc:	4618      	mov	r0, r3
    cdde:	f001 f957 	bl	e090 <fnet_fs_fclose>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:742 (discriminator 2)
    struct fnet_http_if     *http_if = (struct fnet_http_if *) desc;
    int                     i;
    
    if(http_if && (http_if->enabled == FNET_TRUE))
    {
        for(i=0; i<FNET_CFG_HTTP_SESSION_MAX; i++) 
    cde2:	697b      	ldr	r3, [r7, #20]
    cde4:	3301      	adds	r3, #1
    cde6:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:742 (discriminator 1)
    cde8:	697b      	ldr	r3, [r7, #20]
    cdea:	2b13      	cmp	r3, #19
    cdec:	ddde      	ble.n	cdac <fnet_http_release+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:753
            session->state = FNET_HTTP_STATE_DISABLED;
            fnet_fs_fclose(session->send_param.file_desc);
        }


        fnet_fs_fclose(http_if->index_file);
    cdee:	693b      	ldr	r3, [r7, #16]
    cdf0:	691b      	ldr	r3, [r3, #16]
    cdf2:	4618      	mov	r0, r3
    cdf4:	f001 f94c 	bl	e090 <fnet_fs_fclose>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:755

        fnet_fs_closedir(http_if->root_dir);
    cdf8:	693b      	ldr	r3, [r7, #16]
    cdfa:	68db      	ldr	r3, [r3, #12]
    cdfc:	4618      	mov	r0, r3
    cdfe:	f001 f835 	bl	de6c <fnet_fs_closedir>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:757
          
        closesocket(http_if->socket_listen);
    ce02:	693b      	ldr	r3, [r7, #16]
    ce04:	681b      	ldr	r3, [r3, #0]
    ce06:	4618      	mov	r0, r3
    ce08:	f7f7 fde4 	bl	49d4 <closesocket>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:758
        fnet_poll_service_unregister(http_if->service_descriptor); /* Delete service.*/
    ce0c:	693b      	ldr	r3, [r7, #16]
    ce0e:	685b      	ldr	r3, [r3, #4]
    ce10:	4618      	mov	r0, r3
    ce12:	f7ff fa41 	bl	c298 <fnet_poll_service_unregister>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:760

        http_if->enabled = FNET_FALSE;
    ce16:	693b      	ldr	r3, [r7, #16]
    ce18:	2200      	movs	r2, #0
    ce1a:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:762
    }
}
    ce1c:	3718      	adds	r7, #24
    ce1e:	46bd      	mov	sp, r7
    ce20:	bd80      	pop	{r7, pc}
    ce22:	bf00      	nop

0000ce24 <fnet_http_enabled>:
fnet_http_enabled():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:771
*
* DESCRIPTION: This function returns FNET_TRUE if the HTTP server 
*              is enabled/initialised.
************************************************************************/
int fnet_http_enabled(fnet_http_desc_t desc)
{
    ce24:	b480      	push	{r7}
    ce26:	b085      	sub	sp, #20
    ce28:	af00      	add	r7, sp, #0
    ce2a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:772
    struct fnet_http_if     *http_if = (struct fnet_http_if *) desc;
    ce2c:	687b      	ldr	r3, [r7, #4]
    ce2e:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:775
    int                     result;
    
    if(http_if)
    ce30:	68bb      	ldr	r3, [r7, #8]
    ce32:	2b00      	cmp	r3, #0
    ce34:	d003      	beq.n	ce3e <fnet_http_enabled+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:776
        result = http_if->enabled;
    ce36:	68bb      	ldr	r3, [r7, #8]
    ce38:	689b      	ldr	r3, [r3, #8]
    ce3a:	60fb      	str	r3, [r7, #12]
    ce3c:	e001      	b.n	ce42 <fnet_http_enabled+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:778
    else
        result = FNET_FALSE;    
    ce3e:	2300      	movs	r3, #0
    ce40:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:780
    
    return result;
    ce42:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:781
}
    ce44:	4618      	mov	r0, r3
    ce46:	3714      	adds	r7, #20
    ce48:	46bd      	mov	sp, r7
    ce4a:	f85d 7b04 	ldr.w	r7, [sp], #4
    ce4e:	4770      	bx	lr

0000ce50 <fnet_http_tx_status_line>:
fnet_http_tx_status_line():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:792
* NAME: fnet_http_tx_status_line
*
* DESCRIPTION: 
************************************************************************/
static int fnet_http_tx_status_line (struct fnet_http_if * http)
{
    ce50:	b590      	push	{r4, r7, lr}
    ce52:	b08d      	sub	sp, #52	; 0x34
    ce54:	af06      	add	r7, sp, #24
    ce56:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:794
    struct fnet_http_status     *status ;
    unsigned long               result = 0;
    ce58:	2300      	movs	r3, #0
    ce5a:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:796
    unsigned long               result_state;
    struct fnet_http_session_if *session =  http->session_active;
    ce5c:	687b      	ldr	r3, [r7, #4]
    ce5e:	69db      	ldr	r3, [r3, #28]
    ce60:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:798
    
    session->response.send_eof = 0; /* Data to be sent.*/
    ce62:	68bb      	ldr	r3, [r7, #8]
    ce64:	2200      	movs	r2, #0
    ce66:	f883 2598 	strb.w	r2, [r3, #1432]	; 0x598
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:802
   
    do
    {
        result_state = 0;
    ce6a:	2300      	movs	r3, #0
    ce6c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:804
        
        switch(session->response.status_line_state)
    ce6e:	68bb      	ldr	r3, [r7, #8]
    ce70:	f8d3 35a0 	ldr.w	r3, [r3, #1440]	; 0x5a0
    ce74:	2b04      	cmp	r3, #4
    ce76:	f200 80b4 	bhi.w	cfe2 <fnet_http_tx_status_line+0x192>
    ce7a:	a201      	add	r2, pc, #4	; (adr r2, ce80 <fnet_http_tx_status_line+0x30>)
    ce7c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    ce80:	0000ce95 	.word	0x0000ce95
    ce84:	0000cfe3 	.word	0x0000cfe3
    ce88:	0000cf2b 	.word	0x0000cf2b
    ce8c:	0000cf65 	.word	0x0000cf65
    ce90:	0000cfa1 	.word	0x0000cfa1
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:807
        {
            case 0:
                if(session->response.status.code == 0)
    ce94:	68bb      	ldr	r3, [r7, #8]
    ce96:	f8b3 35ac 	ldrh.w	r3, [r3, #1452]	; 0x5ac
    ce9a:	2b00      	cmp	r3, #0
    ce9c:	d108      	bne.n	ceb0 <fnet_http_tx_status_line+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:809
                {   /* If the code was not found, produce a 501 internal server error */
                    session->response.status.code = FNET_HTTP_STATUS_CODE_INTERNAL_SERVER_ERROR;
    ce9e:	68bb      	ldr	r3, [r7, #8]
    cea0:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
    cea4:	f8a3 25ac 	strh.w	r2, [r3, #1452]	; 0x5ac
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:810
                    session->response.status.phrase = 0;
    cea8:	68bb      	ldr	r3, [r7, #8]
    ceaa:	2200      	movs	r2, #0
    ceac:	f8c3 25b0 	str.w	r2, [r3, #1456]	; 0x5b0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:813
                }
                
                if(session->response.status.phrase == 0) /* If no phrase is defined.*/
    ceb0:	68bb      	ldr	r3, [r7, #8]
    ceb2:	f8d3 35b0 	ldr.w	r3, [r3, #1456]	; 0x5b0
    ceb6:	2b00      	cmp	r3, #0
    ceb8:	d116      	bne.n	cee8 <fnet_http_tx_status_line+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:815
                {
                    for(status = fnet_http_status_list; status->code > 0; status++) /* Find phrase.*/
    ceba:	4b64      	ldr	r3, [pc, #400]	; (d04c <fnet_http_tx_status_line+0x1fc>)
    cebc:	617b      	str	r3, [r7, #20]
    cebe:	e00a      	b.n	ced6 <fnet_http_tx_status_line+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:817
                    {
                        if (status->code == session->response.status.code)
    cec0:	697b      	ldr	r3, [r7, #20]
    cec2:	881a      	ldrh	r2, [r3, #0]
    cec4:	68bb      	ldr	r3, [r7, #8]
    cec6:	f8b3 35ac 	ldrh.w	r3, [r3, #1452]	; 0x5ac
    ceca:	429a      	cmp	r2, r3
    cecc:	d100      	bne.n	ced0 <fnet_http_tx_status_line+0x80>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:819
                        {
                            break;
    cece:	e006      	b.n	cede <fnet_http_tx_status_line+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:815
                    session->response.status.phrase = 0;
                }
                
                if(session->response.status.phrase == 0) /* If no phrase is defined.*/
                {
                    for(status = fnet_http_status_list; status->code > 0; status++) /* Find phrase.*/
    ced0:	697b      	ldr	r3, [r7, #20]
    ced2:	3308      	adds	r3, #8
    ced4:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:815 (discriminator 1)
    ced6:	697b      	ldr	r3, [r7, #20]
    ced8:	881b      	ldrh	r3, [r3, #0]
    ceda:	2b00      	cmp	r3, #0
    cedc:	d1f0      	bne.n	cec0 <fnet_http_tx_status_line+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:822
                        if (status->code == session->response.status.code)
                        {
                            break;
                        }
                    }
                    session->response.status.phrase = status->phrase; /* If no phrase is fond it will pont to empty string.*/ 
    cede:	697b      	ldr	r3, [r7, #20]
    cee0:	685a      	ldr	r2, [r3, #4]
    cee2:	68bb      	ldr	r3, [r7, #8]
    cee4:	f8c3 25b0 	str.w	r2, [r3, #1456]	; 0x5b0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:826
                }
                 
                /* Print status line.*/
                result_state = (unsigned long)fnet_snprintf(session->buffer, FNET_HTTP_BUF_SIZE, "%s%d.%d %d %s%s", FNET_HTTP_VERSION_HEADER, session->response.version.major, session->response.version.minor,
    cee8:	68bb      	ldr	r3, [r7, #8]
    ceea:	330c      	adds	r3, #12
    ceec:	68ba      	ldr	r2, [r7, #8]
    ceee:	f892 25b4 	ldrb.w	r2, [r2, #1460]	; 0x5b4
    cef2:	4614      	mov	r4, r2
    cef4:	68ba      	ldr	r2, [r7, #8]
    cef6:	f892 25b5 	ldrb.w	r2, [r2, #1461]	; 0x5b5
    cefa:	4610      	mov	r0, r2
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:827
                                                                        session->response.status.code, session->response.status.phrase, 
    cefc:	68ba      	ldr	r2, [r7, #8]
    cefe:	f8b2 25ac 	ldrh.w	r2, [r2, #1452]	; 0x5ac
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:826
                    }
                    session->response.status.phrase = status->phrase; /* If no phrase is fond it will pont to empty string.*/ 
                }
                 
                /* Print status line.*/
                result_state = (unsigned long)fnet_snprintf(session->buffer, FNET_HTTP_BUF_SIZE, "%s%d.%d %d %s%s", FNET_HTTP_VERSION_HEADER, session->response.version.major, session->response.version.minor,
    cf02:	4611      	mov	r1, r2
    cf04:	68ba      	ldr	r2, [r7, #8]
    cf06:	f8d2 25b0 	ldr.w	r2, [r2, #1456]	; 0x5b0
    cf0a:	9400      	str	r4, [sp, #0]
    cf0c:	9001      	str	r0, [sp, #4]
    cf0e:	9102      	str	r1, [sp, #8]
    cf10:	9203      	str	r2, [sp, #12]
    cf12:	4a4f      	ldr	r2, [pc, #316]	; (d050 <fnet_http_tx_status_line+0x200>)
    cf14:	9204      	str	r2, [sp, #16]
    cf16:	4618      	mov	r0, r3
    cf18:	f44f 61af 	mov.w	r1, #1400	; 0x578
    cf1c:	4a4d      	ldr	r2, [pc, #308]	; (d054 <fnet_http_tx_status_line+0x204>)
    cf1e:	4b4e      	ldr	r3, [pc, #312]	; (d058 <fnet_http_tx_status_line+0x208>)
    cf20:	f7ff f904 	bl	c12c <fnet_snprintf>
    cf24:	4603      	mov	r3, r0
    cf26:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:829
                                                                        session->response.status.code, session->response.status.phrase, 
                                                                                   "\r\n");
                break;                                                                         
    cf28:	e05b      	b.n	cfe2 <fnet_http_tx_status_line+0x192>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:844
                }
#endif                
                break;
            case 2:
                /* Content-Length */
                if(session->response.content_length >= 0)
    cf2a:	68bb      	ldr	r3, [r7, #8]
    cf2c:	f8d3 35b8 	ldr.w	r3, [r3, #1464]	; 0x5b8
    cf30:	2b00      	cmp	r3, #0
    cf32:	db16      	blt.n	cf62 <fnet_http_tx_status_line+0x112>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:846
                {
                    result_state = (unsigned long)fnet_snprintf(&session->buffer[result], (FNET_HTTP_BUF_SIZE - result), "%s %d%s", FNET_HTTP_HEADER_FIELD_CONTENT_LENGTH, session->response.content_length, "\r\n");
    cf34:	693b      	ldr	r3, [r7, #16]
    cf36:	3308      	adds	r3, #8
    cf38:	68ba      	ldr	r2, [r7, #8]
    cf3a:	4413      	add	r3, r2
    cf3c:	1d1a      	adds	r2, r3, #4
    cf3e:	693b      	ldr	r3, [r7, #16]
    cf40:	f5c3 63af 	rsb	r3, r3, #1400	; 0x578
    cf44:	68b9      	ldr	r1, [r7, #8]
    cf46:	f8d1 15b8 	ldr.w	r1, [r1, #1464]	; 0x5b8
    cf4a:	9100      	str	r1, [sp, #0]
    cf4c:	4940      	ldr	r1, [pc, #256]	; (d050 <fnet_http_tx_status_line+0x200>)
    cf4e:	9101      	str	r1, [sp, #4]
    cf50:	4610      	mov	r0, r2
    cf52:	4619      	mov	r1, r3
    cf54:	4a41      	ldr	r2, [pc, #260]	; (d05c <fnet_http_tx_status_line+0x20c>)
    cf56:	4b42      	ldr	r3, [pc, #264]	; (d060 <fnet_http_tx_status_line+0x210>)
    cf58:	f7ff f8e8 	bl	c12c <fnet_snprintf>
    cf5c:	4603      	mov	r3, r0
    cf5e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:848
                }
                break; 
    cf60:	e03f      	b.n	cfe2 <fnet_http_tx_status_line+0x192>
    cf62:	e03e      	b.n	cfe2 <fnet_http_tx_status_line+0x192>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:851
            case 3:
        	    /* Add MIME Content Type field, based on file extension.*/
			    if(session->response.send_file_content_type)
    cf64:	68bb      	ldr	r3, [r7, #8]
    cf66:	f8d3 35a8 	ldr.w	r3, [r3, #1448]	; 0x5a8
    cf6a:	2b00      	cmp	r3, #0
    cf6c:	d017      	beq.n	cf9e <fnet_http_tx_status_line+0x14e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:853
			    {
			        result_state = (unsigned long)fnet_snprintf(&session->buffer[result], 
    cf6e:	693b      	ldr	r3, [r7, #16]
    cf70:	3308      	adds	r3, #8
    cf72:	68ba      	ldr	r2, [r7, #8]
    cf74:	4413      	add	r3, r2
    cf76:	1d1a      	adds	r2, r3, #4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:854
			                        (FNET_HTTP_BUF_SIZE - result), "%s %s%s",
    cf78:	693b      	ldr	r3, [r7, #16]
    cf7a:	f5c3 63af 	rsb	r3, r3, #1400	; 0x578
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:855
				                    FNET_HTTP_HEADER_FIELD_CONTENT_TYPE, session->response.send_file_content_type->content_type,"\r\n");
    cf7e:	68b9      	ldr	r1, [r7, #8]
    cf80:	f8d1 15a8 	ldr.w	r1, [r1, #1448]	; 0x5a8
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:853
                break; 
            case 3:
        	    /* Add MIME Content Type field, based on file extension.*/
			    if(session->response.send_file_content_type)
			    {
			        result_state = (unsigned long)fnet_snprintf(&session->buffer[result], 
    cf84:	6849      	ldr	r1, [r1, #4]
    cf86:	9100      	str	r1, [sp, #0]
    cf88:	4931      	ldr	r1, [pc, #196]	; (d050 <fnet_http_tx_status_line+0x200>)
    cf8a:	9101      	str	r1, [sp, #4]
    cf8c:	4610      	mov	r0, r2
    cf8e:	4619      	mov	r1, r3
    cf90:	4a34      	ldr	r2, [pc, #208]	; (d064 <fnet_http_tx_status_line+0x214>)
    cf92:	4b35      	ldr	r3, [pc, #212]	; (d068 <fnet_http_tx_status_line+0x218>)
    cf94:	f7ff f8ca 	bl	c12c <fnet_snprintf>
    cf98:	4603      	mov	r3, r0
    cf9a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:857
			                        (FNET_HTTP_BUF_SIZE - result), "%s %s%s",
				                    FNET_HTTP_HEADER_FIELD_CONTENT_TYPE, session->response.send_file_content_type->content_type,"\r\n");
                }
	            break;
    cf9c:	e021      	b.n	cfe2 <fnet_http_tx_status_line+0x192>
    cf9e:	e020      	b.n	cfe2 <fnet_http_tx_status_line+0x192>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:860
            case 4:
                /*Final CRLF.*/
                result_state = (unsigned long)fnet_snprintf(&session->buffer[result], (FNET_HTTP_BUF_SIZE - result),"%s","\r\n");
    cfa0:	693b      	ldr	r3, [r7, #16]
    cfa2:	3308      	adds	r3, #8
    cfa4:	68ba      	ldr	r2, [r7, #8]
    cfa6:	4413      	add	r3, r2
    cfa8:	1d1a      	adds	r2, r3, #4
    cfaa:	693b      	ldr	r3, [r7, #16]
    cfac:	f5c3 63af 	rsb	r3, r3, #1400	; 0x578
    cfb0:	4610      	mov	r0, r2
    cfb2:	4619      	mov	r1, r3
    cfb4:	4a2d      	ldr	r2, [pc, #180]	; (d06c <fnet_http_tx_status_line+0x21c>)
    cfb6:	4b26      	ldr	r3, [pc, #152]	; (d050 <fnet_http_tx_status_line+0x200>)
    cfb8:	f7ff f8b8 	bl	c12c <fnet_snprintf>
    cfbc:	4603      	mov	r3, r0
    cfbe:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:862
            
                if(session->response.status.code != FNET_HTTP_STATUS_CODE_OK)
    cfc0:	68bb      	ldr	r3, [r7, #8]
    cfc2:	f8b3 35ac 	ldrh.w	r3, [r3, #1452]	; 0x5ac
    cfc6:	2bc8      	cmp	r3, #200	; 0xc8
    cfc8:	d003      	beq.n	cfd2 <fnet_http_tx_status_line+0x182>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:863
                    session->response.send_eof = 1; /* Only sataus (without data).*/
    cfca:	68bb      	ldr	r3, [r7, #8]
    cfcc:	2201      	movs	r2, #1
    cfce:	f883 2598 	strb.w	r2, [r3, #1432]	; 0x598
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:865
                
                session->response.tx_data = session->request.method->send;
    cfd2:	68bb      	ldr	r3, [r7, #8]
    cfd4:	f8d3 35bc 	ldr.w	r3, [r3, #1468]	; 0x5bc
    cfd8:	68da      	ldr	r2, [r3, #12]
    cfda:	68bb      	ldr	r3, [r7, #8]
    cfdc:	f8c3 2594 	str.w	r2, [r3, #1428]	; 0x594
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:866
                break;
    cfe0:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:869
        }
        
        if((result+result_state) == (FNET_HTTP_BUF_SIZE-1)) /* Buffer overload.*/
    cfe2:	693a      	ldr	r2, [r7, #16]
    cfe4:	68fb      	ldr	r3, [r7, #12]
    cfe6:	441a      	add	r2, r3
    cfe8:	f240 5377 	movw	r3, #1399	; 0x577
    cfec:	429a      	cmp	r2, r3
    cfee:	d113      	bne.n	d018 <fnet_http_tx_status_line+0x1c8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:871
        {
            if(result == 0)
    cff0:	693b      	ldr	r3, [r7, #16]
    cff2:	2b00      	cmp	r3, #0
    cff4:	d10f      	bne.n	d016 <fnet_http_tx_status_line+0x1c6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:873
            {
                fnet_sprintf(&session->buffer[FNET_HTTP_BUF_SIZE-2], "%s","\r\n");   /* Finish line.*/
    cff6:	68bb      	ldr	r3, [r7, #8]
    cff8:	f203 5382 	addw	r3, r3, #1410	; 0x582
    cffc:	4618      	mov	r0, r3
    cffe:	491b      	ldr	r1, [pc, #108]	; (d06c <fnet_http_tx_status_line+0x21c>)
    d000:	4a13      	ldr	r2, [pc, #76]	; (d050 <fnet_http_tx_status_line+0x200>)
    d002:	f7ff f867 	bl	c0d4 <fnet_sprintf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:874
                session->response.status_line_state++;
    d006:	68bb      	ldr	r3, [r7, #8]
    d008:	f8d3 35a0 	ldr.w	r3, [r3, #1440]	; 0x5a0
    d00c:	1c5a      	adds	r2, r3, #1
    d00e:	68bb      	ldr	r3, [r7, #8]
    d010:	f8c3 25a0 	str.w	r2, [r3, #1440]	; 0x5a0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:877
            }
            /* else. Do not send last state data.*/
            break; /* Send data.*/  
    d014:	e011      	b.n	d03a <fnet_http_tx_status_line+0x1ea>
    d016:	e010      	b.n	d03a <fnet_http_tx_status_line+0x1ea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:881
        }
        else
        {
            result += result_state;
    d018:	693a      	ldr	r2, [r7, #16]
    d01a:	68fb      	ldr	r3, [r7, #12]
    d01c:	4413      	add	r3, r2
    d01e:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:882
            session->response.status_line_state++;
    d020:	68bb      	ldr	r3, [r7, #8]
    d022:	f8d3 35a0 	ldr.w	r3, [r3, #1440]	; 0x5a0
    d026:	1c5a      	adds	r2, r3, #1
    d028:	68bb      	ldr	r3, [r7, #8]
    d02a:	f8c3 25a0 	str.w	r2, [r3, #1440]	; 0x5a0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:885
        }
    }
    while (session->response.status_line_state <= 4);
    d02e:	68bb      	ldr	r3, [r7, #8]
    d030:	f8d3 35a0 	ldr.w	r3, [r3, #1440]	; 0x5a0
    d034:	2b04      	cmp	r3, #4
    d036:	f77f af18 	ble.w	ce6a <fnet_http_tx_status_line+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:887
    
    session->buffer_actual_size =  result;
    d03a:	68bb      	ldr	r3, [r7, #8]
    d03c:	693a      	ldr	r2, [r7, #16]
    d03e:	f8c3 2588 	str.w	r2, [r3, #1416]	; 0x588
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:890
    FNET_DEBUG_HTTP("HTTP: TX Status: %s", session->buffer); 
    
    return FNET_OK;
    d042:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:891
}
    d044:	4618      	mov	r0, r3
    d046:	371c      	adds	r7, #28
    d048:	46bd      	mov	sp, r7
    d04a:	bd90      	pop	{r4, r7, pc}
    d04c:	100000c8 	.word	0x100000c8
    d050:	00014288 	.word	0x00014288
    d054:	00014270 	.word	0x00014270
    d058:	00014280 	.word	0x00014280
    d05c:	0001428c 	.word	0x0001428c
    d060:	00014294 	.word	0x00014294
    d064:	000142a4 	.word	0x000142a4
    d068:	000142ac 	.word	0x000142ac
    d06c:	000142bc 	.word	0x000142bc

0000d070 <fnet_http_find_handler>:
fnet_http_find_handler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:901
* NAME: fnet_http_find_handler
*
* DESCRIPTION: 
************************************************************************/
const struct fnet_http_file_handler * fnet_http_find_handler (struct fnet_http_if * http, struct fnet_http_uri * uri)
{
    d070:	b580      	push	{r7, lr}
    d072:	b084      	sub	sp, #16
    d074:	af00      	add	r7, sp, #0
    d076:	6078      	str	r0, [r7, #4]
    d078:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:902
    const struct fnet_http_file_handler * result = &fnet_http_default_handler;
    d07a:	4b18      	ldr	r3, [pc, #96]	; (d0dc <fnet_http_find_handler+0x6c>)
    d07c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:903
    const struct fnet_http_file_handler **handler = &fnet_http_file_handler_list[0];
    d07e:	4b18      	ldr	r3, [pc, #96]	; (d0e0 <fnet_http_find_handler+0x70>)
    d080:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:905

    if(uri)
    d082:	683b      	ldr	r3, [r7, #0]
    d084:	2b00      	cmp	r3, #0
    d086:	d024      	beq.n	d0d2 <fnet_http_find_handler+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:907
    {
        if (!fnet_strcmp(uri->path, "/")) /* Default index file. */
    d088:	683b      	ldr	r3, [r7, #0]
    d08a:	681b      	ldr	r3, [r3, #0]
    d08c:	4618      	mov	r0, r3
    d08e:	4915      	ldr	r1, [pc, #84]	; (d0e4 <fnet_http_find_handler+0x74>)
    d090:	f7f8 fdf2 	bl	5c78 <fnet_strcmp>
    d094:	4603      	mov	r3, r0
    d096:	2b00      	cmp	r3, #0
    d098:	d103      	bne.n	d0a2 <fnet_http_find_handler+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:909
        {
            result = http->index_file_handler;
    d09a:	687b      	ldr	r3, [r7, #4]
    d09c:	695b      	ldr	r3, [r3, #20]
    d09e:	60fb      	str	r3, [r7, #12]
    d0a0:	e017      	b.n	d0d2 <fnet_http_find_handler+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:913
        }    
        else
        {
            while(*handler)
    d0a2:	e012      	b.n	d0ca <fnet_http_find_handler+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:915
            {
                if ( !fnet_strcmp( uri->extension, (*handler)->file_extension) ) 
    d0a4:	683b      	ldr	r3, [r7, #0]
    d0a6:	685a      	ldr	r2, [r3, #4]
    d0a8:	68bb      	ldr	r3, [r7, #8]
    d0aa:	681b      	ldr	r3, [r3, #0]
    d0ac:	681b      	ldr	r3, [r3, #0]
    d0ae:	4610      	mov	r0, r2
    d0b0:	4619      	mov	r1, r3
    d0b2:	f7f8 fde1 	bl	5c78 <fnet_strcmp>
    d0b6:	4603      	mov	r3, r0
    d0b8:	2b00      	cmp	r3, #0
    d0ba:	d103      	bne.n	d0c4 <fnet_http_find_handler+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:917
                {				 
                    result = *handler;
    d0bc:	68bb      	ldr	r3, [r7, #8]
    d0be:	681b      	ldr	r3, [r3, #0]
    d0c0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:918
                    break;
    d0c2:	e006      	b.n	d0d2 <fnet_http_find_handler+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:920
                }
                handler++;
    d0c4:	68bb      	ldr	r3, [r7, #8]
    d0c6:	3304      	adds	r3, #4
    d0c8:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:913 (discriminator 1)
        {
            result = http->index_file_handler;
        }    
        else
        {
            while(*handler)
    d0ca:	68bb      	ldr	r3, [r7, #8]
    d0cc:	681b      	ldr	r3, [r3, #0]
    d0ce:	2b00      	cmp	r3, #0
    d0d0:	d1e8      	bne.n	d0a4 <fnet_http_find_handler+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:926
            }
        }
            
    } 
   
    return result;
    d0d2:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:927
}
    d0d4:	4618      	mov	r0, r3
    d0d6:	3710      	adds	r7, #16
    d0d8:	46bd      	mov	sp, r7
    d0da:	bd80      	pop	{r7, pc}
    d0dc:	000142c4 	.word	0x000142c4
    d0e0:	100000a8 	.word	0x100000a8
    d0e4:	000142c0 	.word	0x000142c0

0000d0e8 <fnet_http_find_content_type>:
fnet_http_find_content_type():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:936
*
* DESCRIPTION: 
************************************************************************/
#if FNET_CFG_HTTP_VERSION_MAJOR
const struct fnet_http_content_type *fnet_http_find_content_type (struct fnet_http_if * http, struct fnet_http_uri * uri)
{
    d0e8:	b580      	push	{r7, lr}
    d0ea:	b084      	sub	sp, #16
    d0ec:	af00      	add	r7, sp, #0
    d0ee:	6078      	str	r0, [r7, #4]
    d0f0:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:937
    const struct fnet_http_content_type **content_type = &fnet_http_content_type_list[0];
    d0f2:	4b1a      	ldr	r3, [pc, #104]	; (d15c <fnet_http_find_content_type+0x74>)
    d0f4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:938
    const struct fnet_http_content_type *result = FNET_NULL;    
    d0f6:	2300      	movs	r3, #0
    d0f8:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:940

    if(uri)
    d0fa:	683b      	ldr	r3, [r7, #0]
    d0fc:	2b00      	cmp	r3, #0
    d0fe:	d027      	beq.n	d150 <fnet_http_find_content_type+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:942
    {
        if (!fnet_strcmp(uri->path, "/")) /* Default index file. */
    d100:	683b      	ldr	r3, [r7, #0]
    d102:	681b      	ldr	r3, [r3, #0]
    d104:	4618      	mov	r0, r3
    d106:	4916      	ldr	r1, [pc, #88]	; (d160 <fnet_http_find_content_type+0x78>)
    d108:	f7f8 fdb6 	bl	5c78 <fnet_strcmp>
    d10c:	4603      	mov	r3, r0
    d10e:	2b00      	cmp	r3, #0
    d110:	d106      	bne.n	d120 <fnet_http_find_content_type+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:944
        {
            result = http->index_file_content_type;
    d112:	687b      	ldr	r3, [r7, #4]
    d114:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d118:	3330      	adds	r3, #48	; 0x30
    d11a:	681b      	ldr	r3, [r3, #0]
    d11c:	60bb      	str	r3, [r7, #8]
    d11e:	e017      	b.n	d150 <fnet_http_find_content_type+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:948
        }    
        else
        {
            while(*content_type)
    d120:	e012      	b.n	d148 <fnet_http_find_content_type+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:950
            {
                if ( !fnet_strcmp(uri->extension, (*content_type)->file_extension)) 
    d122:	683b      	ldr	r3, [r7, #0]
    d124:	685a      	ldr	r2, [r3, #4]
    d126:	68fb      	ldr	r3, [r7, #12]
    d128:	681b      	ldr	r3, [r3, #0]
    d12a:	681b      	ldr	r3, [r3, #0]
    d12c:	4610      	mov	r0, r2
    d12e:	4619      	mov	r1, r3
    d130:	f7f8 fda2 	bl	5c78 <fnet_strcmp>
    d134:	4603      	mov	r3, r0
    d136:	2b00      	cmp	r3, #0
    d138:	d103      	bne.n	d142 <fnet_http_find_content_type+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:952
                {				 
                    result = *content_type;
    d13a:	68fb      	ldr	r3, [r7, #12]
    d13c:	681b      	ldr	r3, [r3, #0]
    d13e:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:953
                    break;
    d140:	e006      	b.n	d150 <fnet_http_find_content_type+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:955
                }
                content_type++;
    d142:	68fb      	ldr	r3, [r7, #12]
    d144:	3304      	adds	r3, #4
    d146:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:948 (discriminator 1)
        {
            result = http->index_file_content_type;
        }    
        else
        {
            while(*content_type)
    d148:	68fb      	ldr	r3, [r7, #12]
    d14a:	681b      	ldr	r3, [r3, #0]
    d14c:	2b00      	cmp	r3, #0
    d14e:	d1e8      	bne.n	d122 <fnet_http_find_content_type+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:960
                content_type++;
            }
        }
    } 
   
    return result;
    d150:	68bb      	ldr	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:961
}
    d152:	4618      	mov	r0, r3
    d154:	3710      	adds	r7, #16
    d156:	46bd      	mov	sp, r7
    d158:	bd80      	pop	{r7, pc}
    d15a:	bf00      	nop
    d15c:	100000b4 	.word	0x100000b4
    d160:	000142c0 	.word	0x000142c0

0000d164 <fnet_http_default_handle>:
fnet_http_default_handle():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:970
* NAME: fnet_http_default_send
*
* DESCRIPTION: 
************************************************************************/
int fnet_http_default_handle (struct fnet_http_if * http, struct fnet_http_uri * uri)
{
    d164:	b580      	push	{r7, lr}
    d166:	b088      	sub	sp, #32
    d168:	af00      	add	r7, sp, #0
    d16a:	6078      	str	r0, [r7, #4]
    d16c:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:972
    int                         result;
    struct fnet_http_session_if *session =  http->session_active;
    d16e:	687b      	ldr	r3, [r7, #4]
    d170:	69db      	ldr	r3, [r3, #28]
    d172:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:974
    
    if (!fnet_strcmp(uri->path, "/")) /* Default index file */
    d174:	683b      	ldr	r3, [r7, #0]
    d176:	681b      	ldr	r3, [r3, #0]
    d178:	4618      	mov	r0, r3
    d17a:	4920      	ldr	r1, [pc, #128]	; (d1fc <fnet_http_default_handle+0x98>)
    d17c:	f7f8 fd7c 	bl	5c78 <fnet_strcmp>
    d180:	4603      	mov	r3, r0
    d182:	2b00      	cmp	r3, #0
    d184:	d10a      	bne.n	d19c <fnet_http_default_handle+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:976
    {
        fnet_fs_rewind(http->index_file);
    d186:	687b      	ldr	r3, [r7, #4]
    d188:	691b      	ldr	r3, [r3, #16]
    d18a:	4618      	mov	r0, r3
    d18c:	f000 ff98 	bl	e0c0 <fnet_fs_rewind>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:977
        session->send_param.file_desc = http->index_file;
    d190:	687b      	ldr	r3, [r7, #4]
    d192:	691a      	ldr	r2, [r3, #16]
    d194:	69bb      	ldr	r3, [r7, #24]
    d196:	f8c3 258c 	str.w	r2, [r3, #1420]	; 0x58c
    d19a:	e00c      	b.n	d1b6 <fnet_http_default_handle+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:981
    }    
    else
    {
        session->send_param.file_desc = fnet_fs_fopen_re(uri->path,"r", http->root_dir);
    d19c:	683b      	ldr	r3, [r7, #0]
    d19e:	681a      	ldr	r2, [r3, #0]
    d1a0:	687b      	ldr	r3, [r7, #4]
    d1a2:	68db      	ldr	r3, [r3, #12]
    d1a4:	4610      	mov	r0, r2
    d1a6:	4916      	ldr	r1, [pc, #88]	; (d200 <fnet_http_default_handle+0x9c>)
    d1a8:	461a      	mov	r2, r3
    d1aa:	f000 fecb 	bl	df44 <fnet_fs_fopen_re>
    d1ae:	4602      	mov	r2, r0
    d1b0:	69bb      	ldr	r3, [r7, #24]
    d1b2:	f8c3 258c 	str.w	r2, [r3, #1420]	; 0x58c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:984
    }
		                            
    if (session->send_param.file_desc)
    d1b6:	69bb      	ldr	r3, [r7, #24]
    d1b8:	f8d3 358c 	ldr.w	r3, [r3, #1420]	; 0x58c
    d1bc:	2b00      	cmp	r3, #0
    d1be:	d010      	beq.n	d1e2 <fnet_http_default_handle+0x7e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:989
    {
#if FNET_CFG_HTTP_VERSION_MAJOR /* HTTP/1.x*/
        {
            struct fnet_fs_dirent dirent; 
            fnet_fs_finfo(session->send_param.file_desc, &dirent);
    d1c0:	69bb      	ldr	r3, [r7, #24]
    d1c2:	f8d3 258c 	ldr.w	r2, [r3, #1420]	; 0x58c
    d1c6:	f107 0308 	add.w	r3, r7, #8
    d1ca:	4610      	mov	r0, r2
    d1cc:	4619      	mov	r1, r3
    d1ce:	f001 f85f 	bl	e290 <fnet_fs_finfo>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:990
            session->response.content_length = (long)dirent.d_size;
    d1d2:	697b      	ldr	r3, [r7, #20]
    d1d4:	461a      	mov	r2, r3
    d1d6:	69bb      	ldr	r3, [r7, #24]
    d1d8:	f8c3 25b8 	str.w	r2, [r3, #1464]	; 0x5b8
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:993
        }
#endif        
        result = FNET_OK;
    d1dc:	2300      	movs	r3, #0
    d1de:	61fb      	str	r3, [r7, #28]
    d1e0:	e007      	b.n	d1f2 <fnet_http_default_handle+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:998
    }
    else
    {
#if FNET_CFG_HTTP_VERSION_MAJOR /* HTTP/1.x*/
        session->response.status.code = FNET_HTTP_STATUS_CODE_NOT_FOUND;
    d1e2:	69bb      	ldr	r3, [r7, #24]
    d1e4:	f44f 72ca 	mov.w	r2, #404	; 0x194
    d1e8:	f8a3 25ac 	strh.w	r2, [r3, #1452]	; 0x5ac
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1000
#endif        
        result = FNET_ERR;
    d1ec:	f04f 33ff 	mov.w	r3, #4294967295
    d1f0:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1003
    }
    
    return result;
    d1f2:	69fb      	ldr	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1004
}
    d1f4:	4618      	mov	r0, r3
    d1f6:	3720      	adds	r7, #32
    d1f8:	46bd      	mov	sp, r7
    d1fa:	bd80      	pop	{r7, pc}
    d1fc:	000142c0 	.word	0x000142c0
    d200:	00014268 	.word	0x00014268

0000d204 <fnet_http_default_send>:
fnet_http_default_send():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1012
* NAME: fnet_http_default_send
*
* DESCRIPTION: 
************************************************************************/
unsigned long fnet_http_default_send (struct fnet_http_if * http)
{
    d204:	b580      	push	{r7, lr}
    d206:	b084      	sub	sp, #16
    d208:	af00      	add	r7, sp, #0
    d20a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1013
    struct fnet_http_session_if *session =  http->session_active;
    d20c:	687b      	ldr	r3, [r7, #4]
    d20e:	69db      	ldr	r3, [r3, #28]
    d210:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1015

    return fnet_fs_fread(session->buffer, sizeof(session->buffer), session->send_param.file_desc);
    d212:	68fb      	ldr	r3, [r7, #12]
    d214:	f103 020c 	add.w	r2, r3, #12
    d218:	68fb      	ldr	r3, [r7, #12]
    d21a:	f8d3 358c 	ldr.w	r3, [r3, #1420]	; 0x58c
    d21e:	4610      	mov	r0, r2
    d220:	f240 5179 	movw	r1, #1401	; 0x579
    d224:	461a      	mov	r2, r3
    d226:	f000 ff5d 	bl	e0e4 <fnet_fs_fread>
    d22a:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1016
}
    d22c:	4618      	mov	r0, r3
    d22e:	3710      	adds	r7, #16
    d230:	46bd      	mov	sp, r7
    d232:	bd80      	pop	{r7, pc}

0000d234 <fnet_http_default_close>:
fnet_http_default_close():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1024
* NAME: fnet_http_default_close
*
* DESCRIPTION: 
************************************************************************/
void fnet_http_default_close (struct fnet_http_if * http)
{
    d234:	b580      	push	{r7, lr}
    d236:	b084      	sub	sp, #16
    d238:	af00      	add	r7, sp, #0
    d23a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1025
    struct fnet_http_session_if *session =  http->session_active;
    d23c:	687b      	ldr	r3, [r7, #4]
    d23e:	69db      	ldr	r3, [r3, #28]
    d240:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1027

    if(session->send_param.file_desc != http->index_file)
    d242:	68fb      	ldr	r3, [r7, #12]
    d244:	f8d3 258c 	ldr.w	r2, [r3, #1420]	; 0x58c
    d248:	687b      	ldr	r3, [r7, #4]
    d24a:	691b      	ldr	r3, [r3, #16]
    d24c:	429a      	cmp	r2, r3
    d24e:	d005      	beq.n	d25c <fnet_http_default_close+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1028
        fnet_fs_fclose(session->send_param.file_desc); /* Close file */ 
    d250:	68fb      	ldr	r3, [r7, #12]
    d252:	f8d3 358c 	ldr.w	r3, [r3, #1420]	; 0x58c
    d256:	4618      	mov	r0, r3
    d258:	f000 ff1a 	bl	e090 <fnet_fs_fclose>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1029
}
    d25c:	3710      	adds	r7, #16
    d25e:	46bd      	mov	sp, r7
    d260:	bd80      	pop	{r7, pc}
    d262:	bf00      	nop

0000d264 <fnet_http_query_unencode>:
fnet_http_query_unencode():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1037
* NAME: fnet_http_query_unencode
*
* DESCRIPTION: 
************************************************************************/
void fnet_http_query_unencode(char * dest, char * src)
{
    d264:	b480      	push	{r7}
    d266:	b085      	sub	sp, #20
    d268:	af00      	add	r7, sp, #0
    d26a:	6078      	str	r0, [r7, #4]
    d26c:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1038
    if(dest && src)
    d26e:	687b      	ldr	r3, [r7, #4]
    d270:	2b00      	cmp	r3, #0
    d272:	f000 8087 	beq.w	d384 <fnet_http_query_unencode+0x120>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1038 (discriminator 1)
    d276:	683b      	ldr	r3, [r7, #0]
    d278:	2b00      	cmp	r3, #0
    d27a:	f000 8083 	beq.w	d384 <fnet_http_query_unencode+0x120>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1040
    {
        for(; *src != 0; src++, dest++)
    d27e:	e07a      	b.n	d376 <fnet_http_query_unencode+0x112>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1041
            if(*src == '+')
    d280:	683b      	ldr	r3, [r7, #0]
    d282:	781b      	ldrb	r3, [r3, #0]
    d284:	b25b      	sxtb	r3, r3
    d286:	2b2b      	cmp	r3, #43	; 0x2b
    d288:	d103      	bne.n	d292 <fnet_http_query_unencode+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1042
                *dest = ' ';
    d28a:	687b      	ldr	r3, [r7, #4]
    d28c:	2220      	movs	r2, #32
    d28e:	701a      	strb	r2, [r3, #0]
    d290:	e06b      	b.n	d36a <fnet_http_query_unencode+0x106>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1043
            else if(*src == '%')
    d292:	683b      	ldr	r3, [r7, #0]
    d294:	781b      	ldrb	r3, [r3, #0]
    d296:	b25b      	sxtb	r3, r3
    d298:	2b25      	cmp	r3, #37	; 0x25
    d29a:	d162      	bne.n	d362 <fnet_http_query_unencode+0xfe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1046
            {
                int i;
                char val = 0;
    d29c:	2300      	movs	r3, #0
    d29e:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1048
                
                for(i=0; (i<2) && (*src != 0) ; i++)
    d2a0:	2300      	movs	r3, #0
    d2a2:	60fb      	str	r3, [r7, #12]
    d2a4:	e04b      	b.n	d33e <fnet_http_query_unencode+0xda>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1050
                {
                    src++;
    d2a6:	683b      	ldr	r3, [r7, #0]
    d2a8:	3301      	adds	r3, #1
    d2aa:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1051
                    if((*src >= '0') && (*src <= '9'))
    d2ac:	683b      	ldr	r3, [r7, #0]
    d2ae:	781b      	ldrb	r3, [r3, #0]
    d2b0:	b25b      	sxtb	r3, r3
    d2b2:	2b2f      	cmp	r3, #47	; 0x2f
    d2b4:	dd10      	ble.n	d2d8 <fnet_http_query_unencode+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1051 (discriminator 1)
    d2b6:	683b      	ldr	r3, [r7, #0]
    d2b8:	781b      	ldrb	r3, [r3, #0]
    d2ba:	b25b      	sxtb	r3, r3
    d2bc:	2b39      	cmp	r3, #57	; 0x39
    d2be:	dc0b      	bgt.n	d2d8 <fnet_http_query_unencode+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1053
                    {
                        val = (char)((val << 4) + (*src - '0'));
    d2c0:	7afb      	ldrb	r3, [r7, #11]
    d2c2:	011b      	lsls	r3, r3, #4
    d2c4:	b2da      	uxtb	r2, r3
    d2c6:	683b      	ldr	r3, [r7, #0]
    d2c8:	781b      	ldrb	r3, [r3, #0]
    d2ca:	b2db      	uxtb	r3, r3
    d2cc:	4413      	add	r3, r2
    d2ce:	b2db      	uxtb	r3, r3
    d2d0:	3b30      	subs	r3, #48	; 0x30
    d2d2:	b2db      	uxtb	r3, r3
    d2d4:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1054
                        continue;
    d2d6:	e02f      	b.n	d338 <fnet_http_query_unencode+0xd4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1056
                    }
                    else if(((*src >= 'a') && (*src <= 'f')) || ((*src >= 'A') && (*src <= 'F')))
    d2d8:	683b      	ldr	r3, [r7, #0]
    d2da:	781b      	ldrb	r3, [r3, #0]
    d2dc:	b25b      	sxtb	r3, r3
    d2de:	2b60      	cmp	r3, #96	; 0x60
    d2e0:	dd04      	ble.n	d2ec <fnet_http_query_unencode+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1056 (discriminator 1)
    d2e2:	683b      	ldr	r3, [r7, #0]
    d2e4:	781b      	ldrb	r3, [r3, #0]
    d2e6:	b25b      	sxtb	r3, r3
    d2e8:	2b66      	cmp	r3, #102	; 0x66
    d2ea:	dd09      	ble.n	d300 <fnet_http_query_unencode+0x9c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1056 (discriminator 2)
    d2ec:	683b      	ldr	r3, [r7, #0]
    d2ee:	781b      	ldrb	r3, [r3, #0]
    d2f0:	b25b      	sxtb	r3, r3
    d2f2:	2b40      	cmp	r3, #64	; 0x40
    d2f4:	dd1f      	ble.n	d336 <fnet_http_query_unencode+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1056 (discriminator 1)
    d2f6:	683b      	ldr	r3, [r7, #0]
    d2f8:	781b      	ldrb	r3, [r3, #0]
    d2fa:	b25b      	sxtb	r3, r3
    d2fc:	2b46      	cmp	r3, #70	; 0x46
    d2fe:	dc1a      	bgt.n	d336 <fnet_http_query_unencode+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1058
                    {
                        val = (char)((val << 4) + (*src + 10 - (((*src >= 'a') && (*src <= 'f')) ? 'a' : 'A')));
    d300:	7afb      	ldrb	r3, [r7, #11]
    d302:	011b      	lsls	r3, r3, #4
    d304:	b2da      	uxtb	r2, r3
    d306:	683b      	ldr	r3, [r7, #0]
    d308:	781b      	ldrb	r3, [r3, #0]
    d30a:	b2d9      	uxtb	r1, r3
    d30c:	683b      	ldr	r3, [r7, #0]
    d30e:	781b      	ldrb	r3, [r3, #0]
    d310:	b25b      	sxtb	r3, r3
    d312:	2b60      	cmp	r3, #96	; 0x60
    d314:	dd06      	ble.n	d324 <fnet_http_query_unencode+0xc0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1058 (discriminator 1)
    d316:	683b      	ldr	r3, [r7, #0]
    d318:	781b      	ldrb	r3, [r3, #0]
    d31a:	b25b      	sxtb	r3, r3
    d31c:	2b66      	cmp	r3, #102	; 0x66
    d31e:	dc01      	bgt.n	d324 <fnet_http_query_unencode+0xc0>
    d320:	2361      	movs	r3, #97	; 0x61
    d322:	e000      	b.n	d326 <fnet_http_query_unencode+0xc2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1058 (discriminator 2)
    d324:	2341      	movs	r3, #65	; 0x41
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1058 (discriminator 3)
    d326:	1acb      	subs	r3, r1, r3
    d328:	b2db      	uxtb	r3, r3
    d32a:	4413      	add	r3, r2
    d32c:	b2db      	uxtb	r3, r3
    d32e:	330a      	adds	r3, #10
    d330:	b2db      	uxtb	r3, r3
    d332:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1059 (discriminator 3)
                        continue;
    d334:	e000      	b.n	d338 <fnet_http_query_unencode+0xd4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1061
                    }
                    break;
    d336:	e009      	b.n	d34c <fnet_http_query_unencode+0xe8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1048
            else if(*src == '%')
            {
                int i;
                char val = 0;
                
                for(i=0; (i<2) && (*src != 0) ; i++)
    d338:	68fb      	ldr	r3, [r7, #12]
    d33a:	3301      	adds	r3, #1
    d33c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1048 (discriminator 1)
    d33e:	68fb      	ldr	r3, [r7, #12]
    d340:	2b01      	cmp	r3, #1
    d342:	dc03      	bgt.n	d34c <fnet_http_query_unencode+0xe8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1048 (discriminator 2)
    d344:	683b      	ldr	r3, [r7, #0]
    d346:	781b      	ldrb	r3, [r3, #0]
    d348:	2b00      	cmp	r3, #0
    d34a:	d1ac      	bne.n	d2a6 <fnet_http_query_unencode+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1063
                        val = (char)((val << 4) + (*src + 10 - (((*src >= 'a') && (*src <= 'f')) ? 'a' : 'A')));
                        continue;
                    }
                    break;
                }
                if(i==2)
    d34c:	68fb      	ldr	r3, [r7, #12]
    d34e:	2b02      	cmp	r3, #2
    d350:	d103      	bne.n	d35a <fnet_http_query_unencode+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1064
                    *dest = val;
    d352:	687b      	ldr	r3, [r7, #4]
    d354:	7afa      	ldrb	r2, [r7, #11]
    d356:	701a      	strb	r2, [r3, #0]
    d358:	e007      	b.n	d36a <fnet_http_query_unencode+0x106>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1066
                else
                    *dest = '?';
    d35a:	687b      	ldr	r3, [r7, #4]
    d35c:	223f      	movs	r2, #63	; 0x3f
    d35e:	701a      	strb	r2, [r3, #0]
    d360:	e003      	b.n	d36a <fnet_http_query_unencode+0x106>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1069
            }     
            else
                *dest = *src;
    d362:	683b      	ldr	r3, [r7, #0]
    d364:	781a      	ldrb	r2, [r3, #0]
    d366:	687b      	ldr	r3, [r7, #4]
    d368:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1040
************************************************************************/
void fnet_http_query_unencode(char * dest, char * src)
{
    if(dest && src)
    {
        for(; *src != 0; src++, dest++)
    d36a:	683b      	ldr	r3, [r7, #0]
    d36c:	3301      	adds	r3, #1
    d36e:	603b      	str	r3, [r7, #0]
    d370:	687b      	ldr	r3, [r7, #4]
    d372:	3301      	adds	r3, #1
    d374:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1040 (discriminator 1)
    d376:	683b      	ldr	r3, [r7, #0]
    d378:	781b      	ldrb	r3, [r3, #0]
    d37a:	2b00      	cmp	r3, #0
    d37c:	d180      	bne.n	d280 <fnet_http_query_unencode+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1071
                    *dest = '?';
            }     
            else
                *dest = *src;

         *dest = '\0';
    d37e:	687b      	ldr	r3, [r7, #4]
    d380:	2200      	movs	r2, #0
    d382:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1073
     }
}
    d384:	3714      	adds	r7, #20
    d386:	46bd      	mov	sp, r7
    d388:	f85d 7b04 	ldr.w	r7, [sp], #4
    d38c:	4770      	bx	lr
    d38e:	bf00      	nop

0000d390 <fnet_http_uri_parse>:
fnet_http_uri_parse():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1083
*
* DESCRIPTION: 
*   Returns pointer to the end of URI str.
************************************************************************/
char *fnet_http_uri_parse(char * in_str, struct fnet_http_uri * uri)
{
    d390:	b580      	push	{r7, lr}
    d392:	b084      	sub	sp, #16
    d394:	af00      	add	r7, sp, #0
    d396:	6078      	str	r0, [r7, #4]
    d398:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1084
    char * cur = in_str;
    d39a:	687b      	ldr	r3, [r7, #4]
    d39c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1087
    
    /* rel_uri       = [ path ] [ "?" query ]*/
    if(cur && uri) 
    d39e:	68fb      	ldr	r3, [r7, #12]
    d3a0:	2b00      	cmp	r3, #0
    d3a2:	d05e      	beq.n	d462 <fnet_http_uri_parse+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1087 (discriminator 1)
    d3a4:	683b      	ldr	r3, [r7, #0]
    d3a6:	2b00      	cmp	r3, #0
    d3a8:	d05b      	beq.n	d462 <fnet_http_uri_parse+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1093
    {
        /*Parse the Request-URI. */
        /*Extract file name. */
        
        /* Ignore any initial spaces */
        while (*cur == ' ') 
    d3aa:	e002      	b.n	d3b2 <fnet_http_uri_parse+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1094
            cur++;
    d3ac:	68fb      	ldr	r3, [r7, #12]
    d3ae:	3301      	adds	r3, #1
    d3b0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1093 (discriminator 1)
    {
        /*Parse the Request-URI. */
        /*Extract file name. */
        
        /* Ignore any initial spaces */
        while (*cur == ' ') 
    d3b2:	68fb      	ldr	r3, [r7, #12]
    d3b4:	781b      	ldrb	r3, [r3, #0]
    d3b6:	b25b      	sxtb	r3, r3
    d3b8:	2b20      	cmp	r3, #32
    d3ba:	d0f7      	beq.n	d3ac <fnet_http_uri_parse+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1096
            cur++;
        
        uri->path = cur;
    d3bc:	683b      	ldr	r3, [r7, #0]
    d3be:	68fa      	ldr	r2, [r7, #12]
    d3c0:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1097
        uri->query = 0;
    d3c2:	683b      	ldr	r3, [r7, #0]
    d3c4:	2200      	movs	r2, #0
    d3c6:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1098
        uri->extension = 0;
    d3c8:	683b      	ldr	r3, [r7, #0]
    d3ca:	2200      	movs	r2, #0
    d3cc:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1101
                            
        /* Find end of the file name. */
        while( *cur != '\0') 
    d3ce:	e027      	b.n	d420 <fnet_http_uri_parse+0x90>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1103
        {
            if (*cur == ' ')	/* Path end is found */
    d3d0:	68fb      	ldr	r3, [r7, #12]
    d3d2:	781b      	ldrb	r3, [r3, #0]
    d3d4:	b25b      	sxtb	r3, r3
    d3d6:	2b20      	cmp	r3, #32
    d3d8:	d103      	bne.n	d3e2 <fnet_http_uri_parse+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1105
            { 
                *cur = '\0';                    /* Mark path end */
    d3da:	68fb      	ldr	r3, [r7, #12]
    d3dc:	2200      	movs	r2, #0
    d3de:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1106
                break;   
    d3e0:	e022      	b.n	d428 <fnet_http_uri_parse+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1109
                
            }
            else if(*cur == '?')                 /* Query is found */
    d3e2:	68fb      	ldr	r3, [r7, #12]
    d3e4:	781b      	ldrb	r3, [r3, #0]
    d3e6:	b25b      	sxtb	r3, r3
    d3e8:	2b3f      	cmp	r3, #63	; 0x3f
    d3ea:	d116      	bne.n	d41a <fnet_http_uri_parse+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1112
            {
                    char *end_query;
                     *cur = '\0';               /* Mark path end */
    d3ec:	68fb      	ldr	r3, [r7, #12]
    d3ee:	2200      	movs	r2, #0
    d3f0:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1114
                    
                    uri->query = cur + 1;       /* Point to the next symbol after '?' */ 
    d3f2:	68fb      	ldr	r3, [r7, #12]
    d3f4:	1c5a      	adds	r2, r3, #1
    d3f6:	683b      	ldr	r3, [r7, #0]
    d3f8:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1117
                    
                    /* Find end of query.*/
                    end_query = fnet_strchr( uri->query, ' ');
    d3fa:	683b      	ldr	r3, [r7, #0]
    d3fc:	689b      	ldr	r3, [r3, #8]
    d3fe:	4618      	mov	r0, r3
    d400:	2120      	movs	r1, #32
    d402:	f7f8 fd65 	bl	5ed0 <fnet_strchr>
    d406:	60b8      	str	r0, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1118
                    if(end_query)
    d408:	68bb      	ldr	r3, [r7, #8]
    d40a:	2b00      	cmp	r3, #0
    d40c:	d005      	beq.n	d41a <fnet_http_uri_parse+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1120
                    {
                        *end_query = '\0';      /* Mark query end */
    d40e:	68bb      	ldr	r3, [r7, #8]
    d410:	2200      	movs	r2, #0
    d412:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1121
                        cur = end_query;
    d414:	68bb      	ldr	r3, [r7, #8]
    d416:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1122
                        break;
    d418:	e006      	b.n	d428 <fnet_http_uri_parse+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1125
                    }
            }
            cur ++;
    d41a:	68fb      	ldr	r3, [r7, #12]
    d41c:	3301      	adds	r3, #1
    d41e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1101 (discriminator 1)
        uri->path = cur;
        uri->query = 0;
        uri->extension = 0;
                            
        /* Find end of the file name. */
        while( *cur != '\0') 
    d420:	68fb      	ldr	r3, [r7, #12]
    d422:	781b      	ldrb	r3, [r3, #0]
    d424:	2b00      	cmp	r3, #0
    d426:	d1d3      	bne.n	d3d0 <fnet_http_uri_parse+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1128
                    }
            }
            cur ++;
        }
        
        uri->extension = fnet_strrchr(uri->path, '.'); /* Find file extension. */
    d428:	683b      	ldr	r3, [r7, #0]
    d42a:	681b      	ldr	r3, [r3, #0]
    d42c:	4618      	mov	r0, r3
    d42e:	212e      	movs	r1, #46	; 0x2e
    d430:	f7f8 fd18 	bl	5e64 <fnet_strrchr>
    d434:	4602      	mov	r2, r0
    d436:	683b      	ldr	r3, [r7, #0]
    d438:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1130
        
        if( uri->query == 0)        /* No query.*/
    d43a:	683b      	ldr	r3, [r7, #0]
    d43c:	689b      	ldr	r3, [r3, #8]
    d43e:	2b00      	cmp	r3, #0
    d440:	d102      	bne.n	d448 <fnet_http_uri_parse+0xb8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1131
            uri->query = cur;       /* Point to the blank string. */        
    d442:	683b      	ldr	r3, [r7, #0]
    d444:	68fa      	ldr	r2, [r7, #12]
    d446:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1133
        
        if( uri->extension == 0)    /* No extension.*/
    d448:	683b      	ldr	r3, [r7, #0]
    d44a:	685b      	ldr	r3, [r3, #4]
    d44c:	2b00      	cmp	r3, #0
    d44e:	d103      	bne.n	d458 <fnet_http_uri_parse+0xc8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1134
            uri->extension = cur;   /* Point to the blank string. */
    d450:	683b      	ldr	r3, [r7, #0]
    d452:	68fa      	ldr	r2, [r7, #12]
    d454:	605a      	str	r2, [r3, #4]
    d456:	e004      	b.n	d462 <fnet_http_uri_parse+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1136
        else
            uri->extension ++;      /* Skip the point character. */
    d458:	683b      	ldr	r3, [r7, #0]
    d45a:	685b      	ldr	r3, [r3, #4]
    d45c:	1c5a      	adds	r2, r3, #1
    d45e:	683b      	ldr	r3, [r7, #0]
    d460:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1139
    }
    
    return cur;
    d462:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1140
}
    d464:	4618      	mov	r0, r3
    d466:	3710      	adds	r7, #16
    d468:	46bd      	mov	sp, r7
    d46a:	bd80      	pop	{r7, pc}

0000d46c <fnet_http_version_parse>:
fnet_http_version_parse():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1150
* NAME: fnet_http_version_parse
*
* DESCRIPTION: 
************************************************************************/
static void fnet_http_version_parse(char * in_str, struct fnet_http_version * version)
{
    d46c:	b580      	push	{r7, lr}
    d46e:	b086      	sub	sp, #24
    d470:	af00      	add	r7, sp, #0
    d472:	6078      	str	r0, [r7, #4]
    d474:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1151
    char *cur = in_str;
    d476:	687b      	ldr	r3, [r7, #4]
    d478:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1156
    char *ptr;
    char *point_ptr;
    
    /* rel_uri       = [ path ] [ "?" query ]*/
    if(cur && version) 
    d47a:	697b      	ldr	r3, [r7, #20]
    d47c:	2b00      	cmp	r3, #0
    d47e:	d050      	beq.n	d522 <fnet_http_version_parse+0xb6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1156 (discriminator 1)
    d480:	683b      	ldr	r3, [r7, #0]
    d482:	2b00      	cmp	r3, #0
    d484:	d04d      	beq.n	d522 <fnet_http_version_parse+0xb6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1159
    {
        /* Ignore any initial spaces */
        while (*cur == ' ') 
    d486:	e002      	b.n	d48e <fnet_http_version_parse+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1160
            cur++;
    d488:	697b      	ldr	r3, [r7, #20]
    d48a:	3301      	adds	r3, #1
    d48c:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1159 (discriminator 1)
    
    /* rel_uri       = [ path ] [ "?" query ]*/
    if(cur && version) 
    {
        /* Ignore any initial spaces */
        while (*cur == ' ') 
    d48e:	697b      	ldr	r3, [r7, #20]
    d490:	781b      	ldrb	r3, [r3, #0]
    d492:	b25b      	sxtb	r3, r3
    d494:	2b20      	cmp	r3, #32
    d496:	d0f7      	beq.n	d488 <fnet_http_version_parse+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1163
            cur++;
        
        /* Find "HTTP/"*/
        if((cur = fnet_strstr( cur, FNET_HTTP_VERSION_HEADER )) !=0)
    d498:	6978      	ldr	r0, [r7, #20]
    d49a:	4924      	ldr	r1, [pc, #144]	; (d52c <fnet_http_version_parse+0xc0>)
    d49c:	f7f8 fd48 	bl	5f30 <fnet_strstr>
    d4a0:	6178      	str	r0, [r7, #20]
    d4a2:	697b      	ldr	r3, [r7, #20]
    d4a4:	2b00      	cmp	r3, #0
    d4a6:	d036      	beq.n	d516 <fnet_http_version_parse+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1165
        {
            cur += sizeof(FNET_HTTP_VERSION_HEADER)-1;
    d4a8:	697b      	ldr	r3, [r7, #20]
    d4aa:	3305      	adds	r3, #5
    d4ac:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1168
            
            /* Find '.'*/
            if((point_ptr = fnet_strchr(cur, '.')) != 0)
    d4ae:	6978      	ldr	r0, [r7, #20]
    d4b0:	212e      	movs	r1, #46	; 0x2e
    d4b2:	f7f8 fd0d 	bl	5ed0 <fnet_strchr>
    d4b6:	6138      	str	r0, [r7, #16]
    d4b8:	693b      	ldr	r3, [r7, #16]
    d4ba:	2b00      	cmp	r3, #0
    d4bc:	d02b      	beq.n	d516 <fnet_http_version_parse+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1170
            {
                *point_ptr = 0; /* Split numbers.*/
    d4be:	693b      	ldr	r3, [r7, #16]
    d4c0:	2200      	movs	r2, #0
    d4c2:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1173
                
                /*Major number*/
                version->major = (char)fnet_strtoul (cur, &ptr, 10);
    d4c4:	f107 030c 	add.w	r3, r7, #12
    d4c8:	6978      	ldr	r0, [r7, #20]
    d4ca:	4619      	mov	r1, r3
    d4cc:	220a      	movs	r2, #10
    d4ce:	f7f8 fdad 	bl	602c <fnet_strtoul>
    d4d2:	4603      	mov	r3, r0
    d4d4:	b2da      	uxtb	r2, r3
    d4d6:	683b      	ldr	r3, [r7, #0]
    d4d8:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1174
                if (!((version->major == 0) && (ptr == cur)))
    d4da:	683b      	ldr	r3, [r7, #0]
    d4dc:	781b      	ldrb	r3, [r3, #0]
    d4de:	2b00      	cmp	r3, #0
    d4e0:	d103      	bne.n	d4ea <fnet_http_version_parse+0x7e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1174 (discriminator 1)
    d4e2:	68fa      	ldr	r2, [r7, #12]
    d4e4:	697b      	ldr	r3, [r7, #20]
    d4e6:	429a      	cmp	r2, r3
    d4e8:	d015      	beq.n	d516 <fnet_http_version_parse+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1176
                {
                    cur = point_ptr + 1;
    d4ea:	693b      	ldr	r3, [r7, #16]
    d4ec:	3301      	adds	r3, #1
    d4ee:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1179
                    
                    /* Minor number.*/
                    version->minor = (char)fnet_strtoul (cur, &ptr, 10);
    d4f0:	f107 030c 	add.w	r3, r7, #12
    d4f4:	6978      	ldr	r0, [r7, #20]
    d4f6:	4619      	mov	r1, r3
    d4f8:	220a      	movs	r2, #10
    d4fa:	f7f8 fd97 	bl	602c <fnet_strtoul>
    d4fe:	4603      	mov	r3, r0
    d500:	b2da      	uxtb	r2, r3
    d502:	683b      	ldr	r3, [r7, #0]
    d504:	705a      	strb	r2, [r3, #1]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1180
                    if (!((version->minor == 0) && (ptr == cur)))
    d506:	683b      	ldr	r3, [r7, #0]
    d508:	785b      	ldrb	r3, [r3, #1]
    d50a:	2b00      	cmp	r3, #0
    d50c:	d109      	bne.n	d522 <fnet_http_version_parse+0xb6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1180 (discriminator 1)
    d50e:	68fa      	ldr	r2, [r7, #12]
    d510:	697b      	ldr	r3, [r7, #20]
    d512:	429a      	cmp	r2, r3
    d514:	d105      	bne.n	d522 <fnet_http_version_parse+0xb6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1187
                }
            }
        }
        
        /* No version info found.*/
        version->major = 0;
    d516:	683b      	ldr	r3, [r7, #0]
    d518:	2200      	movs	r2, #0
    d51a:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1188
        version->minor = 9;
    d51c:	683b      	ldr	r3, [r7, #0]
    d51e:	2209      	movs	r2, #9
    d520:	705a      	strb	r2, [r3, #1]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1192
    }

EXIT:
    return;  
    d522:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1193
}
    d524:	3718      	adds	r7, #24
    d526:	46bd      	mov	sp, r7
    d528:	bd80      	pop	{r7, pc}
    d52a:	bf00      	nop
    d52c:	00014280 	.word	0x00014280

0000d530 <fnet_http_status_ok>:
fnet_http_status_ok():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1201
* NAME: fnet_http_status_ok
*
* DESCRIPTION: 
************************************************************************/
static int fnet_http_status_ok(int status)
{
    d530:	b480      	push	{r7}
    d532:	b085      	sub	sp, #20
    d534:	af00      	add	r7, sp, #0
    d536:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1204
    int result;
    
    if((status == FNET_OK) || ((status/100) == 2) /* Successful 2xx. */)
    d538:	687b      	ldr	r3, [r7, #4]
    d53a:	2b00      	cmp	r3, #0
    d53c:	d003      	beq.n	d546 <fnet_http_status_ok+0x16>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1204 (discriminator 1)
    d53e:	687b      	ldr	r3, [r7, #4]
    d540:	3bc8      	subs	r3, #200	; 0xc8
    d542:	2b63      	cmp	r3, #99	; 0x63
    d544:	d802      	bhi.n	d54c <fnet_http_status_ok+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1205
        result = FNET_OK;
    d546:	2300      	movs	r3, #0
    d548:	60fb      	str	r3, [r7, #12]
    d54a:	e002      	b.n	d552 <fnet_http_status_ok+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1207
    else
        result = FNET_ERR;
    d54c:	f04f 33ff 	mov.w	r3, #4294967295
    d550:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1209
    
    return result;
    d552:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http.c:1210
}
    d554:	4618      	mov	r0, r3
    d556:	3714      	adds	r7, #20
    d558:	46bd      	mov	sp, r7
    d55a:	f85d 7b04 	ldr.w	r7, [sp], #4
    d55e:	4770      	bx	lr

0000d560 <fnet_http_cgi_handle>:
fnet_http_cgi_handle():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:80
* NAME: fnet_http_cgi_handle
*
* DESCRIPTION: 
************************************************************************/
static int fnet_http_cgi_handle (struct fnet_http_if * http, struct fnet_http_uri * uri)
{
    d560:	b5b0      	push	{r4, r5, r7, lr}
    d562:	b086      	sub	sp, #24
    d564:	af00      	add	r7, sp, #0
    d566:	6078      	str	r0, [r7, #4]
    d568:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:81
    int                         result = FNET_ERR;
    d56a:	f04f 33ff 	mov.w	r3, #4294967295
    d56e:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:83
    const struct                fnet_http_cgi *cgi_ptr;
    struct fnet_http_session_if *session =  http->session_active;
    d570:	687b      	ldr	r3, [r7, #4]
    d572:	69db      	ldr	r3, [r3, #28]
    d574:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:85
    
    if(http->cgi_table)
    d576:	687b      	ldr	r3, [r7, #4]
    d578:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d57c:	3340      	adds	r3, #64	; 0x40
    d57e:	681b      	ldr	r3, [r3, #0]
    d580:	2b00      	cmp	r3, #0
    d582:	d04c      	beq.n	d61e <fnet_http_cgi_handle+0xbe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:89
    /* CGI table is initialized.*/
    {
        /* Skip first '/' and ' ' */
        while(*uri->path == '/' || *uri->path == ' ')
    d584:	e004      	b.n	d590 <fnet_http_cgi_handle+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:90
            uri->path++;
    d586:	683b      	ldr	r3, [r7, #0]
    d588:	681b      	ldr	r3, [r3, #0]
    d58a:	1c5a      	adds	r2, r3, #1
    d58c:	683b      	ldr	r3, [r7, #0]
    d58e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:89 (discriminator 1)
    
    if(http->cgi_table)
    /* CGI table is initialized.*/
    {
        /* Skip first '/' and ' ' */
        while(*uri->path == '/' || *uri->path == ' ')
    d590:	683b      	ldr	r3, [r7, #0]
    d592:	681b      	ldr	r3, [r3, #0]
    d594:	781b      	ldrb	r3, [r3, #0]
    d596:	b25b      	sxtb	r3, r3
    d598:	2b2f      	cmp	r3, #47	; 0x2f
    d59a:	d0f4      	beq.n	d586 <fnet_http_cgi_handle+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:89 (discriminator 2)
    d59c:	683b      	ldr	r3, [r7, #0]
    d59e:	681b      	ldr	r3, [r3, #0]
    d5a0:	781b      	ldrb	r3, [r3, #0]
    d5a2:	b25b      	sxtb	r3, r3
    d5a4:	2b20      	cmp	r3, #32
    d5a6:	d0ee      	beq.n	d586 <fnet_http_cgi_handle+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:92
            uri->path++;
        
        session->send_param.data_ptr = 0; /* Clear. */    
    d5a8:	68fb      	ldr	r3, [r7, #12]
    d5aa:	2200      	movs	r2, #0
    d5ac:	f8c3 258c 	str.w	r2, [r3, #1420]	; 0x58c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:95
        
        /* Find CGI function */
        for(cgi_ptr = http->cgi_table; cgi_ptr->name; cgi_ptr++)
    d5b0:	687b      	ldr	r3, [r7, #4]
    d5b2:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d5b6:	3340      	adds	r3, #64	; 0x40
    d5b8:	681b      	ldr	r3, [r3, #0]
    d5ba:	613b      	str	r3, [r7, #16]
    d5bc:	e02b      	b.n	d616 <fnet_http_cgi_handle+0xb6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:97
    	{
    	    if (!fnet_strncmp( uri->path, 
    d5be:	683b      	ldr	r3, [r7, #0]
    d5c0:	681d      	ldr	r5, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:98
    		                   cgi_ptr->name,
    d5c2:	693b      	ldr	r3, [r7, #16]
    d5c4:	681c      	ldr	r4, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:99
    		                   fnet_strlen(cgi_ptr->name))) 
    d5c6:	693b      	ldr	r3, [r7, #16]
    d5c8:	681b      	ldr	r3, [r3, #0]
    d5ca:	4618      	mov	r0, r3
    d5cc:	f7f8 fb7e 	bl	5ccc <fnet_strlen>
    d5d0:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:97
        session->send_param.data_ptr = 0; /* Clear. */    
        
        /* Find CGI function */
        for(cgi_ptr = http->cgi_table; cgi_ptr->name; cgi_ptr++)
    	{
    	    if (!fnet_strncmp( uri->path, 
    d5d2:	4628      	mov	r0, r5
    d5d4:	4621      	mov	r1, r4
    d5d6:	461a      	mov	r2, r3
    d5d8:	f7f8 fcf6 	bl	5fc8 <fnet_strncmp>
    d5dc:	4603      	mov	r3, r0
    d5de:	2b00      	cmp	r3, #0
    d5e0:	d116      	bne.n	d610 <fnet_http_cgi_handle+0xb0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:101
    		                   cgi_ptr->name,
    		                   fnet_strlen(cgi_ptr->name))) 
    		{				 
    		    session->send_param.data_ptr = (void*)cgi_ptr;
    d5e2:	68fb      	ldr	r3, [r7, #12]
    d5e4:	693a      	ldr	r2, [r7, #16]
    d5e6:	f8c3 258c 	str.w	r2, [r3, #1420]	; 0x58c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:102
    		    if(cgi_ptr->handle)
    d5ea:	693b      	ldr	r3, [r7, #16]
    d5ec:	685b      	ldr	r3, [r3, #4]
    d5ee:	2b00      	cmp	r3, #0
    d5f0:	d00b      	beq.n	d60a <fnet_http_cgi_handle+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:103
    		        result = cgi_ptr->handle(uri->query, &session->response.cookie);
    d5f2:	693b      	ldr	r3, [r7, #16]
    d5f4:	685b      	ldr	r3, [r3, #4]
    d5f6:	683a      	ldr	r2, [r7, #0]
    d5f8:	6891      	ldr	r1, [r2, #8]
    d5fa:	68fa      	ldr	r2, [r7, #12]
    d5fc:	f202 52a4 	addw	r2, r2, #1444	; 0x5a4
    d600:	4608      	mov	r0, r1
    d602:	4611      	mov	r1, r2
    d604:	4798      	blx	r3
    d606:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:107
    		    else
    		        result = FNET_OK;
    		        
    	        break;
    d608:	e009      	b.n	d61e <fnet_http_cgi_handle+0xbe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:105
    		{				 
    		    session->send_param.data_ptr = (void*)cgi_ptr;
    		    if(cgi_ptr->handle)
    		        result = cgi_ptr->handle(uri->query, &session->response.cookie);
    		    else
    		        result = FNET_OK;
    d60a:	2300      	movs	r3, #0
    d60c:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:107
    		        
    	        break;
    d60e:	e006      	b.n	d61e <fnet_http_cgi_handle+0xbe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:95
            uri->path++;
        
        session->send_param.data_ptr = 0; /* Clear. */    
        
        /* Find CGI function */
        for(cgi_ptr = http->cgi_table; cgi_ptr->name; cgi_ptr++)
    d610:	693b      	ldr	r3, [r7, #16]
    d612:	330c      	adds	r3, #12
    d614:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:95 (discriminator 1)
    d616:	693b      	ldr	r3, [r7, #16]
    d618:	681b      	ldr	r3, [r3, #0]
    d61a:	2b00      	cmp	r3, #0
    d61c:	d1cf      	bne.n	d5be <fnet_http_cgi_handle+0x5e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:111
    		        
    	        break;
    	    }
    	}
	}
    return result;
    d61e:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:112
}
    d620:	4618      	mov	r0, r3
    d622:	3718      	adds	r7, #24
    d624:	46bd      	mov	sp, r7
    d626:	bdb0      	pop	{r4, r5, r7, pc}

0000d628 <fnet_http_cgi_send>:
fnet_http_cgi_send():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:120
* NAME: fnet_http_cgi_send
*
* DESCRIPTION: 
************************************************************************/
static unsigned long fnet_http_cgi_send (struct fnet_http_if * http)
{
    d628:	b590      	push	{r4, r7, lr}
    d62a:	b087      	sub	sp, #28
    d62c:	af00      	add	r7, sp, #0
    d62e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:122
    const struct fnet_http_cgi  *cgi_ptr;
    unsigned long               result = 0;
    d630:	2300      	movs	r3, #0
    d632:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:123
    struct fnet_http_session_if *session =  http->session_active;
    d634:	687b      	ldr	r3, [r7, #4]
    d636:	69db      	ldr	r3, [r3, #28]
    d638:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:125
    
    if(session->send_param.data_ptr)
    d63a:	693b      	ldr	r3, [r7, #16]
    d63c:	f8d3 358c 	ldr.w	r3, [r3, #1420]	; 0x58c
    d640:	2b00      	cmp	r3, #0
    d642:	d017      	beq.n	d674 <fnet_http_cgi_send+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:127
    {
        cgi_ptr = (const struct fnet_http_cgi *) session->send_param.data_ptr;
    d644:	693b      	ldr	r3, [r7, #16]
    d646:	f8d3 358c 	ldr.w	r3, [r3, #1420]	; 0x58c
    d64a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:129
        
        if(cgi_ptr->send)
    d64c:	68fb      	ldr	r3, [r7, #12]
    d64e:	689b      	ldr	r3, [r3, #8]
    d650:	2b00      	cmp	r3, #0
    d652:	d00f      	beq.n	d674 <fnet_http_cgi_send+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:130
            result = cgi_ptr->send(session->buffer, sizeof(session->buffer), &session->response.send_eof, &session->response.cookie);
    d654:	68fb      	ldr	r3, [r7, #12]
    d656:	689c      	ldr	r4, [r3, #8]
    d658:	693b      	ldr	r3, [r7, #16]
    d65a:	f103 010c 	add.w	r1, r3, #12
    d65e:	693b      	ldr	r3, [r7, #16]
    d660:	f503 62b3 	add.w	r2, r3, #1432	; 0x598
    d664:	693b      	ldr	r3, [r7, #16]
    d666:	f203 53a4 	addw	r3, r3, #1444	; 0x5a4
    d66a:	4608      	mov	r0, r1
    d66c:	f240 5179 	movw	r1, #1401	; 0x579
    d670:	47a0      	blx	r4
    d672:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:133
    }
        
    return result;
    d674:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_cgi.c:134
}
    d676:	4618      	mov	r0, r3
    d678:	371c      	adds	r7, #28
    d67a:	46bd      	mov	sp, r7
    d67c:	bd90      	pop	{r4, r7, pc}
    d67e:	bf00      	nop

0000d680 <fnet_http_get_handle>:
fnet_http_get_handle():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:79
* NAME: fnet_http_get_handle
*
* DESCRIPTION: 
************************************************************************/
static int fnet_http_get_handle(struct fnet_http_if * http, struct fnet_http_uri * uri)
{
    d680:	b580      	push	{r7, lr}
    d682:	b084      	sub	sp, #16
    d684:	af00      	add	r7, sp, #0
    d686:	6078      	str	r0, [r7, #4]
    d688:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:80
    struct fnet_http_session_if *session =  http->session_active;
    d68a:	687b      	ldr	r3, [r7, #4]
    d68c:	69db      	ldr	r3, [r3, #28]
    d68e:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:81
    int                         result = FNET_ERR;
    d690:	f04f 33ff 	mov.w	r3, #4294967295
    d694:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:84
    
    /* Request is found */
    if(uri)
    d696:	683b      	ldr	r3, [r7, #0]
    d698:	2b00      	cmp	r3, #0
    d69a:	d017      	beq.n	d6cc <fnet_http_get_handle+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:86
    {
        session->response.send_file_handler = fnet_http_find_handler(http, uri);           /* Find file handler.*/
    d69c:	6878      	ldr	r0, [r7, #4]
    d69e:	6839      	ldr	r1, [r7, #0]
    d6a0:	f7ff fce6 	bl	d070 <fnet_http_find_handler>
    d6a4:	4602      	mov	r2, r0
    d6a6:	68bb      	ldr	r3, [r7, #8]
    d6a8:	f8c3 2590 	str.w	r2, [r3, #1424]	; 0x590
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:89

    #if FNET_CFG_HTTP_VERSION_MAJOR
        session->response.send_file_content_type = fnet_http_find_content_type(http, uri); /* Find file content-type.*/
    d6ac:	6878      	ldr	r0, [r7, #4]
    d6ae:	6839      	ldr	r1, [r7, #0]
    d6b0:	f7ff fd1a 	bl	d0e8 <fnet_http_find_content_type>
    d6b4:	4602      	mov	r2, r0
    d6b6:	68bb      	ldr	r3, [r7, #8]
    d6b8:	f8c3 25a8 	str.w	r2, [r3, #1448]	; 0x5a8
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:92
    #endif        
       
        result = session->response.send_file_handler->file_handle(http, uri);              /* Initial handling. */
    d6bc:	68bb      	ldr	r3, [r7, #8]
    d6be:	f8d3 3590 	ldr.w	r3, [r3, #1424]	; 0x590
    d6c2:	685b      	ldr	r3, [r3, #4]
    d6c4:	6878      	ldr	r0, [r7, #4]
    d6c6:	6839      	ldr	r1, [r7, #0]
    d6c8:	4798      	blx	r3
    d6ca:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:95
    }

    return result;
    d6cc:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:96
}
    d6ce:	4618      	mov	r0, r3
    d6d0:	3710      	adds	r7, #16
    d6d2:	46bd      	mov	sp, r7
    d6d4:	bd80      	pop	{r7, pc}
    d6d6:	bf00      	nop

0000d6d8 <fnet_http_get_send>:
fnet_http_get_send():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:105
*
* DESCRIPTION: Simple-Response. Simple-responce consists only of the 
* entity body and is terminated by the server closing connection.
************************************************************************/
static int fnet_http_get_send(struct fnet_http_if * http)
{
    d6d8:	b580      	push	{r7, lr}
    d6da:	b084      	sub	sp, #16
    d6dc:	af00      	add	r7, sp, #0
    d6de:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:106
    struct fnet_http_session_if *session =  http->session_active;
    d6e0:	687b      	ldr	r3, [r7, #4]
    d6e2:	69db      	ldr	r3, [r3, #28]
    d6e4:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:109
    int                         result;
    
    if((session->buffer_actual_size = session->response.send_file_handler->file_send(http)) > 0)
    d6e6:	68bb      	ldr	r3, [r7, #8]
    d6e8:	f8d3 3590 	ldr.w	r3, [r3, #1424]	; 0x590
    d6ec:	689b      	ldr	r3, [r3, #8]
    d6ee:	6878      	ldr	r0, [r7, #4]
    d6f0:	4798      	blx	r3
    d6f2:	4602      	mov	r2, r0
    d6f4:	68bb      	ldr	r3, [r7, #8]
    d6f6:	f8c3 2588 	str.w	r2, [r3, #1416]	; 0x588
    d6fa:	68bb      	ldr	r3, [r7, #8]
    d6fc:	f8d3 3588 	ldr.w	r3, [r3, #1416]	; 0x588
    d700:	2b00      	cmp	r3, #0
    d702:	d002      	beq.n	d70a <fnet_http_get_send+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:110
        result = FNET_OK;                            
    d704:	2300      	movs	r3, #0
    d706:	60fb      	str	r3, [r7, #12]
    d708:	e002      	b.n	d710 <fnet_http_get_send+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:112
    else
        result = FNET_ERR;
    d70a:	f04f 33ff 	mov.w	r3, #4294967295
    d70e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:114
    
    return result;
    d710:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:115
}
    d712:	4618      	mov	r0, r3
    d714:	3710      	adds	r7, #16
    d716:	46bd      	mov	sp, r7
    d718:	bd80      	pop	{r7, pc}
    d71a:	bf00      	nop

0000d71c <fnet_http_get_close>:
fnet_http_get_close():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:123
* NAME: fnet_http_get_close
*
* DESCRIPTION: 
************************************************************************/
static void fnet_http_get_close(struct fnet_http_if * http)
{
    d71c:	b580      	push	{r7, lr}
    d71e:	b084      	sub	sp, #16
    d720:	af00      	add	r7, sp, #0
    d722:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:124
    struct fnet_http_session_if *session =  http->session_active;
    d724:	687b      	ldr	r3, [r7, #4]
    d726:	69db      	ldr	r3, [r3, #28]
    d728:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:126

    if(session->response.send_file_handler && session->response.send_file_handler->file_close)
    d72a:	68fb      	ldr	r3, [r7, #12]
    d72c:	f8d3 3590 	ldr.w	r3, [r3, #1424]	; 0x590
    d730:	2b00      	cmp	r3, #0
    d732:	d00b      	beq.n	d74c <fnet_http_get_close+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:126 (discriminator 1)
    d734:	68fb      	ldr	r3, [r7, #12]
    d736:	f8d3 3590 	ldr.w	r3, [r3, #1424]	; 0x590
    d73a:	68db      	ldr	r3, [r3, #12]
    d73c:	2b00      	cmp	r3, #0
    d73e:	d005      	beq.n	d74c <fnet_http_get_close+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:127
        session->response.send_file_handler->file_close(http);
    d740:	68fb      	ldr	r3, [r7, #12]
    d742:	f8d3 3590 	ldr.w	r3, [r3, #1424]	; 0x590
    d746:	68db      	ldr	r3, [r3, #12]
    d748:	6878      	ldr	r0, [r7, #4]
    d74a:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_get.c:128
}
    d74c:	3710      	adds	r7, #16
    d74e:	46bd      	mov	sp, r7
    d750:	bd80      	pop	{r7, pc}
    d752:	bf00      	nop

0000d754 <fnet_http_ssi_handle>:
fnet_http_ssi_handle():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:92
* NAME: fnet_http_ssi_handle
*
* DESCRIPTION: 
************************************************************************/
static int fnet_http_ssi_handle (struct fnet_http_if * http, struct fnet_http_uri * uri)
{
    d754:	b580      	push	{r7, lr}
    d756:	b084      	sub	sp, #16
    d758:	af00      	add	r7, sp, #0
    d75a:	6078      	str	r0, [r7, #4]
    d75c:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:93
    int     result = fnet_http_default_handle (http, uri);
    d75e:	6878      	ldr	r0, [r7, #4]
    d760:	6839      	ldr	r1, [r7, #0]
    d762:	f7ff fcff 	bl	d164 <fnet_http_default_handle>
    d766:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:94
    http->session_active->response.content_length = -1; /* No content length.*/ 
    d768:	687b      	ldr	r3, [r7, #4]
    d76a:	69db      	ldr	r3, [r3, #28]
    d76c:	f04f 32ff 	mov.w	r2, #4294967295
    d770:	f8c3 25b8 	str.w	r2, [r3, #1464]	; 0x5b8
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:95
    return result;
    d774:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:96
}
    d776:	4618      	mov	r0, r3
    d778:	3710      	adds	r7, #16
    d77a:	46bd      	mov	sp, r7
    d77c:	bd80      	pop	{r7, pc}
    d77e:	bf00      	nop

0000d780 <fnet_http_ssi_send>:
fnet_http_ssi_send():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:105
* NAME: fnet_http_ssi_send
*
* DESCRIPTION: 
************************************************************************/
static unsigned long fnet_http_ssi_send (struct fnet_http_if * http)
{
    d780:	b590      	push	{r4, r7, lr}
    d782:	b08f      	sub	sp, #60	; 0x3c
    d784:	af00      	add	r7, sp, #0
    d786:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:106
    unsigned long               result = 0;
    d788:	2300      	movs	r3, #0
    d78a:	637b      	str	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:107
    unsigned long               read_result = 0;
    d78c:	2300      	movs	r3, #0
    d78e:	633b      	str	r3, [r7, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:108
    int                         ssi_head_index = 0;
    d790:	2300      	movs	r3, #0
    d792:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:109
    int                         ssi_tail_index = 0;
    d794:	2300      	movs	r3, #0
    d796:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:110
    struct fnet_http_session_if *session =  http->session_active; 
    d798:	687b      	ldr	r3, [r7, #4]
    d79a:	69db      	ldr	r3, [r3, #28]
    d79c:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:111
    char                        *buffer = session->buffer;
    d79e:	697b      	ldr	r3, [r7, #20]
    d7a0:	330c      	adds	r3, #12
    d7a2:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:112
    int                         next = 0;
    d7a4:	2300      	movs	r3, #0
    d7a6:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:114
    
    while (result<sizeof(session->buffer) && (next == 0))
    d7a8:	e110      	b.n	d9cc <fnet_http_ssi_send+0x24c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:116
    {
        if(http->ssi.state != FNET_HTTP_SSI_INCLUDING) /* Read from file if not in including. */
    d7aa:	687b      	ldr	r3, [r7, #4]
    d7ac:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d7b0:	333c      	adds	r3, #60	; 0x3c
    d7b2:	781b      	ldrb	r3, [r3, #0]
    d7b4:	2b02      	cmp	r3, #2
    d7b6:	d00c      	beq.n	d7d2 <fnet_http_ssi_send+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:117
            if((read_result = fnet_fs_fread(buffer, 1, session->send_param.file_desc)) == 0)
    d7b8:	697b      	ldr	r3, [r7, #20]
    d7ba:	f8d3 358c 	ldr.w	r3, [r3, #1420]	; 0x58c
    d7be:	6a78      	ldr	r0, [r7, #36]	; 0x24
    d7c0:	2101      	movs	r1, #1
    d7c2:	461a      	mov	r2, r3
    d7c4:	f000 fc8e 	bl	e0e4 <fnet_fs_fread>
    d7c8:	6338      	str	r0, [r7, #48]	; 0x30
    d7ca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    d7cc:	2b00      	cmp	r3, #0
    d7ce:	d100      	bne.n	d7d2 <fnet_http_ssi_send+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:118
                break; /*EOF*/
    d7d0:	e104      	b.n	d9dc <fnet_http_ssi_send+0x25c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:120
        
        switch (http->ssi.state)
    d7d2:	687b      	ldr	r3, [r7, #4]
    d7d4:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d7d8:	333c      	adds	r3, #60	; 0x3c
    d7da:	781b      	ldrb	r3, [r3, #0]
    d7dc:	2b01      	cmp	r3, #1
    d7de:	d032      	beq.n	d846 <fnet_http_ssi_send+0xc6>
    d7e0:	2b02      	cmp	r3, #2
    d7e2:	f000 80c9 	beq.w	d978 <fnet_http_ssi_send+0x1f8>
    d7e6:	2b00      	cmp	r3, #0
    d7e8:	f040 80e8 	bne.w	d9bc <fnet_http_ssi_send+0x23c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:123
        {
            case FNET_HTTP_SSI_WAIT_HEAD:
                if(*buffer == fnet_http_ssi_head[ssi_head_index])
    d7ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    d7ee:	781a      	ldrb	r2, [r3, #0]
    d7f0:	498c      	ldr	r1, [pc, #560]	; (da24 <fnet_http_ssi_send+0x2a4>)
    d7f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    d7f4:	440b      	add	r3, r1
    d7f6:	781b      	ldrb	r3, [r3, #0]
    d7f8:	b252      	sxtb	r2, r2
    d7fa:	b25b      	sxtb	r3, r3
    d7fc:	429a      	cmp	r2, r3
    d7fe:	d11e      	bne.n	d83e <fnet_http_ssi_send+0xbe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:125
                {
                    ssi_head_index++;
    d800:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    d802:	3301      	adds	r3, #1
    d804:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:126
                    if(ssi_head_index == sizeof(fnet_http_ssi_head))
    d806:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    d808:	2b05      	cmp	r3, #5
    d80a:	d11b      	bne.n	d844 <fnet_http_ssi_send+0xc4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:129
                    { /* Head is found */
                        
                        if(result >= sizeof(fnet_http_ssi_head)) 
    d80c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    d80e:	2b04      	cmp	r3, #4
    d810:	d90e      	bls.n	d830 <fnet_http_ssi_send+0xb0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:131
                        { /* Found in the middle */
                            fnet_fs_fseek (session->send_param.file_desc, -sizeof(fnet_http_ssi_head), FNET_FS_SEEK_CUR);
    d812:	697b      	ldr	r3, [r7, #20]
    d814:	f8d3 358c 	ldr.w	r3, [r3, #1420]	; 0x58c
    d818:	4618      	mov	r0, r3
    d81a:	f06f 0104 	mvn.w	r1, #4
    d81e:	2201      	movs	r2, #1
    d820:	f000 fcec 	bl	e1fc <fnet_fs_fseek>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:132
                            next = 1; /* break */
    d824:	2301      	movs	r3, #1
    d826:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:133
                            result -= sizeof(fnet_http_ssi_head); /* Correct result */
    d828:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    d82a:	3b05      	subs	r3, #5
    d82c:	637b      	str	r3, [r7, #52]	; 0x34
    d82e:	e009      	b.n	d844 <fnet_http_ssi_send+0xc4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:136
                        }
                        else
                            http->ssi.state = FNET_HTTP_SSI_WAIT_TAIL;
    d830:	687b      	ldr	r3, [r7, #4]
    d832:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d836:	333c      	adds	r3, #60	; 0x3c
    d838:	2201      	movs	r2, #1
    d83a:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:142
                        
                    }
                }
                else
                    ssi_head_index = 0;
                break;
    d83c:	e0be      	b.n	d9bc <fnet_http_ssi_send+0x23c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:141
                            http->ssi.state = FNET_HTTP_SSI_WAIT_TAIL;
                        
                    }
                }
                else
                    ssi_head_index = 0;
    d83e:	2300      	movs	r3, #0
    d840:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:142
                break;
    d842:	e0bb      	b.n	d9bc <fnet_http_ssi_send+0x23c>
    d844:	e0ba      	b.n	d9bc <fnet_http_ssi_send+0x23c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:145
                
            case FNET_HTTP_SSI_WAIT_TAIL:
                if(*buffer == fnet_http_ssi_tail[ssi_tail_index])
    d846:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    d848:	781a      	ldrb	r2, [r3, #0]
    d84a:	4977      	ldr	r1, [pc, #476]	; (da28 <fnet_http_ssi_send+0x2a8>)
    d84c:	6abb      	ldr	r3, [r7, #40]	; 0x28
    d84e:	440b      	add	r3, r1
    d850:	781b      	ldrb	r3, [r3, #0]
    d852:	b252      	sxtb	r2, r2
    d854:	b25b      	sxtb	r3, r3
    d856:	429a      	cmp	r2, r3
    d858:	f040 808a 	bne.w	d970 <fnet_http_ssi_send+0x1f0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:147
                {
                    ssi_tail_index++;
    d85c:	6abb      	ldr	r3, [r7, #40]	; 0x28
    d85e:	3301      	adds	r3, #1
    d860:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:148
                    if(ssi_tail_index == sizeof(fnet_http_ssi_tail))
    d862:	6abb      	ldr	r3, [r7, #40]	; 0x28
    d864:	2b03      	cmp	r3, #3
    d866:	f040 8082 	bne.w	d96e <fnet_http_ssi_send+0x1ee>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:150
                    { /* Tail is found */
                        const struct fnet_http_ssi  *ssi_ptr = 0;
    d86a:	2300      	movs	r3, #0
    d86c:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:151
                        char                        *ssi_name = &session->buffer[sizeof(fnet_http_ssi_head)];
    d86e:	697b      	ldr	r3, [r7, #20]
    d870:	3311      	adds	r3, #17
    d872:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:154
                        char                        *ssi_param;

                        http->ssi.send = 0;
    d874:	687b      	ldr	r3, [r7, #4]
    d876:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d87a:	3338      	adds	r3, #56	; 0x38
    d87c:	2200      	movs	r2, #0
    d87e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:156
                        
                        session->buffer[buffer + 1 - session->buffer - sizeof(fnet_http_ssi_tail)] = '\0'; /* Mark end of the SSI. */
    d880:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    d882:	3301      	adds	r3, #1
    d884:	461a      	mov	r2, r3
    d886:	697b      	ldr	r3, [r7, #20]
    d888:	330c      	adds	r3, #12
    d88a:	1ad3      	subs	r3, r2, r3
    d88c:	3b03      	subs	r3, #3
    d88e:	697a      	ldr	r2, [r7, #20]
    d890:	4413      	add	r3, r2
    d892:	2200      	movs	r2, #0
    d894:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:159

                        /* Find SSI parameters. */
                        if((ssi_param = fnet_strchr( session->buffer, ' ' )) !=0)
    d896:	697b      	ldr	r3, [r7, #20]
    d898:	330c      	adds	r3, #12
    d89a:	4618      	mov	r0, r3
    d89c:	2120      	movs	r1, #32
    d89e:	f7f8 fb17 	bl	5ed0 <fnet_strchr>
    d8a2:	61b8      	str	r0, [r7, #24]
    d8a4:	69bb      	ldr	r3, [r7, #24]
    d8a6:	2b00      	cmp	r3, #0
    d8a8:	d005      	beq.n	d8b6 <fnet_http_ssi_send+0x136>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:161
                        {
                            *ssi_param = '\0';  /* Mark end of the SSI name. */
    d8aa:	69bb      	ldr	r3, [r7, #24]
    d8ac:	2200      	movs	r2, #0
    d8ae:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:162
                            ssi_param ++;       /* Point to the begining of params. */
    d8b0:	69bb      	ldr	r3, [r7, #24]
    d8b2:	3301      	adds	r3, #1
    d8b4:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:165
                        }
                        
                        if(http->ssi.ssi_table)
    d8b6:	687b      	ldr	r3, [r7, #4]
    d8b8:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d8bc:	3334      	adds	r3, #52	; 0x34
    d8be:	681b      	ldr	r3, [r3, #0]
    d8c0:	2b00      	cmp	r3, #0
    d8c2:	d022      	beq.n	d90a <fnet_http_ssi_send+0x18a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:169
                        /* SSI table is initialized.*/
                        {
                            /* Find SSI handler */
    	                    for(ssi_ptr = http->ssi.ssi_table; ssi_ptr->name && ssi_ptr->send; ssi_ptr++)
    d8c4:	687b      	ldr	r3, [r7, #4]
    d8c6:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d8ca:	3334      	adds	r3, #52	; 0x34
    d8cc:	681b      	ldr	r3, [r3, #0]
    d8ce:	61fb      	str	r3, [r7, #28]
    d8d0:	e013      	b.n	d8fa <fnet_http_ssi_send+0x17a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:172
    	                    {
    		                    if (!fnet_strcmp( ssi_name, 
    		                                        ssi_ptr->name))                    
    d8d2:	69fb      	ldr	r3, [r7, #28]
    d8d4:	681b      	ldr	r3, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:171
                        /* SSI table is initialized.*/
                        {
                            /* Find SSI handler */
    	                    for(ssi_ptr = http->ssi.ssi_table; ssi_ptr->name && ssi_ptr->send; ssi_ptr++)
    	                    {
    		                    if (!fnet_strcmp( ssi_name, 
    d8d6:	6938      	ldr	r0, [r7, #16]
    d8d8:	4619      	mov	r1, r3
    d8da:	f7f8 f9cd 	bl	5c78 <fnet_strcmp>
    d8de:	4603      	mov	r3, r0
    d8e0:	2b00      	cmp	r3, #0
    d8e2:	d107      	bne.n	d8f4 <fnet_http_ssi_send+0x174>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:174
    		                                        ssi_ptr->name))                    
    		                    {				 
    		                        http->ssi.send = ssi_ptr->send;
    d8e4:	69fb      	ldr	r3, [r7, #28]
    d8e6:	689a      	ldr	r2, [r3, #8]
    d8e8:	687b      	ldr	r3, [r7, #4]
    d8ea:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d8ee:	3338      	adds	r3, #56	; 0x38
    d8f0:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:175
    		                        break;
    d8f2:	e00a      	b.n	d90a <fnet_http_ssi_send+0x18a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:169
                        
                        if(http->ssi.ssi_table)
                        /* SSI table is initialized.*/
                        {
                            /* Find SSI handler */
    	                    for(ssi_ptr = http->ssi.ssi_table; ssi_ptr->name && ssi_ptr->send; ssi_ptr++)
    d8f4:	69fb      	ldr	r3, [r7, #28]
    d8f6:	330c      	adds	r3, #12
    d8f8:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:169 (discriminator 1)
    d8fa:	69fb      	ldr	r3, [r7, #28]
    d8fc:	681b      	ldr	r3, [r3, #0]
    d8fe:	2b00      	cmp	r3, #0
    d900:	d003      	beq.n	d90a <fnet_http_ssi_send+0x18a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:169 (discriminator 2)
    d902:	69fb      	ldr	r3, [r7, #28]
    d904:	689b      	ldr	r3, [r3, #8]
    d906:	2b00      	cmp	r3, #0
    d908:	d1e3      	bne.n	d8d2 <fnet_http_ssi_send+0x152>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:180
    		                        break;
    	                        }
    	                    }
	                    }
                       
                        read_result = 0; /* Eliminate the include. */
    d90a:	2300      	movs	r3, #0
    d90c:	633b      	str	r3, [r7, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:181
                        if(http->ssi.send)
    d90e:	687b      	ldr	r3, [r7, #4]
    d910:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d914:	3338      	adds	r3, #56	; 0x38
    d916:	681b      	ldr	r3, [r3, #0]
    d918:	2b00      	cmp	r3, #0
    d91a:	d021      	beq.n	d960 <fnet_http_ssi_send+0x1e0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:183
                        { /* SSI Handler is found. */
                            if((ssi_ptr->handle == 0) || (ssi_ptr->handle(ssi_param, &session->response.cookie) == FNET_OK))
    d91c:	69fb      	ldr	r3, [r7, #28]
    d91e:	685b      	ldr	r3, [r3, #4]
    d920:	2b00      	cmp	r3, #0
    d922:	d00a      	beq.n	d93a <fnet_http_ssi_send+0x1ba>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:183 (discriminator 1)
    d924:	69fb      	ldr	r3, [r7, #28]
    d926:	685b      	ldr	r3, [r3, #4]
    d928:	697a      	ldr	r2, [r7, #20]
    d92a:	f202 52a4 	addw	r2, r2, #1444	; 0x5a4
    d92e:	69b8      	ldr	r0, [r7, #24]
    d930:	4611      	mov	r1, r2
    d932:	4798      	blx	r3
    d934:	4603      	mov	r3, r0
    d936:	2b00      	cmp	r3, #0
    d938:	d10b      	bne.n	d952 <fnet_http_ssi_send+0x1d2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:185
                            {
                                buffer = session->buffer; /* Reset */
    d93a:	697b      	ldr	r3, [r7, #20]
    d93c:	330c      	adds	r3, #12
    d93e:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:186
                                result = 0;
    d940:	2300      	movs	r3, #0
    d942:	637b      	str	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:188
                                
                                http->ssi.state = FNET_HTTP_SSI_INCLUDING;
    d944:	687b      	ldr	r3, [r7, #4]
    d946:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d94a:	333c      	adds	r3, #60	; 0x3c
    d94c:	2202      	movs	r2, #2
    d94e:	701a      	strb	r2, [r3, #0]
    d950:	e00d      	b.n	d96e <fnet_http_ssi_send+0x1ee>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:191
                            }
                            else
                                http->ssi.state = FNET_HTTP_SSI_WAIT_HEAD;
    d952:	687b      	ldr	r3, [r7, #4]
    d954:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d958:	333c      	adds	r3, #60	; 0x3c
    d95a:	2200      	movs	r2, #0
    d95c:	701a      	strb	r2, [r3, #0]
    d95e:	e006      	b.n	d96e <fnet_http_ssi_send+0x1ee>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:194
                        }
                        else
                            http->ssi.state = FNET_HTTP_SSI_WAIT_HEAD;
    d960:	687b      	ldr	r3, [r7, #4]
    d962:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d966:	333c      	adds	r3, #60	; 0x3c
    d968:	2200      	movs	r2, #0
    d96a:	701a      	strb	r2, [r3, #0]
    d96c:	e003      	b.n	d976 <fnet_http_ssi_send+0x1f6>
    d96e:	e002      	b.n	d976 <fnet_http_ssi_send+0x1f6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:199
                    }

                }
                else
                    ssi_tail_index = 0;
    d970:	2300      	movs	r3, #0
    d972:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:200
                break;
    d974:	e022      	b.n	d9bc <fnet_http_ssi_send+0x23c>
    d976:	e021      	b.n	d9bc <fnet_http_ssi_send+0x23c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:204
            case FNET_HTTP_SSI_INCLUDING:
                {
                    char eof;
                    read_result = (unsigned long) http->ssi.send(session->buffer, sizeof(session->buffer), &eof, &session->response.cookie);
    d978:	687b      	ldr	r3, [r7, #4]
    d97a:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d97e:	3338      	adds	r3, #56	; 0x38
    d980:	681c      	ldr	r4, [r3, #0]
    d982:	697b      	ldr	r3, [r7, #20]
    d984:	f103 010c 	add.w	r1, r3, #12
    d988:	697b      	ldr	r3, [r7, #20]
    d98a:	f203 53a4 	addw	r3, r3, #1444	; 0x5a4
    d98e:	f107 020f 	add.w	r2, r7, #15
    d992:	4608      	mov	r0, r1
    d994:	f240 5179 	movw	r1, #1401	; 0x579
    d998:	47a0      	blx	r4
    d99a:	6338      	str	r0, [r7, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:205
                    if((read_result == 0) || (eof == 1))
    d99c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    d99e:	2b00      	cmp	r3, #0
    d9a0:	d003      	beq.n	d9aa <fnet_http_ssi_send+0x22a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:205 (discriminator 1)
    d9a2:	7bfb      	ldrb	r3, [r7, #15]
    d9a4:	b25b      	sxtb	r3, r3
    d9a6:	2b01      	cmp	r3, #1
    d9a8:	d105      	bne.n	d9b6 <fnet_http_ssi_send+0x236>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:206
                        http->ssi.state = FNET_HTTP_SSI_WAIT_HEAD;
    d9aa:	687b      	ldr	r3, [r7, #4]
    d9ac:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d9b0:	333c      	adds	r3, #60	; 0x3c
    d9b2:	2200      	movs	r2, #0
    d9b4:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:208
                    
                    next = 1; /* break */
    d9b6:	2301      	movs	r3, #1
    d9b8:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:210
                }
                break;
    d9ba:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:213
        
        }
        buffer+=read_result;
    d9bc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    d9be:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    d9c0:	4413      	add	r3, r2
    d9c2:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:214
        result+=read_result;
    d9c4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    d9c6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    d9c8:	4413      	add	r3, r2
    d9ca:	637b      	str	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:114 (discriminator 1)
    int                         ssi_tail_index = 0;
    struct fnet_http_session_if *session =  http->session_active; 
    char                        *buffer = session->buffer;
    int                         next = 0;
    
    while (result<sizeof(session->buffer) && (next == 0))
    d9cc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    d9ce:	f5b3 6faf 	cmp.w	r3, #1400	; 0x578
    d9d2:	d803      	bhi.n	d9dc <fnet_http_ssi_send+0x25c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:114 (discriminator 2)
    d9d4:	6a3b      	ldr	r3, [r7, #32]
    d9d6:	2b00      	cmp	r3, #0
    d9d8:	f43f aee7 	beq.w	d7aa <fnet_http_ssi_send+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:217
        }
        buffer+=read_result;
        result+=read_result;
    }
    
    if(read_result && (next == 0) && ssi_head_index && (http->ssi.state == FNET_HTTP_SSI_WAIT_HEAD) )
    d9dc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    d9de:	2b00      	cmp	r3, #0
    d9e0:	d01a      	beq.n	da18 <fnet_http_ssi_send+0x298>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:217 (discriminator 1)
    d9e2:	6a3b      	ldr	r3, [r7, #32]
    d9e4:	2b00      	cmp	r3, #0
    d9e6:	d117      	bne.n	da18 <fnet_http_ssi_send+0x298>
    d9e8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    d9ea:	2b00      	cmp	r3, #0
    d9ec:	d014      	beq.n	da18 <fnet_http_ssi_send+0x298>
    d9ee:	687b      	ldr	r3, [r7, #4]
    d9f0:	f503 43e9 	add.w	r3, r3, #29824	; 0x7480
    d9f4:	333c      	adds	r3, #60	; 0x3c
    d9f6:	781b      	ldrb	r3, [r3, #0]
    d9f8:	2b00      	cmp	r3, #0
    d9fa:	d10d      	bne.n	da18 <fnet_http_ssi_send+0x298>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:219
    { /* Potential SSI is splitted => parse in the next itteration */
        result-=ssi_head_index; /* adjust result */
    d9fc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    d9fe:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    da00:	1ad3      	subs	r3, r2, r3
    da02:	637b      	str	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:220
        fnet_fs_fseek(session->send_param.file_desc, -ssi_head_index, FNET_FS_SEEK_CUR);
    da04:	697b      	ldr	r3, [r7, #20]
    da06:	f8d3 258c 	ldr.w	r2, [r3, #1420]	; 0x58c
    da0a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    da0c:	425b      	negs	r3, r3
    da0e:	4610      	mov	r0, r2
    da10:	4619      	mov	r1, r3
    da12:	2201      	movs	r2, #1
    da14:	f000 fbf2 	bl	e1fc <fnet_fs_fseek>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:223
    }
    
    return result;
    da18:	6b7b      	ldr	r3, [r7, #52]	; 0x34
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/http/fnet_http_ssi.c:224
}
    da1a:	4618      	mov	r0, r3
    da1c:	373c      	adds	r7, #60	; 0x3c
    da1e:	46bd      	mov	sp, r7
    da20:	bd90      	pop	{r4, r7, pc}
    da22:	bf00      	nop
    da24:	00014320 	.word	0x00014320
    da28:	00014328 	.word	0x00014328

0000da2c <fnet_fs_init>:
fnet_fs_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:73
* NAME: fnet_fs_init
*
* DESCRIPTION: This function initializes FNET FS interface.
*************************************************************************/
int fnet_fs_init( void )
{
    da2c:	b580      	push	{r7, lr}
    da2e:	b082      	sub	sp, #8
    da30:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:74
    int result = FNET_ERR;
    da32:	f04f 33ff 	mov.w	r3, #4294967295
    da36:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:76
    
    if(fnet_fs_list == 0) /* If no init before. */
    da38:	4b08      	ldr	r3, [pc, #32]	; (da5c <fnet_fs_init+0x30>)
    da3a:	681b      	ldr	r3, [r3, #0]
    da3c:	2b00      	cmp	r3, #0
    da3e:	d107      	bne.n	da50 <fnet_fs_init+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:78
    {
        fnet_fs_root_register();
    da40:	f000 fe86 	bl	e750 <fnet_fs_root_register>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:79
        result = fnet_fs_mount( FNET_FS_ROOT_NAME, "", 0 );
    da44:	4806      	ldr	r0, [pc, #24]	; (da60 <fnet_fs_init+0x34>)
    da46:	4907      	ldr	r1, [pc, #28]	; (da64 <fnet_fs_init+0x38>)
    da48:	2200      	movs	r2, #0
    da4a:	f000 f895 	bl	db78 <fnet_fs_mount>
    da4e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:82
    }
    
    return result;
    da50:	687b      	ldr	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:83
}
    da52:	4618      	mov	r0, r3
    da54:	3708      	adds	r7, #8
    da56:	46bd      	mov	sp, r7
    da58:	bd80      	pop	{r7, pc}
    da5a:	bf00      	nop
    da5c:	1000ba88 	.word	0x1000ba88
    da60:	00014344 	.word	0x00014344
    da64:	0001434c 	.word	0x0001434c

0000da68 <fnet_fs_release>:
fnet_fs_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:91
* NAME: fnet_fs_release
*
* DESCRIPTION: This function releases FNET FS interface.
*************************************************************************/
void fnet_fs_release( void )
{
    da68:	b580      	push	{r7, lr}
    da6a:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:92
    fnet_fs_unmount("");
    da6c:	4808      	ldr	r0, [pc, #32]	; (da90 <fnet_fs_release+0x28>)
    da6e:	f000 f96b 	bl	dd48 <fnet_fs_unmount>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:93
    fnet_fs_root_unregister();
    da72:	f000 fe7f 	bl	e774 <fnet_fs_root_unregister>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:96
    
    /* Clear the rest. */
    fnet_memset_zero( fnet_fs_mount_list, sizeof(struct fnet_fs_mount_point)*FNET_CFG_FS_MOUNT_MAX);
    da76:	4807      	ldr	r0, [pc, #28]	; (da94 <fnet_fs_release+0x2c>)
    da78:	2128      	movs	r1, #40	; 0x28
    da7a:	f7f8 f8c7 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:97
    fnet_memset_zero( fnet_fs_desc_list, sizeof(struct fnet_fs_desc)*FNET_CFG_FS_DESC_MAX);
    da7e:	4806      	ldr	r0, [pc, #24]	; (da98 <fnet_fs_release+0x30>)
    da80:	213c      	movs	r1, #60	; 0x3c
    da82:	f7f8 f8c3 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:98
    fnet_fs_list = 0;
    da86:	4b05      	ldr	r3, [pc, #20]	; (da9c <fnet_fs_release+0x34>)
    da88:	2200      	movs	r2, #0
    da8a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:99
}
    da8c:	bd80      	pop	{r7, pc}
    da8e:	bf00      	nop
    da90:	0001434c 	.word	0x0001434c
    da94:	1000baf0 	.word	0x1000baf0
    da98:	1000ba4c 	.word	0x1000ba4c
    da9c:	1000ba88 	.word	0x1000ba88

0000daa0 <fnet_fs_register>:
fnet_fs_register():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:107
* NAME: fnet_fs_register
*
* DESCRIPTION: This function registers a FS.
*************************************************************************/
void fnet_fs_register( struct fnet_fs *fs )
{
    daa0:	b480      	push	{r7}
    daa2:	b083      	sub	sp, #12
    daa4:	af00      	add	r7, sp, #0
    daa6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:108
    if(fs)
    daa8:	687b      	ldr	r3, [r7, #4]
    daaa:	2b00      	cmp	r3, #0
    daac:	d011      	beq.n	dad2 <fnet_fs_register+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:111
    {
        fnet_os_mutex_lock();
        fs->_next = fnet_fs_list;
    daae:	4b0b      	ldr	r3, [pc, #44]	; (dadc <fnet_fs_register+0x3c>)
    dab0:	681a      	ldr	r2, [r3, #0]
    dab2:	687b      	ldr	r3, [r7, #4]
    dab4:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:113

        if(fs->_next != 0)
    dab6:	687b      	ldr	r3, [r7, #4]
    dab8:	691b      	ldr	r3, [r3, #16]
    daba:	2b00      	cmp	r3, #0
    dabc:	d003      	beq.n	dac6 <fnet_fs_register+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:114
            fs->_next->_prev = fs;
    dabe:	687b      	ldr	r3, [r7, #4]
    dac0:	691b      	ldr	r3, [r3, #16]
    dac2:	687a      	ldr	r2, [r7, #4]
    dac4:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:116

        fs->_prev = 0;
    dac6:	687b      	ldr	r3, [r7, #4]
    dac8:	2200      	movs	r2, #0
    daca:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:117
        fnet_fs_list = fs;
    dacc:	4b03      	ldr	r3, [pc, #12]	; (dadc <fnet_fs_register+0x3c>)
    dace:	687a      	ldr	r2, [r7, #4]
    dad0:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:120
        fnet_os_mutex_unlock();
    }
}
    dad2:	370c      	adds	r7, #12
    dad4:	46bd      	mov	sp, r7
    dad6:	f85d 7b04 	ldr.w	r7, [sp], #4
    dada:	4770      	bx	lr
    dadc:	1000ba88 	.word	0x1000ba88

0000dae0 <fnet_fs_unregister>:
fnet_fs_unregister():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:128
* NAME: fnet_fs_unregister
*
* DESCRIPTION: This function unregisters a FS.
*************************************************************************/
void fnet_fs_unregister( struct fnet_fs *fs )
{
    dae0:	b480      	push	{r7}
    dae2:	b083      	sub	sp, #12
    dae4:	af00      	add	r7, sp, #0
    dae6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:129
    if(fs)
    dae8:	687b      	ldr	r3, [r7, #4]
    daea:	2b00      	cmp	r3, #0
    daec:	d016      	beq.n	db1c <fnet_fs_unregister+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:133
    {
        fnet_os_mutex_lock();

        if(fs->_prev == 0)
    daee:	687b      	ldr	r3, [r7, #4]
    daf0:	695b      	ldr	r3, [r3, #20]
    daf2:	2b00      	cmp	r3, #0
    daf4:	d104      	bne.n	db00 <fnet_fs_unregister+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:134
            fnet_fs_list = fs->_next;
    daf6:	687b      	ldr	r3, [r7, #4]
    daf8:	691a      	ldr	r2, [r3, #16]
    dafa:	4b0b      	ldr	r3, [pc, #44]	; (db28 <fnet_fs_unregister+0x48>)
    dafc:	601a      	str	r2, [r3, #0]
    dafe:	e004      	b.n	db0a <fnet_fs_unregister+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:136
        else
            fs->_prev->_next = fs->_next;
    db00:	687b      	ldr	r3, [r7, #4]
    db02:	695b      	ldr	r3, [r3, #20]
    db04:	687a      	ldr	r2, [r7, #4]
    db06:	6912      	ldr	r2, [r2, #16]
    db08:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:138

        if(fs->_next != 0)
    db0a:	687b      	ldr	r3, [r7, #4]
    db0c:	691b      	ldr	r3, [r3, #16]
    db0e:	2b00      	cmp	r3, #0
    db10:	d004      	beq.n	db1c <fnet_fs_unregister+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:139
            fs->_next->_prev = fs->_prev;
    db12:	687b      	ldr	r3, [r7, #4]
    db14:	691b      	ldr	r3, [r3, #16]
    db16:	687a      	ldr	r2, [r7, #4]
    db18:	6952      	ldr	r2, [r2, #20]
    db1a:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:143

        fnet_os_mutex_unlock();
    }
}
    db1c:	370c      	adds	r7, #12
    db1e:	46bd      	mov	sp, r7
    db20:	f85d 7b04 	ldr.w	r7, [sp], #4
    db24:	4770      	bx	lr
    db26:	bf00      	nop
    db28:	1000ba88 	.word	0x1000ba88

0000db2c <fnet_fs_find_name>:
fnet_fs_find_name():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:151
* NAME: fnet_fs_find_name
*
* DESCRIPTION: Returns a FS given its name.
*************************************************************************/
struct fnet_fs * fnet_fs_find_name( char *name )
{
    db2c:	b580      	push	{r7, lr}
    db2e:	b084      	sub	sp, #16
    db30:	af00      	add	r7, sp, #0
    db32:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:153
    struct fnet_fs *fs;
    struct fnet_fs *result = 0;
    db34:	2300      	movs	r3, #0
    db36:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:157

    fnet_os_mutex_lock();

    if(name)
    db38:	687b      	ldr	r3, [r7, #4]
    db3a:	2b00      	cmp	r3, #0
    db3c:	d015      	beq.n	db6a <fnet_fs_find_name+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:158
        for (fs = fnet_fs_list; fs != 0; fs = fs->_next)
    db3e:	4b0d      	ldr	r3, [pc, #52]	; (db74 <fnet_fs_find_name+0x48>)
    db40:	681b      	ldr	r3, [r3, #0]
    db42:	60fb      	str	r3, [r7, #12]
    db44:	e00e      	b.n	db64 <fnet_fs_find_name+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:160
        {
            if(fnet_strcmp(name, fs->name) == 0)
    db46:	68fb      	ldr	r3, [r7, #12]
    db48:	681b      	ldr	r3, [r3, #0]
    db4a:	6878      	ldr	r0, [r7, #4]
    db4c:	4619      	mov	r1, r3
    db4e:	f7f8 f893 	bl	5c78 <fnet_strcmp>
    db52:	4603      	mov	r3, r0
    db54:	2b00      	cmp	r3, #0
    db56:	d102      	bne.n	db5e <fnet_fs_find_name+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:162
            {
                result = fs;
    db58:	68fb      	ldr	r3, [r7, #12]
    db5a:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:163
                break;
    db5c:	e005      	b.n	db6a <fnet_fs_find_name+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:158
    struct fnet_fs *result = 0;

    fnet_os_mutex_lock();

    if(name)
        for (fs = fnet_fs_list; fs != 0; fs = fs->_next)
    db5e:	68fb      	ldr	r3, [r7, #12]
    db60:	691b      	ldr	r3, [r3, #16]
    db62:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:158 (discriminator 1)
    db64:	68fb      	ldr	r3, [r7, #12]
    db66:	2b00      	cmp	r3, #0
    db68:	d1ed      	bne.n	db46 <fnet_fs_find_name+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:168
                break;
            }
        }

    fnet_os_mutex_unlock();
    return result;
    db6a:	68bb      	ldr	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:169
}
    db6c:	4618      	mov	r0, r3
    db6e:	3710      	adds	r7, #16
    db70:	46bd      	mov	sp, r7
    db72:	bd80      	pop	{r7, pc}
    db74:	1000ba88 	.word	0x1000ba88

0000db78 <fnet_fs_mount>:
fnet_fs_mount():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:177
* NAME: fnet_fs_mount
*
* DESCRIPTION: Mounts a FS.
*************************************************************************/
int fnet_fs_mount( char *fs_name, const char *mount_name, void *arg )
{
    db78:	b580      	push	{r7, lr}
    db7a:	b088      	sub	sp, #32
    db7c:	af00      	add	r7, sp, #0
    db7e:	60f8      	str	r0, [r7, #12]
    db80:	60b9      	str	r1, [r7, #8]
    db82:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:178
    int result = FNET_ERR;
    db84:	f04f 33ff 	mov.w	r3, #4294967295
    db88:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:179
    struct fnet_fs_mount_point *mount_point = 0;
    db8a:	2300      	movs	r3, #0
    db8c:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:183
    struct fnet_fs * fs;
    int i;
        
    if(fs_name && mount_name)
    db8e:	68fb      	ldr	r3, [r7, #12]
    db90:	2b00      	cmp	r3, #0
    db92:	d04a      	beq.n	dc2a <fnet_fs_mount+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:183 (discriminator 1)
    db94:	68bb      	ldr	r3, [r7, #8]
    db96:	2b00      	cmp	r3, #0
    db98:	d047      	beq.n	dc2a <fnet_fs_mount+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:186
    {
        fnet_os_mutex_lock();
        fs = fnet_fs_find_name(fs_name);
    db9a:	68f8      	ldr	r0, [r7, #12]
    db9c:	f7ff ffc6 	bl	db2c <fnet_fs_find_name>
    dba0:	6138      	str	r0, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:187
        if(fs)
    dba2:	693b      	ldr	r3, [r7, #16]
    dba4:	2b00      	cmp	r3, #0
    dba6:	d040      	beq.n	dc2a <fnet_fs_mount+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:189
        {
            for(i=0; i< FNET_CFG_FS_MOUNT_MAX; i++)
    dba8:	2300      	movs	r3, #0
    dbaa:	617b      	str	r3, [r7, #20]
    dbac:	e016      	b.n	dbdc <fnet_fs_mount+0x64>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:191
            {
                if(fnet_fs_mount_list[i].fs == 0)
    dbae:	4921      	ldr	r1, [pc, #132]	; (dc34 <fnet_fs_mount+0xbc>)
    dbb0:	697a      	ldr	r2, [r7, #20]
    dbb2:	4613      	mov	r3, r2
    dbb4:	009b      	lsls	r3, r3, #2
    dbb6:	4413      	add	r3, r2
    dbb8:	009b      	lsls	r3, r3, #2
    dbba:	440b      	add	r3, r1
    dbbc:	3308      	adds	r3, #8
    dbbe:	685b      	ldr	r3, [r3, #4]
    dbc0:	2b00      	cmp	r3, #0
    dbc2:	d108      	bne.n	dbd6 <fnet_fs_mount+0x5e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:193
                {
                    mount_point = &fnet_fs_mount_list[i]; /* found free mount point */
    dbc4:	697a      	ldr	r2, [r7, #20]
    dbc6:	4613      	mov	r3, r2
    dbc8:	009b      	lsls	r3, r3, #2
    dbca:	4413      	add	r3, r2
    dbcc:	009b      	lsls	r3, r3, #2
    dbce:	4a19      	ldr	r2, [pc, #100]	; (dc34 <fnet_fs_mount+0xbc>)
    dbd0:	4413      	add	r3, r2
    dbd2:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:194
                    break;
    dbd4:	e005      	b.n	dbe2 <fnet_fs_mount+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:189
    {
        fnet_os_mutex_lock();
        fs = fnet_fs_find_name(fs_name);
        if(fs)
        {
            for(i=0; i< FNET_CFG_FS_MOUNT_MAX; i++)
    dbd6:	697b      	ldr	r3, [r7, #20]
    dbd8:	3301      	adds	r3, #1
    dbda:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:189 (discriminator 1)
    dbdc:	697b      	ldr	r3, [r7, #20]
    dbde:	2b01      	cmp	r3, #1
    dbe0:	dde5      	ble.n	dbae <fnet_fs_mount+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:198
                    mount_point = &fnet_fs_mount_list[i]; /* found free mount point */
                    break;
                }
            }
            
            if(mount_point) 
    dbe2:	69bb      	ldr	r3, [r7, #24]
    dbe4:	2b00      	cmp	r3, #0
    dbe6:	d020      	beq.n	dc2a <fnet_fs_mount+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:200
            {
                if(fs->operations && fs->operations->mount)
    dbe8:	693b      	ldr	r3, [r7, #16]
    dbea:	685b      	ldr	r3, [r3, #4]
    dbec:	2b00      	cmp	r3, #0
    dbee:	d00b      	beq.n	dc08 <fnet_fs_mount+0x90>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:200 (discriminator 1)
    dbf0:	693b      	ldr	r3, [r7, #16]
    dbf2:	685b      	ldr	r3, [r3, #4]
    dbf4:	681b      	ldr	r3, [r3, #0]
    dbf6:	2b00      	cmp	r3, #0
    dbf8:	d006      	beq.n	dc08 <fnet_fs_mount+0x90>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:201
                    result = fs->operations->mount(arg);
    dbfa:	693b      	ldr	r3, [r7, #16]
    dbfc:	685b      	ldr	r3, [r3, #4]
    dbfe:	681b      	ldr	r3, [r3, #0]
    dc00:	6878      	ldr	r0, [r7, #4]
    dc02:	4798      	blx	r3
    dc04:	61f8      	str	r0, [r7, #28]
    dc06:	e001      	b.n	dc0c <fnet_fs_mount+0x94>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:203
                else
                    result = FNET_OK;
    dc08:	2300      	movs	r3, #0
    dc0a:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:205
                
                if(result == FNET_OK) /* Mount is successful */
    dc0c:	69fb      	ldr	r3, [r7, #28]
    dc0e:	2b00      	cmp	r3, #0
    dc10:	d10b      	bne.n	dc2a <fnet_fs_mount+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:207
                {
                    mount_point->arg = arg; /* Fill mount info structure. */
    dc12:	69bb      	ldr	r3, [r7, #24]
    dc14:	687a      	ldr	r2, [r7, #4]
    dc16:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:208
                    mount_point->fs = fs;
    dc18:	69bb      	ldr	r3, [r7, #24]
    dc1a:	693a      	ldr	r2, [r7, #16]
    dc1c:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:209
                    fnet_strncpy( mount_point->name, mount_name, FNET_CFG_FS_MOUNT_NAME_MAX+1 );    
    dc1e:	69bb      	ldr	r3, [r7, #24]
    dc20:	4618      	mov	r0, r3
    dc22:	68b9      	ldr	r1, [r7, #8]
    dc24:	220b      	movs	r2, #11
    dc26:	f7f8 f8ef 	bl	5e08 <fnet_strncpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:216
            }
        }
        fnet_os_mutex_unlock();
    }  
    
    return result; 
    dc2a:	69fb      	ldr	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:217
}
    dc2c:	4618      	mov	r0, r3
    dc2e:	3720      	adds	r7, #32
    dc30:	46bd      	mov	sp, r7
    dc32:	bd80      	pop	{r7, pc}
    dc34:	1000baf0 	.word	0x1000baf0

0000dc38 <fnet_fs_path_cmp>:
fnet_fs_path_cmp():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:221

/****************************************************************/
int fnet_fs_path_cmp( const char **path, const char *name)
{
    dc38:	b480      	push	{r7}
    dc3a:	b087      	sub	sp, #28
    dc3c:	af00      	add	r7, sp, #0
    dc3e:	6078      	str	r0, [r7, #4]
    dc40:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:225
    int result;
    
    /* No checks for 0 */
    char *s1p = (char *)*path;
    dc42:	687b      	ldr	r3, [r7, #4]
    dc44:	681b      	ldr	r3, [r3, #0]
    dc46:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:226
    char *s2p = (char *)name;
    dc48:	683b      	ldr	r3, [r7, #0]
    dc4a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:228

    while (*s1p == ' ') s1p++;	            /* Strip leading spaces */
    dc4c:	e002      	b.n	dc54 <fnet_fs_path_cmp+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:228 (discriminator 2)
    dc4e:	693b      	ldr	r3, [r7, #16]
    dc50:	3301      	adds	r3, #1
    dc52:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:228 (discriminator 1)
    dc54:	693b      	ldr	r3, [r7, #16]
    dc56:	781b      	ldrb	r3, [r3, #0]
    dc58:	b25b      	sxtb	r3, r3
    dc5a:	2b20      	cmp	r3, #32
    dc5c:	d0f7      	beq.n	dc4e <fnet_fs_path_cmp+0x16>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:229
	while (*s1p == FNET_FS_SPLITTER) s1p++;	/* Strip heading slash */
    dc5e:	e002      	b.n	dc66 <fnet_fs_path_cmp+0x2e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:229 (discriminator 2)
    dc60:	693b      	ldr	r3, [r7, #16]
    dc62:	3301      	adds	r3, #1
    dc64:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:229 (discriminator 1)
    dc66:	693b      	ldr	r3, [r7, #16]
    dc68:	781b      	ldrb	r3, [r3, #0]
    dc6a:	b25b      	sxtb	r3, r3
    dc6c:	2b2f      	cmp	r3, #47	; 0x2f
    dc6e:	d0f7      	beq.n	dc60 <fnet_fs_path_cmp+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:231

    while(*s2p != '\0')
    dc70:	e014      	b.n	dc9c <fnet_fs_path_cmp+0x64>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:233
    {
        if(*s1p != *s2p)
    dc72:	693b      	ldr	r3, [r7, #16]
    dc74:	781a      	ldrb	r2, [r3, #0]
    dc76:	68fb      	ldr	r3, [r7, #12]
    dc78:	781b      	ldrb	r3, [r3, #0]
    dc7a:	b252      	sxtb	r2, r2
    dc7c:	b25b      	sxtb	r3, r3
    dc7e:	429a      	cmp	r2, r3
    dc80:	d000      	beq.n	dc84 <fnet_fs_path_cmp+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:234
            break;
    dc82:	e00f      	b.n	dca4 <fnet_fs_path_cmp+0x6c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:236

        ++s1p;
    dc84:	693b      	ldr	r3, [r7, #16]
    dc86:	3301      	adds	r3, #1
    dc88:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:237
        ++s2p;
    dc8a:	68fb      	ldr	r3, [r7, #12]
    dc8c:	3301      	adds	r3, #1
    dc8e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:239
        
        if (*s1p == FNET_FS_SPLITTER)
    dc90:	693b      	ldr	r3, [r7, #16]
    dc92:	781b      	ldrb	r3, [r3, #0]
    dc94:	b25b      	sxtb	r3, r3
    dc96:	2b2f      	cmp	r3, #47	; 0x2f
    dc98:	d100      	bne.n	dc9c <fnet_fs_path_cmp+0x64>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:240
            break; /* next path element */
    dc9a:	e003      	b.n	dca4 <fnet_fs_path_cmp+0x6c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:231 (discriminator 1)
    char *s2p = (char *)name;

    while (*s1p == ' ') s1p++;	            /* Strip leading spaces */
	while (*s1p == FNET_FS_SPLITTER) s1p++;	/* Strip heading slash */

    while(*s2p != '\0')
    dc9c:	68fb      	ldr	r3, [r7, #12]
    dc9e:	781b      	ldrb	r3, [r3, #0]
    dca0:	2b00      	cmp	r3, #0
    dca2:	d1e6      	bne.n	dc72 <fnet_fs_path_cmp+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:243
        
        if (*s1p == FNET_FS_SPLITTER)
            break; /* next path element */
    }
    
    if(*s1p == FNET_FS_SPLITTER)
    dca4:	693b      	ldr	r3, [r7, #16]
    dca6:	781b      	ldrb	r3, [r3, #0]
    dca8:	b25b      	sxtb	r3, r3
    dcaa:	2b2f      	cmp	r3, #47	; 0x2f
    dcac:	d102      	bne.n	dcb4 <fnet_fs_path_cmp+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:245
    {
        result = 0;
    dcae:	2300      	movs	r3, #0
    dcb0:	617b      	str	r3, [r7, #20]
    dcb2:	e007      	b.n	dcc4 <fnet_fs_path_cmp+0x8c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:249
    }
    else
    {
        result = (*s1p - *s2p);
    dcb4:	693b      	ldr	r3, [r7, #16]
    dcb6:	781b      	ldrb	r3, [r3, #0]
    dcb8:	b25a      	sxtb	r2, r3
    dcba:	68fb      	ldr	r3, [r7, #12]
    dcbc:	781b      	ldrb	r3, [r3, #0]
    dcbe:	b25b      	sxtb	r3, r3
    dcc0:	1ad3      	subs	r3, r2, r3
    dcc2:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:252
    }
   
    if(result == 0) /* Save end of compare */ 
    dcc4:	697b      	ldr	r3, [r7, #20]
    dcc6:	2b00      	cmp	r3, #0
    dcc8:	d102      	bne.n	dcd0 <fnet_fs_path_cmp+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:253
       *path = s1p; 
    dcca:	687b      	ldr	r3, [r7, #4]
    dccc:	693a      	ldr	r2, [r7, #16]
    dcce:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:255

    return result;
    dcd0:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:256
}
    dcd2:	4618      	mov	r0, r3
    dcd4:	371c      	adds	r7, #28
    dcd6:	46bd      	mov	sp, r7
    dcd8:	f85d 7b04 	ldr.w	r7, [sp], #4
    dcdc:	4770      	bx	lr
    dcde:	bf00      	nop

0000dce0 <fnet_fs_find_mount>:
fnet_fs_find_mount():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:265
*
* DESCRIPTION: Find mount point given its name and remove mount name from 
*               the path.
*************************************************************************/
static struct fnet_fs_mount_point * fnet_fs_find_mount( const char **name )
{
    dce0:	b580      	push	{r7, lr}
    dce2:	b086      	sub	sp, #24
    dce4:	af00      	add	r7, sp, #0
    dce6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:266
    struct fnet_fs_mount_point *result = 0;
    dce8:	2300      	movs	r3, #0
    dcea:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:270
    struct fnet_fs_mount_point *tmp;
    int i;

    if(name && *name)
    dcec:	687b      	ldr	r3, [r7, #4]
    dcee:	2b00      	cmp	r3, #0
    dcf0:	d023      	beq.n	dd3a <fnet_fs_find_mount+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:270 (discriminator 1)
    dcf2:	687b      	ldr	r3, [r7, #4]
    dcf4:	681b      	ldr	r3, [r3, #0]
    dcf6:	2b00      	cmp	r3, #0
    dcf8:	d01f      	beq.n	dd3a <fnet_fs_find_mount+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:271
        for(i=0; i<FNET_CFG_FS_MOUNT_MAX; i++)
    dcfa:	2300      	movs	r3, #0
    dcfc:	613b      	str	r3, [r7, #16]
    dcfe:	e019      	b.n	dd34 <fnet_fs_find_mount+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:273
        {
            tmp = &fnet_fs_mount_list[i];
    dd00:	693a      	ldr	r2, [r7, #16]
    dd02:	4613      	mov	r3, r2
    dd04:	009b      	lsls	r3, r3, #2
    dd06:	4413      	add	r3, r2
    dd08:	009b      	lsls	r3, r3, #2
    dd0a:	4a0e      	ldr	r2, [pc, #56]	; (dd44 <fnet_fs_find_mount+0x64>)
    dd0c:	4413      	add	r3, r2
    dd0e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:274
            if(tmp->fs && fnet_fs_path_cmp(name, tmp->name) == 0)
    dd10:	68fb      	ldr	r3, [r7, #12]
    dd12:	68db      	ldr	r3, [r3, #12]
    dd14:	2b00      	cmp	r3, #0
    dd16:	d00a      	beq.n	dd2e <fnet_fs_find_mount+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:274 (discriminator 1)
    dd18:	68fb      	ldr	r3, [r7, #12]
    dd1a:	6878      	ldr	r0, [r7, #4]
    dd1c:	4619      	mov	r1, r3
    dd1e:	f7ff ff8b 	bl	dc38 <fnet_fs_path_cmp>
    dd22:	4603      	mov	r3, r0
    dd24:	2b00      	cmp	r3, #0
    dd26:	d102      	bne.n	dd2e <fnet_fs_find_mount+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:276
            {
                result = tmp;
    dd28:	68fb      	ldr	r3, [r7, #12]
    dd2a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:277
                break;
    dd2c:	e005      	b.n	dd3a <fnet_fs_find_mount+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:271
    struct fnet_fs_mount_point *result = 0;
    struct fnet_fs_mount_point *tmp;
    int i;

    if(name && *name)
        for(i=0; i<FNET_CFG_FS_MOUNT_MAX; i++)
    dd2e:	693b      	ldr	r3, [r7, #16]
    dd30:	3301      	adds	r3, #1
    dd32:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:271 (discriminator 1)
    dd34:	693b      	ldr	r3, [r7, #16]
    dd36:	2b01      	cmp	r3, #1
    dd38:	dde2      	ble.n	dd00 <fnet_fs_find_mount+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:281
                result = tmp;
                break;
            }
        }

    return result;
    dd3a:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:282
}
    dd3c:	4618      	mov	r0, r3
    dd3e:	3718      	adds	r7, #24
    dd40:	46bd      	mov	sp, r7
    dd42:	bd80      	pop	{r7, pc}
    dd44:	1000baf0 	.word	0x1000baf0

0000dd48 <fnet_fs_unmount>:
fnet_fs_unmount():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:290
* NAME: fnet_fs_unmount
*
* DESCRIPTION: Unmounts a FS.
*************************************************************************/
int fnet_fs_unmount( const char *mount_name )
{
    dd48:	b580      	push	{r7, lr}
    dd4a:	b086      	sub	sp, #24
    dd4c:	af00      	add	r7, sp, #0
    dd4e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:291
    int result = FNET_ERR;
    dd50:	f04f 33ff 	mov.w	r3, #4294967295
    dd54:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:295
    struct fnet_fs_mount_point *mount_point;
    struct fnet_fs * fs;
        
    if(mount_name)
    dd56:	687b      	ldr	r3, [r7, #4]
    dd58:	2b00      	cmp	r3, #0
    dd5a:	d023      	beq.n	dda4 <fnet_fs_unmount+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:298
    {
        fnet_os_mutex_lock();
        mount_point = fnet_fs_find_mount(&mount_name);
    dd5c:	1d3b      	adds	r3, r7, #4
    dd5e:	4618      	mov	r0, r3
    dd60:	f7ff ffbe 	bl	dce0 <fnet_fs_find_mount>
    dd64:	6138      	str	r0, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:299
        if(mount_point)
    dd66:	693b      	ldr	r3, [r7, #16]
    dd68:	2b00      	cmp	r3, #0
    dd6a:	d01b      	beq.n	dda4 <fnet_fs_unmount+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:301
        {
            fs = mount_point->fs;
    dd6c:	693b      	ldr	r3, [r7, #16]
    dd6e:	68db      	ldr	r3, [r3, #12]
    dd70:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:303
            
            if(fs && fs->operations && fs->operations->unmount )
    dd72:	68fb      	ldr	r3, [r7, #12]
    dd74:	2b00      	cmp	r3, #0
    dd76:	d00f      	beq.n	dd98 <fnet_fs_unmount+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:303 (discriminator 1)
    dd78:	68fb      	ldr	r3, [r7, #12]
    dd7a:	685b      	ldr	r3, [r3, #4]
    dd7c:	2b00      	cmp	r3, #0
    dd7e:	d00b      	beq.n	dd98 <fnet_fs_unmount+0x50>
    dd80:	68fb      	ldr	r3, [r7, #12]
    dd82:	685b      	ldr	r3, [r3, #4]
    dd84:	685b      	ldr	r3, [r3, #4]
    dd86:	2b00      	cmp	r3, #0
    dd88:	d006      	beq.n	dd98 <fnet_fs_unmount+0x50>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:305
            {
                fs->operations->unmount(mount_point->arg);    
    dd8a:	68fb      	ldr	r3, [r7, #12]
    dd8c:	685b      	ldr	r3, [r3, #4]
    dd8e:	685b      	ldr	r3, [r3, #4]
    dd90:	693a      	ldr	r2, [r7, #16]
    dd92:	6912      	ldr	r2, [r2, #16]
    dd94:	4610      	mov	r0, r2
    dd96:	4798      	blx	r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:308
            }
            
            fnet_memset_zero( mount_point, sizeof(struct fnet_fs_mount_point) );
    dd98:	6938      	ldr	r0, [r7, #16]
    dd9a:	2114      	movs	r1, #20
    dd9c:	f7f7 ff36 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:309
            result = FNET_OK;
    dda0:	2300      	movs	r3, #0
    dda2:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:314
        }
        fnet_os_mutex_unlock();
    }  
    
    return result; 
    dda4:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:315
}
    dda6:	4618      	mov	r0, r3
    dda8:	3718      	adds	r7, #24
    ddaa:	46bd      	mov	sp, r7
    ddac:	bd80      	pop	{r7, pc}
    ddae:	bf00      	nop

0000ddb0 <fnet_fs_opendir>:
fnet_fs_opendir():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:323
* NAME: fnet_fs_opendir
*
* DESCRIPTION: Open DIR stream.
*************************************************************************/
FNET_FS_DIR fnet_fs_opendir( const char *dirname)
{
    ddb0:	b580      	push	{r7, lr}
    ddb2:	b086      	sub	sp, #24
    ddb4:	af00      	add	r7, sp, #0
    ddb6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:324
    FNET_FS_DIR result = 0;
    ddb8:	2300      	movs	r3, #0
    ddba:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:326
    int i; 
    struct fnet_fs_desc *dir = 0;
    ddbc:	2300      	movs	r3, #0
    ddbe:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:329
    struct fnet_fs_mount_point *mount_point;

    if(dirname)
    ddc0:	687b      	ldr	r3, [r7, #4]
    ddc2:	2b00      	cmp	r3, #0
    ddc4:	d04a      	beq.n	de5c <fnet_fs_opendir+0xac>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:332
    {
        fnet_os_mutex_lock();
        for(i=0; i < FNET_CFG_FS_DESC_MAX; i++) /* Free descriptor? */
    ddc6:	2300      	movs	r3, #0
    ddc8:	613b      	str	r3, [r7, #16]
    ddca:	e015      	b.n	ddf8 <fnet_fs_opendir+0x48>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:334
        {
            if(fnet_fs_desc_list[i].id == 0)
    ddcc:	4926      	ldr	r1, [pc, #152]	; (de68 <fnet_fs_opendir+0xb8>)
    ddce:	693a      	ldr	r2, [r7, #16]
    ddd0:	4613      	mov	r3, r2
    ddd2:	005b      	lsls	r3, r3, #1
    ddd4:	4413      	add	r3, r2
    ddd6:	009b      	lsls	r3, r3, #2
    ddd8:	440b      	add	r3, r1
    ddda:	681b      	ldr	r3, [r3, #0]
    dddc:	2b00      	cmp	r3, #0
    ddde:	d108      	bne.n	ddf2 <fnet_fs_opendir+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:336
            {
                    dir = &fnet_fs_desc_list[i]; /* found free DIR descriptor */
    dde0:	693a      	ldr	r2, [r7, #16]
    dde2:	4613      	mov	r3, r2
    dde4:	005b      	lsls	r3, r3, #1
    dde6:	4413      	add	r3, r2
    dde8:	009b      	lsls	r3, r3, #2
    ddea:	4a1f      	ldr	r2, [pc, #124]	; (de68 <fnet_fs_opendir+0xb8>)
    ddec:	4413      	add	r3, r2
    ddee:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:337
                    break;
    ddf0:	e005      	b.n	ddfe <fnet_fs_opendir+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:332
    struct fnet_fs_mount_point *mount_point;

    if(dirname)
    {
        fnet_os_mutex_lock();
        for(i=0; i < FNET_CFG_FS_DESC_MAX; i++) /* Free descriptor? */
    ddf2:	693b      	ldr	r3, [r7, #16]
    ddf4:	3301      	adds	r3, #1
    ddf6:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:332 (discriminator 1)
    ddf8:	693b      	ldr	r3, [r7, #16]
    ddfa:	2b04      	cmp	r3, #4
    ddfc:	dde6      	ble.n	ddcc <fnet_fs_opendir+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:341
                    dir = &fnet_fs_desc_list[i]; /* found free DIR descriptor */
                    break;
            }
        }
        
        if(dir) /* Found free descriptor. */
    ddfe:	68fb      	ldr	r3, [r7, #12]
    de00:	2b00      	cmp	r3, #0
    de02:	d02b      	beq.n	de5c <fnet_fs_opendir+0xac>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:343
        {
            mount_point = fnet_fs_find_mount(&dirname);
    de04:	1d3b      	adds	r3, r7, #4
    de06:	4618      	mov	r0, r3
    de08:	f7ff ff6a 	bl	dce0 <fnet_fs_find_mount>
    de0c:	60b8      	str	r0, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:344
            if(mount_point && mount_point->fs && mount_point->fs->dir_operations
    de0e:	68bb      	ldr	r3, [r7, #8]
    de10:	2b00      	cmp	r3, #0
    de12:	d023      	beq.n	de5c <fnet_fs_opendir+0xac>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:344 (discriminator 1)
    de14:	68bb      	ldr	r3, [r7, #8]
    de16:	68db      	ldr	r3, [r3, #12]
    de18:	2b00      	cmp	r3, #0
    de1a:	d01f      	beq.n	de5c <fnet_fs_opendir+0xac>
    de1c:	68bb      	ldr	r3, [r7, #8]
    de1e:	68db      	ldr	r3, [r3, #12]
    de20:	68db      	ldr	r3, [r3, #12]
    de22:	2b00      	cmp	r3, #0
    de24:	d01a      	beq.n	de5c <fnet_fs_opendir+0xac>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:345
               && mount_point->fs->dir_operations->opendir)
    de26:	68bb      	ldr	r3, [r7, #8]
    de28:	68db      	ldr	r3, [r3, #12]
    de2a:	68db      	ldr	r3, [r3, #12]
    de2c:	681b      	ldr	r3, [r3, #0]
    de2e:	2b00      	cmp	r3, #0
    de30:	d014      	beq.n	de5c <fnet_fs_opendir+0xac>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:347
            {
                dir->mount = mount_point;
    de32:	68fb      	ldr	r3, [r7, #12]
    de34:	68ba      	ldr	r2, [r7, #8]
    de36:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:348
                if(mount_point->fs->dir_operations->opendir(dir, dirname) == FNET_OK)
    de38:	68bb      	ldr	r3, [r7, #8]
    de3a:	68db      	ldr	r3, [r3, #12]
    de3c:	68db      	ldr	r3, [r3, #12]
    de3e:	681b      	ldr	r3, [r3, #0]
    de40:	687a      	ldr	r2, [r7, #4]
    de42:	68f8      	ldr	r0, [r7, #12]
    de44:	4611      	mov	r1, r2
    de46:	4798      	blx	r3
    de48:	4603      	mov	r3, r0
    de4a:	2b00      	cmp	r3, #0
    de4c:	d102      	bne.n	de54 <fnet_fs_opendir+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:350
                {
                   result = dir;
    de4e:	68fb      	ldr	r3, [r7, #12]
    de50:	617b      	str	r3, [r7, #20]
    de52:	e003      	b.n	de5c <fnet_fs_opendir+0xac>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:354
                }
                else
                {
                    fnet_memset_zero( dir, sizeof(struct fnet_fs_desc) ); /* clear dir structure */  
    de54:	68f8      	ldr	r0, [r7, #12]
    de56:	210c      	movs	r1, #12
    de58:	f7f7 fed8 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:361
            }
	    }
	    fnet_os_mutex_unlock();	
	
	}
	return result;
    de5c:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:362
}
    de5e:	4618      	mov	r0, r3
    de60:	3718      	adds	r7, #24
    de62:	46bd      	mov	sp, r7
    de64:	bd80      	pop	{r7, pc}
    de66:	bf00      	nop
    de68:	1000ba4c 	.word	0x1000ba4c

0000de6c <fnet_fs_closedir>:
fnet_fs_closedir():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:370
* NAME: fnet_fs_closedir
*
* DESCRIPTION: Close DIR stream.
*************************************************************************/
int fnet_fs_closedir( FNET_FS_DIR dir)
{
    de6c:	b580      	push	{r7, lr}
    de6e:	b084      	sub	sp, #16
    de70:	af00      	add	r7, sp, #0
    de72:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:371
    int result = FNET_ERR;
    de74:	f04f 33ff 	mov.w	r3, #4294967295
    de78:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:372
    struct fnet_fs_desc *dirp = (struct fnet_fs_desc *)dir;
    de7a:	687b      	ldr	r3, [r7, #4]
    de7c:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:374

    if(dirp)
    de7e:	68bb      	ldr	r3, [r7, #8]
    de80:	2b00      	cmp	r3, #0
    de82:	d005      	beq.n	de90 <fnet_fs_closedir+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:377
    {
        fnet_os_mutex_lock();
        fnet_memset_zero( dirp, sizeof(struct fnet_fs_desc) ); /* clear dir structure */
    de84:	68b8      	ldr	r0, [r7, #8]
    de86:	210c      	movs	r1, #12
    de88:	f7f7 fec0 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:379
        fnet_os_mutex_unlock();	
        result = FNET_OK;	
    de8c:	2300      	movs	r3, #0
    de8e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:381
	}
	return result;
    de90:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:382
}
    de92:	4618      	mov	r0, r3
    de94:	3710      	adds	r7, #16
    de96:	46bd      	mov	sp, r7
    de98:	bd80      	pop	{r7, pc}
    de9a:	bf00      	nop

0000de9c <fnet_fs_readdir>:
fnet_fs_readdir():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:392
*
* DESCRIPTION: Returns a pointer to a structure representing the directory 
* entry. 
*************************************************************************/
int fnet_fs_readdir(FNET_FS_DIR dir, struct fnet_fs_dirent* dirent)
{
    de9c:	b580      	push	{r7, lr}
    de9e:	b084      	sub	sp, #16
    dea0:	af00      	add	r7, sp, #0
    dea2:	6078      	str	r0, [r7, #4]
    dea4:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:393
    int result = FNET_ERR;
    dea6:	f04f 33ff 	mov.w	r3, #4294967295
    deaa:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:394
    struct fnet_fs_desc * dirp = (struct fnet_fs_desc *) dir;
    deac:	687b      	ldr	r3, [r7, #4]
    deae:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:396
    
    if(dirp)
    deb0:	68bb      	ldr	r3, [r7, #8]
    deb2:	2b00      	cmp	r3, #0
    deb4:	d01e      	beq.n	def4 <fnet_fs_readdir+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:399
    {
        fnet_os_mutex_lock();
        if(dirp->mount && dirp->mount->fs 
    deb6:	68bb      	ldr	r3, [r7, #8]
    deb8:	689b      	ldr	r3, [r3, #8]
    deba:	2b00      	cmp	r3, #0
    debc:	d01a      	beq.n	def4 <fnet_fs_readdir+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:399 (discriminator 1)
    debe:	68bb      	ldr	r3, [r7, #8]
    dec0:	689b      	ldr	r3, [r3, #8]
    dec2:	68db      	ldr	r3, [r3, #12]
    dec4:	2b00      	cmp	r3, #0
    dec6:	d015      	beq.n	def4 <fnet_fs_readdir+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:400
            && dirp->mount->fs->dir_operations
    dec8:	68bb      	ldr	r3, [r7, #8]
    deca:	689b      	ldr	r3, [r3, #8]
    decc:	68db      	ldr	r3, [r3, #12]
    dece:	68db      	ldr	r3, [r3, #12]
    ded0:	2b00      	cmp	r3, #0
    ded2:	d00f      	beq.n	def4 <fnet_fs_readdir+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:401
            && dirp->mount->fs->dir_operations->readdir)
    ded4:	68bb      	ldr	r3, [r7, #8]
    ded6:	689b      	ldr	r3, [r3, #8]
    ded8:	68db      	ldr	r3, [r3, #12]
    deda:	68db      	ldr	r3, [r3, #12]
    dedc:	685b      	ldr	r3, [r3, #4]
    dede:	2b00      	cmp	r3, #0
    dee0:	d008      	beq.n	def4 <fnet_fs_readdir+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:403
        {
            result = dirp->mount->fs->dir_operations->readdir(dirp, dirent);
    dee2:	68bb      	ldr	r3, [r7, #8]
    dee4:	689b      	ldr	r3, [r3, #8]
    dee6:	68db      	ldr	r3, [r3, #12]
    dee8:	68db      	ldr	r3, [r3, #12]
    deea:	685b      	ldr	r3, [r3, #4]
    deec:	68b8      	ldr	r0, [r7, #8]
    deee:	6839      	ldr	r1, [r7, #0]
    def0:	4798      	blx	r3
    def2:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:407
        }
        fnet_os_mutex_unlock();	
    }
    return result;   
    def4:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:408
}
    def6:	4618      	mov	r0, r3
    def8:	3710      	adds	r7, #16
    defa:	46bd      	mov	sp, r7
    defc:	bd80      	pop	{r7, pc}
    defe:	bf00      	nop

0000df00 <fnet_fs_rewinddir>:
fnet_fs_rewinddir():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:416
* NAME: fnet_fs_rewinddir
*
* DESCRIPTION: Resets the position of the directory stream.
*************************************************************************/
void fnet_fs_rewinddir( FNET_FS_DIR dir )
{
    df00:	b480      	push	{r7}
    df02:	b085      	sub	sp, #20
    df04:	af00      	add	r7, sp, #0
    df06:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:417
    struct fnet_fs_desc * dirp = (struct fnet_fs_desc *) dir;
    df08:	687b      	ldr	r3, [r7, #4]
    df0a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:419
    
    if(dirp)
    df0c:	68fb      	ldr	r3, [r7, #12]
    df0e:	2b00      	cmp	r3, #0
    df10:	d002      	beq.n	df18 <fnet_fs_rewinddir+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:423
    {
        fnet_os_mutex_lock();
        /* Reset current index. */
        dirp->pos = 0; 
    df12:	68fb      	ldr	r3, [r7, #12]
    df14:	2200      	movs	r2, #0
    df16:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:426
        fnet_os_mutex_unlock();	
    }
}
    df18:	3714      	adds	r7, #20
    df1a:	46bd      	mov	sp, r7
    df1c:	f85d 7b04 	ldr.w	r7, [sp], #4
    df20:	4770      	bx	lr
    df22:	bf00      	nop

0000df24 <fnet_fs_fopen>:
fnet_fs_fopen():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:434
* NAME: fnet_fs_fopen
*
* DESCRIPTION: Opens the specified file.
*************************************************************************/
FNET_FS_FILE fnet_fs_fopen(const char *filename, const char *mode)
{
    df24:	b580      	push	{r7, lr}
    df26:	b082      	sub	sp, #8
    df28:	af00      	add	r7, sp, #0
    df2a:	6078      	str	r0, [r7, #4]
    df2c:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:435
    return fnet_fs_fopen_re(filename, mode, 0 );
    df2e:	6878      	ldr	r0, [r7, #4]
    df30:	6839      	ldr	r1, [r7, #0]
    df32:	2200      	movs	r2, #0
    df34:	f000 f806 	bl	df44 <fnet_fs_fopen_re>
    df38:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:436
}
    df3a:	4618      	mov	r0, r3
    df3c:	3708      	adds	r7, #8
    df3e:	46bd      	mov	sp, r7
    df40:	bd80      	pop	{r7, pc}
    df42:	bf00      	nop

0000df44 <fnet_fs_fopen_re>:
fnet_fs_fopen_re():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:444
* NAME: fnet_fs_fopen
*
* DESCRIPTION: Opens the specified file relative to.
*************************************************************************/
FNET_FS_FILE fnet_fs_fopen_re(const char *filename, const char *mode, FNET_FS_FILE dir )
{
    df44:	b590      	push	{r4, r7, lr}
    df46:	b08b      	sub	sp, #44	; 0x2c
    df48:	af00      	add	r7, sp, #0
    df4a:	60f8      	str	r0, [r7, #12]
    df4c:	60b9      	str	r1, [r7, #8]
    df4e:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:445
    char mode_in = 0;
    df50:	2300      	movs	r3, #0
    df52:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:446
    FNET_FS_FILE result = 0;
    df56:	2300      	movs	r3, #0
    df58:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:448
    int i;
    struct fnet_fs_desc *file = 0;
    df5a:	2300      	movs	r3, #0
    df5c:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:450
    struct fnet_fs_mount_point *mount_point;
    struct fnet_fs_desc * cur_dir = (struct fnet_fs_desc *) dir;    
    df5e:	687b      	ldr	r3, [r7, #4]
    df60:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:452
    
    if(filename && mode)
    df62:	68fb      	ldr	r3, [r7, #12]
    df64:	2b00      	cmp	r3, #0
    df66:	f000 808b 	beq.w	e080 <fnet_fs_fopen_re+0x13c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:452 (discriminator 1)
    df6a:	68bb      	ldr	r3, [r7, #8]
    df6c:	2b00      	cmp	r3, #0
    df6e:	f000 8087 	beq.w	e080 <fnet_fs_fopen_re+0x13c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:456
    {
        /* Parse the file mode. */
        
        switch(*mode)
    df72:	68bb      	ldr	r3, [r7, #8]
    df74:	781b      	ldrb	r3, [r3, #0]
    df76:	b25b      	sxtb	r3, r3
    df78:	2b72      	cmp	r3, #114	; 0x72
    df7a:	d004      	beq.n	df86 <fnet_fs_fopen_re+0x42>
    df7c:	2b77      	cmp	r3, #119	; 0x77
    df7e:	d006      	beq.n	df8e <fnet_fs_fopen_re+0x4a>
    df80:	2b61      	cmp	r3, #97	; 0x61
    df82:	d008      	beq.n	df96 <fnet_fs_fopen_re+0x52>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:468
                break;
            case 'a':
                mode_in = FNET_FS_MODE_WRITE|FNET_FS_MODE_OPEN_ALWAYS|FNET_FS_MODE_END;
                break;
            default:
                break;                
    df84:	e00b      	b.n	df9e <fnet_fs_fopen_re+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:459
        /* Parse the file mode. */
        
        switch(*mode)
        {
            case 'r':
                mode_in = FNET_FS_MODE_READ|FNET_FS_MODE_OPEN_EXISTING;
    df86:	2309      	movs	r3, #9
    df88:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:460
                break;
    df8c:	e007      	b.n	df9e <fnet_fs_fopen_re+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:462
            case 'w':
                mode_in = FNET_FS_MODE_WRITE|FNET_FS_MODE_OPEN_ALWAYS|FNET_FS_MODE_OPEN_TRUNC;
    df8e:	2332      	movs	r3, #50	; 0x32
    df90:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:463
                break;
    df94:	e003      	b.n	df9e <fnet_fs_fopen_re+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:465
            case 'a':
                mode_in = FNET_FS_MODE_WRITE|FNET_FS_MODE_OPEN_ALWAYS|FNET_FS_MODE_END;
    df96:	2316      	movs	r3, #22
    df98:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:466
                break;
    df9c:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:471
            default:
                break;                
        }
        
        if(mode_in)         /* Is mode correct? */
    df9e:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
    dfa2:	2b00      	cmp	r3, #0
    dfa4:	d06c      	beq.n	e080 <fnet_fs_fopen_re+0x13c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:473
        {
            mode++;        
    dfa6:	68bb      	ldr	r3, [r7, #8]
    dfa8:	3301      	adds	r3, #1
    dfaa:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:475
            
            if(*mode == 'b')    /* Text and binary is the same for us. */
    dfac:	68bb      	ldr	r3, [r7, #8]
    dfae:	781b      	ldrb	r3, [r3, #0]
    dfb0:	b25b      	sxtb	r3, r3
    dfb2:	2b62      	cmp	r3, #98	; 0x62
    dfb4:	d102      	bne.n	dfbc <fnet_fs_fopen_re+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:476
                mode++;
    dfb6:	68bb      	ldr	r3, [r7, #8]
    dfb8:	3301      	adds	r3, #1
    dfba:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:478
            
            if(*mode == '+')
    dfbc:	68bb      	ldr	r3, [r7, #8]
    dfbe:	781b      	ldrb	r3, [r3, #0]
    dfc0:	b25b      	sxtb	r3, r3
    dfc2:	2b2b      	cmp	r3, #43	; 0x2b
    dfc4:	d105      	bne.n	dfd2 <fnet_fs_fopen_re+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:479
                mode_in |= FNET_FS_MODE_READ|FNET_FS_MODE_WRITE;
    dfc6:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
    dfca:	f043 0303 	orr.w	r3, r3, #3
    dfce:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:484
        


            fnet_os_mutex_lock();
            for(i=0; i < FNET_CFG_FS_DESC_MAX; i++) /* Free descriptor? */
    dfd2:	2300      	movs	r3, #0
    dfd4:	61fb      	str	r3, [r7, #28]
    dfd6:	e015      	b.n	e004 <fnet_fs_fopen_re+0xc0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:486
            {
                if(fnet_fs_desc_list[i].id == 0)
    dfd8:	492c      	ldr	r1, [pc, #176]	; (e08c <fnet_fs_fopen_re+0x148>)
    dfda:	69fa      	ldr	r2, [r7, #28]
    dfdc:	4613      	mov	r3, r2
    dfde:	005b      	lsls	r3, r3, #1
    dfe0:	4413      	add	r3, r2
    dfe2:	009b      	lsls	r3, r3, #2
    dfe4:	440b      	add	r3, r1
    dfe6:	681b      	ldr	r3, [r3, #0]
    dfe8:	2b00      	cmp	r3, #0
    dfea:	d108      	bne.n	dffe <fnet_fs_fopen_re+0xba>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:488
                {
                    file = &fnet_fs_desc_list[i]; /* found free DIR descriptor */
    dfec:	69fa      	ldr	r2, [r7, #28]
    dfee:	4613      	mov	r3, r2
    dff0:	005b      	lsls	r3, r3, #1
    dff2:	4413      	add	r3, r2
    dff4:	009b      	lsls	r3, r3, #2
    dff6:	4a25      	ldr	r2, [pc, #148]	; (e08c <fnet_fs_fopen_re+0x148>)
    dff8:	4413      	add	r3, r2
    dffa:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:489
                    break;
    dffc:	e005      	b.n	e00a <fnet_fs_fopen_re+0xc6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:484
                mode_in |= FNET_FS_MODE_READ|FNET_FS_MODE_WRITE;
        


            fnet_os_mutex_lock();
            for(i=0; i < FNET_CFG_FS_DESC_MAX; i++) /* Free descriptor? */
    dffe:	69fb      	ldr	r3, [r7, #28]
    e000:	3301      	adds	r3, #1
    e002:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:484 (discriminator 1)
    e004:	69fb      	ldr	r3, [r7, #28]
    e006:	2b04      	cmp	r3, #4
    e008:	dde6      	ble.n	dfd8 <fnet_fs_fopen_re+0x94>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:493
                    file = &fnet_fs_desc_list[i]; /* found free DIR descriptor */
                    break;
                }
            }
        
            if(file) /* Found free descriptor. */
    e00a:	69bb      	ldr	r3, [r7, #24]
    e00c:	2b00      	cmp	r3, #0
    e00e:	d037      	beq.n	e080 <fnet_fs_fopen_re+0x13c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:495
            {
                if(cur_dir)
    e010:	693b      	ldr	r3, [r7, #16]
    e012:	2b00      	cmp	r3, #0
    e014:	d003      	beq.n	e01e <fnet_fs_fopen_re+0xda>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:496
                    mount_point = cur_dir->mount;
    e016:	693b      	ldr	r3, [r7, #16]
    e018:	689b      	ldr	r3, [r3, #8]
    e01a:	617b      	str	r3, [r7, #20]
    e01c:	e005      	b.n	e02a <fnet_fs_fopen_re+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:498
                else
                    mount_point = fnet_fs_find_mount(&filename);
    e01e:	f107 030c 	add.w	r3, r7, #12
    e022:	4618      	mov	r0, r3
    e024:	f7ff fe5c 	bl	dce0 <fnet_fs_find_mount>
    e028:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:500
                    
                if(mount_point && mount_point->fs && mount_point->fs->file_operations
    e02a:	697b      	ldr	r3, [r7, #20]
    e02c:	2b00      	cmp	r3, #0
    e02e:	d027      	beq.n	e080 <fnet_fs_fopen_re+0x13c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:500 (discriminator 1)
    e030:	697b      	ldr	r3, [r7, #20]
    e032:	68db      	ldr	r3, [r3, #12]
    e034:	2b00      	cmp	r3, #0
    e036:	d023      	beq.n	e080 <fnet_fs_fopen_re+0x13c>
    e038:	697b      	ldr	r3, [r7, #20]
    e03a:	68db      	ldr	r3, [r3, #12]
    e03c:	689b      	ldr	r3, [r3, #8]
    e03e:	2b00      	cmp	r3, #0
    e040:	d01e      	beq.n	e080 <fnet_fs_fopen_re+0x13c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:501
                    && mount_point->fs->file_operations->fopen)
    e042:	697b      	ldr	r3, [r7, #20]
    e044:	68db      	ldr	r3, [r3, #12]
    e046:	689b      	ldr	r3, [r3, #8]
    e048:	681b      	ldr	r3, [r3, #0]
    e04a:	2b00      	cmp	r3, #0
    e04c:	d018      	beq.n	e080 <fnet_fs_fopen_re+0x13c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:503
                {
                    file->mount = mount_point;
    e04e:	69bb      	ldr	r3, [r7, #24]
    e050:	697a      	ldr	r2, [r7, #20]
    e052:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:504
                    if(mount_point->fs->file_operations->fopen(file, filename, mode_in, cur_dir) == FNET_OK)
    e054:	697b      	ldr	r3, [r7, #20]
    e056:	68db      	ldr	r3, [r3, #12]
    e058:	689b      	ldr	r3, [r3, #8]
    e05a:	681c      	ldr	r4, [r3, #0]
    e05c:	68fa      	ldr	r2, [r7, #12]
    e05e:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
    e062:	69b8      	ldr	r0, [r7, #24]
    e064:	4611      	mov	r1, r2
    e066:	461a      	mov	r2, r3
    e068:	693b      	ldr	r3, [r7, #16]
    e06a:	47a0      	blx	r4
    e06c:	4603      	mov	r3, r0
    e06e:	2b00      	cmp	r3, #0
    e070:	d102      	bne.n	e078 <fnet_fs_fopen_re+0x134>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:506
                    {
                        result = file;
    e072:	69bb      	ldr	r3, [r7, #24]
    e074:	623b      	str	r3, [r7, #32]
    e076:	e003      	b.n	e080 <fnet_fs_fopen_re+0x13c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:510
                    }
                    else
                    {
                        fnet_memset_zero( file, sizeof(struct fnet_fs_desc) ); /* clear file structure */  
    e078:	69b8      	ldr	r0, [r7, #24]
    e07a:	210c      	movs	r1, #12
    e07c:	f7f7 fdc6 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:518
	        }
	        fnet_os_mutex_unlock();    
        }
    }

    return result;
    e080:	6a3b      	ldr	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:519
}
    e082:	4618      	mov	r0, r3
    e084:	372c      	adds	r7, #44	; 0x2c
    e086:	46bd      	mov	sp, r7
    e088:	bd90      	pop	{r4, r7, pc}
    e08a:	bf00      	nop
    e08c:	1000ba4c 	.word	0x1000ba4c

0000e090 <fnet_fs_fclose>:
fnet_fs_fclose():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:527
* NAME: fnet_fs_closedir
*
* DESCRIPTION: Close DIR stream.
*************************************************************************/
int fnet_fs_fclose( FNET_FS_FILE file)
{
    e090:	b580      	push	{r7, lr}
    e092:	b084      	sub	sp, #16
    e094:	af00      	add	r7, sp, #0
    e096:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:528
    int result = FNET_ERR;
    e098:	f04f 33ff 	mov.w	r3, #4294967295
    e09c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:529
    struct fnet_fs_desc *filep = (struct fnet_fs_desc *)file;
    e09e:	687b      	ldr	r3, [r7, #4]
    e0a0:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:531

    if(filep)
    e0a2:	68bb      	ldr	r3, [r7, #8]
    e0a4:	2b00      	cmp	r3, #0
    e0a6:	d005      	beq.n	e0b4 <fnet_fs_fclose+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:534
    {
        fnet_os_mutex_lock();
        fnet_memset_zero( filep, sizeof(struct fnet_fs_desc) ); /* clear file structure */
    e0a8:	68b8      	ldr	r0, [r7, #8]
    e0aa:	210c      	movs	r1, #12
    e0ac:	f7f7 fdae 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:536
        fnet_os_mutex_unlock();	
        result = FNET_OK;	
    e0b0:	2300      	movs	r3, #0
    e0b2:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:538
	}
	return result;
    e0b4:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:539
}
    e0b6:	4618      	mov	r0, r3
    e0b8:	3710      	adds	r7, #16
    e0ba:	46bd      	mov	sp, r7
    e0bc:	bd80      	pop	{r7, pc}
    e0be:	bf00      	nop

0000e0c0 <fnet_fs_rewind>:
fnet_fs_rewind():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:547
* NAME: fnet_fs_rewind
*
* DESCRIPTION: Resets the position of the file stream.
*************************************************************************/
void fnet_fs_rewind(FNET_FS_FILE file)
{
    e0c0:	b480      	push	{r7}
    e0c2:	b085      	sub	sp, #20
    e0c4:	af00      	add	r7, sp, #0
    e0c6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:548
    struct fnet_fs_desc * filep = (struct fnet_fs_desc *) file;
    e0c8:	687b      	ldr	r3, [r7, #4]
    e0ca:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:550
    
    if(filep)
    e0cc:	68fb      	ldr	r3, [r7, #12]
    e0ce:	2b00      	cmp	r3, #0
    e0d0:	d002      	beq.n	e0d8 <fnet_fs_rewind+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:554
    {
        fnet_os_mutex_lock();
        /* Reset current pos. */
        filep->pos = 0; 
    e0d2:	68fb      	ldr	r3, [r7, #12]
    e0d4:	2200      	movs	r2, #0
    e0d6:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:557
        fnet_os_mutex_unlock();	
    }
}
    e0d8:	3714      	adds	r7, #20
    e0da:	46bd      	mov	sp, r7
    e0dc:	f85d 7b04 	ldr.w	r7, [sp], #4
    e0e0:	4770      	bx	lr
    e0e2:	bf00      	nop

0000e0e4 <fnet_fs_fread>:
fnet_fs_fread():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:565
* NAME: get_fs_fread
*
* DESCRIPTION: 
*************************************************************************/
unsigned long fnet_fs_fread(void * buf, unsigned long size, FNET_FS_FILE file)
{
    e0e4:	b580      	push	{r7, lr}
    e0e6:	b088      	sub	sp, #32
    e0e8:	af00      	add	r7, sp, #0
    e0ea:	60f8      	str	r0, [r7, #12]
    e0ec:	60b9      	str	r1, [r7, #8]
    e0ee:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:566
    unsigned long result = 0;
    e0f0:	2300      	movs	r3, #0
    e0f2:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:567
    struct fnet_fs_desc * filep = (struct fnet_fs_desc *) file;
    e0f4:	687b      	ldr	r3, [r7, #4]
    e0f6:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:568
    unsigned long bytes = size;
    e0f8:	68bb      	ldr	r3, [r7, #8]
    e0fa:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:570
    
    if(filep && bytes && buf)
    e0fc:	69bb      	ldr	r3, [r7, #24]
    e0fe:	2b00      	cmp	r3, #0
    e100:	d025      	beq.n	e14e <fnet_fs_fread+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:570 (discriminator 1)
    e102:	697b      	ldr	r3, [r7, #20]
    e104:	2b00      	cmp	r3, #0
    e106:	d022      	beq.n	e14e <fnet_fs_fread+0x6a>
    e108:	68fb      	ldr	r3, [r7, #12]
    e10a:	2b00      	cmp	r3, #0
    e10c:	d01f      	beq.n	e14e <fnet_fs_fread+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:573
    {
        fnet_os_mutex_lock();
        if(filep->mount && filep->mount->fs 
    e10e:	69bb      	ldr	r3, [r7, #24]
    e110:	689b      	ldr	r3, [r3, #8]
    e112:	2b00      	cmp	r3, #0
    e114:	d01b      	beq.n	e14e <fnet_fs_fread+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:573 (discriminator 1)
    e116:	69bb      	ldr	r3, [r7, #24]
    e118:	689b      	ldr	r3, [r3, #8]
    e11a:	68db      	ldr	r3, [r3, #12]
    e11c:	2b00      	cmp	r3, #0
    e11e:	d016      	beq.n	e14e <fnet_fs_fread+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:574
            && filep->mount->fs->file_operations
    e120:	69bb      	ldr	r3, [r7, #24]
    e122:	689b      	ldr	r3, [r3, #8]
    e124:	68db      	ldr	r3, [r3, #12]
    e126:	689b      	ldr	r3, [r3, #8]
    e128:	2b00      	cmp	r3, #0
    e12a:	d010      	beq.n	e14e <fnet_fs_fread+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:575
            && filep->mount->fs->file_operations->fread)
    e12c:	69bb      	ldr	r3, [r7, #24]
    e12e:	689b      	ldr	r3, [r3, #8]
    e130:	68db      	ldr	r3, [r3, #12]
    e132:	689b      	ldr	r3, [r3, #8]
    e134:	685b      	ldr	r3, [r3, #4]
    e136:	2b00      	cmp	r3, #0
    e138:	d009      	beq.n	e14e <fnet_fs_fread+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:577
        {
            result = filep->mount->fs->file_operations->fread(filep, buf, bytes);    
    e13a:	69bb      	ldr	r3, [r7, #24]
    e13c:	689b      	ldr	r3, [r3, #8]
    e13e:	68db      	ldr	r3, [r3, #12]
    e140:	689b      	ldr	r3, [r3, #8]
    e142:	685b      	ldr	r3, [r3, #4]
    e144:	69b8      	ldr	r0, [r7, #24]
    e146:	68f9      	ldr	r1, [r7, #12]
    e148:	697a      	ldr	r2, [r7, #20]
    e14a:	4798      	blx	r3
    e14c:	61f8      	str	r0, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:581
        }
        fnet_os_mutex_unlock();	
    }
    return result;   
    e14e:	69fb      	ldr	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:582
}
    e150:	4618      	mov	r0, r3
    e152:	3720      	adds	r7, #32
    e154:	46bd      	mov	sp, r7
    e156:	bd80      	pop	{r7, pc}

0000e158 <fnet_fs_feof>:
fnet_fs_feof():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:595
*(feof, or more likely ferror, may be useful after a stdio call has 
* returned EOF or NULL, to distinguish between an end-of-file condition 
* and a read error.
*************************************************************************/
int fnet_fs_feof(FNET_FS_FILE file)
{
    e158:	b480      	push	{r7}
    e15a:	b085      	sub	sp, #20
    e15c:	af00      	add	r7, sp, #0
    e15e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:596
    int result = 0;
    e160:	2300      	movs	r3, #0
    e162:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:597
    struct fnet_fs_desc * filep = (struct fnet_fs_desc *) file;
    e164:	687b      	ldr	r3, [r7, #4]
    e166:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:599
    
    if(filep && (filep->pos == (unsigned long)FNET_FS_EOF))
    e168:	68bb      	ldr	r3, [r7, #8]
    e16a:	2b00      	cmp	r3, #0
    e16c:	d007      	beq.n	e17e <fnet_fs_feof+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:599 (discriminator 1)
    e16e:	68bb      	ldr	r3, [r7, #8]
    e170:	685b      	ldr	r3, [r3, #4]
    e172:	f1b3 3fff 	cmp.w	r3, #4294967295
    e176:	d102      	bne.n	e17e <fnet_fs_feof+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:601
    {
        result = FNET_FS_EOF;
    e178:	f04f 33ff 	mov.w	r3, #4294967295
    e17c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:603
    }
    return result;   
    e17e:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:604
}
    e180:	4618      	mov	r0, r3
    e182:	3714      	adds	r7, #20
    e184:	46bd      	mov	sp, r7
    e186:	f85d 7b04 	ldr.w	r7, [sp], #4
    e18a:	4770      	bx	lr

0000e18c <fnet_fs_fgetc>:
fnet_fs_fgetc():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:613
*
* DESCRIPTION: If successful, fgetc returns the next byte or character from the stream 
*  If unsuccessful, fgetc returns EOF.
*************************************************************************/
int fnet_fs_fgetc(FNET_FS_FILE file)
{
    e18c:	b580      	push	{r7, lr}
    e18e:	b086      	sub	sp, #24
    e190:	af00      	add	r7, sp, #0
    e192:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:614
    int result = FNET_FS_EOF;
    e194:	f04f 33ff 	mov.w	r3, #4294967295
    e198:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:615
    struct fnet_fs_desc * filep = (struct fnet_fs_desc *) file;
    e19a:	687b      	ldr	r3, [r7, #4]
    e19c:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:618
    char buf;
    
    if(filep)
    e19e:	693b      	ldr	r3, [r7, #16]
    e1a0:	2b00      	cmp	r3, #0
    e1a2:	d026      	beq.n	e1f2 <fnet_fs_fgetc+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:621
    {
        fnet_os_mutex_lock();
        if(filep->mount && filep->mount->fs 
    e1a4:	693b      	ldr	r3, [r7, #16]
    e1a6:	689b      	ldr	r3, [r3, #8]
    e1a8:	2b00      	cmp	r3, #0
    e1aa:	d022      	beq.n	e1f2 <fnet_fs_fgetc+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:621 (discriminator 1)
    e1ac:	693b      	ldr	r3, [r7, #16]
    e1ae:	689b      	ldr	r3, [r3, #8]
    e1b0:	68db      	ldr	r3, [r3, #12]
    e1b2:	2b00      	cmp	r3, #0
    e1b4:	d01d      	beq.n	e1f2 <fnet_fs_fgetc+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:622
            && filep->mount->fs->file_operations
    e1b6:	693b      	ldr	r3, [r7, #16]
    e1b8:	689b      	ldr	r3, [r3, #8]
    e1ba:	68db      	ldr	r3, [r3, #12]
    e1bc:	689b      	ldr	r3, [r3, #8]
    e1be:	2b00      	cmp	r3, #0
    e1c0:	d017      	beq.n	e1f2 <fnet_fs_fgetc+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:623
            && filep->mount->fs->file_operations->fread)
    e1c2:	693b      	ldr	r3, [r7, #16]
    e1c4:	689b      	ldr	r3, [r3, #8]
    e1c6:	68db      	ldr	r3, [r3, #12]
    e1c8:	689b      	ldr	r3, [r3, #8]
    e1ca:	685b      	ldr	r3, [r3, #4]
    e1cc:	2b00      	cmp	r3, #0
    e1ce:	d010      	beq.n	e1f2 <fnet_fs_fgetc+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:625
        {
            if(filep->mount->fs->file_operations->fread(filep, &buf, 1) != 0)
    e1d0:	693b      	ldr	r3, [r7, #16]
    e1d2:	689b      	ldr	r3, [r3, #8]
    e1d4:	68db      	ldr	r3, [r3, #12]
    e1d6:	689b      	ldr	r3, [r3, #8]
    e1d8:	685b      	ldr	r3, [r3, #4]
    e1da:	f107 020f 	add.w	r2, r7, #15
    e1de:	6938      	ldr	r0, [r7, #16]
    e1e0:	4611      	mov	r1, r2
    e1e2:	2201      	movs	r2, #1
    e1e4:	4798      	blx	r3
    e1e6:	4603      	mov	r3, r0
    e1e8:	2b00      	cmp	r3, #0
    e1ea:	d002      	beq.n	e1f2 <fnet_fs_fgetc+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:626
                result = (unsigned char)buf;
    e1ec:	7bfb      	ldrb	r3, [r7, #15]
    e1ee:	b2db      	uxtb	r3, r3
    e1f0:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:630
        }
        fnet_os_mutex_unlock();	
    }
    return result;   
    e1f2:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:631
}
    e1f4:	4618      	mov	r0, r3
    e1f6:	3718      	adds	r7, #24
    e1f8:	46bd      	mov	sp, r7
    e1fa:	bd80      	pop	{r7, pc}

0000e1fc <fnet_fs_fseek>:
fnet_fs_fseek():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:639
* NAME: fnet_fs_fseek
*
* DESCRIPTION: Change the file position indicator for the specified file.
*************************************************************************/
int fnet_fs_fseek (FNET_FS_FILE file, long offset, int origin)
{
    e1fc:	b580      	push	{r7, lr}
    e1fe:	b086      	sub	sp, #24
    e200:	af00      	add	r7, sp, #0
    e202:	60f8      	str	r0, [r7, #12]
    e204:	60b9      	str	r1, [r7, #8]
    e206:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:640
    int result = FNET_ERR;
    e208:	f04f 33ff 	mov.w	r3, #4294967295
    e20c:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:641
    struct fnet_fs_desc * filep = (struct fnet_fs_desc *) file;
    e20e:	68fb      	ldr	r3, [r7, #12]
    e210:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:643
    
    if(filep)
    e212:	693b      	ldr	r3, [r7, #16]
    e214:	2b00      	cmp	r3, #0
    e216:	d020      	beq.n	e25a <fnet_fs_fseek+0x5e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:646
    {
        fnet_os_mutex_lock();
        if(filep->mount && filep->mount->fs 
    e218:	693b      	ldr	r3, [r7, #16]
    e21a:	689b      	ldr	r3, [r3, #8]
    e21c:	2b00      	cmp	r3, #0
    e21e:	d01c      	beq.n	e25a <fnet_fs_fseek+0x5e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:646 (discriminator 1)
    e220:	693b      	ldr	r3, [r7, #16]
    e222:	689b      	ldr	r3, [r3, #8]
    e224:	68db      	ldr	r3, [r3, #12]
    e226:	2b00      	cmp	r3, #0
    e228:	d017      	beq.n	e25a <fnet_fs_fseek+0x5e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:647
            && filep->mount->fs->file_operations
    e22a:	693b      	ldr	r3, [r7, #16]
    e22c:	689b      	ldr	r3, [r3, #8]
    e22e:	68db      	ldr	r3, [r3, #12]
    e230:	689b      	ldr	r3, [r3, #8]
    e232:	2b00      	cmp	r3, #0
    e234:	d011      	beq.n	e25a <fnet_fs_fseek+0x5e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:648
            && filep->mount->fs->file_operations->fseek)
    e236:	693b      	ldr	r3, [r7, #16]
    e238:	689b      	ldr	r3, [r3, #8]
    e23a:	68db      	ldr	r3, [r3, #12]
    e23c:	689b      	ldr	r3, [r3, #8]
    e23e:	689b      	ldr	r3, [r3, #8]
    e240:	2b00      	cmp	r3, #0
    e242:	d00a      	beq.n	e25a <fnet_fs_fseek+0x5e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:650
        {
            result = filep->mount->fs->file_operations->fseek(filep, offset, (fnet_fs_seek_origin_t)origin);    
    e244:	693b      	ldr	r3, [r7, #16]
    e246:	689b      	ldr	r3, [r3, #8]
    e248:	68db      	ldr	r3, [r3, #12]
    e24a:	689b      	ldr	r3, [r3, #8]
    e24c:	689b      	ldr	r3, [r3, #8]
    e24e:	687a      	ldr	r2, [r7, #4]
    e250:	b2d2      	uxtb	r2, r2
    e252:	6938      	ldr	r0, [r7, #16]
    e254:	68b9      	ldr	r1, [r7, #8]
    e256:	4798      	blx	r3
    e258:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:654
        }
        fnet_os_mutex_unlock();	
    }
    return result;  
    e25a:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:655
}
    e25c:	4618      	mov	r0, r3
    e25e:	3718      	adds	r7, #24
    e260:	46bd      	mov	sp, r7
    e262:	bd80      	pop	{r7, pc}

0000e264 <fnet_fs_ftell>:
fnet_fs_ftell():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:663
* NAME: fnet_fs_ftell
*
* DESCRIPTION: Returns the current offset in a stream in relation to the first byte.
*************************************************************************/
long fnet_fs_ftell (FNET_FS_FILE file)
{
    e264:	b480      	push	{r7}
    e266:	b085      	sub	sp, #20
    e268:	af00      	add	r7, sp, #0
    e26a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:664
    int result = FNET_ERR;
    e26c:	f04f 33ff 	mov.w	r3, #4294967295
    e270:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:665
    struct fnet_fs_desc * filep = (struct fnet_fs_desc *) file;
    e272:	687b      	ldr	r3, [r7, #4]
    e274:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:667
    
    if(filep)
    e276:	68bb      	ldr	r3, [r7, #8]
    e278:	2b00      	cmp	r3, #0
    e27a:	d002      	beq.n	e282 <fnet_fs_ftell+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:669
    {
        result = (long) filep->pos; 
    e27c:	68bb      	ldr	r3, [r7, #8]
    e27e:	685b      	ldr	r3, [r3, #4]
    e280:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:671
    }
    return result;  
    e282:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:672
}
    e284:	4618      	mov	r0, r3
    e286:	3714      	adds	r7, #20
    e288:	46bd      	mov	sp, r7
    e28a:	f85d 7b04 	ldr.w	r7, [sp], #4
    e28e:	4770      	bx	lr

0000e290 <fnet_fs_finfo>:
fnet_fs_finfo():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:680
* NAME: fnet_fs_finfo
*
* DESCRIPTION: Reads file info data.
*************************************************************************/
int fnet_fs_finfo (FNET_FS_FILE file, struct fnet_fs_dirent *info)
{
    e290:	b580      	push	{r7, lr}
    e292:	b084      	sub	sp, #16
    e294:	af00      	add	r7, sp, #0
    e296:	6078      	str	r0, [r7, #4]
    e298:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:681
    int result = FNET_ERR;
    e29a:	f04f 33ff 	mov.w	r3, #4294967295
    e29e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:682
    struct fnet_fs_desc *filep = (struct fnet_fs_desc *) file;
    e2a0:	687b      	ldr	r3, [r7, #4]
    e2a2:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:684
    
    if(filep)
    e2a4:	68bb      	ldr	r3, [r7, #8]
    e2a6:	2b00      	cmp	r3, #0
    e2a8:	d01e      	beq.n	e2e8 <fnet_fs_finfo+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:687
    {
        fnet_os_mutex_lock();
        if(filep->mount && filep->mount->fs 
    e2aa:	68bb      	ldr	r3, [r7, #8]
    e2ac:	689b      	ldr	r3, [r3, #8]
    e2ae:	2b00      	cmp	r3, #0
    e2b0:	d01a      	beq.n	e2e8 <fnet_fs_finfo+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:687 (discriminator 1)
    e2b2:	68bb      	ldr	r3, [r7, #8]
    e2b4:	689b      	ldr	r3, [r3, #8]
    e2b6:	68db      	ldr	r3, [r3, #12]
    e2b8:	2b00      	cmp	r3, #0
    e2ba:	d015      	beq.n	e2e8 <fnet_fs_finfo+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:688
            && filep->mount->fs->file_operations
    e2bc:	68bb      	ldr	r3, [r7, #8]
    e2be:	689b      	ldr	r3, [r3, #8]
    e2c0:	68db      	ldr	r3, [r3, #12]
    e2c2:	689b      	ldr	r3, [r3, #8]
    e2c4:	2b00      	cmp	r3, #0
    e2c6:	d00f      	beq.n	e2e8 <fnet_fs_finfo+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:689
            && filep->mount->fs->file_operations->finfo)
    e2c8:	68bb      	ldr	r3, [r7, #8]
    e2ca:	689b      	ldr	r3, [r3, #8]
    e2cc:	68db      	ldr	r3, [r3, #12]
    e2ce:	689b      	ldr	r3, [r3, #8]
    e2d0:	68db      	ldr	r3, [r3, #12]
    e2d2:	2b00      	cmp	r3, #0
    e2d4:	d008      	beq.n	e2e8 <fnet_fs_finfo+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:691
        {
            result = filep->mount->fs->file_operations->finfo(filep, info);    
    e2d6:	68bb      	ldr	r3, [r7, #8]
    e2d8:	689b      	ldr	r3, [r3, #8]
    e2da:	68db      	ldr	r3, [r3, #12]
    e2dc:	689b      	ldr	r3, [r3, #8]
    e2de:	68db      	ldr	r3, [r3, #12]
    e2e0:	68b8      	ldr	r0, [r7, #8]
    e2e2:	6839      	ldr	r1, [r7, #0]
    e2e4:	4798      	blx	r3
    e2e6:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:695
        }
        fnet_os_mutex_unlock();	
    }
    return result;
    e2e8:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs.c:696
}
    e2ea:	4618      	mov	r0, r3
    e2ec:	3710      	adds	r7, #16
    e2ee:	46bd      	mov	sp, r7
    e2f0:	bd80      	pop	{r7, pc}
    e2f2:	bf00      	nop

0000e2f4 <fnet_fs_rom_register>:
fnet_fs_rom_register():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:108
* NAME: fnet_fs_rom_register
*
* DESCRIPTION: This function registers the ROM FS.
*************************************************************************/
void fnet_fs_rom_register( void )
{
    e2f4:	b580      	push	{r7, lr}
    e2f6:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:109
    if(fnet_fs_rom_registered == 0)
    e2f8:	4b05      	ldr	r3, [pc, #20]	; (e310 <fnet_fs_rom_register+0x1c>)
    e2fa:	681b      	ldr	r3, [r3, #0]
    e2fc:	2b00      	cmp	r3, #0
    e2fe:	d105      	bne.n	e30c <fnet_fs_rom_register+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:111
    {
        fnet_fs_register(&fnet_fs_rom);
    e300:	4804      	ldr	r0, [pc, #16]	; (e314 <fnet_fs_rom_register+0x20>)
    e302:	f7ff fbcd 	bl	daa0 <fnet_fs_register>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:112
        fnet_fs_rom_registered = 1;
    e306:	4b02      	ldr	r3, [pc, #8]	; (e310 <fnet_fs_rom_register+0x1c>)
    e308:	2201      	movs	r2, #1
    e30a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:114
    }
}
    e30c:	bd80      	pop	{r7, pc}
    e30e:	bf00      	nop
    e310:	1000ba8c 	.word	0x1000ba8c
    e314:	10000148 	.word	0x10000148

0000e318 <fnet_fs_rom_unregister>:
fnet_fs_rom_unregister():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:122
* NAME: fnet_fs_rom_unregister
*
* DESCRIPTION: This function unregisters the ROM FS.
*************************************************************************/
void fnet_fs_rom_unregister( void )
{
    e318:	b580      	push	{r7, lr}
    e31a:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:123
    if(fnet_fs_rom_registered == 1)
    e31c:	4b05      	ldr	r3, [pc, #20]	; (e334 <fnet_fs_rom_unregister+0x1c>)
    e31e:	681b      	ldr	r3, [r3, #0]
    e320:	2b01      	cmp	r3, #1
    e322:	d105      	bne.n	e330 <fnet_fs_rom_unregister+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:125
    {
        fnet_fs_unregister(&fnet_fs_rom);
    e324:	4804      	ldr	r0, [pc, #16]	; (e338 <fnet_fs_rom_unregister+0x20>)
    e326:	f7ff fbdb 	bl	dae0 <fnet_fs_unregister>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:126
        fnet_fs_rom_registered = 0;
    e32a:	4b02      	ldr	r3, [pc, #8]	; (e334 <fnet_fs_rom_unregister+0x1c>)
    e32c:	2200      	movs	r2, #0
    e32e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:128
    }
}
    e330:	bd80      	pop	{r7, pc}
    e332:	bf00      	nop
    e334:	1000ba8c 	.word	0x1000ba8c
    e338:	10000148 	.word	0x10000148

0000e33c <fnet_fs_rom_mount>:
fnet_fs_rom_mount():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:136
* NAME: fnet_fs_rom_mount
*
* DESCRIPTION:
*************************************************************************/
int fnet_fs_rom_mount( void *arg )
{
    e33c:	b580      	push	{r7, lr}
    e33e:	b084      	sub	sp, #16
    e340:	af00      	add	r7, sp, #0
    e342:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:137
    int result = FNET_ERR;
    e344:	f04f 33ff 	mov.w	r3, #4294967295
    e348:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:140
    struct fnet_fs_rom_image * image;
    
    if(arg)
    e34a:	687b      	ldr	r3, [r7, #4]
    e34c:	2b00      	cmp	r3, #0
    e34e:	d010      	beq.n	e372 <fnet_fs_rom_mount+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:143
    {
        /* Check if the image is ROM FS image and version number*/
        image = ((struct fnet_fs_rom_image * )arg);
    e350:	687b      	ldr	r3, [r7, #4]
    e352:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:144
        if( (fnet_strcmp( FNET_FS_ROM_NAME, image->name )==0)
    e354:	68bb      	ldr	r3, [r7, #8]
    e356:	681b      	ldr	r3, [r3, #0]
    e358:	4808      	ldr	r0, [pc, #32]	; (e37c <fnet_fs_rom_mount+0x40>)
    e35a:	4619      	mov	r1, r3
    e35c:	f7f7 fc8c 	bl	5c78 <fnet_strcmp>
    e360:	4603      	mov	r3, r0
    e362:	2b00      	cmp	r3, #0
    e364:	d105      	bne.n	e372 <fnet_fs_rom_mount+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:145
            && (image->version == FNET_FS_ROM_VERSION))
    e366:	68bb      	ldr	r3, [r7, #8]
    e368:	685b      	ldr	r3, [r3, #4]
    e36a:	2b02      	cmp	r3, #2
    e36c:	d101      	bne.n	e372 <fnet_fs_rom_mount+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:147
        {
            result = FNET_OK;
    e36e:	2300      	movs	r3, #0
    e370:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:151
        }
    }
    
    return result;
    e372:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:152
}
    e374:	4618      	mov	r0, r3
    e376:	3710      	adds	r7, #16
    e378:	46bd      	mov	sp, r7
    e37a:	bd80      	pop	{r7, pc}
    e37c:	00014370 	.word	0x00014370

0000e380 <fnet_fs_rom_find>:
fnet_fs_rom_find():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:160
* NAME: fnet_fs_rom_find
*
* DESCRIPTION:
*************************************************************************/
static const struct fnet_fs_rom_node * fnet_fs_rom_find(const struct fnet_fs_rom_node * file_table, const char *name)
{
    e380:	b580      	push	{r7, lr}
    e382:	b086      	sub	sp, #24
    e384:	af00      	add	r7, sp, #0
    e386:	6078      	str	r0, [r7, #4]
    e388:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:161
    const struct fnet_fs_rom_node * result = 0;
    e38a:	2300      	movs	r3, #0
    e38c:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:162
    const struct fnet_fs_rom_node * parent = 0;
    e38e:	2300      	movs	r3, #0
    e390:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:165
    const struct fnet_fs_rom_node * current;
    
    if (file_table && name)
    e392:	687b      	ldr	r3, [r7, #4]
    e394:	2b00      	cmp	r3, #0
    e396:	d045      	beq.n	e424 <fnet_fs_rom_find+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:165 (discriminator 1)
    e398:	683b      	ldr	r3, [r7, #0]
    e39a:	2b00      	cmp	r3, #0
    e39c:	d042      	beq.n	e424 <fnet_fs_rom_find+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:167
    {	
        current = file_table; /* root is always first */       
    e39e:	687b      	ldr	r3, [r7, #4]
    e3a0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:169
        
        if (current->name) 
    e3a2:	68fb      	ldr	r3, [r7, #12]
    e3a4:	681b      	ldr	r3, [r3, #0]
    e3a6:	2b00      	cmp	r3, #0
    e3a8:	d03c      	beq.n	e424 <fnet_fs_rom_find+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:171
		{
			while (*name == ' ') name++;	        /* Strip leading spaces */
    e3aa:	e002      	b.n	e3b2 <fnet_fs_rom_find+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:171 (discriminator 2)
    e3ac:	683b      	ldr	r3, [r7, #0]
    e3ae:	3301      	adds	r3, #1
    e3b0:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:171 (discriminator 1)
    e3b2:	683b      	ldr	r3, [r7, #0]
    e3b4:	781b      	ldrb	r3, [r3, #0]
    e3b6:	b25b      	sxtb	r3, r3
    e3b8:	2b20      	cmp	r3, #32
    e3ba:	d0f7      	beq.n	e3ac <fnet_fs_rom_find+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:172
	        if (*name == FNET_FS_SPLITTER) name++;	/* Strip heading slash */
    e3bc:	683b      	ldr	r3, [r7, #0]
    e3be:	781b      	ldrb	r3, [r3, #0]
    e3c0:	b25b      	sxtb	r3, r3
    e3c2:	2b2f      	cmp	r3, #47	; 0x2f
    e3c4:	d102      	bne.n	e3cc <fnet_fs_rom_find+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:172 (discriminator 1)
    e3c6:	683b      	ldr	r3, [r7, #0]
    e3c8:	3301      	adds	r3, #1
    e3ca:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:174

			if (*name == '\0') /* Find root */
    e3cc:	683b      	ldr	r3, [r7, #0]
    e3ce:	781b      	ldrb	r3, [r3, #0]
    e3d0:	2b00      	cmp	r3, #0
    e3d2:	d102      	bne.n	e3da <fnet_fs_rom_find+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:176
			{
			    result = current;
    e3d4:	68fb      	ldr	r3, [r7, #12]
    e3d6:	617b      	str	r3, [r7, #20]
    e3d8:	e024      	b.n	e424 <fnet_fs_rom_find+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:180
			}
			else
			{
			    parent = current;
    e3da:	68fb      	ldr	r3, [r7, #12]
    e3dc:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:181
                current++;
    e3de:	68fb      	ldr	r3, [r7, #12]
    e3e0:	3310      	adds	r3, #16
    e3e2:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:183

  		        while (current->name) 
    e3e4:	e01a      	b.n	e41c <fnet_fs_rom_find+0x9c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:185
		        {
			        if ((current->parent_node == parent)
    e3e6:	68fb      	ldr	r3, [r7, #12]
    e3e8:	68da      	ldr	r2, [r3, #12]
    e3ea:	693b      	ldr	r3, [r7, #16]
    e3ec:	429a      	cmp	r2, r3
    e3ee:	d10b      	bne.n	e408 <fnet_fs_rom_find+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:186
			        && (fnet_fs_path_cmp( &name, current->name) == 0))
    e3f0:	68fb      	ldr	r3, [r7, #12]
    e3f2:	681b      	ldr	r3, [r3, #0]
    e3f4:	463a      	mov	r2, r7
    e3f6:	4610      	mov	r0, r2
    e3f8:	4619      	mov	r1, r3
    e3fa:	f7ff fc1d 	bl	dc38 <fnet_fs_path_cmp>
    e3fe:	4603      	mov	r3, r0
    e400:	2b00      	cmp	r3, #0
    e402:	d101      	bne.n	e408 <fnet_fs_rom_find+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:188
			        {
			            parent = current;
    e404:	68fb      	ldr	r3, [r7, #12]
    e406:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:191
			        }

			        if (*name == '\0')
    e408:	683b      	ldr	r3, [r7, #0]
    e40a:	781b      	ldrb	r3, [r3, #0]
    e40c:	2b00      	cmp	r3, #0
    e40e:	d102      	bne.n	e416 <fnet_fs_rom_find+0x96>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:193
			        {
			            result = current;
    e410:	68fb      	ldr	r3, [r7, #12]
    e412:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:194
				        break;
    e414:	e006      	b.n	e424 <fnet_fs_rom_find+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:197
			        }
			
			        current++; 
    e416:	68fb      	ldr	r3, [r7, #12]
    e418:	3310      	adds	r3, #16
    e41a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:183 (discriminator 1)
			else
			{
			    parent = current;
                current++;

  		        while (current->name) 
    e41c:	68fb      	ldr	r3, [r7, #12]
    e41e:	681b      	ldr	r3, [r3, #0]
    e420:	2b00      	cmp	r3, #0
    e422:	d1e0      	bne.n	e3e6 <fnet_fs_rom_find+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:203
		        }
		    }
		}
	}
    
    return result;
    e424:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:204
}
    e426:	4618      	mov	r0, r3
    e428:	3718      	adds	r7, #24
    e42a:	46bd      	mov	sp, r7
    e42c:	bd80      	pop	{r7, pc}
    e42e:	bf00      	nop

0000e430 <fnet_fs_rom_opendir>:
fnet_fs_rom_opendir():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:212
* NAME: fnet_fs_rom_opendir
*
* DESCRIPTION: Open DIR stream for the ROM FS.
*************************************************************************/
int fnet_fs_rom_opendir( struct fnet_fs_desc *dir, const char *name)
{
    e430:	b580      	push	{r7, lr}
    e432:	b086      	sub	sp, #24
    e434:	af00      	add	r7, sp, #0
    e436:	6078      	str	r0, [r7, #4]
    e438:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:213
    int result = FNET_ERR;
    e43a:	f04f 33ff 	mov.w	r3, #4294967295
    e43e:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:217
    const struct fnet_fs_rom_node * file_table;
    const struct fnet_fs_rom_node * node;
    
    if(dir && name)
    e440:	687b      	ldr	r3, [r7, #4]
    e442:	2b00      	cmp	r3, #0
    e444:	d01b      	beq.n	e47e <fnet_fs_rom_opendir+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:217 (discriminator 1)
    e446:	683b      	ldr	r3, [r7, #0]
    e448:	2b00      	cmp	r3, #0
    e44a:	d018      	beq.n	e47e <fnet_fs_rom_opendir+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:220
    {
        /* Find dir */ 
        file_table = ((struct fnet_fs_rom_image * )dir->mount->arg)->nodes;
    e44c:	687b      	ldr	r3, [r7, #4]
    e44e:	689b      	ldr	r3, [r3, #8]
    e450:	691b      	ldr	r3, [r3, #16]
    e452:	689b      	ldr	r3, [r3, #8]
    e454:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:222
  
        node = fnet_fs_rom_find(file_table, name);
    e456:	6938      	ldr	r0, [r7, #16]
    e458:	6839      	ldr	r1, [r7, #0]
    e45a:	f7ff ff91 	bl	e380 <fnet_fs_rom_find>
    e45e:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:224
        
        if(node && (node->data == 0) /* Is dir (not file)? */)
    e460:	68fb      	ldr	r3, [r7, #12]
    e462:	2b00      	cmp	r3, #0
    e464:	d00b      	beq.n	e47e <fnet_fs_rom_opendir+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:224 (discriminator 1)
    e466:	68fb      	ldr	r3, [r7, #12]
    e468:	685b      	ldr	r3, [r3, #4]
    e46a:	2b00      	cmp	r3, #0
    e46c:	d107      	bne.n	e47e <fnet_fs_rom_opendir+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:226
        {
            dir->id = (unsigned long) node; /* save pointer to found dir */
    e46e:	68fa      	ldr	r2, [r7, #12]
    e470:	687b      	ldr	r3, [r7, #4]
    e472:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:227
            dir->pos = 0;
    e474:	687b      	ldr	r3, [r7, #4]
    e476:	2200      	movs	r2, #0
    e478:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:228
            result = FNET_OK;
    e47a:	2300      	movs	r3, #0
    e47c:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:232
        }
    }
        
    return result;
    e47e:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:233
}
    e480:	4618      	mov	r0, r3
    e482:	3718      	adds	r7, #24
    e484:	46bd      	mov	sp, r7
    e486:	bd80      	pop	{r7, pc}

0000e488 <fnet_fs_rom_fill_dirent>:
fnet_fs_rom_fill_dirent():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:241
* NAME: fnet_fs_rom_fill_dirent
*
* DESCRIPTION: 
*************************************************************************/
static void fnet_fs_rom_fill_dirent(struct fnet_fs_rom_node * node, struct fnet_fs_dirent* dirent)
{
    e488:	b480      	push	{r7}
    e48a:	b083      	sub	sp, #12
    e48c:	af00      	add	r7, sp, #0
    e48e:	6078      	str	r0, [r7, #4]
    e490:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:242
    dirent->d_ino = (unsigned long) node; /*  File serial number. */
    e492:	687a      	ldr	r2, [r7, #4]
    e494:	683b      	ldr	r3, [r7, #0]
    e496:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:243
    dirent->d_type = (node->data == 0)? DT_DIR : DT_REG;
    e498:	687b      	ldr	r3, [r7, #4]
    e49a:	685b      	ldr	r3, [r3, #4]
    e49c:	2b00      	cmp	r3, #0
    e49e:	d101      	bne.n	e4a4 <fnet_fs_rom_fill_dirent+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:243 (discriminator 1)
    e4a0:	2302      	movs	r3, #2
    e4a2:	e000      	b.n	e4a6 <fnet_fs_rom_fill_dirent+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:243 (discriminator 2)
    e4a4:	2301      	movs	r3, #1
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:243 (discriminator 3)
    e4a6:	683a      	ldr	r2, [r7, #0]
    e4a8:	7113      	strb	r3, [r2, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:244 (discriminator 3)
    dirent->d_name = node->name;
    e4aa:	687b      	ldr	r3, [r7, #4]
    e4ac:	681a      	ldr	r2, [r3, #0]
    e4ae:	683b      	ldr	r3, [r7, #0]
    e4b0:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:245 (discriminator 3)
    dirent->d_size = node->data_size;
    e4b2:	687b      	ldr	r3, [r7, #4]
    e4b4:	689a      	ldr	r2, [r3, #8]
    e4b6:	683b      	ldr	r3, [r7, #0]
    e4b8:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:246 (discriminator 3)
}
    e4ba:	370c      	adds	r7, #12
    e4bc:	46bd      	mov	sp, r7
    e4be:	f85d 7b04 	ldr.w	r7, [sp], #4
    e4c2:	4770      	bx	lr

0000e4c4 <fnet_fs_rom_readdir>:
fnet_fs_rom_readdir():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:254
* NAME: fnet_fs_rom_readdir
*
* DESCRIPTION: Read DIR stream for the ROM FS.
*************************************************************************/
int fnet_fs_rom_readdir(struct fnet_fs_desc *dir, struct fnet_fs_dirent* dirent)
{
    e4c4:	b580      	push	{r7, lr}
    e4c6:	b086      	sub	sp, #24
    e4c8:	af00      	add	r7, sp, #0
    e4ca:	6078      	str	r0, [r7, #4]
    e4cc:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:255
    int result = FNET_ERR;
    e4ce:	f04f 33ff 	mov.w	r3, #4294967295
    e4d2:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:259
    struct fnet_fs_rom_node * current;
    struct fnet_fs_rom_node * parent;
    
    if(dir && dir->id && (dir->pos != (unsigned long)FNET_FS_EOF) && dirent)
    e4d4:	687b      	ldr	r3, [r7, #4]
    e4d6:	2b00      	cmp	r3, #0
    e4d8:	d03b      	beq.n	e552 <fnet_fs_rom_readdir+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:259 (discriminator 1)
    e4da:	687b      	ldr	r3, [r7, #4]
    e4dc:	681b      	ldr	r3, [r3, #0]
    e4de:	2b00      	cmp	r3, #0
    e4e0:	d037      	beq.n	e552 <fnet_fs_rom_readdir+0x8e>
    e4e2:	687b      	ldr	r3, [r7, #4]
    e4e4:	685b      	ldr	r3, [r3, #4]
    e4e6:	f1b3 3fff 	cmp.w	r3, #4294967295
    e4ea:	d032      	beq.n	e552 <fnet_fs_rom_readdir+0x8e>
    e4ec:	683b      	ldr	r3, [r7, #0]
    e4ee:	2b00      	cmp	r3, #0
    e4f0:	d02f      	beq.n	e552 <fnet_fs_rom_readdir+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:261
    {
        if(dir->pos == 0)
    e4f2:	687b      	ldr	r3, [r7, #4]
    e4f4:	685b      	ldr	r3, [r3, #4]
    e4f6:	2b00      	cmp	r3, #0
    e4f8:	d104      	bne.n	e504 <fnet_fs_rom_readdir+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:262
            current = (struct fnet_fs_rom_node *)(dir->id) + 1; 
    e4fa:	687b      	ldr	r3, [r7, #4]
    e4fc:	681b      	ldr	r3, [r3, #0]
    e4fe:	3310      	adds	r3, #16
    e500:	613b      	str	r3, [r7, #16]
    e502:	e002      	b.n	e50a <fnet_fs_rom_readdir+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:264
        else
            current = (struct fnet_fs_rom_node *)dir->pos;    
    e504:	687b      	ldr	r3, [r7, #4]
    e506:	685b      	ldr	r3, [r3, #4]
    e508:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:266
        
        parent = (struct fnet_fs_rom_node *)(dir->id);
    e50a:	687b      	ldr	r3, [r7, #4]
    e50c:	681b      	ldr	r3, [r3, #0]
    e50e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:268
        
        while (current->name) 
    e510:	e013      	b.n	e53a <fnet_fs_rom_readdir+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:270
		{
		    if(current->parent_node == parent) /* Next node is found */
    e512:	693b      	ldr	r3, [r7, #16]
    e514:	68da      	ldr	r2, [r3, #12]
    e516:	68fb      	ldr	r3, [r7, #12]
    e518:	429a      	cmp	r2, r3
    e51a:	d10b      	bne.n	e534 <fnet_fs_rom_readdir+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:273
		    {
		               
		        dir->pos = (unsigned long) (current+1); /* Save position */
    e51c:	693b      	ldr	r3, [r7, #16]
    e51e:	3310      	adds	r3, #16
    e520:	461a      	mov	r2, r3
    e522:	687b      	ldr	r3, [r7, #4]
    e524:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:274
                fnet_fs_rom_fill_dirent(current, dirent);
    e526:	6938      	ldr	r0, [r7, #16]
    e528:	6839      	ldr	r1, [r7, #0]
    e52a:	f7ff ffad 	bl	e488 <fnet_fs_rom_fill_dirent>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:275
                result = FNET_OK;
    e52e:	2300      	movs	r3, #0
    e530:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:276
                break;
    e532:	e006      	b.n	e542 <fnet_fs_rom_readdir+0x7e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:279
		    }
		    
		    current++;
    e534:	693b      	ldr	r3, [r7, #16]
    e536:	3310      	adds	r3, #16
    e538:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:268 (discriminator 1)
        else
            current = (struct fnet_fs_rom_node *)dir->pos;    
        
        parent = (struct fnet_fs_rom_node *)(dir->id);
        
        while (current->name) 
    e53a:	693b      	ldr	r3, [r7, #16]
    e53c:	681b      	ldr	r3, [r3, #0]
    e53e:	2b00      	cmp	r3, #0
    e540:	d1e7      	bne.n	e512 <fnet_fs_rom_readdir+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:282
		    }
		    
		    current++;
		}

		if (result == FNET_ERR)
    e542:	697b      	ldr	r3, [r7, #20]
    e544:	f1b3 3fff 	cmp.w	r3, #4294967295
    e548:	d103      	bne.n	e552 <fnet_fs_rom_readdir+0x8e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:283
             dir->pos = (unsigned long) FNET_FS_EOF; /* end of the directory is encountered */
    e54a:	687b      	ldr	r3, [r7, #4]
    e54c:	f04f 32ff 	mov.w	r2, #4294967295
    e550:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:287
   
    }
    
    return result;
    e552:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:288
}
    e554:	4618      	mov	r0, r3
    e556:	3718      	adds	r7, #24
    e558:	46bd      	mov	sp, r7
    e55a:	bd80      	pop	{r7, pc}

0000e55c <fnet_fs_rom_fopen>:
fnet_fs_rom_fopen():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:296
* NAME: fnet_fs_rom_fopen
*
* DESCRIPTION: Open FILE stream for the ROM FS.
*************************************************************************/
int fnet_fs_rom_fopen( struct fnet_fs_desc *file, const char *name, char mode, struct fnet_fs_desc * re_dir )
{
    e55c:	b580      	push	{r7, lr}
    e55e:	b088      	sub	sp, #32
    e560:	af00      	add	r7, sp, #0
    e562:	60f8      	str	r0, [r7, #12]
    e564:	60b9      	str	r1, [r7, #8]
    e566:	603b      	str	r3, [r7, #0]
    e568:	4613      	mov	r3, r2
    e56a:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:297
    int result = FNET_ERR;
    e56c:	f04f 33ff 	mov.w	r3, #4294967295
    e570:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:301
    const struct fnet_fs_rom_node * file_table;
    const struct fnet_fs_rom_node * node;
    
    if(file && name && (mode == FNET_FS_ROM_OPENMODE))
    e572:	68fb      	ldr	r3, [r7, #12]
    e574:	2b00      	cmp	r3, #0
    e576:	d02a      	beq.n	e5ce <fnet_fs_rom_fopen+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:301 (discriminator 1)
    e578:	68bb      	ldr	r3, [r7, #8]
    e57a:	2b00      	cmp	r3, #0
    e57c:	d027      	beq.n	e5ce <fnet_fs_rom_fopen+0x72>
    e57e:	f997 3007 	ldrsb.w	r3, [r7, #7]
    e582:	2b09      	cmp	r3, #9
    e584:	d123      	bne.n	e5ce <fnet_fs_rom_fopen+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:304
    {
        /* Find dir */
        if(re_dir && re_dir->id) 
    e586:	683b      	ldr	r3, [r7, #0]
    e588:	2b00      	cmp	r3, #0
    e58a:	d007      	beq.n	e59c <fnet_fs_rom_fopen+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:304 (discriminator 1)
    e58c:	683b      	ldr	r3, [r7, #0]
    e58e:	681b      	ldr	r3, [r3, #0]
    e590:	2b00      	cmp	r3, #0
    e592:	d003      	beq.n	e59c <fnet_fs_rom_fopen+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:305
            file_table = (struct fnet_fs_rom_node *) re_dir->id;
    e594:	683b      	ldr	r3, [r7, #0]
    e596:	681b      	ldr	r3, [r3, #0]
    e598:	61bb      	str	r3, [r7, #24]
    e59a:	e004      	b.n	e5a6 <fnet_fs_rom_fopen+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:307
        else
            file_table = ((struct fnet_fs_rom_image * )file->mount->arg)->nodes;
    e59c:	68fb      	ldr	r3, [r7, #12]
    e59e:	689b      	ldr	r3, [r3, #8]
    e5a0:	691b      	ldr	r3, [r3, #16]
    e5a2:	689b      	ldr	r3, [r3, #8]
    e5a4:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:309
  
        node = fnet_fs_rom_find(file_table, name);
    e5a6:	69b8      	ldr	r0, [r7, #24]
    e5a8:	68b9      	ldr	r1, [r7, #8]
    e5aa:	f7ff fee9 	bl	e380 <fnet_fs_rom_find>
    e5ae:	6178      	str	r0, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:311
        
        if(node && node->data /* Is file (not dir)? */)
    e5b0:	697b      	ldr	r3, [r7, #20]
    e5b2:	2b00      	cmp	r3, #0
    e5b4:	d00b      	beq.n	e5ce <fnet_fs_rom_fopen+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:311 (discriminator 1)
    e5b6:	697b      	ldr	r3, [r7, #20]
    e5b8:	685b      	ldr	r3, [r3, #4]
    e5ba:	2b00      	cmp	r3, #0
    e5bc:	d007      	beq.n	e5ce <fnet_fs_rom_fopen+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:313
        {
            file->id = (unsigned long) node; /* save pointer to found dir */
    e5be:	697a      	ldr	r2, [r7, #20]
    e5c0:	68fb      	ldr	r3, [r7, #12]
    e5c2:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:314
            file->pos = 0;
    e5c4:	68fb      	ldr	r3, [r7, #12]
    e5c6:	2200      	movs	r2, #0
    e5c8:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:315
            result = FNET_OK;
    e5ca:	2300      	movs	r3, #0
    e5cc:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:319
        }
    }
        
    return result;
    e5ce:	69fb      	ldr	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:320
}
    e5d0:	4618      	mov	r0, r3
    e5d2:	3720      	adds	r7, #32
    e5d4:	46bd      	mov	sp, r7
    e5d6:	bd80      	pop	{r7, pc}

0000e5d8 <fnet_fs_rom_fread>:
fnet_fs_rom_fread():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:328
* NAME: fnet_fs_rom_fread
*
* DESCRIPTION: 
*************************************************************************/
unsigned long fnet_fs_rom_fread (struct fnet_fs_desc *file, char * buf, unsigned long bytes) 
{
    e5d8:	b580      	push	{r7, lr}
    e5da:	b088      	sub	sp, #32
    e5dc:	af00      	add	r7, sp, #0
    e5de:	60f8      	str	r0, [r7, #12]
    e5e0:	60b9      	str	r1, [r7, #8]
    e5e2:	607a      	str	r2, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:329
    unsigned long result = 0;
    e5e4:	2300      	movs	r3, #0
    e5e6:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:334
    struct fnet_fs_rom_node * current;
    unsigned long size;
    unsigned long pos;
    
    if(file && file->id && (file->pos != (unsigned long)FNET_FS_EOF) && buf)
    e5e8:	68fb      	ldr	r3, [r7, #12]
    e5ea:	2b00      	cmp	r3, #0
    e5ec:	d03f      	beq.n	e66e <fnet_fs_rom_fread+0x96>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:334 (discriminator 1)
    e5ee:	68fb      	ldr	r3, [r7, #12]
    e5f0:	681b      	ldr	r3, [r3, #0]
    e5f2:	2b00      	cmp	r3, #0
    e5f4:	d03b      	beq.n	e66e <fnet_fs_rom_fread+0x96>
    e5f6:	68fb      	ldr	r3, [r7, #12]
    e5f8:	685b      	ldr	r3, [r3, #4]
    e5fa:	f1b3 3fff 	cmp.w	r3, #4294967295
    e5fe:	d036      	beq.n	e66e <fnet_fs_rom_fread+0x96>
    e600:	68bb      	ldr	r3, [r7, #8]
    e602:	2b00      	cmp	r3, #0
    e604:	d033      	beq.n	e66e <fnet_fs_rom_fread+0x96>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:337
    {

        current = (struct fnet_fs_rom_node *)(file->id); 
    e606:	68fb      	ldr	r3, [r7, #12]
    e608:	681b      	ldr	r3, [r3, #0]
    e60a:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:338
        if(current && current->data_size && current->data)
    e60c:	69bb      	ldr	r3, [r7, #24]
    e60e:	2b00      	cmp	r3, #0
    e610:	d02d      	beq.n	e66e <fnet_fs_rom_fread+0x96>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:338 (discriminator 1)
    e612:	69bb      	ldr	r3, [r7, #24]
    e614:	689b      	ldr	r3, [r3, #8]
    e616:	2b00      	cmp	r3, #0
    e618:	d029      	beq.n	e66e <fnet_fs_rom_fread+0x96>
    e61a:	69bb      	ldr	r3, [r7, #24]
    e61c:	685b      	ldr	r3, [r3, #4]
    e61e:	2b00      	cmp	r3, #0
    e620:	d025      	beq.n	e66e <fnet_fs_rom_fread+0x96>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:340
        {
            size = current->data_size;
    e622:	69bb      	ldr	r3, [r7, #24]
    e624:	689b      	ldr	r3, [r3, #8]
    e626:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:341
            pos = file->pos;
    e628:	68fb      	ldr	r3, [r7, #12]
    e62a:	685b      	ldr	r3, [r3, #4]
    e62c:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:343
        
            if((pos + bytes) > size)
    e62e:	693a      	ldr	r2, [r7, #16]
    e630:	687b      	ldr	r3, [r7, #4]
    e632:	441a      	add	r2, r3
    e634:	697b      	ldr	r3, [r7, #20]
    e636:	429a      	cmp	r2, r3
    e638:	d908      	bls.n	e64c <fnet_fs_rom_fread+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:345
            {
                bytes = size - pos;
    e63a:	697a      	ldr	r2, [r7, #20]
    e63c:	693b      	ldr	r3, [r7, #16]
    e63e:	1ad3      	subs	r3, r2, r3
    e640:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:346
                file->pos = (unsigned long)FNET_FS_EOF;
    e642:	68fb      	ldr	r3, [r7, #12]
    e644:	f04f 32ff 	mov.w	r2, #4294967295
    e648:	605a      	str	r2, [r3, #4]
    e64a:	e005      	b.n	e658 <fnet_fs_rom_fread+0x80>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:350
            }
            else
            {
                file->pos += bytes;
    e64c:	68fb      	ldr	r3, [r7, #12]
    e64e:	685a      	ldr	r2, [r3, #4]
    e650:	687b      	ldr	r3, [r7, #4]
    e652:	441a      	add	r2, r3
    e654:	68fb      	ldr	r3, [r7, #12]
    e656:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:353
            }
            
            fnet_memcpy( buf, &current->data[pos], bytes );
    e658:	69bb      	ldr	r3, [r7, #24]
    e65a:	685a      	ldr	r2, [r3, #4]
    e65c:	693b      	ldr	r3, [r7, #16]
    e65e:	4413      	add	r3, r2
    e660:	68b8      	ldr	r0, [r7, #8]
    e662:	4619      	mov	r1, r3
    e664:	687a      	ldr	r2, [r7, #4]
    e666:	f7f7 f915 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:354
            result = bytes;
    e66a:	687b      	ldr	r3, [r7, #4]
    e66c:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:359
        }
   
    }
    
    return result;
    e66e:	69fb      	ldr	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:360
}
    e670:	4618      	mov	r0, r3
    e672:	3720      	adds	r7, #32
    e674:	46bd      	mov	sp, r7
    e676:	bd80      	pop	{r7, pc}

0000e678 <fnet_fs_rom_fseek>:
fnet_fs_rom_fseek():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:368
* NAME: fnet_fs_rom_fseek
*
* DESCRIPTION:
*************************************************************************/
int fnet_fs_rom_fseek (struct fnet_fs_desc *file, long offset, fnet_fs_seek_origin_t origin) 
{
    e678:	b480      	push	{r7}
    e67a:	b08b      	sub	sp, #44	; 0x2c
    e67c:	af00      	add	r7, sp, #0
    e67e:	60f8      	str	r0, [r7, #12]
    e680:	60b9      	str	r1, [r7, #8]
    e682:	4613      	mov	r3, r2
    e684:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:369
    int result = FNET_ERR;
    e686:	f04f 33ff 	mov.w	r3, #4294967295
    e68a:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:375
    struct fnet_fs_rom_node * current;
    unsigned long size;
    unsigned long pos;
    long new_pos;
    
    if(file && file->id)
    e68c:	68fb      	ldr	r3, [r7, #12]
    e68e:	2b00      	cmp	r3, #0
    e690:	d037      	beq.n	e702 <fnet_fs_rom_fseek+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:375 (discriminator 1)
    e692:	68fb      	ldr	r3, [r7, #12]
    e694:	681b      	ldr	r3, [r3, #0]
    e696:	2b00      	cmp	r3, #0
    e698:	d033      	beq.n	e702 <fnet_fs_rom_fseek+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:377
    {
        current = (struct fnet_fs_rom_node *)(file->id); 
    e69a:	68fb      	ldr	r3, [r7, #12]
    e69c:	681b      	ldr	r3, [r3, #0]
    e69e:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:378
        if(current && current->data_size)
    e6a0:	69fb      	ldr	r3, [r7, #28]
    e6a2:	2b00      	cmp	r3, #0
    e6a4:	d02d      	beq.n	e702 <fnet_fs_rom_fseek+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:378 (discriminator 1)
    e6a6:	69fb      	ldr	r3, [r7, #28]
    e6a8:	689b      	ldr	r3, [r3, #8]
    e6aa:	2b00      	cmp	r3, #0
    e6ac:	d029      	beq.n	e702 <fnet_fs_rom_fseek+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:380
        {
            size = current->data_size;
    e6ae:	69fb      	ldr	r3, [r7, #28]
    e6b0:	689b      	ldr	r3, [r3, #8]
    e6b2:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:381
            pos = file->pos;
    e6b4:	68fb      	ldr	r3, [r7, #12]
    e6b6:	685b      	ldr	r3, [r3, #4]
    e6b8:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:383
            
            switch( origin)
    e6ba:	79fb      	ldrb	r3, [r7, #7]
    e6bc:	2b01      	cmp	r3, #1
    e6be:	d006      	beq.n	e6ce <fnet_fs_rom_fseek+0x56>
    e6c0:	2b02      	cmp	r3, #2
    e6c2:	d009      	beq.n	e6d8 <fnet_fs_rom_fseek+0x60>
    e6c4:	2b00      	cmp	r3, #0
    e6c6:	d10d      	bne.n	e6e4 <fnet_fs_rom_fseek+0x6c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:386
            {
                case FNET_FS_SEEK_SET:
                    new_pos = offset;
    e6c8:	68bb      	ldr	r3, [r7, #8]
    e6ca:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:387
                    break;
    e6cc:	e00d      	b.n	e6ea <fnet_fs_rom_fseek+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:389
                case FNET_FS_SEEK_CUR:
                    new_pos = (long)pos + offset;
    e6ce:	697a      	ldr	r2, [r7, #20]
    e6d0:	68bb      	ldr	r3, [r7, #8]
    e6d2:	4413      	add	r3, r2
    e6d4:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:390
                    break;
    e6d6:	e008      	b.n	e6ea <fnet_fs_rom_fseek+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:392
                case FNET_FS_SEEK_END:
                    new_pos = ((long)size - 1) - offset;
    e6d8:	69bb      	ldr	r3, [r7, #24]
    e6da:	1e5a      	subs	r2, r3, #1
    e6dc:	68bb      	ldr	r3, [r7, #8]
    e6de:	1ad3      	subs	r3, r2, r3
    e6e0:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:393
                    break;
    e6e2:	e002      	b.n	e6ea <fnet_fs_rom_fseek+0x72>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:395
                default:
                    new_pos = -1;
    e6e4:	f04f 33ff 	mov.w	r3, #4294967295
    e6e8:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:398
            }
            
            if((new_pos > 0) && (new_pos < size))
    e6ea:	6a3b      	ldr	r3, [r7, #32]
    e6ec:	2b00      	cmp	r3, #0
    e6ee:	dd08      	ble.n	e702 <fnet_fs_rom_fseek+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:398 (discriminator 1)
    e6f0:	6a3a      	ldr	r2, [r7, #32]
    e6f2:	69bb      	ldr	r3, [r7, #24]
    e6f4:	429a      	cmp	r2, r3
    e6f6:	d204      	bcs.n	e702 <fnet_fs_rom_fseek+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:400
            {
                file->pos = (unsigned long)new_pos;
    e6f8:	6a3a      	ldr	r2, [r7, #32]
    e6fa:	68fb      	ldr	r3, [r7, #12]
    e6fc:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:401
                result = FNET_OK;
    e6fe:	2300      	movs	r3, #0
    e700:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:406
            }
        }
    }
    
    return result;
    e702:	6a7b      	ldr	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:407
}
    e704:	4618      	mov	r0, r3
    e706:	372c      	adds	r7, #44	; 0x2c
    e708:	46bd      	mov	sp, r7
    e70a:	f85d 7b04 	ldr.w	r7, [sp], #4
    e70e:	4770      	bx	lr

0000e710 <fnet_fs_rom_finfo>:
fnet_fs_rom_finfo():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:415
* NAME: fnet_fs_rom_finfo
*
* DESCRIPTION:
*************************************************************************/
int fnet_fs_rom_finfo (struct fnet_fs_desc *file, struct fnet_fs_dirent *dirent)
{
    e710:	b580      	push	{r7, lr}
    e712:	b084      	sub	sp, #16
    e714:	af00      	add	r7, sp, #0
    e716:	6078      	str	r0, [r7, #4]
    e718:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:416
    int result = FNET_ERR;
    e71a:	f04f 33ff 	mov.w	r3, #4294967295
    e71e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:417
    if(file && file->id && dirent)
    e720:	687b      	ldr	r3, [r7, #4]
    e722:	2b00      	cmp	r3, #0
    e724:	d00e      	beq.n	e744 <fnet_fs_rom_finfo+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:417 (discriminator 1)
    e726:	687b      	ldr	r3, [r7, #4]
    e728:	681b      	ldr	r3, [r3, #0]
    e72a:	2b00      	cmp	r3, #0
    e72c:	d00a      	beq.n	e744 <fnet_fs_rom_finfo+0x34>
    e72e:	683b      	ldr	r3, [r7, #0]
    e730:	2b00      	cmp	r3, #0
    e732:	d007      	beq.n	e744 <fnet_fs_rom_finfo+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:419
    {
        fnet_fs_rom_fill_dirent((struct fnet_fs_rom_node *)(file->id), dirent);
    e734:	687b      	ldr	r3, [r7, #4]
    e736:	681b      	ldr	r3, [r3, #0]
    e738:	4618      	mov	r0, r3
    e73a:	6839      	ldr	r1, [r7, #0]
    e73c:	f7ff fea4 	bl	e488 <fnet_fs_rom_fill_dirent>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:420
        result = FNET_OK;
    e740:	2300      	movs	r3, #0
    e742:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:423
    }
    
    return result;
    e744:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_rom.c:424
}
    e746:	4618      	mov	r0, r3
    e748:	3710      	adds	r7, #16
    e74a:	46bd      	mov	sp, r7
    e74c:	bd80      	pop	{r7, pc}
    e74e:	bf00      	nop

0000e750 <fnet_fs_root_register>:
fnet_fs_root_register():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:90
* NAME: fnet_fs_root_register
*
* DESCRIPTION:
*************************************************************************/
void fnet_fs_root_register( void )
{
    e750:	b580      	push	{r7, lr}
    e752:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:91
    if(fnet_fs_root_registered == 0)
    e754:	4b05      	ldr	r3, [pc, #20]	; (e76c <fnet_fs_root_register+0x1c>)
    e756:	681b      	ldr	r3, [r3, #0]
    e758:	2b00      	cmp	r3, #0
    e75a:	d105      	bne.n	e768 <fnet_fs_root_register+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:93
    {
        fnet_fs_register(&fnet_fs_root);
    e75c:	4804      	ldr	r0, [pc, #16]	; (e770 <fnet_fs_root_register+0x20>)
    e75e:	f7ff f99f 	bl	daa0 <fnet_fs_register>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:94
        fnet_fs_root_registered = 1;
    e762:	4b02      	ldr	r3, [pc, #8]	; (e76c <fnet_fs_root_register+0x1c>)
    e764:	2201      	movs	r2, #1
    e766:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:96
    }
}
    e768:	bd80      	pop	{r7, pc}
    e76a:	bf00      	nop
    e76c:	1000ba90 	.word	0x1000ba90
    e770:	10000160 	.word	0x10000160

0000e774 <fnet_fs_root_unregister>:
fnet_fs_root_unregister():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:104
* NAME: fnet_fs_root_unregister
*
* DESCRIPTION: 
*************************************************************************/
void fnet_fs_root_unregister( void )
{
    e774:	b580      	push	{r7, lr}
    e776:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:105
    if(fnet_fs_root_registered == 1)
    e778:	4b05      	ldr	r3, [pc, #20]	; (e790 <fnet_fs_root_unregister+0x1c>)
    e77a:	681b      	ldr	r3, [r3, #0]
    e77c:	2b01      	cmp	r3, #1
    e77e:	d105      	bne.n	e78c <fnet_fs_root_unregister+0x18>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:107
    {
        fnet_fs_unregister(&fnet_fs_root);
    e780:	4804      	ldr	r0, [pc, #16]	; (e794 <fnet_fs_root_unregister+0x20>)
    e782:	f7ff f9ad 	bl	dae0 <fnet_fs_unregister>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:108
        fnet_fs_root_registered = 0;
    e786:	4b02      	ldr	r3, [pc, #8]	; (e790 <fnet_fs_root_unregister+0x1c>)
    e788:	2200      	movs	r2, #0
    e78a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:110
    }
}
    e78c:	bd80      	pop	{r7, pc}
    e78e:	bf00      	nop
    e790:	1000ba90 	.word	0x1000ba90
    e794:	10000160 	.word	0x10000160

0000e798 <fnet_fs_root_opendir>:
fnet_fs_root_opendir():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:118
* NAME: fnet_fs_root_opendir
*
* DESCRIPTION: Open DIR stream for the ROOT FS.
*************************************************************************/
int fnet_fs_root_opendir( struct fnet_fs_desc *dir, const char *name)
{
    e798:	b480      	push	{r7}
    e79a:	b085      	sub	sp, #20
    e79c:	af00      	add	r7, sp, #0
    e79e:	6078      	str	r0, [r7, #4]
    e7a0:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:119
    int result = FNET_ERR;
    e7a2:	f04f 33ff 	mov.w	r3, #4294967295
    e7a6:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:123

    FNET_COMP_UNUSED_ARG(name);
    
    if(dir)
    e7a8:	687b      	ldr	r3, [r7, #4]
    e7aa:	2b00      	cmp	r3, #0
    e7ac:	d006      	beq.n	e7bc <fnet_fs_root_opendir+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:125
    {
        dir->id = FNET_FS_ROOTDIR_ID;
    e7ae:	687b      	ldr	r3, [r7, #4]
    e7b0:	f04f 32ff 	mov.w	r2, #4294967295
    e7b4:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:126
        result = FNET_OK;
    e7b6:	2300      	movs	r3, #0
    e7b8:	60fb      	str	r3, [r7, #12]
    e7ba:	e002      	b.n	e7c2 <fnet_fs_root_opendir+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:129
    }
    else
        result = FNET_ERR;    
    e7bc:	f04f 33ff 	mov.w	r3, #4294967295
    e7c0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:131
        
    return result;
    e7c2:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:132
}
    e7c4:	4618      	mov	r0, r3
    e7c6:	3714      	adds	r7, #20
    e7c8:	46bd      	mov	sp, r7
    e7ca:	f85d 7b04 	ldr.w	r7, [sp], #4
    e7ce:	4770      	bx	lr

0000e7d0 <fnet_fs_root_readdir>:
fnet_fs_root_readdir():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:140
* NAME: fnet_fs_root_readdir
*
* DESCRIPTION: Read DIR stream for the ROOT FS.
*************************************************************************/
int fnet_fs_root_readdir(struct fnet_fs_desc *dir, struct fnet_fs_dirent* dirent)
{
    e7d0:	b580      	push	{r7, lr}
    e7d2:	b086      	sub	sp, #24
    e7d4:	af00      	add	r7, sp, #0
    e7d6:	6078      	str	r0, [r7, #4]
    e7d8:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:141
    int result = FNET_ERR;
    e7da:	f04f 33ff 	mov.w	r3, #4294967295
    e7de:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:145
    unsigned long i;
    struct fnet_fs_mount_point *tmp;
    
    if(dir && (dir->id == FNET_FS_ROOTDIR_ID) && (dir->pos != (unsigned long)FNET_FS_EOF) && dirent)
    e7e0:	687b      	ldr	r3, [r7, #4]
    e7e2:	2b00      	cmp	r3, #0
    e7e4:	d047      	beq.n	e876 <fnet_fs_root_readdir+0xa6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:145 (discriminator 1)
    e7e6:	687b      	ldr	r3, [r7, #4]
    e7e8:	681b      	ldr	r3, [r3, #0]
    e7ea:	f1b3 3fff 	cmp.w	r3, #4294967295
    e7ee:	d142      	bne.n	e876 <fnet_fs_root_readdir+0xa6>
    e7f0:	687b      	ldr	r3, [r7, #4]
    e7f2:	685b      	ldr	r3, [r3, #4]
    e7f4:	f1b3 3fff 	cmp.w	r3, #4294967295
    e7f8:	d03d      	beq.n	e876 <fnet_fs_root_readdir+0xa6>
    e7fa:	683b      	ldr	r3, [r7, #0]
    e7fc:	2b00      	cmp	r3, #0
    e7fe:	d03a      	beq.n	e876 <fnet_fs_root_readdir+0xa6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:147
    {
        for(i=dir->pos; i<FNET_CFG_FS_MOUNT_MAX; i++)
    e800:	687b      	ldr	r3, [r7, #4]
    e802:	685b      	ldr	r3, [r3, #4]
    e804:	613b      	str	r3, [r7, #16]
    e806:	e02b      	b.n	e860 <fnet_fs_root_readdir+0x90>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:149
        {
            tmp = &fnet_fs_mount_list[i];
    e808:	693a      	ldr	r2, [r7, #16]
    e80a:	4613      	mov	r3, r2
    e80c:	009b      	lsls	r3, r3, #2
    e80e:	4413      	add	r3, r2
    e810:	009b      	lsls	r3, r3, #2
    e812:	4a1b      	ldr	r2, [pc, #108]	; (e880 <fnet_fs_root_readdir+0xb0>)
    e814:	4413      	add	r3, r2
    e816:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:150
            if(tmp->fs) /* Found next mount - dir */
    e818:	68fb      	ldr	r3, [r7, #12]
    e81a:	68db      	ldr	r3, [r3, #12]
    e81c:	2b00      	cmp	r3, #0
    e81e:	d01c      	beq.n	e85a <fnet_fs_root_readdir+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:152
            {
                dir->pos = i+1; /* incriment next dir index */
    e820:	693b      	ldr	r3, [r7, #16]
    e822:	1c5a      	adds	r2, r3, #1
    e824:	687b      	ldr	r3, [r7, #4]
    e826:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:153
                if(fnet_strcmp(tmp->fs->name, FNET_FS_ROOT_NAME ) )/* It's not ROOT FS mount. */
    e828:	68fb      	ldr	r3, [r7, #12]
    e82a:	68db      	ldr	r3, [r3, #12]
    e82c:	681b      	ldr	r3, [r3, #0]
    e82e:	4618      	mov	r0, r3
    e830:	4914      	ldr	r1, [pc, #80]	; (e884 <fnet_fs_root_readdir+0xb4>)
    e832:	f7f7 fa21 	bl	5c78 <fnet_strcmp>
    e836:	4603      	mov	r3, r0
    e838:	2b00      	cmp	r3, #0
    e83a:	d00e      	beq.n	e85a <fnet_fs_root_readdir+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:156
                {
                    /*fill ident */
                    dirent->d_ino = (unsigned long) tmp; /* File serial number. */
    e83c:	68fa      	ldr	r2, [r7, #12]
    e83e:	683b      	ldr	r3, [r7, #0]
    e840:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:157
                    dirent->d_type = DT_DIR;
    e842:	683b      	ldr	r3, [r7, #0]
    e844:	2202      	movs	r2, #2
    e846:	711a      	strb	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:158
                    dirent->d_name = tmp->name;
    e848:	68fa      	ldr	r2, [r7, #12]
    e84a:	683b      	ldr	r3, [r7, #0]
    e84c:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:159
                    dirent->d_size = 0;
    e84e:	683b      	ldr	r3, [r7, #0]
    e850:	2200      	movs	r2, #0
    e852:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:160
                    result = FNET_OK;
    e854:	2300      	movs	r3, #0
    e856:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:161
                    break;
    e858:	e005      	b.n	e866 <fnet_fs_root_readdir+0x96>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:147
    unsigned long i;
    struct fnet_fs_mount_point *tmp;
    
    if(dir && (dir->id == FNET_FS_ROOTDIR_ID) && (dir->pos != (unsigned long)FNET_FS_EOF) && dirent)
    {
        for(i=dir->pos; i<FNET_CFG_FS_MOUNT_MAX; i++)
    e85a:	693b      	ldr	r3, [r7, #16]
    e85c:	3301      	adds	r3, #1
    e85e:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:147 (discriminator 1)
    e860:	693b      	ldr	r3, [r7, #16]
    e862:	2b01      	cmp	r3, #1
    e864:	d9d0      	bls.n	e808 <fnet_fs_root_readdir+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:165
                    result = FNET_OK;
                    break;
                }
            }
        }
        if (result == FNET_ERR)
    e866:	697b      	ldr	r3, [r7, #20]
    e868:	f1b3 3fff 	cmp.w	r3, #4294967295
    e86c:	d103      	bne.n	e876 <fnet_fs_root_readdir+0xa6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:166
             dir->pos = (unsigned long)FNET_FS_EOF; /* End of the directory is encountered */
    e86e:	687b      	ldr	r3, [r7, #4]
    e870:	f04f 32ff 	mov.w	r2, #4294967295
    e874:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:170
    
    }
    
    return result;
    e876:	697b      	ldr	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/services/fs/fnet_fs_root.c:171
}
    e878:	4618      	mov	r0, r3
    e87a:	3718      	adds	r7, #24
    e87c:	46bd      	mov	sp, r7
    e87e:	bd80      	pop	{r7, pc}
    e880:	1000baf0 	.word	0x1000baf0
    e884:	00014384 	.word	0x00014384

0000e888 <fnet_cpu_irq_disable>:
fnet_cpu_irq_disable():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc.c:18
* NAME: fnet_cpu_irq_disable
*
* DESCRIPTION: Disable IRQs
*************************************************************************/
fnet_cpu_irq_desc_t fnet_cpu_irq_disable(void)
{
    e888:	b580      	push	{r7, lr}
    e88a:	b082      	sub	sp, #8
    e88c:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc.c:19
	unsigned long x=0;
    e88e:	2300      	movs	r3, #0
    e890:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc.c:20
	NVIC->ICER[0] |= (1 << 28) ;	// disable IRQ
    e892:	4b0c      	ldr	r3, [pc, #48]	; (e8c4 <fnet_cpu_irq_disable+0x3c>)
    e894:	4a0b      	ldr	r2, [pc, #44]	; (e8c4 <fnet_cpu_irq_disable+0x3c>)
    e896:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
    e89a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
    e89e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc.c:21
	x = NVIC->ISER[0]; // stub
    e8a2:	4b08      	ldr	r3, [pc, #32]	; (e8c4 <fnet_cpu_irq_disable+0x3c>)
    e8a4:	681b      	ldr	r3, [r3, #0]
    e8a6:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc.c:22
	fnet_printf("\n..............IRQ:ENA. NVIS.ISER: %d\n",(x&(1 <<28))>>28);
    e8a8:	687b      	ldr	r3, [r7, #4]
    e8aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
    e8ae:	0f1b      	lsrs	r3, r3, #28
    e8b0:	4805      	ldr	r0, [pc, #20]	; (e8c8 <fnet_cpu_irq_disable+0x40>)
    e8b2:	4619      	mov	r1, r3
    e8b4:	f7fd fbb6 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc.c:24

	return 0;
    e8b8:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc.c:25
}
    e8ba:	4618      	mov	r0, r3
    e8bc:	3708      	adds	r7, #8
    e8be:	46bd      	mov	sp, r7
    e8c0:	bd80      	pop	{r7, pc}
    e8c2:	bf00      	nop
    e8c4:	e000e100 	.word	0xe000e100
    e8c8:	0001438c 	.word	0x0001438c

0000e8cc <fnet_cpu_irq_enable>:
fnet_cpu_irq_enable():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc.c:33
* NAME: fnet_cpu_irq_enable
*
* DESCRIPTION: Enables IRQs.
*************************************************************************/
void fnet_cpu_irq_enable(fnet_cpu_irq_desc_t irq_desc)
{
    e8cc:	b580      	push	{r7, lr}
    e8ce:	b084      	sub	sp, #16
    e8d0:	af00      	add	r7, sp, #0
    e8d2:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc.c:34
	unsigned long x=0;
    e8d4:	2300      	movs	r3, #0
    e8d6:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc.c:35
	NVIC->ISER[0] |= 1 << 28;	// enable IRQ
    e8d8:	4b09      	ldr	r3, [pc, #36]	; (e900 <fnet_cpu_irq_enable+0x34>)
    e8da:	4a09      	ldr	r2, [pc, #36]	; (e900 <fnet_cpu_irq_enable+0x34>)
    e8dc:	6812      	ldr	r2, [r2, #0]
    e8de:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
    e8e2:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc.c:36
	x = NVIC->ISER[0]; // stub
    e8e4:	4b06      	ldr	r3, [pc, #24]	; (e900 <fnet_cpu_irq_enable+0x34>)
    e8e6:	681b      	ldr	r3, [r3, #0]
    e8e8:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc.c:37
	fnet_printf("\n..............IRQ:ENA. NVIS.ISER: %d\n",(x&(1 <<28))>>28);
    e8ea:	68fb      	ldr	r3, [r7, #12]
    e8ec:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
    e8f0:	0f1b      	lsrs	r3, r3, #28
    e8f2:	4804      	ldr	r0, [pc, #16]	; (e904 <fnet_cpu_irq_enable+0x38>)
    e8f4:	4619      	mov	r1, r3
    e8f6:	f7fd fb95 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc.c:38
}
    e8fa:	3710      	adds	r7, #16
    e8fc:	46bd      	mov	sp, r7
    e8fe:	bd80      	pop	{r7, pc}
    e900:	e000e100 	.word	0xe000e100
    e904:	0001438c 	.word	0x0001438c

0000e908 <fnet_cpu_isr_install>:
fnet_cpu_isr_install():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc.c:42

// stub function, we use CMSIS for now
int fnet_cpu_isr_install(unsigned int vector_number, unsigned int priority)
{
    e908:	b480      	push	{r7}
    e90a:	b083      	sub	sp, #12
    e90c:	af00      	add	r7, sp, #0
    e90e:	6078      	str	r0, [r7, #4]
    e910:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc.c:43
	return FNET_OK;
    e912:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc.c:44
}
    e914:	4618      	mov	r0, r3
    e916:	370c      	adds	r7, #12
    e918:	46bd      	mov	sp, r7
    e91a:	f85d 7b04 	ldr.w	r7, [sp], #4
    e91e:	4770      	bx	lr

0000e920 <fnet_cpu_serial_putchar>:
fnet_cpu_serial_putchar():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:20
#endif


/********************************************************************/
void fnet_cpu_serial_putchar (long port_number, int character)
{
    e920:	b480      	push	{r7}
    e922:	b083      	sub	sp, #12
    e924:	af00      	add	r7, sp, #0
    e926:	6078      	str	r0, [r7, #4]
    e928:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:21
  while((LPC_UART0->LSR & 0x40) != 0x40);
    e92a:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:21 (discriminator 1)
    e92c:	4b0c      	ldr	r3, [pc, #48]	; (e960 <fnet_cpu_serial_putchar+0x40>)
    e92e:	7d1b      	ldrb	r3, [r3, #20]
    e930:	b2db      	uxtb	r3, r3
    e932:	f003 0340 	and.w	r3, r3, #64	; 0x40
    e936:	2b00      	cmp	r3, #0
    e938:	d0f8      	beq.n	e92c <fnet_cpu_serial_putchar+0xc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:22
	LPC_UART0->THR = character;
    e93a:	4b09      	ldr	r3, [pc, #36]	; (e960 <fnet_cpu_serial_putchar+0x40>)
    e93c:	683a      	ldr	r2, [r7, #0]
    e93e:	b2d2      	uxtb	r2, r2
    e940:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:23
	LPC_UART0->TER |= 0x80;			// povol vyslanie znaku.
    e942:	4b07      	ldr	r3, [pc, #28]	; (e960 <fnet_cpu_serial_putchar+0x40>)
    e944:	4a06      	ldr	r2, [pc, #24]	; (e960 <fnet_cpu_serial_putchar+0x40>)
    e946:	f892 2030 	ldrb.w	r2, [r2, #48]	; 0x30
    e94a:	b2d2      	uxtb	r2, r2
    e94c:	f062 027f 	orn	r2, r2, #127	; 0x7f
    e950:	b2d2      	uxtb	r2, r2
    e952:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:24
 }
    e956:	370c      	adds	r7, #12
    e958:	46bd      	mov	sp, r7
    e95a:	f85d 7b04 	ldr.w	r7, [sp], #4
    e95e:	4770      	bx	lr
    e960:	4000c000 	.word	0x4000c000

0000e964 <fnet_cpu_serial_getchar>:
fnet_cpu_serial_getchar():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:27
/********************************************************************/
int fnet_cpu_serial_getchar (long port_number)
{
    e964:	b480      	push	{r7}
    e966:	b083      	sub	sp, #12
    e968:	af00      	add	r7, sp, #0
    e96a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:28
	if ((LPC_UART0->LSR & 0x01) == 0x01)
    e96c:	4b09      	ldr	r3, [pc, #36]	; (e994 <fnet_cpu_serial_getchar+0x30>)
    e96e:	7d1b      	ldrb	r3, [r3, #20]
    e970:	b2db      	uxtb	r3, r3
    e972:	f003 0301 	and.w	r3, r3, #1
    e976:	2b00      	cmp	r3, #0
    e978:	d003      	beq.n	e982 <fnet_cpu_serial_getchar+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:29
		return LPC_UART0->RBR;
    e97a:	4b06      	ldr	r3, [pc, #24]	; (e994 <fnet_cpu_serial_getchar+0x30>)
    e97c:	781b      	ldrb	r3, [r3, #0]
    e97e:	b2db      	uxtb	r3, r3
    e980:	e001      	b.n	e986 <fnet_cpu_serial_getchar+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:31

    return FNET_ERR;
    e982:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:32
}
    e986:	4618      	mov	r0, r3
    e988:	370c      	adds	r7, #12
    e98a:	46bd      	mov	sp, r7
    e98c:	f85d 7b04 	ldr.w	r7, [sp], #4
    e990:	4770      	bx	lr
    e992:	bf00      	nop
    e994:	4000c000 	.word	0x4000c000

0000e998 <fnet_cpu_serial_init>:
fnet_cpu_serial_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:36

/********************************************************************/
void fnet_cpu_serial_init(long port_number, unsigned long baud_rate)
{
    e998:	b580      	push	{r7, lr}
    e99a:	b082      	sub	sp, #8
    e99c:	af00      	add	r7, sp, #0
    e99e:	6078      	str	r0, [r7, #4]
    e9a0:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:40
	// TODO: insert code here

  // located at main.c
  cpu_serial_init(port_number, baud_rate);
    e9a2:	6878      	ldr	r0, [r7, #4]
    e9a4:	6839      	ldr	r1, [r7, #0]
    e9a6:	f003 fdc5 	bl	12534 <cpu_serial_init>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:43

		// Set the pinsel on txd0,rxd0
		LPC_IOCON ->P0_2 = 1 | (2 << 3) | (1 << 9);	//RxD0 - P0.3, UART fn, pull up, fast mode
    e9aa:	4b20      	ldr	r3, [pc, #128]	; (ea2c <fnet_cpu_serial_init+0x94>)
    e9ac:	f240 2211 	movw	r2, #529	; 0x211
    e9b0:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:44
		LPC_IOCON ->P0_3 = 1 | (1 << 9);		//TxD0 - P0.2, UART fn, fast mode
    e9b2:	4b1e      	ldr	r3, [pc, #120]	; (ea2c <fnet_cpu_serial_init+0x94>)
    e9b4:	f240 2201 	movw	r2, #513	; 0x201
    e9b8:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:49

		// Set RXD0 to input

		// Enable UART0
		LPC_SC ->PCONP |= (1 << 3);
    e9ba:	4b1d      	ldr	r3, [pc, #116]	; (ea30 <fnet_cpu_serial_init+0x98>)
    e9bc:	4a1c      	ldr	r2, [pc, #112]	; (ea30 <fnet_cpu_serial_init+0x98>)
    e9be:	f8d2 20c4 	ldr.w	r2, [r2, #196]	; 0xc4
    e9c2:	f042 0208 	orr.w	r2, r2, #8
    e9c6:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:50
		LPC_GPIO0->DIR |= 0x4;
    e9ca:	4b1a      	ldr	r3, [pc, #104]	; (ea34 <fnet_cpu_serial_init+0x9c>)
    e9cc:	4a19      	ldr	r2, [pc, #100]	; (ea34 <fnet_cpu_serial_init+0x9c>)
    e9ce:	6812      	ldr	r2, [r2, #0]
    e9d0:	f042 0204 	orr.w	r2, r2, #4
    e9d4:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:55
		// Set clock to PCLK/4
		//LPC_SC->PCLKSEL0 &= ~(0x3 << 6);

		// Set clock to PCLK/8
		LPC_SC->PCLKSEL |= (0x3 << 6);
    e9d6:	4b16      	ldr	r3, [pc, #88]	; (ea30 <fnet_cpu_serial_init+0x98>)
    e9d8:	4a15      	ldr	r2, [pc, #84]	; (ea30 <fnet_cpu_serial_init+0x98>)
    e9da:	f8d2 21a8 	ldr.w	r2, [r2, #424]	; 0x1a8
    e9de:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
    e9e2:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:57
		// 8-N-1 configuration
		LPC_UART0 ->LCR = (0x3);
    e9e6:	4b14      	ldr	r3, [pc, #80]	; (ea38 <fnet_cpu_serial_init+0xa0>)
    e9e8:	2203      	movs	r2, #3
    e9ea:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:59
		// Enable access to divisor latch access bits
		LPC_UART0 ->LCR |= (1 << 7);
    e9ec:	4b12      	ldr	r3, [pc, #72]	; (ea38 <fnet_cpu_serial_init+0xa0>)
    e9ee:	4a12      	ldr	r2, [pc, #72]	; (ea38 <fnet_cpu_serial_init+0xa0>)
    e9f0:	7b12      	ldrb	r2, [r2, #12]
    e9f2:	b2d2      	uxtb	r2, r2
    e9f4:	f062 027f 	orn	r2, r2, #127	; 0x7f
    e9f8:	b2d2      	uxtb	r2, r2
    e9fa:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:62

		// Set bit rate to 9600
		LPC_UART0 ->DLM = 0;
    e9fc:	4b0e      	ldr	r3, [pc, #56]	; (ea38 <fnet_cpu_serial_init+0xa0>)
    e9fe:	2200      	movs	r2, #0
    ea00:	711a      	strb	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:67
		//LPC_UART0 ->DLL = 54;
                //LPC_UART0 ->FDR = (2 << 4) | (1 << 0);
                
                // Set bitrate to 115200
                LPC_UART0->DLL = 4;
    ea02:	4b0d      	ldr	r3, [pc, #52]	; (ea38 <fnet_cpu_serial_init+0xa0>)
    ea04:	2204      	movs	r2, #4
    ea06:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:68
                LPC_UART0->FDR = (15<<4) | (11<<0);
    ea08:	4b0b      	ldr	r3, [pc, #44]	; (ea38 <fnet_cpu_serial_init+0xa0>)
    ea0a:	22fb      	movs	r2, #251	; 0xfb
    ea0c:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:70
		// Remove access to divisor latch access bits
		LPC_UART0 ->LCR &= ~(1 << 7);
    ea10:	4b09      	ldr	r3, [pc, #36]	; (ea38 <fnet_cpu_serial_init+0xa0>)
    ea12:	4a09      	ldr	r2, [pc, #36]	; (ea38 <fnet_cpu_serial_init+0xa0>)
    ea14:	7b12      	ldrb	r2, [r2, #12]
    ea16:	b2d2      	uxtb	r2, r2
    ea18:	f002 027f 	and.w	r2, r2, #127	; 0x7f
    ea1c:	b2d2      	uxtb	r2, r2
    ea1e:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:72
		// Enable RX,TX
		LPC_UART0 ->FCR = (0x7);
    ea20:	4b05      	ldr	r3, [pc, #20]	; (ea38 <fnet_cpu_serial_init+0xa0>)
    ea22:	2207      	movs	r2, #7
    ea24:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_serial.c:77

		// Enable receive interrupt
		//LPC_UART0->IER = 1;
		//NVIC_EnableIRQ(UART0_IRQn);
}
    ea26:	3708      	adds	r7, #8
    ea28:	46bd      	mov	sp, r7
    ea2a:	bd80      	pop	{r7, pc}
    ea2c:	4002c000 	.word	0x4002c000
    ea30:	400fc000 	.word	0x400fc000
    ea34:	20098000 	.word	0x20098000
    ea38:	4000c000 	.word	0x4000c000

0000ea3c <NVIC_EnableIRQ>:
NVIC_EnableIRQ():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Chip\Include/core_cm3.h:1335
    The function enables a device-specific interrupt in the NVIC interrupt controller.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
    ea3c:	b480      	push	{r7}
    ea3e:	b083      	sub	sp, #12
    ea40:	af00      	add	r7, sp, #0
    ea42:	4603      	mov	r3, r0
    ea44:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Chip\Include/core_cm3.h:1336
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
    ea46:	4b08      	ldr	r3, [pc, #32]	; (ea68 <NVIC_EnableIRQ+0x2c>)
    ea48:	f997 2007 	ldrsb.w	r2, [r7, #7]
    ea4c:	0952      	lsrs	r2, r2, #5
    ea4e:	79f9      	ldrb	r1, [r7, #7]
    ea50:	f001 011f 	and.w	r1, r1, #31
    ea54:	2001      	movs	r0, #1
    ea56:	fa00 f101 	lsl.w	r1, r0, r1
    ea5a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Chip\Include/core_cm3.h:1337
}
    ea5e:	370c      	adds	r7, #12
    ea60:	46bd      	mov	sp, r7
    ea62:	f85d 7b04 	ldr.w	r7, [sp], #4
    ea66:	4770      	bx	lr
    ea68:	e000e100 	.word	0xe000e100

0000ea6c <fnet_cpu_timer_handler_top>:
fnet_cpu_timer_handler_top():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:34
#define timer2_set_interval0(interval) LPC_TIM2->MR0 = interval

#define timer2_set_enable() LPC_TIM2->TCR = 1
#define timer2_set_disable() LPC_TIM2->TCR = 0

void fnet_cpu_timer_handler_top(void *cookie) {
    ea6c:	b580      	push	{r7, lr}
    ea6e:	b082      	sub	sp, #8
    ea70:	af00      	add	r7, sp, #0
    ea72:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:35
	LPC_TIM2->IR = 1;
    ea74:	4b03      	ldr	r3, [pc, #12]	; (ea84 <fnet_cpu_timer_handler_top+0x18>)
    ea76:	2201      	movs	r2, #1
    ea78:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:36
	fnet_timer_ticks_inc();
    ea7a:	f7fb f9bd 	bl	9df8 <fnet_timer_ticks_inc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:37
}
    ea7e:	3708      	adds	r7, #8
    ea80:	46bd      	mov	sp, r7
    ea82:	bd80      	pop	{r7, pc}
    ea84:	40090000 	.word	0x40090000

0000ea88 <fnet_cpu_timer_handler_bottom>:
fnet_cpu_timer_handler_bottom():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:38
void fnet_cpu_timer_handler_bottom(void *cookie) {
    ea88:	b580      	push	{r7, lr}
    ea8a:	b082      	sub	sp, #8
    ea8c:	af00      	add	r7, sp, #0
    ea8e:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:39
	fnet_timer_handler_bottom(cookie);
    ea90:	6878      	ldr	r0, [r7, #4]
    ea92:	f7fb f9bf 	bl	9e14 <fnet_timer_handler_bottom>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:40
}
    ea96:	3708      	adds	r7, #8
    ea98:	46bd      	mov	sp, r7
    ea9a:	bd80      	pop	{r7, pc}

0000ea9c <TIMER2_IRQHandler>:
TIMER2_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:42

void TIMER2_IRQHandler(void) {
    ea9c:	b580      	push	{r7, lr}
    ea9e:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:43
	fnet_cpu_timer_handler_top(0);
    eaa0:	2000      	movs	r0, #0
    eaa2:	f7ff ffe3 	bl	ea6c <fnet_cpu_timer_handler_top>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:44
	fnet_isr_handler(TIMER2_IRQn);
    eaa6:	2003      	movs	r0, #3
    eaa8:	f7f3 fad6 	bl	2058 <fnet_isr_handler>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:46

}
    eaac:	bd80      	pop	{r7, pc}
    eaae:	bf00      	nop

0000eab0 <fnet_cpu_timer_init>:
fnet_cpu_timer_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:47
int fnet_cpu_timer_init(unsigned int period_ms) {
    eab0:	b580      	push	{r7, lr}
    eab2:	b088      	sub	sp, #32
    eab4:	af02      	add	r7, sp, #8
    eab6:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:48
	uint32_t pClk4 = SystemCoreClock / 4;
    eab8:	4b31      	ldr	r3, [pc, #196]	; (eb80 <fnet_cpu_timer_init+0xd0>)
    eaba:	681b      	ldr	r3, [r3, #0]
    eabc:	089b      	lsrs	r3, r3, #2
    eabe:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:49
	float tickTime = 1.0 / ((float) pClk4);
    eac0:	6978      	ldr	r0, [r7, #20]
    eac2:	f004 fbed 	bl	132a0 <__aeabi_ui2f>
    eac6:	4603      	mov	r3, r0
    eac8:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
    eacc:	4619      	mov	r1, r3
    eace:	f004 fcf3 	bl	134b8 <__aeabi_fdiv>
    ead2:	4603      	mov	r3, r0
    ead4:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:50
	float seconds = (float) period_ms * 0.001;
    ead6:	6878      	ldr	r0, [r7, #4]
    ead8:	f004 fbe2 	bl	132a0 <__aeabi_ui2f>
    eadc:	4603      	mov	r3, r0
    eade:	4618      	mov	r0, r3
    eae0:	f004 f872 	bl	12bc8 <__aeabi_f2d>
    eae4:	4602      	mov	r2, r0
    eae6:	460b      	mov	r3, r1
    eae8:	4610      	mov	r0, r2
    eaea:	4619      	mov	r1, r3
    eaec:	a322      	add	r3, pc, #136	; (adr r3, eb78 <fnet_cpu_timer_init+0xc8>)
    eaee:	e9d3 2300 	ldrd	r2, r3, [r3]
    eaf2:	f004 f8bd 	bl	12c70 <__aeabi_dmul>
    eaf6:	4602      	mov	r2, r0
    eaf8:	460b      	mov	r3, r1
    eafa:	4610      	mov	r0, r2
    eafc:	4619      	mov	r1, r3
    eafe:	f004 fac9 	bl	13094 <__aeabi_d2f>
    eb02:	4603      	mov	r3, r0
    eb04:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:51
	uint32_t counts = seconds / tickTime;
    eb06:	68f8      	ldr	r0, [r7, #12]
    eb08:	6939      	ldr	r1, [r7, #16]
    eb0a:	f004 fcd5 	bl	134b8 <__aeabi_fdiv>
    eb0e:	4603      	mov	r3, r0
    eb10:	4618      	mov	r0, r3
    eb12:	f004 fd6d 	bl	135f0 <__aeabi_f2uiz>
    eb16:	4603      	mov	r3, r0
    eb18:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:54

	// Turn on the power
	enable_timer2_power();
    eb1a:	4b1a      	ldr	r3, [pc, #104]	; (eb84 <fnet_cpu_timer_init+0xd4>)
    eb1c:	4a19      	ldr	r2, [pc, #100]	; (eb84 <fnet_cpu_timer_init+0xd4>)
    eb1e:	f8d2 20c4 	ldr.w	r2, [r2, #196]	; 0xc4
    eb22:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
    eb26:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:56
	// Select the clock
	timer2_set_pclk4();
    eb2a:	4b16      	ldr	r3, [pc, #88]	; (eb84 <fnet_cpu_timer_init+0xd4>)
    eb2c:	4a15      	ldr	r2, [pc, #84]	; (eb84 <fnet_cpu_timer_init+0xd4>)
    eb2e:	f8d2 21a8 	ldr.w	r2, [r2, #424]	; 0x1a8
    eb32:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
    eb36:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:58
	// Set reset
	timer2_counter_reset();
    eb3a:	4b13      	ldr	r3, [pc, #76]	; (eb88 <fnet_cpu_timer_init+0xd8>)
    eb3c:	2202      	movs	r2, #2
    eb3e:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:59
	timer2_set_timer_mode();
    eb40:	4b11      	ldr	r3, [pc, #68]	; (eb88 <fnet_cpu_timer_init+0xd8>)
    eb42:	2200      	movs	r2, #0
    eb44:	671a      	str	r2, [r3, #112]	; 0x70
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:63
	// Set prescaler to 0
	//LPC_TIM3->PR = 0;
	// Set interrupt and reset on match
	timer2_interrupt_reset_match();
    eb46:	4b10      	ldr	r3, [pc, #64]	; (eb88 <fnet_cpu_timer_init+0xd8>)
    eb48:	2203      	movs	r2, #3
    eb4a:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:65
	// Set the match register
	timer2_set_interval0(counts);
    eb4c:	4b0e      	ldr	r3, [pc, #56]	; (eb88 <fnet_cpu_timer_init+0xd8>)
    eb4e:	68ba      	ldr	r2, [r7, #8]
    eb50:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:68
	//LPC_TIM3->CTCR = 0; // use counter mode
	// Enable interrupt
	NVIC_EnableIRQ(TIMER2_IRQn);
    eb52:	2003      	movs	r0, #3
    eb54:	f7ff ff72 	bl	ea3c <NVIC_EnableIRQ>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:69
	fnet_isr_vector_init(TIMER2_IRQn,fnet_cpu_timer_handler_top,fnet_timer_handler_bottom,
    eb58:	2300      	movs	r3, #0
    eb5a:	9300      	str	r3, [sp, #0]
    eb5c:	2003      	movs	r0, #3
    eb5e:	490b      	ldr	r1, [pc, #44]	; (eb8c <fnet_cpu_timer_init+0xdc>)
    eb60:	4a0b      	ldr	r2, [pc, #44]	; (eb90 <fnet_cpu_timer_init+0xe0>)
    eb62:	2303      	movs	r3, #3
    eb64:	f7f3 fabe 	bl	20e4 <fnet_isr_vector_init>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:73
                FNET_CFG_CPU_TIMER_VECTOR_PRIORITY,0);
	//NVIC_SetVector(UART0_IRQn, (uint32_t) &fnet_cpu_timer_handler_top);
	// Enable LPC timer 3
	timer2_set_enable();
    eb68:	4b07      	ldr	r3, [pc, #28]	; (eb88 <fnet_cpu_timer_init+0xd8>)
    eb6a:	2201      	movs	r2, #1
    eb6c:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:74
	return FNET_OK;
    eb6e:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:75
}
    eb70:	4618      	mov	r0, r3
    eb72:	3718      	adds	r7, #24
    eb74:	46bd      	mov	sp, r7
    eb76:	bd80      	pop	{r7, pc}
    eb78:	d2f1a9fc 	.word	0xd2f1a9fc
    eb7c:	3f50624d 	.word	0x3f50624d
    eb80:	100002cc 	.word	0x100002cc
    eb84:	400fc000 	.word	0x400fc000
    eb88:	40090000 	.word	0x40090000
    eb8c:	0000ea6d 	.word	0x0000ea6d
    eb90:	00009e15 	.word	0x00009e15
$t():
    eb94:	f3af 8000 	nop.w

0000eb98 <fnet_cpu_timer_release>:
fnet_cpu_timer_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:84
*
* DESCRIPTION: Relaeses TCP/IP hardware timer.
*
*************************************************************************/
void fnet_cpu_timer_release( void )
{
    eb98:	b480      	push	{r7}
    eb9a:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:85
	timer2_set_disable();
    eb9c:	4b07      	ldr	r3, [pc, #28]	; (ebbc <fnet_cpu_timer_release+0x24>)
    eb9e:	2200      	movs	r2, #0
    eba0:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:86
	disable_timer2_power();
    eba2:	4b07      	ldr	r3, [pc, #28]	; (ebc0 <fnet_cpu_timer_release+0x28>)
    eba4:	4a06      	ldr	r2, [pc, #24]	; (ebc0 <fnet_cpu_timer_release+0x28>)
    eba6:	f8d2 20c4 	ldr.w	r2, [r2, #196]	; 0xc4
    ebaa:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
    ebae:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc1768_timer.c:88

}
    ebb2:	46bd      	mov	sp, r7
    ebb4:	f85d 7b04 	ldr.w	r7, [sp], #4
    ebb8:	4770      	bx	lr
    ebba:	bf00      	nop
    ebbc:	40090000 	.word	0x40090000
    ebc0:	400fc000 	.word	0x400fc000

0000ebc4 <NVIC_EnableIRQ>:
NVIC_EnableIRQ():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Chip\Include/core_cm3.h:1335
    The function enables a device-specific interrupt in the NVIC interrupt controller.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
    ebc4:	b480      	push	{r7}
    ebc6:	b083      	sub	sp, #12
    ebc8:	af00      	add	r7, sp, #0
    ebca:	4603      	mov	r3, r0
    ebcc:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Chip\Include/core_cm3.h:1336
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
    ebce:	4b08      	ldr	r3, [pc, #32]	; (ebf0 <NVIC_EnableIRQ+0x2c>)
    ebd0:	f997 2007 	ldrsb.w	r2, [r7, #7]
    ebd4:	0952      	lsrs	r2, r2, #5
    ebd6:	79f9      	ldrb	r1, [r7, #7]
    ebd8:	f001 011f 	and.w	r1, r1, #31
    ebdc:	2001      	movs	r0, #1
    ebde:	fa00 f101 	lsl.w	r1, r0, r1
    ebe2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Chip\Include/core_cm3.h:1337
}
    ebe6:	370c      	adds	r7, #12
    ebe8:	46bd      	mov	sp, r7
    ebea:	f85d 7b04 	ldr.w	r7, [sp], #4
    ebee:	4770      	bx	lr
    ebf0:	e000e100 	.word	0xe000e100

0000ebf4 <fnet_lpceth_write_to_phy>:
fnet_lpceth_write_to_phy():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:137

/** Write a byte to the ethernet PHY
 * @arg reg PHY register to write to
 * @arg value value to write to PHY
 */
void fnet_lpceth_write_to_phy(uint8_t reg, uint16_t value) {
    ebf4:	b480      	push	{r7}
    ebf6:	b085      	sub	sp, #20
    ebf8:	af00      	add	r7, sp, #0
    ebfa:	4602      	mov	r2, r0
    ebfc:	460b      	mov	r3, r1
    ebfe:	71fa      	strb	r2, [r7, #7]
    ec00:	80bb      	strh	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:140
	unsigned int loop;
	// Set the address and register we wish to access
	LPC_EMAC->MADR = ((LPC_EMAC_DEFAULT_PHY_ADDRESS & 0x1F) << 8) | (reg & 0xFFFF);
    ec02:	4b0f      	ldr	r3, [pc, #60]	; (ec40 <fnet_lpceth_write_to_phy+0x4c>)
    ec04:	79fa      	ldrb	r2, [r7, #7]
    ec06:	f442 7280 	orr.w	r2, r2, #256	; 0x100
    ec0a:	629a      	str	r2, [r3, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:141
	LPC_EMAC->MWTD = value;
    ec0c:	4b0c      	ldr	r3, [pc, #48]	; (ec40 <fnet_lpceth_write_to_phy+0x4c>)
    ec0e:	88ba      	ldrh	r2, [r7, #4]
    ec10:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:142
	for (loop = 0; loop < LPC_EMAC_MII_WRITE_TIMEOUT; loop++) {
    ec12:	2300      	movs	r3, #0
    ec14:	60fb      	str	r3, [r7, #12]
    ec16:	e009      	b.n	ec2c <fnet_lpceth_write_to_phy+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:143
		if (is_mII_busy() == 0) {break;}
    ec18:	4b09      	ldr	r3, [pc, #36]	; (ec40 <fnet_lpceth_write_to_phy+0x4c>)
    ec1a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    ec1c:	f003 0301 	and.w	r3, r3, #1
    ec20:	2b00      	cmp	r3, #0
    ec22:	d100      	bne.n	ec26 <fnet_lpceth_write_to_phy+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:143 (discriminator 1)
    ec24:	e006      	b.n	ec34 <fnet_lpceth_write_to_phy+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:142
void fnet_lpceth_write_to_phy(uint8_t reg, uint16_t value) {
	unsigned int loop;
	// Set the address and register we wish to access
	LPC_EMAC->MADR = ((LPC_EMAC_DEFAULT_PHY_ADDRESS & 0x1F) << 8) | (reg & 0xFFFF);
	LPC_EMAC->MWTD = value;
	for (loop = 0; loop < LPC_EMAC_MII_WRITE_TIMEOUT; loop++) {
    ec26:	68fb      	ldr	r3, [r7, #12]
    ec28:	3301      	adds	r3, #1
    ec2a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:142 (discriminator 1)
    ec2c:	68fb      	ldr	r3, [r7, #12]
    ec2e:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
    ec32:	d3f1      	bcc.n	ec18 <fnet_lpceth_write_to_phy+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:145
		if (is_mII_busy() == 0) {break;}
	}
}
    ec34:	3714      	adds	r7, #20
    ec36:	46bd      	mov	sp, r7
    ec38:	f85d 7b04 	ldr.w	r7, [sp], #4
    ec3c:	4770      	bx	lr
    ec3e:	bf00      	nop
    ec40:	20084000 	.word	0x20084000

0000ec44 <fnet_lpceth_read_from_phy>:
fnet_lpceth_read_from_phy():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:147

uint16_t fnet_lpceth_read_from_phy(uint8_t reg) {
    ec44:	b480      	push	{r7}
    ec46:	b085      	sub	sp, #20
    ec48:	af00      	add	r7, sp, #0
    ec4a:	4603      	mov	r3, r0
    ec4c:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:148
	LPC_EMAC->MADR = ((LPC_EMAC_DEFAULT_PHY_ADDRESS & 0x1F) << 8) | (reg & 0xFFFF);
    ec4e:	4b13      	ldr	r3, [pc, #76]	; (ec9c <fnet_lpceth_read_from_phy+0x58>)
    ec50:	79fa      	ldrb	r2, [r7, #7]
    ec52:	f442 7280 	orr.w	r2, r2, #256	; 0x100
    ec56:	629a      	str	r2, [r3, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:149
	LPC_EMAC->MCMD = LPC_EMAC_MCMD_READ;
    ec58:	4b10      	ldr	r3, [pc, #64]	; (ec9c <fnet_lpceth_read_from_phy+0x58>)
    ec5a:	2201      	movs	r2, #1
    ec5c:	625a      	str	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:152

	unsigned int loop;
	for(loop=0; loop < LPC_EMAC_MII_READ_TIMEOUT; loop++) {
    ec5e:	2300      	movs	r3, #0
    ec60:	60fb      	str	r3, [r7, #12]
    ec62:	e00f      	b.n	ec84 <fnet_lpceth_read_from_phy+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:153
		if (is_mII_busy() == 0) {
    ec64:	4b0d      	ldr	r3, [pc, #52]	; (ec9c <fnet_lpceth_read_from_phy+0x58>)
    ec66:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    ec68:	f003 0301 	and.w	r3, r3, #1
    ec6c:	2b00      	cmp	r3, #0
    ec6e:	d106      	bne.n	ec7e <fnet_lpceth_read_from_phy+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:154
			LPC_EMAC->MCMD = LPC_EMAC_MCMD_NONE;
    ec70:	4b0a      	ldr	r3, [pc, #40]	; (ec9c <fnet_lpceth_read_from_phy+0x58>)
    ec72:	2200      	movs	r2, #0
    ec74:	625a      	str	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:155
			return LPC_EMAC->MRDD;
    ec76:	4b09      	ldr	r3, [pc, #36]	; (ec9c <fnet_lpceth_read_from_phy+0x58>)
    ec78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    ec7a:	b29b      	uxth	r3, r3
    ec7c:	e008      	b.n	ec90 <fnet_lpceth_read_from_phy+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:152
uint16_t fnet_lpceth_read_from_phy(uint8_t reg) {
	LPC_EMAC->MADR = ((LPC_EMAC_DEFAULT_PHY_ADDRESS & 0x1F) << 8) | (reg & 0xFFFF);
	LPC_EMAC->MCMD = LPC_EMAC_MCMD_READ;

	unsigned int loop;
	for(loop=0; loop < LPC_EMAC_MII_READ_TIMEOUT; loop++) {
    ec7e:	68fb      	ldr	r3, [r7, #12]
    ec80:	3301      	adds	r3, #1
    ec82:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:152 (discriminator 1)
    ec84:	68fb      	ldr	r3, [r7, #12]
    ec86:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
    ec8a:	d3eb      	bcc.n	ec64 <fnet_lpceth_read_from_phy+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:158
		if (is_mII_busy() == 0) {
			LPC_EMAC->MCMD = LPC_EMAC_MCMD_NONE;
			return LPC_EMAC->MRDD;
		}
	}
	return -1;
    ec8c:	f64f 73ff 	movw	r3, #65535	; 0xffff
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:159
}
    ec90:	4618      	mov	r0, r3
    ec92:	3714      	adds	r7, #20
    ec94:	46bd      	mov	sp, r7
    ec96:	f85d 7b04 	ldr.w	r7, [sp], #4
    ec9a:	4770      	bx	lr
    ec9c:	20084000 	.word	0x20084000

0000eca0 <fnet_eth_io_init>:
fnet_eth_io_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:163

// Hardwerove poripopjenie ethernet phy k LPC
void fnet_eth_io_init()
{
    eca0:	b580      	push	{r7, lr}
    eca2:	b082      	sub	sp, #8
    eca4:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:167
	unsigned int loop;

	lpceth_debug_printf("...Internal ETH MAC: Power ON - ");
	LPC_SC->PCONP |= LPC_PCON_ENABLE_ETH_POWER;
    eca6:	4b21      	ldr	r3, [pc, #132]	; (ed2c <fnet_eth_io_init+0x8c>)
    eca8:	4a20      	ldr	r2, [pc, #128]	; (ed2c <fnet_eth_io_init+0x8c>)
    ecaa:	f8d2 20c4 	ldr.w	r2, [r2, #196]	; 0xc4
    ecae:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
    ecb2:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:172
    lpceth_debug_printf("OK\n");

    lpceth_debug_printf("...MII Interface: HW Config - ");

    HW_initialize_ETH();
    ecb6:	f003 fc7b 	bl	125b0 <HW_initialize_ETH>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:175
    lpceth_debug_printf("OK\n");

	reset_mac1_internal_modules();
    ecba:	4b1d      	ldr	r3, [pc, #116]	; (ed30 <fnet_eth_io_init+0x90>)
    ecbc:	f44f 424f 	mov.w	r2, #52992	; 0xcf00
    ecc0:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:176
	reset_mac_datapaths();
    ecc2:	4b1b      	ldr	r3, [pc, #108]	; (ed30 <fnet_eth_io_init+0x90>)
    ecc4:	2278      	movs	r2, #120	; 0x78
    ecc6:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:178
	// Short delay
	for (loop = 100; loop; loop--);
    ecca:	2364      	movs	r3, #100	; 0x64
    eccc:	607b      	str	r3, [r7, #4]
    ecce:	e002      	b.n	ecd6 <fnet_eth_io_init+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:178 (discriminator 2)
    ecd0:	687b      	ldr	r3, [r7, #4]
    ecd2:	3b01      	subs	r3, #1
    ecd4:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:178 (discriminator 1)
    ecd6:	687b      	ldr	r3, [r7, #4]
    ecd8:	2b00      	cmp	r3, #0
    ecda:	d1f9      	bne.n	ecd0 <fnet_eth_io_init+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:181

    lpceth_debug_printf("...Internal ETH MAC: Reset MAC Datapaths - ");
	mac_pass_all_receive_frames();
    ecdc:	4b14      	ldr	r3, [pc, #80]	; (ed30 <fnet_eth_io_init+0x90>)
    ecde:	2202      	movs	r2, #2
    ece0:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:182
	mac_enable_crc_short_frames();
    ece2:	4b13      	ldr	r3, [pc, #76]	; (ed30 <fnet_eth_io_init+0x90>)
    ece4:	2230      	movs	r2, #48	; 0x30
    ece6:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:183
	set_mac_max_frame_size(LPC_ETH_MAX_FRAME_SIZE);
    ece8:	4b11      	ldr	r3, [pc, #68]	; (ed30 <fnet_eth_io_init+0x90>)
    ecea:	f44f 62c0 	mov.w	r2, #1536	; 0x600
    ecee:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:184
	mac_disable_huge_frames();
    ecf0:	4b0f      	ldr	r3, [pc, #60]	; (ed30 <fnet_eth_io_init+0x90>)
    ecf2:	4a0f      	ldr	r2, [pc, #60]	; (ed30 <fnet_eth_io_init+0x90>)
    ecf4:	6852      	ldr	r2, [r2, #4]
    ecf6:	f022 0204 	bic.w	r2, r2, #4
    ecfa:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:185
	set_retransmission_max_collision_window(LPC_ETH_DEFAULT_RETRANSMISSION_MAX,LPC_ETH_DEFAULT_COLLISION_WIN);
    ecfc:	4b0c      	ldr	r3, [pc, #48]	; (ed30 <fnet_eth_io_init+0x90>)
    ecfe:	f243 720f 	movw	r2, #14095	; 0x370f
    ed02:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:186
	set_non_b2b_pkt_gap(LPC_ETH_DEFAULT_NON_B2B_PKT_GAP);
    ed04:	4b0a      	ldr	r3, [pc, #40]	; (ed30 <fnet_eth_io_init+0x90>)
    ed06:	f647 7212 	movw	r2, #32530	; 0x7f12
    ed0a:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:190
	lpceth_debug_printf("OK\n");

	// todo skuntroluj casovanie, ci nema ist nahodou zvonku....
	set_mII_clk_div(MII_CLK_DIV_64);
    ed0c:	4b08      	ldr	r3, [pc, #32]	; (ed30 <fnet_eth_io_init+0x90>)
    ed0e:	4a08      	ldr	r2, [pc, #32]	; (ed30 <fnet_eth_io_init+0x90>)
    ed10:	6a12      	ldr	r2, [r2, #32]
    ed12:	f042 023c 	orr.w	r2, r2, #60	; 0x3c
    ed16:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:192
        lpceth_debug_printf("...MII Interface: Reset - ");
	reset_mII_interface();
    ed18:	4b05      	ldr	r3, [pc, #20]	; (ed30 <fnet_eth_io_init+0x90>)
    ed1a:	4a05      	ldr	r2, [pc, #20]	; (ed30 <fnet_eth_io_init+0x90>)
    ed1c:	6a12      	ldr	r2, [r2, #32]
    ed1e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
    ed22:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:194
	lpceth_debug_printf("OK\n");
}
    ed24:	3708      	adds	r7, #8
    ed26:	46bd      	mov	sp, r7
    ed28:	bd80      	pop	{r7, pc}
    ed2a:	bf00      	nop
    ed2c:	400fc000 	.word	0x400fc000
    ed30:	20084000 	.word	0x20084000

0000ed34 <fnet_lpceth_init>:
fnet_lpceth_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:199



int fnet_lpceth_init(fnet_netif_t *netif)
{
    ed34:	b580      	push	{r7, lr}
    ed36:	b088      	sub	sp, #32
    ed38:	af02      	add	r7, sp, #8
    ed3a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:202
	unsigned long loop;
	lpceth_debug_printf("Ethernet configuration\n");
	fnet_eth_io_init();
    ed3c:	f7ff ffb0 	bl	eca0 <fnet_eth_io_init>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:203
	uint32_t phyId = 0,temp=0;
    ed40:	2300      	movs	r3, #0
    ed42:	613b      	str	r3, [r7, #16]
    ed44:	2300      	movs	r3, #0
    ed46:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:206

	// Wait a bit
	for (loop = 100; loop; loop--);
    ed48:	2364      	movs	r3, #100	; 0x64
    ed4a:	617b      	str	r3, [r7, #20]
    ed4c:	e002      	b.n	ed54 <fnet_lpceth_init+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:206 (discriminator 2)
    ed4e:	697b      	ldr	r3, [r7, #20]
    ed50:	3b01      	subs	r3, #1
    ed52:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:206 (discriminator 1)
    ed54:	697b      	ldr	r3, [r7, #20]
    ed56:	2b00      	cmp	r3, #0
    ed58:	d1f9      	bne.n	ed4e <fnet_lpceth_init+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:209
	// Bring the MII out of reset
    lpceth_debug_printf("...MII Interface: Enable - ");
	enable_mII_interface();
    ed5a:	4b65      	ldr	r3, [pc, #404]	; (eef0 <fnet_lpceth_init+0x1bc>)
    ed5c:	4a64      	ldr	r2, [pc, #400]	; (eef0 <fnet_lpceth_init+0x1bc>)
    ed5e:	6a12      	ldr	r2, [r2, #32]
    ed60:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
    ed64:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:211
	// Enable the MII interface
	enable_command_register();
    ed66:	4b62      	ldr	r3, [pc, #392]	; (eef0 <fnet_lpceth_init+0x1bc>)
    ed68:	f44f 7230 	mov.w	r2, #704	; 0x2c0
    ed6c:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:217
	lpceth_debug_printf("OK\n");

	lpceth_debug_printf("...External ETH PHY: Reg. Config - ");
	lpceth_debug_printf("OK\n");

	fnet_lpceth_write_to_phy(BASIC_CONTROL_REGISTER,BASIC_CONTROL_SOFT_RESET);
    ed70:	2000      	movs	r0, #0
    ed72:	f44f 4100 	mov.w	r1, #32768	; 0x8000
    ed76:	f7ff ff3d 	bl	ebf4 <fnet_lpceth_write_to_phy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:219
	// Loop until hardware reset completes
	for (loop = 0; loop < 0x100000; loop++) {
    ed7a:	2300      	movs	r3, #0
    ed7c:	617b      	str	r3, [r7, #20]
    ed7e:	e00d      	b.n	ed9c <fnet_lpceth_init+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:221
		//value = ReadFromPHY (PHY_REG_BMCR);
		temp = fnet_lpceth_read_from_phy(BASIC_CONTROL_REGISTER);
    ed80:	2000      	movs	r0, #0
    ed82:	f7ff ff5f 	bl	ec44 <fnet_lpceth_read_from_phy>
    ed86:	4603      	mov	r3, r0
    ed88:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:222
		if (!(temp & BASIC_CONTROL_SOFT_RESET)) {
    ed8a:	68fb      	ldr	r3, [r7, #12]
    ed8c:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
    ed90:	2b00      	cmp	r3, #0
    ed92:	d100      	bne.n	ed96 <fnet_lpceth_init+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:224
			// Reset has completed
			break;
    ed94:	e006      	b.n	eda4 <fnet_lpceth_init+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:219
	lpceth_debug_printf("...External ETH PHY: Reg. Config - ");
	lpceth_debug_printf("OK\n");

	fnet_lpceth_write_to_phy(BASIC_CONTROL_REGISTER,BASIC_CONTROL_SOFT_RESET);
	// Loop until hardware reset completes
	for (loop = 0; loop < 0x100000; loop++) {
    ed96:	697b      	ldr	r3, [r7, #20]
    ed98:	3301      	adds	r3, #1
    ed9a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:219 (discriminator 1)
    ed9c:	697b      	ldr	r3, [r7, #20]
    ed9e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
    eda2:	d3ed      	bcc.n	ed80 <fnet_lpceth_init+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:228
			// Reset has completed
			break;
		}
	}
	lpceth_debug_printf("...External ETH PHY: Read ID - ");
	temp = fnet_lpceth_read_from_phy(EMAC_PHY_REG_IDR2);
    eda4:	2003      	movs	r0, #3
    eda6:	f7ff ff4d 	bl	ec44 <fnet_lpceth_read_from_phy>
    edaa:	4603      	mov	r3, r0
    edac:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:229
	phyId = temp  << 16;
    edae:	68fb      	ldr	r3, [r7, #12]
    edb0:	041b      	lsls	r3, r3, #16
    edb2:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:230
	phyId |= fnet_lpceth_read_from_phy(EMAC_PHY_REG_IDR1);
    edb4:	2002      	movs	r0, #2
    edb6:	f7ff ff45 	bl	ec44 <fnet_lpceth_read_from_phy>
    edba:	4603      	mov	r3, r0
    edbc:	693a      	ldr	r2, [r7, #16]
    edbe:	4313      	orrs	r3, r2
    edc0:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:233


	if (phyId != 0) {
    edc2:	693b      	ldr	r3, [r7, #16]
    edc4:	2b00      	cmp	r3, #0
    edc6:	d01b      	beq.n	ee00 <fnet_lpceth_init+0xcc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:234
		fnet_lpceth_write_to_phy(BASIC_CONTROL_REGISTER,BASIC_CONTROL_ENABLE_AUTONEG);
    edc8:	2000      	movs	r0, #0
    edca:	f44f 5180 	mov.w	r1, #4096	; 0x1000
    edce:	f7ff ff11 	bl	ebf4 <fnet_lpceth_write_to_phy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:235
		for(loop=0; loop<(LPC_EMAC_MII_READ_TIMEOUT+LPC_EMAC_MII_WRITE_TIMEOUT);loop++) {
    edd2:	2300      	movs	r3, #0
    edd4:	617b      	str	r3, [r7, #20]
    edd6:	e00e      	b.n	edf6 <fnet_lpceth_init+0xc2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:236
			temp = fnet_lpceth_read_from_phy(BASIC_STATUS_REGISTER);
    edd8:	2001      	movs	r0, #1
    edda:	f7ff ff33 	bl	ec44 <fnet_lpceth_read_from_phy>
    edde:	4603      	mov	r3, r0
    ede0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:237
			if (temp & BASIC_STATUS_AUTONEG_COMPLETE) {
    ede2:	68fb      	ldr	r3, [r7, #12]
    ede4:	f003 0320 	and.w	r3, r3, #32
    ede8:	2b00      	cmp	r3, #0
    edea:	d001      	beq.n	edf0 <fnet_lpceth_init+0xbc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:238
				break;
    edec:	bf00      	nop
    edee:	e00a      	b.n	ee06 <fnet_lpceth_init+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:235
	phyId |= fnet_lpceth_read_from_phy(EMAC_PHY_REG_IDR1);


	if (phyId != 0) {
		fnet_lpceth_write_to_phy(BASIC_CONTROL_REGISTER,BASIC_CONTROL_ENABLE_AUTONEG);
		for(loop=0; loop<(LPC_EMAC_MII_READ_TIMEOUT+LPC_EMAC_MII_WRITE_TIMEOUT);loop++) {
    edf0:	697b      	ldr	r3, [r7, #20]
    edf2:	3301      	adds	r3, #1
    edf4:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:235 (discriminator 1)
    edf6:	697b      	ldr	r3, [r7, #20]
    edf8:	f5b3 2f20 	cmp.w	r3, #655360	; 0xa0000
    edfc:	d3ec      	bcc.n	edd8 <fnet_lpceth_init+0xa4>
    edfe:	e002      	b.n	ee06 <fnet_lpceth_init+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:247
	lpceth_debug_printf(", IDR2: %X\n", (phyId >> 16));
	}
	else
	{
		lpceth_debug_printf("ERROR: PHY not recognized\n");
		return FNET_ERR;
    ee00:	f04f 33ff 	mov.w	r3, #4294967295
    ee04:	e070      	b.n	eee8 <fnet_lpceth_init+0x1b4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:252
	}

	lpceth_debug_printf("...External ETH PHY: Waiting for connect eth cable - ");

	for(loop=0; loop<LPC_EMAC_PHY_TIMEOUT; loop++) {
    ee06:	2300      	movs	r3, #0
    ee08:	617b      	str	r3, [r7, #20]
    ee0a:	697b      	ldr	r3, [r7, #20]
    ee0c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
    ee10:	d217      	bcs.n	ee42 <fnet_lpceth_init+0x10e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:253
		temp = fnet_lpceth_read_from_phy(BASIC_STATUS_REGISTER);
    ee12:	2001      	movs	r0, #1
    ee14:	f7ff ff16 	bl	ec44 <fnet_lpceth_read_from_phy>
    ee18:	4603      	mov	r3, r0
    ee1a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:254
		if (temp & BASIC_STATUS_LINK_STATUS)
    ee1c:	68fb      	ldr	r3, [r7, #12]
    ee1e:	f003 0304 	and.w	r3, r3, #4
    ee22:	2b00      	cmp	r3, #0
    ee24:	d000      	beq.n	ee28 <fnet_lpceth_init+0xf4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:257
		{
			lpceth_debug_printf("OK\n");
			break;
    ee26:	e00c      	b.n	ee42 <fnet_lpceth_init+0x10e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:260
		} else
		{
			fnet_timer_delay(10); // wait a bit
    ee28:	200a      	movs	r0, #10
    ee2a:	f7fb f8af 	bl	9f8c <fnet_timer_delay>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:261
			fnet_printf("...External ETH PHY: Waiting for connect eth cable - Waitning .... %u   \r", LPC_EMAC_PHY_TIMEOUT-loop);
    ee2e:	697b      	ldr	r3, [r7, #20]
    ee30:	f5c3 3380 	rsb	r3, r3, #65536	; 0x10000
    ee34:	482f      	ldr	r0, [pc, #188]	; (eef4 <fnet_lpceth_init+0x1c0>)
    ee36:	4619      	mov	r1, r3
    ee38:	f7fd f8f4 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:264
		}
		lpceth_debug_printf("ERROR: ethernet cable not connected! \n");
		return FNET_ERR;
    ee3c:	f04f 33ff 	mov.w	r3, #4294967295
    ee40:	e052      	b.n	eee8 <fnet_lpceth_init+0x1b4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:268
	}

	// Read the autonegotiation partner register to find out if the other end is 100BASE-TX FULL
	temp = fnet_lpceth_read_from_phy(AUTONEG_ADVERTISEMENT_LINK_PART_ABILITY_REGISTER);
    ee42:	2005      	movs	r0, #5
    ee44:	f7ff fefe 	bl	ec44 <fnet_lpceth_read_from_phy>
    ee48:	4603      	mov	r3, r0
    ee4a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:269
	if (temp & AUTONEG_PARTNER_100BTX_FULL) {
    ee4c:	68fb      	ldr	r3, [r7, #12]
    ee4e:	f403 7380 	and.w	r3, r3, #256	; 0x100
    ee52:	2b00      	cmp	r3, #0
    ee54:	d011      	beq.n	ee7a <fnet_lpceth_init+0x146>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:271
		lpceth_debug_printf("...External ETH PHY: Enable FullDuplex - ");
		mac_enable_full_duplex();
    ee56:	4b26      	ldr	r3, [pc, #152]	; (eef0 <fnet_lpceth_init+0x1bc>)
    ee58:	4a25      	ldr	r2, [pc, #148]	; (eef0 <fnet_lpceth_init+0x1bc>)
    ee5a:	6852      	ldr	r2, [r2, #4]
    ee5c:	f042 0201 	orr.w	r2, r2, #1
    ee60:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:272
		command_enable_full_duplex();
    ee62:	4b23      	ldr	r3, [pc, #140]	; (eef0 <fnet_lpceth_init+0x1bc>)
    ee64:	4a22      	ldr	r2, [pc, #136]	; (eef0 <fnet_lpceth_init+0x1bc>)
    ee66:	f8d2 2100 	ldr.w	r2, [r2, #256]	; 0x100
    ee6a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
    ee6e:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:277
		lpceth_debug_printf("OK\n");

		// Should we set IPGT to 15 as NXP does?
		lpceth_debug_printf("...External ETH PHY: Set to 100MB - ");
		phy_set_100();
    ee72:	4b1f      	ldr	r3, [pc, #124]	; (eef0 <fnet_lpceth_init+0x1bc>)
    ee74:	f44f 7280 	mov.w	r2, #256	; 0x100
    ee78:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:282
		lpceth_debug_printf("OK\n");
	}

	lpceth_debug_printf("...Internal DMA: Inicialization - ");
	fnet_lpceth_init_dma();
    ee7a:	f000 f841 	bl	ef00 <fnet_lpceth_init_dma>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:289

#if FNET_CFG_MULTICAST
	set_recieve_filter(ETH_RECEIVE_BROADCAST | ETH_RECEIVE_PERFECT | ETH_RECEIVE_MULTICAST_HASH);
#else
	//set_recieve_filter(ETH_RECEIVE_BROADCAST | ETH_RECEIVE_PERFECT);
	set_recieve_filter(ETH_RECEIVE_UNICAST | ETH_RECEIVE_BROADCAST | ETH_RECEIVE_MULTICAST);		// ToDO: promiscuous mode
    ee7e:	4b1c      	ldr	r3, [pc, #112]	; (eef0 <fnet_lpceth_init+0x1bc>)
    ee80:	2207      	movs	r2, #7
    ee82:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:292
#endif

	disable_ethernet_interrupts();
    ee86:	4b1a      	ldr	r3, [pc, #104]	; (eef0 <fnet_lpceth_init+0x1bc>)
    ee88:	2200      	movs	r2, #0
    ee8a:	f8c3 2fe4 	str.w	r2, [r3, #4068]	; 0xfe4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:295

	lpceth_debug_printf(".ETH Install IRQ: - ");
	fnet_isr_vector_init(ENET_IRQn, fnet_lpceth_interrupt_handler_top, fnet_lpceth_interrupt_handler_bottom, FNET_CFG_CPU_ETH_VECTOR_PRIORITY, 0);
    ee8e:	2300      	movs	r3, #0
    ee90:	9300      	str	r3, [sp, #0]
    ee92:	201c      	movs	r0, #28
    ee94:	4918      	ldr	r1, [pc, #96]	; (eef8 <fnet_lpceth_init+0x1c4>)
    ee96:	4a19      	ldr	r2, [pc, #100]	; (eefc <fnet_lpceth_init+0x1c8>)
    ee98:	2302      	movs	r3, #2
    ee9a:	f7f3 f923 	bl	20e4 <fnet_isr_vector_init>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:299
	lpceth_debug_printf("OK\n");

	lpceth_debug_printf(".ETH Enable Rx and Tx Function: - ");
	set_enable_rxtx_functions(COMMAND_ENABLE_RECEIVE | COMMAND_ENABLE_TRANSMIT);
    ee9e:	4b14      	ldr	r3, [pc, #80]	; (eef0 <fnet_lpceth_init+0x1bc>)
    eea0:	4a13      	ldr	r2, [pc, #76]	; (eef0 <fnet_lpceth_init+0x1bc>)
    eea2:	f8d2 2100 	ldr.w	r2, [r2, #256]	; 0x100
    eea6:	f022 0233 	bic.w	r2, r2, #51	; 0x33
    eeaa:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
    eeae:	4b10      	ldr	r3, [pc, #64]	; (eef0 <fnet_lpceth_init+0x1bc>)
    eeb0:	4a0f      	ldr	r2, [pc, #60]	; (eef0 <fnet_lpceth_init+0x1bc>)
    eeb2:	f8d2 2100 	ldr.w	r2, [r2, #256]	; 0x100
    eeb6:	f042 0203 	orr.w	r2, r2, #3
    eeba:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:300
	mac_enable_receive_frames();
    eebe:	4b0c      	ldr	r3, [pc, #48]	; (eef0 <fnet_lpceth_init+0x1bc>)
    eec0:	4a0b      	ldr	r2, [pc, #44]	; (eef0 <fnet_lpceth_init+0x1bc>)
    eec2:	6812      	ldr	r2, [r2, #0]
    eec4:	f042 0201 	orr.w	r2, r2, #1
    eec8:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:304
	lpceth_debug_printf("OK\n");

	lpceth_debug_printf(".ETH Enable Rx and Tx IRQ: - ");
	enable_ethernet_interrupts(ETH_INTSTATUS_RX_DONE | ETH_INTSTATUS_TX_DONE | ETH_INTSTATUS_RX_OVERRUN | ETH_INTSTATUS_TX_UNDERRUN);
    eeca:	4b09      	ldr	r3, [pc, #36]	; (eef0 <fnet_lpceth_init+0x1bc>)
    eecc:	2299      	movs	r2, #153	; 0x99
    eece:	f8c3 2fe4 	str.w	r2, [r3, #4068]	; 0xfe4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:305
	clear_ethernet_interrupts();
    eed2:	4b07      	ldr	r3, [pc, #28]	; (eef0 <fnet_lpceth_init+0x1bc>)
    eed4:	22ff      	movs	r2, #255	; 0xff
    eed6:	f8c3 2fe8 	str.w	r2, [r3, #4072]	; 0xfe8
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:307

	NVIC_EnableIRQ(ENET_IRQn);
    eeda:	201c      	movs	r0, #28
    eedc:	f7ff fe72 	bl	ebc4 <NVIC_EnableIRQ>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:308
	fnet_cpu_irq_enable(ENET_IRQn);
    eee0:	201c      	movs	r0, #28
    eee2:	f7ff fcf3 	bl	e8cc <fnet_cpu_irq_enable>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:313

	lpceth_debug_printf("OK\n");


	return FNET_OK;
    eee6:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:314
}
    eee8:	4618      	mov	r0, r3
    eeea:	3718      	adds	r7, #24
    eeec:	46bd      	mov	sp, r7
    eeee:	bd80      	pop	{r7, pc}
    eef0:	20084000 	.word	0x20084000
    eef4:	000143e0 	.word	0x000143e0
    eef8:	0000f40d 	.word	0x0000f40d
    eefc:	0000f4e5 	.word	0x0000f4e5

0000ef00 <fnet_lpceth_init_dma>:
fnet_lpceth_init_dma():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:316

void fnet_lpceth_init_dma() {
    ef00:	b580      	push	{r7, lr}
    ef02:	b084      	sub	sp, #16
    ef04:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:318
	//fnet_printf("Problem....");
	fnet_memset((void *)FNET_LPCETH_DMA_BLOCK_START,0,FNET_LPCETH_DMA_BLOCK_LEN);
    ef06:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
    ef0a:	2100      	movs	r1, #0
    ef0c:	f643 72ff 	movw	r2, #16383	; 0x3fff
    ef10:	f7f6 fe5e 	bl	5bd0 <fnet_memset>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:321
	uint8_t loop;

	LPC_EMAC->RxDescriptor = FNET_LPCETH_DMA_BLOCK_START;
    ef14:	4b46      	ldr	r3, [pc, #280]	; (f030 <fnet_lpceth_init_dma+0x130>)
    ef16:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
    ef1a:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:322
	LPC_EMAC->RxStatus = LPC_EMAC->RxDescriptor + sizeof(fnet_lpceth_rx_descriptor) * NUM_OF_RX_FRAGMENTS;
    ef1e:	4b44      	ldr	r3, [pc, #272]	; (f030 <fnet_lpceth_init_dma+0x130>)
    ef20:	4a43      	ldr	r2, [pc, #268]	; (f030 <fnet_lpceth_init_dma+0x130>)
    ef22:	f8d2 2108 	ldr.w	r2, [r2, #264]	; 0x108
    ef26:	3240      	adds	r2, #64	; 0x40
    ef28:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:323
	rxFragmentPtr = (uint8_t *)(LPC_EMAC->RxStatus + sizeof(fnet_lpceth_rx_status) * NUM_OF_RX_FRAGMENTS);
    ef2c:	4b40      	ldr	r3, [pc, #256]	; (f030 <fnet_lpceth_init_dma+0x130>)
    ef2e:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
    ef32:	3340      	adds	r3, #64	; 0x40
    ef34:	461a      	mov	r2, r3
    ef36:	4b3f      	ldr	r3, [pc, #252]	; (f034 <fnet_lpceth_init_dma+0x134>)
    ef38:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:324
	LPC_EMAC->TxDescriptor = (uint8_t *) (rxFragmentPtr + LPC_ETH_MAX_FRAME_SIZE*NUM_OF_RX_FRAGMENTS);
    ef3a:	4b3d      	ldr	r3, [pc, #244]	; (f030 <fnet_lpceth_init_dma+0x130>)
    ef3c:	4a3d      	ldr	r2, [pc, #244]	; (f034 <fnet_lpceth_init_dma+0x134>)
    ef3e:	6812      	ldr	r2, [r2, #0]
    ef40:	f502 5240 	add.w	r2, r2, #12288	; 0x3000
    ef44:	f8c3 211c 	str.w	r2, [r3, #284]	; 0x11c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:325
	LPC_EMAC->TxStatus = LPC_EMAC->TxDescriptor + sizeof(fnet_lpceth_tx_descriptor) * NUM_OF_TX_FRAGMENTS;
    ef48:	4b39      	ldr	r3, [pc, #228]	; (f030 <fnet_lpceth_init_dma+0x130>)
    ef4a:	4a39      	ldr	r2, [pc, #228]	; (f030 <fnet_lpceth_init_dma+0x130>)
    ef4c:	f8d2 211c 	ldr.w	r2, [r2, #284]	; 0x11c
    ef50:	3240      	adds	r2, #64	; 0x40
    ef52:	f8c3 2120 	str.w	r2, [r3, #288]	; 0x120
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:326
    txFragmentPtr = (uint8_t *)(LPC_EMAC->TxStatus + sizeof(fnet_lpceth_tx_status) * NUM_OF_TX_FRAGMENTS);
    ef56:	4b36      	ldr	r3, [pc, #216]	; (f030 <fnet_lpceth_init_dma+0x130>)
    ef58:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
    ef5c:	3320      	adds	r3, #32
    ef5e:	461a      	mov	r2, r3
    ef60:	4b35      	ldr	r3, [pc, #212]	; (f038 <fnet_lpceth_init_dma+0x138>)
    ef62:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:327
    LPC_EMAC->RxDescriptorNumber = NUM_OF_RX_FRAGMENTS - 1;
    ef64:	4b32      	ldr	r3, [pc, #200]	; (f030 <fnet_lpceth_init_dma+0x130>)
    ef66:	2207      	movs	r2, #7
    ef68:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:328
    LPC_EMAC->TxDescriptorNumber = NUM_OF_TX_FRAGMENTS - 1;
    ef6c:	4b30      	ldr	r3, [pc, #192]	; (f030 <fnet_lpceth_init_dma+0x130>)
    ef6e:	2207      	movs	r2, #7
    ef70:	f8c3 2124 	str.w	r2, [r3, #292]	; 0x124
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:330

    LPC_EMAC->RxConsumeIndex = 0;
    ef74:	4b2e      	ldr	r3, [pc, #184]	; (f030 <fnet_lpceth_init_dma+0x130>)
    ef76:	2200      	movs	r2, #0
    ef78:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:331
    LPC_EMAC->TxProduceIndex = 0;
    ef7c:	4b2c      	ldr	r3, [pc, #176]	; (f030 <fnet_lpceth_init_dma+0x130>)
    ef7e:	2200      	movs	r2, #0
    ef80:	f8c3 2128 	str.w	r2, [r3, #296]	; 0x128
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:334


    for(loop=0; loop<NUM_OF_RX_FRAGMENTS; loop++) {
    ef84:	2300      	movs	r3, #0
    ef86:	73fb      	strb	r3, [r7, #15]
    ef88:	e02e      	b.n	efe8 <fnet_lpceth_init_dma+0xe8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:335 (discriminator 2)
    	fnet_lpceth_rx_descriptor *rxDesc = (fnet_lpceth_rx_descriptor *) (LPC_EMAC->RxDescriptor + loop*sizeof(fnet_lpceth_rx_descriptor));
    ef8a:	4b29      	ldr	r3, [pc, #164]	; (f030 <fnet_lpceth_init_dma+0x130>)
    ef8c:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
    ef90:	7bfb      	ldrb	r3, [r7, #15]
    ef92:	00db      	lsls	r3, r3, #3
    ef94:	4413      	add	r3, r2
    ef96:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:336 (discriminator 2)
    	rxDesc->controlWord = FNET_LPCETH_RX_DESCRIPTOR_CNTRL_INT_ENABLE | (LPC_ETH_MAX_FRAME_SIZE-1);
    ef98:	68bb      	ldr	r3, [r7, #8]
    ef9a:	f04f 32ff 	mov.w	r2, #4294967295
    ef9e:	711a      	strb	r2, [r3, #4]
    efa0:	2200      	movs	r2, #0
    efa2:	f042 0205 	orr.w	r2, r2, #5
    efa6:	715a      	strb	r2, [r3, #5]
    efa8:	2200      	movs	r2, #0
    efaa:	719a      	strb	r2, [r3, #6]
    efac:	2200      	movs	r2, #0
    efae:	f062 027f 	orn	r2, r2, #127	; 0x7f
    efb2:	71da      	strb	r2, [r3, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:337 (discriminator 2)
    	rxDesc->packetPtr = rxFragmentPtr + loop*LPC_ETH_MAX_FRAME_SIZE;
    efb4:	4b1f      	ldr	r3, [pc, #124]	; (f034 <fnet_lpceth_init_dma+0x134>)
    efb6:	6819      	ldr	r1, [r3, #0]
    efb8:	7bfa      	ldrb	r2, [r7, #15]
    efba:	4613      	mov	r3, r2
    efbc:	005b      	lsls	r3, r3, #1
    efbe:	4413      	add	r3, r2
    efc0:	025b      	lsls	r3, r3, #9
    efc2:	18ca      	adds	r2, r1, r3
    efc4:	68bb      	ldr	r3, [r7, #8]
    efc6:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:338 (discriminator 2)
    	fnet_lpceth_rx_status *rxStatus = (fnet_lpceth_rx_status *) (LPC_EMAC->RxStatus + loop*sizeof(fnet_lpceth_rx_status));
    efc8:	4b19      	ldr	r3, [pc, #100]	; (f030 <fnet_lpceth_init_dma+0x130>)
    efca:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
    efce:	7bfb      	ldrb	r3, [r7, #15]
    efd0:	00db      	lsls	r3, r3, #3
    efd2:	4413      	add	r3, r2
    efd4:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:339 (discriminator 2)
    	rxStatus->statusInfo = 0;
    efd6:	687b      	ldr	r3, [r7, #4]
    efd8:	2200      	movs	r2, #0
    efda:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:340 (discriminator 2)
    	rxStatus->statusHashCRC = 0;
    efdc:	687b      	ldr	r3, [r7, #4]
    efde:	2200      	movs	r2, #0
    efe0:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:334 (discriminator 2)

    LPC_EMAC->RxConsumeIndex = 0;
    LPC_EMAC->TxProduceIndex = 0;


    for(loop=0; loop<NUM_OF_RX_FRAGMENTS; loop++) {
    efe2:	7bfb      	ldrb	r3, [r7, #15]
    efe4:	3301      	adds	r3, #1
    efe6:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:334 (discriminator 1)
    efe8:	7bfb      	ldrb	r3, [r7, #15]
    efea:	2b07      	cmp	r3, #7
    efec:	d9cd      	bls.n	ef8a <fnet_lpceth_init_dma+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:344
    	rxStatus->statusInfo = 0;
    	rxStatus->statusHashCRC = 0;
    	//rxStatus->controlWord = 0;
    }

    for(loop=0; loop<NUM_OF_TX_FRAGMENTS; loop++) {
    efee:	2300      	movs	r3, #0
    eff0:	73fb      	strb	r3, [r7, #15]
    eff2:	e017      	b.n	f024 <fnet_lpceth_init_dma+0x124>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:345 (discriminator 2)
    	fnet_lpceth_tx_descriptor *txDesc = (fnet_lpceth_tx_descriptor * )(LPC_EMAC->TxDescriptor + loop*sizeof(fnet_lpceth_tx_descriptor));
    eff4:	4b0e      	ldr	r3, [pc, #56]	; (f030 <fnet_lpceth_init_dma+0x130>)
    eff6:	f8d3 211c 	ldr.w	r2, [r3, #284]	; 0x11c
    effa:	7bfb      	ldrb	r3, [r7, #15]
    effc:	00db      	lsls	r3, r3, #3
    effe:	4413      	add	r3, r2
    f000:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:346 (discriminator 2)
    	txDesc->packetPtr = txFragmentPtr + loop*LPC_ETH_MAX_FRAME_SIZE;
    f002:	4b0d      	ldr	r3, [pc, #52]	; (f038 <fnet_lpceth_init_dma+0x138>)
    f004:	6819      	ldr	r1, [r3, #0]
    f006:	7bfa      	ldrb	r2, [r7, #15]
    f008:	4613      	mov	r3, r2
    f00a:	005b      	lsls	r3, r3, #1
    f00c:	4413      	add	r3, r2
    f00e:	025b      	lsls	r3, r3, #9
    f010:	18ca      	adds	r2, r1, r3
    f012:	683b      	ldr	r3, [r7, #0]
    f014:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:350 (discriminator 2)
    	// No need to touch this at the moment
    	//fnet_lpceth_tx_status *txStatus = (fnet_lpceth_tx_status *) (LPC_EMAC->TxStatus + loop*sizeof(fnet_lpceth_tx_status));
    	//txStatus->controlWord = 0;
    	txDescriptorStatus[loop] = 0;
    f016:	7bfb      	ldrb	r3, [r7, #15]
    f018:	4a08      	ldr	r2, [pc, #32]	; (f03c <fnet_lpceth_init_dma+0x13c>)
    f01a:	2100      	movs	r1, #0
    f01c:	54d1      	strb	r1, [r2, r3]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:344 (discriminator 2)
    	rxStatus->statusInfo = 0;
    	rxStatus->statusHashCRC = 0;
    	//rxStatus->controlWord = 0;
    }

    for(loop=0; loop<NUM_OF_TX_FRAGMENTS; loop++) {
    f01e:	7bfb      	ldrb	r3, [r7, #15]
    f020:	3301      	adds	r3, #1
    f022:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:344 (discriminator 1)
    f024:	7bfb      	ldrb	r3, [r7, #15]
    f026:	2b07      	cmp	r3, #7
    f028:	d9e4      	bls.n	eff4 <fnet_lpceth_init_dma+0xf4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:353
    	//fnet_lpceth_tx_status *txStatus = (fnet_lpceth_tx_status *) (LPC_EMAC->TxStatus + loop*sizeof(fnet_lpceth_tx_status));
    	//txStatus->controlWord = 0;
    	txDescriptorStatus[loop] = 0;
    }

}
    f02a:	3710      	adds	r7, #16
    f02c:	46bd      	mov	sp, r7
    f02e:	bd80      	pop	{r7, pc}
    f030:	20084000 	.word	0x20084000
    f034:	1000bb3c 	.word	0x1000bb3c
    f038:	1000bb38 	.word	0x1000bb38
    f03c:	1000bb24 	.word	0x1000bb24

0000f040 <fnet_lpceth_release>:
fnet_lpceth_release():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:356

void fnet_lpceth_release(fnet_netif_t *netif)
{
    f040:	b480      	push	{r7}
    f042:	b083      	sub	sp, #12
    f044:	af00      	add	r7, sp, #0
    f046:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:357
}
    f048:	370c      	adds	r7, #12
    f04a:	46bd      	mov	sp, r7
    f04c:	f85d 7b04 	ldr.w	r7, [sp], #4
    f050:	4770      	bx	lr
    f052:	bf00      	nop

0000f054 <fnet_lpceth_input>:
fnet_lpceth_input():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:359

void fnet_lpceth_input(fnet_netif_t *netif) {
    f054:	b580      	push	{r7, lr}
    f056:	b08c      	sub	sp, #48	; 0x30
    f058:	af00      	add	r7, sp, #0
    f05a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:360
    while (recvPacketsWaiting > 0) {
    f05c:	e081      	b.n	f162 <fnet_lpceth_input+0x10e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:362
#if LPC_DEBUG_LEDS
        led1_on();
    f05e:	2001      	movs	r0, #1
    f060:	f44f 5100 	mov.w	r1, #8192	; 0x2000
    f064:	2200      	movs	r2, #0
    f066:	f000 fe1f 	bl	fca8 <GPIO_OutputValue>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:366
#endif
        fnet_netbuf_t *nb;
        fnet_eth_header_t *ethheader;
        fnet_lpceth_rx_descriptor *rxDescriptor = (fnet_lpceth_rx_descriptor *) (LPC_EMAC->RxDescriptor + LPC_EMAC->RxConsumeIndex * sizeof (fnet_lpceth_rx_descriptor));
    f06a:	4b42      	ldr	r3, [pc, #264]	; (f174 <fnet_lpceth_input+0x120>)
    f06c:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
    f070:	4b40      	ldr	r3, [pc, #256]	; (f174 <fnet_lpceth_input+0x120>)
    f072:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
    f076:	00db      	lsls	r3, r3, #3
    f078:	4413      	add	r3, r2
    f07a:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:367
        fnet_lpceth_rx_status *rxStatus = (fnet_lpceth_rx_status *) (LPC_EMAC->RxStatus + LPC_EMAC->RxConsumeIndex * sizeof (fnet_lpceth_rx_status));
    f07c:	4b3d      	ldr	r3, [pc, #244]	; (f174 <fnet_lpceth_input+0x120>)
    f07e:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
    f082:	4b3c      	ldr	r3, [pc, #240]	; (f174 <fnet_lpceth_input+0x120>)
    f084:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
    f088:	00db      	lsls	r3, r3, #3
    f08a:	4413      	add	r3, r2
    f08c:	62bb      	str	r3, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:368
        if (rxStatus->statusInfo != 0) {
    f08e:	6abb      	ldr	r3, [r7, #40]	; 0x28
    f090:	681b      	ldr	r3, [r3, #0]
    f092:	2b00      	cmp	r3, #0
    f094:	d044      	beq.n	f120 <fnet_lpceth_input+0xcc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:370

            uint16_t pktSize = (rxStatus->statusInfo & RX_STATUS_SIZE_BITS) - 1;
    f096:	6abb      	ldr	r3, [r7, #40]	; 0x28
    f098:	681b      	ldr	r3, [r3, #0]
    f09a:	b29b      	uxth	r3, r3
    f09c:	f3c3 030a 	ubfx	r3, r3, #0, #11
    f0a0:	b29b      	uxth	r3, r3
    f0a2:	3b01      	subs	r3, #1
    f0a4:	84fb      	strh	r3, [r7, #38]	; 0x26
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:371
            uint32_t isOverrun = (rxStatus->statusInfo & (1 << 28));
    f0a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
    f0a8:	681b      	ldr	r3, [r3, #0]
    f0aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
    f0ae:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:372
            if (isOverrun != 0) {
    f0b0:	6a3b      	ldr	r3, [r7, #32]
    f0b2:	2b00      	cmp	r3, #0
    f0b4:	d002      	beq.n	f0bc <fnet_lpceth_input+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:373
                fnet_printf("Overrun\n");
    f0b6:	4830      	ldr	r0, [pc, #192]	; (f178 <fnet_lpceth_input+0x124>)
    f0b8:	f7fc ffb4 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:379
            }
            /* Note - the ethernet header type will be in big endian, but
             * this has already been accounted for elsewhere in FNET.
             * (do not do a endian conversion here)
             */
            ethheader = (fnet_eth_header_t *) (rxDescriptor->packetPtr);
    f0bc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    f0be:	681b      	ldr	r3, [r3, #0]
    f0c0:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:382
            //fnet_eth_trace("\nRX", ethheader);

            void *layer3Ptr = rxDescriptor->packetPtr + sizeof (fnet_eth_header_t);
    f0c2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    f0c4:	681b      	ldr	r3, [r3, #0]
    f0c6:	330e      	adds	r3, #14
    f0c8:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:383
            uint16_t sizeOfLayer3 = pktSize - sizeof (fnet_eth_header_t);
    f0ca:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
    f0cc:	3b0e      	subs	r3, #14
    f0ce:	82fb      	strh	r3, [r7, #22]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:385

            nb = fnet_netbuf_from_buf(layer3Ptr, sizeOfLayer3, FNET_TRUE);
    f0d0:	8afb      	ldrh	r3, [r7, #22]
    f0d2:	69b8      	ldr	r0, [r7, #24]
    f0d4:	4619      	mov	r1, r3
    f0d6:	2201      	movs	r2, #1
    f0d8:	f7f3 fc52 	bl	2980 <fnet_netbuf_from_buf>
    f0dc:	6138      	str	r0, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:386
            if (nb != 0) {
    f0de:	693b      	ldr	r3, [r7, #16]
    f0e0:	2b00      	cmp	r3, #0
    f0e2:	d00d      	beq.n	f100 <fnet_lpceth_input+0xac>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:387
                fnet_eth_prot_input(&fnet_eth0_if, nb, ethheader->type);
    f0e4:	69fb      	ldr	r3, [r7, #28]
    f0e6:	899b      	ldrh	r3, [r3, #12]
    f0e8:	b29b      	uxth	r3, r3
    f0ea:	4824      	ldr	r0, [pc, #144]	; (f17c <fnet_lpceth_input+0x128>)
    f0ec:	6939      	ldr	r1, [r7, #16]
    f0ee:	461a      	mov	r2, r3
    f0f0:	f7f1 ff20 	bl	f34 <fnet_eth_prot_input>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:388
                recvPackets++;
    f0f4:	4b22      	ldr	r3, [pc, #136]	; (f180 <fnet_lpceth_input+0x12c>)
    f0f6:	681b      	ldr	r3, [r3, #0]
    f0f8:	1c5a      	adds	r2, r3, #1
    f0fa:	4b21      	ldr	r3, [pc, #132]	; (f180 <fnet_lpceth_input+0x12c>)
    f0fc:	601a      	str	r2, [r3, #0]
    f0fe:	e002      	b.n	f106 <fnet_lpceth_input+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:390
            } else {
                fnet_printf("Could not allocate netbuf for RX packet\n");
    f100:	4820      	ldr	r0, [pc, #128]	; (f184 <fnet_lpceth_input+0x130>)
    f102:	f7fc ff8f 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:396
            }

            // Reset the status and descriptor
            //rxStatus = 0;
            //fnet_memset_zero(rxStatus,8);
            fnet_memset_zero(rxDescriptor->packetPtr, pktSize);
    f106:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    f108:	681a      	ldr	r2, [r3, #0]
    f10a:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
    f10c:	4610      	mov	r0, r2
    f10e:	4619      	mov	r1, r3
    f110:	f7f6 fd7c 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:398

            rxStatus->statusInfo = 0;
    f114:	6abb      	ldr	r3, [r7, #40]	; 0x28
    f116:	2200      	movs	r2, #0
    f118:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:399
            rxStatus->statusHashCRC = 0;
    f11a:	6abb      	ldr	r3, [r7, #40]	; 0x28
    f11c:	2200      	movs	r2, #0
    f11e:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:403
        }
        //rxDescriptor->controlWord = (1<<31);

        uint8_t nextDescriptor = LPC_EMAC->RxConsumeIndex + 1;
    f120:	4b14      	ldr	r3, [pc, #80]	; (f174 <fnet_lpceth_input+0x120>)
    f122:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
    f126:	b2db      	uxtb	r3, r3
    f128:	3301      	adds	r3, #1
    f12a:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:404
        if (nextDescriptor > LPC_EMAC->RxDescriptorNumber) {
    f12c:	7bfa      	ldrb	r2, [r7, #15]
    f12e:	4b11      	ldr	r3, [pc, #68]	; (f174 <fnet_lpceth_input+0x120>)
    f130:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
    f134:	429a      	cmp	r2, r3
    f136:	d904      	bls.n	f142 <fnet_lpceth_input+0xee>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:405
            LPC_EMAC->RxConsumeIndex = 0;
    f138:	4b0e      	ldr	r3, [pc, #56]	; (f174 <fnet_lpceth_input+0x120>)
    f13a:	2200      	movs	r2, #0
    f13c:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
    f140:	e003      	b.n	f14a <fnet_lpceth_input+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:407
        } else {
            LPC_EMAC->RxConsumeIndex = nextDescriptor;
    f142:	4b0c      	ldr	r3, [pc, #48]	; (f174 <fnet_lpceth_input+0x120>)
    f144:	7bfa      	ldrb	r2, [r7, #15]
    f146:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:410
        }
        //processingRxPacket = 0;
        recvPacketsWaiting--;
    f14a:	4b0f      	ldr	r3, [pc, #60]	; (f188 <fnet_lpceth_input+0x134>)
    f14c:	781b      	ldrb	r3, [r3, #0]
    f14e:	3b01      	subs	r3, #1
    f150:	b2da      	uxtb	r2, r3
    f152:	4b0d      	ldr	r3, [pc, #52]	; (f188 <fnet_lpceth_input+0x134>)
    f154:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:412
#if LPC_DEBUG_LEDS
        led1_off();
    f156:	2001      	movs	r0, #1
    f158:	f44f 5100 	mov.w	r1, #8192	; 0x2000
    f15c:	2201      	movs	r2, #1
    f15e:	f000 fda3 	bl	fca8 <GPIO_OutputValue>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:360 (discriminator 1)
void fnet_lpceth_release(fnet_netif_t *netif)
{
}

void fnet_lpceth_input(fnet_netif_t *netif) {
    while (recvPacketsWaiting > 0) {
    f162:	4b09      	ldr	r3, [pc, #36]	; (f188 <fnet_lpceth_input+0x134>)
    f164:	781b      	ldrb	r3, [r3, #0]
    f166:	2b00      	cmp	r3, #0
    f168:	f47f af79 	bne.w	f05e <fnet_lpceth_input+0xa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:415
        recvPacketsWaiting--;
#if LPC_DEBUG_LEDS
        led1_off();
#endif
    }
}
    f16c:	3730      	adds	r7, #48	; 0x30
    f16e:	46bd      	mov	sp, r7
    f170:	bd80      	pop	{r7, pc}
    f172:	bf00      	nop
    f174:	20084000 	.word	0x20084000
    f178:	0001442c 	.word	0x0001442c
    f17c:	10000284 	.word	0x10000284
    f180:	1000ba94 	.word	0x1000ba94
    f184:	00014438 	.word	0x00014438
    f188:	1000ba9d 	.word	0x1000ba9d

0000f18c <fnet_lpceth_output>:
fnet_lpceth_output():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:417

void fnet_lpceth_output(fnet_netif_t *netif, unsigned short type, const fnet_mac_addr_t dest_addr, fnet_netbuf_t* nb) {
    f18c:	b580      	push	{r7, lr}
    f18e:	b08a      	sub	sp, #40	; 0x28
    f190:	af00      	add	r7, sp, #0
    f192:	60f8      	str	r0, [r7, #12]
    f194:	607a      	str	r2, [r7, #4]
    f196:	603b      	str	r3, [r7, #0]
    f198:	460b      	mov	r3, r1
    f19a:	817b      	strh	r3, [r7, #10]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:419
#if LPC_DEBUG_LEDS
	led2_on();
    f19c:	2001      	movs	r0, #1
    f19e:	f44f 2180 	mov.w	r1, #262144	; 0x40000
    f1a2:	2200      	movs	r2, #0
    f1a4:	f000 fd80 	bl	fca8 <GPIO_OutputValue>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:421
#endif
	uint8_t currentIndex = LPC_EMAC->TxProduceIndex;
    f1a8:	4b4e      	ldr	r3, [pc, #312]	; (f2e4 <fnet_lpceth_output+0x158>)
    f1aa:	f8d3 3128 	ldr.w	r3, [r3, #296]	; 0x128
    f1ae:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:422
	uint8_t nextIndex = currentIndex+1;
    f1b2:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
    f1b6:	3301      	adds	r3, #1
    f1b8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:424

	if (nb->total_length == 0) {
    f1bc:	683b      	ldr	r3, [r7, #0]
    f1be:	695b      	ldr	r3, [r3, #20]
    f1c0:	2b00      	cmp	r3, #0
    f1c2:	d100      	bne.n	f1c6 <fnet_lpceth_output+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:425
		return;
    f1c4:	e08a      	b.n	f2dc <fnet_lpceth_output+0x150>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:432
        /* Unlike the other FNET targets, we don't have enough space 
         * to hold frames until TX fragments are available, so discard them.
         * Perhaps we can do a more intelligent method, i.e let certain
         * types (ARP) through always?
         */
	if (usedTxDescr == (NUM_OF_TX_FRAGMENTS)) {
    f1c6:	4b48      	ldr	r3, [pc, #288]	; (f2e8 <fnet_lpceth_output+0x15c>)
    f1c8:	781b      	ldrb	r3, [r3, #0]
    f1ca:	2b08      	cmp	r3, #8
    f1cc:	d103      	bne.n	f1d6 <fnet_lpceth_output+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:434
			lpceth_debug_printf("Out of TX descriptors!");
                        fnet_netbuf_free_chain(nb);
    f1ce:	6838      	ldr	r0, [r7, #0]
    f1d0:	f7f3 fc96 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:435
			return; // memory full
    f1d4:	e082      	b.n	f2dc <fnet_lpceth_output+0x150>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:438
	}
	//led2_on();
	if (nextIndex > LPC_EMAC->TxDescriptorNumber) {
    f1d6:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
    f1da:	4b42      	ldr	r3, [pc, #264]	; (f2e4 <fnet_lpceth_output+0x158>)
    f1dc:	f8d3 3124 	ldr.w	r3, [r3, #292]	; 0x124
    f1e0:	429a      	cmp	r2, r3
    f1e2:	d902      	bls.n	f1ea <fnet_lpceth_output+0x5e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:439
		nextIndex = 0; // loop around once we reach the maximum number of descriptors
    f1e4:	2300      	movs	r3, #0
    f1e6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:442
	}

	if (txDescriptorStatus[currentIndex]) {
    f1ea:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
    f1ee:	4a3f      	ldr	r2, [pc, #252]	; (f2ec <fnet_lpceth_output+0x160>)
    f1f0:	5cd3      	ldrb	r3, [r2, r3]
    f1f2:	2b00      	cmp	r3, #0
    f1f4:	d009      	beq.n	f20a <fnet_lpceth_output+0x7e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:443
		fnet_println("TX Descriptor %d busy",currentIndex);
    f1f6:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
    f1fa:	483d      	ldr	r0, [pc, #244]	; (f2f0 <fnet_lpceth_output+0x164>)
    f1fc:	4619      	mov	r1, r3
    f1fe:	f7fc ff27 	bl	c050 <fnet_println>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:444
                fnet_netbuf_free_chain(nb);
    f202:	6838      	ldr	r0, [r7, #0]
    f204:	f7f3 fc7c 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:445
                return;
    f208:	e068      	b.n	f2dc <fnet_lpceth_output+0x150>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:447
	}
	txDescriptorStatus[currentIndex] = 1;
    f20a:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
    f20e:	4a37      	ldr	r2, [pc, #220]	; (f2ec <fnet_lpceth_output+0x160>)
    f210:	2101      	movs	r1, #1
    f212:	54d1      	strb	r1, [r2, r3]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:449
	lpceth_debug_printf("+----->ETH->Tx: ProdId:%d ConsId:%d\n",LPC_EMAC->TxProduceIndex,LPC_EMAC->TxConsumeIndex);
	fnet_lpceth_tx_descriptor *descriptor = (fnet_lpceth_tx_descriptor *)(LPC_EMAC->TxDescriptor + currentIndex*sizeof(fnet_lpceth_tx_descriptor));
    f214:	4b33      	ldr	r3, [pc, #204]	; (f2e4 <fnet_lpceth_output+0x158>)
    f216:	f8d3 211c 	ldr.w	r2, [r3, #284]	; 0x11c
    f21a:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
    f21e:	00db      	lsls	r3, r3, #3
    f220:	4413      	add	r3, r2
    f222:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:450
	fnet_lpceth_tx_status *status = (fnet_lpceth_tx_status *)(LPC_EMAC->TxStatus + currentIndex*sizeof(fnet_lpceth_tx_status));
    f224:	4b2f      	ldr	r3, [pc, #188]	; (f2e4 <fnet_lpceth_output+0x158>)
    f226:	f8d3 2120 	ldr.w	r2, [r3, #288]	; 0x120
    f22a:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
    f22e:	009b      	lsls	r3, r3, #2
    f230:	4413      	add	r3, r2
    f232:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:451
	fnet_memset(descriptor->packetPtr,0,1536);
    f234:	6a3b      	ldr	r3, [r7, #32]
    f236:	681b      	ldr	r3, [r3, #0]
    f238:	4618      	mov	r0, r3
    f23a:	2100      	movs	r1, #0
    f23c:	f44f 62c0 	mov.w	r2, #1536	; 0x600
    f240:	f7f6 fcc6 	bl	5bd0 <fnet_memset>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:453
	/* Construct the ethernet header directly onto the TX packet buffer */
	fnet_eth_header_t *ethHeader = (fnet_eth_header_t *)descriptor->packetPtr;
    f244:	6a3b      	ldr	r3, [r7, #32]
    f246:	681b      	ldr	r3, [r3, #0]
    f248:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:454
	fnet_memcpy (ethHeader->destination_addr, dest_addr, sizeof(fnet_mac_addr_t));
    f24a:	69bb      	ldr	r3, [r7, #24]
    f24c:	4618      	mov	r0, r3
    f24e:	6879      	ldr	r1, [r7, #4]
    f250:	2206      	movs	r2, #6
    f252:	f7f6 fb1f 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:455
	fnet_lpceth_get_hw_addr(netif, ethHeader->source_addr);
    f256:	69bb      	ldr	r3, [r7, #24]
    f258:	3306      	adds	r3, #6
    f25a:	68f8      	ldr	r0, [r7, #12]
    f25c:	4619      	mov	r1, r3
    f25e:	f000 f84b 	bl	f2f8 <fnet_lpceth_get_hw_addr>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:457

	ethHeader->type=fnet_htons(type);
    f262:	897b      	ldrh	r3, [r7, #10]
    f264:	4618      	mov	r0, r3
    f266:	f000 f95b 	bl	f520 <fnet_htons>
    f26a:	4603      	mov	r3, r0
    f26c:	461a      	mov	r2, r3
    f26e:	69bb      	ldr	r3, [r7, #24]
    f270:	819a      	strh	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:459

	void *packetData = descriptor->packetPtr + FNET_ETH_HDR_SIZE;
    f272:	6a3b      	ldr	r3, [r7, #32]
    f274:	681b      	ldr	r3, [r3, #0]
    f276:	330e      	adds	r3, #14
    f278:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:460
	fnet_netbuf_to_buf(nb, 0, FNET_NETBUF_COPYALL, packetData);
    f27a:	6838      	ldr	r0, [r7, #0]
    f27c:	2100      	movs	r1, #0
    f27e:	f04f 32ff 	mov.w	r2, #4294967295
    f282:	697b      	ldr	r3, [r7, #20]
    f284:	f7f3 fb98 	bl	29b8 <fnet_netbuf_to_buf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:462

	uint16_t frameSize = nb->total_length + FNET_ETH_HDR_SIZE;
    f288:	683b      	ldr	r3, [r7, #0]
    f28a:	695b      	ldr	r3, [r3, #20]
    f28c:	b29b      	uxth	r3, r3
    f28e:	330e      	adds	r3, #14
    f290:	827b      	strh	r3, [r7, #18]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:465

	//descriptor->controlWord &= ~TX_DESCRIPTOR_SIZE_BITS;
	descriptor->controlWord = (frameSize-1) | TX_DESCRIPTOR_LAST_FRAME | FNET_LPCETH_TX_DESCRIPTOR_CNTRL_INT_ENABLE ; // don't override any defaults
    f292:	8a7b      	ldrh	r3, [r7, #18]
    f294:	3b01      	subs	r3, #1
    f296:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
    f29a:	461a      	mov	r2, r3
    f29c:	6a3b      	ldr	r3, [r7, #32]
    f29e:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:467

	LPC_EMAC->TxProduceIndex = nextIndex;
    f2a0:	4b10      	ldr	r3, [pc, #64]	; (f2e4 <fnet_lpceth_output+0x158>)
    f2a2:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
    f2a6:	f8c3 2128 	str.w	r2, [r3, #296]	; 0x128
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:468
	usedTxDescr++;
    f2aa:	4b0f      	ldr	r3, [pc, #60]	; (f2e8 <fnet_lpceth_output+0x15c>)
    f2ac:	781b      	ldrb	r3, [r3, #0]
    f2ae:	3301      	adds	r3, #1
    f2b0:	b2da      	uxtb	r2, r3
    f2b2:	4b0d      	ldr	r3, [pc, #52]	; (f2e8 <fnet_lpceth_output+0x15c>)
    f2b4:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:469
	sentPackets++;
    f2b6:	4b0f      	ldr	r3, [pc, #60]	; (f2f4 <fnet_lpceth_output+0x168>)
    f2b8:	681b      	ldr	r3, [r3, #0]
    f2ba:	1c5a      	adds	r2, r3, #1
    f2bc:	4b0d      	ldr	r3, [pc, #52]	; (f2f4 <fnet_lpceth_output+0x168>)
    f2be:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:470
	fnet_netbuf_free_chain(nb);
    f2c0:	6838      	ldr	r0, [r7, #0]
    f2c2:	f7f3 fc1d 	bl	2b00 <fnet_netbuf_free_chain>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:471
	txDescriptorStatus[currentIndex] = 0;
    f2c6:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
    f2ca:	4a08      	ldr	r2, [pc, #32]	; (f2ec <fnet_lpceth_output+0x160>)
    f2cc:	2100      	movs	r1, #0
    f2ce:	54d1      	strb	r1, [r2, r3]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:473
#if LPC_DEBUG_LEDS
	led2_off();
    f2d0:	2001      	movs	r0, #1
    f2d2:	f44f 2180 	mov.w	r1, #262144	; 0x40000
    f2d6:	2201      	movs	r2, #1
    f2d8:	f000 fce6 	bl	fca8 <GPIO_OutputValue>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:475
#endif
}
    f2dc:	3728      	adds	r7, #40	; 0x28
    f2de:	46bd      	mov	sp, r7
    f2e0:	bd80      	pop	{r7, pc}
    f2e2:	bf00      	nop
    f2e4:	20084000 	.word	0x20084000
    f2e8:	1000ba9c 	.word	0x1000ba9c
    f2ec:	1000bb24 	.word	0x1000bb24
    f2f0:	00014464 	.word	0x00014464
    f2f4:	1000ba98 	.word	0x1000ba98

0000f2f8 <fnet_lpceth_get_hw_addr>:
fnet_lpceth_get_hw_addr():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:477
int fnet_lpceth_get_hw_addr(fnet_netif_t *netif, unsigned char * hw_addr)
{
    f2f8:	b480      	push	{r7}
    f2fa:	b083      	sub	sp, #12
    f2fc:	af00      	add	r7, sp, #0
    f2fe:	6078      	str	r0, [r7, #4]
    f300:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:478
	hw_addr[0] = (LPC_EMAC->SA0 & 0xFF00) >> 8;
    f302:	4b19      	ldr	r3, [pc, #100]	; (f368 <fnet_lpceth_get_hw_addr+0x70>)
    f304:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    f306:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
    f30a:	0a1b      	lsrs	r3, r3, #8
    f30c:	b2da      	uxtb	r2, r3
    f30e:	683b      	ldr	r3, [r7, #0]
    f310:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:479
	hw_addr[1] = (LPC_EMAC->SA0 & 0xFF);
    f312:	683b      	ldr	r3, [r7, #0]
    f314:	3301      	adds	r3, #1
    f316:	4a14      	ldr	r2, [pc, #80]	; (f368 <fnet_lpceth_get_hw_addr+0x70>)
    f318:	6c12      	ldr	r2, [r2, #64]	; 0x40
    f31a:	b2d2      	uxtb	r2, r2
    f31c:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:480
	hw_addr[2] = (LPC_EMAC->SA1 & 0xFF00) >> 8;
    f31e:	683b      	ldr	r3, [r7, #0]
    f320:	3302      	adds	r3, #2
    f322:	4a11      	ldr	r2, [pc, #68]	; (f368 <fnet_lpceth_get_hw_addr+0x70>)
    f324:	6c52      	ldr	r2, [r2, #68]	; 0x44
    f326:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
    f32a:	0a12      	lsrs	r2, r2, #8
    f32c:	b2d2      	uxtb	r2, r2
    f32e:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:481
	hw_addr[3] = (LPC_EMAC->SA1 & 0xFF);
    f330:	683b      	ldr	r3, [r7, #0]
    f332:	3303      	adds	r3, #3
    f334:	4a0c      	ldr	r2, [pc, #48]	; (f368 <fnet_lpceth_get_hw_addr+0x70>)
    f336:	6c52      	ldr	r2, [r2, #68]	; 0x44
    f338:	b2d2      	uxtb	r2, r2
    f33a:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:482
	hw_addr[4] = (LPC_EMAC->SA2 & 0xFF00) >> 8;
    f33c:	683b      	ldr	r3, [r7, #0]
    f33e:	3304      	adds	r3, #4
    f340:	4a09      	ldr	r2, [pc, #36]	; (f368 <fnet_lpceth_get_hw_addr+0x70>)
    f342:	6c92      	ldr	r2, [r2, #72]	; 0x48
    f344:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
    f348:	0a12      	lsrs	r2, r2, #8
    f34a:	b2d2      	uxtb	r2, r2
    f34c:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:483
	hw_addr[5] = (LPC_EMAC->SA2 & 0xFF);
    f34e:	683b      	ldr	r3, [r7, #0]
    f350:	3305      	adds	r3, #5
    f352:	4a05      	ldr	r2, [pc, #20]	; (f368 <fnet_lpceth_get_hw_addr+0x70>)
    f354:	6c92      	ldr	r2, [r2, #72]	; 0x48
    f356:	b2d2      	uxtb	r2, r2
    f358:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:484
	return FNET_OK;
    f35a:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:485
}
    f35c:	4618      	mov	r0, r3
    f35e:	370c      	adds	r7, #12
    f360:	46bd      	mov	sp, r7
    f362:	f85d 7b04 	ldr.w	r7, [sp], #4
    f366:	4770      	bx	lr
    f368:	20084000 	.word	0x20084000

0000f36c <fnet_lpceth_set_hw_addr>:
fnet_lpceth_set_hw_addr():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:487
int fnet_lpceth_set_hw_addr(fnet_netif_t *netif, unsigned char * hw_addr)
{
    f36c:	b480      	push	{r7}
    f36e:	b083      	sub	sp, #12
    f370:	af00      	add	r7, sp, #0
    f372:	6078      	str	r0, [r7, #4]
    f374:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:488
	LPC_EMAC->SA0 = (hw_addr[0] << 8) | hw_addr[1];
    f376:	4b12      	ldr	r3, [pc, #72]	; (f3c0 <fnet_lpceth_set_hw_addr+0x54>)
    f378:	683a      	ldr	r2, [r7, #0]
    f37a:	7812      	ldrb	r2, [r2, #0]
    f37c:	0211      	lsls	r1, r2, #8
    f37e:	683a      	ldr	r2, [r7, #0]
    f380:	3201      	adds	r2, #1
    f382:	7812      	ldrb	r2, [r2, #0]
    f384:	430a      	orrs	r2, r1
    f386:	641a      	str	r2, [r3, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:489
	LPC_EMAC->SA1 = (hw_addr[2] << 8) | hw_addr[3];
    f388:	4b0d      	ldr	r3, [pc, #52]	; (f3c0 <fnet_lpceth_set_hw_addr+0x54>)
    f38a:	683a      	ldr	r2, [r7, #0]
    f38c:	3202      	adds	r2, #2
    f38e:	7812      	ldrb	r2, [r2, #0]
    f390:	0211      	lsls	r1, r2, #8
    f392:	683a      	ldr	r2, [r7, #0]
    f394:	3203      	adds	r2, #3
    f396:	7812      	ldrb	r2, [r2, #0]
    f398:	430a      	orrs	r2, r1
    f39a:	645a      	str	r2, [r3, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:490
	LPC_EMAC->SA2 = (hw_addr[4] << 8) | hw_addr[5];
    f39c:	4b08      	ldr	r3, [pc, #32]	; (f3c0 <fnet_lpceth_set_hw_addr+0x54>)
    f39e:	683a      	ldr	r2, [r7, #0]
    f3a0:	3204      	adds	r2, #4
    f3a2:	7812      	ldrb	r2, [r2, #0]
    f3a4:	0211      	lsls	r1, r2, #8
    f3a6:	683a      	ldr	r2, [r7, #0]
    f3a8:	3205      	adds	r2, #5
    f3aa:	7812      	ldrb	r2, [r2, #0]
    f3ac:	430a      	orrs	r2, r1
    f3ae:	649a      	str	r2, [r3, #72]	; 0x48
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:491
	return FNET_OK;
    f3b0:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:493

}
    f3b2:	4618      	mov	r0, r3
    f3b4:	370c      	adds	r7, #12
    f3b6:	46bd      	mov	sp, r7
    f3b8:	f85d 7b04 	ldr.w	r7, [sp], #4
    f3bc:	4770      	bx	lr
    f3be:	bf00      	nop
    f3c0:	20084000 	.word	0x20084000

0000f3c4 <fnet_lpceth_get_statistics>:
fnet_lpceth_get_statistics():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:495
int fnet_lpceth_get_statistics(struct fnet_netif *netif, struct fnet_netif_statistics * statistics)
{
    f3c4:	b480      	push	{r7}
    f3c6:	b083      	sub	sp, #12
    f3c8:	af00      	add	r7, sp, #0
    f3ca:	6078      	str	r0, [r7, #4]
    f3cc:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:496
	statistics->tx_packet = sentPackets;
    f3ce:	4b07      	ldr	r3, [pc, #28]	; (f3ec <fnet_lpceth_get_statistics+0x28>)
    f3d0:	681a      	ldr	r2, [r3, #0]
    f3d2:	683b      	ldr	r3, [r7, #0]
    f3d4:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:497
	statistics->rx_packet = recvPackets;
    f3d6:	4b06      	ldr	r3, [pc, #24]	; (f3f0 <fnet_lpceth_get_statistics+0x2c>)
    f3d8:	681a      	ldr	r2, [r3, #0]
    f3da:	683b      	ldr	r3, [r7, #0]
    f3dc:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:498
	return FNET_OK;
    f3de:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:499
}
    f3e0:	4618      	mov	r0, r3
    f3e2:	370c      	adds	r7, #12
    f3e4:	46bd      	mov	sp, r7
    f3e6:	f85d 7b04 	ldr.w	r7, [sp], #4
    f3ea:	4770      	bx	lr
    f3ec:	1000ba98 	.word	0x1000ba98
    f3f0:	1000ba94 	.word	0x1000ba94

0000f3f4 <fnet_lpceth_is_connected>:
fnet_lpceth_is_connected():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:500
int fnet_lpceth_is_connected(fnet_netif_t *netif) {
    f3f4:	b480      	push	{r7}
    f3f6:	b083      	sub	sp, #12
    f3f8:	af00      	add	r7, sp, #0
    f3fa:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:502

	return FNET_ERR;
    f3fc:	f04f 33ff 	mov.w	r3, #4294967295
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:503
}
    f400:	4618      	mov	r0, r3
    f402:	370c      	adds	r7, #12
    f404:	46bd      	mov	sp, r7
    f406:	f85d 7b04 	ldr.w	r7, [sp], #4
    f40a:	4770      	bx	lr

0000f40c <fnet_lpceth_interrupt_handler_top>:
fnet_lpceth_interrupt_handler_top():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:505

void fnet_lpceth_interrupt_handler_top(void *cookie) {
    f40c:	b580      	push	{r7, lr}
    f40e:	b082      	sub	sp, #8
    f410:	af00      	add	r7, sp, #0
    f412:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:506
    lastInterruptStatus = LPC_EMAC->IntStatus;
    f414:	4b2c      	ldr	r3, [pc, #176]	; (f4c8 <fnet_lpceth_interrupt_handler_top+0xbc>)
    f416:	f8d3 3fe0 	ldr.w	r3, [r3, #4064]	; 0xfe0
    f41a:	461a      	mov	r2, r3
    f41c:	4b2b      	ldr	r3, [pc, #172]	; (f4cc <fnet_lpceth_interrupt_handler_top+0xc0>)
    f41e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:507
    if ((LPC_EMAC->IntStatus & ETH_INTSTATUS_RX_FINISHED) == ETH_INTSTATUS_RX_FINISHED) {
    f420:	4b29      	ldr	r3, [pc, #164]	; (f4c8 <fnet_lpceth_interrupt_handler_top+0xbc>)
    f422:	f8d3 3fe0 	ldr.w	r3, [r3, #4064]	; 0xfe0
    f426:	f003 0304 	and.w	r3, r3, #4
    f42a:	2b00      	cmp	r3, #0
    f42c:	d00b      	beq.n	f446 <fnet_lpceth_interrupt_handler_top+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:508
        LPC_EMAC->Command |= (1 << 5); // Do an RX reset
    f42e:	4b26      	ldr	r3, [pc, #152]	; (f4c8 <fnet_lpceth_interrupt_handler_top+0xbc>)
    f430:	4a25      	ldr	r2, [pc, #148]	; (f4c8 <fnet_lpceth_interrupt_handler_top+0xbc>)
    f432:	f8d2 2100 	ldr.w	r2, [r2, #256]	; 0x100
    f436:	f042 0220 	orr.w	r2, r2, #32
    f43a:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:509
        LPC_EMAC->IntClear = ETH_INTSTATUS_RX_FINISHED;
    f43e:	4b22      	ldr	r3, [pc, #136]	; (f4c8 <fnet_lpceth_interrupt_handler_top+0xbc>)
    f440:	2204      	movs	r2, #4
    f442:	f8c3 2fe8 	str.w	r2, [r3, #4072]	; 0xfe8
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:515
    } /*
	if ((LPC_EMAC->IntStatus & ETH_INTSTATUS_RX_ERROR) == ETH_INTSTATUS_RX_ERROR) {
		// Often, there is no error, but an ARP packet, and the MAC can't tell the difference
		LPC_EMAC->IntClear = 0x2;
	} */
    if ((LPC_EMAC->IntStatus & ETH_INTSTATUS_RX_DONE) == ETH_INTSTATUS_RX_DONE) {
    f446:	4b20      	ldr	r3, [pc, #128]	; (f4c8 <fnet_lpceth_interrupt_handler_top+0xbc>)
    f448:	f8d3 3fe0 	ldr.w	r3, [r3, #4064]	; 0xfe0
    f44c:	f003 0308 	and.w	r3, r3, #8
    f450:	2b00      	cmp	r3, #0
    f452:	d005      	beq.n	f460 <fnet_lpceth_interrupt_handler_top+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:516
        recvPacketsWaiting++;
    f454:	4b1e      	ldr	r3, [pc, #120]	; (f4d0 <fnet_lpceth_interrupt_handler_top+0xc4>)
    f456:	781b      	ldrb	r3, [r3, #0]
    f458:	3301      	adds	r3, #1
    f45a:	b2da      	uxtb	r2, r3
    f45c:	4b1c      	ldr	r3, [pc, #112]	; (f4d0 <fnet_lpceth_interrupt_handler_top+0xc4>)
    f45e:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:518
    }
    if ((LPC_EMAC->IntStatus & ETH_INTSTATUS_RX_OVERRUN) == ETH_INTSTATUS_RX_OVERRUN) {
    f460:	4b19      	ldr	r3, [pc, #100]	; (f4c8 <fnet_lpceth_interrupt_handler_top+0xbc>)
    f462:	f8d3 3fe0 	ldr.w	r3, [r3, #4064]	; 0xfe0
    f466:	f003 0301 	and.w	r3, r3, #1
    f46a:	2b00      	cmp	r3, #0
    f46c:	d00a      	beq.n	f484 <fnet_lpceth_interrupt_handler_top+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:519
        LPC_EMAC->Command |= (1 << 5); // Do an RX reset
    f46e:	4b16      	ldr	r3, [pc, #88]	; (f4c8 <fnet_lpceth_interrupt_handler_top+0xbc>)
    f470:	4a15      	ldr	r2, [pc, #84]	; (f4c8 <fnet_lpceth_interrupt_handler_top+0xbc>)
    f472:	f8d2 2100 	ldr.w	r2, [r2, #256]	; 0x100
    f476:	f042 0220 	orr.w	r2, r2, #32
    f47a:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:520
        fnet_printf("RxOverrun!\n");
    f47e:	4815      	ldr	r0, [pc, #84]	; (f4d4 <fnet_lpceth_interrupt_handler_top+0xc8>)
    f480:	f7fc fdd0 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:522
    }
    if ((LPC_EMAC->IntStatus & ETH_INTSTATUS_TX_UNDERRUN) == ETH_INTSTATUS_TX_UNDERRUN) {
    f484:	4b10      	ldr	r3, [pc, #64]	; (f4c8 <fnet_lpceth_interrupt_handler_top+0xbc>)
    f486:	f8d3 3fe0 	ldr.w	r3, [r3, #4064]	; 0xfe0
    f48a:	f003 0310 	and.w	r3, r3, #16
    f48e:	2b00      	cmp	r3, #0
    f490:	d002      	beq.n	f498 <fnet_lpceth_interrupt_handler_top+0x8c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:523
        fnet_printf("TxUnderrun!\n");
    f492:	4811      	ldr	r0, [pc, #68]	; (f4d8 <fnet_lpceth_interrupt_handler_top+0xcc>)
    f494:	f7fc fdc6 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:525
    }
    if ((LPC_EMAC->IntStatus & ETH_INTSTATUS_TX_DONE) == ETH_INTSTATUS_TX_DONE) {
    f498:	4b0b      	ldr	r3, [pc, #44]	; (f4c8 <fnet_lpceth_interrupt_handler_top+0xbc>)
    f49a:	f8d3 3fe0 	ldr.w	r3, [r3, #4064]	; 0xfe0
    f49e:	f003 0380 	and.w	r3, r3, #128	; 0x80
    f4a2:	2b00      	cmp	r3, #0
    f4a4:	d008      	beq.n	f4b8 <fnet_lpceth_interrupt_handler_top+0xac>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:526
        usedTxDescr--;
    f4a6:	4b0d      	ldr	r3, [pc, #52]	; (f4dc <fnet_lpceth_interrupt_handler_top+0xd0>)
    f4a8:	781b      	ldrb	r3, [r3, #0]
    f4aa:	3b01      	subs	r3, #1
    f4ac:	b2da      	uxtb	r2, r3
    f4ae:	4b0b      	ldr	r3, [pc, #44]	; (f4dc <fnet_lpceth_interrupt_handler_top+0xd0>)
    f4b0:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:527
        isTxDone = 1;
    f4b2:	4b0b      	ldr	r3, [pc, #44]	; (f4e0 <fnet_lpceth_interrupt_handler_top+0xd4>)
    f4b4:	2201      	movs	r2, #1
    f4b6:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:529
    }
    clear_ethernet_interrupts();
    f4b8:	4b03      	ldr	r3, [pc, #12]	; (f4c8 <fnet_lpceth_interrupt_handler_top+0xbc>)
    f4ba:	22ff      	movs	r2, #255	; 0xff
    f4bc:	f8c3 2fe8 	str.w	r2, [r3, #4072]	; 0xfe8
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:530
}
    f4c0:	3708      	adds	r7, #8
    f4c2:	46bd      	mov	sp, r7
    f4c4:	bd80      	pop	{r7, pc}
    f4c6:	bf00      	nop
    f4c8:	20084000 	.word	0x20084000
    f4cc:	1000baa0 	.word	0x1000baa0
    f4d0:	1000ba9d 	.word	0x1000ba9d
    f4d4:	0001447c 	.word	0x0001447c
    f4d8:	00014488 	.word	0x00014488
    f4dc:	1000ba9c 	.word	0x1000ba9c
    f4e0:	1000baa4 	.word	0x1000baa4

0000f4e4 <fnet_lpceth_interrupt_handler_bottom>:
fnet_lpceth_interrupt_handler_bottom():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:532

void fnet_lpceth_interrupt_handler_bottom(void *cookie) {
    f4e4:	b580      	push	{r7, lr}
    f4e6:	b082      	sub	sp, #8
    f4e8:	af00      	add	r7, sp, #0
    f4ea:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:535
    lpceth_debug_printf("Last IntStatus: %ld\n",lastInterruptStatus);

    fnet_isr_lock();
    f4ec:	f7f2 feb0 	bl	2250 <fnet_isr_lock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:537
    /* Ignore duplicate interrupts from transmit done*/
    if (!isTxDone) {
    f4f0:	4b07      	ldr	r3, [pc, #28]	; (f510 <fnet_lpceth_interrupt_handler_bottom+0x2c>)
    f4f2:	781b      	ldrb	r3, [r3, #0]
    f4f4:	2b00      	cmp	r3, #0
    f4f6:	d103      	bne.n	f500 <fnet_lpceth_interrupt_handler_bottom+0x1c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:538
        fnet_lpceth_input(0x0);
    f4f8:	2000      	movs	r0, #0
    f4fa:	f7ff fdab 	bl	f054 <fnet_lpceth_input>
    f4fe:	e002      	b.n	f506 <fnet_lpceth_interrupt_handler_bottom+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:540
    } else {
        isTxDone = 0;
    f500:	4b03      	ldr	r3, [pc, #12]	; (f510 <fnet_lpceth_interrupt_handler_bottom+0x2c>)
    f502:	2200      	movs	r2, #0
    f504:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:542
    }
    fnet_isr_unlock();
    f506:	f7f2 feb1 	bl	226c <fnet_isr_unlock>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:543
}
    f50a:	3708      	adds	r7, #8
    f50c:	46bd      	mov	sp, r7
    f50e:	bd80      	pop	{r7, pc}
    f510:	1000baa4 	.word	0x1000baa4

0000f514 <ENET_IRQHandler>:
ENET_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:547
/*
 * This acts as the receive handler, trigged by an interrupt on reception of an Ethernet frame
 */
void ENET_IRQHandler(void) {
    f514:	b580      	push	{r7, lr}
    f516:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:548
	fnet_isr_handler(ENET_IRQn);
    f518:	201c      	movs	r0, #28
    f51a:	f7f2 fd9d 	bl	2058 <fnet_isr_handler>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/lpc17xx/fnet_lpc_eth.c:549
}
    f51e:	bd80      	pop	{r7, pc}

0000f520 <fnet_htons>:
fnet_htons():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/fnet_cpu.c:52


#if FNET_CFG_CPU_LITTLE_ENDIAN
/* Convert short from host- to network byte order.*/
unsigned short fnet_htons(unsigned short n)                                
{
    f520:	b480      	push	{r7}
    f522:	b085      	sub	sp, #20
    f524:	af00      	add	r7, sp, #0
    f526:	4603      	mov	r3, r0
    f528:	80fb      	strh	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/fnet_cpu.c:53
    unsigned short result = FNET_HTONS(n);
    f52a:	88fb      	ldrh	r3, [r7, #6]
    f52c:	021b      	lsls	r3, r3, #8
    f52e:	b29a      	uxth	r2, r3
    f530:	88fb      	ldrh	r3, [r7, #6]
    f532:	0a1b      	lsrs	r3, r3, #8
    f534:	b29b      	uxth	r3, r3
    f536:	b29b      	uxth	r3, r3
    f538:	4313      	orrs	r3, r2
    f53a:	b29b      	uxth	r3, r3
    f53c:	81fb      	strh	r3, [r7, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/fnet_cpu.c:54
    return result;
    f53e:	89fb      	ldrh	r3, [r7, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/fnet_cpu.c:55
}
    f540:	4618      	mov	r0, r3
    f542:	3714      	adds	r7, #20
    f544:	46bd      	mov	sp, r7
    f546:	f85d 7b04 	ldr.w	r7, [sp], #4
    f54a:	4770      	bx	lr

0000f54c <fnet_htonl>:
fnet_htonl():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/fnet_cpu.c:58
/* Convert long from host- to network byte order.*/
unsigned long fnet_htonl(unsigned long n)                                  
{
    f54c:	b480      	push	{r7}
    f54e:	b085      	sub	sp, #20
    f550:	af00      	add	r7, sp, #0
    f552:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/fnet_cpu.c:59
    unsigned long result = FNET_HTONL(n);
    f554:	687b      	ldr	r3, [r7, #4]
    f556:	061a      	lsls	r2, r3, #24
    f558:	687b      	ldr	r3, [r7, #4]
    f55a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
    f55e:	021b      	lsls	r3, r3, #8
    f560:	431a      	orrs	r2, r3
    f562:	687b      	ldr	r3, [r7, #4]
    f564:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
    f568:	0a1b      	lsrs	r3, r3, #8
    f56a:	431a      	orrs	r2, r3
    f56c:	687b      	ldr	r3, [r7, #4]
    f56e:	0e1b      	lsrs	r3, r3, #24
    f570:	4313      	orrs	r3, r2
    f572:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/fnet_cpu.c:60
    return result;    
    f574:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/cpu/fnet_cpu.c:61
}
    f576:	4618      	mov	r0, r3
    f578:	3714      	adds	r7, #20
    f57a:	46bd      	mov	sp, r7
    f57c:	f85d 7b04 	ldr.w	r7, [sp], #4
    f580:	4770      	bx	lr
    f582:	bf00      	nop

0000f584 <init_http>:
init_http():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:73
//};


fnet_netif_desc_t fapp_default_netif;

void init_http() {
    f584:	b580      	push	{r7, lr}
    f586:	b088      	sub	sp, #32
    f588:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:74
	fapp_default_netif = fnet_netif_get_default();
    f58a:	f7f4 f8f3 	bl	3774 <fnet_netif_get_default>
    f58e:	4602      	mov	r2, r0
    f590:	4b11      	ldr	r3, [pc, #68]	; (f5d8 <init_http+0x54>)
    f592:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:77

	struct fnet_http_params params;
	fnet_memset_zero(&params, sizeof(struct fnet_http_params));
    f594:	1d3b      	adds	r3, r7, #4
    f596:	4618      	mov	r0, r3
    f598:	2118      	movs	r1, #24
    f59a:	f7f6 fb37 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:78
	params.root_path = "rom";
    f59e:	4b0f      	ldr	r3, [pc, #60]	; (f5dc <init_http+0x58>)
    f5a0:	607b      	str	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:79
	params.index_path = "index.html";
    f5a2:	4b0f      	ldr	r3, [pc, #60]	; (f5e0 <init_http+0x5c>)
    f5a4:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:83
	//params.address = http_listen_all;

#if FNET_CFG_HTTP_CGI
	params.cgi_table = &fapp_cgi_table[0];
    f5a6:	4b0f      	ldr	r3, [pc, #60]	; (f5e4 <init_http+0x60>)
    f5a8:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:85
#endif
	fnet_http_desc_t httpSrv = fnet_http_init(&params);
    f5aa:	1d3b      	adds	r3, r7, #4
    f5ac:	4618      	mov	r0, r3
    f5ae:	f7fd fad9 	bl	cb64 <fnet_http_init>
    f5b2:	61f8      	str	r0, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:86
	fnet_printf("http ");
    f5b4:	480c      	ldr	r0, [pc, #48]	; (f5e8 <init_http+0x64>)
    f5b6:	f7fc fd35 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:87
	if (httpSrv != FNET_ERR) {
    f5ba:	69fb      	ldr	r3, [r7, #28]
    f5bc:	f1b3 3fff 	cmp.w	r3, #4294967295
    f5c0:	d003      	beq.n	f5ca <init_http+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:88
		fnet_println("ok");
    f5c2:	480a      	ldr	r0, [pc, #40]	; (f5ec <init_http+0x68>)
    f5c4:	f7fc fd44 	bl	c050 <fnet_println>
    f5c8:	e002      	b.n	f5d0 <init_http+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:90
	} else {
		fnet_println("fail");
    f5ca:	4809      	ldr	r0, [pc, #36]	; (f5f0 <init_http+0x6c>)
    f5cc:	f7fc fd40 	bl	c050 <fnet_println>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:92
	}
}
    f5d0:	3720      	adds	r7, #32
    f5d2:	46bd      	mov	sp, r7
    f5d4:	bd80      	pop	{r7, pc}
    f5d6:	bf00      	nop
    f5d8:	1000bb4c 	.word	0x1000bb4c
    f5dc:	0001ad00 	.word	0x0001ad00
    f5e0:	0001ad04 	.word	0x0001ad04
    f5e4:	0001ad80 	.word	0x0001ad80
    f5e8:	0001ad10 	.word	0x0001ad10
    f5ec:	0001ad18 	.word	0x0001ad18
    f5f0:	0001ad1c 	.word	0x0001ad1c

0000f5f4 <fapp_http_cgi_stdata_handle>:
fapp_http_cgi_stdata_handle():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:112
* NAME: fapp_http_cgi_stdata_handle
*
* DESCRIPTION:
*************************************************************************/
static int fapp_http_cgi_stdata_handle(char * query, long *cookie)
{
    f5f4:	b580      	push	{r7, lr}
    f5f6:	b08c      	sub	sp, #48	; 0x30
    f5f8:	af04      	add	r7, sp, #16
    f5fa:	6078      	str	r0, [r7, #4]
    f5fc:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:119
	struct fnet_netif_statistics statistics;

    FNET_COMP_UNUSED_ARG(query);

	/* Get Time. */
	time = fnet_timer_ticks();
    f5fe:	f7fa fbcf 	bl	9da0 <fnet_timer_ticks>
    f602:	61f8      	str	r0, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:120
	t_hour = time/FNET_TIMER_TICK_IN_HOUR;
    f604:	69fa      	ldr	r2, [r7, #28]
    f606:	4b23      	ldr	r3, [pc, #140]	; (f694 <fapp_http_cgi_stdata_handle+0xa0>)
    f608:	fba3 1302 	umull	r1, r3, r3, r2
    f60c:	0bdb      	lsrs	r3, r3, #15
    f60e:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:121
	t_min  = (time%FNET_TIMER_TICK_IN_HOUR)/FNET_TIMER_TICK_IN_MIN;
    f610:	69fa      	ldr	r2, [r7, #28]
    f612:	4b20      	ldr	r3, [pc, #128]	; (f694 <fapp_http_cgi_stdata_handle+0xa0>)
    f614:	fba3 1302 	umull	r1, r3, r3, r2
    f618:	0bdb      	lsrs	r3, r3, #15
    f61a:	f648 41a0 	movw	r1, #36000	; 0x8ca0
    f61e:	fb01 f303 	mul.w	r3, r1, r3
    f622:	1ad3      	subs	r3, r2, r3
    f624:	4a1c      	ldr	r2, [pc, #112]	; (f698 <fapp_http_cgi_stdata_handle+0xa4>)
    f626:	fba2 1303 	umull	r1, r3, r2, r3
    f62a:	099b      	lsrs	r3, r3, #6
    f62c:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:122
	t_sec  = (time%FNET_TIMER_TICK_IN_MIN)/FNET_TIMER_TICK_IN_SEC;
    f62e:	69fa      	ldr	r2, [r7, #28]
    f630:	4b19      	ldr	r3, [pc, #100]	; (f698 <fapp_http_cgi_stdata_handle+0xa4>)
    f632:	fba3 1302 	umull	r1, r3, r3, r2
    f636:	099b      	lsrs	r3, r3, #6
    f638:	f44f 7116 	mov.w	r1, #600	; 0x258
    f63c:	fb01 f303 	mul.w	r3, r1, r3
    f640:	1ad3      	subs	r3, r2, r3
    f642:	4a16      	ldr	r2, [pc, #88]	; (f69c <fapp_http_cgi_stdata_handle+0xa8>)
    f644:	fba2 1303 	umull	r1, r3, r2, r3
    f648:	08db      	lsrs	r3, r3, #3
    f64a:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:125

	/* Get statistics. */
    fnet_memset_zero( &statistics, sizeof(struct fnet_netif_statistics) );
    f64c:	f107 0308 	add.w	r3, r7, #8
    f650:	4618      	mov	r0, r3
    f652:	2108      	movs	r1, #8
    f654:	f7f6 fada 	bl	5c0c <fnet_memset_zero>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:126
    fnet_netif_get_statistics(fapp_default_netif, &statistics);
    f658:	4b11      	ldr	r3, [pc, #68]	; (f6a0 <fapp_http_cgi_stdata_handle+0xac>)
    f65a:	681a      	ldr	r2, [r3, #0]
    f65c:	f107 0308 	add.w	r3, r7, #8
    f660:	4610      	mov	r0, r2
    f662:	4619      	mov	r1, r3
    f664:	f7f4 f99e 	bl	39a4 <fnet_netif_get_statistics>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:129

	/* Write to the temprorary buffer. */
    fnet_snprintf(fapp_http_cgi_buffer, sizeof(fapp_http_cgi_buffer), "({ \"time\":\"%02d:%02d:%02d\",\"tx\":%d,\"rx\":%d})",
    f668:	68ba      	ldr	r2, [r7, #8]
    f66a:	68fb      	ldr	r3, [r7, #12]
    f66c:	6979      	ldr	r1, [r7, #20]
    f66e:	9100      	str	r1, [sp, #0]
    f670:	6939      	ldr	r1, [r7, #16]
    f672:	9101      	str	r1, [sp, #4]
    f674:	9202      	str	r2, [sp, #8]
    f676:	9303      	str	r3, [sp, #12]
    f678:	480a      	ldr	r0, [pc, #40]	; (f6a4 <fapp_http_cgi_stdata_handle+0xb0>)
    f67a:	2137      	movs	r1, #55	; 0x37
    f67c:	4a0a      	ldr	r2, [pc, #40]	; (f6a8 <fapp_http_cgi_stdata_handle+0xb4>)
    f67e:	69bb      	ldr	r3, [r7, #24]
    f680:	f7fc fd54 	bl	c12c <fnet_snprintf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:132
                             t_hour, t_min, t_sec, statistics.tx_packet, statistics.rx_packet);

    *cookie = (long)fapp_http_cgi_buffer; /* Save fapp_http_cgi_buffer as cookie.*/
    f684:	4a07      	ldr	r2, [pc, #28]	; (f6a4 <fapp_http_cgi_stdata_handle+0xb0>)
    f686:	683b      	ldr	r3, [r7, #0]
    f688:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:134

    return FNET_OK;
    f68a:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:135
}
    f68c:	4618      	mov	r0, r3
    f68e:	3720      	adds	r7, #32
    f690:	46bd      	mov	sp, r7
    f692:	bd80      	pop	{r7, pc}
    f694:	e90452d5 	.word	0xe90452d5
    f698:	1b4e81b5 	.word	0x1b4e81b5
    f69c:	cccccccd 	.word	0xcccccccd
    f6a0:	1000bb4c 	.word	0x1000bb4c
    f6a4:	1000baa8 	.word	0x1000baa8
    f6a8:	0001ad24 	.word	0x0001ad24

0000f6ac <fapp_http_cgi_rand>:
fapp_http_cgi_rand():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:145
* NAME: fapp_http_cgi_rand
*
* DESCRIPTION:
*************************************************************************/
static unsigned int fapp_http_cgi_rand(void)
{
    f6ac:	b480      	push	{r7}
    f6ae:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:146
  fapp_http_cgi_rand_next = fapp_http_cgi_rand_next * 11 + 12;
    f6b0:	4b0a      	ldr	r3, [pc, #40]	; (f6dc <fapp_http_cgi_rand+0x30>)
    f6b2:	681a      	ldr	r2, [r3, #0]
    f6b4:	4613      	mov	r3, r2
    f6b6:	009b      	lsls	r3, r3, #2
    f6b8:	4413      	add	r3, r2
    f6ba:	005b      	lsls	r3, r3, #1
    f6bc:	4413      	add	r3, r2
    f6be:	f103 020c 	add.w	r2, r3, #12
    f6c2:	4b06      	ldr	r3, [pc, #24]	; (f6dc <fapp_http_cgi_rand+0x30>)
    f6c4:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:147
  return (unsigned int)(((fapp_http_cgi_rand_next>>4) & 0xFF) + FAPP_HTTP_CGI_GRAPH_MIN);
    f6c6:	4b05      	ldr	r3, [pc, #20]	; (f6dc <fapp_http_cgi_rand+0x30>)
    f6c8:	681b      	ldr	r3, [r3, #0]
    f6ca:	111b      	asrs	r3, r3, #4
    f6cc:	b2db      	uxtb	r3, r3
    f6ce:	331e      	adds	r3, #30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:148
}
    f6d0:	4618      	mov	r0, r3
    f6d2:	46bd      	mov	sp, r7
    f6d4:	f85d 7b04 	ldr.w	r7, [sp], #4
    f6d8:	4770      	bx	lr
    f6da:	bf00      	nop
    f6dc:	1000bae0 	.word	0x1000bae0

0000f6e0 <fapp_http_cgi_graph_handle>:
fapp_http_cgi_graph_handle():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:156
* NAME: fapp_http_cgi_graph_handle
*
* DESCRIPTION:
*************************************************************************/
static int fapp_http_cgi_graph_handle(char * query, long *cookie)
{
    f6e0:	b580      	push	{r7, lr}
    f6e2:	b08c      	sub	sp, #48	; 0x30
    f6e4:	af04      	add	r7, sp, #16
    f6e6:	6078      	str	r0, [r7, #4]
    f6e8:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:157
    int q1= (int)fapp_http_cgi_rand();
    f6ea:	f7ff ffdf 	bl	f6ac <fapp_http_cgi_rand>
    f6ee:	4603      	mov	r3, r0
    f6f0:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:158
    int q2= (int)fapp_http_cgi_rand();
    f6f2:	f7ff ffdb 	bl	f6ac <fapp_http_cgi_rand>
    f6f6:	4603      	mov	r3, r0
    f6f8:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:159
    int q3= (int)fapp_http_cgi_rand();
    f6fa:	f7ff ffd7 	bl	f6ac <fapp_http_cgi_rand>
    f6fe:	4603      	mov	r3, r0
    f700:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:160
    int q4= (int)fapp_http_cgi_rand();
    f702:	f7ff ffd3 	bl	f6ac <fapp_http_cgi_rand>
    f706:	4603      	mov	r3, r0
    f708:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:161
    int q5= (int)fapp_http_cgi_rand();
    f70a:	f7ff ffcf 	bl	f6ac <fapp_http_cgi_rand>
    f70e:	4603      	mov	r3, r0
    f710:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:166

    FNET_COMP_UNUSED_ARG(query);

	/* Wrie to the temprorary buffer. */
    fnet_snprintf(fapp_http_cgi_buffer, sizeof(fapp_http_cgi_buffer),
    f712:	69bb      	ldr	r3, [r7, #24]
    f714:	9300      	str	r3, [sp, #0]
    f716:	697b      	ldr	r3, [r7, #20]
    f718:	9301      	str	r3, [sp, #4]
    f71a:	693b      	ldr	r3, [r7, #16]
    f71c:	9302      	str	r3, [sp, #8]
    f71e:	68fb      	ldr	r3, [r7, #12]
    f720:	9303      	str	r3, [sp, #12]
    f722:	4807      	ldr	r0, [pc, #28]	; (f740 <fapp_http_cgi_graph_handle+0x60>)
    f724:	2137      	movs	r1, #55	; 0x37
    f726:	4a07      	ldr	r2, [pc, #28]	; (f744 <fapp_http_cgi_graph_handle+0x64>)
    f728:	69fb      	ldr	r3, [r7, #28]
    f72a:	f7fc fcff 	bl	c12c <fnet_snprintf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:170
                        "({\"q1\":%d,\"q2\":%d,\"q3\":%d,\"q4\":%d,\"q5\":%d})",
                        q1, q2, q3, q4, q5);

    *cookie = (long)fapp_http_cgi_buffer; /* Save fapp_http_cgi_buffer as cookie.*/
    f72e:	4a04      	ldr	r2, [pc, #16]	; (f740 <fapp_http_cgi_graph_handle+0x60>)
    f730:	683b      	ldr	r3, [r7, #0]
    f732:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:172

    return FNET_OK;
    f734:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:173
}
    f736:	4618      	mov	r0, r3
    f738:	3720      	adds	r7, #32
    f73a:	46bd      	mov	sp, r7
    f73c:	bd80      	pop	{r7, pc}
    f73e:	bf00      	nop
    f740:	1000baa8 	.word	0x1000baa8
    f744:	0001ad54 	.word	0x0001ad54

0000f748 <fapp_http_string_buffer_respond>:
fapp_http_string_buffer_respond():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:178

#endif

static unsigned long fapp_http_string_buffer_respond(char * buffer, unsigned long buffer_size, char * eof, long *cookie)
{
    f748:	b580      	push	{r7, lr}
    f74a:	b088      	sub	sp, #32
    f74c:	af00      	add	r7, sp, #0
    f74e:	60f8      	str	r0, [r7, #12]
    f750:	60b9      	str	r1, [r7, #8]
    f752:	607a      	str	r2, [r7, #4]
    f754:	603b      	str	r3, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:179
    unsigned long result = 0;
    f756:	2300      	movs	r3, #0
    f758:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:181

    char *string_buffer_ptr = (char *) *cookie;
    f75a:	683b      	ldr	r3, [r7, #0]
    f75c:	681b      	ldr	r3, [r3, #0]
    f75e:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:183

    unsigned long send_size = fnet_strlen(string_buffer_ptr);
    f760:	6978      	ldr	r0, [r7, #20]
    f762:	f7f6 fab3 	bl	5ccc <fnet_strlen>
    f766:	61b8      	str	r0, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:186


    *eof = 1; /* No aditional send by default. */
    f768:	687b      	ldr	r3, [r7, #4]
    f76a:	2201      	movs	r2, #1
    f76c:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:188

    if(buffer && buffer_size)
    f76e:	68fb      	ldr	r3, [r7, #12]
    f770:	2b00      	cmp	r3, #0
    f772:	d01d      	beq.n	f7b0 <fapp_http_string_buffer_respond+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:188 (discriminator 1)
    f774:	68bb      	ldr	r3, [r7, #8]
    f776:	2b00      	cmp	r3, #0
    f778:	d01a      	beq.n	f7b0 <fapp_http_string_buffer_respond+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:190
    {
	    if(send_size>buffer_size)
    f77a:	69ba      	ldr	r2, [r7, #24]
    f77c:	68bb      	ldr	r3, [r7, #8]
    f77e:	429a      	cmp	r2, r3
    f780:	d901      	bls.n	f786 <fapp_http_string_buffer_respond+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:191
	        send_size = buffer_size;
    f782:	68bb      	ldr	r3, [r7, #8]
    f784:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:193

	    fnet_memcpy(buffer, string_buffer_ptr, send_size);
    f786:	68f8      	ldr	r0, [r7, #12]
    f788:	6979      	ldr	r1, [r7, #20]
    f78a:	69ba      	ldr	r2, [r7, #24]
    f78c:	f7f6 f882 	bl	5894 <fnet_memcpy>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:195

	    string_buffer_ptr += send_size;
    f790:	697a      	ldr	r2, [r7, #20]
    f792:	69bb      	ldr	r3, [r7, #24]
    f794:	4413      	add	r3, r2
    f796:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:196
	    if(*string_buffer_ptr!='\0') /* If any data for sending.*/
    f798:	697b      	ldr	r3, [r7, #20]
    f79a:	781b      	ldrb	r3, [r3, #0]
    f79c:	2b00      	cmp	r3, #0
    f79e:	d002      	beq.n	f7a6 <fapp_http_string_buffer_respond+0x5e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:197
	        *eof = 0;    /* Need more itteration. */
    f7a0:	687b      	ldr	r3, [r7, #4]
    f7a2:	2200      	movs	r2, #0
    f7a4:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:199

	    result = send_size;
    f7a6:	69bb      	ldr	r3, [r7, #24]
    f7a8:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:201

	    *cookie = (long)string_buffer_ptr; /* Save cgi_buffer_ptr as cookie.*/
    f7aa:	697a      	ldr	r2, [r7, #20]
    f7ac:	683b      	ldr	r3, [r7, #0]
    f7ae:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:204
    }

    return result;
    f7b0:	69fb      	ldr	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fapp_http_cgi.c:205
}
    f7b2:	4618      	mov	r0, r3
    f7b4:	3720      	adds	r7, #32
    f7b6:	46bd      	mov	sp, r7
    f7b8:	bd80      	pop	{r7, pc}
    f7ba:	bf00      	nop

0000f7bc <FNET_START>:
FNET_START():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fnet_main.c:80
	}
	fnet_timer_free(ip6addr_timer);
}
#endif

void FNET_START(void) {
    f7bc:	b580      	push	{r7, lr}
    f7be:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fnet_main.c:85
	

	    /* Init UART */
		//fnet_cpu_serial_init(FNET_CFG_CPU_SERIAL_PORT_DEFAULT, 9600);
		fnet_printf("UART %i init @%u\n", FNET_CFG_CPU_SERIAL_PORT_DEFAULT, FNET_CFG_CPU_SERIAL_BAUD_DEFAULT);
    f7c0:	481b      	ldr	r0, [pc, #108]	; (f830 <FNET_START+0x74>)
    f7c2:	2100      	movs	r1, #0
    f7c4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
    f7c8:	f7fc fc2c 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fnet_main.c:88

		/* Enable interrupts */
		fnet_cpu_irq_enable(0);
    f7cc:	2000      	movs	r0, #0
    f7ce:	f7ff f87d 	bl	e8cc <fnet_cpu_irq_enable>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fnet_main.c:90

		if (fnet_init_static() != FNET_ERR) {
    f7d2:	f7f6 f80d 	bl	57f0 <fnet_init_static>
    f7d6:	4603      	mov	r3, r0
    f7d8:	f1b3 3fff 	cmp.w	r3, #4294967295
    f7dc:	d003      	beq.n	f7e6 <FNET_START+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fnet_main.c:91
			fnet_printf("\nFNET INIT is done\r");
    f7de:	4815      	ldr	r0, [pc, #84]	; (f834 <FNET_START+0x78>)
    f7e0:	f7fc fc20 	bl	c024 <fnet_printf>
    f7e4:	e002      	b.n	f7ec <FNET_START+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fnet_main.c:93
		} else {
			fnet_printf("\nFNET INIT failed\r");
    f7e6:	4814      	ldr	r0, [pc, #80]	; (f838 <FNET_START+0x7c>)
    f7e8:	f7fc fc1c 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fnet_main.c:122
#endif
                


#if FNET_CFG_FS
		fnet_printf("FS init ");
    f7ec:	4813      	ldr	r0, [pc, #76]	; (f83c <FNET_START+0x80>)
    f7ee:	f7fc fc19 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fnet_main.c:123
		if (fnet_fs_init() != FNET_ERR) {
    f7f2:	f7fe f91b 	bl	da2c <fnet_fs_init>
    f7f6:	4603      	mov	r3, r0
    f7f8:	f1b3 3fff 	cmp.w	r3, #4294967295
    f7fc:	d011      	beq.n	f822 <FNET_START+0x66>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fnet_main.c:124
			 fnet_printf("success\n");
    f7fe:	4810      	ldr	r0, [pc, #64]	; (f840 <FNET_START+0x84>)
    f800:	f7fc fc10 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fnet_main.c:125
			 fnet_fs_rom_register( );
    f804:	f7fe fd76 	bl	e2f4 <fnet_fs_rom_register>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fnet_main.c:128

			 // Mount FNET ROM FS image.
			 if( fnet_fs_mount( FNET_FS_ROM_NAME, "rom", (void *)&fnet_fs_image ) == FNET_ERR )
    f808:	480e      	ldr	r0, [pc, #56]	; (f844 <FNET_START+0x88>)
    f80a:	490f      	ldr	r1, [pc, #60]	; (f848 <FNET_START+0x8c>)
    f80c:	4a0f      	ldr	r2, [pc, #60]	; (f84c <FNET_START+0x90>)
    f80e:	f7fe f9b3 	bl	db78 <fnet_fs_mount>
    f812:	4603      	mov	r3, r0
    f814:	f1b3 3fff 	cmp.w	r3, #4294967295
    f818:	d106      	bne.n	f828 <FNET_START+0x6c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fnet_main.c:129
				 fnet_println("ERROR: FS image mount is failed!");
    f81a:	480d      	ldr	r0, [pc, #52]	; (f850 <FNET_START+0x94>)
    f81c:	f7fc fc18 	bl	c050 <fnet_println>
    f820:	e002      	b.n	f828 <FNET_START+0x6c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fnet_main.c:131
		} else {
			fnet_printf("fail\n");
    f822:	480c      	ldr	r0, [pc, #48]	; (f854 <FNET_START+0x98>)
    f824:	f7fc fbfe 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fnet_main.c:143
#endif
#if FNET_CFG_IP6
	ip6addr_timer = fnet_timer_new(100,&print_ipv6_addr,0);
#endif
#if FNET_CFG_HTTP
	init_http();
    f828:	f7ff feac 	bl	f584 <init_http>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Framework/FNET/fnet_main.c:154
	//	fnet_poll_services();
	//	x++;
		//led2_off();
	//}
	//return 0 ;
}
    f82c:	bd80      	pop	{r7, pc}
    f82e:	bf00      	nop
    f830:	0001ada4 	.word	0x0001ada4
    f834:	0001adb8 	.word	0x0001adb8
    f838:	0001adcc 	.word	0x0001adcc
    f83c:	0001ade0 	.word	0x0001ade0
    f840:	0001adec 	.word	0x0001adec
    f844:	0001adf8 	.word	0x0001adf8
    f848:	0001ae04 	.word	0x0001ae04
    f84c:	0001acdc 	.word	0x0001acdc
    f850:	0001ae08 	.word	0x0001ae08
    f854:	0001ae2c 	.word	0x0001ae2c

0000f858 <CLKPWR_SetCLKDiv>:
CLKPWR_SetCLKDiv():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:77
 *                          + 6: PLL0 output is divided by 6. PLL0 output must be 288MHz
 * @return none
 * Note: Pls assign right DivVal, this function will not check if it is illegal.
 **********************************************************************/
void CLKPWR_SetCLKDiv (uint8_t ClkType, uint8_t DivVal)
{
    f858:	b580      	push	{r7, lr}
    f85a:	b084      	sub	sp, #16
    f85c:	af00      	add	r7, sp, #0
    f85e:	4602      	mov	r2, r0
    f860:	460b      	mov	r3, r1
    f862:	71fa      	strb	r2, [r7, #7]
    f864:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:79
    uint32_t tmp;
    switch(ClkType)
    f866:	79fb      	ldrb	r3, [r7, #7]
    f868:	2b03      	cmp	r3, #3
    f86a:	d85d      	bhi.n	f928 <CLKPWR_SetCLKDiv+0xd0>
    f86c:	a201      	add	r2, pc, #4	; (adr r2, f874 <CLKPWR_SetCLKDiv+0x1c>)
    f86e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    f872:	bf00      	nop
    f874:	0000f885 	.word	0x0000f885
    f878:	0000f8ab 	.word	0x0000f8ab
    f87c:	0000f8d1 	.word	0x0000f8d1
    f880:	0000f8f7 	.word	0x0000f8f7
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:82
    {
    case CLKPWR_CLKTYPE_CPU:
        tmp =   LPC_SC->CCLKSEL & ~(0x1F);
    f884:	4b2a      	ldr	r3, [pc, #168]	; (f930 <CLKPWR_SetCLKDiv+0xd8>)
    f886:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
    f88a:	f023 031f 	bic.w	r3, r3, #31
    f88e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:83
        tmp |=  DivVal & 0x1F;
    f890:	79bb      	ldrb	r3, [r7, #6]
    f892:	f003 031f 	and.w	r3, r3, #31
    f896:	68fa      	ldr	r2, [r7, #12]
    f898:	4313      	orrs	r3, r2
    f89a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:84
        LPC_SC->CCLKSEL = tmp;
    f89c:	4b24      	ldr	r3, [pc, #144]	; (f930 <CLKPWR_SetCLKDiv+0xd8>)
    f89e:	68fa      	ldr	r2, [r7, #12]
    f8a0:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:85
        SystemCoreClockUpdate(); //Update clock
    f8a4:	f002 fc04 	bl	120b0 <SystemCoreClockUpdate>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:86
        break;
    f8a8:	e03f      	b.n	f92a <CLKPWR_SetCLKDiv+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:88
    case CLKPWR_CLKTYPE_PER:
        tmp =   LPC_SC->PCLKSEL & ~(0x1F);
    f8aa:	4b21      	ldr	r3, [pc, #132]	; (f930 <CLKPWR_SetCLKDiv+0xd8>)
    f8ac:	f8d3 31a8 	ldr.w	r3, [r3, #424]	; 0x1a8
    f8b0:	f023 031f 	bic.w	r3, r3, #31
    f8b4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:89
        tmp |=  DivVal & 0x1F;
    f8b6:	79bb      	ldrb	r3, [r7, #6]
    f8b8:	f003 031f 	and.w	r3, r3, #31
    f8bc:	68fa      	ldr	r2, [r7, #12]
    f8be:	4313      	orrs	r3, r2
    f8c0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:90
        LPC_SC->PCLKSEL = tmp;
    f8c2:	4b1b      	ldr	r3, [pc, #108]	; (f930 <CLKPWR_SetCLKDiv+0xd8>)
    f8c4:	68fa      	ldr	r2, [r7, #12]
    f8c6:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:91
        SystemCoreClockUpdate(); //Update clock
    f8ca:	f002 fbf1 	bl	120b0 <SystemCoreClockUpdate>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:92
        break;
    f8ce:	e02c      	b.n	f92a <CLKPWR_SetCLKDiv+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:94
    case CLKPWR_CLKTYPE_EMC:
        tmp =   LPC_SC->EMCCLKSEL & ~(0x01);
    f8d0:	4b17      	ldr	r3, [pc, #92]	; (f930 <CLKPWR_SetCLKDiv+0xd8>)
    f8d2:	f8d3 3100 	ldr.w	r3, [r3, #256]	; 0x100
    f8d6:	f023 0301 	bic.w	r3, r3, #1
    f8da:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:95
        tmp |=  DivVal & 0x01;
    f8dc:	79bb      	ldrb	r3, [r7, #6]
    f8de:	f003 0301 	and.w	r3, r3, #1
    f8e2:	68fa      	ldr	r2, [r7, #12]
    f8e4:	4313      	orrs	r3, r2
    f8e6:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:96
        LPC_SC->EMCCLKSEL = tmp;
    f8e8:	4b11      	ldr	r3, [pc, #68]	; (f930 <CLKPWR_SetCLKDiv+0xd8>)
    f8ea:	68fa      	ldr	r2, [r7, #12]
    f8ec:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:97
        SystemCoreClockUpdate(); //Update clock
    f8f0:	f002 fbde 	bl	120b0 <SystemCoreClockUpdate>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:98
        break;
    f8f4:	e019      	b.n	f92a <CLKPWR_SetCLKDiv+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:100
    case CLKPWR_CLKTYPE_USB:
        tmp =   LPC_SC->USBCLKSEL & ~(0x1F);
    f8f6:	4b0e      	ldr	r3, [pc, #56]	; (f930 <CLKPWR_SetCLKDiv+0xd8>)
    f8f8:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
    f8fc:	f023 031f 	bic.w	r3, r3, #31
    f900:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:101
        tmp |=  DivVal & 0x1F;
    f902:	79bb      	ldrb	r3, [r7, #6]
    f904:	f003 031f 	and.w	r3, r3, #31
    f908:	68fa      	ldr	r2, [r7, #12]
    f90a:	4313      	orrs	r3, r2
    f90c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:102
        LPC_SC->USBCLKSEL |= DivVal & 0x1F;
    f90e:	4b08      	ldr	r3, [pc, #32]	; (f930 <CLKPWR_SetCLKDiv+0xd8>)
    f910:	4a07      	ldr	r2, [pc, #28]	; (f930 <CLKPWR_SetCLKDiv+0xd8>)
    f912:	f8d2 1108 	ldr.w	r1, [r2, #264]	; 0x108
    f916:	79ba      	ldrb	r2, [r7, #6]
    f918:	f002 021f 	and.w	r2, r2, #31
    f91c:	430a      	orrs	r2, r1
    f91e:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:103
        SystemCoreClockUpdate(); //Update clock
    f922:	f002 fbc5 	bl	120b0 <SystemCoreClockUpdate>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:104
        break;
    f926:	e000      	b.n	f92a <CLKPWR_SetCLKDiv+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:106 (discriminator 1)
    default:
        while(1);//Error Loop;
    f928:	e7fe      	b.n	f928 <CLKPWR_SetCLKDiv+0xd0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:108
    }
}
    f92a:	3710      	adds	r7, #16
    f92c:	46bd      	mov	sp, r7
    f92e:	bd80      	pop	{r7, pc}
    f930:	400fc000 	.word	0x400fc000

0000f934 <CLKPWR_GetCLK>:
CLKPWR_GetCLK():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:119
 *              - CLKPWR_CLKTYPE_PER        : Peripheral clock
 *              - CLKPWR_CLKTYPE_EMC        : EMC clock
 *              - CLKPWR_CLKTYPE_USB        : USB clock
 **********************************************************************/
uint32_t CLKPWR_GetCLK (uint8_t ClkType)
{
    f934:	b480      	push	{r7}
    f936:	b083      	sub	sp, #12
    f938:	af00      	add	r7, sp, #0
    f93a:	4603      	mov	r3, r0
    f93c:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:120
    switch(ClkType)
    f93e:	79fb      	ldrb	r3, [r7, #7]
    f940:	2b03      	cmp	r3, #3
    f942:	d817      	bhi.n	f974 <CLKPWR_GetCLK+0x40>
    f944:	a201      	add	r2, pc, #4	; (adr r2, f94c <CLKPWR_GetCLK+0x18>)
    f946:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    f94a:	bf00      	nop
    f94c:	0000f95d 	.word	0x0000f95d
    f950:	0000f963 	.word	0x0000f963
    f954:	0000f969 	.word	0x0000f969
    f958:	0000f96f 	.word	0x0000f96f
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:123
    {
        case CLKPWR_CLKTYPE_CPU:
            return SystemCoreClock;
    f95c:	4b09      	ldr	r3, [pc, #36]	; (f984 <CLKPWR_GetCLK+0x50>)
    f95e:	681b      	ldr	r3, [r3, #0]
    f960:	e009      	b.n	f976 <CLKPWR_GetCLK+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:126

        case CLKPWR_CLKTYPE_PER:
            return PeripheralClock;
    f962:	4b09      	ldr	r3, [pc, #36]	; (f988 <CLKPWR_GetCLK+0x54>)
    f964:	681b      	ldr	r3, [r3, #0]
    f966:	e006      	b.n	f976 <CLKPWR_GetCLK+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:129

        case CLKPWR_CLKTYPE_EMC:
            return EMCClock;
    f968:	4b08      	ldr	r3, [pc, #32]	; (f98c <CLKPWR_GetCLK+0x58>)
    f96a:	681b      	ldr	r3, [r3, #0]
    f96c:	e003      	b.n	f976 <CLKPWR_GetCLK+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:132

        case CLKPWR_CLKTYPE_USB:
            return USBClock;
    f96e:	4b08      	ldr	r3, [pc, #32]	; (f990 <CLKPWR_GetCLK+0x5c>)
    f970:	681b      	ldr	r3, [r3, #0]
    f972:	e000      	b.n	f976 <CLKPWR_GetCLK+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:135 (discriminator 1)

        default:
            while(1);//error loop
    f974:	e7fe      	b.n	f974 <CLKPWR_GetCLK+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:137
    }
}
    f976:	4618      	mov	r0, r3
    f978:	370c      	adds	r7, #12
    f97a:	46bd      	mov	sp, r7
    f97c:	f85d 7b04 	ldr.w	r7, [sp], #4
    f980:	4770      	bx	lr
    f982:	bf00      	nop
    f984:	100002cc 	.word	0x100002cc
    f988:	100002d0 	.word	0x100002d0
    f98c:	100002d4 	.word	0x100002d4
    f990:	100002d8 	.word	0x100002d8

0000f994 <CLKPWR_ConfigPPWR>:
CLKPWR_ConfigPPWR():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:184
 *              - DISABLE   : Disable power for this peripheral
 *
 * @return none
 **********************************************************************/
void CLKPWR_ConfigPPWR (uint32_t PPType, FunctionalState NewState)
{
    f994:	b480      	push	{r7}
    f996:	b083      	sub	sp, #12
    f998:	af00      	add	r7, sp, #0
    f99a:	6078      	str	r0, [r7, #4]
    f99c:	460b      	mov	r3, r1
    f99e:	70fb      	strb	r3, [r7, #3]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:185
    if (NewState == ENABLE)
    f9a0:	78fb      	ldrb	r3, [r7, #3]
    f9a2:	2b01      	cmp	r3, #1
    f9a4:	d108      	bne.n	f9b8 <CLKPWR_ConfigPPWR+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:187
    {
        LPC_SC->PCONP |= PPType;
    f9a6:	4b0d      	ldr	r3, [pc, #52]	; (f9dc <CLKPWR_ConfigPPWR+0x48>)
    f9a8:	4a0c      	ldr	r2, [pc, #48]	; (f9dc <CLKPWR_ConfigPPWR+0x48>)
    f9aa:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
    f9ae:	687a      	ldr	r2, [r7, #4]
    f9b0:	430a      	orrs	r2, r1
    f9b2:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
    f9b6:	e00b      	b.n	f9d0 <CLKPWR_ConfigPPWR+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:189
    }
    else if (NewState == DISABLE)
    f9b8:	78fb      	ldrb	r3, [r7, #3]
    f9ba:	2b00      	cmp	r3, #0
    f9bc:	d108      	bne.n	f9d0 <CLKPWR_ConfigPPWR+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:191
    {
        LPC_SC->PCONP &= ~PPType;
    f9be:	4b07      	ldr	r3, [pc, #28]	; (f9dc <CLKPWR_ConfigPPWR+0x48>)
    f9c0:	4a06      	ldr	r2, [pc, #24]	; (f9dc <CLKPWR_ConfigPPWR+0x48>)
    f9c2:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
    f9c6:	687a      	ldr	r2, [r7, #4]
    f9c8:	43d2      	mvns	r2, r2
    f9ca:	400a      	ands	r2, r1
    f9cc:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:193
    }
}
    f9d0:	370c      	adds	r7, #12
    f9d2:	46bd      	mov	sp, r7
    f9d4:	f85d 7b04 	ldr.w	r7, [sp], #4
    f9d8:	4770      	bx	lr
    f9da:	bf00      	nop
    f9dc:	400fc000 	.word	0x400fc000

0000f9e0 <CLKPWR_Sleep>:
CLKPWR_Sleep():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:265
 * @brief       Enter Sleep mode with co-operated instruction by the Cortex-M3.
 * @param[in]   None
 * @return      None
 **********************************************************************/
void CLKPWR_Sleep(void)
{
    f9e0:	b480      	push	{r7}
    f9e2:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:266
    LPC_SC->PCON = 0x00;
    f9e4:	4b04      	ldr	r3, [pc, #16]	; (f9f8 <CLKPWR_Sleep+0x18>)
    f9e6:	2200      	movs	r2, #0
    f9e8:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
__WFI():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Chip\Include/core_cmInstr.h:325
    Wait For Interrupt is a hint instruction that suspends execution
    until one of a number of events occurs.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __WFI(void)
{
  __ASM volatile ("wfi");
    f9ec:	bf30      	wfi
CLKPWR_Sleep():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:269
    /* Sleep Mode*/
    __WFI();
}
    f9ee:	46bd      	mov	sp, r7
    f9f0:	f85d 7b04 	ldr.w	r7, [sp], #4
    f9f4:	4770      	bx	lr
    f9f6:	bf00      	nop
    f9f8:	400fc000 	.word	0x400fc000

0000f9fc <CLKPWR_DeepSleep>:
CLKPWR_DeepSleep():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:278
 * @brief       Enter Deep Sleep mode with co-operated instruction by the Cortex-M3.
 * @param[in]   None
 * @return      None
 **********************************************************************/
void CLKPWR_DeepSleep(void)
{
    f9fc:	b480      	push	{r7}
    f9fe:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:280
    /* Deep-Sleep Mode, set SLEEPDEEP bit */
    SCB->SCR = 0x4;
    fa00:	4b05      	ldr	r3, [pc, #20]	; (fa18 <CLKPWR_DeepSleep+0x1c>)
    fa02:	2204      	movs	r2, #4
    fa04:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:281
    LPC_SC->PCON = 0x00;
    fa06:	4b05      	ldr	r3, [pc, #20]	; (fa1c <CLKPWR_DeepSleep+0x20>)
    fa08:	2200      	movs	r2, #0
    fa0a:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
__WFI():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Chip\Include/core_cmInstr.h:325
    fa0e:	bf30      	wfi
CLKPWR_DeepSleep():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:284
    /* Deep Sleep Mode*/
    __WFI();
}
    fa10:	46bd      	mov	sp, r7
    fa12:	f85d 7b04 	ldr.w	r7, [sp], #4
    fa16:	4770      	bx	lr
    fa18:	e000ed00 	.word	0xe000ed00
    fa1c:	400fc000 	.word	0x400fc000

0000fa20 <CLKPWR_PowerDown>:
CLKPWR_PowerDown():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:293
 * @brief       Enter Power Down mode with co-operated instruction by the Cortex-M3.
 * @param[in]   None
 * @return      None
 **********************************************************************/
void CLKPWR_PowerDown(void)
{
    fa20:	b480      	push	{r7}
    fa22:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:295
    /* Deep-Sleep Mode, set SLEEPDEEP bit */
    SCB->SCR = 0x4;
    fa24:	4b05      	ldr	r3, [pc, #20]	; (fa3c <CLKPWR_PowerDown+0x1c>)
    fa26:	2204      	movs	r2, #4
    fa28:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:296
    LPC_SC->PCON = 0x01;
    fa2a:	4b05      	ldr	r3, [pc, #20]	; (fa40 <CLKPWR_PowerDown+0x20>)
    fa2c:	2201      	movs	r2, #1
    fa2e:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
__WFI():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Chip\Include/core_cmInstr.h:325
    fa32:	bf30      	wfi
CLKPWR_PowerDown():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:299
    /* Power Down Mode*/
    __WFI();
}
    fa34:	46bd      	mov	sp, r7
    fa36:	f85d 7b04 	ldr.w	r7, [sp], #4
    fa3a:	4770      	bx	lr
    fa3c:	e000ed00 	.word	0xe000ed00
    fa40:	400fc000 	.word	0x400fc000

0000fa44 <CLKPWR_DeepPowerDown>:
CLKPWR_DeepPowerDown():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:308
 * @brief       Enter Deep Power Down mode with co-operated instruction by the Cortex-M3.
 * @param[in]   None
 * @return      None
 **********************************************************************/
void CLKPWR_DeepPowerDown(void)
{
    fa44:	b480      	push	{r7}
    fa46:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:310
    /* Deep-Sleep Mode, set SLEEPDEEP bit */
    SCB->SCR = 0x4;
    fa48:	4b05      	ldr	r3, [pc, #20]	; (fa60 <CLKPWR_DeepPowerDown+0x1c>)
    fa4a:	2204      	movs	r2, #4
    fa4c:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:311
    LPC_SC->PCON = 0x03;
    fa4e:	4b05      	ldr	r3, [pc, #20]	; (fa64 <CLKPWR_DeepPowerDown+0x20>)
    fa50:	2203      	movs	r2, #3
    fa52:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
__WFI():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Chip\Include/core_cmInstr.h:325
    fa56:	bf30      	wfi
CLKPWR_DeepPowerDown():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_clkpwr.c:314
    /* Deep Power Down Mode*/
    __WFI();
}
    fa58:	46bd      	mov	sp, r7
    fa5a:	f85d 7b04 	ldr.w	r7, [sp], #4
    fa5e:	4770      	bx	lr
    fa60:	e000ed00 	.word	0xe000ed00
    fa64:	400fc000 	.word	0x400fc000

0000fa68 <GPIO_GetPointer>:
GPIO_GetPointer():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:63
 * @brief       Get pointer to GPIO peripheral due to GPIO port
 * @param[in]   portNum     Port Number value, should be in range from 0 to 4.
 * @return      Pointer to GPIO peripheral
 **********************************************************************/
static LPC_GPIO_TypeDef *GPIO_GetPointer(uint8_t portNum)
{
    fa68:	b480      	push	{r7}
    fa6a:	b085      	sub	sp, #20
    fa6c:	af00      	add	r7, sp, #0
    fa6e:	4603      	mov	r3, r0
    fa70:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:64
    LPC_GPIO_TypeDef *pGPIO = NULL;
    fa72:	2300      	movs	r3, #0
    fa74:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:66

    switch (portNum)
    fa76:	79fb      	ldrb	r3, [r7, #7]
    fa78:	2b05      	cmp	r3, #5
    fa7a:	d821      	bhi.n	fac0 <GPIO_GetPointer+0x58>
    fa7c:	a201      	add	r2, pc, #4	; (adr r2, fa84 <GPIO_GetPointer+0x1c>)
    fa7e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    fa82:	bf00      	nop
    fa84:	0000fa9d 	.word	0x0000fa9d
    fa88:	0000faa3 	.word	0x0000faa3
    fa8c:	0000faa9 	.word	0x0000faa9
    fa90:	0000faaf 	.word	0x0000faaf
    fa94:	0000fab5 	.word	0x0000fab5
    fa98:	0000fabb 	.word	0x0000fabb
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:69
    {
        case 0:
            pGPIO = LPC_GPIO0;
    fa9c:	4b0c      	ldr	r3, [pc, #48]	; (fad0 <GPIO_GetPointer+0x68>)
    fa9e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:70
            break;
    faa0:	e00f      	b.n	fac2 <GPIO_GetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:73

        case 1:
            pGPIO = LPC_GPIO1;
    faa2:	4b0c      	ldr	r3, [pc, #48]	; (fad4 <GPIO_GetPointer+0x6c>)
    faa4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:74
            break;
    faa6:	e00c      	b.n	fac2 <GPIO_GetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:77

        case 2:
            pGPIO = LPC_GPIO2;
    faa8:	4b0b      	ldr	r3, [pc, #44]	; (fad8 <GPIO_GetPointer+0x70>)
    faaa:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:78
            break;
    faac:	e009      	b.n	fac2 <GPIO_GetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:81

        case 3:
            pGPIO = LPC_GPIO3;
    faae:	4b0b      	ldr	r3, [pc, #44]	; (fadc <GPIO_GetPointer+0x74>)
    fab0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:82
            break;
    fab2:	e006      	b.n	fac2 <GPIO_GetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:85

        case 4:
            pGPIO = LPC_GPIO4;
    fab4:	4b0a      	ldr	r3, [pc, #40]	; (fae0 <GPIO_GetPointer+0x78>)
    fab6:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:86
            break;
    fab8:	e003      	b.n	fac2 <GPIO_GetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:89

        case 5:
            pGPIO = LPC_GPIO5;
    faba:	4b0a      	ldr	r3, [pc, #40]	; (fae4 <GPIO_GetPointer+0x7c>)
    fabc:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:90
            break;
    fabe:	e000      	b.n	fac2 <GPIO_GetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:93

        default:
            break;
    fac0:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:96
    }

    return pGPIO;
    fac2:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:97
}
    fac4:	4618      	mov	r0, r3
    fac6:	3714      	adds	r7, #20
    fac8:	46bd      	mov	sp, r7
    faca:	f85d 7b04 	ldr.w	r7, [sp], #4
    face:	4770      	bx	lr
    fad0:	20098000 	.word	0x20098000
    fad4:	20098020 	.word	0x20098020
    fad8:	20098040 	.word	0x20098040
    fadc:	20098060 	.word	0x20098060
    fae0:	20098080 	.word	0x20098080
    fae4:	200980a0 	.word	0x200980a0

0000fae8 <FIO_HalfWordGetPointer>:
FIO_HalfWordGetPointer():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:106
 *              due to FIO port
 * @param[in]   portNum     Port Number value, should be in range from 0 to 4.
 * @return      Pointer to FIO peripheral
 **********************************************************************/
static GPIO_HalfWord_TypeDef *FIO_HalfWordGetPointer(uint8_t portNum)
{
    fae8:	b480      	push	{r7}
    faea:	b085      	sub	sp, #20
    faec:	af00      	add	r7, sp, #0
    faee:	4603      	mov	r3, r0
    faf0:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:107
    GPIO_HalfWord_TypeDef *pFIO = NULL;
    faf2:	2300      	movs	r3, #0
    faf4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:109

    switch (portNum)
    faf6:	79fb      	ldrb	r3, [r7, #7]
    faf8:	2b05      	cmp	r3, #5
    fafa:	d821      	bhi.n	fb40 <FIO_HalfWordGetPointer+0x58>
    fafc:	a201      	add	r2, pc, #4	; (adr r2, fb04 <FIO_HalfWordGetPointer+0x1c>)
    fafe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    fb02:	bf00      	nop
    fb04:	0000fb1d 	.word	0x0000fb1d
    fb08:	0000fb23 	.word	0x0000fb23
    fb0c:	0000fb29 	.word	0x0000fb29
    fb10:	0000fb2f 	.word	0x0000fb2f
    fb14:	0000fb35 	.word	0x0000fb35
    fb18:	0000fb3b 	.word	0x0000fb3b
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:112
    {
        case 0:
            pFIO = GPIO0_HalfWord;
    fb1c:	4b0c      	ldr	r3, [pc, #48]	; (fb50 <FIO_HalfWordGetPointer+0x68>)
    fb1e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:113
            break;
    fb20:	e00f      	b.n	fb42 <FIO_HalfWordGetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:116

        case 1:
            pFIO = GPIO1_HalfWord;
    fb22:	4b0c      	ldr	r3, [pc, #48]	; (fb54 <FIO_HalfWordGetPointer+0x6c>)
    fb24:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:117
            break;
    fb26:	e00c      	b.n	fb42 <FIO_HalfWordGetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:120

        case 2:
            pFIO = GPIO2_HalfWord;
    fb28:	4b0b      	ldr	r3, [pc, #44]	; (fb58 <FIO_HalfWordGetPointer+0x70>)
    fb2a:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:121
            break;
    fb2c:	e009      	b.n	fb42 <FIO_HalfWordGetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:124

        case 3:
            pFIO = GPIO3_HalfWord;
    fb2e:	4b0b      	ldr	r3, [pc, #44]	; (fb5c <FIO_HalfWordGetPointer+0x74>)
    fb30:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:125
            break;
    fb32:	e006      	b.n	fb42 <FIO_HalfWordGetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:128

        case 4:
            pFIO = GPIO4_HalfWord;
    fb34:	4b0a      	ldr	r3, [pc, #40]	; (fb60 <FIO_HalfWordGetPointer+0x78>)
    fb36:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:129
            break;
    fb38:	e003      	b.n	fb42 <FIO_HalfWordGetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:132

        case 5:
            pFIO = GPIO5_HalfWord;
    fb3a:	4b0a      	ldr	r3, [pc, #40]	; (fb64 <FIO_HalfWordGetPointer+0x7c>)
    fb3c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:133
            break;
    fb3e:	e000      	b.n	fb42 <FIO_HalfWordGetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:136

        default:
            break;
    fb40:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:139
    }

    return pFIO;
    fb42:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:140
}
    fb44:	4618      	mov	r0, r3
    fb46:	3714      	adds	r7, #20
    fb48:	46bd      	mov	sp, r7
    fb4a:	f85d 7b04 	ldr.w	r7, [sp], #4
    fb4e:	4770      	bx	lr
    fb50:	20098000 	.word	0x20098000
    fb54:	20098020 	.word	0x20098020
    fb58:	20098040 	.word	0x20098040
    fb5c:	20098060 	.word	0x20098060
    fb60:	20098080 	.word	0x20098080
    fb64:	200980a0 	.word	0x200980a0

0000fb68 <FIO_ByteGetPointer>:
FIO_ByteGetPointer():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:149
 *              due to FIO port
 * @param[in]   portNum     Port Number value, should be in range from 0 to 4.
 * @return      Pointer to FIO peripheral
 **********************************************************************/
static GPIO_Byte_TypeDef *FIO_ByteGetPointer(uint8_t portNum)
{
    fb68:	b480      	push	{r7}
    fb6a:	b085      	sub	sp, #20
    fb6c:	af00      	add	r7, sp, #0
    fb6e:	4603      	mov	r3, r0
    fb70:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:150
    GPIO_Byte_TypeDef *pFIO = NULL;
    fb72:	2300      	movs	r3, #0
    fb74:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:152

    switch (portNum)
    fb76:	79fb      	ldrb	r3, [r7, #7]
    fb78:	2b05      	cmp	r3, #5
    fb7a:	d821      	bhi.n	fbc0 <FIO_ByteGetPointer+0x58>
    fb7c:	a201      	add	r2, pc, #4	; (adr r2, fb84 <FIO_ByteGetPointer+0x1c>)
    fb7e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    fb82:	bf00      	nop
    fb84:	0000fb9d 	.word	0x0000fb9d
    fb88:	0000fba3 	.word	0x0000fba3
    fb8c:	0000fba9 	.word	0x0000fba9
    fb90:	0000fbaf 	.word	0x0000fbaf
    fb94:	0000fbb5 	.word	0x0000fbb5
    fb98:	0000fbbb 	.word	0x0000fbbb
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:155
    {
        case 0:
            pFIO = GPIO0_Byte;
    fb9c:	4b0c      	ldr	r3, [pc, #48]	; (fbd0 <FIO_ByteGetPointer+0x68>)
    fb9e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:156
            break;
    fba0:	e00f      	b.n	fbc2 <FIO_ByteGetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:159

        case 1:
            pFIO = GPIO1_Byte;
    fba2:	4b0c      	ldr	r3, [pc, #48]	; (fbd4 <FIO_ByteGetPointer+0x6c>)
    fba4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:160
            break;
    fba6:	e00c      	b.n	fbc2 <FIO_ByteGetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:163

        case 2:
            pFIO = GPIO2_Byte;
    fba8:	4b0b      	ldr	r3, [pc, #44]	; (fbd8 <FIO_ByteGetPointer+0x70>)
    fbaa:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:164
            break;
    fbac:	e009      	b.n	fbc2 <FIO_ByteGetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:167

        case 3:
            pFIO = GPIO3_Byte;
    fbae:	4b0b      	ldr	r3, [pc, #44]	; (fbdc <FIO_ByteGetPointer+0x74>)
    fbb0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:168
            break;
    fbb2:	e006      	b.n	fbc2 <FIO_ByteGetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:171

        case 4:
            pFIO = GPIO4_Byte;
    fbb4:	4b0a      	ldr	r3, [pc, #40]	; (fbe0 <FIO_ByteGetPointer+0x78>)
    fbb6:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:172
            break;
    fbb8:	e003      	b.n	fbc2 <FIO_ByteGetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:175

        case 5:
            pFIO = GPIO5_Byte;
    fbba:	4b0a      	ldr	r3, [pc, #40]	; (fbe4 <FIO_ByteGetPointer+0x7c>)
    fbbc:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:176
            break;
    fbbe:	e000      	b.n	fbc2 <FIO_ByteGetPointer+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:179

        default:
            break;
    fbc0:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:182
    }

    return pFIO;
    fbc2:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:183
}
    fbc4:	4618      	mov	r0, r3
    fbc6:	3714      	adds	r7, #20
    fbc8:	46bd      	mov	sp, r7
    fbca:	f85d 7b04 	ldr.w	r7, [sp], #4
    fbce:	4770      	bx	lr
    fbd0:	20098000 	.word	0x20098000
    fbd4:	20098020 	.word	0x20098020
    fbd8:	20098040 	.word	0x20098040
    fbdc:	20098060 	.word	0x20098060
    fbe0:	20098080 	.word	0x20098080
    fbe4:	200980a0 	.word	0x200980a0

0000fbe8 <GPIO_Init>:
GPIO_Init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:204
 * @return      None
 *
 * Note: 
 **********************************************************************/
void GPIO_Init(void)
{
    fbe8:	b580      	push	{r7, lr}
    fbea:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:205
    CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCGPIO, ENABLE);
    fbec:	f44f 4000 	mov.w	r0, #32768	; 0x8000
    fbf0:	2101      	movs	r1, #1
    fbf2:	f7ff fecf 	bl	f994 <CLKPWR_ConfigPPWR>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:207

    return;
    fbf6:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:208
}
    fbf8:	bd80      	pop	{r7, pc}
    fbfa:	bf00      	nop

0000fbfc <GPIO_Deinit>:
GPIO_Deinit():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:219
 * @return      None
 *
 * Note: 
 **********************************************************************/
void GPIO_Deinit(void)
{
    fbfc:	b580      	push	{r7, lr}
    fbfe:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:220
    CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCGPIO, DISABLE);
    fc00:	f44f 4000 	mov.w	r0, #32768	; 0x8000
    fc04:	2100      	movs	r1, #0
    fc06:	f7ff fec5 	bl	f994 <CLKPWR_ConfigPPWR>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:222

    return;
    fc0a:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:223
}
    fc0c:	bd80      	pop	{r7, pc}
    fc0e:	bf00      	nop

0000fc10 <GPIO_SetDir>:
GPIO_SetDir():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:241
 *
 * Note: All remaining bits that are not activated in bitValue (value '0')
 * will not be effected by this function.
 **********************************************************************/
void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
{
    fc10:	b580      	push	{r7, lr}
    fc12:	b084      	sub	sp, #16
    fc14:	af00      	add	r7, sp, #0
    fc16:	6039      	str	r1, [r7, #0]
    fc18:	4613      	mov	r3, r2
    fc1a:	4602      	mov	r2, r0
    fc1c:	71fa      	strb	r2, [r7, #7]
    fc1e:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:242
    LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
    fc20:	79fb      	ldrb	r3, [r7, #7]
    fc22:	4618      	mov	r0, r3
    fc24:	f7ff ff20 	bl	fa68 <GPIO_GetPointer>
    fc28:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:244

    if (pGPIO != NULL)
    fc2a:	68fb      	ldr	r3, [r7, #12]
    fc2c:	2b00      	cmp	r3, #0
    fc2e:	d010      	beq.n	fc52 <GPIO_SetDir+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:247
    {
        // Enable Output
        if (dir)
    fc30:	79bb      	ldrb	r3, [r7, #6]
    fc32:	2b00      	cmp	r3, #0
    fc34:	d006      	beq.n	fc44 <GPIO_SetDir+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:249
        {
            pGPIO->DIR |= bitValue;
    fc36:	68fb      	ldr	r3, [r7, #12]
    fc38:	681a      	ldr	r2, [r3, #0]
    fc3a:	683b      	ldr	r3, [r7, #0]
    fc3c:	431a      	orrs	r2, r3
    fc3e:	68fb      	ldr	r3, [r7, #12]
    fc40:	601a      	str	r2, [r3, #0]
    fc42:	e006      	b.n	fc52 <GPIO_SetDir+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:254
        }
        // Enable Input
        else
        {
            pGPIO->DIR &= ~bitValue;
    fc44:	68fb      	ldr	r3, [r7, #12]
    fc46:	681a      	ldr	r2, [r3, #0]
    fc48:	683b      	ldr	r3, [r7, #0]
    fc4a:	43db      	mvns	r3, r3
    fc4c:	401a      	ands	r2, r3
    fc4e:	68fb      	ldr	r3, [r7, #12]
    fc50:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:257
        }
    }
}
    fc52:	3710      	adds	r7, #16
    fc54:	46bd      	mov	sp, r7
    fc56:	bd80      	pop	{r7, pc}

0000fc58 <GPIO_SetValue>:
GPIO_SetValue():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:275
 * not effect.
 * - For all remaining bits that are not activated in bitValue (value '0')
 * will not be effected by this function.
 **********************************************************************/
void GPIO_SetValue(uint8_t portNum, uint32_t bitValue)
{
    fc58:	b580      	push	{r7, lr}
    fc5a:	b084      	sub	sp, #16
    fc5c:	af00      	add	r7, sp, #0
    fc5e:	4603      	mov	r3, r0
    fc60:	6039      	str	r1, [r7, #0]
    fc62:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:276
    LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
    fc64:	79fb      	ldrb	r3, [r7, #7]
    fc66:	4618      	mov	r0, r3
    fc68:	f7ff fefe 	bl	fa68 <GPIO_GetPointer>
    fc6c:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:278

    if (pGPIO != NULL)
    fc6e:	68fb      	ldr	r3, [r7, #12]
    fc70:	2b00      	cmp	r3, #0
    fc72:	d002      	beq.n	fc7a <GPIO_SetValue+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:280
    {
        pGPIO->SET = bitValue;
    fc74:	68fb      	ldr	r3, [r7, #12]
    fc76:	683a      	ldr	r2, [r7, #0]
    fc78:	619a      	str	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:282
    }
}
    fc7a:	3710      	adds	r7, #16
    fc7c:	46bd      	mov	sp, r7
    fc7e:	bd80      	pop	{r7, pc}

0000fc80 <GPIO_ClearValue>:
GPIO_ClearValue():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:299
 * not effect.
 * - For all remaining bits that are not activated in bitValue (value '0')
 * will not be effected by this function.
 **********************************************************************/
void GPIO_ClearValue(uint8_t portNum, uint32_t bitValue)
{
    fc80:	b580      	push	{r7, lr}
    fc82:	b084      	sub	sp, #16
    fc84:	af00      	add	r7, sp, #0
    fc86:	4603      	mov	r3, r0
    fc88:	6039      	str	r1, [r7, #0]
    fc8a:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:300
    LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
    fc8c:	79fb      	ldrb	r3, [r7, #7]
    fc8e:	4618      	mov	r0, r3
    fc90:	f7ff feea 	bl	fa68 <GPIO_GetPointer>
    fc94:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:302

    if (pGPIO != NULL)
    fc96:	68fb      	ldr	r3, [r7, #12]
    fc98:	2b00      	cmp	r3, #0
    fc9a:	d002      	beq.n	fca2 <GPIO_ClearValue+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:304
    {
        pGPIO->CLR = bitValue;
    fc9c:	68fb      	ldr	r3, [r7, #12]
    fc9e:	683a      	ldr	r2, [r7, #0]
    fca0:	61da      	str	r2, [r3, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:306
    }
}
    fca2:	3710      	adds	r7, #16
    fca4:	46bd      	mov	sp, r7
    fca6:	bd80      	pop	{r7, pc}

0000fca8 <GPIO_OutputValue>:
GPIO_OutputValue():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:323
 * not effect.
 * - For all remaining bits that are not activated in bitValue (value '0')
 * will not be effected by this function.
 **********************************************************************/
void GPIO_OutputValue(uint8_t portNum, uint32_t bitMask, uint8_t value)
{
    fca8:	b580      	push	{r7, lr}
    fcaa:	b082      	sub	sp, #8
    fcac:	af00      	add	r7, sp, #0
    fcae:	6039      	str	r1, [r7, #0]
    fcb0:	4613      	mov	r3, r2
    fcb2:	4602      	mov	r2, r0
    fcb4:	71fa      	strb	r2, [r7, #7]
    fcb6:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:324
    if (value == 0)
    fcb8:	79bb      	ldrb	r3, [r7, #6]
    fcba:	2b00      	cmp	r3, #0
    fcbc:	d105      	bne.n	fcca <GPIO_OutputValue+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:326
    {
        GPIO_ClearValue(portNum, bitMask);
    fcbe:	79fb      	ldrb	r3, [r7, #7]
    fcc0:	4618      	mov	r0, r3
    fcc2:	6839      	ldr	r1, [r7, #0]
    fcc4:	f7ff ffdc 	bl	fc80 <GPIO_ClearValue>
    fcc8:	e004      	b.n	fcd4 <GPIO_OutputValue+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:330
    }
    else
    {
        GPIO_SetValue(portNum, bitMask);
    fcca:	79fb      	ldrb	r3, [r7, #7]
    fccc:	4618      	mov	r0, r3
    fcce:	6839      	ldr	r1, [r7, #0]
    fcd0:	f7ff ffc2 	bl	fc58 <GPIO_SetValue>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:333
    }

}
    fcd4:	3708      	adds	r7, #8
    fcd6:	46bd      	mov	sp, r7
    fcd8:	bd80      	pop	{r7, pc}
    fcda:	bf00      	nop

0000fcdc <GPIO_ReadValue>:
GPIO_ReadValue():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:345
 *
 * Note: Return value contain state of each port pin (bit) on that GPIO regardless
 * its direction is input or output.
 **********************************************************************/
uint32_t GPIO_ReadValue(uint8_t portNum)
{
    fcdc:	b580      	push	{r7, lr}
    fcde:	b084      	sub	sp, #16
    fce0:	af00      	add	r7, sp, #0
    fce2:	4603      	mov	r3, r0
    fce4:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:346
    LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
    fce6:	79fb      	ldrb	r3, [r7, #7]
    fce8:	4618      	mov	r0, r3
    fcea:	f7ff febd 	bl	fa68 <GPIO_GetPointer>
    fcee:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:348

    if (pGPIO != NULL)
    fcf0:	68fb      	ldr	r3, [r7, #12]
    fcf2:	2b00      	cmp	r3, #0
    fcf4:	d002      	beq.n	fcfc <GPIO_ReadValue+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:350
    {
        return pGPIO->PIN;
    fcf6:	68fb      	ldr	r3, [r7, #12]
    fcf8:	695b      	ldr	r3, [r3, #20]
    fcfa:	e000      	b.n	fcfe <GPIO_ReadValue+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:353
    }

    return (0);
    fcfc:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:354
}
    fcfe:	4618      	mov	r0, r3
    fd00:	3710      	adds	r7, #16
    fd02:	46bd      	mov	sp, r7
    fd04:	bd80      	pop	{r7, pc}
    fd06:	bf00      	nop

0000fd08 <GPIO_IntCmd>:
GPIO_IntCmd():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:367
 *                          - 0: Rising edge
 *                          - 1: Falling edge
 * @return      None
 **********************************************************************/
void GPIO_IntCmd(uint8_t portNum, uint32_t bitValue, uint8_t edgeState)
{
    fd08:	b480      	push	{r7}
    fd0a:	b083      	sub	sp, #12
    fd0c:	af00      	add	r7, sp, #0
    fd0e:	6039      	str	r1, [r7, #0]
    fd10:	4613      	mov	r3, r2
    fd12:	4602      	mov	r2, r0
    fd14:	71fa      	strb	r2, [r7, #7]
    fd16:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:368
    if((portNum == 0)&&(edgeState == 0))
    fd18:	79fb      	ldrb	r3, [r7, #7]
    fd1a:	2b00      	cmp	r3, #0
    fd1c:	d106      	bne.n	fd2c <GPIO_IntCmd+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:368 (discriminator 1)
    fd1e:	79bb      	ldrb	r3, [r7, #6]
    fd20:	2b00      	cmp	r3, #0
    fd22:	d103      	bne.n	fd2c <GPIO_IntCmd+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:369
        LPC_GPIOINT->IO0IntEnR = bitValue;
    fd24:	4b13      	ldr	r3, [pc, #76]	; (fd74 <GPIO_IntCmd+0x6c>)
    fd26:	683a      	ldr	r2, [r7, #0]
    fd28:	611a      	str	r2, [r3, #16]
    fd2a:	e01e      	b.n	fd6a <GPIO_IntCmd+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:370
    else if ((portNum == 2)&&(edgeState == 0))
    fd2c:	79fb      	ldrb	r3, [r7, #7]
    fd2e:	2b02      	cmp	r3, #2
    fd30:	d106      	bne.n	fd40 <GPIO_IntCmd+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:370 (discriminator 1)
    fd32:	79bb      	ldrb	r3, [r7, #6]
    fd34:	2b00      	cmp	r3, #0
    fd36:	d103      	bne.n	fd40 <GPIO_IntCmd+0x38>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:371
        LPC_GPIOINT->IO2IntEnR = bitValue;
    fd38:	4b0e      	ldr	r3, [pc, #56]	; (fd74 <GPIO_IntCmd+0x6c>)
    fd3a:	683a      	ldr	r2, [r7, #0]
    fd3c:	631a      	str	r2, [r3, #48]	; 0x30
    fd3e:	e014      	b.n	fd6a <GPIO_IntCmd+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:372
    else if ((portNum == 0)&&(edgeState == 1))
    fd40:	79fb      	ldrb	r3, [r7, #7]
    fd42:	2b00      	cmp	r3, #0
    fd44:	d106      	bne.n	fd54 <GPIO_IntCmd+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:372 (discriminator 1)
    fd46:	79bb      	ldrb	r3, [r7, #6]
    fd48:	2b01      	cmp	r3, #1
    fd4a:	d103      	bne.n	fd54 <GPIO_IntCmd+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:373
        LPC_GPIOINT->IO0IntEnF = bitValue;
    fd4c:	4b09      	ldr	r3, [pc, #36]	; (fd74 <GPIO_IntCmd+0x6c>)
    fd4e:	683a      	ldr	r2, [r7, #0]
    fd50:	615a      	str	r2, [r3, #20]
    fd52:	e00a      	b.n	fd6a <GPIO_IntCmd+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:374
    else if ((portNum == 2)&&(edgeState == 1))
    fd54:	79fb      	ldrb	r3, [r7, #7]
    fd56:	2b02      	cmp	r3, #2
    fd58:	d106      	bne.n	fd68 <GPIO_IntCmd+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:374 (discriminator 1)
    fd5a:	79bb      	ldrb	r3, [r7, #6]
    fd5c:	2b01      	cmp	r3, #1
    fd5e:	d103      	bne.n	fd68 <GPIO_IntCmd+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:375
        LPC_GPIOINT->IO2IntEnF = bitValue;
    fd60:	4b04      	ldr	r3, [pc, #16]	; (fd74 <GPIO_IntCmd+0x6c>)
    fd62:	683a      	ldr	r2, [r7, #0]
    fd64:	635a      	str	r2, [r3, #52]	; 0x34
    fd66:	e000      	b.n	fd6a <GPIO_IntCmd+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:378 (discriminator 1)
    else
        //Error
        while(1);
    fd68:	e7fe      	b.n	fd68 <GPIO_IntCmd+0x60>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:379
}
    fd6a:	370c      	adds	r7, #12
    fd6c:	46bd      	mov	sp, r7
    fd6e:	f85d 7b04 	ldr.w	r7, [sp], #4
    fd72:	4770      	bx	lr
    fd74:	40028080 	.word	0x40028080

0000fd78 <GPIO_GetIntStatus>:
GPIO_GetIntStatus():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:395
 *                      - ENABLE: Interrupt has been generated due to a rising
 *                              edge on P0.0
 *                      - DISABLE: A rising edge has not been detected on P0.0
 **********************************************************************/
FunctionalState GPIO_GetIntStatus(uint8_t portNum, uint32_t pinNum, uint8_t edgeState)
{
    fd78:	b480      	push	{r7}
    fd7a:	b083      	sub	sp, #12
    fd7c:	af00      	add	r7, sp, #0
    fd7e:	6039      	str	r1, [r7, #0]
    fd80:	4613      	mov	r3, r2
    fd82:	4602      	mov	r2, r0
    fd84:	71fa      	strb	r2, [r7, #7]
    fd86:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:396
    if((portNum == 0) && (edgeState == 0))//Rising Edge
    fd88:	79fb      	ldrb	r3, [r7, #7]
    fd8a:	2b00      	cmp	r3, #0
    fd8c:	d10f      	bne.n	fdae <GPIO_GetIntStatus+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:396 (discriminator 1)
    fd8e:	79bb      	ldrb	r3, [r7, #6]
    fd90:	2b00      	cmp	r3, #0
    fd92:	d10c      	bne.n	fdae <GPIO_GetIntStatus+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:397
        return GPIO_IS_ENABLED(((LPC_GPIOINT->IO0IntStatR)>>pinNum)& 0x1);
    fd94:	4b26      	ldr	r3, [pc, #152]	; (fe30 <GPIO_GetIntStatus+0xb8>)
    fd96:	685a      	ldr	r2, [r3, #4]
    fd98:	683b      	ldr	r3, [r7, #0]
    fd9a:	fa22 f303 	lsr.w	r3, r2, r3
    fd9e:	f003 0301 	and.w	r3, r3, #1
    fda2:	2b00      	cmp	r3, #0
    fda4:	bf0c      	ite	eq
    fda6:	2300      	moveq	r3, #0
    fda8:	2301      	movne	r3, #1
    fdaa:	b2db      	uxtb	r3, r3
    fdac:	e039      	b.n	fe22 <GPIO_GetIntStatus+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:398
    else if ((portNum == 2) && (edgeState == 0))
    fdae:	79fb      	ldrb	r3, [r7, #7]
    fdb0:	2b02      	cmp	r3, #2
    fdb2:	d10f      	bne.n	fdd4 <GPIO_GetIntStatus+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:398 (discriminator 1)
    fdb4:	79bb      	ldrb	r3, [r7, #6]
    fdb6:	2b00      	cmp	r3, #0
    fdb8:	d10c      	bne.n	fdd4 <GPIO_GetIntStatus+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:399
        return GPIO_IS_ENABLED(((LPC_GPIOINT->IO2IntStatR)>>pinNum)& 0x1);
    fdba:	4b1d      	ldr	r3, [pc, #116]	; (fe30 <GPIO_GetIntStatus+0xb8>)
    fdbc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    fdbe:	683b      	ldr	r3, [r7, #0]
    fdc0:	fa22 f303 	lsr.w	r3, r2, r3
    fdc4:	f003 0301 	and.w	r3, r3, #1
    fdc8:	2b00      	cmp	r3, #0
    fdca:	bf0c      	ite	eq
    fdcc:	2300      	moveq	r3, #0
    fdce:	2301      	movne	r3, #1
    fdd0:	b2db      	uxtb	r3, r3
    fdd2:	e026      	b.n	fe22 <GPIO_GetIntStatus+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:400
    else if ((portNum == 0) && (edgeState == 1))//Falling Edge
    fdd4:	79fb      	ldrb	r3, [r7, #7]
    fdd6:	2b00      	cmp	r3, #0
    fdd8:	d10f      	bne.n	fdfa <GPIO_GetIntStatus+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:400 (discriminator 1)
    fdda:	79bb      	ldrb	r3, [r7, #6]
    fddc:	2b01      	cmp	r3, #1
    fdde:	d10c      	bne.n	fdfa <GPIO_GetIntStatus+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:401
        return GPIO_IS_ENABLED(((LPC_GPIOINT->IO0IntStatF)>>pinNum)& 0x1);
    fde0:	4b13      	ldr	r3, [pc, #76]	; (fe30 <GPIO_GetIntStatus+0xb8>)
    fde2:	689a      	ldr	r2, [r3, #8]
    fde4:	683b      	ldr	r3, [r7, #0]
    fde6:	fa22 f303 	lsr.w	r3, r2, r3
    fdea:	f003 0301 	and.w	r3, r3, #1
    fdee:	2b00      	cmp	r3, #0
    fdf0:	bf0c      	ite	eq
    fdf2:	2300      	moveq	r3, #0
    fdf4:	2301      	movne	r3, #1
    fdf6:	b2db      	uxtb	r3, r3
    fdf8:	e013      	b.n	fe22 <GPIO_GetIntStatus+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:402
    else if ((portNum == 2) && (edgeState == 1))
    fdfa:	79fb      	ldrb	r3, [r7, #7]
    fdfc:	2b02      	cmp	r3, #2
    fdfe:	d10f      	bne.n	fe20 <GPIO_GetIntStatus+0xa8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:402 (discriminator 1)
    fe00:	79bb      	ldrb	r3, [r7, #6]
    fe02:	2b01      	cmp	r3, #1
    fe04:	d10c      	bne.n	fe20 <GPIO_GetIntStatus+0xa8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:403
        return GPIO_IS_ENABLED(((LPC_GPIOINT->IO2IntStatF)>>pinNum)& 0x1);
    fe06:	4b0a      	ldr	r3, [pc, #40]	; (fe30 <GPIO_GetIntStatus+0xb8>)
    fe08:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    fe0a:	683b      	ldr	r3, [r7, #0]
    fe0c:	fa22 f303 	lsr.w	r3, r2, r3
    fe10:	f003 0301 	and.w	r3, r3, #1
    fe14:	2b00      	cmp	r3, #0
    fe16:	bf0c      	ite	eq
    fe18:	2300      	moveq	r3, #0
    fe1a:	2301      	movne	r3, #1
    fe1c:	b2db      	uxtb	r3, r3
    fe1e:	e000      	b.n	fe22 <GPIO_GetIntStatus+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:406 (discriminator 1)
    else
        //Error
        while(1);
    fe20:	e7fe      	b.n	fe20 <GPIO_GetIntStatus+0xa8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:407
}
    fe22:	4618      	mov	r0, r3
    fe24:	370c      	adds	r7, #12
    fe26:	46bd      	mov	sp, r7
    fe28:	f85d 7b04 	ldr.w	r7, [sp], #4
    fe2c:	4770      	bx	lr
    fe2e:	bf00      	nop
    fe30:	40028080 	.word	0x40028080

0000fe34 <GPIO_ClearInt>:
GPIO_ClearInt():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:416
 * @param[in]   bitValue    Value that contains all bits on GPIO to enable,
 *                          in range from 0 to 0xFFFFFFFF.
 * @return      None
 **********************************************************************/
void GPIO_ClearInt(uint8_t portNum, uint32_t bitValue)
{
    fe34:	b480      	push	{r7}
    fe36:	b083      	sub	sp, #12
    fe38:	af00      	add	r7, sp, #0
    fe3a:	4603      	mov	r3, r0
    fe3c:	6039      	str	r1, [r7, #0]
    fe3e:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:417
    if(portNum == 0)
    fe40:	79fb      	ldrb	r3, [r7, #7]
    fe42:	2b00      	cmp	r3, #0
    fe44:	d103      	bne.n	fe4e <GPIO_ClearInt+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:418
        LPC_GPIOINT->IO0IntClr = bitValue;
    fe46:	4b08      	ldr	r3, [pc, #32]	; (fe68 <GPIO_ClearInt+0x34>)
    fe48:	683a      	ldr	r2, [r7, #0]
    fe4a:	60da      	str	r2, [r3, #12]
    fe4c:	e007      	b.n	fe5e <GPIO_ClearInt+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:419
    else if (portNum == 2)
    fe4e:	79fb      	ldrb	r3, [r7, #7]
    fe50:	2b02      	cmp	r3, #2
    fe52:	d103      	bne.n	fe5c <GPIO_ClearInt+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:420
        LPC_GPIOINT->IO2IntClr = bitValue;
    fe54:	4b04      	ldr	r3, [pc, #16]	; (fe68 <GPIO_ClearInt+0x34>)
    fe56:	683a      	ldr	r2, [r7, #0]
    fe58:	62da      	str	r2, [r3, #44]	; 0x2c
    fe5a:	e000      	b.n	fe5e <GPIO_ClearInt+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:423 (discriminator 1)
    else
        //Invalid portNum
        while(1);
    fe5c:	e7fe      	b.n	fe5c <GPIO_ClearInt+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:424
}
    fe5e:	370c      	adds	r7, #12
    fe60:	46bd      	mov	sp, r7
    fe62:	f85d 7b04 	ldr.w	r7, [sp], #4
    fe66:	4770      	bx	lr
    fe68:	40028080 	.word	0x40028080

0000fe6c <FIO_SetDir>:
FIO_SetDir():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:433

/**
 * @brief The same with GPIO_SetDir()
 */
void FIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
{
    fe6c:	b580      	push	{r7, lr}
    fe6e:	b082      	sub	sp, #8
    fe70:	af00      	add	r7, sp, #0
    fe72:	6039      	str	r1, [r7, #0]
    fe74:	4613      	mov	r3, r2
    fe76:	4602      	mov	r2, r0
    fe78:	71fa      	strb	r2, [r7, #7]
    fe7a:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:434
    GPIO_SetDir(portNum, bitValue, dir);
    fe7c:	79fa      	ldrb	r2, [r7, #7]
    fe7e:	79bb      	ldrb	r3, [r7, #6]
    fe80:	4610      	mov	r0, r2
    fe82:	6839      	ldr	r1, [r7, #0]
    fe84:	461a      	mov	r2, r3
    fe86:	f7ff fec3 	bl	fc10 <GPIO_SetDir>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:435
}
    fe8a:	3708      	adds	r7, #8
    fe8c:	46bd      	mov	sp, r7
    fe8e:	bd80      	pop	{r7, pc}

0000fe90 <FIO_SetValue>:
FIO_SetValue():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:441

/**
 * @brief The same with GPIO_SetValue()
 */
void FIO_SetValue(uint8_t portNum, uint32_t bitValue)
{
    fe90:	b580      	push	{r7, lr}
    fe92:	b082      	sub	sp, #8
    fe94:	af00      	add	r7, sp, #0
    fe96:	4603      	mov	r3, r0
    fe98:	6039      	str	r1, [r7, #0]
    fe9a:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:442
    GPIO_SetValue(portNum, bitValue);
    fe9c:	79fb      	ldrb	r3, [r7, #7]
    fe9e:	4618      	mov	r0, r3
    fea0:	6839      	ldr	r1, [r7, #0]
    fea2:	f7ff fed9 	bl	fc58 <GPIO_SetValue>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:443
}
    fea6:	3708      	adds	r7, #8
    fea8:	46bd      	mov	sp, r7
    feaa:	bd80      	pop	{r7, pc}

0000feac <FIO_ClearValue>:
FIO_ClearValue():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:449

/**
 * @brief The same with GPIO_ClearValue()
 */
void FIO_ClearValue(uint8_t portNum, uint32_t bitValue)
{
    feac:	b580      	push	{r7, lr}
    feae:	b082      	sub	sp, #8
    feb0:	af00      	add	r7, sp, #0
    feb2:	4603      	mov	r3, r0
    feb4:	6039      	str	r1, [r7, #0]
    feb6:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:450
    GPIO_ClearValue(portNum, bitValue);
    feb8:	79fb      	ldrb	r3, [r7, #7]
    feba:	4618      	mov	r0, r3
    febc:	6839      	ldr	r1, [r7, #0]
    febe:	f7ff fedf 	bl	fc80 <GPIO_ClearValue>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:451
}
    fec2:	3708      	adds	r7, #8
    fec4:	46bd      	mov	sp, r7
    fec6:	bd80      	pop	{r7, pc}

0000fec8 <FIO_ReadValue>:
FIO_ReadValue():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:457

/**
 * @brief The same with GPIO_ReadValue()
 */
uint32_t FIO_ReadValue(uint8_t portNum)
{
    fec8:	b580      	push	{r7, lr}
    feca:	b082      	sub	sp, #8
    fecc:	af00      	add	r7, sp, #0
    fece:	4603      	mov	r3, r0
    fed0:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:458
    return (GPIO_ReadValue(portNum));
    fed2:	79fb      	ldrb	r3, [r7, #7]
    fed4:	4618      	mov	r0, r3
    fed6:	f7ff ff01 	bl	fcdc <GPIO_ReadValue>
    feda:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:459
}
    fedc:	4618      	mov	r0, r3
    fede:	3708      	adds	r7, #8
    fee0:	46bd      	mov	sp, r7
    fee2:	bd80      	pop	{r7, pc}

0000fee4 <FIO_IntCmd>:
FIO_IntCmd():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:465

/**
 * @brief The same with GPIO_IntCmd()
 */
void FIO_IntCmd(uint8_t portNum, uint32_t bitValue, uint8_t edgeState)
{
    fee4:	b580      	push	{r7, lr}
    fee6:	b082      	sub	sp, #8
    fee8:	af00      	add	r7, sp, #0
    feea:	6039      	str	r1, [r7, #0]
    feec:	4613      	mov	r3, r2
    feee:	4602      	mov	r2, r0
    fef0:	71fa      	strb	r2, [r7, #7]
    fef2:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:466
    GPIO_IntCmd(portNum, bitValue, edgeState);
    fef4:	79fa      	ldrb	r2, [r7, #7]
    fef6:	79bb      	ldrb	r3, [r7, #6]
    fef8:	4610      	mov	r0, r2
    fefa:	6839      	ldr	r1, [r7, #0]
    fefc:	461a      	mov	r2, r3
    fefe:	f7ff ff03 	bl	fd08 <GPIO_IntCmd>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:467
}
    ff02:	3708      	adds	r7, #8
    ff04:	46bd      	mov	sp, r7
    ff06:	bd80      	pop	{r7, pc}

0000ff08 <FIO_GetIntStatus>:
FIO_GetIntStatus():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:473

/**
 * @brief The same with GPIO_GetIntStatus()
 */
FunctionalState FIO_GetIntStatus(uint8_t portNum, uint32_t pinNum, uint8_t edgeState)
{
    ff08:	b580      	push	{r7, lr}
    ff0a:	b082      	sub	sp, #8
    ff0c:	af00      	add	r7, sp, #0
    ff0e:	6039      	str	r1, [r7, #0]
    ff10:	4613      	mov	r3, r2
    ff12:	4602      	mov	r2, r0
    ff14:	71fa      	strb	r2, [r7, #7]
    ff16:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:474
    return (GPIO_GetIntStatus(portNum, pinNum, edgeState));
    ff18:	79fa      	ldrb	r2, [r7, #7]
    ff1a:	79bb      	ldrb	r3, [r7, #6]
    ff1c:	4610      	mov	r0, r2
    ff1e:	6839      	ldr	r1, [r7, #0]
    ff20:	461a      	mov	r2, r3
    ff22:	f7ff ff29 	bl	fd78 <GPIO_GetIntStatus>
    ff26:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:475
}
    ff28:	4618      	mov	r0, r3
    ff2a:	3708      	adds	r7, #8
    ff2c:	46bd      	mov	sp, r7
    ff2e:	bd80      	pop	{r7, pc}

0000ff30 <FIO_ClearInt>:
FIO_ClearInt():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:481

/**
 * @brief The same with GPIO_ClearInt()
 */
void FIO_ClearInt(uint8_t portNum, uint32_t bitValue)
{
    ff30:	b580      	push	{r7, lr}
    ff32:	b082      	sub	sp, #8
    ff34:	af00      	add	r7, sp, #0
    ff36:	4603      	mov	r3, r0
    ff38:	6039      	str	r1, [r7, #0]
    ff3a:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:482
    GPIO_ClearInt(portNum, bitValue);
    ff3c:	79fb      	ldrb	r3, [r7, #7]
    ff3e:	4618      	mov	r0, r3
    ff40:	6839      	ldr	r1, [r7, #0]
    ff42:	f7ff ff77 	bl	fe34 <GPIO_ClearInt>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:483
}
    ff46:	3708      	adds	r7, #8
    ff48:	46bd      	mov	sp, r7
    ff4a:	bd80      	pop	{r7, pc}

0000ff4c <FIO_SetMask>:
FIO_SetMask():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:503
 * enables an access to the corresponding physical pin via a read or write access,
 * while value '1' on bit (masked) that corresponding pin will not be changed
 * with write access and if read, will not be reflected in the updated pin.
 **********************************************************************/
void FIO_SetMask(uint8_t portNum, uint32_t bitValue, uint8_t maskValue)
{
    ff4c:	b580      	push	{r7, lr}
    ff4e:	b084      	sub	sp, #16
    ff50:	af00      	add	r7, sp, #0
    ff52:	6039      	str	r1, [r7, #0]
    ff54:	4613      	mov	r3, r2
    ff56:	4602      	mov	r2, r0
    ff58:	71fa      	strb	r2, [r7, #7]
    ff5a:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:504
    LPC_GPIO_TypeDef *pFIO = GPIO_GetPointer(portNum);
    ff5c:	79fb      	ldrb	r3, [r7, #7]
    ff5e:	4618      	mov	r0, r3
    ff60:	f7ff fd82 	bl	fa68 <GPIO_GetPointer>
    ff64:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:506

    if(pFIO != NULL)
    ff66:	68fb      	ldr	r3, [r7, #12]
    ff68:	2b00      	cmp	r3, #0
    ff6a:	d010      	beq.n	ff8e <FIO_SetMask+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:509
    {
        // Mask
        if (maskValue)
    ff6c:	79bb      	ldrb	r3, [r7, #6]
    ff6e:	2b00      	cmp	r3, #0
    ff70:	d006      	beq.n	ff80 <FIO_SetMask+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:511
        {
            pFIO->MASK |= bitValue;
    ff72:	68fb      	ldr	r3, [r7, #12]
    ff74:	691a      	ldr	r2, [r3, #16]
    ff76:	683b      	ldr	r3, [r7, #0]
    ff78:	431a      	orrs	r2, r3
    ff7a:	68fb      	ldr	r3, [r7, #12]
    ff7c:	611a      	str	r2, [r3, #16]
    ff7e:	e006      	b.n	ff8e <FIO_SetMask+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:516
        }
        // Un-mask
        else
        {
            pFIO->MASK &= ~bitValue;
    ff80:	68fb      	ldr	r3, [r7, #12]
    ff82:	691a      	ldr	r2, [r3, #16]
    ff84:	683b      	ldr	r3, [r7, #0]
    ff86:	43db      	mvns	r3, r3
    ff88:	401a      	ands	r2, r3
    ff8a:	68fb      	ldr	r3, [r7, #12]
    ff8c:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:519
        }
    }
}
    ff8e:	3710      	adds	r7, #16
    ff90:	46bd      	mov	sp, r7
    ff92:	bd80      	pop	{r7, pc}

0000ff94 <FIO_HalfWordSetDir>:
FIO_HalfWordSetDir():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:539
 *
 * Note: All remaining bits that are not activated in bitValue (value '0')
 * will not be effected by this function.
 **********************************************************************/
void FIO_HalfWordSetDir(uint8_t portNum, uint8_t halfwordNum, uint16_t bitValue, uint8_t dir)
{
    ff94:	b580      	push	{r7, lr}
    ff96:	b084      	sub	sp, #16
    ff98:	af00      	add	r7, sp, #0
    ff9a:	71f8      	strb	r0, [r7, #7]
    ff9c:	71b9      	strb	r1, [r7, #6]
    ff9e:	80ba      	strh	r2, [r7, #4]
    ffa0:	70fb      	strb	r3, [r7, #3]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:540
    GPIO_HalfWord_TypeDef *pFIO = FIO_HalfWordGetPointer(portNum);
    ffa2:	79fb      	ldrb	r3, [r7, #7]
    ffa4:	4618      	mov	r0, r3
    ffa6:	f7ff fd9f 	bl	fae8 <FIO_HalfWordGetPointer>
    ffaa:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:542

    if(pFIO != NULL)
    ffac:	68fb      	ldr	r3, [r7, #12]
    ffae:	2b00      	cmp	r3, #0
    ffb0:	d033      	beq.n	1001a <FIO_HalfWordSetDir+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:545
    {
        // Output direction
        if (dir)
    ffb2:	78fb      	ldrb	r3, [r7, #3]
    ffb4:	2b00      	cmp	r3, #0
    ffb6:	d014      	beq.n	ffe2 <FIO_HalfWordSetDir+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:548
        {
            // Upper
            if(halfwordNum)
    ffb8:	79bb      	ldrb	r3, [r7, #6]
    ffba:	2b00      	cmp	r3, #0
    ffbc:	d008      	beq.n	ffd0 <FIO_HalfWordSetDir+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:550
            {
                pFIO->FIODIRU |= bitValue;
    ffbe:	68fb      	ldr	r3, [r7, #12]
    ffc0:	885b      	ldrh	r3, [r3, #2]
    ffc2:	b29a      	uxth	r2, r3
    ffc4:	88bb      	ldrh	r3, [r7, #4]
    ffc6:	4313      	orrs	r3, r2
    ffc8:	b29a      	uxth	r2, r3
    ffca:	68fb      	ldr	r3, [r7, #12]
    ffcc:	805a      	strh	r2, [r3, #2]
    ffce:	e024      	b.n	1001a <FIO_HalfWordSetDir+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:555
            }
            // lower
            else
            {
                pFIO->FIODIRL |= bitValue;
    ffd0:	68fb      	ldr	r3, [r7, #12]
    ffd2:	881b      	ldrh	r3, [r3, #0]
    ffd4:	b29a      	uxth	r2, r3
    ffd6:	88bb      	ldrh	r3, [r7, #4]
    ffd8:	4313      	orrs	r3, r2
    ffda:	b29a      	uxth	r2, r3
    ffdc:	68fb      	ldr	r3, [r7, #12]
    ffde:	801a      	strh	r2, [r3, #0]
    ffe0:	e01b      	b.n	1001a <FIO_HalfWordSetDir+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:562
        }
        // Input direction
        else
        {
            // Upper
            if(halfwordNum)
    ffe2:	79bb      	ldrb	r3, [r7, #6]
    ffe4:	2b00      	cmp	r3, #0
    ffe6:	d00c      	beq.n	10002 <FIO_HalfWordSetDir+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:564
            {
                pFIO->FIODIRU &= ~bitValue;
    ffe8:	68fb      	ldr	r3, [r7, #12]
    ffea:	885b      	ldrh	r3, [r3, #2]
    ffec:	b29b      	uxth	r3, r3
    ffee:	b29a      	uxth	r2, r3
    fff0:	88bb      	ldrh	r3, [r7, #4]
    fff2:	43db      	mvns	r3, r3
    fff4:	b29b      	uxth	r3, r3
    fff6:	4013      	ands	r3, r2
    fff8:	b29b      	uxth	r3, r3
    fffa:	b29a      	uxth	r2, r3
    fffc:	68fb      	ldr	r3, [r7, #12]
    fffe:	805a      	strh	r2, [r3, #2]
   10000:	e00b      	b.n	1001a <FIO_HalfWordSetDir+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:569
            }
            // lower
            else
            {
                pFIO->FIODIRL &= ~bitValue;
   10002:	68fb      	ldr	r3, [r7, #12]
   10004:	881b      	ldrh	r3, [r3, #0]
   10006:	b29b      	uxth	r3, r3
   10008:	b29a      	uxth	r2, r3
   1000a:	88bb      	ldrh	r3, [r7, #4]
   1000c:	43db      	mvns	r3, r3
   1000e:	b29b      	uxth	r3, r3
   10010:	4013      	ands	r3, r2
   10012:	b29b      	uxth	r3, r3
   10014:	b29a      	uxth	r2, r3
   10016:	68fb      	ldr	r3, [r7, #12]
   10018:	801a      	strh	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:573
            }
        }
    }
}
   1001a:	3710      	adds	r7, #16
   1001c:	46bd      	mov	sp, r7
   1001e:	bd80      	pop	{r7, pc}

00010020 <FIO_HalfWordSetMask>:
FIO_HalfWordSetMask():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:596
 * enables an access to the corresponding physical pin via a read or write access,
 * while value '1' on bit (masked) that corresponding pin will not be changed
 * with write access and if read, will not be reflected in the updated pin.
 **********************************************************************/
void FIO_HalfWordSetMask(uint8_t portNum, uint8_t halfwordNum, uint16_t bitValue, uint8_t maskValue)
{
   10020:	b580      	push	{r7, lr}
   10022:	b084      	sub	sp, #16
   10024:	af00      	add	r7, sp, #0
   10026:	71f8      	strb	r0, [r7, #7]
   10028:	71b9      	strb	r1, [r7, #6]
   1002a:	80ba      	strh	r2, [r7, #4]
   1002c:	70fb      	strb	r3, [r7, #3]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:597
    GPIO_HalfWord_TypeDef *pFIO = FIO_HalfWordGetPointer(portNum);
   1002e:	79fb      	ldrb	r3, [r7, #7]
   10030:	4618      	mov	r0, r3
   10032:	f7ff fd59 	bl	fae8 <FIO_HalfWordGetPointer>
   10036:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:599

    if(pFIO != NULL)
   10038:	68fb      	ldr	r3, [r7, #12]
   1003a:	2b00      	cmp	r3, #0
   1003c:	d033      	beq.n	100a6 <FIO_HalfWordSetMask+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:602
    {
        // Mask
        if (maskValue)
   1003e:	78fb      	ldrb	r3, [r7, #3]
   10040:	2b00      	cmp	r3, #0
   10042:	d014      	beq.n	1006e <FIO_HalfWordSetMask+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:605
        {
            // Upper
            if(halfwordNum)
   10044:	79bb      	ldrb	r3, [r7, #6]
   10046:	2b00      	cmp	r3, #0
   10048:	d008      	beq.n	1005c <FIO_HalfWordSetMask+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:607
            {
                pFIO->FIOMASKU |= bitValue;
   1004a:	68fb      	ldr	r3, [r7, #12]
   1004c:	8a5b      	ldrh	r3, [r3, #18]
   1004e:	b29a      	uxth	r2, r3
   10050:	88bb      	ldrh	r3, [r7, #4]
   10052:	4313      	orrs	r3, r2
   10054:	b29a      	uxth	r2, r3
   10056:	68fb      	ldr	r3, [r7, #12]
   10058:	825a      	strh	r2, [r3, #18]
   1005a:	e024      	b.n	100a6 <FIO_HalfWordSetMask+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:612
            }
            // lower
            else
            {
                pFIO->FIOMASKL |= bitValue;
   1005c:	68fb      	ldr	r3, [r7, #12]
   1005e:	8a1b      	ldrh	r3, [r3, #16]
   10060:	b29a      	uxth	r2, r3
   10062:	88bb      	ldrh	r3, [r7, #4]
   10064:	4313      	orrs	r3, r2
   10066:	b29a      	uxth	r2, r3
   10068:	68fb      	ldr	r3, [r7, #12]
   1006a:	821a      	strh	r2, [r3, #16]
   1006c:	e01b      	b.n	100a6 <FIO_HalfWordSetMask+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:619
        }
        // Un-mask
        else
        {
            // Upper
            if(halfwordNum)
   1006e:	79bb      	ldrb	r3, [r7, #6]
   10070:	2b00      	cmp	r3, #0
   10072:	d00c      	beq.n	1008e <FIO_HalfWordSetMask+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:621
            {
                pFIO->FIOMASKU &= ~bitValue;
   10074:	68fb      	ldr	r3, [r7, #12]
   10076:	8a5b      	ldrh	r3, [r3, #18]
   10078:	b29b      	uxth	r3, r3
   1007a:	b29a      	uxth	r2, r3
   1007c:	88bb      	ldrh	r3, [r7, #4]
   1007e:	43db      	mvns	r3, r3
   10080:	b29b      	uxth	r3, r3
   10082:	4013      	ands	r3, r2
   10084:	b29b      	uxth	r3, r3
   10086:	b29a      	uxth	r2, r3
   10088:	68fb      	ldr	r3, [r7, #12]
   1008a:	825a      	strh	r2, [r3, #18]
   1008c:	e00b      	b.n	100a6 <FIO_HalfWordSetMask+0x86>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:626
            }
            // lower
            else
            {
                pFIO->FIOMASKL &= ~bitValue;
   1008e:	68fb      	ldr	r3, [r7, #12]
   10090:	8a1b      	ldrh	r3, [r3, #16]
   10092:	b29b      	uxth	r3, r3
   10094:	b29a      	uxth	r2, r3
   10096:	88bb      	ldrh	r3, [r7, #4]
   10098:	43db      	mvns	r3, r3
   1009a:	b29b      	uxth	r3, r3
   1009c:	4013      	ands	r3, r2
   1009e:	b29b      	uxth	r3, r3
   100a0:	b29a      	uxth	r2, r3
   100a2:	68fb      	ldr	r3, [r7, #12]
   100a4:	821a      	strh	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:630
            }
        }
    }
}
   100a6:	3710      	adds	r7, #16
   100a8:	46bd      	mov	sp, r7
   100aa:	bd80      	pop	{r7, pc}

000100ac <FIO_HalfWordSetValue>:
FIO_HalfWordSetValue():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:648
 * not effect.
 * - For all remaining bits that are not activated in bitValue (value '0')
 * will not be effected by this function.
 **********************************************************************/
void FIO_HalfWordSetValue(uint8_t portNum, uint8_t halfwordNum, uint16_t bitValue)
{
   100ac:	b580      	push	{r7, lr}
   100ae:	b084      	sub	sp, #16
   100b0:	af00      	add	r7, sp, #0
   100b2:	4613      	mov	r3, r2
   100b4:	4602      	mov	r2, r0
   100b6:	71fa      	strb	r2, [r7, #7]
   100b8:	460a      	mov	r2, r1
   100ba:	71ba      	strb	r2, [r7, #6]
   100bc:	80bb      	strh	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:649
    GPIO_HalfWord_TypeDef *pFIO = FIO_HalfWordGetPointer(portNum);
   100be:	79fb      	ldrb	r3, [r7, #7]
   100c0:	4618      	mov	r0, r3
   100c2:	f7ff fd11 	bl	fae8 <FIO_HalfWordGetPointer>
   100c6:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:651

    if(pFIO != NULL)
   100c8:	68fb      	ldr	r3, [r7, #12]
   100ca:	2b00      	cmp	r3, #0
   100cc:	d009      	beq.n	100e2 <FIO_HalfWordSetValue+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:654
    {
        // Upper
        if(halfwordNum)
   100ce:	79bb      	ldrb	r3, [r7, #6]
   100d0:	2b00      	cmp	r3, #0
   100d2:	d003      	beq.n	100dc <FIO_HalfWordSetValue+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:656
        {
            pFIO->FIOSETU = bitValue;
   100d4:	68fb      	ldr	r3, [r7, #12]
   100d6:	88ba      	ldrh	r2, [r7, #4]
   100d8:	835a      	strh	r2, [r3, #26]
   100da:	e002      	b.n	100e2 <FIO_HalfWordSetValue+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:661
        }
        // lower
        else
        {
            pFIO->FIOSETL = bitValue;
   100dc:	68fb      	ldr	r3, [r7, #12]
   100de:	88ba      	ldrh	r2, [r7, #4]
   100e0:	831a      	strh	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:664
        }
    }
}
   100e2:	3710      	adds	r7, #16
   100e4:	46bd      	mov	sp, r7
   100e6:	bd80      	pop	{r7, pc}

000100e8 <FIO_HalfWordClearValue>:
FIO_HalfWordClearValue():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:682
 * not effect.
 * - For all remaining bits that are not activated in bitValue (value '0')
 * will not be effected by this function.
 **********************************************************************/
void FIO_HalfWordClearValue(uint8_t portNum, uint8_t halfwordNum, uint16_t bitValue)
{
   100e8:	b580      	push	{r7, lr}
   100ea:	b084      	sub	sp, #16
   100ec:	af00      	add	r7, sp, #0
   100ee:	4613      	mov	r3, r2
   100f0:	4602      	mov	r2, r0
   100f2:	71fa      	strb	r2, [r7, #7]
   100f4:	460a      	mov	r2, r1
   100f6:	71ba      	strb	r2, [r7, #6]
   100f8:	80bb      	strh	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:683
    GPIO_HalfWord_TypeDef *pFIO = FIO_HalfWordGetPointer(portNum);
   100fa:	79fb      	ldrb	r3, [r7, #7]
   100fc:	4618      	mov	r0, r3
   100fe:	f7ff fcf3 	bl	fae8 <FIO_HalfWordGetPointer>
   10102:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:685

    if(pFIO != NULL)
   10104:	68fb      	ldr	r3, [r7, #12]
   10106:	2b00      	cmp	r3, #0
   10108:	d009      	beq.n	1011e <FIO_HalfWordClearValue+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:688
    {
        // Upper
        if(halfwordNum)
   1010a:	79bb      	ldrb	r3, [r7, #6]
   1010c:	2b00      	cmp	r3, #0
   1010e:	d003      	beq.n	10118 <FIO_HalfWordClearValue+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:690
        {
            pFIO->FIOCLRU = bitValue;
   10110:	68fb      	ldr	r3, [r7, #12]
   10112:	88ba      	ldrh	r2, [r7, #4]
   10114:	83da      	strh	r2, [r3, #30]
   10116:	e002      	b.n	1011e <FIO_HalfWordClearValue+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:695
        }
        // lower
        else
        {
            pFIO->FIOCLRL = bitValue;
   10118:	68fb      	ldr	r3, [r7, #12]
   1011a:	88ba      	ldrh	r2, [r7, #4]
   1011c:	839a      	strh	r2, [r3, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:698
        }
    }
}
   1011e:	3710      	adds	r7, #16
   10120:	46bd      	mov	sp, r7
   10122:	bd80      	pop	{r7, pc}

00010124 <FIO_HalfWordReadValue>:
FIO_HalfWordReadValue():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:711
 * @return      Current value of FIO port pin of specified halfword.
 * Note: Return value contain state of each port pin (bit) on that FIO regardless
 * its direction is input or output.
 **********************************************************************/
uint16_t FIO_HalfWordReadValue(uint8_t portNum, uint8_t halfwordNum)
{
   10124:	b580      	push	{r7, lr}
   10126:	b084      	sub	sp, #16
   10128:	af00      	add	r7, sp, #0
   1012a:	4602      	mov	r2, r0
   1012c:	460b      	mov	r3, r1
   1012e:	71fa      	strb	r2, [r7, #7]
   10130:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:712
    GPIO_HalfWord_TypeDef *pFIO = FIO_HalfWordGetPointer(portNum);
   10132:	79fb      	ldrb	r3, [r7, #7]
   10134:	4618      	mov	r0, r3
   10136:	f7ff fcd7 	bl	fae8 <FIO_HalfWordGetPointer>
   1013a:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:714

    if(pFIO != NULL)
   1013c:	68fb      	ldr	r3, [r7, #12]
   1013e:	2b00      	cmp	r3, #0
   10140:	d00a      	beq.n	10158 <FIO_HalfWordReadValue+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:717
    {
        // Upper
        if(halfwordNum)
   10142:	79bb      	ldrb	r3, [r7, #6]
   10144:	2b00      	cmp	r3, #0
   10146:	d003      	beq.n	10150 <FIO_HalfWordReadValue+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:719
        {
            return (pFIO->FIOPINU);
   10148:	68fb      	ldr	r3, [r7, #12]
   1014a:	8adb      	ldrh	r3, [r3, #22]
   1014c:	b29b      	uxth	r3, r3
   1014e:	e004      	b.n	1015a <FIO_HalfWordReadValue+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:724
        }
        // lower
        else
        {
            return (pFIO->FIOPINL);
   10150:	68fb      	ldr	r3, [r7, #12]
   10152:	8a9b      	ldrh	r3, [r3, #20]
   10154:	b29b      	uxth	r3, r3
   10156:	e000      	b.n	1015a <FIO_HalfWordReadValue+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:728
        }
    }

    return (0);
   10158:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:729
}
   1015a:	4618      	mov	r0, r3
   1015c:	3710      	adds	r7, #16
   1015e:	46bd      	mov	sp, r7
   10160:	bd80      	pop	{r7, pc}
   10162:	bf00      	nop

00010164 <FIO_ByteSetDir>:
FIO_ByteSetDir():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:749
 *
 * Note: All remaining bits that are not activated in bitValue (value '0')
 * will not be effected by this function.
 **********************************************************************/
void FIO_ByteSetDir(uint8_t portNum, uint8_t byteNum, uint8_t bitValue, uint8_t dir)
{
   10164:	b580      	push	{r7, lr}
   10166:	b084      	sub	sp, #16
   10168:	af00      	add	r7, sp, #0
   1016a:	71f8      	strb	r0, [r7, #7]
   1016c:	71b9      	strb	r1, [r7, #6]
   1016e:	717a      	strb	r2, [r7, #5]
   10170:	713b      	strb	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:750
    GPIO_Byte_TypeDef *pFIO = FIO_ByteGetPointer(portNum);
   10172:	79fb      	ldrb	r3, [r7, #7]
   10174:	4618      	mov	r0, r3
   10176:	f7ff fcf7 	bl	fb68 <FIO_ByteGetPointer>
   1017a:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:752

    if(pFIO != NULL)
   1017c:	68fb      	ldr	r3, [r7, #12]
   1017e:	2b00      	cmp	r3, #0
   10180:	d021      	beq.n	101c6 <FIO_ByteSetDir+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:755
    {
        // Output direction
        if (dir)
   10182:	793b      	ldrb	r3, [r7, #4]
   10184:	2b00      	cmp	r3, #0
   10186:	d00d      	beq.n	101a4 <FIO_ByteSetDir+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:757
        {
            if (byteNum <= 3)
   10188:	79bb      	ldrb	r3, [r7, #6]
   1018a:	2b03      	cmp	r3, #3
   1018c:	d81b      	bhi.n	101c6 <FIO_ByteSetDir+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:759
            {
                pFIO->FIODIR[byteNum] |= bitValue;
   1018e:	79bb      	ldrb	r3, [r7, #6]
   10190:	79ba      	ldrb	r2, [r7, #6]
   10192:	68f9      	ldr	r1, [r7, #12]
   10194:	5c8a      	ldrb	r2, [r1, r2]
   10196:	b2d1      	uxtb	r1, r2
   10198:	797a      	ldrb	r2, [r7, #5]
   1019a:	430a      	orrs	r2, r1
   1019c:	b2d1      	uxtb	r1, r2
   1019e:	68fa      	ldr	r2, [r7, #12]
   101a0:	54d1      	strb	r1, [r2, r3]
   101a2:	e010      	b.n	101c6 <FIO_ByteSetDir+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:765
            }
        }
        // Input direction
        else
        {
            if (byteNum <= 3)
   101a4:	79bb      	ldrb	r3, [r7, #6]
   101a6:	2b03      	cmp	r3, #3
   101a8:	d80d      	bhi.n	101c6 <FIO_ByteSetDir+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:767
            {
                pFIO->FIODIR[byteNum] &= ~bitValue;
   101aa:	79bb      	ldrb	r3, [r7, #6]
   101ac:	79ba      	ldrb	r2, [r7, #6]
   101ae:	68f9      	ldr	r1, [r7, #12]
   101b0:	5c8a      	ldrb	r2, [r1, r2]
   101b2:	b2d2      	uxtb	r2, r2
   101b4:	b2d1      	uxtb	r1, r2
   101b6:	797a      	ldrb	r2, [r7, #5]
   101b8:	43d2      	mvns	r2, r2
   101ba:	b2d2      	uxtb	r2, r2
   101bc:	400a      	ands	r2, r1
   101be:	b2d2      	uxtb	r2, r2
   101c0:	b2d1      	uxtb	r1, r2
   101c2:	68fa      	ldr	r2, [r7, #12]
   101c4:	54d1      	strb	r1, [r2, r3]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:771
            }
        }
    }
}
   101c6:	3710      	adds	r7, #16
   101c8:	46bd      	mov	sp, r7
   101ca:	bd80      	pop	{r7, pc}

000101cc <FIO_ByteSetMask>:
FIO_ByteSetMask():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:793
 * enables an access to the corresponding physical pin via a read or write access,
 * while value '1' on bit (masked) that corresponding pin will not be changed
 * with write access and if read, will not be reflected in the updated pin.
 **********************************************************************/
void FIO_ByteSetMask(uint8_t portNum, uint8_t byteNum, uint8_t bitValue, uint8_t maskValue)
{
   101cc:	b580      	push	{r7, lr}
   101ce:	b084      	sub	sp, #16
   101d0:	af00      	add	r7, sp, #0
   101d2:	71f8      	strb	r0, [r7, #7]
   101d4:	71b9      	strb	r1, [r7, #6]
   101d6:	717a      	strb	r2, [r7, #5]
   101d8:	713b      	strb	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:794
    GPIO_Byte_TypeDef *pFIO = FIO_ByteGetPointer(portNum);
   101da:	79fb      	ldrb	r3, [r7, #7]
   101dc:	4618      	mov	r0, r3
   101de:	f7ff fcc3 	bl	fb68 <FIO_ByteGetPointer>
   101e2:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:796

    if(pFIO != NULL)
   101e4:	68fb      	ldr	r3, [r7, #12]
   101e6:	2b00      	cmp	r3, #0
   101e8:	d025      	beq.n	10236 <FIO_ByteSetMask+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:799
    {
        // Mask
        if (maskValue)
   101ea:	793b      	ldrb	r3, [r7, #4]
   101ec:	2b00      	cmp	r3, #0
   101ee:	d00f      	beq.n	10210 <FIO_ByteSetMask+0x44>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:801
        {
            if (byteNum <= 3)
   101f0:	79bb      	ldrb	r3, [r7, #6]
   101f2:	2b03      	cmp	r3, #3
   101f4:	d81f      	bhi.n	10236 <FIO_ByteSetMask+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:803
            {
                pFIO->FIOMASK[byteNum] |= bitValue;
   101f6:	79bb      	ldrb	r3, [r7, #6]
   101f8:	79ba      	ldrb	r2, [r7, #6]
   101fa:	68f9      	ldr	r1, [r7, #12]
   101fc:	440a      	add	r2, r1
   101fe:	7c12      	ldrb	r2, [r2, #16]
   10200:	b2d1      	uxtb	r1, r2
   10202:	797a      	ldrb	r2, [r7, #5]
   10204:	430a      	orrs	r2, r1
   10206:	b2d2      	uxtb	r2, r2
   10208:	68f9      	ldr	r1, [r7, #12]
   1020a:	440b      	add	r3, r1
   1020c:	741a      	strb	r2, [r3, #16]
   1020e:	e012      	b.n	10236 <FIO_ByteSetMask+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:808
            }
        }
        // Un-mask
        else {
            if (byteNum <= 3)
   10210:	79bb      	ldrb	r3, [r7, #6]
   10212:	2b03      	cmp	r3, #3
   10214:	d80f      	bhi.n	10236 <FIO_ByteSetMask+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:810
            {
                pFIO->FIOMASK[byteNum] &= ~bitValue;
   10216:	79bb      	ldrb	r3, [r7, #6]
   10218:	79ba      	ldrb	r2, [r7, #6]
   1021a:	68f9      	ldr	r1, [r7, #12]
   1021c:	440a      	add	r2, r1
   1021e:	7c12      	ldrb	r2, [r2, #16]
   10220:	b2d2      	uxtb	r2, r2
   10222:	b2d1      	uxtb	r1, r2
   10224:	797a      	ldrb	r2, [r7, #5]
   10226:	43d2      	mvns	r2, r2
   10228:	b2d2      	uxtb	r2, r2
   1022a:	400a      	ands	r2, r1
   1022c:	b2d2      	uxtb	r2, r2
   1022e:	b2d2      	uxtb	r2, r2
   10230:	68f9      	ldr	r1, [r7, #12]
   10232:	440b      	add	r3, r1
   10234:	741a      	strb	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:814
            }
        }
    }
}
   10236:	3710      	adds	r7, #16
   10238:	46bd      	mov	sp, r7
   1023a:	bd80      	pop	{r7, pc}

0001023c <FIO_ByteSetValue>:
FIO_ByteSetValue():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:832
 * not effect.
 * - For all remaining bits that are not activated in bitValue (value '0')
 * will not be effected by this function.
 **********************************************************************/
void FIO_ByteSetValue(uint8_t portNum, uint8_t byteNum, uint8_t bitValue)
{
   1023c:	b580      	push	{r7, lr}
   1023e:	b084      	sub	sp, #16
   10240:	af00      	add	r7, sp, #0
   10242:	4613      	mov	r3, r2
   10244:	4602      	mov	r2, r0
   10246:	71fa      	strb	r2, [r7, #7]
   10248:	460a      	mov	r2, r1
   1024a:	71ba      	strb	r2, [r7, #6]
   1024c:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:833
    GPIO_Byte_TypeDef *pFIO = FIO_ByteGetPointer(portNum);
   1024e:	79fb      	ldrb	r3, [r7, #7]
   10250:	4618      	mov	r0, r3
   10252:	f7ff fc89 	bl	fb68 <FIO_ByteGetPointer>
   10256:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:835

    if (pFIO != NULL) {
   10258:	68fb      	ldr	r3, [r7, #12]
   1025a:	2b00      	cmp	r3, #0
   1025c:	d007      	beq.n	1026e <FIO_ByteSetValue+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:836
        if (byteNum <= 3)
   1025e:	79bb      	ldrb	r3, [r7, #6]
   10260:	2b03      	cmp	r3, #3
   10262:	d804      	bhi.n	1026e <FIO_ByteSetValue+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:838
        {
            pFIO->FIOSET[byteNum] = bitValue;
   10264:	79bb      	ldrb	r3, [r7, #6]
   10266:	68fa      	ldr	r2, [r7, #12]
   10268:	4413      	add	r3, r2
   1026a:	797a      	ldrb	r2, [r7, #5]
   1026c:	761a      	strb	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:841
        }
    }
}
   1026e:	3710      	adds	r7, #16
   10270:	46bd      	mov	sp, r7
   10272:	bd80      	pop	{r7, pc}

00010274 <FIO_ByteClearValue>:
FIO_ByteClearValue():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:859
 * not effect.
 * - For all remaining bits that are not activated in bitValue (value '0')
 * will not be effected by this function.
 **********************************************************************/
void FIO_ByteClearValue(uint8_t portNum, uint8_t byteNum, uint8_t bitValue)
{
   10274:	b580      	push	{r7, lr}
   10276:	b084      	sub	sp, #16
   10278:	af00      	add	r7, sp, #0
   1027a:	4613      	mov	r3, r2
   1027c:	4602      	mov	r2, r0
   1027e:	71fa      	strb	r2, [r7, #7]
   10280:	460a      	mov	r2, r1
   10282:	71ba      	strb	r2, [r7, #6]
   10284:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:860
    GPIO_Byte_TypeDef *pFIO = FIO_ByteGetPointer(portNum);
   10286:	79fb      	ldrb	r3, [r7, #7]
   10288:	4618      	mov	r0, r3
   1028a:	f7ff fc6d 	bl	fb68 <FIO_ByteGetPointer>
   1028e:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:862

    if (pFIO != NULL)
   10290:	68fb      	ldr	r3, [r7, #12]
   10292:	2b00      	cmp	r3, #0
   10294:	d007      	beq.n	102a6 <FIO_ByteClearValue+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:864
    {
        if (byteNum <= 3)
   10296:	79bb      	ldrb	r3, [r7, #6]
   10298:	2b03      	cmp	r3, #3
   1029a:	d804      	bhi.n	102a6 <FIO_ByteClearValue+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:866
        {
            pFIO->FIOCLR[byteNum] = bitValue;
   1029c:	79bb      	ldrb	r3, [r7, #6]
   1029e:	68fa      	ldr	r2, [r7, #12]
   102a0:	4413      	add	r3, r2
   102a2:	797a      	ldrb	r2, [r7, #5]
   102a4:	771a      	strb	r2, [r3, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:869
        }
    }
}
   102a6:	3710      	adds	r7, #16
   102a8:	46bd      	mov	sp, r7
   102aa:	bd80      	pop	{r7, pc}

000102ac <FIO_ByteReadValue>:
FIO_ByteReadValue():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:882
 * @return      Current value of FIO port pin of specified byte part.
 * Note: Return value contain state of each port pin (bit) on that FIO regardless
 * its direction is input or output.
 **********************************************************************/
uint8_t FIO_ByteReadValue(uint8_t portNum, uint8_t byteNum)
{
   102ac:	b580      	push	{r7, lr}
   102ae:	b084      	sub	sp, #16
   102b0:	af00      	add	r7, sp, #0
   102b2:	4602      	mov	r2, r0
   102b4:	460b      	mov	r3, r1
   102b6:	71fa      	strb	r2, [r7, #7]
   102b8:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:883
    GPIO_Byte_TypeDef *pFIO = FIO_ByteGetPointer(portNum);
   102ba:	79fb      	ldrb	r3, [r7, #7]
   102bc:	4618      	mov	r0, r3
   102be:	f7ff fc53 	bl	fb68 <FIO_ByteGetPointer>
   102c2:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:885

    if (pFIO != NULL)
   102c4:	68fb      	ldr	r3, [r7, #12]
   102c6:	2b00      	cmp	r3, #0
   102c8:	d008      	beq.n	102dc <FIO_ByteReadValue+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:887
    {
        if (byteNum <= 3)
   102ca:	79bb      	ldrb	r3, [r7, #6]
   102cc:	2b03      	cmp	r3, #3
   102ce:	d805      	bhi.n	102dc <FIO_ByteReadValue+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:889
        {
            return (pFIO->FIOPIN[byteNum]);
   102d0:	79bb      	ldrb	r3, [r7, #6]
   102d2:	68fa      	ldr	r2, [r7, #12]
   102d4:	4413      	add	r3, r2
   102d6:	7d1b      	ldrb	r3, [r3, #20]
   102d8:	b2db      	uxtb	r3, r3
   102da:	e000      	b.n	102de <FIO_ByteReadValue+0x32>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:892
        }
    }
    return (0);
   102dc:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_gpio.c:893
}
   102de:	4618      	mov	r0, r3
   102e0:	3710      	adds	r7, #16
   102e2:	46bd      	mov	sp, r7
   102e4:	bd80      	pop	{r7, pc}
   102e6:	bf00      	nop

000102e8 <NVIC_DeInit>:
NVIC_DeInit():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:81
 * - Disable Interrupt (32 IRQ interrupt sources that matched with LPC178X)
 * - Clear all Pending Interrupts (32 IRQ interrupt source that matched with LPC178X)
 * - Clear all Interrupt Priorities (32 IRQ interrupt source that matched with LPC178X)
 *******************************************************************************/
void NVIC_DeInit(void)
{
   102e8:	b480      	push	{r7}
   102ea:	b083      	sub	sp, #12
   102ec:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:85
    uint8_t tmp;

    /* Disable all interrupts */
    NVIC->ICER[0] = 0xFFFFFFFF;
   102ee:	4b13      	ldr	r3, [pc, #76]	; (1033c <NVIC_DeInit+0x54>)
   102f0:	f04f 32ff 	mov.w	r2, #4294967295
   102f4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:86
    NVIC->ICER[1] = 0x00000001;
   102f8:	4b10      	ldr	r3, [pc, #64]	; (1033c <NVIC_DeInit+0x54>)
   102fa:	2201      	movs	r2, #1
   102fc:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:88
    /* Clear all pending interrupts */
    NVIC->ICPR[0] = 0xFFFFFFFF;
   10300:	4b0e      	ldr	r3, [pc, #56]	; (1033c <NVIC_DeInit+0x54>)
   10302:	f04f 32ff 	mov.w	r2, #4294967295
   10306:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:89
    NVIC->ICPR[1] = 0x00000001;
   1030a:	4b0c      	ldr	r3, [pc, #48]	; (1033c <NVIC_DeInit+0x54>)
   1030c:	2201      	movs	r2, #1
   1030e:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:92

    /* Clear all interrupt priority */
    for (tmp = 0; tmp < 32; tmp++) {
   10312:	2300      	movs	r3, #0
   10314:	71fb      	strb	r3, [r7, #7]
   10316:	e008      	b.n	1032a <NVIC_DeInit+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:93 (discriminator 2)
        NVIC->IP[tmp] = 0x00;
   10318:	4a08      	ldr	r2, [pc, #32]	; (1033c <NVIC_DeInit+0x54>)
   1031a:	79fb      	ldrb	r3, [r7, #7]
   1031c:	4413      	add	r3, r2
   1031e:	2200      	movs	r2, #0
   10320:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:92 (discriminator 2)
    /* Clear all pending interrupts */
    NVIC->ICPR[0] = 0xFFFFFFFF;
    NVIC->ICPR[1] = 0x00000001;

    /* Clear all interrupt priority */
    for (tmp = 0; tmp < 32; tmp++) {
   10324:	79fb      	ldrb	r3, [r7, #7]
   10326:	3301      	adds	r3, #1
   10328:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:92 (discriminator 1)
   1032a:	79fb      	ldrb	r3, [r7, #7]
   1032c:	2b1f      	cmp	r3, #31
   1032e:	d9f3      	bls.n	10318 <NVIC_DeInit+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:95
        NVIC->IP[tmp] = 0x00;
    }
}
   10330:	370c      	adds	r7, #12
   10332:	46bd      	mov	sp, r7
   10334:	f85d 7b04 	ldr.w	r7, [sp], #4
   10338:	4770      	bx	lr
   1033a:	bf00      	nop
   1033c:	e000e100 	.word	0xe000e100

00010340 <NVIC_SCBDeInit>:
NVIC_SCBDeInit():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:116
 * - Configurable Fault Status Register
 * - Hard Fault Status Register
 * - Debug Fault Status Register
 *******************************************************************************/
void NVIC_SCBDeInit(void)
{
   10340:	b480      	push	{r7}
   10342:	b083      	sub	sp, #12
   10344:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:119
    uint8_t tmp;

    SCB->ICSR = 0x0A000000;
   10346:	4b19      	ldr	r3, [pc, #100]	; (103ac <NVIC_SCBDeInit+0x6c>)
   10348:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
   1034c:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:120
    SCB->VTOR = 0x00000000;
   1034e:	4b17      	ldr	r3, [pc, #92]	; (103ac <NVIC_SCBDeInit+0x6c>)
   10350:	2200      	movs	r2, #0
   10352:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:121
    SCB->AIRCR = 0x05FA0000;
   10354:	4b15      	ldr	r3, [pc, #84]	; (103ac <NVIC_SCBDeInit+0x6c>)
   10356:	4a16      	ldr	r2, [pc, #88]	; (103b0 <NVIC_SCBDeInit+0x70>)
   10358:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:122
    SCB->SCR = 0x00000000;
   1035a:	4b14      	ldr	r3, [pc, #80]	; (103ac <NVIC_SCBDeInit+0x6c>)
   1035c:	2200      	movs	r2, #0
   1035e:	611a      	str	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:123
    SCB->CCR = 0x00000000;
   10360:	4b12      	ldr	r3, [pc, #72]	; (103ac <NVIC_SCBDeInit+0x6c>)
   10362:	2200      	movs	r2, #0
   10364:	615a      	str	r2, [r3, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:125

    for (tmp = 0; tmp < 32; tmp++) {
   10366:	2300      	movs	r3, #0
   10368:	71fb      	strb	r3, [r7, #7]
   1036a:	e007      	b.n	1037c <NVIC_SCBDeInit+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:126 (discriminator 2)
        SCB->SHP[tmp] = 0x00;
   1036c:	4a0f      	ldr	r2, [pc, #60]	; (103ac <NVIC_SCBDeInit+0x6c>)
   1036e:	79fb      	ldrb	r3, [r7, #7]
   10370:	4413      	add	r3, r2
   10372:	2200      	movs	r2, #0
   10374:	761a      	strb	r2, [r3, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:125 (discriminator 2)
    SCB->VTOR = 0x00000000;
    SCB->AIRCR = 0x05FA0000;
    SCB->SCR = 0x00000000;
    SCB->CCR = 0x00000000;

    for (tmp = 0; tmp < 32; tmp++) {
   10376:	79fb      	ldrb	r3, [r7, #7]
   10378:	3301      	adds	r3, #1
   1037a:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:125 (discriminator 1)
   1037c:	79fb      	ldrb	r3, [r7, #7]
   1037e:	2b1f      	cmp	r3, #31
   10380:	d9f4      	bls.n	1036c <NVIC_SCBDeInit+0x2c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:129
        SCB->SHP[tmp] = 0x00;
    }

    SCB->SHCSR = 0x00000000;
   10382:	4b0a      	ldr	r3, [pc, #40]	; (103ac <NVIC_SCBDeInit+0x6c>)
   10384:	2200      	movs	r2, #0
   10386:	625a      	str	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:130
    SCB->CFSR = 0xFFFFFFFF;
   10388:	4b08      	ldr	r3, [pc, #32]	; (103ac <NVIC_SCBDeInit+0x6c>)
   1038a:	f04f 32ff 	mov.w	r2, #4294967295
   1038e:	629a      	str	r2, [r3, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:131
    SCB->HFSR = 0xFFFFFFFF;
   10390:	4b06      	ldr	r3, [pc, #24]	; (103ac <NVIC_SCBDeInit+0x6c>)
   10392:	f04f 32ff 	mov.w	r2, #4294967295
   10396:	62da      	str	r2, [r3, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:132
    SCB->DFSR = 0xFFFFFFFF;
   10398:	4b04      	ldr	r3, [pc, #16]	; (103ac <NVIC_SCBDeInit+0x6c>)
   1039a:	f04f 32ff 	mov.w	r2, #4294967295
   1039e:	631a      	str	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:133
}
   103a0:	370c      	adds	r7, #12
   103a2:	46bd      	mov	sp, r7
   103a4:	f85d 7b04 	ldr.w	r7, [sp], #4
   103a8:	4770      	bx	lr
   103aa:	bf00      	nop
   103ac:	e000ed00 	.word	0xe000ed00
   103b0:	05fa0000 	.word	0x05fa0000

000103b4 <NVIC_SetVTOR>:
NVIC_SetVTOR():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:142
 * @brief       Set Vector Table Offset value
 * @param       offset Offset value
 * @return      None
 *******************************************************************************/
void NVIC_SetVTOR(uint32_t offset)
{
   103b4:	b480      	push	{r7}
   103b6:	b083      	sub	sp, #12
   103b8:	af00      	add	r7, sp, #0
   103ba:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:144
//  SCB->VTOR  = (offset & NVIC_VTOR_MASK);
    SCB->VTOR  = offset;
   103bc:	4b03      	ldr	r3, [pc, #12]	; (103cc <NVIC_SetVTOR+0x18>)
   103be:	687a      	ldr	r2, [r7, #4]
   103c0:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_nvic.c:145
}
   103c2:	370c      	adds	r7, #12
   103c4:	46bd      	mov	sp, r7
   103c6:	f85d 7b04 	ldr.w	r7, [sp], #4
   103ca:	4770      	bx	lr
   103cc:	e000ed00 	.word	0xe000ed00

000103d0 <PIN_GetPointer>:
PIN_GetPointer():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:56
 * @param[in]   portnum     Port Number value, should be in range from 0..3.
 * @param[in]   pinnum      Pin number value, should be in range from 0..31
 * @return      Pointer to GPIO peripheral
 **********************************************************************/
static uint32_t * PIN_GetPointer(uint8_t portnum, uint8_t pinnum)
{
   103d0:	b480      	push	{r7}
   103d2:	b085      	sub	sp, #20
   103d4:	af00      	add	r7, sp, #0
   103d6:	4602      	mov	r2, r0
   103d8:	460b      	mov	r3, r1
   103da:	71fa      	strb	r2, [r7, #7]
   103dc:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:57
    uint32_t *pPIN = NULL;
   103de:	2300      	movs	r3, #0
   103e0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:58
    pPIN = (uint32_t *)(LPC_IOCON_BASE + ((portnum * 32 + pinnum)*sizeof(uint32_t)));
   103e2:	79fb      	ldrb	r3, [r7, #7]
   103e4:	015a      	lsls	r2, r3, #5
   103e6:	79bb      	ldrb	r3, [r7, #6]
   103e8:	4413      	add	r3, r2
   103ea:	f103 5380 	add.w	r3, r3, #268435456	; 0x10000000
   103ee:	f503 4330 	add.w	r3, r3, #45056	; 0xb000
   103f2:	009b      	lsls	r3, r3, #2
   103f4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:59
    return pPIN;
   103f6:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:60
}
   103f8:	4618      	mov	r0, r3
   103fa:	3714      	adds	r7, #20
   103fc:	46bd      	mov	sp, r7
   103fe:	f85d 7b04 	ldr.w	r7, [sp], #4
   10402:	4770      	bx	lr

00010404 <PINSEL_GetPinType>:
PINSEL_GetPinType():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:80
 *              - PINSEL_PIN_TYPE_W
 *              - PINSEL_PIN_TYPE_U   
 *              - PINSEL_PIN_TYPE_UNKNOWN: Invalid pin
 **********************************************************************/
PinSel_PinType PINSEL_GetPinType(uint8_t portnum, uint8_t pinnum)
{
   10404:	b480      	push	{r7}
   10406:	b085      	sub	sp, #20
   10408:	af00      	add	r7, sp, #0
   1040a:	4602      	mov	r2, r0
   1040c:	460b      	mov	r3, r1
   1040e:	71fa      	strb	r2, [r7, #7]
   10410:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:81
    PinSel_PinType Ret = PINSEL_PIN_TYPE_UNKNOWN;
   10412:	2305      	movs	r3, #5
   10414:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:82
    switch(portnum)
   10416:	79fb      	ldrb	r3, [r7, #7]
   10418:	2b05      	cmp	r3, #5
   1041a:	d878      	bhi.n	1050e <PINSEL_GetPinType+0x10a>
   1041c:	a201      	add	r2, pc, #4	; (adr r2, 10424 <PINSEL_GetPinType+0x20>)
   1041e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   10422:	bf00      	nop
   10424:	0001043d 	.word	0x0001043d
   10428:	000104c3 	.word	0x000104c3
   1042c:	000104e3 	.word	0x000104e3
   10430:	000104e3 	.word	0x000104e3
   10434:	000104e3 	.word	0x000104e3
   10438:	000104e9 	.word	0x000104e9
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:85
    {
        case 0:
            if((pinnum <=6)||
   1043c:	79bb      	ldrb	r3, [r7, #6]
   1043e:	2b06      	cmp	r3, #6
   10440:	d90b      	bls.n	1045a <PINSEL_GetPinType+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:85 (discriminator 1)
   10442:	79bb      	ldrb	r3, [r7, #6]
   10444:	2b09      	cmp	r3, #9
   10446:	d902      	bls.n	1044e <PINSEL_GetPinType+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:86
                ((pinnum >= 10)&&(pinnum <=11))||
   10448:	79bb      	ldrb	r3, [r7, #6]
   1044a:	2b0b      	cmp	r3, #11
   1044c:	d905      	bls.n	1045a <PINSEL_GetPinType+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:86 (discriminator 1)
   1044e:	79bb      	ldrb	r3, [r7, #6]
   10450:	2b0d      	cmp	r3, #13
   10452:	d905      	bls.n	10460 <PINSEL_GetPinType+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:87
                ((pinnum >= 14)&&(pinnum <=22)))
   10454:	79bb      	ldrb	r3, [r7, #6]
   10456:	2b16      	cmp	r3, #22
   10458:	d802      	bhi.n	10460 <PINSEL_GetPinType+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:88
                Ret = PINSEL_PIN_TYPE_D;
   1045a:	2300      	movs	r3, #0
   1045c:	73fb      	strb	r3, [r7, #15]
   1045e:	e02f      	b.n	104c0 <PINSEL_GetPinType+0xbc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:89
            else if ((pinnum == 12)||(pinnum==13)||
   10460:	79bb      	ldrb	r3, [r7, #6]
   10462:	2b0c      	cmp	r3, #12
   10464:	d008      	beq.n	10478 <PINSEL_GetPinType+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:89 (discriminator 1)
   10466:	79bb      	ldrb	r3, [r7, #6]
   10468:	2b0d      	cmp	r3, #13
   1046a:	d005      	beq.n	10478 <PINSEL_GetPinType+0x74>
   1046c:	79bb      	ldrb	r3, [r7, #6]
   1046e:	2b16      	cmp	r3, #22
   10470:	d905      	bls.n	1047e <PINSEL_GetPinType+0x7a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:90
                    ((pinnum >= 23)&&(pinnum <=26)))
   10472:	79bb      	ldrb	r3, [r7, #6]
   10474:	2b1a      	cmp	r3, #26
   10476:	d802      	bhi.n	1047e <PINSEL_GetPinType+0x7a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:91
                Ret = PINSEL_PIN_TYPE_A;
   10478:	2301      	movs	r3, #1
   1047a:	73fb      	strb	r3, [r7, #15]
   1047c:	e020      	b.n	104c0 <PINSEL_GetPinType+0xbc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:92
            else if ((pinnum == 29) || (pinnum==30)|| (pinnum==31))
   1047e:	79bb      	ldrb	r3, [r7, #6]
   10480:	2b1d      	cmp	r3, #29
   10482:	d005      	beq.n	10490 <PINSEL_GetPinType+0x8c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:92 (discriminator 1)
   10484:	79bb      	ldrb	r3, [r7, #6]
   10486:	2b1e      	cmp	r3, #30
   10488:	d002      	beq.n	10490 <PINSEL_GetPinType+0x8c>
   1048a:	79bb      	ldrb	r3, [r7, #6]
   1048c:	2b1f      	cmp	r3, #31
   1048e:	d102      	bne.n	10496 <PINSEL_GetPinType+0x92>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:93
                Ret = PINSEL_PIN_TYPE_U;
   10490:	2302      	movs	r3, #2
   10492:	73fb      	strb	r3, [r7, #15]
   10494:	e014      	b.n	104c0 <PINSEL_GetPinType+0xbc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:94
            else if ((pinnum == 27) || (pinnum==28))
   10496:	79bb      	ldrb	r3, [r7, #6]
   10498:	2b1b      	cmp	r3, #27
   1049a:	d002      	beq.n	104a2 <PINSEL_GetPinType+0x9e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:94 (discriminator 1)
   1049c:	79bb      	ldrb	r3, [r7, #6]
   1049e:	2b1c      	cmp	r3, #28
   104a0:	d102      	bne.n	104a8 <PINSEL_GetPinType+0xa4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:95
                Ret = PINSEL_PIN_TYPE_I;
   104a2:	2303      	movs	r3, #3
   104a4:	73fb      	strb	r3, [r7, #15]
   104a6:	e00b      	b.n	104c0 <PINSEL_GetPinType+0xbc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:96
            else if ((pinnum == 7) || (pinnum==8)|| (pinnum==9))
   104a8:	79bb      	ldrb	r3, [r7, #6]
   104aa:	2b07      	cmp	r3, #7
   104ac:	d005      	beq.n	104ba <PINSEL_GetPinType+0xb6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:96 (discriminator 1)
   104ae:	79bb      	ldrb	r3, [r7, #6]
   104b0:	2b08      	cmp	r3, #8
   104b2:	d002      	beq.n	104ba <PINSEL_GetPinType+0xb6>
   104b4:	79bb      	ldrb	r3, [r7, #6]
   104b6:	2b09      	cmp	r3, #9
   104b8:	d102      	bne.n	104c0 <PINSEL_GetPinType+0xbc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:97
                Ret = PINSEL_PIN_TYPE_W;
   104ba:	2304      	movs	r3, #4
   104bc:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:98
            break;
   104be:	e027      	b.n	10510 <PINSEL_GetPinType+0x10c>
   104c0:	e026      	b.n	10510 <PINSEL_GetPinType+0x10c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:100
        case 1:
            if(pinnum <=29)
   104c2:	79bb      	ldrb	r3, [r7, #6]
   104c4:	2b1d      	cmp	r3, #29
   104c6:	d802      	bhi.n	104ce <PINSEL_GetPinType+0xca>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:101
                Ret = PINSEL_PIN_TYPE_D;
   104c8:	2300      	movs	r3, #0
   104ca:	73fb      	strb	r3, [r7, #15]
   104cc:	e008      	b.n	104e0 <PINSEL_GetPinType+0xdc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:102
            else if ((pinnum == 30) || (pinnum==31))
   104ce:	79bb      	ldrb	r3, [r7, #6]
   104d0:	2b1e      	cmp	r3, #30
   104d2:	d002      	beq.n	104da <PINSEL_GetPinType+0xd6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:102 (discriminator 1)
   104d4:	79bb      	ldrb	r3, [r7, #6]
   104d6:	2b1f      	cmp	r3, #31
   104d8:	d102      	bne.n	104e0 <PINSEL_GetPinType+0xdc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:103
                Ret = PINSEL_PIN_TYPE_A;
   104da:	2301      	movs	r3, #1
   104dc:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:104
            break;
   104de:	e017      	b.n	10510 <PINSEL_GetPinType+0x10c>
   104e0:	e016      	b.n	10510 <PINSEL_GetPinType+0x10c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:108
        case 2:
        case 3:
        case 4:
            Ret = PINSEL_PIN_TYPE_D;
   104e2:	2300      	movs	r3, #0
   104e4:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:109
            break;
   104e6:	e013      	b.n	10510 <PINSEL_GetPinType+0x10c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:111
        case 5:
            if((pinnum <=1)||
   104e8:	79bb      	ldrb	r3, [r7, #6]
   104ea:	2b01      	cmp	r3, #1
   104ec:	d902      	bls.n	104f4 <PINSEL_GetPinType+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:111 (discriminator 1)
   104ee:	79bb      	ldrb	r3, [r7, #6]
   104f0:	2b04      	cmp	r3, #4
   104f2:	d102      	bne.n	104fa <PINSEL_GetPinType+0xf6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:113
                (pinnum == 4))
                Ret = PINSEL_PIN_TYPE_D;
   104f4:	2300      	movs	r3, #0
   104f6:	73fb      	strb	r3, [r7, #15]
   104f8:	e008      	b.n	1050c <PINSEL_GetPinType+0x108>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:114
            else if ((pinnum == 2) || (pinnum==3))
   104fa:	79bb      	ldrb	r3, [r7, #6]
   104fc:	2b02      	cmp	r3, #2
   104fe:	d002      	beq.n	10506 <PINSEL_GetPinType+0x102>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:114 (discriminator 1)
   10500:	79bb      	ldrb	r3, [r7, #6]
   10502:	2b03      	cmp	r3, #3
   10504:	d102      	bne.n	1050c <PINSEL_GetPinType+0x108>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:115
                Ret = PINSEL_PIN_TYPE_I;
   10506:	2303      	movs	r3, #3
   10508:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:116
            break;
   1050a:	e001      	b.n	10510 <PINSEL_GetPinType+0x10c>
   1050c:	e000      	b.n	10510 <PINSEL_GetPinType+0x10c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:118
        default:
            break;
   1050e:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:121
    }

    return Ret;
   10510:	7bfb      	ldrb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:122
}
   10512:	4618      	mov	r0, r3
   10514:	3714      	adds	r7, #20
   10516:	46bd      	mov	sp, r7
   10518:	f85d 7b04 	ldr.w	r7, [sp], #4
   1051c:	4770      	bx	lr
$t():
   1051e:	bf00      	nop

00010520 <PINSEL_ConfigPin>:
PINSEL_ConfigPin():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:139
 * @return      PINSEL Return Code
 *              - PINSEL_RET_INVALID_PIN
 *              - PINSEL_RET_OK
 **********************************************************************/
PINSEL_RET_CODE PINSEL_ConfigPin ( uint8_t portnum, uint8_t pinnum, uint8_t funcnum)
{
   10520:	b580      	push	{r7, lr}
   10522:	b084      	sub	sp, #16
   10524:	af00      	add	r7, sp, #0
   10526:	4613      	mov	r3, r2
   10528:	4602      	mov	r2, r0
   1052a:	71fa      	strb	r2, [r7, #7]
   1052c:	460a      	mov	r2, r1
   1052e:	71ba      	strb	r2, [r7, #6]
   10530:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:140
    uint32_t *pPIN = NULL;
   10532:	2300      	movs	r3, #0
   10534:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:141
    PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
   10536:	79fa      	ldrb	r2, [r7, #7]
   10538:	79bb      	ldrb	r3, [r7, #6]
   1053a:	4610      	mov	r0, r2
   1053c:	4619      	mov	r1, r3
   1053e:	f7ff ff61 	bl	10404 <PINSEL_GetPinType>
   10542:	4603      	mov	r3, r0
   10544:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:143

    if(type == PINSEL_PIN_TYPE_UNKNOWN)
   10546:	7afb      	ldrb	r3, [r7, #11]
   10548:	2b05      	cmp	r3, #5
   1054a:	d101      	bne.n	10550 <PINSEL_ConfigPin+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:144
        return PINSEL_RET_INVALID_PIN;
   1054c:	4b0d      	ldr	r3, [pc, #52]	; (10584 <PINSEL_ConfigPin+0x64>)
   1054e:	e015      	b.n	1057c <PINSEL_ConfigPin+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:146
    
    pPIN = PIN_GetPointer(portnum, pinnum);
   10550:	79fa      	ldrb	r2, [r7, #7]
   10552:	79bb      	ldrb	r3, [r7, #6]
   10554:	4610      	mov	r0, r2
   10556:	4619      	mov	r1, r3
   10558:	f7ff ff3a 	bl	103d0 <PIN_GetPointer>
   1055c:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:147
    *pPIN &= ~IOCON_FUNC_MASK;//Clear function bits
   1055e:	68fb      	ldr	r3, [r7, #12]
   10560:	681b      	ldr	r3, [r3, #0]
   10562:	f023 0207 	bic.w	r2, r3, #7
   10566:	68fb      	ldr	r3, [r7, #12]
   10568:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:148
    *pPIN |= funcnum&IOCON_FUNC_MASK;
   1056a:	68fb      	ldr	r3, [r7, #12]
   1056c:	681a      	ldr	r2, [r3, #0]
   1056e:	797b      	ldrb	r3, [r7, #5]
   10570:	f003 0307 	and.w	r3, r3, #7
   10574:	431a      	orrs	r2, r3
   10576:	68fb      	ldr	r3, [r7, #12]
   10578:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:150

    return PINSEL_RET_OK;
   1057a:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:151
}
   1057c:	4618      	mov	r0, r3
   1057e:	3710      	adds	r7, #16
   10580:	46bd      	mov	sp, r7
   10582:	bd80      	pop	{r7, pc}
   10584:	10000001 	.word	0x10000001

00010588 <PINSEL_SetPinMode>:
PINSEL_SetPinMode():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:169
 *              - PINSEL_RET_INVALID_PIN
 *              - PINSEL_RET_NOT_SUPPORT
 *              - PINSEL_RET_OK
 **********************************************************************/
PINSEL_RET_CODE PINSEL_SetPinMode ( uint8_t portnum, uint8_t pinnum, PinSel_BasicMode modenum)
{
   10588:	b580      	push	{r7, lr}
   1058a:	b084      	sub	sp, #16
   1058c:	af00      	add	r7, sp, #0
   1058e:	4613      	mov	r3, r2
   10590:	4602      	mov	r2, r0
   10592:	71fa      	strb	r2, [r7, #7]
   10594:	460a      	mov	r2, r1
   10596:	71ba      	strb	r2, [r7, #6]
   10598:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:170
    uint32_t *pPIN = NULL;
   1059a:	2300      	movs	r3, #0
   1059c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:171
    PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
   1059e:	79fa      	ldrb	r2, [r7, #7]
   105a0:	79bb      	ldrb	r3, [r7, #6]
   105a2:	4610      	mov	r0, r2
   105a4:	4619      	mov	r1, r3
   105a6:	f7ff ff2d 	bl	10404 <PINSEL_GetPinType>
   105aa:	4603      	mov	r3, r0
   105ac:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:173

    if(type == PINSEL_PIN_TYPE_UNKNOWN)
   105ae:	7afb      	ldrb	r3, [r7, #11]
   105b0:	2b05      	cmp	r3, #5
   105b2:	d101      	bne.n	105b8 <PINSEL_SetPinMode+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:174
        return PINSEL_RET_INVALID_PIN;
   105b4:	4b13      	ldr	r3, [pc, #76]	; (10604 <PINSEL_SetPinMode+0x7c>)
   105b6:	e021      	b.n	105fc <PINSEL_SetPinMode+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:175
    if((type != PINSEL_PIN_TYPE_D )&&
   105b8:	7afb      	ldrb	r3, [r7, #11]
   105ba:	2b00      	cmp	r3, #0
   105bc:	d007      	beq.n	105ce <PINSEL_SetPinMode+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:175 (discriminator 1)
   105be:	7afb      	ldrb	r3, [r7, #11]
   105c0:	2b01      	cmp	r3, #1
   105c2:	d004      	beq.n	105ce <PINSEL_SetPinMode+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:176
        (type != PINSEL_PIN_TYPE_A )&&
   105c4:	7afb      	ldrb	r3, [r7, #11]
   105c6:	2b04      	cmp	r3, #4
   105c8:	d001      	beq.n	105ce <PINSEL_SetPinMode+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:178
        (type != PINSEL_PIN_TYPE_W))
        return PINSEL_RET_NOT_SUPPORT;
   105ca:	4b0f      	ldr	r3, [pc, #60]	; (10608 <PINSEL_SetPinMode+0x80>)
   105cc:	e016      	b.n	105fc <PINSEL_SetPinMode+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:180
    
    pPIN = PIN_GetPointer(portnum, pinnum);
   105ce:	79fa      	ldrb	r2, [r7, #7]
   105d0:	79bb      	ldrb	r3, [r7, #6]
   105d2:	4610      	mov	r0, r2
   105d4:	4619      	mov	r1, r3
   105d6:	f7ff fefb 	bl	103d0 <PIN_GetPointer>
   105da:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:181
    *(uint32_t *)pPIN &= ~(IOCON_MODE_MASK);//Clear function bits
   105dc:	68fb      	ldr	r3, [r7, #12]
   105de:	681b      	ldr	r3, [r3, #0]
   105e0:	f023 0218 	bic.w	r2, r3, #24
   105e4:	68fb      	ldr	r3, [r7, #12]
   105e6:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:182
    *(uint32_t *)pPIN |= (modenum << IOCON_MODE_POS)&IOCON_MODE_MASK;
   105e8:	68fb      	ldr	r3, [r7, #12]
   105ea:	681a      	ldr	r2, [r3, #0]
   105ec:	797b      	ldrb	r3, [r7, #5]
   105ee:	00db      	lsls	r3, r3, #3
   105f0:	f003 0318 	and.w	r3, r3, #24
   105f4:	431a      	orrs	r2, r3
   105f6:	68fb      	ldr	r3, [r7, #12]
   105f8:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:184

    return PINSEL_RET_OK;
   105fa:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:185
}
   105fc:	4618      	mov	r0, r3
   105fe:	3710      	adds	r7, #16
   10600:	46bd      	mov	sp, r7
   10602:	bd80      	pop	{r7, pc}
   10604:	10000001 	.word	0x10000001
   10608:	10000002 	.word	0x10000002

0001060c <PINSEL_SetHysMode>:
PINSEL_SetHysMode():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:200
 *              - PINSEL_RET_INVALID_PIN
 *              - PINSEL_RET_NOT_SUPPORT
 *              - PINSEL_RET_OK
 **********************************************************************/
PINSEL_RET_CODE PINSEL_SetHysMode(uint8_t portnum, uint8_t pinnum, FunctionalState NewState)
{
   1060c:	b580      	push	{r7, lr}
   1060e:	b084      	sub	sp, #16
   10610:	af00      	add	r7, sp, #0
   10612:	4613      	mov	r3, r2
   10614:	4602      	mov	r2, r0
   10616:	71fa      	strb	r2, [r7, #7]
   10618:	460a      	mov	r2, r1
   1061a:	71ba      	strb	r2, [r7, #6]
   1061c:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:201
    uint32_t *pPIN = NULL;
   1061e:	2300      	movs	r3, #0
   10620:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:202
    PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
   10622:	79fa      	ldrb	r2, [r7, #7]
   10624:	79bb      	ldrb	r3, [r7, #6]
   10626:	4610      	mov	r0, r2
   10628:	4619      	mov	r1, r3
   1062a:	f7ff feeb 	bl	10404 <PINSEL_GetPinType>
   1062e:	4603      	mov	r3, r0
   10630:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:204

    if(type == PINSEL_PIN_TYPE_UNKNOWN)
   10632:	7afb      	ldrb	r3, [r7, #11]
   10634:	2b05      	cmp	r3, #5
   10636:	d101      	bne.n	1063c <PINSEL_SetHysMode+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:205
        return PINSEL_RET_INVALID_PIN;
   10638:	4b12      	ldr	r3, [pc, #72]	; (10684 <PINSEL_SetHysMode+0x78>)
   1063a:	e01f      	b.n	1067c <PINSEL_SetHysMode+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:206
    if((type != PINSEL_PIN_TYPE_D )&&
   1063c:	7afb      	ldrb	r3, [r7, #11]
   1063e:	2b00      	cmp	r3, #0
   10640:	d004      	beq.n	1064c <PINSEL_SetHysMode+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:206 (discriminator 1)
   10642:	7afb      	ldrb	r3, [r7, #11]
   10644:	2b04      	cmp	r3, #4
   10646:	d001      	beq.n	1064c <PINSEL_SetHysMode+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:208
        (type != PINSEL_PIN_TYPE_W))
        return PINSEL_RET_NOT_SUPPORT;
   10648:	4b0f      	ldr	r3, [pc, #60]	; (10688 <PINSEL_SetHysMode+0x7c>)
   1064a:	e017      	b.n	1067c <PINSEL_SetHysMode+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:210
    
    pPIN = PIN_GetPointer(portnum, pinnum);
   1064c:	79fa      	ldrb	r2, [r7, #7]
   1064e:	79bb      	ldrb	r3, [r7, #6]
   10650:	4610      	mov	r0, r2
   10652:	4619      	mov	r1, r3
   10654:	f7ff febc 	bl	103d0 <PIN_GetPointer>
   10658:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:211
    if(NewState == DISABLE)
   1065a:	797b      	ldrb	r3, [r7, #5]
   1065c:	2b00      	cmp	r3, #0
   1065e:	d106      	bne.n	1066e <PINSEL_SetHysMode+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:213
    {
        *(uint32_t *)pPIN &= ~IOCON_HYS_ENABLE;//Clear hys bits
   10660:	68fb      	ldr	r3, [r7, #12]
   10662:	681b      	ldr	r3, [r3, #0]
   10664:	f023 0220 	bic.w	r2, r3, #32
   10668:	68fb      	ldr	r3, [r7, #12]
   1066a:	601a      	str	r2, [r3, #0]
   1066c:	e005      	b.n	1067a <PINSEL_SetHysMode+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:216
    }
    else
        *(uint32_t *)pPIN |= IOCON_HYS_ENABLE;
   1066e:	68fb      	ldr	r3, [r7, #12]
   10670:	681b      	ldr	r3, [r3, #0]
   10672:	f043 0220 	orr.w	r2, r3, #32
   10676:	68fb      	ldr	r3, [r7, #12]
   10678:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:218

    return PINSEL_RET_OK;
   1067a:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:219
}
   1067c:	4618      	mov	r0, r3
   1067e:	3710      	adds	r7, #16
   10680:	46bd      	mov	sp, r7
   10682:	bd80      	pop	{r7, pc}
   10684:	10000001 	.word	0x10000001
   10688:	10000002 	.word	0x10000002

0001068c <PINSEL_SetInvertInput>:
PINSEL_SetInvertInput():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:233
 *              - PINSEL_RET_INVALID_PIN
 *              - PINSEL_RET_NOT_SUPPORT
 *              - PINSEL_RET_OK
 **********************************************************************/
PINSEL_RET_CODE PINSEL_SetInvertInput(uint8_t portnum, uint8_t pinnum, FunctionalState NewState)
{
   1068c:	b580      	push	{r7, lr}
   1068e:	b084      	sub	sp, #16
   10690:	af00      	add	r7, sp, #0
   10692:	4613      	mov	r3, r2
   10694:	4602      	mov	r2, r0
   10696:	71fa      	strb	r2, [r7, #7]
   10698:	460a      	mov	r2, r1
   1069a:	71ba      	strb	r2, [r7, #6]
   1069c:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:234
    uint32_t *pPIN = NULL;
   1069e:	2300      	movs	r3, #0
   106a0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:235
    PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
   106a2:	79fa      	ldrb	r2, [r7, #7]
   106a4:	79bb      	ldrb	r3, [r7, #6]
   106a6:	4610      	mov	r0, r2
   106a8:	4619      	mov	r1, r3
   106aa:	f7ff feab 	bl	10404 <PINSEL_GetPinType>
   106ae:	4603      	mov	r3, r0
   106b0:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:237

    if(type == PINSEL_PIN_TYPE_UNKNOWN)
   106b2:	7afb      	ldrb	r3, [r7, #11]
   106b4:	2b05      	cmp	r3, #5
   106b6:	d101      	bne.n	106bc <PINSEL_SetInvertInput+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:238
        return PINSEL_RET_INVALID_PIN;
   106b8:	4b11      	ldr	r3, [pc, #68]	; (10700 <PINSEL_SetInvertInput+0x74>)
   106ba:	e01c      	b.n	106f6 <PINSEL_SetInvertInput+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:239
    if(type== PINSEL_PIN_TYPE_U)
   106bc:	7afb      	ldrb	r3, [r7, #11]
   106be:	2b02      	cmp	r3, #2
   106c0:	d101      	bne.n	106c6 <PINSEL_SetInvertInput+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:240
        return PINSEL_RET_NOT_SUPPORT;
   106c2:	4b10      	ldr	r3, [pc, #64]	; (10704 <PINSEL_SetInvertInput+0x78>)
   106c4:	e017      	b.n	106f6 <PINSEL_SetInvertInput+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:242
    
    pPIN = PIN_GetPointer(portnum, pinnum);
   106c6:	79fa      	ldrb	r2, [r7, #7]
   106c8:	79bb      	ldrb	r3, [r7, #6]
   106ca:	4610      	mov	r0, r2
   106cc:	4619      	mov	r1, r3
   106ce:	f7ff fe7f 	bl	103d0 <PIN_GetPointer>
   106d2:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:243
    if(NewState == DISABLE)
   106d4:	797b      	ldrb	r3, [r7, #5]
   106d6:	2b00      	cmp	r3, #0
   106d8:	d106      	bne.n	106e8 <PINSEL_SetInvertInput+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:245
    {
        *(uint32_t *)pPIN &= ~IOCON_INVERT_INPUT;//Clear hys bits
   106da:	68fb      	ldr	r3, [r7, #12]
   106dc:	681b      	ldr	r3, [r3, #0]
   106de:	f023 0240 	bic.w	r2, r3, #64	; 0x40
   106e2:	68fb      	ldr	r3, [r7, #12]
   106e4:	601a      	str	r2, [r3, #0]
   106e6:	e005      	b.n	106f4 <PINSEL_SetInvertInput+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:248
    }
    else
        *(uint32_t *)pPIN |= IOCON_INVERT_INPUT;
   106e8:	68fb      	ldr	r3, [r7, #12]
   106ea:	681b      	ldr	r3, [r3, #0]
   106ec:	f043 0240 	orr.w	r2, r3, #64	; 0x40
   106f0:	68fb      	ldr	r3, [r7, #12]
   106f2:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:250

    return PINSEL_RET_OK;
   106f4:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:251
}
   106f6:	4618      	mov	r0, r3
   106f8:	3710      	adds	r7, #16
   106fa:	46bd      	mov	sp, r7
   106fc:	bd80      	pop	{r7, pc}
   106fe:	bf00      	nop
   10700:	10000001 	.word	0x10000001
   10704:	10000002 	.word	0x10000002

00010708 <PINSEL_SetSlewMode>:
PINSEL_SetSlewMode():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:266
 *              - PINSEL_RET_INVALID_PIN
 *              - PINSEL_RET_NOT_SUPPORT
 *              - PINSEL_RET_OK
 **********************************************************************/
PINSEL_RET_CODE PINSEL_SetSlewMode(uint8_t portnum, uint8_t pinnum, FunctionalState NewState)
{
   10708:	b580      	push	{r7, lr}
   1070a:	b084      	sub	sp, #16
   1070c:	af00      	add	r7, sp, #0
   1070e:	4613      	mov	r3, r2
   10710:	4602      	mov	r2, r0
   10712:	71fa      	strb	r2, [r7, #7]
   10714:	460a      	mov	r2, r1
   10716:	71ba      	strb	r2, [r7, #6]
   10718:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:267
    uint32_t *pPIN = NULL;
   1071a:	2300      	movs	r3, #0
   1071c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:268
    PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
   1071e:	79fa      	ldrb	r2, [r7, #7]
   10720:	79bb      	ldrb	r3, [r7, #6]
   10722:	4610      	mov	r0, r2
   10724:	4619      	mov	r1, r3
   10726:	f7ff fe6d 	bl	10404 <PINSEL_GetPinType>
   1072a:	4603      	mov	r3, r0
   1072c:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:270

    if(type == PINSEL_PIN_TYPE_UNKNOWN)
   1072e:	7afb      	ldrb	r3, [r7, #11]
   10730:	2b05      	cmp	r3, #5
   10732:	d101      	bne.n	10738 <PINSEL_SetSlewMode+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:271
        return PINSEL_RET_INVALID_PIN;
   10734:	4b12      	ldr	r3, [pc, #72]	; (10780 <PINSEL_SetSlewMode+0x78>)
   10736:	e01f      	b.n	10778 <PINSEL_SetSlewMode+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:272
    if((type!= PINSEL_PIN_TYPE_D) &&
   10738:	7afb      	ldrb	r3, [r7, #11]
   1073a:	2b00      	cmp	r3, #0
   1073c:	d004      	beq.n	10748 <PINSEL_SetSlewMode+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:272 (discriminator 1)
   1073e:	7afb      	ldrb	r3, [r7, #11]
   10740:	2b04      	cmp	r3, #4
   10742:	d001      	beq.n	10748 <PINSEL_SetSlewMode+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:274
        (type!= PINSEL_PIN_TYPE_W))
        return PINSEL_RET_NOT_SUPPORT;
   10744:	4b0f      	ldr	r3, [pc, #60]	; (10784 <PINSEL_SetSlewMode+0x7c>)
   10746:	e017      	b.n	10778 <PINSEL_SetSlewMode+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:276
    
    pPIN = PIN_GetPointer(portnum, pinnum);
   10748:	79fa      	ldrb	r2, [r7, #7]
   1074a:	79bb      	ldrb	r3, [r7, #6]
   1074c:	4610      	mov	r0, r2
   1074e:	4619      	mov	r1, r3
   10750:	f7ff fe3e 	bl	103d0 <PIN_GetPointer>
   10754:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:277
    if(NewState == DISABLE)
   10756:	797b      	ldrb	r3, [r7, #5]
   10758:	2b00      	cmp	r3, #0
   1075a:	d106      	bne.n	1076a <PINSEL_SetSlewMode+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:279
    {
        *(uint32_t *)pPIN &= ~IOCON_SLEW_ENABLE;//Clear hys bits
   1075c:	68fb      	ldr	r3, [r7, #12]
   1075e:	681b      	ldr	r3, [r3, #0]
   10760:	f423 7200 	bic.w	r2, r3, #512	; 0x200
   10764:	68fb      	ldr	r3, [r7, #12]
   10766:	601a      	str	r2, [r3, #0]
   10768:	e005      	b.n	10776 <PINSEL_SetSlewMode+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:282
    }
    else
        *(uint32_t *)pPIN |= IOCON_SLEW_ENABLE;
   1076a:	68fb      	ldr	r3, [r7, #12]
   1076c:	681b      	ldr	r3, [r3, #0]
   1076e:	f443 7200 	orr.w	r2, r3, #512	; 0x200
   10772:	68fb      	ldr	r3, [r7, #12]
   10774:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:284

    return PINSEL_RET_OK;
   10776:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:285
}
   10778:	4618      	mov	r0, r3
   1077a:	3710      	adds	r7, #16
   1077c:	46bd      	mov	sp, r7
   1077e:	bd80      	pop	{r7, pc}
   10780:	10000001 	.word	0x10000001
   10784:	10000002 	.word	0x10000002

00010788 <PINSEL_SetI2CMode>:
PINSEL_SetI2CMode():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:301
 *              - PINSEL_RET_INVALID_PIN
 *              - PINSEL_RET_NOT_SUPPORT
 *              - PINSEL_RET_OK
 **********************************************************************/
PINSEL_RET_CODE PINSEL_SetI2CMode(uint8_t portnum, uint8_t pinnum, PinSel_I2cMode I2CMode)
{
   10788:	b580      	push	{r7, lr}
   1078a:	b084      	sub	sp, #16
   1078c:	af00      	add	r7, sp, #0
   1078e:	4613      	mov	r3, r2
   10790:	4602      	mov	r2, r0
   10792:	71fa      	strb	r2, [r7, #7]
   10794:	460a      	mov	r2, r1
   10796:	71ba      	strb	r2, [r7, #6]
   10798:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:302
    uint32_t *pPIN = NULL;
   1079a:	2300      	movs	r3, #0
   1079c:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:303
    PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
   1079e:	79fa      	ldrb	r2, [r7, #7]
   107a0:	79bb      	ldrb	r3, [r7, #6]
   107a2:	4610      	mov	r0, r2
   107a4:	4619      	mov	r1, r3
   107a6:	f7ff fe2d 	bl	10404 <PINSEL_GetPinType>
   107aa:	4603      	mov	r3, r0
   107ac:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:305

    if(type == PINSEL_PIN_TYPE_UNKNOWN)
   107ae:	7afb      	ldrb	r3, [r7, #11]
   107b0:	2b05      	cmp	r3, #5
   107b2:	d101      	bne.n	107b8 <PINSEL_SetI2CMode+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:306
        return PINSEL_RET_INVALID_PIN;
   107b4:	4b23      	ldr	r3, [pc, #140]	; (10844 <PINSEL_SetI2CMode+0xbc>)
   107b6:	e040      	b.n	1083a <PINSEL_SetI2CMode+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:307
    if(type != PINSEL_PIN_TYPE_I )
   107b8:	7afb      	ldrb	r3, [r7, #11]
   107ba:	2b03      	cmp	r3, #3
   107bc:	d001      	beq.n	107c2 <PINSEL_SetI2CMode+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:308
        return PINSEL_RET_NOT_SUPPORT;
   107be:	4b22      	ldr	r3, [pc, #136]	; (10848 <PINSEL_SetI2CMode+0xc0>)
   107c0:	e03b      	b.n	1083a <PINSEL_SetI2CMode+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:310
    
    pPIN = PIN_GetPointer(portnum, pinnum);
   107c2:	79fa      	ldrb	r2, [r7, #7]
   107c4:	79bb      	ldrb	r3, [r7, #6]
   107c6:	4610      	mov	r0, r2
   107c8:	4619      	mov	r1, r3
   107ca:	f7ff fe01 	bl	103d0 <PIN_GetPointer>
   107ce:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:312

    switch(I2CMode)
   107d0:	797b      	ldrb	r3, [r7, #5]
   107d2:	2b01      	cmp	r3, #1
   107d4:	d011      	beq.n	107fa <PINSEL_SetI2CMode+0x72>
   107d6:	2b02      	cmp	r3, #2
   107d8:	d01d      	beq.n	10816 <PINSEL_SetI2CMode+0x8e>
   107da:	2b00      	cmp	r3, #0
   107dc:	d129      	bne.n	10832 <PINSEL_SetI2CMode+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:316
    {
        // Standard/Fast Mode I2C: HS = HIDRIVE = 0
        case PINSEL_I2CMODE_FAST_STANDARD: 
            PINSEL_SetI2CFilter(portnum,pinnum,ENABLE);
   107de:	79fa      	ldrb	r2, [r7, #7]
   107e0:	79bb      	ldrb	r3, [r7, #6]
   107e2:	4610      	mov	r0, r2
   107e4:	4619      	mov	r1, r3
   107e6:	2201      	movs	r2, #1
   107e8:	f000 f932 	bl	10a50 <PINSEL_SetI2CFilter>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:317
            *(uint32_t *)pPIN &= ~(IOCON_I2CMODE_FASTPLUS);
   107ec:	68fb      	ldr	r3, [r7, #12]
   107ee:	681b      	ldr	r3, [r3, #0]
   107f0:	f423 7200 	bic.w	r2, r3, #512	; 0x200
   107f4:	68fb      	ldr	r3, [r7, #12]
   107f6:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:318
            break;
   107f8:	e01e      	b.n	10838 <PINSEL_SetI2CMode+0xb0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:322

        // Non-I2C: HS = 1, HIDRIVE = 0
        case PINSEL_I2CMODE_OPENDRAINIO:
            PINSEL_SetI2CFilter(portnum,pinnum,DISABLE);
   107fa:	79fa      	ldrb	r2, [r7, #7]
   107fc:	79bb      	ldrb	r3, [r7, #6]
   107fe:	4610      	mov	r0, r2
   10800:	4619      	mov	r1, r3
   10802:	2200      	movs	r2, #0
   10804:	f000 f924 	bl	10a50 <PINSEL_SetI2CFilter>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:323
            *(uint32_t *)pPIN &= ~(IOCON_I2CMODE_FASTPLUS);
   10808:	68fb      	ldr	r3, [r7, #12]
   1080a:	681b      	ldr	r3, [r3, #0]
   1080c:	f423 7200 	bic.w	r2, r3, #512	; 0x200
   10810:	68fb      	ldr	r3, [r7, #12]
   10812:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:324
            break;
   10814:	e010      	b.n	10838 <PINSEL_SetI2CMode+0xb0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:328

        // Fast Mode Plus I2C: HS = 0, HIDRIVE =1
        case PINSEL_I2CMODE_FASTMODEPLUS:   
            PINSEL_SetI2CFilter(portnum,pinnum,ENABLE);
   10816:	79fa      	ldrb	r2, [r7, #7]
   10818:	79bb      	ldrb	r3, [r7, #6]
   1081a:	4610      	mov	r0, r2
   1081c:	4619      	mov	r1, r3
   1081e:	2201      	movs	r2, #1
   10820:	f000 f916 	bl	10a50 <PINSEL_SetI2CFilter>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:329
            *(uint32_t *)pPIN |= (IOCON_I2CMODE_FASTPLUS);
   10824:	68fb      	ldr	r3, [r7, #12]
   10826:	681b      	ldr	r3, [r3, #0]
   10828:	f443 7200 	orr.w	r2, r3, #512	; 0x200
   1082c:	68fb      	ldr	r3, [r7, #12]
   1082e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:330
            break;
   10830:	e002      	b.n	10838 <PINSEL_SetI2CMode+0xb0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:332
        default:
            return PINSEL_RET_ERR;
   10832:	f04f 33ff 	mov.w	r3, #4294967295
   10836:	e000      	b.n	1083a <PINSEL_SetI2CMode+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:335
    }

    return PINSEL_RET_OK;
   10838:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:336
}
   1083a:	4618      	mov	r0, r3
   1083c:	3710      	adds	r7, #16
   1083e:	46bd      	mov	sp, r7
   10840:	bd80      	pop	{r7, pc}
   10842:	bf00      	nop
   10844:	10000001 	.word	0x10000001
   10848:	10000002 	.word	0x10000002

0001084c <PINSEL_SetOpenDrainMode>:
PINSEL_SetOpenDrainMode():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:351
 *              - PINSEL_RET_INVALID_PIN
 *              - PINSEL_RET_NOT_SUPPORT
 *              - PINSEL_RET_OK
 **********************************************************************/
PINSEL_RET_CODE PINSEL_SetOpenDrainMode(uint8_t portnum, uint8_t pinnum, FunctionalState NewState)
{
   1084c:	b580      	push	{r7, lr}
   1084e:	b084      	sub	sp, #16
   10850:	af00      	add	r7, sp, #0
   10852:	4613      	mov	r3, r2
   10854:	4602      	mov	r2, r0
   10856:	71fa      	strb	r2, [r7, #7]
   10858:	460a      	mov	r2, r1
   1085a:	71ba      	strb	r2, [r7, #6]
   1085c:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:352
    uint32_t *pPIN = NULL;
   1085e:	2300      	movs	r3, #0
   10860:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:353
    PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
   10862:	79fa      	ldrb	r2, [r7, #7]
   10864:	79bb      	ldrb	r3, [r7, #6]
   10866:	4610      	mov	r0, r2
   10868:	4619      	mov	r1, r3
   1086a:	f7ff fdcb 	bl	10404 <PINSEL_GetPinType>
   1086e:	4603      	mov	r3, r0
   10870:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:355

    if(type == PINSEL_PIN_TYPE_UNKNOWN)
   10872:	7afb      	ldrb	r3, [r7, #11]
   10874:	2b05      	cmp	r3, #5
   10876:	d101      	bne.n	1087c <PINSEL_SetOpenDrainMode+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:356
        return PINSEL_RET_INVALID_PIN;
   10878:	4b14      	ldr	r3, [pc, #80]	; (108cc <PINSEL_SetOpenDrainMode+0x80>)
   1087a:	e022      	b.n	108c2 <PINSEL_SetOpenDrainMode+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:357
    if((type != PINSEL_PIN_TYPE_D ) &&
   1087c:	7afb      	ldrb	r3, [r7, #11]
   1087e:	2b00      	cmp	r3, #0
   10880:	d007      	beq.n	10892 <PINSEL_SetOpenDrainMode+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:357 (discriminator 1)
   10882:	7afb      	ldrb	r3, [r7, #11]
   10884:	2b01      	cmp	r3, #1
   10886:	d004      	beq.n	10892 <PINSEL_SetOpenDrainMode+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:358
        (type != PINSEL_PIN_TYPE_A ) &&
   10888:	7afb      	ldrb	r3, [r7, #11]
   1088a:	2b04      	cmp	r3, #4
   1088c:	d001      	beq.n	10892 <PINSEL_SetOpenDrainMode+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:360
        (type != PINSEL_PIN_TYPE_W ))
        return PINSEL_RET_NOT_SUPPORT;
   1088e:	4b10      	ldr	r3, [pc, #64]	; (108d0 <PINSEL_SetOpenDrainMode+0x84>)
   10890:	e017      	b.n	108c2 <PINSEL_SetOpenDrainMode+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:362
    
    pPIN = PIN_GetPointer(portnum, pinnum);
   10892:	79fa      	ldrb	r2, [r7, #7]
   10894:	79bb      	ldrb	r3, [r7, #6]
   10896:	4610      	mov	r0, r2
   10898:	4619      	mov	r1, r3
   1089a:	f7ff fd99 	bl	103d0 <PIN_GetPointer>
   1089e:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:363
    if(NewState == DISABLE)
   108a0:	797b      	ldrb	r3, [r7, #5]
   108a2:	2b00      	cmp	r3, #0
   108a4:	d106      	bne.n	108b4 <PINSEL_SetOpenDrainMode+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:365
    {
        *(uint32_t *)pPIN &= ~IOCON_OPENDRAIN_MODE;//Clear hys bits
   108a6:	68fb      	ldr	r3, [r7, #12]
   108a8:	681b      	ldr	r3, [r3, #0]
   108aa:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
   108ae:	68fb      	ldr	r3, [r7, #12]
   108b0:	601a      	str	r2, [r3, #0]
   108b2:	e005      	b.n	108c0 <PINSEL_SetOpenDrainMode+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:369
    }
    else
    {
        *(uint32_t *)pPIN |= IOCON_OPENDRAIN_MODE;
   108b4:	68fb      	ldr	r3, [r7, #12]
   108b6:	681b      	ldr	r3, [r3, #0]
   108b8:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
   108bc:	68fb      	ldr	r3, [r7, #12]
   108be:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:371
    }
    return PINSEL_RET_OK;
   108c0:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:372
}
   108c2:	4618      	mov	r0, r3
   108c4:	3710      	adds	r7, #16
   108c6:	46bd      	mov	sp, r7
   108c8:	bd80      	pop	{r7, pc}
   108ca:	bf00      	nop
   108cc:	10000001 	.word	0x10000001
   108d0:	10000002 	.word	0x10000002

000108d4 <PINSEL_SetAnalogPinMode>:
PINSEL_SetAnalogPinMode():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:387
 *              - PINSEL_RET_INVALID_PIN
 *              - PINSEL_RET_NOT_SUPPORT
 *              - PINSEL_RET_OK
 **********************************************************************/
PINSEL_RET_CODE PINSEL_SetAnalogPinMode (uint8_t portnum, uint8_t pinnum, uint8_t enable)
{
   108d4:	b580      	push	{r7, lr}
   108d6:	b084      	sub	sp, #16
   108d8:	af00      	add	r7, sp, #0
   108da:	4613      	mov	r3, r2
   108dc:	4602      	mov	r2, r0
   108de:	71fa      	strb	r2, [r7, #7]
   108e0:	460a      	mov	r2, r1
   108e2:	71ba      	strb	r2, [r7, #6]
   108e4:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:388
    uint32_t *pPIN = NULL;
   108e6:	2300      	movs	r3, #0
   108e8:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:389
    PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
   108ea:	79fa      	ldrb	r2, [r7, #7]
   108ec:	79bb      	ldrb	r3, [r7, #6]
   108ee:	4610      	mov	r0, r2
   108f0:	4619      	mov	r1, r3
   108f2:	f7ff fd87 	bl	10404 <PINSEL_GetPinType>
   108f6:	4603      	mov	r3, r0
   108f8:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:391

    if(type == PINSEL_PIN_TYPE_UNKNOWN)
   108fa:	7afb      	ldrb	r3, [r7, #11]
   108fc:	2b05      	cmp	r3, #5
   108fe:	d101      	bne.n	10904 <PINSEL_SetAnalogPinMode+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:392
        return PINSEL_RET_INVALID_PIN;
   10900:	4b11      	ldr	r3, [pc, #68]	; (10948 <PINSEL_SetAnalogPinMode+0x74>)
   10902:	e01c      	b.n	1093e <PINSEL_SetAnalogPinMode+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:393
    if(type != PINSEL_PIN_TYPE_A )
   10904:	7afb      	ldrb	r3, [r7, #11]
   10906:	2b01      	cmp	r3, #1
   10908:	d001      	beq.n	1090e <PINSEL_SetAnalogPinMode+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:394
        return PINSEL_RET_NOT_SUPPORT;
   1090a:	4b10      	ldr	r3, [pc, #64]	; (1094c <PINSEL_SetAnalogPinMode+0x78>)
   1090c:	e017      	b.n	1093e <PINSEL_SetAnalogPinMode+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:396

    pPIN = PIN_GetPointer(portnum, pinnum);
   1090e:	79fa      	ldrb	r2, [r7, #7]
   10910:	79bb      	ldrb	r3, [r7, #6]
   10912:	4610      	mov	r0, r2
   10914:	4619      	mov	r1, r3
   10916:	f7ff fd5b 	bl	103d0 <PIN_GetPointer>
   1091a:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:398

    if(enable)
   1091c:	797b      	ldrb	r3, [r7, #5]
   1091e:	2b00      	cmp	r3, #0
   10920:	d006      	beq.n	10930 <PINSEL_SetAnalogPinMode+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:400
    {
        *(uint32_t *)pPIN &= ~(IOCON_DIGITIAL_MODE);
   10922:	68fb      	ldr	r3, [r7, #12]
   10924:	681b      	ldr	r3, [r3, #0]
   10926:	f023 0280 	bic.w	r2, r3, #128	; 0x80
   1092a:	68fb      	ldr	r3, [r7, #12]
   1092c:	601a      	str	r2, [r3, #0]
   1092e:	e005      	b.n	1093c <PINSEL_SetAnalogPinMode+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:404
    }
    else
    {
        *(uint32_t *)pPIN |= IOCON_DIGITIAL_MODE;//Set 7th bit to one
   10930:	68fb      	ldr	r3, [r7, #12]
   10932:	681b      	ldr	r3, [r3, #0]
   10934:	f043 0280 	orr.w	r2, r3, #128	; 0x80
   10938:	68fb      	ldr	r3, [r7, #12]
   1093a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:407
    }

    return PINSEL_RET_OK;
   1093c:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:408
}
   1093e:	4618      	mov	r0, r3
   10940:	3710      	adds	r7, #16
   10942:	46bd      	mov	sp, r7
   10944:	bd80      	pop	{r7, pc}
   10946:	bf00      	nop
   10948:	10000001 	.word	0x10000001
   1094c:	10000002 	.word	0x10000002

00010950 <PINSEL_DacEnable>:
PINSEL_DacEnable():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:425
 *              - PINSEL_RET_INVALID_PIN
 *              - PINSEL_RET_NOT_SUPPORT
 *              - PINSEL_RET_OK
 **********************************************************************/
PINSEL_RET_CODE PINSEL_DacEnable (uint8_t portnum, uint8_t pinnum, uint8_t enable)
{
   10950:	b580      	push	{r7, lr}
   10952:	b084      	sub	sp, #16
   10954:	af00      	add	r7, sp, #0
   10956:	4613      	mov	r3, r2
   10958:	4602      	mov	r2, r0
   1095a:	71fa      	strb	r2, [r7, #7]
   1095c:	460a      	mov	r2, r1
   1095e:	71ba      	strb	r2, [r7, #6]
   10960:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:426
    uint32_t *pPIN = NULL;
   10962:	2300      	movs	r3, #0
   10964:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:428
    
    PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
   10966:	79fa      	ldrb	r2, [r7, #7]
   10968:	79bb      	ldrb	r3, [r7, #6]
   1096a:	4610      	mov	r0, r2
   1096c:	4619      	mov	r1, r3
   1096e:	f7ff fd49 	bl	10404 <PINSEL_GetPinType>
   10972:	4603      	mov	r3, r0
   10974:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:430
    
    if(type == PINSEL_PIN_TYPE_UNKNOWN)
   10976:	7afb      	ldrb	r3, [r7, #11]
   10978:	2b05      	cmp	r3, #5
   1097a:	d101      	bne.n	10980 <PINSEL_DacEnable+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:431
        return PINSEL_RET_INVALID_PIN;
   1097c:	4b12      	ldr	r3, [pc, #72]	; (109c8 <PINSEL_DacEnable+0x78>)
   1097e:	e01f      	b.n	109c0 <PINSEL_DacEnable+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:434

    // This setting is only for DAC pin (output pin)
    if(!((portnum == 0) && (pinnum == 26)))
   10980:	79fb      	ldrb	r3, [r7, #7]
   10982:	2b00      	cmp	r3, #0
   10984:	d102      	bne.n	1098c <PINSEL_DacEnable+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:434 (discriminator 1)
   10986:	79bb      	ldrb	r3, [r7, #6]
   10988:	2b1a      	cmp	r3, #26
   1098a:	d001      	beq.n	10990 <PINSEL_DacEnable+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:436
    {
        return PINSEL_RET_NOT_SUPPORT;
   1098c:	4b0f      	ldr	r3, [pc, #60]	; (109cc <PINSEL_DacEnable+0x7c>)
   1098e:	e017      	b.n	109c0 <PINSEL_DacEnable+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:439
    }

    pPIN = PIN_GetPointer(portnum, pinnum);
   10990:	79fa      	ldrb	r2, [r7, #7]
   10992:	79bb      	ldrb	r3, [r7, #6]
   10994:	4610      	mov	r0, r2
   10996:	4619      	mov	r1, r3
   10998:	f7ff fd1a 	bl	103d0 <PIN_GetPointer>
   1099c:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:441

    if(enable)
   1099e:	797b      	ldrb	r3, [r7, #5]
   109a0:	2b00      	cmp	r3, #0
   109a2:	d006      	beq.n	109b2 <PINSEL_DacEnable+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:443
    {
        *(uint32_t *)pPIN |= IOCON_DAC_ENABLE;//Set 16th bit to one
   109a4:	68fb      	ldr	r3, [r7, #12]
   109a6:	681b      	ldr	r3, [r3, #0]
   109a8:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
   109ac:	68fb      	ldr	r3, [r7, #12]
   109ae:	601a      	str	r2, [r3, #0]
   109b0:	e005      	b.n	109be <PINSEL_DacEnable+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:447
    }
    else
    {
        *(uint32_t *)pPIN &= ~IOCON_DAC_ENABLE;//Set 16th bit to one
   109b2:	68fb      	ldr	r3, [r7, #12]
   109b4:	681b      	ldr	r3, [r3, #0]
   109b6:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
   109ba:	68fb      	ldr	r3, [r7, #12]
   109bc:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:451

    }

    return PINSEL_RET_OK;
   109be:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:452
}
   109c0:	4618      	mov	r0, r3
   109c2:	3710      	adds	r7, #16
   109c4:	46bd      	mov	sp, r7
   109c6:	bd80      	pop	{r7, pc}
   109c8:	10000001 	.word	0x10000001
   109cc:	10000002 	.word	0x10000002

000109d0 <PINSEL_SetFilter>:
PINSEL_SetFilter():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:467
 *              - PINSEL_RET_INVALID_PIN
 *              - PINSEL_RET_NOT_SUPPORT
 *              - PINSEL_RET_OK
 **********************************************************************/
PINSEL_RET_CODE PINSEL_SetFilter (uint8_t portnum, uint8_t pinnum, uint8_t enable)
{
   109d0:	b580      	push	{r7, lr}
   109d2:	b084      	sub	sp, #16
   109d4:	af00      	add	r7, sp, #0
   109d6:	4613      	mov	r3, r2
   109d8:	4602      	mov	r2, r0
   109da:	71fa      	strb	r2, [r7, #7]
   109dc:	460a      	mov	r2, r1
   109de:	71ba      	strb	r2, [r7, #6]
   109e0:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:468
    uint32_t *pPIN = NULL;
   109e2:	2300      	movs	r3, #0
   109e4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:469
    PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
   109e6:	79fa      	ldrb	r2, [r7, #7]
   109e8:	79bb      	ldrb	r3, [r7, #6]
   109ea:	4610      	mov	r0, r2
   109ec:	4619      	mov	r1, r3
   109ee:	f7ff fd09 	bl	10404 <PINSEL_GetPinType>
   109f2:	4603      	mov	r3, r0
   109f4:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:471
    
    if(type == PINSEL_PIN_TYPE_UNKNOWN)
   109f6:	7afb      	ldrb	r3, [r7, #11]
   109f8:	2b05      	cmp	r3, #5
   109fa:	d101      	bne.n	10a00 <PINSEL_SetFilter+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:472
        return PINSEL_RET_INVALID_PIN;
   109fc:	4b12      	ldr	r3, [pc, #72]	; (10a48 <PINSEL_SetFilter+0x78>)
   109fe:	e01f      	b.n	10a40 <PINSEL_SetFilter+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:473
    if((type != PINSEL_PIN_TYPE_A ) &&
   10a00:	7afb      	ldrb	r3, [r7, #11]
   10a02:	2b01      	cmp	r3, #1
   10a04:	d004      	beq.n	10a10 <PINSEL_SetFilter+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:473 (discriminator 1)
   10a06:	7afb      	ldrb	r3, [r7, #11]
   10a08:	2b04      	cmp	r3, #4
   10a0a:	d001      	beq.n	10a10 <PINSEL_SetFilter+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:475
        (type != PINSEL_PIN_TYPE_W ))
        return PINSEL_RET_NOT_SUPPORT;
   10a0c:	4b0f      	ldr	r3, [pc, #60]	; (10a4c <PINSEL_SetFilter+0x7c>)
   10a0e:	e017      	b.n	10a40 <PINSEL_SetFilter+0x70>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:477

    pPIN = PIN_GetPointer(portnum, pinnum);
   10a10:	79fa      	ldrb	r2, [r7, #7]
   10a12:	79bb      	ldrb	r3, [r7, #6]
   10a14:	4610      	mov	r0, r2
   10a16:	4619      	mov	r1, r3
   10a18:	f7ff fcda 	bl	103d0 <PIN_GetPointer>
   10a1c:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:480


    if(enable)
   10a1e:	797b      	ldrb	r3, [r7, #5]
   10a20:	2b00      	cmp	r3, #0
   10a22:	d006      	beq.n	10a32 <PINSEL_SetFilter+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:482
    {
        *(uint32_t *)pPIN &= ~(IOCON_10ns_FILTER_DISABLE);//Clear 8th bit to 0
   10a24:	68fb      	ldr	r3, [r7, #12]
   10a26:	681b      	ldr	r3, [r3, #0]
   10a28:	f423 7280 	bic.w	r2, r3, #256	; 0x100
   10a2c:	68fb      	ldr	r3, [r7, #12]
   10a2e:	601a      	str	r2, [r3, #0]
   10a30:	e005      	b.n	10a3e <PINSEL_SetFilter+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:486
    }
    else
    {
        *(uint32_t *)pPIN |= (IOCON_10ns_FILTER_DISABLE);//Set 8th bit to one
   10a32:	68fb      	ldr	r3, [r7, #12]
   10a34:	681b      	ldr	r3, [r3, #0]
   10a36:	f443 7280 	orr.w	r2, r3, #256	; 0x100
   10a3a:	68fb      	ldr	r3, [r7, #12]
   10a3c:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:490
    }


    return PINSEL_RET_OK;
   10a3e:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:491
}
   10a40:	4618      	mov	r0, r3
   10a42:	3710      	adds	r7, #16
   10a44:	46bd      	mov	sp, r7
   10a46:	bd80      	pop	{r7, pc}
   10a48:	10000001 	.word	0x10000001
   10a4c:	10000002 	.word	0x10000002

00010a50 <PINSEL_SetI2CFilter>:
PINSEL_SetI2CFilter():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:505
 *              - PINSEL_RET_INVALID_PIN
 *              - PINSEL_RET_NOT_SUPPORT
 *              - PINSEL_RET_OK
 **********************************************************************/
PINSEL_RET_CODE PINSEL_SetI2CFilter (uint8_t portnum, uint8_t pinnum, uint8_t enable)
{
   10a50:	b580      	push	{r7, lr}
   10a52:	b084      	sub	sp, #16
   10a54:	af00      	add	r7, sp, #0
   10a56:	4613      	mov	r3, r2
   10a58:	4602      	mov	r2, r0
   10a5a:	71fa      	strb	r2, [r7, #7]
   10a5c:	460a      	mov	r2, r1
   10a5e:	71ba      	strb	r2, [r7, #6]
   10a60:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:506
    uint32_t *pPIN = NULL;
   10a62:	2300      	movs	r3, #0
   10a64:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:507
    PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
   10a66:	79fa      	ldrb	r2, [r7, #7]
   10a68:	79bb      	ldrb	r3, [r7, #6]
   10a6a:	4610      	mov	r0, r2
   10a6c:	4619      	mov	r1, r3
   10a6e:	f7ff fcc9 	bl	10404 <PINSEL_GetPinType>
   10a72:	4603      	mov	r3, r0
   10a74:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:509
    
    if(type == PINSEL_PIN_TYPE_UNKNOWN)
   10a76:	7afb      	ldrb	r3, [r7, #11]
   10a78:	2b05      	cmp	r3, #5
   10a7a:	d101      	bne.n	10a80 <PINSEL_SetI2CFilter+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:510
        return PINSEL_RET_INVALID_PIN;
   10a7c:	4b11      	ldr	r3, [pc, #68]	; (10ac4 <PINSEL_SetI2CFilter+0x74>)
   10a7e:	e01c      	b.n	10aba <PINSEL_SetI2CFilter+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:511
    if(type != PINSEL_PIN_TYPE_I)
   10a80:	7afb      	ldrb	r3, [r7, #11]
   10a82:	2b03      	cmp	r3, #3
   10a84:	d001      	beq.n	10a8a <PINSEL_SetI2CFilter+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:512
        return PINSEL_RET_NOT_SUPPORT;
   10a86:	4b10      	ldr	r3, [pc, #64]	; (10ac8 <PINSEL_SetI2CFilter+0x78>)
   10a88:	e017      	b.n	10aba <PINSEL_SetI2CFilter+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:514

    pPIN = PIN_GetPointer(portnum, pinnum);
   10a8a:	79fa      	ldrb	r2, [r7, #7]
   10a8c:	79bb      	ldrb	r3, [r7, #6]
   10a8e:	4610      	mov	r0, r2
   10a90:	4619      	mov	r1, r3
   10a92:	f7ff fc9d 	bl	103d0 <PIN_GetPointer>
   10a96:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:517


    if(enable)
   10a98:	797b      	ldrb	r3, [r7, #5]
   10a9a:	2b00      	cmp	r3, #0
   10a9c:	d006      	beq.n	10aac <PINSEL_SetI2CFilter+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:519
    {
        *(uint32_t *)pPIN &= ~(IOCON_HS_MASK);//Clear 8th bit to 0
   10a9e:	68fb      	ldr	r3, [r7, #12]
   10aa0:	681b      	ldr	r3, [r3, #0]
   10aa2:	f423 7280 	bic.w	r2, r3, #256	; 0x100
   10aa6:	68fb      	ldr	r3, [r7, #12]
   10aa8:	601a      	str	r2, [r3, #0]
   10aaa:	e005      	b.n	10ab8 <PINSEL_SetI2CFilter+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:523
    }
    else
    {
        *(uint32_t *)pPIN |= (IOCON_I2C_FILTER_DISABLE);//Set 8th bit to one
   10aac:	68fb      	ldr	r3, [r7, #12]
   10aae:	681b      	ldr	r3, [r3, #0]
   10ab0:	f443 7280 	orr.w	r2, r3, #256	; 0x100
   10ab4:	68fb      	ldr	r3, [r7, #12]
   10ab6:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:527
    }


    return PINSEL_RET_OK;
   10ab8:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_pinsel.c:528
}
   10aba:	4618      	mov	r0, r3
   10abc:	3710      	adds	r7, #16
   10abe:	46bd      	mov	sp, r7
   10ac0:	bd80      	pop	{r7, pc}
   10ac2:	bf00      	nop
   10ac4:	10000001 	.word	0x10000001
   10ac8:	10000002 	.word	0x10000002

00010acc <uart_set_divisors>:
uart_set_divisors():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:68
 * @return      Error status, could be:
 *              - SUCCESS
 *              - ERROR
 **********************************************************************/
static Status uart_set_divisors(UART_ID_Type UartID, uint32_t baudrate)
{
   10acc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
   10ad0:	b09a      	sub	sp, #104	; 0x68
   10ad2:	af00      	add	r7, sp, #0
   10ad4:	4603      	mov	r3, r0
   10ad6:	6239      	str	r1, [r7, #32]
   10ad8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:69
    Status errorStatus = ERROR;
   10adc:	2300      	movs	r3, #0
   10ade:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:78
    uint64_t best_divisor, divisor;
    uint32_t current_error, best_error;
    uint32_t recalcbaud;

    /* get UART block clock */
    uClk = CLKPWR_GetCLK(CLKPWR_CLKTYPE_PER);
   10ae2:	2001      	movs	r0, #1
   10ae4:	f7fe ff26 	bl	f934 <CLKPWR_GetCLK>
   10ae8:	63f8      	str	r0, [r7, #60]	; 0x3c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:88
    * It involves floating point calculations. That's the reason the formulae are adjusted with
    * Multiply and divide method.*/
    
    /* The value of mulFracDiv and dividerAddFracDiv should comply to the following expressions:
    * 0 < mulFracDiv <= 15, 0 <= dividerAddFracDiv <= 15 */
    best_error = 0xFFFFFFFF; /* Worst case */
   10aea:	f04f 33ff 	mov.w	r3, #4294967295
   10aee:	643b      	str	r3, [r7, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:89
    bestd = 0;
   10af0:	2300      	movs	r3, #0
   10af2:	65bb      	str	r3, [r7, #88]	; 0x58
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:90
    bestm = 0;
   10af4:	2300      	movs	r3, #0
   10af6:	657b      	str	r3, [r7, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:91
    best_divisor = 0;
   10af8:	f04f 0200 	mov.w	r2, #0
   10afc:	f04f 0300 	mov.w	r3, #0
   10b00:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:93
    
    for (m = 1 ; m <= 15 ;m++)
   10b04:	2301      	movs	r3, #1
   10b06:	65fb      	str	r3, [r7, #92]	; 0x5c
   10b08:	e06b      	b.n	10be2 <uart_set_divisors+0x116>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:95
    {
        for (d = 0 ; d < m ; d++)
   10b0a:	2300      	movs	r3, #0
   10b0c:	663b      	str	r3, [r7, #96]	; 0x60
   10b0e:	e05d      	b.n	10bcc <uart_set_divisors+0x100>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:97
        {
            divisor = ((uint64_t)uClk << 28)*m / (baudrate*(m+d));
   10b10:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   10b12:	461a      	mov	r2, r3
   10b14:	f04f 0300 	mov.w	r3, #0
   10b18:	071d      	lsls	r5, r3, #28
   10b1a:	ea45 1512 	orr.w	r5, r5, r2, lsr #4
   10b1e:	0714      	lsls	r4, r2, #28
   10b20:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
   10b22:	461a      	mov	r2, r3
   10b24:	f04f 0300 	mov.w	r3, #0
   10b28:	fb02 f005 	mul.w	r0, r2, r5
   10b2c:	fb04 f103 	mul.w	r1, r4, r3
   10b30:	4401      	add	r1, r0
   10b32:	fba4 2302 	umull	r2, r3, r4, r2
   10b36:	4419      	add	r1, r3
   10b38:	460b      	mov	r3, r1
   10b3a:	6df8      	ldr	r0, [r7, #92]	; 0x5c
   10b3c:	6e39      	ldr	r1, [r7, #96]	; 0x60
   10b3e:	4401      	add	r1, r0
   10b40:	6a38      	ldr	r0, [r7, #32]
   10b42:	fb00 f001 	mul.w	r0, r0, r1
   10b46:	6078      	str	r0, [r7, #4]
   10b48:	6878      	ldr	r0, [r7, #4]
   10b4a:	f04f 0100 	mov.w	r1, #0
   10b4e:	e9c7 0106 	strd	r0, r1, [r7, #24]
   10b52:	4610      	mov	r0, r2
   10b54:	4619      	mov	r1, r3
   10b56:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
   10b5a:	f002 fd69 	bl	13630 <__aeabi_uldivmod>
   10b5e:	4602      	mov	r2, r0
   10b60:	460b      	mov	r3, r1
   10b62:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:98
            current_error = divisor & 0xFFFFFFFF;
   10b66:	6b3b      	ldr	r3, [r7, #48]	; 0x30
   10b68:	647b      	str	r3, [r7, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:100

            tmp = divisor>>32;
   10b6a:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
   10b6e:	0019      	movs	r1, r3
   10b70:	6139      	str	r1, [r7, #16]
   10b72:	2300      	movs	r3, #0
   10b74:	617b      	str	r3, [r7, #20]
   10b76:	693b      	ldr	r3, [r7, #16]
   10b78:	653b      	str	r3, [r7, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:103

            /* Adjust error */
            if(current_error > ((uint32_t)1<<31))
   10b7a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
   10b7c:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   10b80:	d905      	bls.n	10b8e <uart_set_divisors+0xc2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:105
            {
                current_error = -current_error;
   10b82:	6c7b      	ldr	r3, [r7, #68]	; 0x44
   10b84:	425b      	negs	r3, r3
   10b86:	647b      	str	r3, [r7, #68]	; 0x44
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:106
                tmp++;
   10b88:	6d3b      	ldr	r3, [r7, #80]	; 0x50
   10b8a:	3301      	adds	r3, #1
   10b8c:	653b      	str	r3, [r7, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:110
            }

            /* Out of range */
            if(tmp < 1 || tmp > 65536)
   10b8e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
   10b90:	2b00      	cmp	r3, #0
   10b92:	d003      	beq.n	10b9c <uart_set_divisors+0xd0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:110 (discriminator 1)
   10b94:	6d3b      	ldr	r3, [r7, #80]	; 0x50
   10b96:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   10b9a:	d900      	bls.n	10b9e <uart_set_divisors+0xd2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:111
                continue;
   10b9c:	e013      	b.n	10bc6 <uart_set_divisors+0xfa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:113

            if( current_error < best_error)
   10b9e:	6c7a      	ldr	r2, [r7, #68]	; 0x44
   10ba0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   10ba2:	429a      	cmp	r2, r3
   10ba4:	d20f      	bcs.n	10bc6 <uart_set_divisors+0xfa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:115
            {
                best_error = current_error;
   10ba6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
   10ba8:	643b      	str	r3, [r7, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:116
                best_divisor = tmp;
   10baa:	6d3b      	ldr	r3, [r7, #80]	; 0x50
   10bac:	461a      	mov	r2, r3
   10bae:	f04f 0300 	mov.w	r3, #0
   10bb2:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:117
                bestd = d;
   10bb6:	6e3b      	ldr	r3, [r7, #96]	; 0x60
   10bb8:	65bb      	str	r3, [r7, #88]	; 0x58
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:118
                bestm = m;
   10bba:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
   10bbc:	657b      	str	r3, [r7, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:120
                
                if(best_error == 0) 
   10bbe:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   10bc0:	2b00      	cmp	r3, #0
   10bc2:	d100      	bne.n	10bc6 <uart_set_divisors+0xfa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:121
                    break;
   10bc4:	e006      	b.n	10bd4 <uart_set_divisors+0x108>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:95
    bestm = 0;
    best_divisor = 0;
    
    for (m = 1 ; m <= 15 ;m++)
    {
        for (d = 0 ; d < m ; d++)
   10bc6:	6e3b      	ldr	r3, [r7, #96]	; 0x60
   10bc8:	3301      	adds	r3, #1
   10bca:	663b      	str	r3, [r7, #96]	; 0x60
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:95 (discriminator 1)
   10bcc:	6e3a      	ldr	r2, [r7, #96]	; 0x60
   10bce:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
   10bd0:	429a      	cmp	r2, r3
   10bd2:	d39d      	bcc.n	10b10 <uart_set_divisors+0x44>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:125
                if(best_error == 0) 
                    break;
            }
        } /* end of inner for loop */

        if (best_error == 0)
   10bd4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   10bd6:	2b00      	cmp	r3, #0
   10bd8:	d100      	bne.n	10bdc <uart_set_divisors+0x110>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:126
            break;
   10bda:	e005      	b.n	10be8 <uart_set_divisors+0x11c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:93
    best_error = 0xFFFFFFFF; /* Worst case */
    bestd = 0;
    bestm = 0;
    best_divisor = 0;
    
    for (m = 1 ; m <= 15 ;m++)
   10bdc:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
   10bde:	3301      	adds	r3, #1
   10be0:	65fb      	str	r3, [r7, #92]	; 0x5c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:93 (discriminator 1)
   10be2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
   10be4:	2b0f      	cmp	r3, #15
   10be6:	d990      	bls.n	10b0a <uart_set_divisors+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:130
        if (best_error == 0)
            break;
    } /* end of outer for loop  */

    /* can not find best match */
    if(best_divisor == 0) 
   10be8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
   10bec:	ea52 0003 	orrs.w	r0, r2, r3
   10bf0:	d101      	bne.n	10bf6 <uart_set_divisors+0x12a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:131
        return ERROR;
   10bf2:	2300      	movs	r3, #0
   10bf4:	e0cc      	b.n	10d90 <uart_set_divisors+0x2c4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:133

    recalcbaud = (uClk >> 4) * bestm / (best_divisor * (bestm + bestd));
   10bf6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
   10bf8:	091b      	lsrs	r3, r3, #4
   10bfa:	6d7a      	ldr	r2, [r7, #84]	; 0x54
   10bfc:	fb02 f303 	mul.w	r3, r2, r3
   10c00:	4618      	mov	r0, r3
   10c02:	f04f 0100 	mov.w	r1, #0
   10c06:	6d7a      	ldr	r2, [r7, #84]	; 0x54
   10c08:	6dbb      	ldr	r3, [r7, #88]	; 0x58
   10c0a:	4413      	add	r3, r2
   10c0c:	461a      	mov	r2, r3
   10c0e:	f04f 0300 	mov.w	r3, #0
   10c12:	6cbc      	ldr	r4, [r7, #72]	; 0x48
   10c14:	fb03 f504 	mul.w	r5, r3, r4
   10c18:	6cfc      	ldr	r4, [r7, #76]	; 0x4c
   10c1a:	fb02 f404 	mul.w	r4, r2, r4
   10c1e:	442c      	add	r4, r5
   10c20:	6cbd      	ldr	r5, [r7, #72]	; 0x48
   10c22:	fba5 2302 	umull	r2, r3, r5, r2
   10c26:	441c      	add	r4, r3
   10c28:	4623      	mov	r3, r4
   10c2a:	f002 fd01 	bl	13630 <__aeabi_uldivmod>
   10c2e:	4602      	mov	r2, r0
   10c30:	460b      	mov	r3, r1
   10c32:	4613      	mov	r3, r2
   10c34:	62fb      	str	r3, [r7, #44]	; 0x2c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:136

    /* reuse best_error to evaluate baud error*/
    if(baudrate > recalcbaud) 
   10c36:	6a3a      	ldr	r2, [r7, #32]
   10c38:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   10c3a:	429a      	cmp	r2, r3
   10c3c:	d904      	bls.n	10c48 <uart_set_divisors+0x17c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:137
        best_error = baudrate - recalcbaud;
   10c3e:	6a3a      	ldr	r2, [r7, #32]
   10c40:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   10c42:	1ad3      	subs	r3, r2, r3
   10c44:	643b      	str	r3, [r7, #64]	; 0x40
   10c46:	e003      	b.n	10c50 <uart_set_divisors+0x184>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:139
    else 
        best_error = recalcbaud -baudrate;
   10c48:	6afa      	ldr	r2, [r7, #44]	; 0x2c
   10c4a:	6a3b      	ldr	r3, [r7, #32]
   10c4c:	1ad3      	subs	r3, r2, r3
   10c4e:	643b      	str	r3, [r7, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:141

    best_error = best_error * 100 / baudrate;
   10c50:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   10c52:	2264      	movs	r2, #100	; 0x64
   10c54:	fb02 f203 	mul.w	r2, r2, r3
   10c58:	6a3b      	ldr	r3, [r7, #32]
   10c5a:	fbb2 f3f3 	udiv	r3, r2, r3
   10c5e:	643b      	str	r3, [r7, #64]	; 0x40
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:143

    if (best_error < UART_ACCEPTED_BAUDRATE_ERROR)
   10c60:	6c3b      	ldr	r3, [r7, #64]	; 0x40
   10c62:	2b02      	cmp	r3, #2
   10c64:	f200 8092 	bhi.w	10d8c <uart_set_divisors+0x2c0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:145
    {
        if (UartID == UART_1)
   10c68:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
   10c6c:	2b01      	cmp	r3, #1
   10c6e:	d12b      	bne.n	10cc8 <uart_set_divisors+0x1fc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:147
        {
            LPC_UART1->LCR |= UART_LCR_DLAB_EN;
   10c70:	4b4a      	ldr	r3, [pc, #296]	; (10d9c <uart_set_divisors+0x2d0>)
   10c72:	4a4a      	ldr	r2, [pc, #296]	; (10d9c <uart_set_divisors+0x2d0>)
   10c74:	7b12      	ldrb	r2, [r2, #12]
   10c76:	b2d2      	uxtb	r2, r2
   10c78:	f062 027f 	orn	r2, r2, #127	; 0x7f
   10c7c:	b2d2      	uxtb	r2, r2
   10c7e:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:149
            
            LPC_UART1->DLM = UART_LOAD_DLM(best_divisor);
   10c80:	4946      	ldr	r1, [pc, #280]	; (10d9c <uart_set_divisors+0x2d0>)
   10c82:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
   10c86:	0a10      	lsrs	r0, r2, #8
   10c88:	60b8      	str	r0, [r7, #8]
   10c8a:	68b8      	ldr	r0, [r7, #8]
   10c8c:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
   10c90:	60b8      	str	r0, [r7, #8]
   10c92:	0a18      	lsrs	r0, r3, #8
   10c94:	60f8      	str	r0, [r7, #12]
   10c96:	7a3b      	ldrb	r3, [r7, #8]
   10c98:	710b      	strb	r3, [r1, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:151
            
            LPC_UART1->DLL = UART_LOAD_DLL(best_divisor);
   10c9a:	4b40      	ldr	r3, [pc, #256]	; (10d9c <uart_set_divisors+0x2d0>)
   10c9c:	f897 2048 	ldrb.w	r2, [r7, #72]	; 0x48
   10ca0:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:154
            
            /* Then reset DLAB bit */
            LPC_UART1->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
   10ca2:	4b3e      	ldr	r3, [pc, #248]	; (10d9c <uart_set_divisors+0x2d0>)
   10ca4:	4a3d      	ldr	r2, [pc, #244]	; (10d9c <uart_set_divisors+0x2d0>)
   10ca6:	7b12      	ldrb	r2, [r2, #12]
   10ca8:	b2d2      	uxtb	r2, r2
   10caa:	f002 027f 	and.w	r2, r2, #127	; 0x7f
   10cae:	b2d2      	uxtb	r2, r2
   10cb0:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:156
            
            LPC_UART1->FDR = (UART_FDR_MULVAL(bestm)
   10cb2:	4b3a      	ldr	r3, [pc, #232]	; (10d9c <uart_set_divisors+0x2d0>)
   10cb4:	6d7a      	ldr	r2, [r7, #84]	; 0x54
   10cb6:	0112      	lsls	r2, r2, #4
   10cb8:	b2d1      	uxtb	r1, r2
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:157
                                                    | UART_FDR_DIVADDVAL(bestd)) & UART_FDR_BITMASK;
   10cba:	6dba      	ldr	r2, [r7, #88]	; 0x58
   10cbc:	f002 020f 	and.w	r2, r2, #15
   10cc0:	430a      	orrs	r2, r1
   10cc2:	b2d2      	uxtb	r2, r2
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:156
            LPC_UART1->DLL = UART_LOAD_DLL(best_divisor);
            
            /* Then reset DLAB bit */
            LPC_UART1->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
            
            LPC_UART1->FDR = (UART_FDR_MULVAL(bestm)
   10cc4:	629a      	str	r2, [r3, #40]	; 0x28
   10cc6:	e05e      	b.n	10d86 <uart_set_divisors+0x2ba>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:159
                                                    | UART_FDR_DIVADDVAL(bestd)) & UART_FDR_BITMASK;
        }
        else if (UartID == UART_4)
   10cc8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
   10ccc:	2b04      	cmp	r3, #4
   10cce:	d126      	bne.n	10d1e <uart_set_divisors+0x252>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:161
        {
            LPC_UART4->LCR |= UART_LCR_DLAB_EN;
   10cd0:	4b33      	ldr	r3, [pc, #204]	; (10da0 <uart_set_divisors+0x2d4>)
   10cd2:	4a33      	ldr	r2, [pc, #204]	; (10da0 <uart_set_divisors+0x2d4>)
   10cd4:	68d2      	ldr	r2, [r2, #12]
   10cd6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   10cda:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:163
            
            LPC_UART4->DLM = UART_LOAD_DLM(best_divisor);
   10cdc:	4930      	ldr	r1, [pc, #192]	; (10da0 <uart_set_divisors+0x2d4>)
   10cde:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
   10ce2:	ea4f 2a12 	mov.w	sl, r2, lsr #8
   10ce6:	ea4a 6a03 	orr.w	sl, sl, r3, lsl #24
   10cea:	ea4f 2b13 	mov.w	fp, r3, lsr #8
   10cee:	4653      	mov	r3, sl
   10cf0:	b2db      	uxtb	r3, r3
   10cf2:	604b      	str	r3, [r1, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:165
            
            LPC_UART4->DLL = UART_LOAD_DLL(best_divisor);
   10cf4:	4b2a      	ldr	r3, [pc, #168]	; (10da0 <uart_set_divisors+0x2d4>)
   10cf6:	6cba      	ldr	r2, [r7, #72]	; 0x48
   10cf8:	b2d2      	uxtb	r2, r2
   10cfa:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:168
            
            /* Then reset DLAB bit */
            LPC_UART4->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
   10cfc:	4b28      	ldr	r3, [pc, #160]	; (10da0 <uart_set_divisors+0x2d4>)
   10cfe:	4a28      	ldr	r2, [pc, #160]	; (10da0 <uart_set_divisors+0x2d4>)
   10d00:	68d2      	ldr	r2, [r2, #12]
   10d02:	f002 027f 	and.w	r2, r2, #127	; 0x7f
   10d06:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:170
            
            LPC_UART4->FDR = (UART_FDR_MULVAL(bestm)
   10d08:	4b25      	ldr	r3, [pc, #148]	; (10da0 <uart_set_divisors+0x2d4>)
   10d0a:	6d7a      	ldr	r2, [r7, #84]	; 0x54
   10d0c:	0112      	lsls	r2, r2, #4
   10d0e:	b2d1      	uxtb	r1, r2
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:171
                                                    | UART_FDR_DIVADDVAL(bestd)) & UART_FDR_BITMASK;
   10d10:	6dba      	ldr	r2, [r7, #88]	; 0x58
   10d12:	f002 020f 	and.w	r2, r2, #15
   10d16:	430a      	orrs	r2, r1
   10d18:	b2d2      	uxtb	r2, r2
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:170
            LPC_UART4->DLL = UART_LOAD_DLL(best_divisor);
            
            /* Then reset DLAB bit */
            LPC_UART4->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
            
            LPC_UART4->FDR = (UART_FDR_MULVAL(bestm)
   10d1a:	629a      	str	r2, [r3, #40]	; 0x28
   10d1c:	e033      	b.n	10d86 <uart_set_divisors+0x2ba>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:176
                                                    | UART_FDR_DIVADDVAL(bestd)) & UART_FDR_BITMASK;
        }
            
        else
        {
            LPC_UART_TypeDef *UARTx = uart_get_pointer(UartID);
   10d1e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
   10d22:	4618      	mov	r0, r3
   10d24:	f000 f83e 	bl	10da4 <uart_get_pointer>
   10d28:	62b8      	str	r0, [r7, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:177
            UARTx->LCR |= UART_LCR_DLAB_EN;
   10d2a:	6abb      	ldr	r3, [r7, #40]	; 0x28
   10d2c:	7b1b      	ldrb	r3, [r3, #12]
   10d2e:	b2db      	uxtb	r3, r3
   10d30:	f063 037f 	orn	r3, r3, #127	; 0x7f
   10d34:	b2da      	uxtb	r2, r3
   10d36:	6abb      	ldr	r3, [r7, #40]	; 0x28
   10d38:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:179
            
            UARTx->DLM = UART_LOAD_DLM(best_divisor);
   10d3a:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
   10d3e:	ea4f 2812 	mov.w	r8, r2, lsr #8
   10d42:	ea48 6803 	orr.w	r8, r8, r3, lsl #24
   10d46:	ea4f 2913 	mov.w	r9, r3, lsr #8
   10d4a:	fa5f f288 	uxtb.w	r2, r8
   10d4e:	6abb      	ldr	r3, [r7, #40]	; 0x28
   10d50:	711a      	strb	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:181
            
            UARTx->DLL = UART_LOAD_DLL(best_divisor);
   10d52:	f897 2048 	ldrb.w	r2, [r7, #72]	; 0x48
   10d56:	6abb      	ldr	r3, [r7, #40]	; 0x28
   10d58:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:184
            
            /* Then reset DLAB bit */
            UARTx->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
   10d5a:	6abb      	ldr	r3, [r7, #40]	; 0x28
   10d5c:	7b1b      	ldrb	r3, [r3, #12]
   10d5e:	b2db      	uxtb	r3, r3
   10d60:	f003 037f 	and.w	r3, r3, #127	; 0x7f
   10d64:	b2da      	uxtb	r2, r3
   10d66:	6abb      	ldr	r3, [r7, #40]	; 0x28
   10d68:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:186
            
            UARTx->FDR = (UART_FDR_MULVAL(bestm) \
   10d6a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
   10d6c:	b2db      	uxtb	r3, r3
   10d6e:	011b      	lsls	r3, r3, #4
   10d70:	b2da      	uxtb	r2, r3
   10d72:	6dbb      	ldr	r3, [r7, #88]	; 0x58
   10d74:	b2db      	uxtb	r3, r3
   10d76:	f003 030f 	and.w	r3, r3, #15
   10d7a:	b2db      	uxtb	r3, r3
   10d7c:	4313      	orrs	r3, r2
   10d7e:	b2da      	uxtb	r2, r3
   10d80:	6abb      	ldr	r3, [r7, #40]	; 0x28
   10d82:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:189
                            | UART_FDR_DIVADDVAL(bestd)) & UART_FDR_BITMASK;
        }
        errorStatus = SUCCESS;
   10d86:	2301      	movs	r3, #1
   10d88:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:192
    }

    return errorStatus;
   10d8c:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:193
}
   10d90:	4618      	mov	r0, r3
   10d92:	3768      	adds	r7, #104	; 0x68
   10d94:	46bd      	mov	sp, r7
   10d96:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
   10d9a:	bf00      	nop
   10d9c:	40010000 	.word	0x40010000
   10da0:	400a4000 	.word	0x400a4000

00010da4 <uart_get_pointer>:
uart_get_pointer():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:205
 *              - UART_3: UART3 peripheral
 *              - UART_4: UART4 peripheral
 * @return      LPC_UART0~LPC_UART4
 **********************************************************************/
LPC_UART_TypeDef *uart_get_pointer(UART_ID_Type UartID)
{
   10da4:	b480      	push	{r7}
   10da6:	b085      	sub	sp, #20
   10da8:	af00      	add	r7, sp, #0
   10daa:	4603      	mov	r3, r0
   10dac:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:206
    LPC_UART_TypeDef *UARTx = NULL;
   10dae:	2300      	movs	r3, #0
   10db0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:207
    switch(UartID)
   10db2:	79fb      	ldrb	r3, [r7, #7]
   10db4:	2b02      	cmp	r3, #2
   10db6:	d007      	beq.n	10dc8 <uart_get_pointer+0x24>
   10db8:	2b03      	cmp	r3, #3
   10dba:	d008      	beq.n	10dce <uart_get_pointer+0x2a>
   10dbc:	2b00      	cmp	r3, #0
   10dbe:	d000      	beq.n	10dc2 <uart_get_pointer+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:219
            break;
        case UART_3:
            UARTx = LPC_UART3;
            break;
        default:
            break;
   10dc0:	e008      	b.n	10dd4 <uart_get_pointer+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:210
{
    LPC_UART_TypeDef *UARTx = NULL;
    switch(UartID)
    {
        case UART_0:
            UARTx = LPC_UART0;
   10dc2:	4b08      	ldr	r3, [pc, #32]	; (10de4 <uart_get_pointer+0x40>)
   10dc4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:211
            break;
   10dc6:	e005      	b.n	10dd4 <uart_get_pointer+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:213
        case UART_2:
            UARTx = LPC_UART2;
   10dc8:	4b07      	ldr	r3, [pc, #28]	; (10de8 <uart_get_pointer+0x44>)
   10dca:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:214
            break;
   10dcc:	e002      	b.n	10dd4 <uart_get_pointer+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:216
        case UART_3:
            UARTx = LPC_UART3;
   10dce:	4b07      	ldr	r3, [pc, #28]	; (10dec <uart_get_pointer+0x48>)
   10dd0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:217
            break;
   10dd2:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:221
        default:
            break;
    }
    return UARTx;
   10dd4:	68fb      	ldr	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:222
}
   10dd6:	4618      	mov	r0, r3
   10dd8:	3714      	adds	r7, #20
   10dda:	46bd      	mov	sp, r7
   10ddc:	f85d 7b04 	ldr.w	r7, [sp], #4
   10de0:	4770      	bx	lr
   10de2:	bf00      	nop
   10de4:	4000c000 	.word	0x4000c000
   10de8:	40098000 	.word	0x40098000
   10dec:	4009c000 	.word	0x4009c000

00010df0 <UART_Init>:
UART_Init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:247
*                    that contains the configuration information for the
*                    specified UART peripheral.
 * @return      None
 *********************************************************************/
void UART_Init(UART_ID_Type UartID, UART_CFG_Type *UART_ConfigStruct)
{
   10df0:	b580      	push	{r7, lr}
   10df2:	b086      	sub	sp, #24
   10df4:	af00      	add	r7, sp, #0
   10df6:	4603      	mov	r3, r0
   10df8:	6039      	str	r1, [r7, #0]
   10dfa:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:249
    uint32_t tmp;
    switch (UartID)
   10dfc:	79fb      	ldrb	r3, [r7, #7]
   10dfe:	2b04      	cmp	r3, #4
   10e00:	f200 80e4 	bhi.w	10fcc <UART_Init+0x1dc>
   10e04:	a201      	add	r2, pc, #4	; (adr r2, 10e0c <UART_Init+0x1c>)
   10e06:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   10e0a:	bf00      	nop
   10e0c:	00010e21 	.word	0x00010e21
   10e10:	00010ed5 	.word	0x00010ed5
   10e14:	00010e21 	.word	0x00010e21
   10e18:	00010e21 	.word	0x00010e21
   10e1c:	00010f63 	.word	0x00010f63
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:255
    {
        case UART_0:
        case UART_2:
        case UART_3:
        {
            LPC_UART_TypeDef *UARTx = uart_get_pointer(UartID);
   10e20:	79fb      	ldrb	r3, [r7, #7]
   10e22:	4618      	mov	r0, r3
   10e24:	f7ff ffbe 	bl	10da4 <uart_get_pointer>
   10e28:	6138      	str	r0, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:256
            if(UartID == UART_0)
   10e2a:	79fb      	ldrb	r3, [r7, #7]
   10e2c:	2b00      	cmp	r3, #0
   10e2e:	d104      	bne.n	10e3a <UART_Init+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:258
                /* Set up clock and power for UART module */
                CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART0, ENABLE);
   10e30:	2008      	movs	r0, #8
   10e32:	2101      	movs	r1, #1
   10e34:	f7fe fdae 	bl	f994 <CLKPWR_ConfigPPWR>
   10e38:	e010      	b.n	10e5c <UART_Init+0x6c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:259
            else if(UartID == UART_2)
   10e3a:	79fb      	ldrb	r3, [r7, #7]
   10e3c:	2b02      	cmp	r3, #2
   10e3e:	d105      	bne.n	10e4c <UART_Init+0x5c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:261
                /* Set up clock and power for UART module */
                CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART2, ENABLE);
   10e40:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   10e44:	2101      	movs	r1, #1
   10e46:	f7fe fda5 	bl	f994 <CLKPWR_ConfigPPWR>
   10e4a:	e007      	b.n	10e5c <UART_Init+0x6c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:262
            else if(UartID == UART_3)
   10e4c:	79fb      	ldrb	r3, [r7, #7]
   10e4e:	2b03      	cmp	r3, #3
   10e50:	d104      	bne.n	10e5c <UART_Init+0x6c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:264
                /* Set up clock and power for UART module */
                CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART3, ENABLE);;
   10e52:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
   10e56:	2101      	movs	r1, #1
   10e58:	f7fe fd9c 	bl	f994 <CLKPWR_ConfigPPWR>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:266
            /* FIFOs are empty */
            UARTx->FCR = ( UART_FCR_FIFO_EN | UART_FCR_RX_RS | UART_FCR_TX_RS);
   10e5c:	693b      	ldr	r3, [r7, #16]
   10e5e:	2207      	movs	r2, #7
   10e60:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:269

            // Disable FIFO
            UARTx->FCR = 0;
   10e62:	693b      	ldr	r3, [r7, #16]
   10e64:	2200      	movs	r2, #0
   10e66:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:272

            // Dummy reading
            while (UARTx->LSR & UART_LSR_RDR)
   10e68:	e003      	b.n	10e72 <UART_Init+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:274
            {
                tmp = UARTx->RBR;
   10e6a:	693b      	ldr	r3, [r7, #16]
   10e6c:	781b      	ldrb	r3, [r3, #0]
   10e6e:	b2db      	uxtb	r3, r3
   10e70:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:272 (discriminator 1)

            // Disable FIFO
            UARTx->FCR = 0;

            // Dummy reading
            while (UARTx->LSR & UART_LSR_RDR)
   10e72:	693b      	ldr	r3, [r7, #16]
   10e74:	7d1b      	ldrb	r3, [r3, #20]
   10e76:	b2db      	uxtb	r3, r3
   10e78:	f003 0301 	and.w	r3, r3, #1
   10e7c:	2b00      	cmp	r3, #0
   10e7e:	d1f4      	bne.n	10e6a <UART_Init+0x7a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:277
            {
                tmp = UARTx->RBR;
            }

            UARTx->TER = UART_TER_TXEN;
   10e80:	693b      	ldr	r3, [r7, #16]
   10e82:	2280      	movs	r2, #128	; 0x80
   10e84:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:280

            // Wait for current transmit complete
            while (!(UARTx->LSR & UART_LSR_THRE));
   10e88:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:280 (discriminator 1)
   10e8a:	693b      	ldr	r3, [r7, #16]
   10e8c:	7d1b      	ldrb	r3, [r3, #20]
   10e8e:	b2db      	uxtb	r3, r3
   10e90:	f003 0320 	and.w	r3, r3, #32
   10e94:	2b00      	cmp	r3, #0
   10e96:	d0f8      	beq.n	10e8a <UART_Init+0x9a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:283

            // Disable Tx
            UARTx->TER = 0;
   10e98:	693b      	ldr	r3, [r7, #16]
   10e9a:	2200      	movs	r2, #0
   10e9c:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:286

            // Disable interrupt
            UARTx->IER = 0;
   10ea0:	693b      	ldr	r3, [r7, #16]
   10ea2:	2200      	movs	r2, #0
   10ea4:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:289

            // Set LCR to default state
            UARTx->LCR = 0;
   10ea6:	693b      	ldr	r3, [r7, #16]
   10ea8:	2200      	movs	r2, #0
   10eaa:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:292

            // Set ACR to default state
            UARTx->ACR = 0;
   10eac:	693b      	ldr	r3, [r7, #16]
   10eae:	2200      	movs	r2, #0
   10eb0:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:295

            // Set RS485 control to default state
            UARTx->RS485CTRL = 0;
   10eb2:	693b      	ldr	r3, [r7, #16]
   10eb4:	2200      	movs	r2, #0
   10eb6:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:298

            // Set RS485 delay timer to default state
            UARTx->RS485DLY = 0;
   10eba:	693b      	ldr	r3, [r7, #16]
   10ebc:	2200      	movs	r2, #0
   10ebe:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:301

            // Set RS485 addr match to default state
            UARTx->ADRMATCH = 0;
   10ec2:	693b      	ldr	r3, [r7, #16]
   10ec4:	2200      	movs	r2, #0
   10ec6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:304

            // Dummy reading
            tmp = UARTx->LSR;
   10eca:	693b      	ldr	r3, [r7, #16]
   10ecc:	7d1b      	ldrb	r3, [r3, #20]
   10ece:	b2db      	uxtb	r3, r3
   10ed0:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:306
        }
        break;
   10ed2:	e07b      	b.n	10fcc <UART_Init+0x1dc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:310
        case UART_1:
        {
            /* Set up clock and power for UART module */
            CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART1, ENABLE);
   10ed4:	2010      	movs	r0, #16
   10ed6:	2101      	movs	r1, #1
   10ed8:	f7fe fd5c 	bl	f994 <CLKPWR_ConfigPPWR>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:313

            /* FIFOs are empty */
            LPC_UART1->FCR = ( UART_FCR_FIFO_EN | UART_FCR_RX_RS | UART_FCR_TX_RS);
   10edc:	4b81      	ldr	r3, [pc, #516]	; (110e4 <UART_Init+0x2f4>)
   10ede:	2207      	movs	r2, #7
   10ee0:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:316

            // Disable FIFO
            LPC_UART1->FCR = 0;
   10ee2:	4b80      	ldr	r3, [pc, #512]	; (110e4 <UART_Init+0x2f4>)
   10ee4:	2200      	movs	r2, #0
   10ee6:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:319

            // Dummy reading
            while (LPC_UART1->LSR & UART_LSR_RDR)
   10ee8:	e003      	b.n	10ef2 <UART_Init+0x102>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:321
            {
                tmp = LPC_UART1->RBR;
   10eea:	4b7e      	ldr	r3, [pc, #504]	; (110e4 <UART_Init+0x2f4>)
   10eec:	781b      	ldrb	r3, [r3, #0]
   10eee:	b2db      	uxtb	r3, r3
   10ef0:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:319 (discriminator 1)

            // Disable FIFO
            LPC_UART1->FCR = 0;

            // Dummy reading
            while (LPC_UART1->LSR & UART_LSR_RDR)
   10ef2:	4b7c      	ldr	r3, [pc, #496]	; (110e4 <UART_Init+0x2f4>)
   10ef4:	7d1b      	ldrb	r3, [r3, #20]
   10ef6:	b2db      	uxtb	r3, r3
   10ef8:	f003 0301 	and.w	r3, r3, #1
   10efc:	2b00      	cmp	r3, #0
   10efe:	d1f4      	bne.n	10eea <UART_Init+0xfa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:324
            {
                tmp = LPC_UART1->RBR;
            }

            LPC_UART1->TER = UART_TER_TXEN;
   10f00:	4b78      	ldr	r3, [pc, #480]	; (110e4 <UART_Init+0x2f4>)
   10f02:	2280      	movs	r2, #128	; 0x80
   10f04:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:327

            // Wait for current transmit complete
            while (!(LPC_UART1->LSR & UART_LSR_THRE));
   10f08:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:327 (discriminator 1)
   10f0a:	4b76      	ldr	r3, [pc, #472]	; (110e4 <UART_Init+0x2f4>)
   10f0c:	7d1b      	ldrb	r3, [r3, #20]
   10f0e:	b2db      	uxtb	r3, r3
   10f10:	f003 0320 	and.w	r3, r3, #32
   10f14:	2b00      	cmp	r3, #0
   10f16:	d0f8      	beq.n	10f0a <UART_Init+0x11a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:330

            // Disable Tx
            LPC_UART1->TER = 0;
   10f18:	4b72      	ldr	r3, [pc, #456]	; (110e4 <UART_Init+0x2f4>)
   10f1a:	2200      	movs	r2, #0
   10f1c:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:333

            // Disable interrupt
            LPC_UART1->IER = 0;
   10f20:	4b70      	ldr	r3, [pc, #448]	; (110e4 <UART_Init+0x2f4>)
   10f22:	2200      	movs	r2, #0
   10f24:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:336

            // Set LCR to default state
            LPC_UART1->LCR = 0;
   10f26:	4b6f      	ldr	r3, [pc, #444]	; (110e4 <UART_Init+0x2f4>)
   10f28:	2200      	movs	r2, #0
   10f2a:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:339

            // Set ACR to default state
            LPC_UART1->ACR = 0;
   10f2c:	4b6d      	ldr	r3, [pc, #436]	; (110e4 <UART_Init+0x2f4>)
   10f2e:	2200      	movs	r2, #0
   10f30:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:342

            // Set RS485 control to default state
            LPC_UART1->RS485CTRL = 0;
   10f32:	4b6c      	ldr	r3, [pc, #432]	; (110e4 <UART_Init+0x2f4>)
   10f34:	2200      	movs	r2, #0
   10f36:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:345

            // Set RS485 delay timer to default state
            LPC_UART1->RS485DLY = 0;
   10f3a:	4b6a      	ldr	r3, [pc, #424]	; (110e4 <UART_Init+0x2f4>)
   10f3c:	2200      	movs	r2, #0
   10f3e:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:348

            // Set RS485 addr match to default state
            LPC_UART1->ADRMATCH = 0;
   10f42:	4b68      	ldr	r3, [pc, #416]	; (110e4 <UART_Init+0x2f4>)
   10f44:	2200      	movs	r2, #0
   10f46:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:351

            // Dummy reading
            tmp = LPC_UART1->LSR;
   10f4a:	4b66      	ldr	r3, [pc, #408]	; (110e4 <UART_Init+0x2f4>)
   10f4c:	7d1b      	ldrb	r3, [r3, #20]
   10f4e:	b2db      	uxtb	r3, r3
   10f50:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:354

            // Set Modem Control to default state
            LPC_UART1->MCR = 0;
   10f52:	4b64      	ldr	r3, [pc, #400]	; (110e4 <UART_Init+0x2f4>)
   10f54:	2200      	movs	r2, #0
   10f56:	741a      	strb	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:357

            //Dummy Reading to Clear Status
            tmp = LPC_UART1->MSR;
   10f58:	4b62      	ldr	r3, [pc, #392]	; (110e4 <UART_Init+0x2f4>)
   10f5a:	7e1b      	ldrb	r3, [r3, #24]
   10f5c:	b2db      	uxtb	r3, r3
   10f5e:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:359
        }
        break;
   10f60:	e034      	b.n	10fcc <UART_Init+0x1dc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:363
        case UART_4:
        {
            /* Set up clock and power for UART module */
            CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART4, ENABLE);
   10f62:	f44f 7080 	mov.w	r0, #256	; 0x100
   10f66:	2101      	movs	r1, #1
   10f68:	f7fe fd14 	bl	f994 <CLKPWR_ConfigPPWR>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:366

            /* FIFOs are empty */
            LPC_UART4->FCR = ( UART_FCR_FIFO_EN | UART_FCR_RX_RS | UART_FCR_TX_RS);
   10f6c:	4b5e      	ldr	r3, [pc, #376]	; (110e8 <UART_Init+0x2f8>)
   10f6e:	2207      	movs	r2, #7
   10f70:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:369

            // Disable FIFO
            LPC_UART4->FCR = 0;
   10f72:	4b5d      	ldr	r3, [pc, #372]	; (110e8 <UART_Init+0x2f8>)
   10f74:	2200      	movs	r2, #0
   10f76:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:372

            // Dummy reading
            while (LPC_UART4->LSR & UART_LSR_RDR)
   10f78:	e002      	b.n	10f80 <UART_Init+0x190>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:374
            {
                tmp = LPC_UART4->RBR;
   10f7a:	4b5b      	ldr	r3, [pc, #364]	; (110e8 <UART_Init+0x2f8>)
   10f7c:	681b      	ldr	r3, [r3, #0]
   10f7e:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:372 (discriminator 1)

            // Disable FIFO
            LPC_UART4->FCR = 0;

            // Dummy reading
            while (LPC_UART4->LSR & UART_LSR_RDR)
   10f80:	4b59      	ldr	r3, [pc, #356]	; (110e8 <UART_Init+0x2f8>)
   10f82:	695b      	ldr	r3, [r3, #20]
   10f84:	f003 0301 	and.w	r3, r3, #1
   10f88:	2b00      	cmp	r3, #0
   10f8a:	d1f6      	bne.n	10f7a <UART_Init+0x18a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:380
            }

            //LPC_UART4->TER = UART4_TER_TXEN;

            // Wait for current transmit complete
            while (!(LPC_UART4->LSR & UART_LSR_THRE));
   10f8c:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:380 (discriminator 1)
   10f8e:	4b56      	ldr	r3, [pc, #344]	; (110e8 <UART_Init+0x2f8>)
   10f90:	695b      	ldr	r3, [r3, #20]
   10f92:	f003 0320 	and.w	r3, r3, #32
   10f96:	2b00      	cmp	r3, #0
   10f98:	d0f9      	beq.n	10f8e <UART_Init+0x19e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:386

            // Disable Tx
           // LPC_UART4->TER = 0;

            // Disable interrupt
            LPC_UART4->IER = 0;
   10f9a:	4b53      	ldr	r3, [pc, #332]	; (110e8 <UART_Init+0x2f8>)
   10f9c:	2200      	movs	r2, #0
   10f9e:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:389

            // Set LCR to default state
            LPC_UART4->LCR = 0;
   10fa0:	4b51      	ldr	r3, [pc, #324]	; (110e8 <UART_Init+0x2f8>)
   10fa2:	2200      	movs	r2, #0
   10fa4:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:392

            // Set ACR to default state
            LPC_UART4->ACR = 0;
   10fa6:	4b50      	ldr	r3, [pc, #320]	; (110e8 <UART_Init+0x2f8>)
   10fa8:	2200      	movs	r2, #0
   10faa:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:395

            // Set RS485 control to default state
            LPC_UART4->RS485CTRL = 0;
   10fac:	4b4e      	ldr	r3, [pc, #312]	; (110e8 <UART_Init+0x2f8>)
   10fae:	2200      	movs	r2, #0
   10fb0:	64da      	str	r2, [r3, #76]	; 0x4c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:398

            // Set RS485 delay timer to default state
            LPC_UART4->RS485DLY = 0;
   10fb2:	4b4d      	ldr	r3, [pc, #308]	; (110e8 <UART_Init+0x2f8>)
   10fb4:	2200      	movs	r2, #0
   10fb6:	655a      	str	r2, [r3, #84]	; 0x54
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:401

            // Set RS485 addr match to default state
            LPC_UART4->ADRMATCH = 0;
   10fb8:	4b4b      	ldr	r3, [pc, #300]	; (110e8 <UART_Init+0x2f8>)
   10fba:	2200      	movs	r2, #0
   10fbc:	651a      	str	r2, [r3, #80]	; 0x50
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:404

            // Dummy reading
            tmp = LPC_UART4->LSR;
   10fbe:	4b4a      	ldr	r3, [pc, #296]	; (110e8 <UART_Init+0x2f8>)
   10fc0:	695b      	ldr	r3, [r3, #20]
   10fc2:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:407

            // Set IrDA Mode to default state
            LPC_UART4->ICR = 0;
   10fc4:	4b48      	ldr	r3, [pc, #288]	; (110e8 <UART_Init+0x2f8>)
   10fc6:	2200      	movs	r2, #0
   10fc8:	625a      	str	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:409
        }
        break;
   10fca:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:414
    }

    // Set Line Control register ----------------------------

    uart_set_divisors(UartID, (UART_ConfigStruct->Baud_rate));
   10fcc:	683b      	ldr	r3, [r7, #0]
   10fce:	681b      	ldr	r3, [r3, #0]
   10fd0:	79fa      	ldrb	r2, [r7, #7]
   10fd2:	4610      	mov	r0, r2
   10fd4:	4619      	mov	r1, r3
   10fd6:	f7ff fd79 	bl	10acc <uart_set_divisors>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:416

    if (UartID == UART_1)
   10fda:	79fb      	ldrb	r3, [r7, #7]
   10fdc:	2b01      	cmp	r3, #1
   10fde:	d106      	bne.n	10fee <UART_Init+0x1fe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:418
    {
        tmp = (LPC_UART1->LCR & (UART_LCR_DLAB_EN | UART_LCR_BREAK_EN)) \
   10fe0:	4b40      	ldr	r3, [pc, #256]	; (110e4 <UART_Init+0x2f4>)
   10fe2:	7b1b      	ldrb	r3, [r3, #12]
   10fe4:	b2db      	uxtb	r3, r3
   10fe6:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   10fea:	617b      	str	r3, [r7, #20]
   10fec:	e013      	b.n	11016 <UART_Init+0x226>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:421
                                                    & UART_LCR_BITMASK;
    }
    else if (UartID == UART_4)
   10fee:	79fb      	ldrb	r3, [r7, #7]
   10ff0:	2b04      	cmp	r3, #4
   10ff2:	d105      	bne.n	11000 <UART_Init+0x210>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:423
    {
        tmp = (LPC_UART4->LCR & (UART_LCR_DLAB_EN | UART_LCR_BREAK_EN)) \
   10ff4:	4b3c      	ldr	r3, [pc, #240]	; (110e8 <UART_Init+0x2f8>)
   10ff6:	68db      	ldr	r3, [r3, #12]
   10ff8:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   10ffc:	617b      	str	r3, [r7, #20]
   10ffe:	e00a      	b.n	11016 <UART_Init+0x226>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:428
                                                    & UART_LCR_BITMASK;
    }   
    else
    {
        LPC_UART_TypeDef *UARTx = uart_get_pointer(UartID);
   11000:	79fb      	ldrb	r3, [r7, #7]
   11002:	4618      	mov	r0, r3
   11004:	f7ff fece 	bl	10da4 <uart_get_pointer>
   11008:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:429
        tmp = (UARTx->LCR & (UART_LCR_DLAB_EN | UART_LCR_BREAK_EN)) & UART_LCR_BITMASK;
   1100a:	68fb      	ldr	r3, [r7, #12]
   1100c:	7b1b      	ldrb	r3, [r3, #12]
   1100e:	b2db      	uxtb	r3, r3
   11010:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   11014:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:432
    }

    switch (UART_ConfigStruct->Databits)
   11016:	683b      	ldr	r3, [r7, #0]
   11018:	795b      	ldrb	r3, [r3, #5]
   1101a:	2b01      	cmp	r3, #1
   1101c:	d004      	beq.n	11028 <UART_Init+0x238>
   1101e:	2b02      	cmp	r3, #2
   11020:	d007      	beq.n	11032 <UART_Init+0x242>
   11022:	2b00      	cmp	r3, #0
   11024:	d00f      	beq.n	11046 <UART_Init+0x256>
   11026:	e009      	b.n	1103c <UART_Init+0x24c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:439
        case UART_DATABIT_5:
            tmp |= UART_LCR_WLEN5;
            break;

        case UART_DATABIT_6:
            tmp |= UART_LCR_WLEN6;
   11028:	697b      	ldr	r3, [r7, #20]
   1102a:	f043 0301 	orr.w	r3, r3, #1
   1102e:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:440
            break;
   11030:	e00a      	b.n	11048 <UART_Init+0x258>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:443

        case UART_DATABIT_7:
            tmp |= UART_LCR_WLEN7;
   11032:	697b      	ldr	r3, [r7, #20]
   11034:	f043 0302 	orr.w	r3, r3, #2
   11038:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:444
            break;
   1103a:	e005      	b.n	11048 <UART_Init+0x258>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:449

        case UART_DATABIT_8:

        default:
            tmp |= UART_LCR_WLEN8;
   1103c:	697b      	ldr	r3, [r7, #20]
   1103e:	f043 0303 	orr.w	r3, r3, #3
   11042:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:450
            break;
   11044:	e000      	b.n	11048 <UART_Init+0x258>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:436

    switch (UART_ConfigStruct->Databits)
    {
        case UART_DATABIT_5:
            tmp |= UART_LCR_WLEN5;
            break;
   11046:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:453
        default:
            tmp |= UART_LCR_WLEN8;
            break;
    }

    if (UART_ConfigStruct->Parity == UART_PARITY_NONE)
   11048:	683b      	ldr	r3, [r7, #0]
   1104a:	791b      	ldrb	r3, [r3, #4]
   1104c:	2b00      	cmp	r3, #0
   1104e:	d023      	beq.n	11098 <UART_Init+0x2a8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:459
    {
        // Do nothing...
    }
    else
    {
        tmp |= UART_LCR_PARITY_EN;
   11050:	697b      	ldr	r3, [r7, #20]
   11052:	f043 0308 	orr.w	r3, r3, #8
   11056:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:460
        switch (UART_ConfigStruct->Parity)
   11058:	683b      	ldr	r3, [r7, #0]
   1105a:	791b      	ldrb	r3, [r3, #4]
   1105c:	3b01      	subs	r3, #1
   1105e:	2b03      	cmp	r3, #3
   11060:	d819      	bhi.n	11096 <UART_Init+0x2a6>
   11062:	a201      	add	r2, pc, #4	; (adr r2, 11068 <UART_Init+0x278>)
   11064:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   11068:	00011097 	.word	0x00011097
   1106c:	00011079 	.word	0x00011079
   11070:	00011083 	.word	0x00011083
   11074:	0001108d 	.word	0x0001108d
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:467
            case UART_PARITY_ODD:
                tmp |= UART_LCR_PARITY_ODD;
                break;

            case UART_PARITY_EVEN:
                tmp |= UART_LCR_PARITY_EVEN;
   11078:	697b      	ldr	r3, [r7, #20]
   1107a:	f043 0310 	orr.w	r3, r3, #16
   1107e:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:468
                break;
   11080:	e00a      	b.n	11098 <UART_Init+0x2a8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:471

            case UART_PARITY_SP_1:
                tmp |= UART_LCR_PARITY_F_1;
   11082:	697b      	ldr	r3, [r7, #20]
   11084:	f043 0320 	orr.w	r3, r3, #32
   11088:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:472
                break;
   1108a:	e005      	b.n	11098 <UART_Init+0x2a8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:475

            case UART_PARITY_SP_0:
                tmp |= UART_LCR_PARITY_F_0;
   1108c:	697b      	ldr	r3, [r7, #20]
   1108e:	f043 0330 	orr.w	r3, r3, #48	; 0x30
   11092:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:476
                break;
   11094:	e000      	b.n	11098 <UART_Init+0x2a8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:479

            default:
                break;
   11096:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:483
        }
    }

    switch (UART_ConfigStruct->Stopbits)
   11098:	683b      	ldr	r3, [r7, #0]
   1109a:	799b      	ldrb	r3, [r3, #6]
   1109c:	2b01      	cmp	r3, #1
   1109e:	d000      	beq.n	110a2 <UART_Init+0x2b2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:493

        case UART_STOPBIT_1:

        default:
            // Do no thing
            break;
   110a0:	e004      	b.n	110ac <UART_Init+0x2bc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:486
    }

    switch (UART_ConfigStruct->Stopbits)
    {
        case UART_STOPBIT_2:
            tmp |= UART_LCR_STOPBIT_SEL;
   110a2:	697b      	ldr	r3, [r7, #20]
   110a4:	f043 0304 	orr.w	r3, r3, #4
   110a8:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:487
            break;
   110aa:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:498
            break;
    }


    // Write back to LCR, configure FIFO and Disable Tx
    if (UartID == UART_1)
   110ac:	79fb      	ldrb	r3, [r7, #7]
   110ae:	2b01      	cmp	r3, #1
   110b0:	d104      	bne.n	110bc <UART_Init+0x2cc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:500
    {
        LPC_UART1->LCR = (uint8_t)(tmp & UART_LCR_BITMASK);
   110b2:	4b0c      	ldr	r3, [pc, #48]	; (110e4 <UART_Init+0x2f4>)
   110b4:	697a      	ldr	r2, [r7, #20]
   110b6:	b2d2      	uxtb	r2, r2
   110b8:	731a      	strb	r2, [r3, #12]
   110ba:	e010      	b.n	110de <UART_Init+0x2ee>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:502
    }
    else if (UartID == UART_4)
   110bc:	79fb      	ldrb	r3, [r7, #7]
   110be:	2b04      	cmp	r3, #4
   110c0:	d104      	bne.n	110cc <UART_Init+0x2dc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:504
    {
        LPC_UART4->LCR = (uint8_t)(tmp & UART_LCR_BITMASK);
   110c2:	4b09      	ldr	r3, [pc, #36]	; (110e8 <UART_Init+0x2f8>)
   110c4:	697a      	ldr	r2, [r7, #20]
   110c6:	b2d2      	uxtb	r2, r2
   110c8:	60da      	str	r2, [r3, #12]
   110ca:	e008      	b.n	110de <UART_Init+0x2ee>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:508
    }   
    else
    {
        LPC_UART_TypeDef *UARTx = uart_get_pointer(UartID);
   110cc:	79fb      	ldrb	r3, [r7, #7]
   110ce:	4618      	mov	r0, r3
   110d0:	f7ff fe68 	bl	10da4 <uart_get_pointer>
   110d4:	60b8      	str	r0, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:509
        UARTx->LCR = (uint8_t)(tmp & UART_LCR_BITMASK);
   110d6:	697b      	ldr	r3, [r7, #20]
   110d8:	b2da      	uxtb	r2, r3
   110da:	68bb      	ldr	r3, [r7, #8]
   110dc:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:511
    }
}
   110de:	3718      	adds	r7, #24
   110e0:	46bd      	mov	sp, r7
   110e2:	bd80      	pop	{r7, pc}
   110e4:	40010000 	.word	0x40010000
   110e8:	400a4000 	.word	0x400a4000

000110ec <UART_DeInit>:
UART_DeInit():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:525
 *              - UART_3: UART3 peripheral
 *              - UART_4: UART4 peripheral
 * @return      None
 **********************************************************************/
void UART_DeInit(UART_ID_Type UartID)
{
   110ec:	b580      	push	{r7, lr}
   110ee:	b082      	sub	sp, #8
   110f0:	af00      	add	r7, sp, #0
   110f2:	4603      	mov	r3, r0
   110f4:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:526
    UART_TxCmd(UartID, DISABLE);
   110f6:	79fb      	ldrb	r3, [r7, #7]
   110f8:	4618      	mov	r0, r3
   110fa:	2100      	movs	r1, #0
   110fc:	f000 fcfa 	bl	11af4 <UART_TxCmd>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:527
    if (UartID == UART_0)
   11100:	79fb      	ldrb	r3, [r7, #7]
   11102:	2b00      	cmp	r3, #0
   11104:	d104      	bne.n	11110 <UART_DeInit+0x24>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:530
    {
        /* Set up clock and power for UART module */
        CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART0, DISABLE);
   11106:	2008      	movs	r0, #8
   11108:	2100      	movs	r1, #0
   1110a:	f7fe fc43 	bl	f994 <CLKPWR_ConfigPPWR>
   1110e:	e021      	b.n	11154 <UART_DeInit+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:533
    }

    else if (UartID == UART_1)
   11110:	79fb      	ldrb	r3, [r7, #7]
   11112:	2b01      	cmp	r3, #1
   11114:	d104      	bne.n	11120 <UART_DeInit+0x34>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:536
    {
        /* Set up clock and power for UART module */
        CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART1, DISABLE);
   11116:	2010      	movs	r0, #16
   11118:	2100      	movs	r1, #0
   1111a:	f7fe fc3b 	bl	f994 <CLKPWR_ConfigPPWR>
   1111e:	e019      	b.n	11154 <UART_DeInit+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:539
    }

    else if (UartID == UART_2)
   11120:	79fb      	ldrb	r3, [r7, #7]
   11122:	2b02      	cmp	r3, #2
   11124:	d105      	bne.n	11132 <UART_DeInit+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:542
    {
        /* Set up clock and power for UART module */
        CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART2, DISABLE);
   11126:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   1112a:	2100      	movs	r1, #0
   1112c:	f7fe fc32 	bl	f994 <CLKPWR_ConfigPPWR>
   11130:	e010      	b.n	11154 <UART_DeInit+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:545
    }

    else if (UartID == UART_3)
   11132:	79fb      	ldrb	r3, [r7, #7]
   11134:	2b03      	cmp	r3, #3
   11136:	d105      	bne.n	11144 <UART_DeInit+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:548
    {
        /* Set up clock and power for UART module */
        CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART3, DISABLE);
   11138:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
   1113c:	2100      	movs	r1, #0
   1113e:	f7fe fc29 	bl	f994 <CLKPWR_ConfigPPWR>
   11142:	e007      	b.n	11154 <UART_DeInit+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:550
    }
    else if (UartID == UART_4)
   11144:	79fb      	ldrb	r3, [r7, #7]
   11146:	2b04      	cmp	r3, #4
   11148:	d104      	bne.n	11154 <UART_DeInit+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:553
    {
        /* Set up clock and power for UART module */
        CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART4, DISABLE);
   1114a:	f44f 7080 	mov.w	r0, #256	; 0x100
   1114e:	2100      	movs	r1, #0
   11150:	f7fe fc20 	bl	f994 <CLKPWR_ConfigPPWR>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:555
    }
}
   11154:	3708      	adds	r7, #8
   11156:	46bd      	mov	sp, r7
   11158:	bd80      	pop	{r7, pc}
   1115a:	bf00      	nop

0001115c <UART_ConfigStructInit>:
UART_ConfigStructInit():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:568
* @param[in]    UART_InitStruct Pointer to a UART_CFG_Type structure
*                    which will be initialized.
* @return       None
*******************************************************************************/
void UART_ConfigStructInit(UART_CFG_Type *UART_InitStruct)
{
   1115c:	b480      	push	{r7}
   1115e:	b083      	sub	sp, #12
   11160:	af00      	add	r7, sp, #0
   11162:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:569
    UART_InitStruct->Baud_rate = 115200;
   11164:	687b      	ldr	r3, [r7, #4]
   11166:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
   1116a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:571

    UART_InitStruct->Databits = UART_DATABIT_8;
   1116c:	687b      	ldr	r3, [r7, #4]
   1116e:	2203      	movs	r2, #3
   11170:	715a      	strb	r2, [r3, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:573

    UART_InitStruct->Parity = UART_PARITY_NONE;
   11172:	687b      	ldr	r3, [r7, #4]
   11174:	2200      	movs	r2, #0
   11176:	711a      	strb	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:575

    UART_InitStruct->Stopbits = UART_STOPBIT_1;
   11178:	687b      	ldr	r3, [r7, #4]
   1117a:	2200      	movs	r2, #0
   1117c:	719a      	strb	r2, [r3, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:576
}
   1117e:	370c      	adds	r7, #12
   11180:	46bd      	mov	sp, r7
   11182:	f85d 7b04 	ldr.w	r7, [sp], #4
   11186:	4770      	bx	lr

00011188 <UART_SendByte>:
UART_SendByte():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:591
 *              - UART_4: UART4 peripheral
 * @param[in]   Data    Data to transmit (must be 8-bit long)
 * @return      None
 **********************************************************************/
void UART_SendByte(UART_ID_Type UartID, uint8_t Data)
{
   11188:	b480      	push	{r7}
   1118a:	b083      	sub	sp, #12
   1118c:	af00      	add	r7, sp, #0
   1118e:	4602      	mov	r2, r0
   11190:	460b      	mov	r3, r1
   11192:	71fa      	strb	r2, [r7, #7]
   11194:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:592
    switch (UartID)
   11196:	79fb      	ldrb	r3, [r7, #7]
   11198:	2b04      	cmp	r3, #4
   1119a:	d821      	bhi.n	111e0 <UART_SendByte+0x58>
   1119c:	a201      	add	r2, pc, #4	; (adr r2, 111a4 <UART_SendByte+0x1c>)
   1119e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   111a2:	bf00      	nop
   111a4:	000111b9 	.word	0x000111b9
   111a8:	000111c1 	.word	0x000111c1
   111ac:	000111c9 	.word	0x000111c9
   111b0:	000111d1 	.word	0x000111d1
   111b4:	000111d9 	.word	0x000111d9
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:595
    {
        case UART_0:
            LPC_UART0->THR = Data & UART_THR_MASKBIT;
   111b8:	4b0c      	ldr	r3, [pc, #48]	; (111ec <UART_SendByte+0x64>)
   111ba:	79ba      	ldrb	r2, [r7, #6]
   111bc:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:596
            break;
   111be:	e00f      	b.n	111e0 <UART_SendByte+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:598
        case UART_1:
            LPC_UART1->THR = Data & UART_THR_MASKBIT;
   111c0:	4b0b      	ldr	r3, [pc, #44]	; (111f0 <UART_SendByte+0x68>)
   111c2:	79ba      	ldrb	r2, [r7, #6]
   111c4:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:599
            break;  
   111c6:	e00b      	b.n	111e0 <UART_SendByte+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:601
        case UART_2:
            LPC_UART2->THR = Data & UART_THR_MASKBIT;
   111c8:	4b0a      	ldr	r3, [pc, #40]	; (111f4 <UART_SendByte+0x6c>)
   111ca:	79ba      	ldrb	r2, [r7, #6]
   111cc:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:602
            break;
   111ce:	e007      	b.n	111e0 <UART_SendByte+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:604
        case UART_3:
            LPC_UART3->THR = Data & UART_THR_MASKBIT;
   111d0:	4b09      	ldr	r3, [pc, #36]	; (111f8 <UART_SendByte+0x70>)
   111d2:	79ba      	ldrb	r2, [r7, #6]
   111d4:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:605
            break;
   111d6:	e003      	b.n	111e0 <UART_SendByte+0x58>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:607
        case UART_4:
            LPC_UART4->THR = Data & UART_THR_MASKBIT;
   111d8:	4b08      	ldr	r3, [pc, #32]	; (111fc <UART_SendByte+0x74>)
   111da:	79ba      	ldrb	r2, [r7, #6]
   111dc:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:608
            break;
   111de:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:611
    }

}
   111e0:	370c      	adds	r7, #12
   111e2:	46bd      	mov	sp, r7
   111e4:	f85d 7b04 	ldr.w	r7, [sp], #4
   111e8:	4770      	bx	lr
   111ea:	bf00      	nop
   111ec:	4000c000 	.word	0x4000c000
   111f0:	40010000 	.word	0x40010000
   111f4:	40098000 	.word	0x40098000
   111f8:	4009c000 	.word	0x4009c000
   111fc:	400a4000 	.word	0x400a4000

00011200 <UART_ReceiveByte>:
UART_ReceiveByte():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:625
 *              - UART_3: UART3 peripheral
 *              - UART_4: UART4 peripheral
 * @return      Data received
 **********************************************************************/
uint8_t UART_ReceiveByte(UART_ID_Type UartID)
{
   11200:	b480      	push	{r7}
   11202:	b083      	sub	sp, #12
   11204:	af00      	add	r7, sp, #0
   11206:	4603      	mov	r3, r0
   11208:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:626
    switch (UartID)
   1120a:	79fb      	ldrb	r3, [r7, #7]
   1120c:	2b04      	cmp	r3, #4
   1120e:	d821      	bhi.n	11254 <UART_ReceiveByte+0x54>
   11210:	a201      	add	r2, pc, #4	; (adr r2, 11218 <UART_ReceiveByte+0x18>)
   11212:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   11216:	bf00      	nop
   11218:	0001122d 	.word	0x0001122d
   1121c:	00011235 	.word	0x00011235
   11220:	0001123d 	.word	0x0001123d
   11224:	00011245 	.word	0x00011245
   11228:	0001124d 	.word	0x0001124d
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:629
    {
        case UART_0:
            return (LPC_UART0->RBR & UART_RBR_MASKBIT);
   1122c:	4b0d      	ldr	r3, [pc, #52]	; (11264 <UART_ReceiveByte+0x64>)
   1122e:	781b      	ldrb	r3, [r3, #0]
   11230:	b2db      	uxtb	r3, r3
   11232:	e010      	b.n	11256 <UART_ReceiveByte+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:631
        case UART_1:
            return (LPC_UART1->RBR & UART_RBR_MASKBIT); 
   11234:	4b0c      	ldr	r3, [pc, #48]	; (11268 <UART_ReceiveByte+0x68>)
   11236:	781b      	ldrb	r3, [r3, #0]
   11238:	b2db      	uxtb	r3, r3
   1123a:	e00c      	b.n	11256 <UART_ReceiveByte+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:633
        case UART_2:
            return (LPC_UART2->RBR & UART_RBR_MASKBIT);
   1123c:	4b0b      	ldr	r3, [pc, #44]	; (1126c <UART_ReceiveByte+0x6c>)
   1123e:	781b      	ldrb	r3, [r3, #0]
   11240:	b2db      	uxtb	r3, r3
   11242:	e008      	b.n	11256 <UART_ReceiveByte+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:635
        case UART_3:
            return (LPC_UART3->RBR & UART_RBR_MASKBIT);
   11244:	4b0a      	ldr	r3, [pc, #40]	; (11270 <UART_ReceiveByte+0x70>)
   11246:	781b      	ldrb	r3, [r3, #0]
   11248:	b2db      	uxtb	r3, r3
   1124a:	e004      	b.n	11256 <UART_ReceiveByte+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:637
        case UART_4:
            return (LPC_UART4->RBR & UART_RBR_MASKBIT);
   1124c:	4b09      	ldr	r3, [pc, #36]	; (11274 <UART_ReceiveByte+0x74>)
   1124e:	681b      	ldr	r3, [r3, #0]
   11250:	b2db      	uxtb	r3, r3
   11252:	e000      	b.n	11256 <UART_ReceiveByte+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:639
    }
    return 0x00;
   11254:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:640
}
   11256:	4618      	mov	r0, r3
   11258:	370c      	adds	r7, #12
   1125a:	46bd      	mov	sp, r7
   1125c:	f85d 7b04 	ldr.w	r7, [sp], #4
   11260:	4770      	bx	lr
   11262:	bf00      	nop
   11264:	4000c000 	.word	0x4000c000
   11268:	40010000 	.word	0x40010000
   1126c:	40098000 	.word	0x40098000
   11270:	4009c000 	.word	0x4009c000
   11274:	400a4000 	.word	0x400a4000

00011278 <UART_Send>:
UART_Send():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:661
 * Note: when using UART in BLOCKING mode, a time-out condition is used
 * via defined symbol UART_BLOCKING_TIMEOUT.
 **********************************************************************/
uint32_t UART_Send(UART_ID_Type UartID, uint8_t *txbuf,
                            uint32_t buflen, TRANSFER_BLOCK_Type flag)
{
   11278:	b580      	push	{r7, lr}
   1127a:	b08a      	sub	sp, #40	; 0x28
   1127c:	af00      	add	r7, sp, #0
   1127e:	60b9      	str	r1, [r7, #8]
   11280:	607a      	str	r2, [r7, #4]
   11282:	4602      	mov	r2, r0
   11284:	73fa      	strb	r2, [r7, #15]
   11286:	73bb      	strb	r3, [r7, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:663
    uint32_t bToSend, bSent, timeOut, fifo_cnt;
    uint8_t *pChar = txbuf;
   11288:	68bb      	ldr	r3, [r7, #8]
   1128a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:664
    __IO uint32_t *LSR = NULL;
   1128c:	2300      	movs	r3, #0
   1128e:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:666

    switch (UartID)
   11290:	7bfb      	ldrb	r3, [r7, #15]
   11292:	2b04      	cmp	r3, #4
   11294:	d81b      	bhi.n	112ce <UART_Send+0x56>
   11296:	a201      	add	r2, pc, #4	; (adr r2, 1129c <UART_Send+0x24>)
   11298:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1129c:	000112b1 	.word	0x000112b1
   112a0:	000112b7 	.word	0x000112b7
   112a4:	000112bd 	.word	0x000112bd
   112a8:	000112c3 	.word	0x000112c3
   112ac:	000112c9 	.word	0x000112c9
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:669
    {
        case UART_0:
            LSR = (__IO uint32_t *)&LPC_UART0->LSR;
   112b0:	4b3e      	ldr	r3, [pc, #248]	; (113ac <UART_Send+0x134>)
   112b2:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:670
            break;
   112b4:	e00b      	b.n	112ce <UART_Send+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:672
        case UART_1:
            LSR = (__IO uint32_t *)&LPC_UART1->LSR;
   112b6:	4b3e      	ldr	r3, [pc, #248]	; (113b0 <UART_Send+0x138>)
   112b8:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:673
            break;
   112ba:	e008      	b.n	112ce <UART_Send+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:675
        case UART_2:
            LSR = (__IO uint32_t *)&LPC_UART2->LSR;
   112bc:	4b3d      	ldr	r3, [pc, #244]	; (113b4 <UART_Send+0x13c>)
   112be:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:676
            break;
   112c0:	e005      	b.n	112ce <UART_Send+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:678
        case UART_3:
            LSR = (__IO uint32_t *)&LPC_UART3->LSR;
   112c2:	4b3d      	ldr	r3, [pc, #244]	; (113b8 <UART_Send+0x140>)
   112c4:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:679
            break;
   112c6:	e002      	b.n	112ce <UART_Send+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:681
        case UART_4:
            LSR = (__IO uint32_t *)&LPC_UART4->LSR;
   112c8:	4b3c      	ldr	r3, [pc, #240]	; (113bc <UART_Send+0x144>)
   112ca:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:682
            break;
   112cc:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:685
    }

    bToSend = buflen;
   112ce:	687b      	ldr	r3, [r7, #4]
   112d0:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:688

    // blocking mode
    if (flag == BLOCKING)
   112d2:	7bbb      	ldrb	r3, [r7, #14]
   112d4:	2b01      	cmp	r3, #1
   112d6:	d137      	bne.n	11348 <UART_Send+0xd0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:690
    {
        bSent = 0;
   112d8:	2300      	movs	r3, #0
   112da:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:691
        while (bToSend)
   112dc:	e030      	b.n	11340 <UART_Send+0xc8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:693
        {
            timeOut = UART_BLOCKING_TIMEOUT;
   112de:	f04f 33ff 	mov.w	r3, #4294967295
   112e2:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:696

            // Wait for THR empty with timeout
            while (!(*LSR & UART_LSR_THRE))
   112e4:	e006      	b.n	112f4 <UART_Send+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:698
            {
                if (timeOut == 0)
   112e6:	69fb      	ldr	r3, [r7, #28]
   112e8:	2b00      	cmp	r3, #0
   112ea:	d100      	bne.n	112ee <UART_Send+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:699
                    break;
   112ec:	e008      	b.n	11300 <UART_Send+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:701

                timeOut--;
   112ee:	69fb      	ldr	r3, [r7, #28]
   112f0:	3b01      	subs	r3, #1
   112f2:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:696 (discriminator 1)
        while (bToSend)
        {
            timeOut = UART_BLOCKING_TIMEOUT;

            // Wait for THR empty with timeout
            while (!(*LSR & UART_LSR_THRE))
   112f4:	693b      	ldr	r3, [r7, #16]
   112f6:	681b      	ldr	r3, [r3, #0]
   112f8:	f003 0320 	and.w	r3, r3, #32
   112fc:	2b00      	cmp	r3, #0
   112fe:	d0f2      	beq.n	112e6 <UART_Send+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:705

                timeOut--;
            }

            // Time out!
            if(timeOut == 0)
   11300:	69fb      	ldr	r3, [r7, #28]
   11302:	2b00      	cmp	r3, #0
   11304:	d101      	bne.n	1130a <UART_Send+0x92>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:706
                break;
   11306:	bf00      	nop
   11308:	e04a      	b.n	113a0 <UART_Send+0x128>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:708

            fifo_cnt = UART_TX_FIFO_SIZE;
   1130a:	2310      	movs	r3, #16
   1130c:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:710

            while (fifo_cnt && bToSend)
   1130e:	e011      	b.n	11334 <UART_Send+0xbc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:712
            {
                UART_SendByte(UartID, (*pChar++));
   11310:	697b      	ldr	r3, [r7, #20]
   11312:	1c5a      	adds	r2, r3, #1
   11314:	617a      	str	r2, [r7, #20]
   11316:	781b      	ldrb	r3, [r3, #0]
   11318:	7bfa      	ldrb	r2, [r7, #15]
   1131a:	4610      	mov	r0, r2
   1131c:	4619      	mov	r1, r3
   1131e:	f7ff ff33 	bl	11188 <UART_SendByte>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:714

                fifo_cnt--;
   11322:	69bb      	ldr	r3, [r7, #24]
   11324:	3b01      	subs	r3, #1
   11326:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:716

                bToSend--;
   11328:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1132a:	3b01      	subs	r3, #1
   1132c:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:718

                bSent++;
   1132e:	6a3b      	ldr	r3, [r7, #32]
   11330:	3301      	adds	r3, #1
   11332:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:710 (discriminator 1)
            if(timeOut == 0)
                break;

            fifo_cnt = UART_TX_FIFO_SIZE;

            while (fifo_cnt && bToSend)
   11334:	69bb      	ldr	r3, [r7, #24]
   11336:	2b00      	cmp	r3, #0
   11338:	d002      	beq.n	11340 <UART_Send+0xc8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:710 (discriminator 2)
   1133a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1133c:	2b00      	cmp	r3, #0
   1133e:	d1e7      	bne.n	11310 <UART_Send+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:691 (discriminator 1)

    // blocking mode
    if (flag == BLOCKING)
    {
        bSent = 0;
        while (bToSend)
   11340:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11342:	2b00      	cmp	r3, #0
   11344:	d1cb      	bne.n	112de <UART_Send+0x66>
   11346:	e02b      	b.n	113a0 <UART_Send+0x128>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:726
    }

    // None blocking mode
    else
    {
        bSent = 0;
   11348:	2300      	movs	r3, #0
   1134a:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:727
        while (bToSend)
   1134c:	e025      	b.n	1139a <UART_Send+0x122>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:729
        {
            if (bToSend == 0)
   1134e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11350:	2b00      	cmp	r3, #0
   11352:	d100      	bne.n	11356 <UART_Send+0xde>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:730
                break;
   11354:	e024      	b.n	113a0 <UART_Send+0x128>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:732

            if (!(*LSR & UART_LSR_THRE))
   11356:	693b      	ldr	r3, [r7, #16]
   11358:	681b      	ldr	r3, [r3, #0]
   1135a:	f003 0320 	and.w	r3, r3, #32
   1135e:	2b00      	cmp	r3, #0
   11360:	d100      	bne.n	11364 <UART_Send+0xec>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:734
            {
                break;
   11362:	e01d      	b.n	113a0 <UART_Send+0x128>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:737
            }

            fifo_cnt = UART_TX_FIFO_SIZE;
   11364:	2310      	movs	r3, #16
   11366:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:739

            while (fifo_cnt && bToSend)
   11368:	e011      	b.n	1138e <UART_Send+0x116>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:741
            {
                UART_SendByte(UartID, (*pChar++));
   1136a:	697b      	ldr	r3, [r7, #20]
   1136c:	1c5a      	adds	r2, r3, #1
   1136e:	617a      	str	r2, [r7, #20]
   11370:	781b      	ldrb	r3, [r3, #0]
   11372:	7bfa      	ldrb	r2, [r7, #15]
   11374:	4610      	mov	r0, r2
   11376:	4619      	mov	r1, r3
   11378:	f7ff ff06 	bl	11188 <UART_SendByte>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:743

                bToSend--;
   1137c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1137e:	3b01      	subs	r3, #1
   11380:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:745

                fifo_cnt--;
   11382:	69bb      	ldr	r3, [r7, #24]
   11384:	3b01      	subs	r3, #1
   11386:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:747

                bSent++;
   11388:	6a3b      	ldr	r3, [r7, #32]
   1138a:	3301      	adds	r3, #1
   1138c:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:739 (discriminator 1)
                break;
            }

            fifo_cnt = UART_TX_FIFO_SIZE;

            while (fifo_cnt && bToSend)
   1138e:	69bb      	ldr	r3, [r7, #24]
   11390:	2b00      	cmp	r3, #0
   11392:	d002      	beq.n	1139a <UART_Send+0x122>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:739 (discriminator 2)
   11394:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11396:	2b00      	cmp	r3, #0
   11398:	d1e7      	bne.n	1136a <UART_Send+0xf2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:727 (discriminator 1)

    // None blocking mode
    else
    {
        bSent = 0;
        while (bToSend)
   1139a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   1139c:	2b00      	cmp	r3, #0
   1139e:	d1d6      	bne.n	1134e <UART_Send+0xd6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:752
                bSent++;
            }
        }
    }

    return bSent;
   113a0:	6a3b      	ldr	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:753
}
   113a2:	4618      	mov	r0, r3
   113a4:	3728      	adds	r7, #40	; 0x28
   113a6:	46bd      	mov	sp, r7
   113a8:	bd80      	pop	{r7, pc}
   113aa:	bf00      	nop
   113ac:	4000c014 	.word	0x4000c014
   113b0:	40010014 	.word	0x40010014
   113b4:	40098014 	.word	0x40098014
   113b8:	4009c014 	.word	0x4009c014
   113bc:	400a4014 	.word	0x400a4014

000113c0 <UART_Receive>:
UART_Receive():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:775
 * Note: when using UART in BLOCKING mode, a time-out condition is used
 * via defined symbol UART_BLOCKING_TIMEOUT.
 **********************************************************************/
uint32_t UART_Receive(UART_ID_Type UartID, uint8_t *rxbuf,
                                uint32_t buflen, TRANSFER_BLOCK_Type flag)
{
   113c0:	b590      	push	{r4, r7, lr}
   113c2:	b08b      	sub	sp, #44	; 0x2c
   113c4:	af00      	add	r7, sp, #0
   113c6:	60b9      	str	r1, [r7, #8]
   113c8:	607a      	str	r2, [r7, #4]
   113ca:	4602      	mov	r2, r0
   113cc:	73fa      	strb	r2, [r7, #15]
   113ce:	73bb      	strb	r3, [r7, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:777
    uint32_t bToRecv, bRecv, timeOut;
    uint8_t *pChar = rxbuf;
   113d0:	68bb      	ldr	r3, [r7, #8]
   113d2:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:778
    __IO uint32_t *LSR = NULL;
   113d4:	2300      	movs	r3, #0
   113d6:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:780

    switch (UartID)
   113d8:	7bfb      	ldrb	r3, [r7, #15]
   113da:	2b04      	cmp	r3, #4
   113dc:	d81b      	bhi.n	11416 <UART_Receive+0x56>
   113de:	a201      	add	r2, pc, #4	; (adr r2, 113e4 <UART_Receive+0x24>)
   113e0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   113e4:	000113f9 	.word	0x000113f9
   113e8:	000113ff 	.word	0x000113ff
   113ec:	00011405 	.word	0x00011405
   113f0:	0001140b 	.word	0x0001140b
   113f4:	00011411 	.word	0x00011411
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:783
    {
        case UART_0:
            LSR = (__IO uint32_t *)&LPC_UART0->LSR;
   113f8:	4b30      	ldr	r3, [pc, #192]	; (114bc <UART_Receive+0xfc>)
   113fa:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:784
            break;
   113fc:	e00b      	b.n	11416 <UART_Receive+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:786
        case UART_1:
            LSR = (__IO uint32_t *)&LPC_UART1->LSR;
   113fe:	4b30      	ldr	r3, [pc, #192]	; (114c0 <UART_Receive+0x100>)
   11400:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:787
            break;
   11402:	e008      	b.n	11416 <UART_Receive+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:789
        case UART_2:
            LSR = (__IO uint32_t *)&LPC_UART2->LSR;
   11404:	4b2f      	ldr	r3, [pc, #188]	; (114c4 <UART_Receive+0x104>)
   11406:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:790
            break;
   11408:	e005      	b.n	11416 <UART_Receive+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:792
        case UART_3:
            LSR = (__IO uint32_t *)&LPC_UART3->LSR;
   1140a:	4b2f      	ldr	r3, [pc, #188]	; (114c8 <UART_Receive+0x108>)
   1140c:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:793
            break;
   1140e:	e002      	b.n	11416 <UART_Receive+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:795
        case UART_4:
            LSR = (__IO uint32_t *)&LPC_UART4->LSR;
   11410:	4b2e      	ldr	r3, [pc, #184]	; (114cc <UART_Receive+0x10c>)
   11412:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:796
            break;
   11414:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:799
    }
    
    bToRecv = buflen;
   11416:	687b      	ldr	r3, [r7, #4]
   11418:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:802

    // Blocking mode
    if (flag == BLOCKING)
   1141a:	7bbb      	ldrb	r3, [r7, #14]
   1141c:	2b01      	cmp	r3, #1
   1141e:	d12b      	bne.n	11478 <UART_Receive+0xb8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:804
    {
        bRecv = 0;
   11420:	2300      	movs	r3, #0
   11422:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:805
        while (bToRecv)
   11424:	e024      	b.n	11470 <UART_Receive+0xb0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:807
        {
            timeOut = UART_BLOCKING_TIMEOUT;
   11426:	f04f 33ff 	mov.w	r3, #4294967295
   1142a:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:808
            while (!(*LSR & UART_LSR_RDR))
   1142c:	e006      	b.n	1143c <UART_Receive+0x7c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:810
            {
                if (timeOut == 0)
   1142e:	69fb      	ldr	r3, [r7, #28]
   11430:	2b00      	cmp	r3, #0
   11432:	d100      	bne.n	11436 <UART_Receive+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:811
                    break;
   11434:	e008      	b.n	11448 <UART_Receive+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:813

                timeOut--;
   11436:	69fb      	ldr	r3, [r7, #28]
   11438:	3b01      	subs	r3, #1
   1143a:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:808 (discriminator 1)
    {
        bRecv = 0;
        while (bToRecv)
        {
            timeOut = UART_BLOCKING_TIMEOUT;
            while (!(*LSR & UART_LSR_RDR))
   1143c:	697b      	ldr	r3, [r7, #20]
   1143e:	681b      	ldr	r3, [r3, #0]
   11440:	f003 0301 	and.w	r3, r3, #1
   11444:	2b00      	cmp	r3, #0
   11446:	d0f2      	beq.n	1142e <UART_Receive+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:817

                timeOut--;
            }

            // Time out!
            if(timeOut == 0)
   11448:	69fb      	ldr	r3, [r7, #28]
   1144a:	2b00      	cmp	r3, #0
   1144c:	d101      	bne.n	11452 <UART_Receive+0x92>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:818
                break;
   1144e:	bf00      	nop
   11450:	e02e      	b.n	114b0 <UART_Receive+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:821

            // Get data from the buffer
            (*pChar++) = UART_ReceiveByte(UartID);
   11452:	69bc      	ldr	r4, [r7, #24]
   11454:	1c63      	adds	r3, r4, #1
   11456:	61bb      	str	r3, [r7, #24]
   11458:	7bfb      	ldrb	r3, [r7, #15]
   1145a:	4618      	mov	r0, r3
   1145c:	f7ff fed0 	bl	11200 <UART_ReceiveByte>
   11460:	4603      	mov	r3, r0
   11462:	7023      	strb	r3, [r4, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:823

            bToRecv--;
   11464:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11466:	3b01      	subs	r3, #1
   11468:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:825

            bRecv++;
   1146a:	6a3b      	ldr	r3, [r7, #32]
   1146c:	3301      	adds	r3, #1
   1146e:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:805 (discriminator 1)

    // Blocking mode
    if (flag == BLOCKING)
    {
        bRecv = 0;
        while (bToRecv)
   11470:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   11472:	2b00      	cmp	r3, #0
   11474:	d1d7      	bne.n	11426 <UART_Receive+0x66>
   11476:	e01b      	b.n	114b0 <UART_Receive+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:831
        }
    }
    // None blocking mode
    else
    {
        bRecv = 0;
   11478:	2300      	movs	r3, #0
   1147a:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:832
        while (bToRecv)
   1147c:	e015      	b.n	114aa <UART_Receive+0xea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:834
        {
            if (!(*LSR & UART_LSR_RDR))
   1147e:	697b      	ldr	r3, [r7, #20]
   11480:	681b      	ldr	r3, [r3, #0]
   11482:	f003 0301 	and.w	r3, r3, #1
   11486:	2b00      	cmp	r3, #0
   11488:	d100      	bne.n	1148c <UART_Receive+0xcc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:836
            {
                break;
   1148a:	e011      	b.n	114b0 <UART_Receive+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:840
            }
            else
            {
                (*pChar++) = UART_ReceiveByte(UartID);
   1148c:	69bc      	ldr	r4, [r7, #24]
   1148e:	1c63      	adds	r3, r4, #1
   11490:	61bb      	str	r3, [r7, #24]
   11492:	7bfb      	ldrb	r3, [r7, #15]
   11494:	4618      	mov	r0, r3
   11496:	f7ff feb3 	bl	11200 <UART_ReceiveByte>
   1149a:	4603      	mov	r3, r0
   1149c:	7023      	strb	r3, [r4, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:842

                bRecv++;
   1149e:	6a3b      	ldr	r3, [r7, #32]
   114a0:	3301      	adds	r3, #1
   114a2:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:844

                bToRecv--;
   114a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   114a6:	3b01      	subs	r3, #1
   114a8:	627b      	str	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:832 (discriminator 1)
    }
    // None blocking mode
    else
    {
        bRecv = 0;
        while (bToRecv)
   114aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   114ac:	2b00      	cmp	r3, #0
   114ae:	d1e6      	bne.n	1147e <UART_Receive+0xbe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:849
                bToRecv--;
            }
        }
    }

    return bRecv;
   114b0:	6a3b      	ldr	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:850
}
   114b2:	4618      	mov	r0, r3
   114b4:	372c      	adds	r7, #44	; 0x2c
   114b6:	46bd      	mov	sp, r7
   114b8:	bd90      	pop	{r4, r7, pc}
   114ba:	bf00      	nop
   114bc:	4000c014 	.word	0x4000c014
   114c0:	40010014 	.word	0x40010014
   114c4:	40098014 	.word	0x40098014
   114c8:	4009c014 	.word	0x4009c014
   114cc:	400a4014 	.word	0x400a4014

000114d0 <UART_ForceBreak>:
UART_ForceBreak():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:864
 *              - UART_3: UART3 peripheral
 *              - UART_4: UART4 peripheral
 * @return      None
 **********************************************************************/
void UART_ForceBreak(UART_ID_Type UartID)
{
   114d0:	b480      	push	{r7}
   114d2:	b083      	sub	sp, #12
   114d4:	af00      	add	r7, sp, #0
   114d6:	4603      	mov	r3, r0
   114d8:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:865
    switch (UartID)
   114da:	79fb      	ldrb	r3, [r7, #7]
   114dc:	2b04      	cmp	r3, #4
   114de:	d838      	bhi.n	11552 <UART_ForceBreak+0x82>
   114e0:	a201      	add	r2, pc, #4	; (adr r2, 114e8 <UART_ForceBreak+0x18>)
   114e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   114e6:	bf00      	nop
   114e8:	000114fd 	.word	0x000114fd
   114ec:	0001150f 	.word	0x0001150f
   114f0:	00011521 	.word	0x00011521
   114f4:	00011533 	.word	0x00011533
   114f8:	00011545 	.word	0x00011545
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:868
    {
        case UART_0:
            LPC_UART0->LCR |= UART_LCR_BREAK_EN;
   114fc:	4b17      	ldr	r3, [pc, #92]	; (1155c <UART_ForceBreak+0x8c>)
   114fe:	4a17      	ldr	r2, [pc, #92]	; (1155c <UART_ForceBreak+0x8c>)
   11500:	7b12      	ldrb	r2, [r2, #12]
   11502:	b2d2      	uxtb	r2, r2
   11504:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   11508:	b2d2      	uxtb	r2, r2
   1150a:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:869
            break;
   1150c:	e021      	b.n	11552 <UART_ForceBreak+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:871
        case UART_1:
            LPC_UART1->LCR |= UART_LCR_BREAK_EN;
   1150e:	4b14      	ldr	r3, [pc, #80]	; (11560 <UART_ForceBreak+0x90>)
   11510:	4a13      	ldr	r2, [pc, #76]	; (11560 <UART_ForceBreak+0x90>)
   11512:	7b12      	ldrb	r2, [r2, #12]
   11514:	b2d2      	uxtb	r2, r2
   11516:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1151a:	b2d2      	uxtb	r2, r2
   1151c:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:872
            break;
   1151e:	e018      	b.n	11552 <UART_ForceBreak+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:874
        case UART_2:
            LPC_UART2->LCR |= UART_LCR_BREAK_EN;
   11520:	4b10      	ldr	r3, [pc, #64]	; (11564 <UART_ForceBreak+0x94>)
   11522:	4a10      	ldr	r2, [pc, #64]	; (11564 <UART_ForceBreak+0x94>)
   11524:	7b12      	ldrb	r2, [r2, #12]
   11526:	b2d2      	uxtb	r2, r2
   11528:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1152c:	b2d2      	uxtb	r2, r2
   1152e:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:875
            break;
   11530:	e00f      	b.n	11552 <UART_ForceBreak+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:877
        case UART_3:
            LPC_UART3->LCR |= UART_LCR_BREAK_EN;
   11532:	4b0d      	ldr	r3, [pc, #52]	; (11568 <UART_ForceBreak+0x98>)
   11534:	4a0c      	ldr	r2, [pc, #48]	; (11568 <UART_ForceBreak+0x98>)
   11536:	7b12      	ldrb	r2, [r2, #12]
   11538:	b2d2      	uxtb	r2, r2
   1153a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1153e:	b2d2      	uxtb	r2, r2
   11540:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:878
            break;
   11542:	e006      	b.n	11552 <UART_ForceBreak+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:880
        case UART_4:
            LPC_UART4->LCR |= UART_LCR_BREAK_EN;
   11544:	4b09      	ldr	r3, [pc, #36]	; (1156c <UART_ForceBreak+0x9c>)
   11546:	4a09      	ldr	r2, [pc, #36]	; (1156c <UART_ForceBreak+0x9c>)
   11548:	68d2      	ldr	r2, [r2, #12]
   1154a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1154e:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:881
            break;
   11550:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:883
    }
}
   11552:	370c      	adds	r7, #12
   11554:	46bd      	mov	sp, r7
   11556:	f85d 7b04 	ldr.w	r7, [sp], #4
   1155a:	4770      	bx	lr
   1155c:	4000c000 	.word	0x4000c000
   11560:	40010000 	.word	0x40010000
   11564:	40098000 	.word	0x40098000
   11568:	4009c000 	.word	0x4009c000
   1156c:	400a4000 	.word	0x400a4000

00011570 <UART_IntConfig>:
UART_IntConfig():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:910
 *              - ENALBE: Enable this UART interrupt type.
*               - DISALBE: Disable this UART interrupt type.
 * @return      None
 *********************************************************************/
void UART_IntConfig(UART_ID_Type UartID, UART_INT_Type UARTIntCfg, FunctionalState NewState)
{
   11570:	b480      	push	{r7}
   11572:	b087      	sub	sp, #28
   11574:	af00      	add	r7, sp, #0
   11576:	4613      	mov	r3, r2
   11578:	4602      	mov	r2, r0
   1157a:	71fa      	strb	r2, [r7, #7]
   1157c:	460a      	mov	r2, r1
   1157e:	71ba      	strb	r2, [r7, #6]
   11580:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:912
    uint32_t tmp;
    __IO uint32_t *IER = NULL;
   11582:	2300      	movs	r3, #0
   11584:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:913
    uint32_t IERMask = 0;
   11586:	2300      	movs	r3, #0
   11588:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:915

    switch (UartID)
   1158a:	79fb      	ldrb	r3, [r7, #7]
   1158c:	2b04      	cmp	r3, #4
   1158e:	d82b      	bhi.n	115e8 <UART_IntConfig+0x78>
   11590:	a201      	add	r2, pc, #4	; (adr r2, 11598 <UART_IntConfig+0x28>)
   11592:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   11596:	bf00      	nop
   11598:	000115ad 	.word	0x000115ad
   1159c:	000115b9 	.word	0x000115b9
   115a0:	000115c5 	.word	0x000115c5
   115a4:	000115d1 	.word	0x000115d1
   115a8:	000115dd 	.word	0x000115dd
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:918
    {
        case UART_0:
            IER = &LPC_UART0->IER;
   115ac:	4b31      	ldr	r3, [pc, #196]	; (11674 <UART_IntConfig+0x104>)
   115ae:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:919
            IERMask = UART_IER_BITMASK;
   115b0:	f240 3307 	movw	r3, #775	; 0x307
   115b4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:920
            break;
   115b6:	e017      	b.n	115e8 <UART_IntConfig+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:922
        case UART_1:
            IER = &LPC_UART1->IER;
   115b8:	4b2f      	ldr	r3, [pc, #188]	; (11678 <UART_IntConfig+0x108>)
   115ba:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:923
            IERMask = UART1_IER_BITMASK;
   115bc:	f240 338f 	movw	r3, #911	; 0x38f
   115c0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:924
            break;
   115c2:	e011      	b.n	115e8 <UART_IntConfig+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:926
        case UART_2:
            IER = &LPC_UART2->IER;
   115c4:	4b2d      	ldr	r3, [pc, #180]	; (1167c <UART_IntConfig+0x10c>)
   115c6:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:927
            IERMask = UART_IER_BITMASK;
   115c8:	f240 3307 	movw	r3, #775	; 0x307
   115cc:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:928
            break;
   115ce:	e00b      	b.n	115e8 <UART_IntConfig+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:930
        case UART_3:
            IER = &LPC_UART3->IER;
   115d0:	4b2b      	ldr	r3, [pc, #172]	; (11680 <UART_IntConfig+0x110>)
   115d2:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:931
            IERMask = UART_IER_BITMASK;
   115d4:	f240 3307 	movw	r3, #775	; 0x307
   115d8:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:932
            break;
   115da:	e005      	b.n	115e8 <UART_IntConfig+0x78>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:934
        case UART_4:
            IER = &LPC_UART4->IER;
   115dc:	4b29      	ldr	r3, [pc, #164]	; (11684 <UART_IntConfig+0x114>)
   115de:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:935
            IERMask = UART_IER_BITMASK;
   115e0:	f240 3307 	movw	r3, #775	; 0x307
   115e4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:936
            break;
   115e6:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:940
    }


    switch(UARTIntCfg)
   115e8:	79bb      	ldrb	r3, [r7, #6]
   115ea:	2b06      	cmp	r3, #6
   115ec:	d827      	bhi.n	1163e <UART_IntConfig+0xce>
   115ee:	a201      	add	r2, pc, #4	; (adr r2, 115f4 <UART_IntConfig+0x84>)
   115f0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   115f4:	00011611 	.word	0x00011611
   115f8:	00011617 	.word	0x00011617
   115fc:	0001161d 	.word	0x0001161d
   11600:	00011623 	.word	0x00011623
   11604:	00011629 	.word	0x00011629
   11608:	0001162f 	.word	0x0001162f
   1160c:	00011637 	.word	0x00011637
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:943
    {
        case UART_INTCFG_RBR:
            tmp = UART_IER_RBRINT_EN;
   11610:	2301      	movs	r3, #1
   11612:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:944
            break;
   11614:	e013      	b.n	1163e <UART_IntConfig+0xce>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:947

        case UART_INTCFG_THRE:
            tmp = UART_IER_THREINT_EN;
   11616:	2302      	movs	r3, #2
   11618:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:948
            break;
   1161a:	e010      	b.n	1163e <UART_IntConfig+0xce>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:951

        case UART_INTCFG_RLS:
            tmp = UART_IER_RLSINT_EN;
   1161c:	2304      	movs	r3, #4
   1161e:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:952
            break;
   11620:	e00d      	b.n	1163e <UART_IntConfig+0xce>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:955

        case UART_INTCFG_MS:
            tmp = UART1_IER_MSINT_EN;
   11622:	2308      	movs	r3, #8
   11624:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:956
            break;
   11626:	e00a      	b.n	1163e <UART_IntConfig+0xce>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:959

        case UART_INTCFG_CTS:
            tmp = UART1_IER_CTSINT_EN;
   11628:	2380      	movs	r3, #128	; 0x80
   1162a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:960
            break;
   1162c:	e007      	b.n	1163e <UART_IntConfig+0xce>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:963

        case UART_INTCFG_ABEO:
            tmp = UART_IER_ABEOINT_EN;
   1162e:	f44f 7380 	mov.w	r3, #256	; 0x100
   11632:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:964
            break;
   11634:	e003      	b.n	1163e <UART_IntConfig+0xce>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:967

        case UART_INTCFG_ABTO:
            tmp = UART_IER_ABTOINT_EN;
   11636:	f44f 7300 	mov.w	r3, #512	; 0x200
   1163a:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:968
            break;
   1163c:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:971
    }

    if (NewState == ENABLE)
   1163e:	797b      	ldrb	r3, [r7, #5]
   11640:	2b01      	cmp	r3, #1
   11642:	d108      	bne.n	11656 <UART_IntConfig+0xe6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:973
    {
        *IER |= tmp& IERMask;
   11644:	693b      	ldr	r3, [r7, #16]
   11646:	681a      	ldr	r2, [r3, #0]
   11648:	6979      	ldr	r1, [r7, #20]
   1164a:	68fb      	ldr	r3, [r7, #12]
   1164c:	400b      	ands	r3, r1
   1164e:	431a      	orrs	r2, r3
   11650:	693b      	ldr	r3, [r7, #16]
   11652:	601a      	str	r2, [r3, #0]
   11654:	e008      	b.n	11668 <UART_IntConfig+0xf8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:977
    }
    else
    {
        *IER &= (~tmp) & IERMask;
   11656:	693b      	ldr	r3, [r7, #16]
   11658:	681a      	ldr	r2, [r3, #0]
   1165a:	697b      	ldr	r3, [r7, #20]
   1165c:	43d9      	mvns	r1, r3
   1165e:	68fb      	ldr	r3, [r7, #12]
   11660:	400b      	ands	r3, r1
   11662:	401a      	ands	r2, r3
   11664:	693b      	ldr	r3, [r7, #16]
   11666:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:979
    }
}
   11668:	371c      	adds	r7, #28
   1166a:	46bd      	mov	sp, r7
   1166c:	f85d 7b04 	ldr.w	r7, [sp], #4
   11670:	4770      	bx	lr
   11672:	bf00      	nop
   11674:	4000c004 	.word	0x4000c004
   11678:	40010004 	.word	0x40010004
   1167c:	40098004 	.word	0x40098004
   11680:	4009c004 	.word	0x4009c004
   11684:	400a4004 	.word	0x400a4004

00011688 <UART_GetLineStatus>:
UART_GetLineStatus():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1000
 *          Line Status register could not be correct. So this function used to
 *          read Line status register in one time only, then the return value
 *          used to check all flags.
 *********************************************************************/
uint8_t UART_GetLineStatus(UART_ID_Type UartID)
{
   11688:	b480      	push	{r7}
   1168a:	b083      	sub	sp, #12
   1168c:	af00      	add	r7, sp, #0
   1168e:	4603      	mov	r3, r0
   11690:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1001
    switch (UartID)
   11692:	79fb      	ldrb	r3, [r7, #7]
   11694:	2b04      	cmp	r3, #4
   11696:	d821      	bhi.n	116dc <UART_GetLineStatus+0x54>
   11698:	a201      	add	r2, pc, #4	; (adr r2, 116a0 <UART_GetLineStatus+0x18>)
   1169a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   1169e:	bf00      	nop
   116a0:	000116b5 	.word	0x000116b5
   116a4:	000116bd 	.word	0x000116bd
   116a8:	000116c5 	.word	0x000116c5
   116ac:	000116cd 	.word	0x000116cd
   116b0:	000116d5 	.word	0x000116d5
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1004
    {
        case UART_0:
            return ((LPC_UART0->LSR) & UART_LSR_BITMASK);
   116b4:	4b0d      	ldr	r3, [pc, #52]	; (116ec <UART_GetLineStatus+0x64>)
   116b6:	7d1b      	ldrb	r3, [r3, #20]
   116b8:	b2db      	uxtb	r3, r3
   116ba:	e010      	b.n	116de <UART_GetLineStatus+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1006
        case UART_1:
            return ((LPC_UART1->LSR) & UART_LSR_BITMASK);
   116bc:	4b0c      	ldr	r3, [pc, #48]	; (116f0 <UART_GetLineStatus+0x68>)
   116be:	7d1b      	ldrb	r3, [r3, #20]
   116c0:	b2db      	uxtb	r3, r3
   116c2:	e00c      	b.n	116de <UART_GetLineStatus+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1008
        case UART_2:
            return ((LPC_UART2->LSR) & UART_LSR_BITMASK);
   116c4:	4b0b      	ldr	r3, [pc, #44]	; (116f4 <UART_GetLineStatus+0x6c>)
   116c6:	7d1b      	ldrb	r3, [r3, #20]
   116c8:	b2db      	uxtb	r3, r3
   116ca:	e008      	b.n	116de <UART_GetLineStatus+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1010
        case UART_3:
            return ((LPC_UART3->LSR) & UART_LSR_BITMASK);
   116cc:	4b0a      	ldr	r3, [pc, #40]	; (116f8 <UART_GetLineStatus+0x70>)
   116ce:	7d1b      	ldrb	r3, [r3, #20]
   116d0:	b2db      	uxtb	r3, r3
   116d2:	e004      	b.n	116de <UART_GetLineStatus+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1012
        case UART_4:
            return ((LPC_UART4->LSR) & UART_LSR_BITMASK);
   116d4:	4b09      	ldr	r3, [pc, #36]	; (116fc <UART_GetLineStatus+0x74>)
   116d6:	695b      	ldr	r3, [r3, #20]
   116d8:	b2db      	uxtb	r3, r3
   116da:	e000      	b.n	116de <UART_GetLineStatus+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1014
    }
    return 0;
   116dc:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1015
}
   116de:	4618      	mov	r0, r3
   116e0:	370c      	adds	r7, #12
   116e2:	46bd      	mov	sp, r7
   116e4:	f85d 7b04 	ldr.w	r7, [sp], #4
   116e8:	4770      	bx	lr
   116ea:	bf00      	nop
   116ec:	4000c000 	.word	0x4000c000
   116f0:	40010000 	.word	0x40010000
   116f4:	40098000 	.word	0x40098000
   116f8:	4009c000 	.word	0x4009c000
   116fc:	400a4000 	.word	0x400a4000

00011700 <UART_GetIntId>:
UART_GetIntId():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1028
 *              - UART_3: UART3 peripheral
 *              - UART_4: UART4 peripheral
 * @return      Current value of UART UIIR register in UART peripheral.
 *********************************************************************/
uint32_t UART_GetIntId(UART_ID_Type UartID)
{
   11700:	b480      	push	{r7}
   11702:	b083      	sub	sp, #12
   11704:	af00      	add	r7, sp, #0
   11706:	4603      	mov	r3, r0
   11708:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1029
    switch (UartID)
   1170a:	79fb      	ldrb	r3, [r7, #7]
   1170c:	2b04      	cmp	r3, #4
   1170e:	d82b      	bhi.n	11768 <UART_GetIntId+0x68>
   11710:	a201      	add	r2, pc, #4	; (adr r2, 11718 <UART_GetIntId+0x18>)
   11712:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   11716:	bf00      	nop
   11718:	0001172d 	.word	0x0001172d
   1171c:	00011739 	.word	0x00011739
   11720:	00011745 	.word	0x00011745
   11724:	00011751 	.word	0x00011751
   11728:	0001175d 	.word	0x0001175d
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1032
    {
        case UART_0:
            return ((LPC_UART0->IIR) & UART_IIR_BITMASK);
   1172c:	4b12      	ldr	r3, [pc, #72]	; (11778 <UART_GetIntId+0x78>)
   1172e:	689a      	ldr	r2, [r3, #8]
   11730:	f240 33cf 	movw	r3, #975	; 0x3cf
   11734:	4013      	ands	r3, r2
   11736:	e018      	b.n	1176a <UART_GetIntId+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1034
        case UART_1:
            return ((LPC_UART1->IIR) & UART_IIR_BITMASK);
   11738:	4b10      	ldr	r3, [pc, #64]	; (1177c <UART_GetIntId+0x7c>)
   1173a:	689a      	ldr	r2, [r3, #8]
   1173c:	f240 33cf 	movw	r3, #975	; 0x3cf
   11740:	4013      	ands	r3, r2
   11742:	e012      	b.n	1176a <UART_GetIntId+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1036
        case UART_2:
            return ((LPC_UART2->IIR) & UART_IIR_BITMASK);
   11744:	4b0e      	ldr	r3, [pc, #56]	; (11780 <UART_GetIntId+0x80>)
   11746:	689a      	ldr	r2, [r3, #8]
   11748:	f240 33cf 	movw	r3, #975	; 0x3cf
   1174c:	4013      	ands	r3, r2
   1174e:	e00c      	b.n	1176a <UART_GetIntId+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1038
        case UART_3:
            return ((LPC_UART3->IIR) & UART_IIR_BITMASK);
   11750:	4b0c      	ldr	r3, [pc, #48]	; (11784 <UART_GetIntId+0x84>)
   11752:	689a      	ldr	r2, [r3, #8]
   11754:	f240 33cf 	movw	r3, #975	; 0x3cf
   11758:	4013      	ands	r3, r2
   1175a:	e006      	b.n	1176a <UART_GetIntId+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1040
        case UART_4:
            return ((LPC_UART4->IIR) & UART_IIR_BITMASK);
   1175c:	4b0a      	ldr	r3, [pc, #40]	; (11788 <UART_GetIntId+0x88>)
   1175e:	689a      	ldr	r2, [r3, #8]
   11760:	f240 33cf 	movw	r3, #975	; 0x3cf
   11764:	4013      	ands	r3, r2
   11766:	e000      	b.n	1176a <UART_GetIntId+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1042
    }
    return 0;
   11768:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1043
}
   1176a:	4618      	mov	r0, r3
   1176c:	370c      	adds	r7, #12
   1176e:	46bd      	mov	sp, r7
   11770:	f85d 7b04 	ldr.w	r7, [sp], #4
   11774:	4770      	bx	lr
   11776:	bf00      	nop
   11778:	4000c000 	.word	0x4000c000
   1177c:	40010000 	.word	0x40010000
   11780:	40098000 	.word	0x40098000
   11784:	4009c000 	.word	0x4009c000
   11788:	400a4000 	.word	0x400a4000

0001178c <UART_CheckBusy>:
UART_CheckBusy():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1056
 *              - UART_3: UART3 peripheral
 *              - UART_4: UART4 peripheral
 * @return      RESET if UART is not busy, otherwise return SET.
 **********************************************************************/
FlagStatus UART_CheckBusy(UART_ID_Type UartID)
{
   1178c:	b480      	push	{r7}
   1178e:	b085      	sub	sp, #20
   11790:	af00      	add	r7, sp, #0
   11792:	4603      	mov	r3, r0
   11794:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1057
    uint32_t LSR = 0;
   11796:	2300      	movs	r3, #0
   11798:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1058
    switch (UartID)
   1179a:	79fb      	ldrb	r3, [r7, #7]
   1179c:	2b04      	cmp	r3, #4
   1179e:	d82f      	bhi.n	11800 <UART_CheckBusy+0x74>
   117a0:	a201      	add	r2, pc, #4	; (adr r2, 117a8 <UART_CheckBusy+0x1c>)
   117a2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   117a6:	bf00      	nop
   117a8:	000117bd 	.word	0x000117bd
   117ac:	000117cb 	.word	0x000117cb
   117b0:	000117d9 	.word	0x000117d9
   117b4:	000117e7 	.word	0x000117e7
   117b8:	000117f5 	.word	0x000117f5
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1061
    {
        case UART_0:
            LSR = (LPC_UART0)->LSR & UART_LSR_TEMT;
   117bc:	4b17      	ldr	r3, [pc, #92]	; (1181c <UART_CheckBusy+0x90>)
   117be:	7d1b      	ldrb	r3, [r3, #20]
   117c0:	b2db      	uxtb	r3, r3
   117c2:	f003 0340 	and.w	r3, r3, #64	; 0x40
   117c6:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1062
            break;
   117c8:	e01a      	b.n	11800 <UART_CheckBusy+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1064
        case UART_1:
            LSR = (LPC_UART1)->LSR & UART_LSR_TEMT;
   117ca:	4b15      	ldr	r3, [pc, #84]	; (11820 <UART_CheckBusy+0x94>)
   117cc:	7d1b      	ldrb	r3, [r3, #20]
   117ce:	b2db      	uxtb	r3, r3
   117d0:	f003 0340 	and.w	r3, r3, #64	; 0x40
   117d4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1065
            break;
   117d6:	e013      	b.n	11800 <UART_CheckBusy+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1067
        case UART_2:
            LSR = (LPC_UART2)->LSR & UART_LSR_TEMT;
   117d8:	4b12      	ldr	r3, [pc, #72]	; (11824 <UART_CheckBusy+0x98>)
   117da:	7d1b      	ldrb	r3, [r3, #20]
   117dc:	b2db      	uxtb	r3, r3
   117de:	f003 0340 	and.w	r3, r3, #64	; 0x40
   117e2:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1068
            break;
   117e4:	e00c      	b.n	11800 <UART_CheckBusy+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1070
        case UART_3:
            LSR = (LPC_UART3)->LSR & UART_LSR_TEMT;
   117e6:	4b10      	ldr	r3, [pc, #64]	; (11828 <UART_CheckBusy+0x9c>)
   117e8:	7d1b      	ldrb	r3, [r3, #20]
   117ea:	b2db      	uxtb	r3, r3
   117ec:	f003 0340 	and.w	r3, r3, #64	; 0x40
   117f0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1071
            break;
   117f2:	e005      	b.n	11800 <UART_CheckBusy+0x74>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1073
        case UART_4:
            LSR = (LPC_UART4)->LSR & UART_LSR_TEMT;
   117f4:	4b0d      	ldr	r3, [pc, #52]	; (1182c <UART_CheckBusy+0xa0>)
   117f6:	695b      	ldr	r3, [r3, #20]
   117f8:	f003 0340 	and.w	r3, r3, #64	; 0x40
   117fc:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1074
            break;
   117fe:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1077
    }
    
    if (LSR & UART_LSR_TEMT)
   11800:	68fb      	ldr	r3, [r7, #12]
   11802:	f003 0340 	and.w	r3, r3, #64	; 0x40
   11806:	2b00      	cmp	r3, #0
   11808:	d001      	beq.n	1180e <UART_CheckBusy+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1079
    {
        return RESET;
   1180a:	2300      	movs	r3, #0
   1180c:	e000      	b.n	11810 <UART_CheckBusy+0x84>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1081
    }
    return SET;
   1180e:	2301      	movs	r3, #1
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1082
}
   11810:	4618      	mov	r0, r3
   11812:	3714      	adds	r7, #20
   11814:	46bd      	mov	sp, r7
   11816:	f85d 7b04 	ldr.w	r7, [sp], #4
   1181a:	4770      	bx	lr
   1181c:	4000c000 	.word	0x4000c000
   11820:	40010000 	.word	0x40010000
   11824:	40098000 	.word	0x40098000
   11828:	4009c000 	.word	0x4009c000
   1182c:	400a4000 	.word	0x400a4000

00011830 <UART_FIFOConfig>:
UART_FIFOConfig():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1098
 * @param[in]   FIFOCfg Pointer to a UART_FIFO_CFG_Type Structure that
 *                      contains specified information about FIFO configuration
 * @return      none
 **********************************************************************/
void UART_FIFOConfig(UART_ID_Type UartID, UART_FIFO_CFG_Type *FIFOCfg)
{
   11830:	b480      	push	{r7}
   11832:	b085      	sub	sp, #20
   11834:	af00      	add	r7, sp, #0
   11836:	4603      	mov	r3, r0
   11838:	6039      	str	r1, [r7, #0]
   1183a:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1099
    uint8_t tmp = 0;
   1183c:	2300      	movs	r3, #0
   1183e:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1101

    tmp |= UART_FCR_FIFO_EN;
   11840:	7bfb      	ldrb	r3, [r7, #15]
   11842:	f043 0301 	orr.w	r3, r3, #1
   11846:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1103

    switch (FIFOCfg->FIFO_Level)
   11848:	683b      	ldr	r3, [r7, #0]
   1184a:	78db      	ldrb	r3, [r3, #3]
   1184c:	2b01      	cmp	r3, #1
   1184e:	d004      	beq.n	1185a <UART_FIFOConfig+0x2a>
   11850:	2b02      	cmp	r3, #2
   11852:	d007      	beq.n	11864 <UART_FIFOConfig+0x34>
   11854:	2b00      	cmp	r3, #0
   11856:	d00f      	beq.n	11878 <UART_FIFOConfig+0x48>
   11858:	e009      	b.n	1186e <UART_FIFOConfig+0x3e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1110
        case UART_FIFO_TRGLEV0:
            tmp |= UART_FCR_TRG_LEV0;
            break;

        case UART_FIFO_TRGLEV1:
            tmp |= UART_FCR_TRG_LEV1;
   1185a:	7bfb      	ldrb	r3, [r7, #15]
   1185c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   11860:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1111
            break;
   11862:	e00a      	b.n	1187a <UART_FIFOConfig+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1114

        case UART_FIFO_TRGLEV2:
            tmp |= UART_FCR_TRG_LEV2;
   11864:	7bfb      	ldrb	r3, [r7, #15]
   11866:	f063 037f 	orn	r3, r3, #127	; 0x7f
   1186a:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1115
            break;
   1186c:	e005      	b.n	1187a <UART_FIFOConfig+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1120

        case UART_FIFO_TRGLEV3:

        default:
            tmp |= UART_FCR_TRG_LEV3;
   1186e:	7bfb      	ldrb	r3, [r7, #15]
   11870:	f063 033f 	orn	r3, r3, #63	; 0x3f
   11874:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1121
            break;
   11876:	e000      	b.n	1187a <UART_FIFOConfig+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1107

    switch (FIFOCfg->FIFO_Level)
    {
        case UART_FIFO_TRGLEV0:
            tmp |= UART_FCR_TRG_LEV0;
            break;
   11878:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1124
        default:
            tmp |= UART_FCR_TRG_LEV3;
            break;
    }

    if (FIFOCfg->FIFO_ResetTxBuf == ENABLE)
   1187a:	683b      	ldr	r3, [r7, #0]
   1187c:	785b      	ldrb	r3, [r3, #1]
   1187e:	2b01      	cmp	r3, #1
   11880:	d103      	bne.n	1188a <UART_FIFOConfig+0x5a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1126
    {
        tmp |= UART_FCR_TX_RS;
   11882:	7bfb      	ldrb	r3, [r7, #15]
   11884:	f043 0304 	orr.w	r3, r3, #4
   11888:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1129
    }

    if (FIFOCfg->FIFO_ResetRxBuf == ENABLE)
   1188a:	683b      	ldr	r3, [r7, #0]
   1188c:	781b      	ldrb	r3, [r3, #0]
   1188e:	2b01      	cmp	r3, #1
   11890:	d103      	bne.n	1189a <UART_FIFOConfig+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1131
    {
        tmp |= UART_FCR_RX_RS;
   11892:	7bfb      	ldrb	r3, [r7, #15]
   11894:	f043 0302 	orr.w	r3, r3, #2
   11898:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1134
    }

    if (FIFOCfg->FIFO_DMAMode == ENABLE)
   1189a:	683b      	ldr	r3, [r7, #0]
   1189c:	789b      	ldrb	r3, [r3, #2]
   1189e:	2b01      	cmp	r3, #1
   118a0:	d103      	bne.n	118aa <UART_FIFOConfig+0x7a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1136
    {
        tmp |= UART_FCR_DMAMODE_SEL;
   118a2:	7bfb      	ldrb	r3, [r7, #15]
   118a4:	f043 0308 	orr.w	r3, r3, #8
   118a8:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1141
    }


    //write to FIFO control register
    switch (UartID)
   118aa:	79fb      	ldrb	r3, [r7, #7]
   118ac:	2b04      	cmp	r3, #4
   118ae:	d82f      	bhi.n	11910 <UART_FIFOConfig+0xe0>
   118b0:	a201      	add	r2, pc, #4	; (adr r2, 118b8 <UART_FIFOConfig+0x88>)
   118b2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   118b6:	bf00      	nop
   118b8:	000118cd 	.word	0x000118cd
   118bc:	000118db 	.word	0x000118db
   118c0:	000118e9 	.word	0x000118e9
   118c4:	000118f7 	.word	0x000118f7
   118c8:	00011905 	.word	0x00011905
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1144
    {
        case UART_0:
            LPC_UART0->FCR = tmp & UART_FCR_BITMASK;
   118cc:	4b13      	ldr	r3, [pc, #76]	; (1191c <UART_FIFOConfig+0xec>)
   118ce:	7bfa      	ldrb	r2, [r7, #15]
   118d0:	f022 0230 	bic.w	r2, r2, #48	; 0x30
   118d4:	b2d2      	uxtb	r2, r2
   118d6:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1145
            break;
   118d8:	e01a      	b.n	11910 <UART_FIFOConfig+0xe0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1147
        case UART_1:
            LPC_UART1->FCR = tmp & UART_FCR_BITMASK;
   118da:	4b11      	ldr	r3, [pc, #68]	; (11920 <UART_FIFOConfig+0xf0>)
   118dc:	7bfa      	ldrb	r2, [r7, #15]
   118de:	f022 0230 	bic.w	r2, r2, #48	; 0x30
   118e2:	b2d2      	uxtb	r2, r2
   118e4:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1148
            break;
   118e6:	e013      	b.n	11910 <UART_FIFOConfig+0xe0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1150
        case UART_2:
            LPC_UART2->FCR = tmp & UART_FCR_BITMASK;
   118e8:	4b0e      	ldr	r3, [pc, #56]	; (11924 <UART_FIFOConfig+0xf4>)
   118ea:	7bfa      	ldrb	r2, [r7, #15]
   118ec:	f022 0230 	bic.w	r2, r2, #48	; 0x30
   118f0:	b2d2      	uxtb	r2, r2
   118f2:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1151
            break;
   118f4:	e00c      	b.n	11910 <UART_FIFOConfig+0xe0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1153
        case UART_3:
            LPC_UART3->FCR = tmp & UART_FCR_BITMASK;
   118f6:	4b0c      	ldr	r3, [pc, #48]	; (11928 <UART_FIFOConfig+0xf8>)
   118f8:	7bfa      	ldrb	r2, [r7, #15]
   118fa:	f022 0230 	bic.w	r2, r2, #48	; 0x30
   118fe:	b2d2      	uxtb	r2, r2
   11900:	721a      	strb	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1154
            break;
   11902:	e005      	b.n	11910 <UART_FIFOConfig+0xe0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1156
        case UART_4:
            LPC_UART4->FCR = tmp & UART_FCR_BITMASK;
   11904:	4b09      	ldr	r3, [pc, #36]	; (1192c <UART_FIFOConfig+0xfc>)
   11906:	7bfa      	ldrb	r2, [r7, #15]
   11908:	f002 02cf 	and.w	r2, r2, #207	; 0xcf
   1190c:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1157
            break;
   1190e:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1159
    }
}
   11910:	3714      	adds	r7, #20
   11912:	46bd      	mov	sp, r7
   11914:	f85d 7b04 	ldr.w	r7, [sp], #4
   11918:	4770      	bx	lr
   1191a:	bf00      	nop
   1191c:	4000c000 	.word	0x4000c000
   11920:	40010000 	.word	0x40010000
   11924:	40098000 	.word	0x40098000
   11928:	4009c000 	.word	0x4009c000
   1192c:	400a4000 	.word	0x400a4000

00011930 <UART_FIFOConfigStructInit>:
UART_FIFOConfigStructInit():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1173
* @param[in]    UART_FIFOInitStruct Pointer to a UART_FIFO_CFG_Type structure
*                    which will be initialized.
* @return       None
*******************************************************************************/
void UART_FIFOConfigStructInit(UART_FIFO_CFG_Type *UART_FIFOInitStruct)
{
   11930:	b480      	push	{r7}
   11932:	b083      	sub	sp, #12
   11934:	af00      	add	r7, sp, #0
   11936:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1174
    UART_FIFOInitStruct->FIFO_DMAMode = DISABLE;
   11938:	687b      	ldr	r3, [r7, #4]
   1193a:	2200      	movs	r2, #0
   1193c:	709a      	strb	r2, [r3, #2]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1176

    UART_FIFOInitStruct->FIFO_Level = UART_FIFO_TRGLEV0;
   1193e:	687b      	ldr	r3, [r7, #4]
   11940:	2200      	movs	r2, #0
   11942:	70da      	strb	r2, [r3, #3]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1178

    UART_FIFOInitStruct->FIFO_ResetRxBuf = ENABLE;
   11944:	687b      	ldr	r3, [r7, #4]
   11946:	2201      	movs	r2, #1
   11948:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1180

    UART_FIFOInitStruct->FIFO_ResetTxBuf = ENABLE;
   1194a:	687b      	ldr	r3, [r7, #4]
   1194c:	2201      	movs	r2, #1
   1194e:	705a      	strb	r2, [r3, #1]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1181
}
   11950:	370c      	adds	r7, #12
   11952:	46bd      	mov	sp, r7
   11954:	f85d 7b04 	ldr.w	r7, [sp], #4
   11958:	4770      	bx	lr
   1195a:	bf00      	nop

0001195c <UART_ABCmd>:
UART_ABCmd():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1204
 *              completed.
 * @return      none
 **********************************************************************/
void UART_ABCmd(UART_ID_Type UartID, UART_AB_CFG_Type *ABConfigStruct,
                            FunctionalState NewState)
{
   1195c:	b580      	push	{r7, lr}
   1195e:	b084      	sub	sp, #16
   11960:	af00      	add	r7, sp, #0
   11962:	6039      	str	r1, [r7, #0]
   11964:	4613      	mov	r3, r2
   11966:	4602      	mov	r2, r0
   11968:	71fa      	strb	r2, [r7, #7]
   1196a:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1207
    uint32_t tmp;

    tmp = 0;
   1196c:	2300      	movs	r3, #0
   1196e:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1208
    if (NewState == ENABLE)
   11970:	79bb      	ldrb	r3, [r7, #6]
   11972:	2b01      	cmp	r3, #1
   11974:	d10f      	bne.n	11996 <UART_ABCmd+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1210
    {
        if (ABConfigStruct->ABMode == UART_AUTOBAUD_MODE1)
   11976:	683b      	ldr	r3, [r7, #0]
   11978:	781b      	ldrb	r3, [r3, #0]
   1197a:	2b01      	cmp	r3, #1
   1197c:	d103      	bne.n	11986 <UART_ABCmd+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1212
        {
            tmp |= UART_ACR_MODE;
   1197e:	68fb      	ldr	r3, [r7, #12]
   11980:	f043 0302 	orr.w	r3, r3, #2
   11984:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1214
        }
        if (ABConfigStruct->AutoRestart == ENABLE)
   11986:	683b      	ldr	r3, [r7, #0]
   11988:	785b      	ldrb	r3, [r3, #1]
   1198a:	2b01      	cmp	r3, #1
   1198c:	d103      	bne.n	11996 <UART_ABCmd+0x3a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1216
        {
            tmp |= UART_ACR_AUTO_RESTART;
   1198e:	68fb      	ldr	r3, [r7, #12]
   11990:	f043 0304 	orr.w	r3, r3, #4
   11994:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1220
        }
    }

    if (UartID == UART_1)
   11996:	79fb      	ldrb	r3, [r7, #7]
   11998:	2b01      	cmp	r3, #1
   1199a:	d125      	bne.n	119e8 <UART_ABCmd+0x8c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1222
    {
        if (NewState == ENABLE)
   1199c:	79bb      	ldrb	r3, [r7, #6]
   1199e:	2b01      	cmp	r3, #1
   119a0:	d11e      	bne.n	119e0 <UART_ABCmd+0x84>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1225
        {
            // Clear DLL and DLM value
            LPC_UART1->LCR |= UART_LCR_DLAB_EN;
   119a2:	4b3b      	ldr	r3, [pc, #236]	; (11a90 <UART_ABCmd+0x134>)
   119a4:	4a3a      	ldr	r2, [pc, #232]	; (11a90 <UART_ABCmd+0x134>)
   119a6:	7b12      	ldrb	r2, [r2, #12]
   119a8:	b2d2      	uxtb	r2, r2
   119aa:	f062 027f 	orn	r2, r2, #127	; 0x7f
   119ae:	b2d2      	uxtb	r2, r2
   119b0:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1227

            LPC_UART1->DLL = 0;
   119b2:	4b37      	ldr	r3, [pc, #220]	; (11a90 <UART_ABCmd+0x134>)
   119b4:	2200      	movs	r2, #0
   119b6:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1229

            LPC_UART1->DLM = 0;
   119b8:	4b35      	ldr	r3, [pc, #212]	; (11a90 <UART_ABCmd+0x134>)
   119ba:	2200      	movs	r2, #0
   119bc:	711a      	strb	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1231

            LPC_UART1->LCR &= ~UART_LCR_DLAB_EN;
   119be:	4b34      	ldr	r3, [pc, #208]	; (11a90 <UART_ABCmd+0x134>)
   119c0:	4a33      	ldr	r2, [pc, #204]	; (11a90 <UART_ABCmd+0x134>)
   119c2:	7b12      	ldrb	r2, [r2, #12]
   119c4:	b2d2      	uxtb	r2, r2
   119c6:	f002 027f 	and.w	r2, r2, #127	; 0x7f
   119ca:	b2d2      	uxtb	r2, r2
   119cc:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1234

            // FDR value must be reset to default value
            LPC_UART1->FDR = 0x10;
   119ce:	4b30      	ldr	r3, [pc, #192]	; (11a90 <UART_ABCmd+0x134>)
   119d0:	2210      	movs	r2, #16
   119d2:	629a      	str	r2, [r3, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1236

            LPC_UART1->ACR = UART_ACR_START | tmp;
   119d4:	4b2e      	ldr	r3, [pc, #184]	; (11a90 <UART_ABCmd+0x134>)
   119d6:	68fa      	ldr	r2, [r7, #12]
   119d8:	f042 0201 	orr.w	r2, r2, #1
   119dc:	621a      	str	r2, [r3, #32]
   119de:	e053      	b.n	11a88 <UART_ABCmd+0x12c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1240
        }
        else
        {
            LPC_UART1->ACR = 0;
   119e0:	4b2b      	ldr	r3, [pc, #172]	; (11a90 <UART_ABCmd+0x134>)
   119e2:	2200      	movs	r2, #0
   119e4:	621a      	str	r2, [r3, #32]
   119e6:	e04f      	b.n	11a88 <UART_ABCmd+0x12c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1243
        }
    }
    else if (UartID == UART_4)
   119e8:	79fb      	ldrb	r3, [r7, #7]
   119ea:	2b04      	cmp	r3, #4
   119ec:	d121      	bne.n	11a32 <UART_ABCmd+0xd6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1245
    {
        if (NewState == ENABLE)
   119ee:	79bb      	ldrb	r3, [r7, #6]
   119f0:	2b01      	cmp	r3, #1
   119f2:	d11a      	bne.n	11a2a <UART_ABCmd+0xce>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1248
        {
            // Clear DLL and DLM value
            LPC_UART4->LCR |= UART_LCR_DLAB_EN;
   119f4:	4b27      	ldr	r3, [pc, #156]	; (11a94 <UART_ABCmd+0x138>)
   119f6:	4a27      	ldr	r2, [pc, #156]	; (11a94 <UART_ABCmd+0x138>)
   119f8:	68d2      	ldr	r2, [r2, #12]
   119fa:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   119fe:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1250

            LPC_UART4->DLL = 0;
   11a00:	4b24      	ldr	r3, [pc, #144]	; (11a94 <UART_ABCmd+0x138>)
   11a02:	2200      	movs	r2, #0
   11a04:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1252

            LPC_UART4->DLM = 0;
   11a06:	4b23      	ldr	r3, [pc, #140]	; (11a94 <UART_ABCmd+0x138>)
   11a08:	2200      	movs	r2, #0
   11a0a:	605a      	str	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1254

            LPC_UART4->LCR &= ~UART_LCR_DLAB_EN;
   11a0c:	4b21      	ldr	r3, [pc, #132]	; (11a94 <UART_ABCmd+0x138>)
   11a0e:	4a21      	ldr	r2, [pc, #132]	; (11a94 <UART_ABCmd+0x138>)
   11a10:	68d2      	ldr	r2, [r2, #12]
   11a12:	f022 0280 	bic.w	r2, r2, #128	; 0x80
   11a16:	60da      	str	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1257

            // FDR value must be reset to default value
            LPC_UART4->FDR = 0x10;
   11a18:	4b1e      	ldr	r3, [pc, #120]	; (11a94 <UART_ABCmd+0x138>)
   11a1a:	2210      	movs	r2, #16
   11a1c:	629a      	str	r2, [r3, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1259

            LPC_UART4->ACR = UART_ACR_START | tmp;
   11a1e:	4b1d      	ldr	r3, [pc, #116]	; (11a94 <UART_ABCmd+0x138>)
   11a20:	68fa      	ldr	r2, [r7, #12]
   11a22:	f042 0201 	orr.w	r2, r2, #1
   11a26:	621a      	str	r2, [r3, #32]
   11a28:	e02e      	b.n	11a88 <UART_ABCmd+0x12c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1263
        }
        else
        {
            LPC_UART4->ACR = 0;
   11a2a:	4b1a      	ldr	r3, [pc, #104]	; (11a94 <UART_ABCmd+0x138>)
   11a2c:	2200      	movs	r2, #0
   11a2e:	621a      	str	r2, [r3, #32]
   11a30:	e02a      	b.n	11a88 <UART_ABCmd+0x12c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1268
        }
    }
    else
    {
        LPC_UART_TypeDef *UARTx = uart_get_pointer(UartID);
   11a32:	79fb      	ldrb	r3, [r7, #7]
   11a34:	4618      	mov	r0, r3
   11a36:	f7ff f9b5 	bl	10da4 <uart_get_pointer>
   11a3a:	60b8      	str	r0, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1269
        if (NewState == ENABLE)
   11a3c:	79bb      	ldrb	r3, [r7, #6]
   11a3e:	2b01      	cmp	r3, #1
   11a40:	d11f      	bne.n	11a82 <UART_ABCmd+0x126>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1272
        {
            // Clear DLL and DLM value
            UARTx->LCR |= UART_LCR_DLAB_EN;
   11a42:	68bb      	ldr	r3, [r7, #8]
   11a44:	7b1b      	ldrb	r3, [r3, #12]
   11a46:	b2db      	uxtb	r3, r3
   11a48:	f063 037f 	orn	r3, r3, #127	; 0x7f
   11a4c:	b2da      	uxtb	r2, r3
   11a4e:	68bb      	ldr	r3, [r7, #8]
   11a50:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1274

            UARTx->DLL = 0;
   11a52:	68bb      	ldr	r3, [r7, #8]
   11a54:	2200      	movs	r2, #0
   11a56:	701a      	strb	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1276

            UARTx->DLM = 0;
   11a58:	68bb      	ldr	r3, [r7, #8]
   11a5a:	2200      	movs	r2, #0
   11a5c:	711a      	strb	r2, [r3, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1278

            UARTx->LCR &= ~UART_LCR_DLAB_EN;
   11a5e:	68bb      	ldr	r3, [r7, #8]
   11a60:	7b1b      	ldrb	r3, [r3, #12]
   11a62:	b2db      	uxtb	r3, r3
   11a64:	f003 037f 	and.w	r3, r3, #127	; 0x7f
   11a68:	b2da      	uxtb	r2, r3
   11a6a:	68bb      	ldr	r3, [r7, #8]
   11a6c:	731a      	strb	r2, [r3, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1281

            // FDR value must be reset to default value
            UARTx->FDR = 0x10;
   11a6e:	68bb      	ldr	r3, [r7, #8]
   11a70:	2210      	movs	r2, #16
   11a72:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1283

            UARTx->ACR = UART_ACR_START | tmp;
   11a76:	68fb      	ldr	r3, [r7, #12]
   11a78:	f043 0201 	orr.w	r2, r3, #1
   11a7c:	68bb      	ldr	r3, [r7, #8]
   11a7e:	621a      	str	r2, [r3, #32]
   11a80:	e002      	b.n	11a88 <UART_ABCmd+0x12c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1287
        }
        else
        {
            UARTx->ACR = 0;
   11a82:	68bb      	ldr	r3, [r7, #8]
   11a84:	2200      	movs	r2, #0
   11a86:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1290
        }
    }
}
   11a88:	3710      	adds	r7, #16
   11a8a:	46bd      	mov	sp, r7
   11a8c:	bd80      	pop	{r7, pc}
   11a8e:	bf00      	nop
   11a90:	40010000 	.word	0x40010000
   11a94:	400a4000 	.word	0x400a4000

00011a98 <UART_ABClearIntPending>:
UART_ABClearIntPending():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1306
 *              - UART_AUTOBAUD_INTSTAT_ABEO: End of Auto-baud interrupt
 *              - UART_AUTOBAUD_INTSTAT_ABTO: Auto-baud time out interrupt
 * @return      none
 **********************************************************************/
void UART_ABClearIntPending(UART_ID_Type UartID, UART_ABEO_Type ABIntType)
{
   11a98:	b580      	push	{r7, lr}
   11a9a:	b084      	sub	sp, #16
   11a9c:	af00      	add	r7, sp, #0
   11a9e:	4602      	mov	r2, r0
   11aa0:	460b      	mov	r3, r1
   11aa2:	71fa      	strb	r2, [r7, #7]
   11aa4:	80bb      	strh	r3, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1307
    if (UartID == UART_1)
   11aa6:	79fb      	ldrb	r3, [r7, #7]
   11aa8:	2b01      	cmp	r3, #1
   11aaa:	d106      	bne.n	11aba <UART_ABClearIntPending+0x22>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1309
    {
        LPC_UART1->ACR |= ABIntType;
   11aac:	4b0f      	ldr	r3, [pc, #60]	; (11aec <UART_ABClearIntPending+0x54>)
   11aae:	4a0f      	ldr	r2, [pc, #60]	; (11aec <UART_ABClearIntPending+0x54>)
   11ab0:	6a11      	ldr	r1, [r2, #32]
   11ab2:	88ba      	ldrh	r2, [r7, #4]
   11ab4:	430a      	orrs	r2, r1
   11ab6:	621a      	str	r2, [r3, #32]
   11ab8:	e014      	b.n	11ae4 <UART_ABClearIntPending+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1311
    }
    else if (UartID == UART_4)
   11aba:	79fb      	ldrb	r3, [r7, #7]
   11abc:	2b04      	cmp	r3, #4
   11abe:	d106      	bne.n	11ace <UART_ABClearIntPending+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1313
    {
        LPC_UART4->ACR |= ABIntType;
   11ac0:	4b0b      	ldr	r3, [pc, #44]	; (11af0 <UART_ABClearIntPending+0x58>)
   11ac2:	4a0b      	ldr	r2, [pc, #44]	; (11af0 <UART_ABClearIntPending+0x58>)
   11ac4:	6a11      	ldr	r1, [r2, #32]
   11ac6:	88ba      	ldrh	r2, [r7, #4]
   11ac8:	430a      	orrs	r2, r1
   11aca:	621a      	str	r2, [r3, #32]
   11acc:	e00a      	b.n	11ae4 <UART_ABClearIntPending+0x4c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1317
    }
    else
    {   
        LPC_UART_TypeDef *UARTx = uart_get_pointer(UartID);
   11ace:	79fb      	ldrb	r3, [r7, #7]
   11ad0:	4618      	mov	r0, r3
   11ad2:	f7ff f967 	bl	10da4 <uart_get_pointer>
   11ad6:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1318
        UARTx->ACR |= ABIntType;
   11ad8:	68fb      	ldr	r3, [r7, #12]
   11ada:	6a1a      	ldr	r2, [r3, #32]
   11adc:	88bb      	ldrh	r3, [r7, #4]
   11ade:	431a      	orrs	r2, r3
   11ae0:	68fb      	ldr	r3, [r7, #12]
   11ae2:	621a      	str	r2, [r3, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1320
    }
}
   11ae4:	3710      	adds	r7, #16
   11ae6:	46bd      	mov	sp, r7
   11ae8:	bd80      	pop	{r7, pc}
   11aea:	bf00      	nop
   11aec:	40010000 	.word	0x40010000
   11af0:	400a4000 	.word	0x400a4000

00011af4 <UART_TxCmd>:
UART_TxCmd():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1336
 *              - ENABLE: Enable this function
                - DISABLE: Disable this function
 * @return none
 **********************************************************************/
void UART_TxCmd(UART_ID_Type UartID, FunctionalState NewState)
{
   11af4:	b580      	push	{r7, lr}
   11af6:	b084      	sub	sp, #16
   11af8:	af00      	add	r7, sp, #0
   11afa:	4602      	mov	r2, r0
   11afc:	460b      	mov	r3, r1
   11afe:	71fa      	strb	r2, [r7, #7]
   11b00:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1337
    if (NewState == ENABLE)
   11b02:	79bb      	ldrb	r3, [r7, #6]
   11b04:	2b01      	cmp	r3, #1
   11b06:	d120      	bne.n	11b4a <UART_TxCmd+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1339
    {
        if (UartID == UART_1)
   11b08:	79fb      	ldrb	r3, [r7, #7]
   11b0a:	2b01      	cmp	r3, #1
   11b0c:	d10a      	bne.n	11b24 <UART_TxCmd+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1341
        {
            LPC_UART1->TER |= UART_TER_TXEN;
   11b0e:	4b1d      	ldr	r3, [pc, #116]	; (11b84 <UART_TxCmd+0x90>)
   11b10:	4a1c      	ldr	r2, [pc, #112]	; (11b84 <UART_TxCmd+0x90>)
   11b12:	f892 2030 	ldrb.w	r2, [r2, #48]	; 0x30
   11b16:	b2d2      	uxtb	r2, r2
   11b18:	f062 027f 	orn	r2, r2, #127	; 0x7f
   11b1c:	b2d2      	uxtb	r2, r2
   11b1e:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
   11b22:	e02c      	b.n	11b7e <UART_TxCmd+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1343
        }
        else if (UartID == UART_4)
   11b24:	79fb      	ldrb	r3, [r7, #7]
   11b26:	2b04      	cmp	r3, #4
   11b28:	d029      	beq.n	11b7e <UART_TxCmd+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1349
        {
           // LPC_UART4->TER |= UART4_TER_TXEN;
        }
        else
        {
            LPC_UART_TypeDef *UARTx = uart_get_pointer(UartID);
   11b2a:	79fb      	ldrb	r3, [r7, #7]
   11b2c:	4618      	mov	r0, r3
   11b2e:	f7ff f939 	bl	10da4 <uart_get_pointer>
   11b32:	60f8      	str	r0, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1350
            UARTx->TER |= UART_TER_TXEN;
   11b34:	68fb      	ldr	r3, [r7, #12]
   11b36:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
   11b3a:	b2db      	uxtb	r3, r3
   11b3c:	f063 037f 	orn	r3, r3, #127	; 0x7f
   11b40:	b2da      	uxtb	r2, r3
   11b42:	68fb      	ldr	r3, [r7, #12]
   11b44:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
   11b48:	e019      	b.n	11b7e <UART_TxCmd+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1355
        }
    }
    else
    {
        if (UartID == UART_1)                     
   11b4a:	79fb      	ldrb	r3, [r7, #7]
   11b4c:	2b01      	cmp	r3, #1
   11b4e:	d107      	bne.n	11b60 <UART_TxCmd+0x6c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1357
        {
            LPC_UART1->TER &= (~UART_TER_TXEN) & UART_TER_BITMASK;
   11b50:	4b0c      	ldr	r3, [pc, #48]	; (11b84 <UART_TxCmd+0x90>)
   11b52:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
   11b56:	4b0b      	ldr	r3, [pc, #44]	; (11b84 <UART_TxCmd+0x90>)
   11b58:	2200      	movs	r2, #0
   11b5a:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
   11b5e:	e00e      	b.n	11b7e <UART_TxCmd+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1359
        }
        else if (UartID == UART_4)
   11b60:	79fb      	ldrb	r3, [r7, #7]
   11b62:	2b04      	cmp	r3, #4
   11b64:	d00b      	beq.n	11b7e <UART_TxCmd+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1365
        {
            //LPC_UART4->TER &= (~UART4_TER_TXEN) & UART4_TER_BITMASK;
        }
        else
        {
            LPC_UART_TypeDef *UARTx = uart_get_pointer(UartID);
   11b66:	79fb      	ldrb	r3, [r7, #7]
   11b68:	4618      	mov	r0, r3
   11b6a:	f7ff f91b 	bl	10da4 <uart_get_pointer>
   11b6e:	60b8      	str	r0, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1366
            UARTx->TER &= (~UART_TER_TXEN) & UART_TER_BITMASK;
   11b70:	68bb      	ldr	r3, [r7, #8]
   11b72:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
   11b76:	68bb      	ldr	r3, [r7, #8]
   11b78:	2200      	movs	r2, #0
   11b7a:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1369
        }
    }
}
   11b7e:	3710      	adds	r7, #16
   11b80:	46bd      	mov	sp, r7
   11b82:	bd80      	pop	{r7, pc}
   11b84:	40010000 	.word	0x40010000

00011b88 <UART_IrDAInvtInputCmd>:
UART_IrDAInvtInputCmd():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1382
 *              - ENABLE: Enable this function.
 *              - DISABLE: Disable this function.
 * @return none
 **********************************************************************/
void UART_IrDAInvtInputCmd(UART_ID_Type UartID, FunctionalState NewState)
{
   11b88:	b480      	push	{r7}
   11b8a:	b083      	sub	sp, #12
   11b8c:	af00      	add	r7, sp, #0
   11b8e:	4602      	mov	r2, r0
   11b90:	460b      	mov	r3, r1
   11b92:	71fa      	strb	r2, [r7, #7]
   11b94:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1383
    if (UartID != UART_4)
   11b96:	79fb      	ldrb	r3, [r7, #7]
   11b98:	2b04      	cmp	r3, #4
   11b9a:	d000      	beq.n	11b9e <UART_IrDAInvtInputCmd+0x16>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1384
        return;
   11b9c:	e012      	b.n	11bc4 <UART_IrDAInvtInputCmd+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1386
    
    if (NewState == ENABLE)
   11b9e:	79bb      	ldrb	r3, [r7, #6]
   11ba0:	2b01      	cmp	r3, #1
   11ba2:	d106      	bne.n	11bb2 <UART_IrDAInvtInputCmd+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1388
    {
        LPC_UART4->ICR |= UART_ICR_IRDAINV;
   11ba4:	4b0a      	ldr	r3, [pc, #40]	; (11bd0 <UART_IrDAInvtInputCmd+0x48>)
   11ba6:	4a0a      	ldr	r2, [pc, #40]	; (11bd0 <UART_IrDAInvtInputCmd+0x48>)
   11ba8:	6a52      	ldr	r2, [r2, #36]	; 0x24
   11baa:	f042 0202 	orr.w	r2, r2, #2
   11bae:	625a      	str	r2, [r3, #36]	; 0x24
   11bb0:	e008      	b.n	11bc4 <UART_IrDAInvtInputCmd+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1390
    }
    else if (NewState == DISABLE)
   11bb2:	79bb      	ldrb	r3, [r7, #6]
   11bb4:	2b00      	cmp	r3, #0
   11bb6:	d105      	bne.n	11bc4 <UART_IrDAInvtInputCmd+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1392
    {
        LPC_UART4->ICR &= (~UART_ICR_IRDAINV) & UART_ICR_BITMASK;
   11bb8:	4b05      	ldr	r3, [pc, #20]	; (11bd0 <UART_IrDAInvtInputCmd+0x48>)
   11bba:	4a05      	ldr	r2, [pc, #20]	; (11bd0 <UART_IrDAInvtInputCmd+0x48>)
   11bbc:	6a52      	ldr	r2, [r2, #36]	; 0x24
   11bbe:	f002 023d 	and.w	r2, r2, #61	; 0x3d
   11bc2:	625a      	str	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1395
    }
    
}
   11bc4:	370c      	adds	r7, #12
   11bc6:	46bd      	mov	sp, r7
   11bc8:	f85d 7b04 	ldr.w	r7, [sp], #4
   11bcc:	4770      	bx	lr
   11bce:	bf00      	nop
   11bd0:	400a4000 	.word	0x400a4000

00011bd4 <UART_IrDACmd>:
UART_IrDACmd():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1407
 *              - ENABLE: Enable this function.
 *              - DISABLE: Disable this function.
 * @return none
 **********************************************************************/
void UART_IrDACmd(UART_ID_Type UartID, FunctionalState NewState)
{
   11bd4:	b480      	push	{r7}
   11bd6:	b083      	sub	sp, #12
   11bd8:	af00      	add	r7, sp, #0
   11bda:	4602      	mov	r2, r0
   11bdc:	460b      	mov	r3, r1
   11bde:	71fa      	strb	r2, [r7, #7]
   11be0:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1408
    if (UartID != UART_4)
   11be2:	79fb      	ldrb	r3, [r7, #7]
   11be4:	2b04      	cmp	r3, #4
   11be6:	d000      	beq.n	11bea <UART_IrDACmd+0x16>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1409
        return;
   11be8:	e00f      	b.n	11c0a <UART_IrDACmd+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1411
    
    if (NewState == ENABLE)
   11bea:	79bb      	ldrb	r3, [r7, #6]
   11bec:	2b01      	cmp	r3, #1
   11bee:	d106      	bne.n	11bfe <UART_IrDACmd+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1413
    {
        LPC_UART4->ICR |= UART_ICR_IRDAEN;
   11bf0:	4b08      	ldr	r3, [pc, #32]	; (11c14 <UART_IrDACmd+0x40>)
   11bf2:	4a08      	ldr	r2, [pc, #32]	; (11c14 <UART_IrDACmd+0x40>)
   11bf4:	6a52      	ldr	r2, [r2, #36]	; 0x24
   11bf6:	f042 0201 	orr.w	r2, r2, #1
   11bfa:	625a      	str	r2, [r3, #36]	; 0x24
   11bfc:	e005      	b.n	11c0a <UART_IrDACmd+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1417
    }
    else
    {
        LPC_UART4->ICR &= (~UART_ICR_IRDAEN) & UART_ICR_BITMASK;
   11bfe:	4b05      	ldr	r3, [pc, #20]	; (11c14 <UART_IrDACmd+0x40>)
   11c00:	4a04      	ldr	r2, [pc, #16]	; (11c14 <UART_IrDACmd+0x40>)
   11c02:	6a52      	ldr	r2, [r2, #36]	; 0x24
   11c04:	f002 023e 	and.w	r2, r2, #62	; 0x3e
   11c08:	625a      	str	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1419
    }
}
   11c0a:	370c      	adds	r7, #12
   11c0c:	46bd      	mov	sp, r7
   11c0e:	f85d 7b04 	ldr.w	r7, [sp], #4
   11c12:	4770      	bx	lr
   11c14:	400a4000 	.word	0x400a4000

00011c18 <UART_IrDAPulseDivConfig>:
UART_IrDAPulseDivConfig():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1439
                - UART_IrDA_PULSEDIV256 : Pulse width = 256 * Tpclk

 * @return none
 **********************************************************************/
void UART_IrDAPulseDivConfig(UART_ID_Type UartID, UART_IrDA_PULSE_Type PulseDiv)
{
   11c18:	b480      	push	{r7}
   11c1a:	b085      	sub	sp, #20
   11c1c:	af00      	add	r7, sp, #0
   11c1e:	4602      	mov	r2, r0
   11c20:	460b      	mov	r3, r1
   11c22:	71fa      	strb	r2, [r7, #7]
   11c24:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1442
    uint32_t tmp, tmp1;

    if (UartID != UART_4)
   11c26:	79fb      	ldrb	r3, [r7, #7]
   11c28:	2b04      	cmp	r3, #4
   11c2a:	d000      	beq.n	11c2e <UART_IrDAPulseDivConfig+0x16>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1443
        return;
   11c2c:	e014      	b.n	11c58 <UART_IrDAPulseDivConfig+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1445

    tmp1 = UART_ICR_PULSEDIV(PulseDiv);
   11c2e:	79bb      	ldrb	r3, [r7, #6]
   11c30:	f003 0307 	and.w	r3, r3, #7
   11c34:	00db      	lsls	r3, r3, #3
   11c36:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1447

    tmp = LPC_UART4->ICR & (~ UART_ICR_PULSEDIV(7));
   11c38:	4b0a      	ldr	r3, [pc, #40]	; (11c64 <UART_IrDAPulseDivConfig+0x4c>)
   11c3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   11c3c:	f023 0338 	bic.w	r3, r3, #56	; 0x38
   11c40:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1449

    tmp |= tmp1 | UART_ICR_FIXPULSE_EN;
   11c42:	68fa      	ldr	r2, [r7, #12]
   11c44:	68bb      	ldr	r3, [r7, #8]
   11c46:	4313      	orrs	r3, r2
   11c48:	f043 0304 	orr.w	r3, r3, #4
   11c4c:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1451

    LPC_UART4->ICR = tmp & UART_ICR_BITMASK;
   11c4e:	4b05      	ldr	r3, [pc, #20]	; (11c64 <UART_IrDAPulseDivConfig+0x4c>)
   11c50:	68ba      	ldr	r2, [r7, #8]
   11c52:	f002 023f 	and.w	r2, r2, #63	; 0x3f
   11c56:	625a      	str	r2, [r3, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1452
}
   11c58:	3714      	adds	r7, #20
   11c5a:	46bd      	mov	sp, r7
   11c5c:	f85d 7b04 	ldr.w	r7, [sp], #4
   11c60:	4770      	bx	lr
   11c62:	bf00      	nop
   11c64:	400a4000 	.word	0x400a4000

00011c68 <UART_FullModemForcePinState>:
UART_FullModemForcePinState():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1470
 * @return none
 **********************************************************************/
void UART_FullModemForcePinState(UART_ID_Type UartID,
                                                    UART_MODEM_PIN_Type Pin,
                                                    UART1_SignalState NewState)
{
   11c68:	b480      	push	{r7}
   11c6a:	b085      	sub	sp, #20
   11c6c:	af00      	add	r7, sp, #0
   11c6e:	4613      	mov	r3, r2
   11c70:	4602      	mov	r2, r0
   11c72:	71fa      	strb	r2, [r7, #7]
   11c74:	460a      	mov	r2, r1
   11c76:	71ba      	strb	r2, [r7, #6]
   11c78:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1471
    uint8_t tmp = 0;
   11c7a:	2300      	movs	r3, #0
   11c7c:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1472
    if (UartID != UART_1)
   11c7e:	79fb      	ldrb	r3, [r7, #7]
   11c80:	2b01      	cmp	r3, #1
   11c82:	d000      	beq.n	11c86 <UART_FullModemForcePinState+0x1e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1473
        return;
   11c84:	e024      	b.n	11cd0 <UART_FullModemForcePinState+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1474
    switch (Pin)
   11c86:	79bb      	ldrb	r3, [r7, #6]
   11c88:	2b00      	cmp	r3, #0
   11c8a:	d002      	beq.n	11c92 <UART_FullModemForcePinState+0x2a>
   11c8c:	2b01      	cmp	r3, #1
   11c8e:	d003      	beq.n	11c98 <UART_FullModemForcePinState+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1485
        case UART1_MODEM_PIN_RTS:
            tmp = UART1_MCR_RTS_CTRL;
            break;

        default:
            break;
   11c90:	e005      	b.n	11c9e <UART_FullModemForcePinState+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1477
    if (UartID != UART_1)
        return;
    switch (Pin)
    {
        case UART1_MODEM_PIN_DTR:
            tmp = UART1_MCR_DTR_CTRL;
   11c92:	2301      	movs	r3, #1
   11c94:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1478
            break;
   11c96:	e002      	b.n	11c9e <UART_FullModemForcePinState+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1481

        case UART1_MODEM_PIN_RTS:
            tmp = UART1_MCR_RTS_CTRL;
   11c98:	2302      	movs	r3, #2
   11c9a:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1482
            break;
   11c9c:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1488

        default:
            break;
    }

    if (NewState == ACTIVE)
   11c9e:	797b      	ldrb	r3, [r7, #5]
   11ca0:	2b01      	cmp	r3, #1
   11ca2:	d108      	bne.n	11cb6 <UART_FullModemForcePinState+0x4e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1490
    {
        LPC_UART1->MCR |= tmp;
   11ca4:	4b0d      	ldr	r3, [pc, #52]	; (11cdc <UART_FullModemForcePinState+0x74>)
   11ca6:	4a0d      	ldr	r2, [pc, #52]	; (11cdc <UART_FullModemForcePinState+0x74>)
   11ca8:	7c12      	ldrb	r2, [r2, #16]
   11caa:	b2d1      	uxtb	r1, r2
   11cac:	7bfa      	ldrb	r2, [r7, #15]
   11cae:	430a      	orrs	r2, r1
   11cb0:	b2d2      	uxtb	r2, r2
   11cb2:	741a      	strb	r2, [r3, #16]
   11cb4:	e00c      	b.n	11cd0 <UART_FullModemForcePinState+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1494
    }
    else
    {
        LPC_UART1->MCR &= (~tmp) & UART1_MCR_BITMASK;
   11cb6:	4b09      	ldr	r3, [pc, #36]	; (11cdc <UART_FullModemForcePinState+0x74>)
   11cb8:	4a08      	ldr	r2, [pc, #32]	; (11cdc <UART_FullModemForcePinState+0x74>)
   11cba:	7c12      	ldrb	r2, [r2, #16]
   11cbc:	b2d1      	uxtb	r1, r2
   11cbe:	7bfa      	ldrb	r2, [r7, #15]
   11cc0:	43d2      	mvns	r2, r2
   11cc2:	b2d2      	uxtb	r2, r2
   11cc4:	400a      	ands	r2, r1
   11cc6:	b2d2      	uxtb	r2, r2
   11cc8:	f022 020c 	bic.w	r2, r2, #12
   11ccc:	b2d2      	uxtb	r2, r2
   11cce:	741a      	strb	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1496
    }
}
   11cd0:	3714      	adds	r7, #20
   11cd2:	46bd      	mov	sp, r7
   11cd4:	f85d 7b04 	ldr.w	r7, [sp], #4
   11cd8:	4770      	bx	lr
   11cda:	bf00      	nop
   11cdc:	40010000 	.word	0x40010000

00011ce0 <UART_FullModemConfigMode>:
UART_FullModemConfigMode():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1513
                - DISABLE: Disable this mode.
 * @return none
 **********************************************************************/
void UART_FullModemConfigMode(UART_ID_Type UartID, UART_MODEM_MODE_Type Mode,
                                            FunctionalState NewState)
{
   11ce0:	b480      	push	{r7}
   11ce2:	b085      	sub	sp, #20
   11ce4:	af00      	add	r7, sp, #0
   11ce6:	4613      	mov	r3, r2
   11ce8:	4602      	mov	r2, r0
   11cea:	71fa      	strb	r2, [r7, #7]
   11cec:	460a      	mov	r2, r1
   11cee:	71ba      	strb	r2, [r7, #6]
   11cf0:	717b      	strb	r3, [r7, #5]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1516
    uint8_t tmp;

    if(UartID != UART_1)
   11cf2:	79fb      	ldrb	r3, [r7, #7]
   11cf4:	2b01      	cmp	r3, #1
   11cf6:	d000      	beq.n	11cfa <UART_FullModemConfigMode+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1517
        return;
   11cf8:	e029      	b.n	11d4e <UART_FullModemConfigMode+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1519
    
    switch(Mode)
   11cfa:	79bb      	ldrb	r3, [r7, #6]
   11cfc:	2b01      	cmp	r3, #1
   11cfe:	d007      	beq.n	11d10 <UART_FullModemConfigMode+0x30>
   11d00:	2b02      	cmp	r3, #2
   11d02:	d008      	beq.n	11d16 <UART_FullModemConfigMode+0x36>
   11d04:	2b00      	cmp	r3, #0
   11d06:	d000      	beq.n	11d0a <UART_FullModemConfigMode+0x2a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1534
        case UART1_MODEM_MODE_AUTO_CTS:
            tmp = UART1_MCR_AUTO_CTS_EN;
            break;

        default:
            break;
   11d08:	e008      	b.n	11d1c <UART_FullModemConfigMode+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1522
        return;
    
    switch(Mode)
    {
        case UART1_MODEM_MODE_LOOPBACK:
            tmp = UART1_MCR_LOOPB_EN;
   11d0a:	2310      	movs	r3, #16
   11d0c:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1523
            break;
   11d0e:	e005      	b.n	11d1c <UART_FullModemConfigMode+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1526

        case UART1_MODEM_MODE_AUTO_RTS:
            tmp = UART1_MCR_AUTO_RTS_EN;
   11d10:	2340      	movs	r3, #64	; 0x40
   11d12:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1527
            break;
   11d14:	e002      	b.n	11d1c <UART_FullModemConfigMode+0x3c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1530

        case UART1_MODEM_MODE_AUTO_CTS:
            tmp = UART1_MCR_AUTO_CTS_EN;
   11d16:	2380      	movs	r3, #128	; 0x80
   11d18:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1531
            break;
   11d1a:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1537

        default:
            break;
    }

    if (NewState == ENABLE)
   11d1c:	797b      	ldrb	r3, [r7, #5]
   11d1e:	2b01      	cmp	r3, #1
   11d20:	d108      	bne.n	11d34 <UART_FullModemConfigMode+0x54>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1539
    {
        LPC_UART1->MCR |= tmp;
   11d22:	4b0d      	ldr	r3, [pc, #52]	; (11d58 <UART_FullModemConfigMode+0x78>)
   11d24:	4a0c      	ldr	r2, [pc, #48]	; (11d58 <UART_FullModemConfigMode+0x78>)
   11d26:	7c12      	ldrb	r2, [r2, #16]
   11d28:	b2d1      	uxtb	r1, r2
   11d2a:	7bfa      	ldrb	r2, [r7, #15]
   11d2c:	430a      	orrs	r2, r1
   11d2e:	b2d2      	uxtb	r2, r2
   11d30:	741a      	strb	r2, [r3, #16]
   11d32:	e00c      	b.n	11d4e <UART_FullModemConfigMode+0x6e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1543
    }
    else
    {
        LPC_UART1->MCR &= (~tmp) & UART1_MCR_BITMASK;
   11d34:	4b08      	ldr	r3, [pc, #32]	; (11d58 <UART_FullModemConfigMode+0x78>)
   11d36:	4a08      	ldr	r2, [pc, #32]	; (11d58 <UART_FullModemConfigMode+0x78>)
   11d38:	7c12      	ldrb	r2, [r2, #16]
   11d3a:	b2d1      	uxtb	r1, r2
   11d3c:	7bfa      	ldrb	r2, [r7, #15]
   11d3e:	43d2      	mvns	r2, r2
   11d40:	b2d2      	uxtb	r2, r2
   11d42:	400a      	ands	r2, r1
   11d44:	b2d2      	uxtb	r2, r2
   11d46:	f022 020c 	bic.w	r2, r2, #12
   11d4a:	b2d2      	uxtb	r2, r2
   11d4c:	741a      	strb	r2, [r3, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1545
    }
}
   11d4e:	3714      	adds	r7, #20
   11d50:	46bd      	mov	sp, r7
   11d52:	f85d 7b04 	ldr.w	r7, [sp], #4
   11d56:	4770      	bx	lr
   11d58:	40010000 	.word	0x40010000

00011d5c <UART_FullModemGetStatus>:
UART_FullModemGetStatus():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1561
 *          modem register could not be correct. So this function used to
 *          read modem status register in one time only, then the return value
 *          used to check all flags.
 **********************************************************************/
uint8_t UART_FullModemGetStatus(UART_ID_Type UartID)
{
   11d5c:	b480      	push	{r7}
   11d5e:	b083      	sub	sp, #12
   11d60:	af00      	add	r7, sp, #0
   11d62:	4603      	mov	r3, r0
   11d64:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1562
    if(UartID != UART_1)
   11d66:	79fb      	ldrb	r3, [r7, #7]
   11d68:	2b01      	cmp	r3, #1
   11d6a:	d001      	beq.n	11d70 <UART_FullModemGetStatus+0x14>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1563
        return  0;
   11d6c:	2300      	movs	r3, #0
   11d6e:	e002      	b.n	11d76 <UART_FullModemGetStatus+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1565
    
    return ((LPC_UART1->MSR) & UART1_MSR_BITMASK);
   11d70:	4b04      	ldr	r3, [pc, #16]	; (11d84 <UART_FullModemGetStatus+0x28>)
   11d72:	7e1b      	ldrb	r3, [r3, #24]
   11d74:	b2db      	uxtb	r3, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1566
}
   11d76:	4618      	mov	r0, r3
   11d78:	370c      	adds	r7, #12
   11d7a:	46bd      	mov	sp, r7
   11d7c:	f85d 7b04 	ldr.w	r7, [sp], #4
   11d80:	4770      	bx	lr
   11d82:	bf00      	nop
   11d84:	40010000 	.word	0x40010000

00011d88 <UART_RS485Config>:
UART_RS485Config():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1580
*                    that contains the configuration information for specified UART
*                    in RS485 mode.
 * @return      None
 **********************************************************************/
void UART_RS485Config(UART_ID_Type UartID, UART1_RS485_CTRLCFG_Type *RS485ConfigStruct)
{
   11d88:	b580      	push	{r7, lr}
   11d8a:	b088      	sub	sp, #32
   11d8c:	af00      	add	r7, sp, #0
   11d8e:	4603      	mov	r3, r0
   11d90:	6039      	str	r1, [r7, #0]
   11d92:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1584
    uint32_t tmp;
    __IO uint32_t *RS485DLY, *ADRMATCH, *RS485CTRL, *LCR;

    tmp = 0;
   11d94:	2300      	movs	r3, #0
   11d96:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1585
    if (UartID == UART_1)
   11d98:	79fb      	ldrb	r3, [r7, #7]
   11d9a:	2b01      	cmp	r3, #1
   11d9c:	d108      	bne.n	11db0 <UART_RS485Config+0x28>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1587
    {
        RS485DLY = (__IO uint32_t *)&LPC_UART1->RS485DLY;
   11d9e:	4b38      	ldr	r3, [pc, #224]	; (11e80 <UART_RS485Config+0xf8>)
   11da0:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1588
        ADRMATCH = (__IO uint32_t *)&LPC_UART1->ADRMATCH;
   11da2:	4b38      	ldr	r3, [pc, #224]	; (11e84 <UART_RS485Config+0xfc>)
   11da4:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1589
        LCR = (__IO uint32_t *)&LPC_UART1->LCR;
   11da6:	4b38      	ldr	r3, [pc, #224]	; (11e88 <UART_RS485Config+0x100>)
   11da8:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1590
        RS485CTRL =  (__IO uint32_t *)&LPC_UART1->RS485CTRL;
   11daa:	4b38      	ldr	r3, [pc, #224]	; (11e8c <UART_RS485Config+0x104>)
   11dac:	613b      	str	r3, [r7, #16]
   11dae:	e01c      	b.n	11dea <UART_RS485Config+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1592
    }
    else if (UartID == UART_4)
   11db0:	79fb      	ldrb	r3, [r7, #7]
   11db2:	2b04      	cmp	r3, #4
   11db4:	d108      	bne.n	11dc8 <UART_RS485Config+0x40>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1594
    {
        RS485DLY = (__IO uint32_t *)&LPC_UART4->RS485DLY;
   11db6:	4b36      	ldr	r3, [pc, #216]	; (11e90 <UART_RS485Config+0x108>)
   11db8:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1595
        ADRMATCH = (__IO uint32_t *)&LPC_UART4->ADRMATCH;
   11dba:	4b36      	ldr	r3, [pc, #216]	; (11e94 <UART_RS485Config+0x10c>)
   11dbc:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1596
        LCR = (__IO uint32_t *)&LPC_UART4->LCR;
   11dbe:	4b36      	ldr	r3, [pc, #216]	; (11e98 <UART_RS485Config+0x110>)
   11dc0:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1597
        RS485CTRL =  (__IO uint32_t *)&LPC_UART4->RS485CTRL;
   11dc2:	4b36      	ldr	r3, [pc, #216]	; (11e9c <UART_RS485Config+0x114>)
   11dc4:	613b      	str	r3, [r7, #16]
   11dc6:	e010      	b.n	11dea <UART_RS485Config+0x62>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1601
    }
    else
    {
        LPC_UART_TypeDef *UARTx = uart_get_pointer(UartID);
   11dc8:	79fb      	ldrb	r3, [r7, #7]
   11dca:	4618      	mov	r0, r3
   11dcc:	f7fe ffea 	bl	10da4 <uart_get_pointer>
   11dd0:	60b8      	str	r0, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1602
        RS485DLY = (__IO uint32_t *)&UARTx->RS485DLY;
   11dd2:	68bb      	ldr	r3, [r7, #8]
   11dd4:	3354      	adds	r3, #84	; 0x54
   11dd6:	61bb      	str	r3, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1603
        ADRMATCH = (__IO uint32_t *)&UARTx->ADRMATCH;
   11dd8:	68bb      	ldr	r3, [r7, #8]
   11dda:	3350      	adds	r3, #80	; 0x50
   11ddc:	617b      	str	r3, [r7, #20]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1604
        LCR = (__IO uint32_t *)&UARTx->LCR;
   11dde:	68bb      	ldr	r3, [r7, #8]
   11de0:	330c      	adds	r3, #12
   11de2:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1605
         RS485CTRL =  (__IO uint32_t *)&UARTx->RS485CTRL;
   11de4:	68bb      	ldr	r3, [r7, #8]
   11de6:	334c      	adds	r3, #76	; 0x4c
   11de8:	613b      	str	r3, [r7, #16]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1608
    }
    // If Auto Direction Control is enabled -  This function is used in Master mode
    if (RS485ConfigStruct->AutoDirCtrl_State == ENABLE)
   11dea:	683b      	ldr	r3, [r7, #0]
   11dec:	78db      	ldrb	r3, [r3, #3]
   11dee:	2b01      	cmp	r3, #1
   11df0:	d11b      	bne.n	11e2a <UART_RS485Config+0xa2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1610
    {
        tmp |= UART_RS485CTRL_DCTRL_EN;
   11df2:	69fb      	ldr	r3, [r7, #28]
   11df4:	f043 0310 	orr.w	r3, r3, #16
   11df8:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1613

        // Set polar
        if (RS485ConfigStruct->DirCtrlPol_Level == SET)
   11dfa:	683b      	ldr	r3, [r7, #0]
   11dfc:	795b      	ldrb	r3, [r3, #5]
   11dfe:	2b01      	cmp	r3, #1
   11e00:	d103      	bne.n	11e0a <UART_RS485Config+0x82>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1615
        {
            tmp |= UART_RS485CTRL_OINV_1;
   11e02:	69fb      	ldr	r3, [r7, #28]
   11e04:	f043 0320 	orr.w	r3, r3, #32
   11e08:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1620
        }

        // Set pin according to. This condition is only with UART1. The others are used
        // OE pin as default for control the direction of RS485 buffer IC
        if ((RS485ConfigStruct->DirCtrlPin == UART_RS485_DIRCTRL_DTR) &&
   11e0a:	683b      	ldr	r3, [r7, #0]
   11e0c:	791b      	ldrb	r3, [r3, #4]
   11e0e:	2b01      	cmp	r3, #1
   11e10:	d106      	bne.n	11e20 <UART_RS485Config+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1620 (discriminator 1)
   11e12:	79fb      	ldrb	r3, [r7, #7]
   11e14:	2b01      	cmp	r3, #1
   11e16:	d103      	bne.n	11e20 <UART_RS485Config+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1623
             (UartID == UART_1))
        {
            tmp |= UART_RS485CTRL_SEL_DTR;
   11e18:	69fb      	ldr	r3, [r7, #28]
   11e1a:	f043 0308 	orr.w	r3, r3, #8
   11e1e:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1627
        }

        // Fill delay time
        *RS485DLY = RS485ConfigStruct->DelayValue & UART_RS485DLY_BITMASK;
   11e20:	683b      	ldr	r3, [r7, #0]
   11e22:	79db      	ldrb	r3, [r3, #7]
   11e24:	461a      	mov	r2, r3
   11e26:	69bb      	ldr	r3, [r7, #24]
   11e28:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1631
    }
     
    // MultiDrop mode is enable
    if (RS485ConfigStruct->NormalMultiDropMode_State == ENABLE)
   11e2a:	683b      	ldr	r3, [r7, #0]
   11e2c:	781b      	ldrb	r3, [r3, #0]
   11e2e:	2b01      	cmp	r3, #1
   11e30:	d103      	bne.n	11e3a <UART_RS485Config+0xb2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1633
    {
        tmp |= UART_RS485CTRL_NMM_EN;
   11e32:	69fb      	ldr	r3, [r7, #28]
   11e34:	f043 0301 	orr.w	r3, r3, #1
   11e38:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1637
    }

    // Auto Address Detect function
    if (RS485ConfigStruct->AutoAddrDetect_State == ENABLE)
   11e3a:	683b      	ldr	r3, [r7, #0]
   11e3c:	789b      	ldrb	r3, [r3, #2]
   11e3e:	2b01      	cmp	r3, #1
   11e40:	d108      	bne.n	11e54 <UART_RS485Config+0xcc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1639
    {
        tmp |= UART_RS485CTRL_AADEN;
   11e42:	69fb      	ldr	r3, [r7, #28]
   11e44:	f043 0304 	orr.w	r3, r3, #4
   11e48:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1642

        // Fill Match Address
        *ADRMATCH = RS485ConfigStruct->MatchAddrValue & UART_RS485ADRMATCH_BITMASK;
   11e4a:	683b      	ldr	r3, [r7, #0]
   11e4c:	799b      	ldrb	r3, [r3, #6]
   11e4e:	461a      	mov	r2, r3
   11e50:	697b      	ldr	r3, [r7, #20]
   11e52:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1646
    }

    // Receiver is disable
    if (RS485ConfigStruct->Rx_State == DISABLE)
   11e54:	683b      	ldr	r3, [r7, #0]
   11e56:	785b      	ldrb	r3, [r3, #1]
   11e58:	2b00      	cmp	r3, #0
   11e5a:	d103      	bne.n	11e64 <UART_RS485Config+0xdc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1648
    {
        tmp |= UART_RS485CTRL_RX_DIS;
   11e5c:	69fb      	ldr	r3, [r7, #28]
   11e5e:	f043 0302 	orr.w	r3, r3, #2
   11e62:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1652
    }
     
    // write back to RS485 control register
    *RS485CTRL = tmp & UART_RS485CTRL_BITMASK;
   11e64:	69fb      	ldr	r3, [r7, #28]
   11e66:	f003 023f 	and.w	r2, r3, #63	; 0x3f
   11e6a:	693b      	ldr	r3, [r7, #16]
   11e6c:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1655

    // Enable Parity function and leave parity in stick '0' parity as default
    *LCR |= (UART_LCR_PARITY_F_0 | UART_LCR_PARITY_EN);
   11e6e:	68fb      	ldr	r3, [r7, #12]
   11e70:	681b      	ldr	r3, [r3, #0]
   11e72:	f043 0238 	orr.w	r2, r3, #56	; 0x38
   11e76:	68fb      	ldr	r3, [r7, #12]
   11e78:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1656
}
   11e7a:	3720      	adds	r7, #32
   11e7c:	46bd      	mov	sp, r7
   11e7e:	bd80      	pop	{r7, pc}
   11e80:	40010054 	.word	0x40010054
   11e84:	40010050 	.word	0x40010050
   11e88:	4001000c 	.word	0x4001000c
   11e8c:	4001004c 	.word	0x4001004c
   11e90:	400a4054 	.word	0x400a4054
   11e94:	400a4050 	.word	0x400a4050
   11e98:	400a400c 	.word	0x400a400c
   11e9c:	400a404c 	.word	0x400a404c

00011ea0 <UART_RS485ReceiverCmd>:
UART_RS485ReceiverCmd():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1667
 *                          - ENABLE: Enable this function.
 *                          - DISABLE: Disable this function.
 * @return      None
 **********************************************************************/
void UART_RS485ReceiverCmd(UART_ID_Type UartID, FunctionalState NewState)
{
   11ea0:	b580      	push	{r7, lr}
   11ea2:	b084      	sub	sp, #16
   11ea4:	af00      	add	r7, sp, #0
   11ea6:	4602      	mov	r2, r0
   11ea8:	460b      	mov	r3, r1
   11eaa:	71fa      	strb	r2, [r7, #7]
   11eac:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1669
    __IO uint32_t *RS485CTRL;
    if (UartID == UART_1)
   11eae:	79fb      	ldrb	r3, [r7, #7]
   11eb0:	2b01      	cmp	r3, #1
   11eb2:	d102      	bne.n	11eba <UART_RS485ReceiverCmd+0x1a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1671
    {
        RS485CTRL = (__IO uint32_t *)&LPC_UART1->RS485DLY;
   11eb4:	4b11      	ldr	r3, [pc, #68]	; (11efc <UART_RS485ReceiverCmd+0x5c>)
   11eb6:	60fb      	str	r3, [r7, #12]
   11eb8:	e00d      	b.n	11ed6 <UART_RS485ReceiverCmd+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1673
    }
    else if (UartID == UART_4)
   11eba:	79fb      	ldrb	r3, [r7, #7]
   11ebc:	2b04      	cmp	r3, #4
   11ebe:	d102      	bne.n	11ec6 <UART_RS485ReceiverCmd+0x26>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1675
    {
        RS485CTRL = (__IO uint32_t *)&LPC_UART4->RS485DLY;
   11ec0:	4b0f      	ldr	r3, [pc, #60]	; (11f00 <UART_RS485ReceiverCmd+0x60>)
   11ec2:	60fb      	str	r3, [r7, #12]
   11ec4:	e007      	b.n	11ed6 <UART_RS485ReceiverCmd+0x36>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1679
    }
    else
    {
        LPC_UART_TypeDef *UARTx = uart_get_pointer(UartID);
   11ec6:	79fb      	ldrb	r3, [r7, #7]
   11ec8:	4618      	mov	r0, r3
   11eca:	f7fe ff6b 	bl	10da4 <uart_get_pointer>
   11ece:	60b8      	str	r0, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1680
        RS485CTRL = (__IO uint32_t *)&UARTx->RS485DLY;
   11ed0:	68bb      	ldr	r3, [r7, #8]
   11ed2:	3354      	adds	r3, #84	; 0x54
   11ed4:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1682
    }
    if (NewState == ENABLE)
   11ed6:	79bb      	ldrb	r3, [r7, #6]
   11ed8:	2b01      	cmp	r3, #1
   11eda:	d106      	bne.n	11eea <UART_RS485ReceiverCmd+0x4a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1684
    {
        *RS485CTRL &= ~UART_RS485CTRL_RX_DIS;
   11edc:	68fb      	ldr	r3, [r7, #12]
   11ede:	681b      	ldr	r3, [r3, #0]
   11ee0:	f023 0202 	bic.w	r2, r3, #2
   11ee4:	68fb      	ldr	r3, [r7, #12]
   11ee6:	601a      	str	r2, [r3, #0]
   11ee8:	e005      	b.n	11ef6 <UART_RS485ReceiverCmd+0x56>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1688
    }
    else
    {
        *RS485CTRL |= UART_RS485CTRL_RX_DIS;
   11eea:	68fb      	ldr	r3, [r7, #12]
   11eec:	681b      	ldr	r3, [r3, #0]
   11eee:	f043 0202 	orr.w	r2, r3, #2
   11ef2:	68fb      	ldr	r3, [r7, #12]
   11ef4:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1690
    }
}
   11ef6:	3710      	adds	r7, #16
   11ef8:	46bd      	mov	sp, r7
   11efa:	bd80      	pop	{r7, pc}
   11efc:	40010054 	.word	0x40010054
   11f00:	400a4054 	.word	0x400a4054

00011f04 <UART_RS485Send>:
UART_RS485Send():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1702
 * @param[in]   ParityStick Parity Stick value, should be 0 or 1.
 * @return      None
 **********************************************************************/
uint32_t UART_RS485Send(UART_ID_Type UartID, uint8_t *pDatFrm,
                                            uint32_t size, uint8_t ParityStick)
{
   11f04:	b580      	push	{r7, lr}
   11f06:	b08a      	sub	sp, #40	; 0x28
   11f08:	af00      	add	r7, sp, #0
   11f0a:	60b9      	str	r1, [r7, #8]
   11f0c:	607a      	str	r2, [r7, #4]
   11f0e:	4602      	mov	r2, r0
   11f10:	73fa      	strb	r2, [r7, #15]
   11f12:	73bb      	strb	r3, [r7, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1706
    uint8_t tmp, save;
    uint32_t cnt;
    __IO uint32_t *LCR, *LSR;
    if (UartID == UART_1)
   11f14:	7bfb      	ldrb	r3, [r7, #15]
   11f16:	2b01      	cmp	r3, #1
   11f18:	d104      	bne.n	11f24 <UART_RS485Send+0x20>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1708
    {
        LCR = (__IO uint32_t *)&LPC_UART1->LCR;
   11f1a:	4b27      	ldr	r3, [pc, #156]	; (11fb8 <UART_RS485Send+0xb4>)
   11f1c:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1709
        LSR = (__IO uint32_t *)&LPC_UART1->LSR;
   11f1e:	4b27      	ldr	r3, [pc, #156]	; (11fbc <UART_RS485Send+0xb8>)
   11f20:	61fb      	str	r3, [r7, #28]
   11f22:	e012      	b.n	11f4a <UART_RS485Send+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1711
    }
    else if (UartID == UART_4)
   11f24:	7bfb      	ldrb	r3, [r7, #15]
   11f26:	2b04      	cmp	r3, #4
   11f28:	d104      	bne.n	11f34 <UART_RS485Send+0x30>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1713
    {
        LCR = (__IO uint32_t *)&LPC_UART4->LCR;
   11f2a:	4b25      	ldr	r3, [pc, #148]	; (11fc0 <UART_RS485Send+0xbc>)
   11f2c:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1714
        LSR = (__IO uint32_t *)&LPC_UART4->LSR;
   11f2e:	4b25      	ldr	r3, [pc, #148]	; (11fc4 <UART_RS485Send+0xc0>)
   11f30:	61fb      	str	r3, [r7, #28]
   11f32:	e00a      	b.n	11f4a <UART_RS485Send+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1718
    }
    else
    {
        LPC_UART_TypeDef *UARTx = uart_get_pointer(UartID);
   11f34:	7bfb      	ldrb	r3, [r7, #15]
   11f36:	4618      	mov	r0, r3
   11f38:	f7fe ff34 	bl	10da4 <uart_get_pointer>
   11f3c:	61b8      	str	r0, [r7, #24]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1719
        LCR = (__IO uint32_t *)&UARTx->LCR;
   11f3e:	69bb      	ldr	r3, [r7, #24]
   11f40:	330c      	adds	r3, #12
   11f42:	623b      	str	r3, [r7, #32]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1720
        LSR = (__IO uint32_t *)&UARTx->LSR;
   11f44:	69bb      	ldr	r3, [r7, #24]
   11f46:	3314      	adds	r3, #20
   11f48:	61fb      	str	r3, [r7, #28]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1723
    }

    if (ParityStick)
   11f4a:	7bbb      	ldrb	r3, [r7, #14]
   11f4c:	2b00      	cmp	r3, #0
   11f4e:	d01e      	beq.n	11f8e <UART_RS485Send+0x8a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1725
    {
        save = tmp = *LCR & UART_LCR_BITMASK;
   11f50:	6a3b      	ldr	r3, [r7, #32]
   11f52:	681b      	ldr	r3, [r3, #0]
   11f54:	75fb      	strb	r3, [r7, #23]
   11f56:	7dfb      	ldrb	r3, [r7, #23]
   11f58:	75bb      	strb	r3, [r7, #22]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1727

        tmp &= ~(UART_LCR_PARITY_EVEN);
   11f5a:	7dfb      	ldrb	r3, [r7, #23]
   11f5c:	f023 0310 	bic.w	r3, r3, #16
   11f60:	75fb      	strb	r3, [r7, #23]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1729

        *LCR = tmp;
   11f62:	7dfa      	ldrb	r2, [r7, #23]
   11f64:	6a3b      	ldr	r3, [r7, #32]
   11f66:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1731

        cnt = UART_Send(UartID, pDatFrm, size, BLOCKING);
   11f68:	7bfb      	ldrb	r3, [r7, #15]
   11f6a:	4618      	mov	r0, r3
   11f6c:	68b9      	ldr	r1, [r7, #8]
   11f6e:	687a      	ldr	r2, [r7, #4]
   11f70:	2301      	movs	r3, #1
   11f72:	f7ff f981 	bl	11278 <UART_Send>
   11f76:	6278      	str	r0, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1733

        while (!(*LSR & UART_LSR_TEMT));
   11f78:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1733 (discriminator 1)
   11f7a:	69fb      	ldr	r3, [r7, #28]
   11f7c:	681b      	ldr	r3, [r3, #0]
   11f7e:	f003 0340 	and.w	r3, r3, #64	; 0x40
   11f82:	2b00      	cmp	r3, #0
   11f84:	d0f9      	beq.n	11f7a <UART_RS485Send+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1735

        *LCR = save;
   11f86:	7dba      	ldrb	r2, [r7, #22]
   11f88:	6a3b      	ldr	r3, [r7, #32]
   11f8a:	601a      	str	r2, [r3, #0]
   11f8c:	e00e      	b.n	11fac <UART_RS485Send+0xa8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1739
    }
    else
    {
        cnt = UART_Send(UartID, pDatFrm, size, BLOCKING);
   11f8e:	7bfb      	ldrb	r3, [r7, #15]
   11f90:	4618      	mov	r0, r3
   11f92:	68b9      	ldr	r1, [r7, #8]
   11f94:	687a      	ldr	r2, [r7, #4]
   11f96:	2301      	movs	r3, #1
   11f98:	f7ff f96e 	bl	11278 <UART_Send>
   11f9c:	6278      	str	r0, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1741

        while (!(*LSR & UART_LSR_TEMT));
   11f9e:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1741 (discriminator 1)
   11fa0:	69fb      	ldr	r3, [r7, #28]
   11fa2:	681b      	ldr	r3, [r3, #0]
   11fa4:	f003 0340 	and.w	r3, r3, #64	; 0x40
   11fa8:	2b00      	cmp	r3, #0
   11faa:	d0f9      	beq.n	11fa0 <UART_RS485Send+0x9c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1744
    }

    return cnt;
   11fac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1745
}
   11fae:	4618      	mov	r0, r3
   11fb0:	3728      	adds	r7, #40	; 0x28
   11fb2:	46bd      	mov	sp, r7
   11fb4:	bd80      	pop	{r7, pc}
   11fb6:	bf00      	nop
   11fb8:	4001000c 	.word	0x4001000c
   11fbc:	40010014 	.word	0x40010014
   11fc0:	400a400c 	.word	0x400a400c
   11fc4:	400a4014 	.word	0x400a4014

00011fc8 <UART_RS485SendSlvAddr>:
UART_RS485SendSlvAddr():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1754
 * @param[in]   UARTx   LPC_UART1 (only)
 * @param[in]   SlvAddr Slave Address.
 * @return      None
 **********************************************************************/
void UART_RS485SendSlvAddr(UART_ID_Type UartID, uint8_t SlvAddr)
{
   11fc8:	b580      	push	{r7, lr}
   11fca:	b082      	sub	sp, #8
   11fcc:	af00      	add	r7, sp, #0
   11fce:	4602      	mov	r2, r0
   11fd0:	460b      	mov	r3, r1
   11fd2:	71fa      	strb	r2, [r7, #7]
   11fd4:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1755
    UART_RS485Send(UartID, &SlvAddr, 1, 1);
   11fd6:	79fa      	ldrb	r2, [r7, #7]
   11fd8:	1dbb      	adds	r3, r7, #6
   11fda:	4610      	mov	r0, r2
   11fdc:	4619      	mov	r1, r3
   11fde:	2201      	movs	r2, #1
   11fe0:	2301      	movs	r3, #1
   11fe2:	f7ff ff8f 	bl	11f04 <UART_RS485Send>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1756
}
   11fe6:	3708      	adds	r7, #8
   11fe8:	46bd      	mov	sp, r7
   11fea:	bd80      	pop	{r7, pc}

00011fec <UART_RS485SendData>:
UART_RS485SendData():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1766
 * @param[in]   pData Pointer to data to be sent.
 * @param[in]   size Size of data frame to be sent.
 * @return      None
 **********************************************************************/
uint32_t UART_RS485SendData(UART_ID_Type UartID, uint8_t *pData, uint32_t size)
{
   11fec:	b580      	push	{r7, lr}
   11fee:	b084      	sub	sp, #16
   11ff0:	af00      	add	r7, sp, #0
   11ff2:	4603      	mov	r3, r0
   11ff4:	60b9      	str	r1, [r7, #8]
   11ff6:	607a      	str	r2, [r7, #4]
   11ff8:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1767
    return (UART_RS485Send(UartID, pData, size, 0));
   11ffa:	7bfb      	ldrb	r3, [r7, #15]
   11ffc:	4618      	mov	r0, r3
   11ffe:	68b9      	ldr	r1, [r7, #8]
   12000:	687a      	ldr	r2, [r7, #4]
   12002:	2300      	movs	r3, #0
   12004:	f7ff ff7e 	bl	11f04 <UART_RS485Send>
   12008:	4603      	mov	r3, r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Driver/Source/lpc177x_8x_uart.c:1768
}
   1200a:	4618      	mov	r0, r3
   1200c:	3710      	adds	r7, #16
   1200e:	46bd      	mov	sp, r7
   12010:	bd80      	pop	{r7, pc}
   12012:	bf00      	nop

00012014 <Reset_Handler>:
Reset_Handler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:277
 *      linker script.
 *      __etext: End of code section, i.e., begin of data sections to copy from.
 *      __data_start__/__data_end__: RAM address range that data should be
 *      copied to. Both must be aligned to 4 bytes boundary.  */

    ldr    r1, =__etext
   12014:	4907      	ldr	r1, [pc, #28]	; (12034 <.flash_to_ram_loop+0x1a>)
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:278
    ldr    r2, =__data_start__
   12016:	4a08      	ldr	r2, [pc, #32]	; (12038 <.flash_to_ram_loop+0x1e>)
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:279
    ldr    r3, =__data_end__
   12018:	4b08      	ldr	r3, [pc, #32]	; (1203c <.flash_to_ram_loop+0x22>)

0001201a <.flash_to_ram_loop>:
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:286
#if 1
/* Here are two copies of loop implemenations. First one favors code size
 * and the second one favors performance. Default uses the first one.
 * Change to "#if 0" to use the second one */
.flash_to_ram_loop:
    cmp     r2, r3
   1201a:	429a      	cmp	r2, r3
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:287
    ittt    lt
   1201c:	bfbe      	ittt	lt
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:288
    ldrlt   r0, [r1], #4
   1201e:	f851 0b04 	ldrlt.w	r0, [r1], #4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:289
    strlt   r0, [r2], #4
   12022:	f842 0b04 	strlt.w	r0, [r2], #4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:290
    blt    .flash_to_ram_loop
   12026:	f7ff bff8 	blt.w	1201a <.flash_to_ram_loop>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:303
    bgt    .flash_to_ram_loop
.flash_to_ram_loop_end:
#endif

#ifndef __NO_SYSTEM_INIT
    ldr    r0, =SystemInit
   1202a:	4805      	ldr	r0, [pc, #20]	; (12040 <.flash_to_ram_loop+0x26>)
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:304
    blx    r0
   1202c:	4780      	blx	r0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:307
#endif

    ldr    r0, =_start
   1202e:	4805      	ldr	r0, [pc, #20]	; (12044 <.flash_to_ram_loop+0x2a>)
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:308
    bx    r0
   12030:	4700      	bx	r0
   12032:	0000      	.short	0x0000
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:277
 *      linker script.
 *      __etext: End of code section, i.e., begin of data sections to copy from.
 *      __data_start__/__data_end__: RAM address range that data should be
 *      copied to. Both must be aligned to 4 bytes boundary.  */

    ldr    r1, =__etext
   12034:	0001aff0 	.word	0x0001aff0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:278
    ldr    r2, =__data_start__
   12038:	10000000 	.word	0x10000000
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:279
    ldr    r3, =__data_end__
   1203c:	10000718 	.word	0x10000718
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:303
    bgt    .flash_to_ram_loop
.flash_to_ram_loop_end:
#endif

#ifndef __NO_SYSTEM_INIT
    ldr    r0, =SystemInit
   12040:	0001242d 	.word	0x0001242d
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:307
    blx    r0
#endif

    ldr    r0, =_start
   12044:	00000139 	.word	0x00000139

00012048 <NMI_Handler>:
NMI_Handler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:325
\handler_name :
    b    .
    .size    \handler_name, . - \handler_name
    .endm

    def_irq_handler    NMI_Handler
   12048:	e7fe      	b.n	12048 <NMI_Handler>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:326
    def_irq_handler    HardFault_Handler
   1204a:	e7fe      	b.n	1204a <NMI_Handler+0x2>

0001204c <MemManage_Handler>:
MemManage_Handler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:327
    def_irq_handler    MemManage_Handler
   1204c:	e7fe      	b.n	1204c <MemManage_Handler>

0001204e <BusFault_Handler>:
BusFault_Handler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:328
    def_irq_handler    BusFault_Handler
   1204e:	e7fe      	b.n	1204e <BusFault_Handler>

00012050 <UsageFault_Handler>:
UsageFault_Handler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:329
    def_irq_handler    UsageFault_Handler
   12050:	e7fe      	b.n	12050 <UsageFault_Handler>

00012052 <SVC_Handler>:
SVC_Handler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:330
    def_irq_handler    SVC_Handler
   12052:	e7fe      	b.n	12052 <SVC_Handler>

00012054 <DebugMon_Handler>:
DebugMon_Handler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:331
    def_irq_handler    DebugMon_Handler
   12054:	e7fe      	b.n	12054 <DebugMon_Handler>

00012056 <PendSV_Handler>:
PendSV_Handler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:332
    def_irq_handler    PendSV_Handler
   12056:	e7fe      	b.n	12056 <PendSV_Handler>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:333
    def_irq_handler    SysTick_Handler
   12058:	e7fe      	b.n	12058 <PendSV_Handler+0x2>

0001205a <Default_Handler>:
Default_Handler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:334
    def_irq_handler    Default_Handler
   1205a:	e7fe      	b.n	1205a <Default_Handler>

0001205c <WDT_IRQHandler>:
WDT_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:391
    def_irq_handler   USBWakeup_IRQHandler      // USB wake up
    def_irq_handler   Reserved_IRQHandler
#endif

#if defined(CHIP_LPC175X_6X) || defined(CHIP_LPC177X_8X)
    def_irq_handler     WDT_IRQHandler
   1205c:	e7fe      	b.n	1205c <WDT_IRQHandler>

0001205e <TIMER0_IRQHandler>:
TIMER0_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:392
    def_irq_handler     TIMER0_IRQHandler
   1205e:	e7fe      	b.n	1205e <TIMER0_IRQHandler>

00012060 <TIMER1_IRQHandler>:
TIMER1_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:393
    def_irq_handler     TIMER1_IRQHandler
   12060:	e7fe      	b.n	12060 <TIMER1_IRQHandler>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:394
    def_irq_handler     TIMER2_IRQHandler
   12062:	e7fe      	b.n	12062 <TIMER1_IRQHandler+0x2>

00012064 <TIMER3_IRQHandler>:
TIMER3_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:395
    def_irq_handler     TIMER3_IRQHandler
   12064:	e7fe      	b.n	12064 <TIMER3_IRQHandler>

00012066 <UART0_IRQHandler>:
UART0_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:396
    def_irq_handler     UART0_IRQHandler
   12066:	e7fe      	b.n	12066 <UART0_IRQHandler>

00012068 <UART1_IRQHandler>:
UART1_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:397
    def_irq_handler     UART1_IRQHandler
   12068:	e7fe      	b.n	12068 <UART1_IRQHandler>

0001206a <UART2_IRQHandler>:
UART2_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:398
    def_irq_handler     UART2_IRQHandler
   1206a:	e7fe      	b.n	1206a <UART2_IRQHandler>

0001206c <UART3_IRQHandler>:
UART3_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:399
    def_irq_handler     UART3_IRQHandler
   1206c:	e7fe      	b.n	1206c <UART3_IRQHandler>

0001206e <PWM1_IRQHandler>:
PWM1_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:400
    def_irq_handler     PWM1_IRQHandler
   1206e:	e7fe      	b.n	1206e <PWM1_IRQHandler>

00012070 <I2C0_IRQHandler>:
I2C0_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:401
    def_irq_handler     I2C0_IRQHandler
   12070:	e7fe      	b.n	12070 <I2C0_IRQHandler>

00012072 <I2C1_IRQHandler>:
I2C1_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:402
    def_irq_handler     I2C1_IRQHandler
   12072:	e7fe      	b.n	12072 <I2C1_IRQHandler>

00012074 <I2C2_IRQHandler>:
I2C2_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:403
    def_irq_handler     I2C2_IRQHandler
   12074:	e7fe      	b.n	12074 <I2C2_IRQHandler>

00012076 <SPI_IRQHandler>:
SPI_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:404
    def_irq_handler     SPI_IRQHandler
   12076:	e7fe      	b.n	12076 <SPI_IRQHandler>

00012078 <SSP0_IRQHandler>:
SSP0_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:405
    def_irq_handler     SSP0_IRQHandler
   12078:	e7fe      	b.n	12078 <SSP0_IRQHandler>

0001207a <SSP1_IRQHandler>:
SSP1_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:406
    def_irq_handler     SSP1_IRQHandler
   1207a:	e7fe      	b.n	1207a <SSP1_IRQHandler>

0001207c <PLL0_IRQHandler>:
PLL0_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:407
    def_irq_handler     PLL0_IRQHandler
   1207c:	e7fe      	b.n	1207c <PLL0_IRQHandler>

0001207e <RTC_IRQHandler>:
RTC_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:408
    def_irq_handler     RTC_IRQHandler
   1207e:	e7fe      	b.n	1207e <RTC_IRQHandler>

00012080 <EINT0_IRQHandler>:
EINT0_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:409
    def_irq_handler     EINT0_IRQHandler
   12080:	e7fe      	b.n	12080 <EINT0_IRQHandler>

00012082 <EINT1_IRQHandler>:
EINT1_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:410
    def_irq_handler     EINT1_IRQHandler
   12082:	e7fe      	b.n	12082 <EINT1_IRQHandler>

00012084 <EINT2_IRQHandler>:
EINT2_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:411
    def_irq_handler     EINT2_IRQHandler
   12084:	e7fe      	b.n	12084 <EINT2_IRQHandler>

00012086 <EINT3_IRQHandler>:
EINT3_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:412
    def_irq_handler     EINT3_IRQHandler
   12086:	e7fe      	b.n	12086 <EINT3_IRQHandler>

00012088 <ADC_IRQHandler>:
ADC_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:413
    def_irq_handler     ADC_IRQHandler
   12088:	e7fe      	b.n	12088 <ADC_IRQHandler>

0001208a <BOD_IRQHandler>:
BOD_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:414
    def_irq_handler     BOD_IRQHandler
   1208a:	e7fe      	b.n	1208a <BOD_IRQHandler>

0001208c <USB_IRQHandler>:
USB_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:415
    def_irq_handler     USB_IRQHandler
   1208c:	e7fe      	b.n	1208c <USB_IRQHandler>

0001208e <CAN_IRQHandler>:
CAN_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:416
    def_irq_handler     CAN_IRQHandler
   1208e:	e7fe      	b.n	1208e <CAN_IRQHandler>

00012090 <DMA_IRQHandler>:
DMA_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:417
    def_irq_handler     DMA_IRQHandler
   12090:	e7fe      	b.n	12090 <DMA_IRQHandler>

00012092 <I2S_IRQHandler>:
I2S_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:418
    def_irq_handler     I2S_IRQHandler
   12092:	e7fe      	b.n	12092 <I2S_IRQHandler>

00012094 <FNET_ENET_IRQHandler>:
FNET_ENET_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:419
    def_irq_handler     FNET_ENET_IRQHandler	// portage - Janis
   12094:	e7fe      	b.n	12094 <FNET_ENET_IRQHandler>

00012096 <SDIO_IRQHandler>:
SDIO_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:423
#if defined(CHIP_LPC175X_6X)
    def_irq_handler     RIT_IRQHandler
#else
    def_irq_handler     SDIO_IRQHandler
   12096:	e7fe      	b.n	12096 <SDIO_IRQHandler>

00012098 <MCPWM_IRQHandler>:
MCPWM_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:425
#endif
    def_irq_handler     MCPWM_IRQHandler
   12098:	e7fe      	b.n	12098 <MCPWM_IRQHandler>

0001209a <QEI_IRQHandler>:
QEI_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:426
    def_irq_handler     QEI_IRQHandler
   1209a:	e7fe      	b.n	1209a <QEI_IRQHandler>

0001209c <PLL1_IRQHandler>:
PLL1_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:427
    def_irq_handler     PLL1_IRQHandler
   1209c:	e7fe      	b.n	1209c <PLL1_IRQHandler>

0001209e <USBActivity_IRQHandler>:
USBActivity_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:428
    def_irq_handler     USBActivity_IRQHandler
   1209e:	e7fe      	b.n	1209e <USBActivity_IRQHandler>

000120a0 <CANActivity_IRQHandler>:
CANActivity_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:429
    def_irq_handler     CANActivity_IRQHandler
   120a0:	e7fe      	b.n	120a0 <CANActivity_IRQHandler>

000120a2 <UART4_IRQHandler>:
UART4_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:431
#if defined(CHIP_LPC177X_8X)
    def_irq_handler     UART4_IRQHandler
   120a2:	e7fe      	b.n	120a2 <UART4_IRQHandler>

000120a4 <SSP2_IRQHandler>:
SSP2_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:432
    def_irq_handler     SSP2_IRQHandler
   120a4:	e7fe      	b.n	120a4 <SSP2_IRQHandler>

000120a6 <LCD_IRQHandler>:
LCD_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:433
    def_irq_handler     LCD_IRQHandler
   120a6:	e7fe      	b.n	120a6 <LCD_IRQHandler>

000120a8 <GPIO_IRQHandler>:
GPIO_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:434
    def_irq_handler     GPIO_IRQHandler
   120a8:	e7fe      	b.n	120a8 <GPIO_IRQHandler>

000120aa <PWM0_IRQHandler>:
PWM0_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:435
    def_irq_handler     PWM0_IRQHandler
   120aa:	e7fe      	b.n	120aa <PWM0_IRQHandler>

000120ac <EEPROM_IRQHandler>:
EEPROM_IRQHandler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/GCC/startup_LPC177x_8x.S:436
    def_irq_handler     EEPROM_IRQHandler
   120ac:	e7fe      	b.n	120ac <EEPROM_IRQHandler>
   120ae:	bf00      	nop

000120b0 <SystemCoreClockUpdate>:
SystemCoreClockUpdate():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:383
 */
/*----------------------------------------------------------------------------
  Clock functions
 *----------------------------------------------------------------------------*/
void SystemCoreClockUpdate (void)            /* Get Core Clock Frequency      */
{
   120b0:	b480      	push	{r7}
   120b2:	b085      	sub	sp, #20
   120b4:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:385
  /* Determine clock frequency according to clock register values             */
  if ((LPC_SC->CCLKSEL &0x100) == 0) {            /* cclk = sysclk    */
   120b6:	4ba5      	ldr	r3, [pc, #660]	; (1234c <SystemCoreClockUpdate+0x29c>)
   120b8:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   120bc:	f403 7380 	and.w	r3, r3, #256	; 0x100
   120c0:	2b00      	cmp	r3, #0
   120c2:	d17d      	bne.n	121c0 <SystemCoreClockUpdate+0x110>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:386
    if ((LPC_SC->CLKSRCSEL & 0x01) == 0) {    /* sysclk = irc_clk */
   120c4:	4ba1      	ldr	r3, [pc, #644]	; (1234c <SystemCoreClockUpdate+0x29c>)
   120c6:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
   120ca:	f003 0301 	and.w	r3, r3, #1
   120ce:	2b00      	cmp	r3, #0
   120d0:	d132      	bne.n	12138 <SystemCoreClockUpdate+0x88>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:387
		  SystemCoreClock = __CLK_DIV(IRC_OSC , (LPC_SC->CCLKSEL & 0x1F));
   120d2:	4b9e      	ldr	r3, [pc, #632]	; (1234c <SystemCoreClockUpdate+0x29c>)
   120d4:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   120d8:	f003 031f 	and.w	r3, r3, #31
   120dc:	2b00      	cmp	r3, #0
   120de:	d008      	beq.n	120f2 <SystemCoreClockUpdate+0x42>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:387 (discriminator 1)
   120e0:	4b9a      	ldr	r3, [pc, #616]	; (1234c <SystemCoreClockUpdate+0x29c>)
   120e2:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   120e6:	f003 031f 	and.w	r3, r3, #31
   120ea:	4a99      	ldr	r2, [pc, #612]	; (12350 <SystemCoreClockUpdate+0x2a0>)
   120ec:	fbb2 f3f3 	udiv	r3, r2, r3
   120f0:	e000      	b.n	120f4 <SystemCoreClockUpdate+0x44>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:387 (discriminator 2)
   120f2:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:387 (discriminator 3)
   120f4:	4a97      	ldr	r2, [pc, #604]	; (12354 <SystemCoreClockUpdate+0x2a4>)
   120f6:	6013      	str	r3, [r2, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:388 (discriminator 3)
          PeripheralClock = __CLK_DIV(IRC_OSC , (LPC_SC->PCLKSEL & 0x1F));
   120f8:	4b94      	ldr	r3, [pc, #592]	; (1234c <SystemCoreClockUpdate+0x29c>)
   120fa:	f8d3 31a8 	ldr.w	r3, [r3, #424]	; 0x1a8
   120fe:	f003 031f 	and.w	r3, r3, #31
   12102:	2b00      	cmp	r3, #0
   12104:	d008      	beq.n	12118 <SystemCoreClockUpdate+0x68>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:388 (discriminator 1)
   12106:	4b91      	ldr	r3, [pc, #580]	; (1234c <SystemCoreClockUpdate+0x29c>)
   12108:	f8d3 31a8 	ldr.w	r3, [r3, #424]	; 0x1a8
   1210c:	f003 031f 	and.w	r3, r3, #31
   12110:	4a8f      	ldr	r2, [pc, #572]	; (12350 <SystemCoreClockUpdate+0x2a0>)
   12112:	fbb2 f3f3 	udiv	r3, r2, r3
   12116:	e000      	b.n	1211a <SystemCoreClockUpdate+0x6a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:388 (discriminator 2)
   12118:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:388 (discriminator 1)
   1211a:	4a8f      	ldr	r2, [pc, #572]	; (12358 <SystemCoreClockUpdate+0x2a8>)
   1211c:	6013      	str	r3, [r2, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:389 (discriminator 1)
          EMCClock        = (SystemCoreClock / ((LPC_SC->EMCCLKSEL & 0x01)+1));
   1211e:	4b8d      	ldr	r3, [pc, #564]	; (12354 <SystemCoreClockUpdate+0x2a4>)
   12120:	681a      	ldr	r2, [r3, #0]
   12122:	4b8a      	ldr	r3, [pc, #552]	; (1234c <SystemCoreClockUpdate+0x29c>)
   12124:	f8d3 3100 	ldr.w	r3, [r3, #256]	; 0x100
   12128:	f003 0301 	and.w	r3, r3, #1
   1212c:	3301      	adds	r3, #1
   1212e:	fbb2 f2f3 	udiv	r2, r2, r3
   12132:	4b8a      	ldr	r3, [pc, #552]	; (1235c <SystemCoreClockUpdate+0x2ac>)
   12134:	601a      	str	r2, [r3, #0]
   12136:	e0f3      	b.n	12320 <SystemCoreClockUpdate+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:392
    }
    else {                                        /* sysclk = osc_clk */
      if ((LPC_SC->SCS & 0x40) == 0) {
   12138:	4b84      	ldr	r3, [pc, #528]	; (1234c <SystemCoreClockUpdate+0x29c>)
   1213a:	f8d3 31a0 	ldr.w	r3, [r3, #416]	; 0x1a0
   1213e:	f003 0340 	and.w	r3, r3, #64	; 0x40
   12142:	2b00      	cmp	r3, #0
   12144:	d109      	bne.n	1215a <SystemCoreClockUpdate+0xaa>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:393
          SystemCoreClock = 0;                      /* this should never happen! */
   12146:	4b83      	ldr	r3, [pc, #524]	; (12354 <SystemCoreClockUpdate+0x2a4>)
   12148:	2200      	movs	r2, #0
   1214a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:394
          PeripheralClock = 0;
   1214c:	4b82      	ldr	r3, [pc, #520]	; (12358 <SystemCoreClockUpdate+0x2a8>)
   1214e:	2200      	movs	r2, #0
   12150:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:395
          EMCClock        = 0;
   12152:	4b82      	ldr	r3, [pc, #520]	; (1235c <SystemCoreClockUpdate+0x2ac>)
   12154:	2200      	movs	r2, #0
   12156:	601a      	str	r2, [r3, #0]
   12158:	e0e2      	b.n	12320 <SystemCoreClockUpdate+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:398
      }
      else {
          SystemCoreClock = __CLK_DIV(OSC_CLK , (LPC_SC->CCLKSEL & 0x1F));
   1215a:	4b7c      	ldr	r3, [pc, #496]	; (1234c <SystemCoreClockUpdate+0x29c>)
   1215c:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   12160:	f003 031f 	and.w	r3, r3, #31
   12164:	2b00      	cmp	r3, #0
   12166:	d008      	beq.n	1217a <SystemCoreClockUpdate+0xca>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:398 (discriminator 1)
   12168:	4b78      	ldr	r3, [pc, #480]	; (1234c <SystemCoreClockUpdate+0x29c>)
   1216a:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   1216e:	f003 031f 	and.w	r3, r3, #31
   12172:	4a77      	ldr	r2, [pc, #476]	; (12350 <SystemCoreClockUpdate+0x2a0>)
   12174:	fbb2 f3f3 	udiv	r3, r2, r3
   12178:	e000      	b.n	1217c <SystemCoreClockUpdate+0xcc>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:398 (discriminator 2)
   1217a:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:398 (discriminator 3)
   1217c:	4a75      	ldr	r2, [pc, #468]	; (12354 <SystemCoreClockUpdate+0x2a4>)
   1217e:	6013      	str	r3, [r2, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:399 (discriminator 3)
          PeripheralClock = __CLK_DIV(OSC_CLK , (LPC_SC->PCLKSEL & 0x1F));	  	
   12180:	4b72      	ldr	r3, [pc, #456]	; (1234c <SystemCoreClockUpdate+0x29c>)
   12182:	f8d3 31a8 	ldr.w	r3, [r3, #424]	; 0x1a8
   12186:	f003 031f 	and.w	r3, r3, #31
   1218a:	2b00      	cmp	r3, #0
   1218c:	d008      	beq.n	121a0 <SystemCoreClockUpdate+0xf0>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:399 (discriminator 1)
   1218e:	4b6f      	ldr	r3, [pc, #444]	; (1234c <SystemCoreClockUpdate+0x29c>)
   12190:	f8d3 31a8 	ldr.w	r3, [r3, #424]	; 0x1a8
   12194:	f003 031f 	and.w	r3, r3, #31
   12198:	4a6d      	ldr	r2, [pc, #436]	; (12350 <SystemCoreClockUpdate+0x2a0>)
   1219a:	fbb2 f3f3 	udiv	r3, r2, r3
   1219e:	e000      	b.n	121a2 <SystemCoreClockUpdate+0xf2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:399 (discriminator 2)
   121a0:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:399 (discriminator 3)
   121a2:	4a6d      	ldr	r2, [pc, #436]	; (12358 <SystemCoreClockUpdate+0x2a8>)
   121a4:	6013      	str	r3, [r2, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:400 (discriminator 3)
          EMCClock        = (SystemCoreClock / ((LPC_SC->EMCCLKSEL & 0x01)+1));
   121a6:	4b6b      	ldr	r3, [pc, #428]	; (12354 <SystemCoreClockUpdate+0x2a4>)
   121a8:	681a      	ldr	r2, [r3, #0]
   121aa:	4b68      	ldr	r3, [pc, #416]	; (1234c <SystemCoreClockUpdate+0x29c>)
   121ac:	f8d3 3100 	ldr.w	r3, [r3, #256]	; 0x100
   121b0:	f003 0301 	and.w	r3, r3, #1
   121b4:	3301      	adds	r3, #1
   121b6:	fbb2 f2f3 	udiv	r2, r2, r3
   121ba:	4b68      	ldr	r3, [pc, #416]	; (1235c <SystemCoreClockUpdate+0x2ac>)
   121bc:	601a      	str	r2, [r3, #0]
   121be:	e0af      	b.n	12320 <SystemCoreClockUpdate+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:405
      }
    }
  }
  else {                                          /* cclk = pll_clk */
    if ((LPC_SC->PLL0STAT & 0x100) == 0) {        /* PLL0 not enabled */
   121c0:	4b62      	ldr	r3, [pc, #392]	; (1234c <SystemCoreClockUpdate+0x29c>)
   121c2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
   121c6:	f403 7380 	and.w	r3, r3, #256	; 0x100
   121ca:	2b00      	cmp	r3, #0
   121cc:	d109      	bne.n	121e2 <SystemCoreClockUpdate+0x132>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:406
          SystemCoreClock = 0;                      /* this should never happen! */
   121ce:	4b61      	ldr	r3, [pc, #388]	; (12354 <SystemCoreClockUpdate+0x2a4>)
   121d0:	2200      	movs	r2, #0
   121d2:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:407
          PeripheralClock = 0;
   121d4:	4b60      	ldr	r3, [pc, #384]	; (12358 <SystemCoreClockUpdate+0x2a8>)
   121d6:	2200      	movs	r2, #0
   121d8:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:408
          EMCClock 		  = 0;
   121da:	4b60      	ldr	r3, [pc, #384]	; (1235c <SystemCoreClockUpdate+0x2ac>)
   121dc:	2200      	movs	r2, #0
   121de:	601a      	str	r2, [r3, #0]
   121e0:	e09e      	b.n	12320 <SystemCoreClockUpdate+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:411
    }
    else {
      if ((LPC_SC->CLKSRCSEL & 0x01) == 0) {    /* sysclk = irc_clk */
   121e2:	4b5a      	ldr	r3, [pc, #360]	; (1234c <SystemCoreClockUpdate+0x29c>)
   121e4:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
   121e8:	f003 0301 	and.w	r3, r3, #1
   121ec:	2b00      	cmp	r3, #0
   121ee:	d143      	bne.n	12278 <SystemCoreClockUpdate+0x1c8>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:412
          uint8_t mul = ((LPC_SC->PLL0STAT & 0x1F) + 1);
   121f0:	4b56      	ldr	r3, [pc, #344]	; (1234c <SystemCoreClockUpdate+0x29c>)
   121f2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
   121f6:	b2db      	uxtb	r3, r3
   121f8:	f003 031f 	and.w	r3, r3, #31
   121fc:	b2db      	uxtb	r3, r3
   121fe:	3301      	adds	r3, #1
   12200:	73fb      	strb	r3, [r7, #15]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:413
          uint8_t cpu_div = (LPC_SC->CCLKSEL & 0x1F);
   12202:	4b52      	ldr	r3, [pc, #328]	; (1234c <SystemCoreClockUpdate+0x29c>)
   12204:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   12208:	b2db      	uxtb	r3, r3
   1220a:	f003 031f 	and.w	r3, r3, #31
   1220e:	73bb      	strb	r3, [r7, #14]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:414
          uint8_t per_div = (LPC_SC->PCLKSEL & 0x1F);
   12210:	4b4e      	ldr	r3, [pc, #312]	; (1234c <SystemCoreClockUpdate+0x29c>)
   12212:	f8d3 31a8 	ldr.w	r3, [r3, #424]	; 0x1a8
   12216:	b2db      	uxtb	r3, r3
   12218:	f003 031f 	and.w	r3, r3, #31
   1221c:	737b      	strb	r3, [r7, #13]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:415
          uint8_t emc_div = (LPC_SC->EMCCLKSEL & 0x01)+1;
   1221e:	4b4b      	ldr	r3, [pc, #300]	; (1234c <SystemCoreClockUpdate+0x29c>)
   12220:	f8d3 3100 	ldr.w	r3, [r3, #256]	; 0x100
   12224:	b2db      	uxtb	r3, r3
   12226:	f003 0301 	and.w	r3, r3, #1
   1222a:	b2db      	uxtb	r3, r3
   1222c:	3301      	adds	r3, #1
   1222e:	733b      	strb	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:416
          SystemCoreClock = __CLK_DIV(IRC_OSC * mul , cpu_div);
   12230:	7bbb      	ldrb	r3, [r7, #14]
   12232:	2b00      	cmp	r3, #0
   12234:	d007      	beq.n	12246 <SystemCoreClockUpdate+0x196>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:416 (discriminator 1)
   12236:	7bfb      	ldrb	r3, [r7, #15]
   12238:	4a45      	ldr	r2, [pc, #276]	; (12350 <SystemCoreClockUpdate+0x2a0>)
   1223a:	fb02 f203 	mul.w	r2, r2, r3
   1223e:	7bbb      	ldrb	r3, [r7, #14]
   12240:	fbb2 f3f3 	udiv	r3, r2, r3
   12244:	e000      	b.n	12248 <SystemCoreClockUpdate+0x198>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:416 (discriminator 2)
   12246:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:416 (discriminator 3)
   12248:	4a42      	ldr	r2, [pc, #264]	; (12354 <SystemCoreClockUpdate+0x2a4>)
   1224a:	6013      	str	r3, [r2, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:417 (discriminator 3)
          PeripheralClock = __CLK_DIV(IRC_OSC * mul , per_div);
   1224c:	7b7b      	ldrb	r3, [r7, #13]
   1224e:	2b00      	cmp	r3, #0
   12250:	d007      	beq.n	12262 <SystemCoreClockUpdate+0x1b2>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:417 (discriminator 1)
   12252:	7bfb      	ldrb	r3, [r7, #15]
   12254:	4a3e      	ldr	r2, [pc, #248]	; (12350 <SystemCoreClockUpdate+0x2a0>)
   12256:	fb02 f203 	mul.w	r2, r2, r3
   1225a:	7b7b      	ldrb	r3, [r7, #13]
   1225c:	fbb2 f3f3 	udiv	r3, r2, r3
   12260:	e000      	b.n	12264 <SystemCoreClockUpdate+0x1b4>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:417 (discriminator 2)
   12262:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:417 (discriminator 1)
   12264:	4a3c      	ldr	r2, [pc, #240]	; (12358 <SystemCoreClockUpdate+0x2a8>)
   12266:	6013      	str	r3, [r2, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:418 (discriminator 1)
          EMCClock        = SystemCoreClock / emc_div;
   12268:	4b3a      	ldr	r3, [pc, #232]	; (12354 <SystemCoreClockUpdate+0x2a4>)
   1226a:	681a      	ldr	r2, [r3, #0]
   1226c:	7b3b      	ldrb	r3, [r7, #12]
   1226e:	fbb2 f2f3 	udiv	r2, r2, r3
   12272:	4b3a      	ldr	r3, [pc, #232]	; (1235c <SystemCoreClockUpdate+0x2ac>)
   12274:	601a      	str	r2, [r3, #0]
   12276:	e053      	b.n	12320 <SystemCoreClockUpdate+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:421
      }
      else {                                        /* sysclk = osc_clk */
        if ((LPC_SC->SCS & 0x40) == 0) {
   12278:	4b34      	ldr	r3, [pc, #208]	; (1234c <SystemCoreClockUpdate+0x29c>)
   1227a:	f8d3 31a0 	ldr.w	r3, [r3, #416]	; 0x1a0
   1227e:	f003 0340 	and.w	r3, r3, #64	; 0x40
   12282:	2b00      	cmp	r3, #0
   12284:	d109      	bne.n	1229a <SystemCoreClockUpdate+0x1ea>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:422
          SystemCoreClock = 0;                      /* this should never happen! */
   12286:	4b33      	ldr	r3, [pc, #204]	; (12354 <SystemCoreClockUpdate+0x2a4>)
   12288:	2200      	movs	r2, #0
   1228a:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:423
          PeripheralClock = 0;
   1228c:	4b32      	ldr	r3, [pc, #200]	; (12358 <SystemCoreClockUpdate+0x2a8>)
   1228e:	2200      	movs	r2, #0
   12290:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:424
          EMCClock 		  = 0;
   12292:	4b32      	ldr	r3, [pc, #200]	; (1235c <SystemCoreClockUpdate+0x2ac>)
   12294:	2200      	movs	r2, #0
   12296:	601a      	str	r2, [r3, #0]
   12298:	e042      	b.n	12320 <SystemCoreClockUpdate+0x270>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:427
        }
        else {
          uint8_t mul = ((LPC_SC->PLL0STAT & 0x1F) + 1);
   1229a:	4b2c      	ldr	r3, [pc, #176]	; (1234c <SystemCoreClockUpdate+0x29c>)
   1229c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
   122a0:	b2db      	uxtb	r3, r3
   122a2:	f003 031f 	and.w	r3, r3, #31
   122a6:	b2db      	uxtb	r3, r3
   122a8:	3301      	adds	r3, #1
   122aa:	72fb      	strb	r3, [r7, #11]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:428
          uint8_t cpu_div = (LPC_SC->CCLKSEL & 0x1F);
   122ac:	4b27      	ldr	r3, [pc, #156]	; (1234c <SystemCoreClockUpdate+0x29c>)
   122ae:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   122b2:	b2db      	uxtb	r3, r3
   122b4:	f003 031f 	and.w	r3, r3, #31
   122b8:	72bb      	strb	r3, [r7, #10]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:429
          uint8_t per_div = (LPC_SC->PCLKSEL & 0x1F);
   122ba:	4b24      	ldr	r3, [pc, #144]	; (1234c <SystemCoreClockUpdate+0x29c>)
   122bc:	f8d3 31a8 	ldr.w	r3, [r3, #424]	; 0x1a8
   122c0:	b2db      	uxtb	r3, r3
   122c2:	f003 031f 	and.w	r3, r3, #31
   122c6:	727b      	strb	r3, [r7, #9]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:430
		  uint8_t emc_div = (LPC_SC->EMCCLKSEL & 0x01)+1;
   122c8:	4b20      	ldr	r3, [pc, #128]	; (1234c <SystemCoreClockUpdate+0x29c>)
   122ca:	f8d3 3100 	ldr.w	r3, [r3, #256]	; 0x100
   122ce:	b2db      	uxtb	r3, r3
   122d0:	f003 0301 	and.w	r3, r3, #1
   122d4:	b2db      	uxtb	r3, r3
   122d6:	3301      	adds	r3, #1
   122d8:	723b      	strb	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:431
          SystemCoreClock = __CLK_DIV(OSC_CLK * mul , cpu_div);
   122da:	7abb      	ldrb	r3, [r7, #10]
   122dc:	2b00      	cmp	r3, #0
   122de:	d007      	beq.n	122f0 <SystemCoreClockUpdate+0x240>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:431 (discriminator 1)
   122e0:	7afb      	ldrb	r3, [r7, #11]
   122e2:	4a1b      	ldr	r2, [pc, #108]	; (12350 <SystemCoreClockUpdate+0x2a0>)
   122e4:	fb02 f203 	mul.w	r2, r2, r3
   122e8:	7abb      	ldrb	r3, [r7, #10]
   122ea:	fbb2 f3f3 	udiv	r3, r2, r3
   122ee:	e000      	b.n	122f2 <SystemCoreClockUpdate+0x242>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:431 (discriminator 2)
   122f0:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:431 (discriminator 3)
   122f2:	4a18      	ldr	r2, [pc, #96]	; (12354 <SystemCoreClockUpdate+0x2a4>)
   122f4:	6013      	str	r3, [r2, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:432 (discriminator 3)
          PeripheralClock = __CLK_DIV(OSC_CLK * mul , per_div);
   122f6:	7a7b      	ldrb	r3, [r7, #9]
   122f8:	2b00      	cmp	r3, #0
   122fa:	d007      	beq.n	1230c <SystemCoreClockUpdate+0x25c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:432 (discriminator 1)
   122fc:	7afb      	ldrb	r3, [r7, #11]
   122fe:	4a14      	ldr	r2, [pc, #80]	; (12350 <SystemCoreClockUpdate+0x2a0>)
   12300:	fb02 f203 	mul.w	r2, r2, r3
   12304:	7a7b      	ldrb	r3, [r7, #9]
   12306:	fbb2 f3f3 	udiv	r3, r2, r3
   1230a:	e000      	b.n	1230e <SystemCoreClockUpdate+0x25e>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:432 (discriminator 2)
   1230c:	2300      	movs	r3, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:432 (discriminator 3)
   1230e:	4a12      	ldr	r2, [pc, #72]	; (12358 <SystemCoreClockUpdate+0x2a8>)
   12310:	6013      	str	r3, [r2, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:433 (discriminator 3)
          EMCClock        = SystemCoreClock / emc_div;
   12312:	4b10      	ldr	r3, [pc, #64]	; (12354 <SystemCoreClockUpdate+0x2a4>)
   12314:	681a      	ldr	r2, [r3, #0]
   12316:	7a3b      	ldrb	r3, [r7, #8]
   12318:	fbb2 f2f3 	udiv	r2, r2, r3
   1231c:	4b0f      	ldr	r3, [pc, #60]	; (1235c <SystemCoreClockUpdate+0x2ac>)
   1231e:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:439
        }
      }
    }
  }
  /* ---update USBClock------------------*/
  if(LPC_SC->USBCLKSEL & (0x01<<8))//Use PLL0 as the input to the USB clock divider
   12320:	4b0a      	ldr	r3, [pc, #40]	; (1234c <SystemCoreClockUpdate+0x29c>)
   12322:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
   12326:	f403 7380 	and.w	r3, r3, #256	; 0x100
   1232a:	2b00      	cmp	r3, #0
   1232c:	d04a      	beq.n	123c4 <SystemCoreClockUpdate+0x314>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:441
  {
	  switch (LPC_SC->USBCLKSEL & 0x1F)
   1232e:	4b07      	ldr	r3, [pc, #28]	; (1234c <SystemCoreClockUpdate+0x29c>)
   12330:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
   12334:	f003 031f 	and.w	r3, r3, #31
   12338:	2b04      	cmp	r3, #4
   1233a:	d013      	beq.n	12364 <SystemCoreClockUpdate+0x2b4>
   1233c:	2b06      	cmp	r3, #6
   1233e:	d011      	beq.n	12364 <SystemCoreClockUpdate+0x2b4>
   12340:	2b00      	cmp	r3, #0
   12342:	d13a      	bne.n	123ba <SystemCoreClockUpdate+0x30a>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:444
	  {
	  case 0:
		  USBClock = 0; //no clock will be provided to the USB subsystem
   12344:	4b06      	ldr	r3, [pc, #24]	; (12360 <SystemCoreClockUpdate+0x2b0>)
   12346:	2200      	movs	r2, #0
   12348:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:445
		  break;
   1234a:	e03a      	b.n	123c2 <SystemCoreClockUpdate+0x312>
   1234c:	400fc000 	.word	0x400fc000
   12350:	00b71b00 	.word	0x00b71b00
   12354:	100002cc 	.word	0x100002cc
   12358:	100002d0 	.word	0x100002d0
   1235c:	100002d4 	.word	0x100002d4
   12360:	100002d8 	.word	0x100002d8
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:449
	  case 4:
	  case 6:
            {
                 uint8_t mul = ((LPC_SC->PLL0STAT & 0x1F) + 1);
   12364:	4b2e      	ldr	r3, [pc, #184]	; (12420 <SystemCoreClockUpdate+0x370>)
   12366:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
   1236a:	b2db      	uxtb	r3, r3
   1236c:	f003 031f 	and.w	r3, r3, #31
   12370:	b2db      	uxtb	r3, r3
   12372:	3301      	adds	r3, #1
   12374:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:450
                 uint8_t usb_div = (LPC_SC->USBCLKSEL & 0x1F);
   12376:	4b2a      	ldr	r3, [pc, #168]	; (12420 <SystemCoreClockUpdate+0x370>)
   12378:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
   1237c:	b2db      	uxtb	r3, r3
   1237e:	f003 031f 	and.w	r3, r3, #31
   12382:	71bb      	strb	r3, [r7, #6]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:451
		  if(LPC_SC->CLKSRCSEL & 0x01)	//pll_clk_in = main_osc
   12384:	4b26      	ldr	r3, [pc, #152]	; (12420 <SystemCoreClockUpdate+0x370>)
   12386:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
   1238a:	f003 0301 	and.w	r3, r3, #1
   1238e:	2b00      	cmp	r3, #0
   12390:	d009      	beq.n	123a6 <SystemCoreClockUpdate+0x2f6>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:452
			  USBClock = OSC_CLK * mul / usb_div;
   12392:	79fb      	ldrb	r3, [r7, #7]
   12394:	4a23      	ldr	r2, [pc, #140]	; (12424 <SystemCoreClockUpdate+0x374>)
   12396:	fb02 f203 	mul.w	r2, r2, r3
   1239a:	79bb      	ldrb	r3, [r7, #6]
   1239c:	fbb2 f2f3 	udiv	r2, r2, r3
   123a0:	4b21      	ldr	r3, [pc, #132]	; (12428 <SystemCoreClockUpdate+0x378>)
   123a2:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:456
		  else //pll_clk_in = irc_clk
			  USBClock = IRC_OSC * mul / usb_div;
            }
            break;
   123a4:	e00d      	b.n	123c2 <SystemCoreClockUpdate+0x312>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:454
                 uint8_t mul = ((LPC_SC->PLL0STAT & 0x1F) + 1);
                 uint8_t usb_div = (LPC_SC->USBCLKSEL & 0x1F);
		  if(LPC_SC->CLKSRCSEL & 0x01)	//pll_clk_in = main_osc
			  USBClock = OSC_CLK * mul / usb_div;
		  else //pll_clk_in = irc_clk
			  USBClock = IRC_OSC * mul / usb_div;
   123a6:	79fb      	ldrb	r3, [r7, #7]
   123a8:	4a1e      	ldr	r2, [pc, #120]	; (12424 <SystemCoreClockUpdate+0x374>)
   123aa:	fb02 f203 	mul.w	r2, r2, r3
   123ae:	79bb      	ldrb	r3, [r7, #6]
   123b0:	fbb2 f2f3 	udiv	r2, r2, r3
   123b4:	4b1c      	ldr	r3, [pc, #112]	; (12428 <SystemCoreClockUpdate+0x378>)
   123b6:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:456
            }
            break;
   123b8:	e003      	b.n	123c2 <SystemCoreClockUpdate+0x312>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:458
	  default:
		  USBClock = 0;  /* this should never happen! */
   123ba:	4b1b      	ldr	r3, [pc, #108]	; (12428 <SystemCoreClockUpdate+0x378>)
   123bc:	2200      	movs	r2, #0
   123be:	601a      	str	r2, [r3, #0]
   123c0:	e029      	b.n	12416 <SystemCoreClockUpdate+0x366>
   123c2:	e028      	b.n	12416 <SystemCoreClockUpdate+0x366>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:461
	  }
  }
  else if(LPC_SC->USBCLKSEL & (0x02<<8))//usb_input_clk = alt_pll (pll1)
   123c4:	4b16      	ldr	r3, [pc, #88]	; (12420 <SystemCoreClockUpdate+0x370>)
   123c6:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
   123ca:	f403 7300 	and.w	r3, r3, #512	; 0x200
   123ce:	2b00      	cmp	r3, #0
   123d0:	d01e      	beq.n	12410 <SystemCoreClockUpdate+0x360>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:463
  {
	  if(LPC_SC->CLKSRCSEL & 0x01)	//pll1_clk_in = main_osc
   123d2:	4b13      	ldr	r3, [pc, #76]	; (12420 <SystemCoreClockUpdate+0x370>)
   123d4:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
   123d8:	f003 0301 	and.w	r3, r3, #1
   123dc:	2b00      	cmp	r3, #0
   123de:	d00b      	beq.n	123f8 <SystemCoreClockUpdate+0x348>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:464
	  		USBClock = (OSC_CLK * ((LPC_SC->PLL1STAT & 0x1F) + 1));
   123e0:	4b0f      	ldr	r3, [pc, #60]	; (12420 <SystemCoreClockUpdate+0x370>)
   123e2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
   123e6:	f003 031f 	and.w	r3, r3, #31
   123ea:	3301      	adds	r3, #1
   123ec:	4a0d      	ldr	r2, [pc, #52]	; (12424 <SystemCoreClockUpdate+0x374>)
   123ee:	fb02 f203 	mul.w	r2, r2, r3
   123f2:	4b0d      	ldr	r3, [pc, #52]	; (12428 <SystemCoreClockUpdate+0x378>)
   123f4:	601a      	str	r2, [r3, #0]
   123f6:	e00e      	b.n	12416 <SystemCoreClockUpdate+0x366>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:466
	  else //pll1_clk_in = irc_clk
	  		USBClock = (IRC_OSC * ((LPC_SC->PLL0STAT & 0x1F) + 1));
   123f8:	4b09      	ldr	r3, [pc, #36]	; (12420 <SystemCoreClockUpdate+0x370>)
   123fa:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
   123fe:	f003 031f 	and.w	r3, r3, #31
   12402:	3301      	adds	r3, #1
   12404:	4a07      	ldr	r2, [pc, #28]	; (12424 <SystemCoreClockUpdate+0x374>)
   12406:	fb02 f203 	mul.w	r2, r2, r3
   1240a:	4b07      	ldr	r3, [pc, #28]	; (12428 <SystemCoreClockUpdate+0x378>)
   1240c:	601a      	str	r2, [r3, #0]
   1240e:	e002      	b.n	12416 <SystemCoreClockUpdate+0x366>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:469
  }
  else
	  USBClock = 0; /* this should never happen! */
   12410:	4b05      	ldr	r3, [pc, #20]	; (12428 <SystemCoreClockUpdate+0x378>)
   12412:	2200      	movs	r2, #0
   12414:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:470
}
   12416:	3714      	adds	r7, #20
   12418:	46bd      	mov	sp, r7
   1241a:	f85d 7b04 	ldr.w	r7, [sp], #4
   1241e:	4770      	bx	lr
   12420:	400fc000 	.word	0x400fc000
   12424:	00b71b00 	.word	0x00b71b00
   12428:	100002d8 	.word	0x100002d8

0001242c <SystemInit>:
SystemInit():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:484
 *
 * @brief  Setup the microcontroller system.
 *         Initialize the System.
 */
void SystemInit (void)
{
   1242c:	b580      	push	{r7, lr}
   1242e:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:486
#if (CLOCK_SETUP)                       /* Clock Setup                        */
  LPC_SC->SCS       = SCS_Val;
   12430:	4b36      	ldr	r3, [pc, #216]	; (1250c <SystemInit+0xe0>)
   12432:	2221      	movs	r2, #33	; 0x21
   12434:	f8c3 21a0 	str.w	r2, [r3, #416]	; 0x1a0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:488
  if (SCS_Val & (1 << 5)) {             /* If Main Oscillator is enabled      */
    while ((LPC_SC->SCS & (1<<6)) == 0);/* Wait for Oscillator to be ready    */
   12438:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:488 (discriminator 1)
   1243a:	4b34      	ldr	r3, [pc, #208]	; (1250c <SystemInit+0xe0>)
   1243c:	f8d3 31a0 	ldr.w	r3, [r3, #416]	; 0x1a0
   12440:	f003 0340 	and.w	r3, r3, #64	; 0x40
   12444:	2b00      	cmp	r3, #0
   12446:	d0f8      	beq.n	1243a <SystemInit+0xe>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:491
  }

  LPC_SC->CLKSRCSEL = CLKSRCSEL_Val;    /* Select Clock Source for sysclk/PLL0*/
   12448:	4b30      	ldr	r3, [pc, #192]	; (1250c <SystemInit+0xe0>)
   1244a:	2201      	movs	r2, #1
   1244c:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:494

#if (PLL0_SETUP)
  LPC_SC->PLL0CFG   = PLL0CFG_Val;
   12450:	4b2e      	ldr	r3, [pc, #184]	; (1250c <SystemInit+0xe0>)
   12452:	2209      	movs	r2, #9
   12454:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:495
  LPC_SC->PLL0CON   = 0x01;             /* PLL0 Enable                        */
   12458:	4b2c      	ldr	r3, [pc, #176]	; (1250c <SystemInit+0xe0>)
   1245a:	2201      	movs	r2, #1
   1245c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:496
  LPC_SC->PLL0FEED  = 0xAA;
   12460:	4b2a      	ldr	r3, [pc, #168]	; (1250c <SystemInit+0xe0>)
   12462:	22aa      	movs	r2, #170	; 0xaa
   12464:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:497
  LPC_SC->PLL0FEED  = 0x55;
   12468:	4b28      	ldr	r3, [pc, #160]	; (1250c <SystemInit+0xe0>)
   1246a:	2255      	movs	r2, #85	; 0x55
   1246c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:498
  while (!(LPC_SC->PLL0STAT & (1<<10)));/* Wait for PLOCK0                    */
   12470:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:498 (discriminator 1)
   12472:	4b26      	ldr	r3, [pc, #152]	; (1250c <SystemInit+0xe0>)
   12474:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
   12478:	f403 6380 	and.w	r3, r3, #1024	; 0x400
   1247c:	2b00      	cmp	r3, #0
   1247e:	d0f8      	beq.n	12472 <SystemInit+0x46>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:502
#endif

#if (PLL1_SETUP)
  LPC_SC->PLL1CFG   = PLL1CFG_Val;
   12480:	4b22      	ldr	r3, [pc, #136]	; (1250c <SystemInit+0xe0>)
   12482:	2223      	movs	r2, #35	; 0x23
   12484:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:503
  LPC_SC->PLL1CON   = 0x01;             /* PLL1 Enable                        */
   12488:	4b20      	ldr	r3, [pc, #128]	; (1250c <SystemInit+0xe0>)
   1248a:	2201      	movs	r2, #1
   1248c:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:504
  LPC_SC->PLL1FEED  = 0xAA;
   12490:	4b1e      	ldr	r3, [pc, #120]	; (1250c <SystemInit+0xe0>)
   12492:	22aa      	movs	r2, #170	; 0xaa
   12494:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:505
  LPC_SC->PLL1FEED  = 0x55;
   12498:	4b1c      	ldr	r3, [pc, #112]	; (1250c <SystemInit+0xe0>)
   1249a:	2255      	movs	r2, #85	; 0x55
   1249c:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:506
  while (!(LPC_SC->PLL1STAT & (1<<10)));/* Wait for PLOCK1                    */
   124a0:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:506 (discriminator 1)
   124a2:	4b1a      	ldr	r3, [pc, #104]	; (1250c <SystemInit+0xe0>)
   124a4:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
   124a8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
   124ac:	2b00      	cmp	r3, #0
   124ae:	d0f8      	beq.n	124a2 <SystemInit+0x76>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:509
#endif

  LPC_SC->CCLKSEL   = CCLKSEL_Val;      /* Setup Clock Divider                */
   124b0:	4b16      	ldr	r3, [pc, #88]	; (1250c <SystemInit+0xe0>)
   124b2:	f240 1201 	movw	r2, #257	; 0x101
   124b6:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:510
  LPC_SC->USBCLKSEL = USBCLKSEL_Val;    /* Setup USB Clock Divider            */
   124ba:	4b14      	ldr	r3, [pc, #80]	; (1250c <SystemInit+0xe0>)
   124bc:	f240 2201 	movw	r2, #513	; 0x201
   124c0:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:511
  LPC_SC->EMCCLKSEL = EMCCLKSEL_Val;    /* EMC Clock Selection                */
   124c4:	4b11      	ldr	r3, [pc, #68]	; (1250c <SystemInit+0xe0>)
   124c6:	2201      	movs	r2, #1
   124c8:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:512
  LPC_SC->PCLKSEL   = PCLKSEL_Val;      /* Peripheral Clock Selection         */
   124cc:	4b0f      	ldr	r3, [pc, #60]	; (1250c <SystemInit+0xe0>)
   124ce:	2202      	movs	r2, #2
   124d0:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:513
  LPC_SC->PCONP     = PCONP_Val;        /* Power Control for Peripherals      */
   124d4:	4b0d      	ldr	r3, [pc, #52]	; (1250c <SystemInit+0xe0>)
   124d6:	4a0e      	ldr	r2, [pc, #56]	; (12510 <SystemInit+0xe4>)
   124d8:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:514
  LPC_SC->CLKOUTCFG = CLKOUTCFG_Val;    /* Clock Output Configuration         */
   124dc:	4b0b      	ldr	r3, [pc, #44]	; (1250c <SystemInit+0xe0>)
   124de:	f44f 7280 	mov.w	r2, #256	; 0x100
   124e2:	f8c3 21c8 	str.w	r2, [r3, #456]	; 0x1c8
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:517
#endif

  LPC_SC->PBOOST 	|= 0x03;			/* Power Boost control				*/
   124e6:	4b09      	ldr	r3, [pc, #36]	; (1250c <SystemInit+0xe0>)
   124e8:	4a08      	ldr	r2, [pc, #32]	; (1250c <SystemInit+0xe0>)
   124ea:	f8d2 21b0 	ldr.w	r2, [r2, #432]	; 0x1b0
   124ee:	f042 0203 	orr.w	r2, r2, #3
   124f2:	f8c3 21b0 	str.w	r2, [r3, #432]	; 0x1b0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:520

#if (FLASH_SETUP == 1)                  /* Flash Accelerator Setup            */
  LPC_SC->FLASHCFG  = FLASHCFG_Val|0x03A;
   124f6:	4b05      	ldr	r3, [pc, #20]	; (1250c <SystemInit+0xe0>)
   124f8:	f245 023a 	movw	r2, #20538	; 0x503a
   124fc:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:525
#endif
#ifdef  __RAM_MODE__
  SCB->VTOR  = 0x10000000 & 0x3FFFFF80;
#else
  SCB->VTOR  = 0x00000000 & 0x3FFFFF80;
   124fe:	4b05      	ldr	r3, [pc, #20]	; (12514 <SystemInit+0xe8>)
   12500:	2200      	movs	r2, #0
   12502:	609a      	str	r2, [r3, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:527
#endif
  SystemCoreClockUpdate(); 
   12504:	f7ff fdd4 	bl	120b0 <SystemCoreClockUpdate>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../Chip/Core/Source/Template/system_LPC177x_8x.c:528
}
   12508:	bd80      	pop	{r7, pc}
   1250a:	bf00      	nop
   1250c:	400fc000 	.word	0x400fc000
   12510:	042887de 	.word	0x042887de
   12514:	e000ed00 	.word	0xe000ed00

00012518 <SysTick_Handler>:
SysTick_Handler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:35
 * @brief		SysTick handler sub-routine (1ms)
 * @param[in]	None
 * @return 		None
 **********************************************************************/
void SysTick_Handler (void)
{
   12518:	b480      	push	{r7}
   1251a:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:36
	SysTickCnt++;
   1251c:	4b04      	ldr	r3, [pc, #16]	; (12530 <SysTick_Handler+0x18>)
   1251e:	681b      	ldr	r3, [r3, #0]
   12520:	1c5a      	adds	r2, r3, #1
   12522:	4b03      	ldr	r3, [pc, #12]	; (12530 <SysTick_Handler+0x18>)
   12524:	601a      	str	r2, [r3, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:37
}
   12526:	46bd      	mov	sp, r7
   12528:	f85d 7b04 	ldr.w	r7, [sp], #4
   1252c:	4770      	bx	lr
   1252e:	bf00      	nop
   12530:	1000bb50 	.word	0x1000bb50

00012534 <cpu_serial_init>:
cpu_serial_init():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:44
/*-------------------------SHARED FUNCTIONS------------------------------*/
/* ********************************************************************* */


void cpu_serial_init(long port_number, unsigned long baud_rate)
{
   12534:	b580      	push	{r7, lr}
   12536:	b084      	sub	sp, #16
   12538:	af00      	add	r7, sp, #0
   1253a:	6078      	str	r0, [r7, #4]
   1253c:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:47
  UART_CFG_Type UARTConfigStruct;

  UART_ConfigStructInit(&UARTConfigStruct);
   1253e:	f107 0308 	add.w	r3, r7, #8
   12542:	4618      	mov	r0, r3
   12544:	f7fe fe0a 	bl	1115c <UART_ConfigStructInit>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:49

  UARTConfigStruct.Baud_rate = baud_rate;
   12548:	683b      	ldr	r3, [r7, #0]
   1254a:	60bb      	str	r3, [r7, #8]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:52

  // Initialize UART0 peripheral with given to corresponding parameter
  UART_Init(port_number, &UARTConfigStruct);
   1254c:	687b      	ldr	r3, [r7, #4]
   1254e:	b2da      	uxtb	r2, r3
   12550:	f107 0308 	add.w	r3, r7, #8
   12554:	4610      	mov	r0, r2
   12556:	4619      	mov	r1, r3
   12558:	f7fe fc4a 	bl	10df0 <UART_Init>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:54

}
   1255c:	3710      	adds	r7, #16
   1255e:	46bd      	mov	sp, r7
   12560:	bd80      	pop	{r7, pc}
   12562:	bf00      	nop

00012564 <Delay>:
Delay():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:64
 * @brief		Delay function
 * @param[in]	tick - number milisecond of delay time
 * @return 		None
 **********************************************************************/
void Delay (unsigned long tick)
{
   12564:	b480      	push	{r7}
   12566:	b085      	sub	sp, #20
   12568:	af00      	add	r7, sp, #0
   1256a:	6078      	str	r0, [r7, #4]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:67
	unsigned long systickcnt;

	systickcnt = SysTickCnt;
   1256c:	4b07      	ldr	r3, [pc, #28]	; (1258c <Delay+0x28>)
   1256e:	681b      	ldr	r3, [r3, #0]
   12570:	60fb      	str	r3, [r7, #12]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:68
	while ((SysTickCnt - systickcnt) < tick);
   12572:	bf00      	nop
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:68 (discriminator 1)
   12574:	4b05      	ldr	r3, [pc, #20]	; (1258c <Delay+0x28>)
   12576:	681a      	ldr	r2, [r3, #0]
   12578:	68fb      	ldr	r3, [r7, #12]
   1257a:	1ad2      	subs	r2, r2, r3
   1257c:	687b      	ldr	r3, [r7, #4]
   1257e:	429a      	cmp	r2, r3
   12580:	d3f8      	bcc.n	12574 <Delay+0x10>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:69
}
   12582:	3714      	adds	r7, #20
   12584:	46bd      	mov	sp, r7
   12586:	f85d 7b04 	ldr.w	r7, [sp], #4
   1258a:	4770      	bx	lr
   1258c:	1000bb50 	.word	0x1000bb50

00012590 <HardFault_Handler>:
HardFault_Handler():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:72

void HardFault_Handler(void)
{
   12590:	b480      	push	{r7}
   12592:	b083      	sub	sp, #12
   12594:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:73
	uint8_t value = 0;
   12596:	2300      	movs	r3, #0
   12598:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:74
	value = 1;
   1259a:	2301      	movs	r3, #1
   1259c:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:75
	value ++;
   1259e:	79fb      	ldrb	r3, [r7, #7]
   125a0:	3301      	adds	r3, #1
   125a2:	71fb      	strb	r3, [r7, #7]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:77
	//fnet_printf("!HARD FAULT!   \n");
}
   125a4:	370c      	adds	r7, #12
   125a6:	46bd      	mov	sp, r7
   125a8:	f85d 7b04 	ldr.w	r7, [sp], #4
   125ac:	4770      	bx	lr
   125ae:	bf00      	nop

000125b0 <HW_initialize_ETH>:
HW_initialize_ETH():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:81

// MII ethernet interface
void HW_initialize_ETH(void)
{
   125b0:	b580      	push	{r7, lr}
   125b2:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:82
  PINSEL_ConfigPin(1,0,1);		// P1.0 - alternate function no.1, FUNC_ENET_TXD0
   125b4:	2001      	movs	r0, #1
   125b6:	2100      	movs	r1, #0
   125b8:	2201      	movs	r2, #1
   125ba:	f7fd ffb1 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:83
  PINSEL_ConfigPin(1,1,1);		// P1.1 - alternate function no.1, FUNC_ENET_TXD1
   125be:	2001      	movs	r0, #1
   125c0:	2101      	movs	r1, #1
   125c2:	2201      	movs	r2, #1
   125c4:	f7fd ffac 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:84
  PINSEL_ConfigPin(1,4,1);		// P1.4 - alternate function no.1, FUNC_ENET_TX_EN
   125c8:	2001      	movs	r0, #1
   125ca:	2104      	movs	r1, #4
   125cc:	2201      	movs	r2, #1
   125ce:	f7fd ffa7 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:85
  PINSEL_ConfigPin(1,8,1);		// P1.8 - alternate function no.1, FUNC_ENET_CRS
   125d2:	2001      	movs	r0, #1
   125d4:	2108      	movs	r1, #8
   125d6:	2201      	movs	r2, #1
   125d8:	f7fd ffa2 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:86
  PINSEL_ConfigPin(1,9,1);		// P1.9 - alternate function no.1, FUNC_ENET_RXD0
   125dc:	2001      	movs	r0, #1
   125de:	2109      	movs	r1, #9
   125e0:	2201      	movs	r2, #1
   125e2:	f7fd ff9d 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:87
  PINSEL_ConfigPin(1,10,1);		// P1.10 - alternate function no.1, FUNC_ENET_RXD1
   125e6:	2001      	movs	r0, #1
   125e8:	210a      	movs	r1, #10
   125ea:	2201      	movs	r2, #1
   125ec:	f7fd ff98 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:88
  PINSEL_ConfigPin(1,14,1);		// P1.14 - alternate function no.1, FUNC_ENET_RX_ER
   125f0:	2001      	movs	r0, #1
   125f2:	210e      	movs	r1, #14
   125f4:	2201      	movs	r2, #1
   125f6:	f7fd ff93 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:89
  PINSEL_ConfigPin(1,15,1);		// P1.15 - alternate function no.1, ENET_RX_CLK
   125fa:	2001      	movs	r0, #1
   125fc:	210f      	movs	r1, #15
   125fe:	2201      	movs	r2, #1
   12600:	f7fd ff8e 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:90
  PINSEL_ConfigPin(1,16,1);		// P1.16 - alternate function no.1, FUNC_ENET_MDC
   12604:	2001      	movs	r0, #1
   12606:	2110      	movs	r1, #16
   12608:	2201      	movs	r2, #1
   1260a:	f7fd ff89 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:91
  PINSEL_ConfigPin(1,17,1);		// P1.16 - alternate function no.1, FUNC_ENET_MDIO
   1260e:	2001      	movs	r0, #1
   12610:	2111      	movs	r1, #17
   12612:	2201      	movs	r2, #1
   12614:	f7fd ff84 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:93

}
   12618:	bd80      	pop	{r7, pc}
   1261a:	bf00      	nop

0001261c <Initialize_UART>:
Initialize_UART():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:96

void Initialize_UART(long port_number, unsigned long baud_rate)
{
   1261c:	b580      	push	{r7, lr}
   1261e:	b086      	sub	sp, #24
   12620:	af00      	add	r7, sp, #0
   12622:	6078      	str	r0, [r7, #4]
   12624:	6039      	str	r1, [r7, #0]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:97
  UART_ID_Type Used_Uart = (UART_ID_Type) port_number;
   12626:	687b      	ldr	r3, [r7, #4]
   12628:	75fb      	strb	r3, [r7, #23]
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:108

  // uint32_t idx, len;
  // FlagStatus exitflag;
  // uint8_t buffer[10];

  switch (port_number)
   1262a:	687b      	ldr	r3, [r7, #4]
   1262c:	3b01      	subs	r3, #1
   1262e:	2b03      	cmp	r3, #3
   12630:	d836      	bhi.n	126a0 <Initialize_UART+0x84>
   12632:	a201      	add	r2, pc, #4	; (adr r2, 12638 <Initialize_UART+0x1c>)
   12634:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   12638:	00012649 	.word	0x00012649
   1263c:	0001265f 	.word	0x0001265f
   12640:	00012675 	.word	0x00012675
   12644:	0001268b 	.word	0x0001268b
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:112
  {
    case 1:	// Initialize UART1 pin connect: P0.15: U1_TXD, P0.16: U1_RXD
      {
	PINSEL_ConfigPin(0,15,1);
   12648:	2000      	movs	r0, #0
   1264a:	210f      	movs	r1, #15
   1264c:	2201      	movs	r2, #1
   1264e:	f7fd ff67 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:113
	PINSEL_ConfigPin(0,16,1);
   12652:	2000      	movs	r0, #0
   12654:	2110      	movs	r1, #16
   12656:	2201      	movs	r2, #1
   12658:	f7fd ff62 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:114
	break;
   1265c:	e02a      	b.n	126b4 <Initialize_UART+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:118
      }
    case 2: 	// Initialize UART2 pin connect: P0.10: U2_TXD, P0.11: U2_RXD
      {
	PINSEL_ConfigPin(0,10,1);
   1265e:	2000      	movs	r0, #0
   12660:	210a      	movs	r1, #10
   12662:	2201      	movs	r2, #1
   12664:	f7fd ff5c 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:119
	PINSEL_ConfigPin(0,11,1);
   12668:	2000      	movs	r0, #0
   1266a:	210b      	movs	r1, #11
   1266c:	2201      	movs	r2, #1
   1266e:	f7fd ff57 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:120
	break;
   12672:	e01f      	b.n	126b4 <Initialize_UART+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:124
      }
    case 3:	// Initialize UART3 pin connect: P0.2: U3_TXD, P0.3: U3_RXD
      {
	PINSEL_ConfigPin(0,2,2);
   12674:	2000      	movs	r0, #0
   12676:	2102      	movs	r1, #2
   12678:	2202      	movs	r2, #2
   1267a:	f7fd ff51 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:125
	PINSEL_ConfigPin(0,3,2);
   1267e:	2000      	movs	r0, #0
   12680:	2103      	movs	r1, #3
   12682:	2202      	movs	r2, #2
   12684:	f7fd ff4c 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:126
	break;
   12688:	e014      	b.n	126b4 <Initialize_UART+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:130
      }
    case 4:	// Initialize UART4 pin connect: P0.22: U4_TXD, P2.9: U4_RXD
      {
	PINSEL_ConfigPin(0,22,3);
   1268a:	2000      	movs	r0, #0
   1268c:	2116      	movs	r1, #22
   1268e:	2203      	movs	r2, #3
   12690:	f7fd ff46 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:131
	PINSEL_ConfigPin(2,9,3);
   12694:	2002      	movs	r0, #2
   12696:	2109      	movs	r1, #9
   12698:	2203      	movs	r2, #3
   1269a:	f7fd ff41 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:132
	break;
   1269e:	e009      	b.n	126b4 <Initialize_UART+0x98>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:136
      }
    default:	// Initialize UART0 pin connect: P0.2: U0_TXD, P0.3: U0_RXD
      {
       PINSEL_ConfigPin(0,2,1);
   126a0:	2000      	movs	r0, #0
   126a2:	2102      	movs	r1, #2
   126a4:	2201      	movs	r2, #1
   126a6:	f7fd ff3b 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:137
       PINSEL_ConfigPin(0,3,1);
   126aa:	2000      	movs	r0, #0
   126ac:	2103      	movs	r1, #3
   126ae:	2201      	movs	r2, #1
   126b0:	f7fd ff36 	bl	10520 <PINSEL_ConfigPin>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:144
  }


  // Initialize UART Configuration parameter structure to default state:
  // Baudrate = $baud_rate, 8 data bit, 1 Stop bit, None parity
  UART_ConfigStructInit(&UARTConfigStruct);
   126b4:	f107 030c 	add.w	r3, r7, #12
   126b8:	4618      	mov	r0, r3
   126ba:	f7fe fd4f 	bl	1115c <UART_ConfigStructInit>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:147

  // Initialize UART peripheral with given to corresponding parameter
  UART_Init(Used_Uart, &UARTConfigStruct);
   126be:	7dfa      	ldrb	r2, [r7, #23]
   126c0:	f107 030c 	add.w	r3, r7, #12
   126c4:	4610      	mov	r0, r2
   126c6:	4619      	mov	r1, r3
   126c8:	f7fe fb92 	bl	10df0 <UART_Init>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:155
  //	- FIFO_DMAMode = DISABLE
  //	- FIFO_Level = UART_FIFO_TRGLEV0
  //	- FIFO_ResetRxBuf = ENABLE
  //	- FIFO_ResetTxBuf = ENABLE
  //	- FIFO_State = ENABLE
  UART_FIFOConfigStructInit(&UARTFIFOConfigStruct);
   126cc:	f107 0308 	add.w	r3, r7, #8
   126d0:	4618      	mov	r0, r3
   126d2:	f7ff f92d 	bl	11930 <UART_FIFOConfigStructInit>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:158

  // Initialize FIFO for UART0 peripheral
  UART_FIFOConfig(Used_Uart, &UARTFIFOConfigStruct);
   126d6:	7dfa      	ldrb	r2, [r7, #23]
   126d8:	f107 0308 	add.w	r3, r7, #8
   126dc:	4610      	mov	r0, r2
   126de:	4619      	mov	r1, r3
   126e0:	f7ff f8a6 	bl	11830 <UART_FIFOConfig>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:161

  // Enable UART Transmit
  UART_TxCmd(Used_Uart, ENABLE);
   126e4:	7dfb      	ldrb	r3, [r7, #23]
   126e6:	4618      	mov	r0, r3
   126e8:	2101      	movs	r1, #1
   126ea:	f7ff fa03 	bl	11af4 <UART_TxCmd>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:162
}
   126ee:	3718      	adds	r7, #24
   126f0:	46bd      	mov	sp, r7
   126f2:	bd80      	pop	{r7, pc}

000126f4 <main>:
main():
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:166


int main (void)
{
   126f4:	b580      	push	{r7, lr}
   126f6:	b0fa      	sub	sp, #488	; 0x1e8
   126f8:	af00      	add	r7, sp, #0
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:168
	LPC_SC_TypeDef Check;
	uint32_t value = 0;
   126fa:	2300      	movs	r3, #0
   126fc:	f8c7 31e4 	str.w	r3, [r7, #484]	; 0x1e4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:173

	//uint32_t cclk = CLKPWR_GetCLK(CLKPWR_CLKTYPE_CPU);
	/* Generate interrupt each 1 ms   */
	//SysTick_Config(cclk/1000 - 1);
	GPIO_Init();
   12700:	f7fd fa72 	bl	fbe8 <GPIO_Init>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:174
	GPIO_SetDir(BRD_LED_1_CONNECTED_PORT, BRD_LED_1_CONNECTED_MASK, GPIO_DIRECTION_OUTPUT);
   12704:	2001      	movs	r0, #1
   12706:	f44f 5100 	mov.w	r1, #8192	; 0x2000
   1270a:	2201      	movs	r2, #1
   1270c:	f7fd fa80 	bl	fc10 <GPIO_SetDir>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:175
	GPIO_SetDir(BRD_LED_2_CONNECTED_PORT, BRD_LED_2_CONNECTED_MASK, GPIO_DIRECTION_OUTPUT);
   12710:	2001      	movs	r0, #1
   12712:	f44f 2180 	mov.w	r1, #262144	; 0x40000
   12716:	2201      	movs	r2, #1
   12718:	f7fd fa7a 	bl	fc10 <GPIO_SetDir>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:176
	led1_off(); led2_off();
   1271c:	2001      	movs	r0, #1
   1271e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
   12722:	2201      	movs	r2, #1
   12724:	f7fd fac0 	bl	fca8 <GPIO_OutputValue>
   12728:	2001      	movs	r0, #1
   1272a:	f44f 2180 	mov.w	r1, #262144	; 0x40000
   1272e:	2201      	movs	r2, #1
   12730:	f7fd faba 	bl	fca8 <GPIO_OutputValue>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:178

	Initialize_UART(FNET_CFG_CPU_SERIAL_PORT_DEFAULT, FNET_CFG_CPU_SERIAL_BAUD_DEFAULT);
   12734:	2000      	movs	r0, #0
   12736:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
   1273a:	f7ff ff6f 	bl	1261c <Initialize_UART>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:180

	led1_on(); led2_on();
   1273e:	2001      	movs	r0, #1
   12740:	f44f 5100 	mov.w	r1, #8192	; 0x2000
   12744:	2200      	movs	r2, #0
   12746:	f7fd faaf 	bl	fca8 <GPIO_OutputValue>
   1274a:	2001      	movs	r0, #1
   1274c:	f44f 2180 	mov.w	r1, #262144	; 0x40000
   12750:	2200      	movs	r2, #0
   12752:	f7fd faa9 	bl	fca8 <GPIO_OutputValue>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:181
	FNET_START();
   12756:	f7fd f831 	bl	f7bc <FNET_START>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:182
	led1_off(); led2_off();
   1275a:	2001      	movs	r0, #1
   1275c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
   12760:	2201      	movs	r2, #1
   12762:	f7fd faa1 	bl	fca8 <GPIO_OutputValue>
   12766:	2001      	movs	r0, #1
   12768:	f44f 2180 	mov.w	r1, #262144	; 0x40000
   1276c:	2201      	movs	r2, #1
   1276e:	f7fd fa9b 	bl	fca8 <GPIO_OutputValue>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:184

	fnet_printf("System reg: \n" );
   12772:	484b      	ldr	r0, [pc, #300]	; (128a0 <main+0x1ac>)
   12774:	f7f9 fc56 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:185
	fnet_printf("PCONP.PCENET: %d ", (LPC_SC->PCONP & (1 << 30)) >> 30 );					// PCENET
   12778:	4b4a      	ldr	r3, [pc, #296]	; (128a4 <main+0x1b0>)
   1277a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
   1277e:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
   12782:	0f9b      	lsrs	r3, r3, #30
   12784:	4848      	ldr	r0, [pc, #288]	; (128a8 <main+0x1b4>)
   12786:	4619      	mov	r1, r3
   12788:	f7f9 fc4c 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:186
	fnet_printf(", CCLKSEL.PCENET: %d ", LPC_SC->CCLKSEL );									// CCLKSEL
   1278c:	4b45      	ldr	r3, [pc, #276]	; (128a4 <main+0x1b0>)
   1278e:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   12792:	4846      	ldr	r0, [pc, #280]	; (128ac <main+0x1b8>)
   12794:	4619      	mov	r1, r3
   12796:	f7f9 fc45 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:187
	fnet_printf(", NVIC.28: %d \n", ((NVIC->ISER[0] & (1 << 28)) >> 28) );				// Eth IRQ
   1279a:	4b45      	ldr	r3, [pc, #276]	; (128b0 <main+0x1bc>)
   1279c:	681b      	ldr	r3, [r3, #0]
   1279e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
   127a2:	0f1b      	lsrs	r3, r3, #28
   127a4:	4843      	ldr	r0, [pc, #268]	; (128b4 <main+0x1c0>)
   127a6:	4619      	mov	r1, r3
   127a8:	f7f9 fc3c 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:189

	fnet_printf("ETH reg: \n" );
   127ac:	4842      	ldr	r0, [pc, #264]	; (128b8 <main+0x1c4>)
   127ae:	f7f9 fc39 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:190
	fnet_printf(" MAC1: 0x%04X", LPC_EMAC->MAC1 );									// MAC Config reg 1
   127b2:	4b42      	ldr	r3, [pc, #264]	; (128bc <main+0x1c8>)
   127b4:	681b      	ldr	r3, [r3, #0]
   127b6:	4842      	ldr	r0, [pc, #264]	; (128c0 <main+0x1cc>)
   127b8:	4619      	mov	r1, r3
   127ba:	f7f9 fc33 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:191
	fnet_printf(" ,MAC2: 0x%04X", LPC_EMAC->MAC2 );											// MAC Config reg 2
   127be:	4b3f      	ldr	r3, [pc, #252]	; (128bc <main+0x1c8>)
   127c0:	685b      	ldr	r3, [r3, #4]
   127c2:	4840      	ldr	r0, [pc, #256]	; (128c4 <main+0x1d0>)
   127c4:	4619      	mov	r1, r3
   127c6:	f7f9 fc2d 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:192
	fnet_printf(" ,MAXF: %d", LPC_EMAC->MAXF );												// Maximum Frame register.
   127ca:	4b3c      	ldr	r3, [pc, #240]	; (128bc <main+0x1c8>)
   127cc:	695b      	ldr	r3, [r3, #20]
   127ce:	483e      	ldr	r0, [pc, #248]	; (128c8 <main+0x1d4>)
   127d0:	4619      	mov	r1, r3
   127d2:	f7f9 fc27 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:193
	fnet_printf(" ,SUPP: 0x%04X", LPC_EMAC->SUPP );											// PHY Support register.
   127d6:	4b39      	ldr	r3, [pc, #228]	; (128bc <main+0x1c8>)
   127d8:	699b      	ldr	r3, [r3, #24]
   127da:	483c      	ldr	r0, [pc, #240]	; (128cc <main+0x1d8>)
   127dc:	4619      	mov	r1, r3
   127de:	f7f9 fc21 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:194
	fnet_printf(" ,MIND: 0x%04X \n", LPC_EMAC->MIND );									// MII Mgmt Indicators register.
   127e2:	4b36      	ldr	r3, [pc, #216]	; (128bc <main+0x1c8>)
   127e4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   127e6:	483a      	ldr	r0, [pc, #232]	; (128d0 <main+0x1dc>)
   127e8:	4619      	mov	r1, r3
   127ea:	f7f9 fc1b 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:196

	fnet_printf(" Command: 0x%04X", LPC_EMAC->Command );									// Command register.
   127ee:	4b33      	ldr	r3, [pc, #204]	; (128bc <main+0x1c8>)
   127f0:	f8d3 3100 	ldr.w	r3, [r3, #256]	; 0x100
   127f4:	4837      	ldr	r0, [pc, #220]	; (128d4 <main+0x1e0>)
   127f6:	4619      	mov	r1, r3
   127f8:	f7f9 fc14 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:197
	fnet_printf(" ,Status: 0x%04X \n", LPC_EMAC->Status );										// Status register.
   127fc:	4b2f      	ldr	r3, [pc, #188]	; (128bc <main+0x1c8>)
   127fe:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   12802:	4835      	ldr	r0, [pc, #212]	; (128d8 <main+0x1e4>)
   12804:	4619      	mov	r1, r3
   12806:	f7f9 fc0d 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:199

	fnet_printf(" RxDescriptor: 0x%04X", LPC_EMAC->RxDescriptor );							// Receive descriptor base address register
   1280a:	4b2c      	ldr	r3, [pc, #176]	; (128bc <main+0x1c8>)
   1280c:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
   12810:	4832      	ldr	r0, [pc, #200]	; (128dc <main+0x1e8>)
   12812:	4619      	mov	r1, r3
   12814:	f7f9 fc06 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:200
	fnet_printf(" ,RSV: 0x%04X", LPC_EMAC->RSV );									// Receive status base address register
   12818:	4b28      	ldr	r3, [pc, #160]	; (128bc <main+0x1c8>)
   1281a:	f8d3 3160 	ldr.w	r3, [r3, #352]	; 0x160
   1281e:	4830      	ldr	r0, [pc, #192]	; (128e0 <main+0x1ec>)
   12820:	4619      	mov	r1, r3
   12822:	f7f9 fbff 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:201
	fnet_printf(" ,RxDescriptorNumber: 0x%04X \n", LPC_EMAC->RxDescriptorNumber );		// Receive number of descriptors register.
   12826:	4b25      	ldr	r3, [pc, #148]	; (128bc <main+0x1c8>)
   12828:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
   1282c:	482d      	ldr	r0, [pc, #180]	; (128e4 <main+0x1f0>)
   1282e:	4619      	mov	r1, r3
   12830:	f7f9 fbf8 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:203

	fnet_printf(" TxDescriptor: 0x%04X", LPC_EMAC->TxDescriptor );							// Transmit descriptor base address register
   12834:	4b21      	ldr	r3, [pc, #132]	; (128bc <main+0x1c8>)
   12836:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
   1283a:	482b      	ldr	r0, [pc, #172]	; (128e8 <main+0x1f4>)
   1283c:	4619      	mov	r1, r3
   1283e:	f7f9 fbf1 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:204
	fnet_printf(" ,TSV1: 0x%04X", LPC_EMAC->TSV1 );									// Transmit status base address register
   12842:	4b1e      	ldr	r3, [pc, #120]	; (128bc <main+0x1c8>)
   12844:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
   12848:	4828      	ldr	r0, [pc, #160]	; (128ec <main+0x1f8>)
   1284a:	4619      	mov	r1, r3
   1284c:	f7f9 fbea 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:205
	fnet_printf(" ,TRxDescriptorNumber: 0x%04X \n", LPC_EMAC->TxDescriptorNumber );		// Transmit number of descriptors register.
   12850:	4b1a      	ldr	r3, [pc, #104]	; (128bc <main+0x1c8>)
   12852:	f8d3 3124 	ldr.w	r3, [r3, #292]	; 0x124
   12856:	4826      	ldr	r0, [pc, #152]	; (128f0 <main+0x1fc>)
   12858:	4619      	mov	r1, r3
   1285a:	f7f9 fbe3 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:207

	fnet_printf(" EMAC.IntStatus: 0x%04X", LPC_EMAC->IntStatus );							// Interrupt status register.
   1285e:	4b17      	ldr	r3, [pc, #92]	; (128bc <main+0x1c8>)
   12860:	f8d3 3fe0 	ldr.w	r3, [r3, #4064]	; 0xfe0
   12864:	4823      	ldr	r0, [pc, #140]	; (128f4 <main+0x200>)
   12866:	4619      	mov	r1, r3
   12868:	f7f9 fbdc 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:208
	fnet_printf(" EMAC.IntEnable: 0x%04X \n\n", LPC_EMAC->IntEnable );							// Interrupt Enable register.
   1286c:	4b13      	ldr	r3, [pc, #76]	; (128bc <main+0x1c8>)
   1286e:	f8d3 3fe4 	ldr.w	r3, [r3, #4068]	; 0xfe4
   12872:	4821      	ldr	r0, [pc, #132]	; (128f8 <main+0x204>)
   12874:	4619      	mov	r1, r3
   12876:	f7f9 fbd5 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:211


	fnet_printf("Goto main loop...\n");
   1287a:	4820      	ldr	r0, [pc, #128]	; (128fc <main+0x208>)
   1287c:	f7f9 fbd2 	bl	c024 <fnet_printf>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:214
	while (1)
	{
		if (value >0x100) { value =0; }
   12880:	f8d7 31e4 	ldr.w	r3, [r7, #484]	; 0x1e4
   12884:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   12888:	d902      	bls.n	12890 <main+0x19c>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:214 (discriminator 1)
   1288a:	2300      	movs	r3, #0
   1288c:	f8c7 31e4 	str.w	r3, [r7, #484]	; 0x1e4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:215
		fnet_poll_services();
   12890:	f7f9 fc98 	bl	c1c4 <fnet_poll_services>
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:216
		value ++ ;
   12894:	f8d7 31e4 	ldr.w	r3, [r7, #484]	; 0x1e4
   12898:	3301      	adds	r3, #1
   1289a:	f8c7 31e4 	str.w	r3, [r7, #484]	; 0x1e4
C:\embedded\git\ARM-FNET-LPC-1788-SK\ARM-FNET-LPC-1788-SK\Debug/../main.c:217
	}
   1289e:	e7ef      	b.n	12880 <main+0x18c>
   128a0:	0001ae34 	.word	0x0001ae34
   128a4:	400fc000 	.word	0x400fc000
   128a8:	0001ae44 	.word	0x0001ae44
   128ac:	0001ae58 	.word	0x0001ae58
   128b0:	e000e100 	.word	0xe000e100
   128b4:	0001ae70 	.word	0x0001ae70
   128b8:	0001ae80 	.word	0x0001ae80
   128bc:	20084000 	.word	0x20084000
   128c0:	0001ae8c 	.word	0x0001ae8c
   128c4:	0001ae9c 	.word	0x0001ae9c
   128c8:	0001aeac 	.word	0x0001aeac
   128cc:	0001aeb8 	.word	0x0001aeb8
   128d0:	0001aec8 	.word	0x0001aec8
   128d4:	0001aedc 	.word	0x0001aedc
   128d8:	0001aef0 	.word	0x0001aef0
   128dc:	0001af04 	.word	0x0001af04
   128e0:	0001af1c 	.word	0x0001af1c
   128e4:	0001af2c 	.word	0x0001af2c
   128e8:	0001af4c 	.word	0x0001af4c
   128ec:	0001af64 	.word	0x0001af64
   128f0:	0001af74 	.word	0x0001af74
   128f4:	0001af94 	.word	0x0001af94
   128f8:	0001afac 	.word	0x0001afac
   128fc:	0001afc8 	.word	0x0001afc8

00012900 <__aeabi_drsub>:
$t():
   12900:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   12904:	e002      	b.n	1290c <__adddf3>
   12906:	bf00      	nop

00012908 <__aeabi_dsub>:
__aeabi_dsub():
   12908:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0001290c <__adddf3>:
   1290c:	b530      	push	{r4, r5, lr}
   1290e:	ea4f 0441 	mov.w	r4, r1, lsl #1
   12912:	ea4f 0543 	mov.w	r5, r3, lsl #1
   12916:	ea94 0f05 	teq	r4, r5
   1291a:	bf08      	it	eq
   1291c:	ea90 0f02 	teqeq	r0, r2
   12920:	bf1f      	itttt	ne
   12922:	ea54 0c00 	orrsne.w	ip, r4, r0
   12926:	ea55 0c02 	orrsne.w	ip, r5, r2
   1292a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   1292e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   12932:	f000 80e2 	beq.w	12afa <__adddf3+0x1ee>
   12936:	ea4f 5454 	mov.w	r4, r4, lsr #21
   1293a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   1293e:	bfb8      	it	lt
   12940:	426d      	neglt	r5, r5
   12942:	dd0c      	ble.n	1295e <__adddf3+0x52>
   12944:	442c      	add	r4, r5
   12946:	ea80 0202 	eor.w	r2, r0, r2
   1294a:	ea81 0303 	eor.w	r3, r1, r3
   1294e:	ea82 0000 	eor.w	r0, r2, r0
   12952:	ea83 0101 	eor.w	r1, r3, r1
   12956:	ea80 0202 	eor.w	r2, r0, r2
   1295a:	ea81 0303 	eor.w	r3, r1, r3
   1295e:	2d36      	cmp	r5, #54	; 0x36
   12960:	bf88      	it	hi
   12962:	bd30      	pophi	{r4, r5, pc}
   12964:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   12968:	ea4f 3101 	mov.w	r1, r1, lsl #12
   1296c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   12970:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   12974:	d002      	beq.n	1297c <__adddf3+0x70>
   12976:	4240      	negs	r0, r0
   12978:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1297c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   12980:	ea4f 3303 	mov.w	r3, r3, lsl #12
   12984:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   12988:	d002      	beq.n	12990 <__adddf3+0x84>
   1298a:	4252      	negs	r2, r2
   1298c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   12990:	ea94 0f05 	teq	r4, r5
   12994:	f000 80a7 	beq.w	12ae6 <__adddf3+0x1da>
   12998:	f1a4 0401 	sub.w	r4, r4, #1
   1299c:	f1d5 0e20 	rsbs	lr, r5, #32
   129a0:	db0d      	blt.n	129be <__adddf3+0xb2>
   129a2:	fa02 fc0e 	lsl.w	ip, r2, lr
   129a6:	fa22 f205 	lsr.w	r2, r2, r5
   129aa:	1880      	adds	r0, r0, r2
   129ac:	f141 0100 	adc.w	r1, r1, #0
   129b0:	fa03 f20e 	lsl.w	r2, r3, lr
   129b4:	1880      	adds	r0, r0, r2
   129b6:	fa43 f305 	asr.w	r3, r3, r5
   129ba:	4159      	adcs	r1, r3
   129bc:	e00e      	b.n	129dc <__adddf3+0xd0>
   129be:	f1a5 0520 	sub.w	r5, r5, #32
   129c2:	f10e 0e20 	add.w	lr, lr, #32
   129c6:	2a01      	cmp	r2, #1
   129c8:	fa03 fc0e 	lsl.w	ip, r3, lr
   129cc:	bf28      	it	cs
   129ce:	f04c 0c02 	orrcs.w	ip, ip, #2
   129d2:	fa43 f305 	asr.w	r3, r3, r5
   129d6:	18c0      	adds	r0, r0, r3
   129d8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   129dc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   129e0:	d507      	bpl.n	129f2 <__adddf3+0xe6>
   129e2:	f04f 0e00 	mov.w	lr, #0
   129e6:	f1dc 0c00 	rsbs	ip, ip, #0
   129ea:	eb7e 0000 	sbcs.w	r0, lr, r0
   129ee:	eb6e 0101 	sbc.w	r1, lr, r1
   129f2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   129f6:	d31b      	bcc.n	12a30 <__adddf3+0x124>
   129f8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   129fc:	d30c      	bcc.n	12a18 <__adddf3+0x10c>
   129fe:	0849      	lsrs	r1, r1, #1
   12a00:	ea5f 0030 	movs.w	r0, r0, rrx
   12a04:	ea4f 0c3c 	mov.w	ip, ip, rrx
   12a08:	f104 0401 	add.w	r4, r4, #1
   12a0c:	ea4f 5244 	mov.w	r2, r4, lsl #21
   12a10:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   12a14:	f080 809a 	bcs.w	12b4c <__adddf3+0x240>
   12a18:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   12a1c:	bf08      	it	eq
   12a1e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   12a22:	f150 0000 	adcs.w	r0, r0, #0
   12a26:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   12a2a:	ea41 0105 	orr.w	r1, r1, r5
   12a2e:	bd30      	pop	{r4, r5, pc}
   12a30:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   12a34:	4140      	adcs	r0, r0
   12a36:	eb41 0101 	adc.w	r1, r1, r1
   12a3a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   12a3e:	f1a4 0401 	sub.w	r4, r4, #1
   12a42:	d1e9      	bne.n	12a18 <__adddf3+0x10c>
   12a44:	f091 0f00 	teq	r1, #0
   12a48:	bf04      	itt	eq
   12a4a:	4601      	moveq	r1, r0
   12a4c:	2000      	moveq	r0, #0
   12a4e:	fab1 f381 	clz	r3, r1
   12a52:	bf08      	it	eq
   12a54:	3320      	addeq	r3, #32
   12a56:	f1a3 030b 	sub.w	r3, r3, #11
   12a5a:	f1b3 0220 	subs.w	r2, r3, #32
   12a5e:	da0c      	bge.n	12a7a <__adddf3+0x16e>
   12a60:	320c      	adds	r2, #12
   12a62:	dd08      	ble.n	12a76 <__adddf3+0x16a>
   12a64:	f102 0c14 	add.w	ip, r2, #20
   12a68:	f1c2 020c 	rsb	r2, r2, #12
   12a6c:	fa01 f00c 	lsl.w	r0, r1, ip
   12a70:	fa21 f102 	lsr.w	r1, r1, r2
   12a74:	e00c      	b.n	12a90 <__adddf3+0x184>
   12a76:	f102 0214 	add.w	r2, r2, #20
   12a7a:	bfd8      	it	le
   12a7c:	f1c2 0c20 	rsble	ip, r2, #32
   12a80:	fa01 f102 	lsl.w	r1, r1, r2
   12a84:	fa20 fc0c 	lsr.w	ip, r0, ip
   12a88:	bfdc      	itt	le
   12a8a:	ea41 010c 	orrle.w	r1, r1, ip
   12a8e:	4090      	lslle	r0, r2
   12a90:	1ae4      	subs	r4, r4, r3
   12a92:	bfa2      	ittt	ge
   12a94:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   12a98:	4329      	orrge	r1, r5
   12a9a:	bd30      	popge	{r4, r5, pc}
   12a9c:	ea6f 0404 	mvn.w	r4, r4
   12aa0:	3c1f      	subs	r4, #31
   12aa2:	da1c      	bge.n	12ade <__adddf3+0x1d2>
   12aa4:	340c      	adds	r4, #12
   12aa6:	dc0e      	bgt.n	12ac6 <__adddf3+0x1ba>
   12aa8:	f104 0414 	add.w	r4, r4, #20
   12aac:	f1c4 0220 	rsb	r2, r4, #32
   12ab0:	fa20 f004 	lsr.w	r0, r0, r4
   12ab4:	fa01 f302 	lsl.w	r3, r1, r2
   12ab8:	ea40 0003 	orr.w	r0, r0, r3
   12abc:	fa21 f304 	lsr.w	r3, r1, r4
   12ac0:	ea45 0103 	orr.w	r1, r5, r3
   12ac4:	bd30      	pop	{r4, r5, pc}
   12ac6:	f1c4 040c 	rsb	r4, r4, #12
   12aca:	f1c4 0220 	rsb	r2, r4, #32
   12ace:	fa20 f002 	lsr.w	r0, r0, r2
   12ad2:	fa01 f304 	lsl.w	r3, r1, r4
   12ad6:	ea40 0003 	orr.w	r0, r0, r3
   12ada:	4629      	mov	r1, r5
   12adc:	bd30      	pop	{r4, r5, pc}
   12ade:	fa21 f004 	lsr.w	r0, r1, r4
   12ae2:	4629      	mov	r1, r5
   12ae4:	bd30      	pop	{r4, r5, pc}
   12ae6:	f094 0f00 	teq	r4, #0
   12aea:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   12aee:	bf06      	itte	eq
   12af0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   12af4:	3401      	addeq	r4, #1
   12af6:	3d01      	subne	r5, #1
   12af8:	e74e      	b.n	12998 <__adddf3+0x8c>
   12afa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   12afe:	bf18      	it	ne
   12b00:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   12b04:	d029      	beq.n	12b5a <__adddf3+0x24e>
   12b06:	ea94 0f05 	teq	r4, r5
   12b0a:	bf08      	it	eq
   12b0c:	ea90 0f02 	teqeq	r0, r2
   12b10:	d005      	beq.n	12b1e <__adddf3+0x212>
   12b12:	ea54 0c00 	orrs.w	ip, r4, r0
   12b16:	bf04      	itt	eq
   12b18:	4619      	moveq	r1, r3
   12b1a:	4610      	moveq	r0, r2
   12b1c:	bd30      	pop	{r4, r5, pc}
   12b1e:	ea91 0f03 	teq	r1, r3
   12b22:	bf1e      	ittt	ne
   12b24:	2100      	movne	r1, #0
   12b26:	2000      	movne	r0, #0
   12b28:	bd30      	popne	{r4, r5, pc}
   12b2a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   12b2e:	d105      	bne.n	12b3c <__adddf3+0x230>
   12b30:	0040      	lsls	r0, r0, #1
   12b32:	4149      	adcs	r1, r1
   12b34:	bf28      	it	cs
   12b36:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   12b3a:	bd30      	pop	{r4, r5, pc}
   12b3c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   12b40:	bf3c      	itt	cc
   12b42:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   12b46:	bd30      	popcc	{r4, r5, pc}
   12b48:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   12b4c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   12b50:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   12b54:	f04f 0000 	mov.w	r0, #0
   12b58:	bd30      	pop	{r4, r5, pc}
   12b5a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   12b5e:	bf1a      	itte	ne
   12b60:	4619      	movne	r1, r3
   12b62:	4610      	movne	r0, r2
   12b64:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   12b68:	bf1c      	itt	ne
   12b6a:	460b      	movne	r3, r1
   12b6c:	4602      	movne	r2, r0
   12b6e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   12b72:	bf06      	itte	eq
   12b74:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   12b78:	ea91 0f03 	teqeq	r1, r3
   12b7c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   12b80:	bd30      	pop	{r4, r5, pc}
__adddf3():
   12b82:	bf00      	nop

00012b84 <__aeabi_ui2d>:
__aeabi_ui2d():
   12b84:	f090 0f00 	teq	r0, #0
   12b88:	bf04      	itt	eq
   12b8a:	2100      	moveq	r1, #0
   12b8c:	4770      	bxeq	lr
   12b8e:	b530      	push	{r4, r5, lr}
   12b90:	f44f 6480 	mov.w	r4, #1024	; 0x400
   12b94:	f104 0432 	add.w	r4, r4, #50	; 0x32
   12b98:	f04f 0500 	mov.w	r5, #0
   12b9c:	f04f 0100 	mov.w	r1, #0
   12ba0:	e750      	b.n	12a44 <__adddf3+0x138>
   12ba2:	bf00      	nop

00012ba4 <__aeabi_i2d>:
__floatsidf():
   12ba4:	f090 0f00 	teq	r0, #0
   12ba8:	bf04      	itt	eq
   12baa:	2100      	moveq	r1, #0
   12bac:	4770      	bxeq	lr
   12bae:	b530      	push	{r4, r5, lr}
   12bb0:	f44f 6480 	mov.w	r4, #1024	; 0x400
   12bb4:	f104 0432 	add.w	r4, r4, #50	; 0x32
   12bb8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   12bbc:	bf48      	it	mi
   12bbe:	4240      	negmi	r0, r0
   12bc0:	f04f 0100 	mov.w	r1, #0
   12bc4:	e73e      	b.n	12a44 <__adddf3+0x138>
   12bc6:	bf00      	nop

00012bc8 <__aeabi_f2d>:
__extendsfdf2():
   12bc8:	0042      	lsls	r2, r0, #1
   12bca:	ea4f 01e2 	mov.w	r1, r2, asr #3
   12bce:	ea4f 0131 	mov.w	r1, r1, rrx
   12bd2:	ea4f 7002 	mov.w	r0, r2, lsl #28
   12bd6:	bf1f      	itttt	ne
   12bd8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   12bdc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   12be0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   12be4:	4770      	bxne	lr
   12be6:	f092 0f00 	teq	r2, #0
   12bea:	bf14      	ite	ne
   12bec:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   12bf0:	4770      	bxeq	lr
   12bf2:	b530      	push	{r4, r5, lr}
   12bf4:	f44f 7460 	mov.w	r4, #896	; 0x380
   12bf8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   12bfc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   12c00:	e720      	b.n	12a44 <__adddf3+0x138>
   12c02:	bf00      	nop

00012c04 <__aeabi_ul2d>:
__aeabi_ul2d():
   12c04:	ea50 0201 	orrs.w	r2, r0, r1
   12c08:	bf08      	it	eq
   12c0a:	4770      	bxeq	lr
   12c0c:	b530      	push	{r4, r5, lr}
   12c0e:	f04f 0500 	mov.w	r5, #0
   12c12:	e00a      	b.n	12c2a <__aeabi_l2d+0x16>

00012c14 <__aeabi_l2d>:
   12c14:	ea50 0201 	orrs.w	r2, r0, r1
   12c18:	bf08      	it	eq
   12c1a:	4770      	bxeq	lr
   12c1c:	b530      	push	{r4, r5, lr}
   12c1e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   12c22:	d502      	bpl.n	12c2a <__aeabi_l2d+0x16>
   12c24:	4240      	negs	r0, r0
   12c26:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   12c2a:	f44f 6480 	mov.w	r4, #1024	; 0x400
   12c2e:	f104 0432 	add.w	r4, r4, #50	; 0x32
   12c32:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   12c36:	f43f aedc 	beq.w	129f2 <__adddf3+0xe6>
   12c3a:	f04f 0203 	mov.w	r2, #3
   12c3e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   12c42:	bf18      	it	ne
   12c44:	3203      	addne	r2, #3
   12c46:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   12c4a:	bf18      	it	ne
   12c4c:	3203      	addne	r2, #3
   12c4e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   12c52:	f1c2 0320 	rsb	r3, r2, #32
   12c56:	fa00 fc03 	lsl.w	ip, r0, r3
   12c5a:	fa20 f002 	lsr.w	r0, r0, r2
   12c5e:	fa01 fe03 	lsl.w	lr, r1, r3
   12c62:	ea40 000e 	orr.w	r0, r0, lr
   12c66:	fa21 f102 	lsr.w	r1, r1, r2
   12c6a:	4414      	add	r4, r2
   12c6c:	e6c1      	b.n	129f2 <__adddf3+0xe6>
__floatdidf():
   12c6e:	bf00      	nop

00012c70 <__aeabi_dmul>:
__aeabi_dmul():
   12c70:	b570      	push	{r4, r5, r6, lr}
   12c72:	f04f 0cff 	mov.w	ip, #255	; 0xff
   12c76:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   12c7a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   12c7e:	bf1d      	ittte	ne
   12c80:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   12c84:	ea94 0f0c 	teqne	r4, ip
   12c88:	ea95 0f0c 	teqne	r5, ip
   12c8c:	f000 f8de 	bleq	12e4c <__aeabi_dmul+0x1dc>
   12c90:	442c      	add	r4, r5
   12c92:	ea81 0603 	eor.w	r6, r1, r3
   12c96:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   12c9a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   12c9e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   12ca2:	bf18      	it	ne
   12ca4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   12ca8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   12cac:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   12cb0:	d038      	beq.n	12d24 <__aeabi_dmul+0xb4>
   12cb2:	fba0 ce02 	umull	ip, lr, r0, r2
   12cb6:	f04f 0500 	mov.w	r5, #0
   12cba:	fbe1 e502 	umlal	lr, r5, r1, r2
   12cbe:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   12cc2:	fbe0 e503 	umlal	lr, r5, r0, r3
   12cc6:	f04f 0600 	mov.w	r6, #0
   12cca:	fbe1 5603 	umlal	r5, r6, r1, r3
   12cce:	f09c 0f00 	teq	ip, #0
   12cd2:	bf18      	it	ne
   12cd4:	f04e 0e01 	orrne.w	lr, lr, #1
   12cd8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   12cdc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   12ce0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   12ce4:	d204      	bcs.n	12cf0 <__aeabi_dmul+0x80>
   12ce6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   12cea:	416d      	adcs	r5, r5
   12cec:	eb46 0606 	adc.w	r6, r6, r6
   12cf0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   12cf4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   12cf8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   12cfc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   12d00:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   12d04:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   12d08:	bf88      	it	hi
   12d0a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   12d0e:	d81e      	bhi.n	12d4e <__aeabi_dmul+0xde>
   12d10:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   12d14:	bf08      	it	eq
   12d16:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   12d1a:	f150 0000 	adcs.w	r0, r0, #0
   12d1e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   12d22:	bd70      	pop	{r4, r5, r6, pc}
   12d24:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   12d28:	ea46 0101 	orr.w	r1, r6, r1
   12d2c:	ea40 0002 	orr.w	r0, r0, r2
   12d30:	ea81 0103 	eor.w	r1, r1, r3
   12d34:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   12d38:	bfc2      	ittt	gt
   12d3a:	ebd4 050c 	rsbsgt	r5, r4, ip
   12d3e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   12d42:	bd70      	popgt	{r4, r5, r6, pc}
   12d44:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   12d48:	f04f 0e00 	mov.w	lr, #0
   12d4c:	3c01      	subs	r4, #1
   12d4e:	f300 80ab 	bgt.w	12ea8 <__aeabi_dmul+0x238>
   12d52:	f114 0f36 	cmn.w	r4, #54	; 0x36
   12d56:	bfde      	ittt	le
   12d58:	2000      	movle	r0, #0
   12d5a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   12d5e:	bd70      	pople	{r4, r5, r6, pc}
   12d60:	f1c4 0400 	rsb	r4, r4, #0
   12d64:	3c20      	subs	r4, #32
   12d66:	da35      	bge.n	12dd4 <__aeabi_dmul+0x164>
   12d68:	340c      	adds	r4, #12
   12d6a:	dc1b      	bgt.n	12da4 <__aeabi_dmul+0x134>
   12d6c:	f104 0414 	add.w	r4, r4, #20
   12d70:	f1c4 0520 	rsb	r5, r4, #32
   12d74:	fa00 f305 	lsl.w	r3, r0, r5
   12d78:	fa20 f004 	lsr.w	r0, r0, r4
   12d7c:	fa01 f205 	lsl.w	r2, r1, r5
   12d80:	ea40 0002 	orr.w	r0, r0, r2
   12d84:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   12d88:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   12d8c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   12d90:	fa21 f604 	lsr.w	r6, r1, r4
   12d94:	eb42 0106 	adc.w	r1, r2, r6
   12d98:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   12d9c:	bf08      	it	eq
   12d9e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   12da2:	bd70      	pop	{r4, r5, r6, pc}
   12da4:	f1c4 040c 	rsb	r4, r4, #12
   12da8:	f1c4 0520 	rsb	r5, r4, #32
   12dac:	fa00 f304 	lsl.w	r3, r0, r4
   12db0:	fa20 f005 	lsr.w	r0, r0, r5
   12db4:	fa01 f204 	lsl.w	r2, r1, r4
   12db8:	ea40 0002 	orr.w	r0, r0, r2
   12dbc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   12dc0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   12dc4:	f141 0100 	adc.w	r1, r1, #0
   12dc8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   12dcc:	bf08      	it	eq
   12dce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   12dd2:	bd70      	pop	{r4, r5, r6, pc}
   12dd4:	f1c4 0520 	rsb	r5, r4, #32
   12dd8:	fa00 f205 	lsl.w	r2, r0, r5
   12ddc:	ea4e 0e02 	orr.w	lr, lr, r2
   12de0:	fa20 f304 	lsr.w	r3, r0, r4
   12de4:	fa01 f205 	lsl.w	r2, r1, r5
   12de8:	ea43 0302 	orr.w	r3, r3, r2
   12dec:	fa21 f004 	lsr.w	r0, r1, r4
   12df0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   12df4:	fa21 f204 	lsr.w	r2, r1, r4
   12df8:	ea20 0002 	bic.w	r0, r0, r2
   12dfc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   12e00:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   12e04:	bf08      	it	eq
   12e06:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   12e0a:	bd70      	pop	{r4, r5, r6, pc}
   12e0c:	f094 0f00 	teq	r4, #0
   12e10:	d10f      	bne.n	12e32 <__aeabi_dmul+0x1c2>
   12e12:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   12e16:	0040      	lsls	r0, r0, #1
   12e18:	eb41 0101 	adc.w	r1, r1, r1
   12e1c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   12e20:	bf08      	it	eq
   12e22:	3c01      	subeq	r4, #1
   12e24:	d0f7      	beq.n	12e16 <__aeabi_dmul+0x1a6>
   12e26:	ea41 0106 	orr.w	r1, r1, r6
   12e2a:	f095 0f00 	teq	r5, #0
   12e2e:	bf18      	it	ne
   12e30:	4770      	bxne	lr
   12e32:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   12e36:	0052      	lsls	r2, r2, #1
   12e38:	eb43 0303 	adc.w	r3, r3, r3
   12e3c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   12e40:	bf08      	it	eq
   12e42:	3d01      	subeq	r5, #1
   12e44:	d0f7      	beq.n	12e36 <__aeabi_dmul+0x1c6>
   12e46:	ea43 0306 	orr.w	r3, r3, r6
   12e4a:	4770      	bx	lr
   12e4c:	ea94 0f0c 	teq	r4, ip
   12e50:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   12e54:	bf18      	it	ne
   12e56:	ea95 0f0c 	teqne	r5, ip
   12e5a:	d00c      	beq.n	12e76 <__aeabi_dmul+0x206>
   12e5c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   12e60:	bf18      	it	ne
   12e62:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   12e66:	d1d1      	bne.n	12e0c <__aeabi_dmul+0x19c>
   12e68:	ea81 0103 	eor.w	r1, r1, r3
   12e6c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   12e70:	f04f 0000 	mov.w	r0, #0
   12e74:	bd70      	pop	{r4, r5, r6, pc}
   12e76:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   12e7a:	bf06      	itte	eq
   12e7c:	4610      	moveq	r0, r2
   12e7e:	4619      	moveq	r1, r3
   12e80:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   12e84:	d019      	beq.n	12eba <__aeabi_dmul+0x24a>
   12e86:	ea94 0f0c 	teq	r4, ip
   12e8a:	d102      	bne.n	12e92 <__aeabi_dmul+0x222>
   12e8c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   12e90:	d113      	bne.n	12eba <__aeabi_dmul+0x24a>
   12e92:	ea95 0f0c 	teq	r5, ip
   12e96:	d105      	bne.n	12ea4 <__aeabi_dmul+0x234>
   12e98:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   12e9c:	bf1c      	itt	ne
   12e9e:	4610      	movne	r0, r2
   12ea0:	4619      	movne	r1, r3
   12ea2:	d10a      	bne.n	12eba <__aeabi_dmul+0x24a>
   12ea4:	ea81 0103 	eor.w	r1, r1, r3
   12ea8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   12eac:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   12eb0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   12eb4:	f04f 0000 	mov.w	r0, #0
   12eb8:	bd70      	pop	{r4, r5, r6, pc}
   12eba:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   12ebe:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   12ec2:	bd70      	pop	{r4, r5, r6, pc}

00012ec4 <__aeabi_ddiv>:
__aeabi_ddiv():
   12ec4:	b570      	push	{r4, r5, r6, lr}
   12ec6:	f04f 0cff 	mov.w	ip, #255	; 0xff
   12eca:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   12ece:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   12ed2:	bf1d      	ittte	ne
   12ed4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   12ed8:	ea94 0f0c 	teqne	r4, ip
   12edc:	ea95 0f0c 	teqne	r5, ip
   12ee0:	f000 f8a7 	bleq	13032 <__aeabi_ddiv+0x16e>
   12ee4:	eba4 0405 	sub.w	r4, r4, r5
   12ee8:	ea81 0e03 	eor.w	lr, r1, r3
   12eec:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   12ef0:	ea4f 3101 	mov.w	r1, r1, lsl #12
   12ef4:	f000 8088 	beq.w	13008 <__aeabi_ddiv+0x144>
   12ef8:	ea4f 3303 	mov.w	r3, r3, lsl #12
   12efc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   12f00:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   12f04:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   12f08:	ea4f 2202 	mov.w	r2, r2, lsl #8
   12f0c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   12f10:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   12f14:	ea4f 2600 	mov.w	r6, r0, lsl #8
   12f18:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   12f1c:	429d      	cmp	r5, r3
   12f1e:	bf08      	it	eq
   12f20:	4296      	cmpeq	r6, r2
   12f22:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   12f26:	f504 7440 	add.w	r4, r4, #768	; 0x300
   12f2a:	d202      	bcs.n	12f32 <__aeabi_ddiv+0x6e>
   12f2c:	085b      	lsrs	r3, r3, #1
   12f2e:	ea4f 0232 	mov.w	r2, r2, rrx
   12f32:	1ab6      	subs	r6, r6, r2
   12f34:	eb65 0503 	sbc.w	r5, r5, r3
   12f38:	085b      	lsrs	r3, r3, #1
   12f3a:	ea4f 0232 	mov.w	r2, r2, rrx
   12f3e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   12f42:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   12f46:	ebb6 0e02 	subs.w	lr, r6, r2
   12f4a:	eb75 0e03 	sbcs.w	lr, r5, r3
   12f4e:	bf22      	ittt	cs
   12f50:	1ab6      	subcs	r6, r6, r2
   12f52:	4675      	movcs	r5, lr
   12f54:	ea40 000c 	orrcs.w	r0, r0, ip
   12f58:	085b      	lsrs	r3, r3, #1
   12f5a:	ea4f 0232 	mov.w	r2, r2, rrx
   12f5e:	ebb6 0e02 	subs.w	lr, r6, r2
   12f62:	eb75 0e03 	sbcs.w	lr, r5, r3
   12f66:	bf22      	ittt	cs
   12f68:	1ab6      	subcs	r6, r6, r2
   12f6a:	4675      	movcs	r5, lr
   12f6c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   12f70:	085b      	lsrs	r3, r3, #1
   12f72:	ea4f 0232 	mov.w	r2, r2, rrx
   12f76:	ebb6 0e02 	subs.w	lr, r6, r2
   12f7a:	eb75 0e03 	sbcs.w	lr, r5, r3
   12f7e:	bf22      	ittt	cs
   12f80:	1ab6      	subcs	r6, r6, r2
   12f82:	4675      	movcs	r5, lr
   12f84:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   12f88:	085b      	lsrs	r3, r3, #1
   12f8a:	ea4f 0232 	mov.w	r2, r2, rrx
   12f8e:	ebb6 0e02 	subs.w	lr, r6, r2
   12f92:	eb75 0e03 	sbcs.w	lr, r5, r3
   12f96:	bf22      	ittt	cs
   12f98:	1ab6      	subcs	r6, r6, r2
   12f9a:	4675      	movcs	r5, lr
   12f9c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   12fa0:	ea55 0e06 	orrs.w	lr, r5, r6
   12fa4:	d018      	beq.n	12fd8 <__aeabi_ddiv+0x114>
   12fa6:	ea4f 1505 	mov.w	r5, r5, lsl #4
   12faa:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   12fae:	ea4f 1606 	mov.w	r6, r6, lsl #4
   12fb2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   12fb6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   12fba:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   12fbe:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   12fc2:	d1c0      	bne.n	12f46 <__aeabi_ddiv+0x82>
   12fc4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   12fc8:	d10b      	bne.n	12fe2 <__aeabi_ddiv+0x11e>
   12fca:	ea41 0100 	orr.w	r1, r1, r0
   12fce:	f04f 0000 	mov.w	r0, #0
   12fd2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   12fd6:	e7b6      	b.n	12f46 <__aeabi_ddiv+0x82>
   12fd8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   12fdc:	bf04      	itt	eq
   12fde:	4301      	orreq	r1, r0
   12fe0:	2000      	moveq	r0, #0
   12fe2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   12fe6:	bf88      	it	hi
   12fe8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   12fec:	f63f aeaf 	bhi.w	12d4e <__aeabi_dmul+0xde>
   12ff0:	ebb5 0c03 	subs.w	ip, r5, r3
   12ff4:	bf04      	itt	eq
   12ff6:	ebb6 0c02 	subseq.w	ip, r6, r2
   12ffa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   12ffe:	f150 0000 	adcs.w	r0, r0, #0
   13002:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   13006:	bd70      	pop	{r4, r5, r6, pc}
   13008:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   1300c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   13010:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   13014:	bfc2      	ittt	gt
   13016:	ebd4 050c 	rsbsgt	r5, r4, ip
   1301a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   1301e:	bd70      	popgt	{r4, r5, r6, pc}
   13020:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   13024:	f04f 0e00 	mov.w	lr, #0
   13028:	3c01      	subs	r4, #1
   1302a:	e690      	b.n	12d4e <__aeabi_dmul+0xde>
   1302c:	ea45 0e06 	orr.w	lr, r5, r6
   13030:	e68d      	b.n	12d4e <__aeabi_dmul+0xde>
   13032:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   13036:	ea94 0f0c 	teq	r4, ip
   1303a:	bf08      	it	eq
   1303c:	ea95 0f0c 	teqeq	r5, ip
   13040:	f43f af3b 	beq.w	12eba <__aeabi_dmul+0x24a>
   13044:	ea94 0f0c 	teq	r4, ip
   13048:	d10a      	bne.n	13060 <__aeabi_ddiv+0x19c>
   1304a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   1304e:	f47f af34 	bne.w	12eba <__aeabi_dmul+0x24a>
   13052:	ea95 0f0c 	teq	r5, ip
   13056:	f47f af25 	bne.w	12ea4 <__aeabi_dmul+0x234>
   1305a:	4610      	mov	r0, r2
   1305c:	4619      	mov	r1, r3
   1305e:	e72c      	b.n	12eba <__aeabi_dmul+0x24a>
   13060:	ea95 0f0c 	teq	r5, ip
   13064:	d106      	bne.n	13074 <__aeabi_ddiv+0x1b0>
   13066:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   1306a:	f43f aefd 	beq.w	12e68 <__aeabi_dmul+0x1f8>
   1306e:	4610      	mov	r0, r2
   13070:	4619      	mov	r1, r3
   13072:	e722      	b.n	12eba <__aeabi_dmul+0x24a>
   13074:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   13078:	bf18      	it	ne
   1307a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1307e:	f47f aec5 	bne.w	12e0c <__aeabi_dmul+0x19c>
   13082:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   13086:	f47f af0d 	bne.w	12ea4 <__aeabi_dmul+0x234>
   1308a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   1308e:	f47f aeeb 	bne.w	12e68 <__aeabi_dmul+0x1f8>
   13092:	e712      	b.n	12eba <__aeabi_dmul+0x24a>

00013094 <__aeabi_d2f>:
__aeabi_d2f():
   13094:	ea4f 0241 	mov.w	r2, r1, lsl #1
   13098:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
   1309c:	bf24      	itt	cs
   1309e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
   130a2:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
   130a6:	d90d      	bls.n	130c4 <__aeabi_d2f+0x30>
   130a8:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   130ac:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   130b0:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
   130b4:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
   130b8:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   130bc:	bf08      	it	eq
   130be:	f020 0001 	biceq.w	r0, r0, #1
   130c2:	4770      	bx	lr
   130c4:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
   130c8:	d121      	bne.n	1310e <__aeabi_d2f+0x7a>
   130ca:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
   130ce:	bfbc      	itt	lt
   130d0:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
   130d4:	4770      	bxlt	lr
   130d6:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   130da:	ea4f 5252 	mov.w	r2, r2, lsr #21
   130de:	f1c2 0218 	rsb	r2, r2, #24
   130e2:	f1c2 0c20 	rsb	ip, r2, #32
   130e6:	fa10 f30c 	lsls.w	r3, r0, ip
   130ea:	fa20 f002 	lsr.w	r0, r0, r2
   130ee:	bf18      	it	ne
   130f0:	f040 0001 	orrne.w	r0, r0, #1
   130f4:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   130f8:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   130fc:	fa03 fc0c 	lsl.w	ip, r3, ip
   13100:	ea40 000c 	orr.w	r0, r0, ip
   13104:	fa23 f302 	lsr.w	r3, r3, r2
   13108:	ea4f 0343 	mov.w	r3, r3, lsl #1
   1310c:	e7cc      	b.n	130a8 <__aeabi_d2f+0x14>
   1310e:	ea7f 5362 	mvns.w	r3, r2, asr #21
   13112:	d107      	bne.n	13124 <__aeabi_d2f+0x90>
   13114:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   13118:	bf1e      	ittt	ne
   1311a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
   1311e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
   13122:	4770      	bxne	lr
   13124:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
   13128:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1312c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   13130:	4770      	bx	lr
   13132:	bf00      	nop

00013134 <__aeabi_frsub>:
__aeabi_frsub():
   13134:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   13138:	e002      	b.n	13140 <__addsf3>
   1313a:	bf00      	nop

0001313c <__aeabi_fsub>:
   1313c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00013140 <__addsf3>:
   13140:	0042      	lsls	r2, r0, #1
   13142:	bf1f      	itttt	ne
   13144:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   13148:	ea92 0f03 	teqne	r2, r3
   1314c:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   13150:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   13154:	d06a      	beq.n	1322c <__addsf3+0xec>
   13156:	ea4f 6212 	mov.w	r2, r2, lsr #24
   1315a:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   1315e:	bfc1      	itttt	gt
   13160:	18d2      	addgt	r2, r2, r3
   13162:	4041      	eorgt	r1, r0
   13164:	4048      	eorgt	r0, r1
   13166:	4041      	eorgt	r1, r0
   13168:	bfb8      	it	lt
   1316a:	425b      	neglt	r3, r3
   1316c:	2b19      	cmp	r3, #25
   1316e:	bf88      	it	hi
   13170:	4770      	bxhi	lr
   13172:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   13176:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1317a:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   1317e:	bf18      	it	ne
   13180:	4240      	negne	r0, r0
   13182:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   13186:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   1318a:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   1318e:	bf18      	it	ne
   13190:	4249      	negne	r1, r1
   13192:	ea92 0f03 	teq	r2, r3
   13196:	d03f      	beq.n	13218 <__addsf3+0xd8>
   13198:	f1a2 0201 	sub.w	r2, r2, #1
   1319c:	fa41 fc03 	asr.w	ip, r1, r3
   131a0:	eb10 000c 	adds.w	r0, r0, ip
   131a4:	f1c3 0320 	rsb	r3, r3, #32
   131a8:	fa01 f103 	lsl.w	r1, r1, r3
   131ac:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   131b0:	d502      	bpl.n	131b8 <__addsf3+0x78>
   131b2:	4249      	negs	r1, r1
   131b4:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   131b8:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   131bc:	d313      	bcc.n	131e6 <__addsf3+0xa6>
   131be:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   131c2:	d306      	bcc.n	131d2 <__addsf3+0x92>
   131c4:	0840      	lsrs	r0, r0, #1
   131c6:	ea4f 0131 	mov.w	r1, r1, rrx
   131ca:	f102 0201 	add.w	r2, r2, #1
   131ce:	2afe      	cmp	r2, #254	; 0xfe
   131d0:	d251      	bcs.n	13276 <__addsf3+0x136>
   131d2:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   131d6:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   131da:	bf08      	it	eq
   131dc:	f020 0001 	biceq.w	r0, r0, #1
   131e0:	ea40 0003 	orr.w	r0, r0, r3
   131e4:	4770      	bx	lr
   131e6:	0049      	lsls	r1, r1, #1
   131e8:	eb40 0000 	adc.w	r0, r0, r0
   131ec:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   131f0:	f1a2 0201 	sub.w	r2, r2, #1
   131f4:	d1ed      	bne.n	131d2 <__addsf3+0x92>
   131f6:	fab0 fc80 	clz	ip, r0
   131fa:	f1ac 0c08 	sub.w	ip, ip, #8
   131fe:	ebb2 020c 	subs.w	r2, r2, ip
   13202:	fa00 f00c 	lsl.w	r0, r0, ip
   13206:	bfaa      	itet	ge
   13208:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   1320c:	4252      	neglt	r2, r2
   1320e:	4318      	orrge	r0, r3
   13210:	bfbc      	itt	lt
   13212:	40d0      	lsrlt	r0, r2
   13214:	4318      	orrlt	r0, r3
   13216:	4770      	bx	lr
   13218:	f092 0f00 	teq	r2, #0
   1321c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   13220:	bf06      	itte	eq
   13222:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   13226:	3201      	addeq	r2, #1
   13228:	3b01      	subne	r3, #1
   1322a:	e7b5      	b.n	13198 <__addsf3+0x58>
   1322c:	ea4f 0341 	mov.w	r3, r1, lsl #1
   13230:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   13234:	bf18      	it	ne
   13236:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1323a:	d021      	beq.n	13280 <__addsf3+0x140>
   1323c:	ea92 0f03 	teq	r2, r3
   13240:	d004      	beq.n	1324c <__addsf3+0x10c>
   13242:	f092 0f00 	teq	r2, #0
   13246:	bf08      	it	eq
   13248:	4608      	moveq	r0, r1
   1324a:	4770      	bx	lr
   1324c:	ea90 0f01 	teq	r0, r1
   13250:	bf1c      	itt	ne
   13252:	2000      	movne	r0, #0
   13254:	4770      	bxne	lr
   13256:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   1325a:	d104      	bne.n	13266 <__addsf3+0x126>
   1325c:	0040      	lsls	r0, r0, #1
   1325e:	bf28      	it	cs
   13260:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   13264:	4770      	bx	lr
   13266:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   1326a:	bf3c      	itt	cc
   1326c:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   13270:	4770      	bxcc	lr
   13272:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   13276:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   1327a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1327e:	4770      	bx	lr
   13280:	ea7f 6222 	mvns.w	r2, r2, asr #24
   13284:	bf16      	itet	ne
   13286:	4608      	movne	r0, r1
   13288:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   1328c:	4601      	movne	r1, r0
   1328e:	0242      	lsls	r2, r0, #9
   13290:	bf06      	itte	eq
   13292:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   13296:	ea90 0f01 	teqeq	r0, r1
   1329a:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   1329e:	4770      	bx	lr

000132a0 <__aeabi_ui2f>:
__aeabi_ui2f():
   132a0:	f04f 0300 	mov.w	r3, #0
   132a4:	e004      	b.n	132b0 <__aeabi_i2f+0x8>
   132a6:	bf00      	nop

000132a8 <__aeabi_i2f>:
   132a8:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   132ac:	bf48      	it	mi
   132ae:	4240      	negmi	r0, r0
   132b0:	ea5f 0c00 	movs.w	ip, r0
   132b4:	bf08      	it	eq
   132b6:	4770      	bxeq	lr
   132b8:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   132bc:	4601      	mov	r1, r0
   132be:	f04f 0000 	mov.w	r0, #0
   132c2:	e01c      	b.n	132fe <__aeabi_l2f+0x2a>

000132c4 <__aeabi_ul2f>:
__floatundisf():
   132c4:	ea50 0201 	orrs.w	r2, r0, r1
   132c8:	bf08      	it	eq
   132ca:	4770      	bxeq	lr
   132cc:	f04f 0300 	mov.w	r3, #0
   132d0:	e00a      	b.n	132e8 <__aeabi_l2f+0x14>
   132d2:	bf00      	nop

000132d4 <__aeabi_l2f>:
   132d4:	ea50 0201 	orrs.w	r2, r0, r1
   132d8:	bf08      	it	eq
   132da:	4770      	bxeq	lr
   132dc:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   132e0:	d502      	bpl.n	132e8 <__aeabi_l2f+0x14>
   132e2:	4240      	negs	r0, r0
   132e4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   132e8:	ea5f 0c01 	movs.w	ip, r1
   132ec:	bf02      	ittt	eq
   132ee:	4684      	moveq	ip, r0
   132f0:	4601      	moveq	r1, r0
   132f2:	2000      	moveq	r0, #0
   132f4:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   132f8:	bf08      	it	eq
   132fa:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   132fe:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   13302:	fabc f28c 	clz	r2, ip
   13306:	3a08      	subs	r2, #8
   13308:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   1330c:	db10      	blt.n	13330 <__aeabi_l2f+0x5c>
   1330e:	fa01 fc02 	lsl.w	ip, r1, r2
   13312:	4463      	add	r3, ip
   13314:	fa00 fc02 	lsl.w	ip, r0, r2
   13318:	f1c2 0220 	rsb	r2, r2, #32
   1331c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   13320:	fa20 f202 	lsr.w	r2, r0, r2
   13324:	eb43 0002 	adc.w	r0, r3, r2
   13328:	bf08      	it	eq
   1332a:	f020 0001 	biceq.w	r0, r0, #1
   1332e:	4770      	bx	lr
   13330:	f102 0220 	add.w	r2, r2, #32
   13334:	fa01 fc02 	lsl.w	ip, r1, r2
   13338:	f1c2 0220 	rsb	r2, r2, #32
   1333c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   13340:	fa21 f202 	lsr.w	r2, r1, r2
   13344:	eb43 0002 	adc.w	r0, r3, r2
   13348:	bf08      	it	eq
   1334a:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1334e:	4770      	bx	lr

00013350 <__aeabi_fmul>:
__mulsf3():
   13350:	f04f 0cff 	mov.w	ip, #255	; 0xff
   13354:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   13358:	bf1e      	ittt	ne
   1335a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1335e:	ea92 0f0c 	teqne	r2, ip
   13362:	ea93 0f0c 	teqne	r3, ip
   13366:	d06f      	beq.n	13448 <__aeabi_fmul+0xf8>
   13368:	441a      	add	r2, r3
   1336a:	ea80 0c01 	eor.w	ip, r0, r1
   1336e:	0240      	lsls	r0, r0, #9
   13370:	bf18      	it	ne
   13372:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   13376:	d01e      	beq.n	133b6 <__aeabi_fmul+0x66>
   13378:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   1337c:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   13380:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   13384:	fba0 3101 	umull	r3, r1, r0, r1
   13388:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   1338c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   13390:	bf3e      	ittt	cc
   13392:	0049      	lslcc	r1, r1, #1
   13394:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   13398:	005b      	lslcc	r3, r3, #1
   1339a:	ea40 0001 	orr.w	r0, r0, r1
   1339e:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   133a2:	2afd      	cmp	r2, #253	; 0xfd
   133a4:	d81d      	bhi.n	133e2 <__aeabi_fmul+0x92>
   133a6:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   133aa:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   133ae:	bf08      	it	eq
   133b0:	f020 0001 	biceq.w	r0, r0, #1
   133b4:	4770      	bx	lr
   133b6:	f090 0f00 	teq	r0, #0
   133ba:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   133be:	bf08      	it	eq
   133c0:	0249      	lsleq	r1, r1, #9
   133c2:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   133c6:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   133ca:	3a7f      	subs	r2, #127	; 0x7f
   133cc:	bfc2      	ittt	gt
   133ce:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   133d2:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   133d6:	4770      	bxgt	lr
   133d8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   133dc:	f04f 0300 	mov.w	r3, #0
   133e0:	3a01      	subs	r2, #1
   133e2:	dc5d      	bgt.n	134a0 <__aeabi_fmul+0x150>
   133e4:	f112 0f19 	cmn.w	r2, #25
   133e8:	bfdc      	itt	le
   133ea:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   133ee:	4770      	bxle	lr
   133f0:	f1c2 0200 	rsb	r2, r2, #0
   133f4:	0041      	lsls	r1, r0, #1
   133f6:	fa21 f102 	lsr.w	r1, r1, r2
   133fa:	f1c2 0220 	rsb	r2, r2, #32
   133fe:	fa00 fc02 	lsl.w	ip, r0, r2
   13402:	ea5f 0031 	movs.w	r0, r1, rrx
   13406:	f140 0000 	adc.w	r0, r0, #0
   1340a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   1340e:	bf08      	it	eq
   13410:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   13414:	4770      	bx	lr
   13416:	f092 0f00 	teq	r2, #0
   1341a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1341e:	bf02      	ittt	eq
   13420:	0040      	lsleq	r0, r0, #1
   13422:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   13426:	3a01      	subeq	r2, #1
   13428:	d0f9      	beq.n	1341e <__aeabi_fmul+0xce>
   1342a:	ea40 000c 	orr.w	r0, r0, ip
   1342e:	f093 0f00 	teq	r3, #0
   13432:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   13436:	bf02      	ittt	eq
   13438:	0049      	lsleq	r1, r1, #1
   1343a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1343e:	3b01      	subeq	r3, #1
   13440:	d0f9      	beq.n	13436 <__aeabi_fmul+0xe6>
   13442:	ea41 010c 	orr.w	r1, r1, ip
   13446:	e78f      	b.n	13368 <__aeabi_fmul+0x18>
   13448:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   1344c:	ea92 0f0c 	teq	r2, ip
   13450:	bf18      	it	ne
   13452:	ea93 0f0c 	teqne	r3, ip
   13456:	d00a      	beq.n	1346e <__aeabi_fmul+0x11e>
   13458:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1345c:	bf18      	it	ne
   1345e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   13462:	d1d8      	bne.n	13416 <__aeabi_fmul+0xc6>
   13464:	ea80 0001 	eor.w	r0, r0, r1
   13468:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   1346c:	4770      	bx	lr
   1346e:	f090 0f00 	teq	r0, #0
   13472:	bf17      	itett	ne
   13474:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   13478:	4608      	moveq	r0, r1
   1347a:	f091 0f00 	teqne	r1, #0
   1347e:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   13482:	d014      	beq.n	134ae <__aeabi_fmul+0x15e>
   13484:	ea92 0f0c 	teq	r2, ip
   13488:	d101      	bne.n	1348e <__aeabi_fmul+0x13e>
   1348a:	0242      	lsls	r2, r0, #9
   1348c:	d10f      	bne.n	134ae <__aeabi_fmul+0x15e>
   1348e:	ea93 0f0c 	teq	r3, ip
   13492:	d103      	bne.n	1349c <__aeabi_fmul+0x14c>
   13494:	024b      	lsls	r3, r1, #9
   13496:	bf18      	it	ne
   13498:	4608      	movne	r0, r1
   1349a:	d108      	bne.n	134ae <__aeabi_fmul+0x15e>
   1349c:	ea80 0001 	eor.w	r0, r0, r1
   134a0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   134a4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   134a8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   134ac:	4770      	bx	lr
   134ae:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   134b2:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   134b6:	4770      	bx	lr

000134b8 <__aeabi_fdiv>:
__divsf3():
   134b8:	f04f 0cff 	mov.w	ip, #255	; 0xff
   134bc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   134c0:	bf1e      	ittt	ne
   134c2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   134c6:	ea92 0f0c 	teqne	r2, ip
   134ca:	ea93 0f0c 	teqne	r3, ip
   134ce:	d069      	beq.n	135a4 <__aeabi_fdiv+0xec>
   134d0:	eba2 0203 	sub.w	r2, r2, r3
   134d4:	ea80 0c01 	eor.w	ip, r0, r1
   134d8:	0249      	lsls	r1, r1, #9
   134da:	ea4f 2040 	mov.w	r0, r0, lsl #9
   134de:	d037      	beq.n	13550 <__aeabi_fdiv+0x98>
   134e0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   134e4:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   134e8:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   134ec:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   134f0:	428b      	cmp	r3, r1
   134f2:	bf38      	it	cc
   134f4:	005b      	lslcc	r3, r3, #1
   134f6:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   134fa:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   134fe:	428b      	cmp	r3, r1
   13500:	bf24      	itt	cs
   13502:	1a5b      	subcs	r3, r3, r1
   13504:	ea40 000c 	orrcs.w	r0, r0, ip
   13508:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   1350c:	bf24      	itt	cs
   1350e:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   13512:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   13516:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   1351a:	bf24      	itt	cs
   1351c:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   13520:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   13524:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   13528:	bf24      	itt	cs
   1352a:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   1352e:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   13532:	011b      	lsls	r3, r3, #4
   13534:	bf18      	it	ne
   13536:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   1353a:	d1e0      	bne.n	134fe <__aeabi_fdiv+0x46>
   1353c:	2afd      	cmp	r2, #253	; 0xfd
   1353e:	f63f af50 	bhi.w	133e2 <__aeabi_fmul+0x92>
   13542:	428b      	cmp	r3, r1
   13544:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   13548:	bf08      	it	eq
   1354a:	f020 0001 	biceq.w	r0, r0, #1
   1354e:	4770      	bx	lr
   13550:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   13554:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   13558:	327f      	adds	r2, #127	; 0x7f
   1355a:	bfc2      	ittt	gt
   1355c:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   13560:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   13564:	4770      	bxgt	lr
   13566:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1356a:	f04f 0300 	mov.w	r3, #0
   1356e:	3a01      	subs	r2, #1
   13570:	e737      	b.n	133e2 <__aeabi_fmul+0x92>
   13572:	f092 0f00 	teq	r2, #0
   13576:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1357a:	bf02      	ittt	eq
   1357c:	0040      	lsleq	r0, r0, #1
   1357e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   13582:	3a01      	subeq	r2, #1
   13584:	d0f9      	beq.n	1357a <__aeabi_fdiv+0xc2>
   13586:	ea40 000c 	orr.w	r0, r0, ip
   1358a:	f093 0f00 	teq	r3, #0
   1358e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   13592:	bf02      	ittt	eq
   13594:	0049      	lsleq	r1, r1, #1
   13596:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1359a:	3b01      	subeq	r3, #1
   1359c:	d0f9      	beq.n	13592 <__aeabi_fdiv+0xda>
   1359e:	ea41 010c 	orr.w	r1, r1, ip
   135a2:	e795      	b.n	134d0 <__aeabi_fdiv+0x18>
   135a4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   135a8:	ea92 0f0c 	teq	r2, ip
   135ac:	d108      	bne.n	135c0 <__aeabi_fdiv+0x108>
   135ae:	0242      	lsls	r2, r0, #9
   135b0:	f47f af7d 	bne.w	134ae <__aeabi_fmul+0x15e>
   135b4:	ea93 0f0c 	teq	r3, ip
   135b8:	f47f af70 	bne.w	1349c <__aeabi_fmul+0x14c>
   135bc:	4608      	mov	r0, r1
   135be:	e776      	b.n	134ae <__aeabi_fmul+0x15e>
   135c0:	ea93 0f0c 	teq	r3, ip
   135c4:	d104      	bne.n	135d0 <__aeabi_fdiv+0x118>
   135c6:	024b      	lsls	r3, r1, #9
   135c8:	f43f af4c 	beq.w	13464 <__aeabi_fmul+0x114>
   135cc:	4608      	mov	r0, r1
   135ce:	e76e      	b.n	134ae <__aeabi_fmul+0x15e>
   135d0:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   135d4:	bf18      	it	ne
   135d6:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   135da:	d1ca      	bne.n	13572 <__aeabi_fdiv+0xba>
   135dc:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   135e0:	f47f af5c 	bne.w	1349c <__aeabi_fmul+0x14c>
   135e4:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   135e8:	f47f af3c 	bne.w	13464 <__aeabi_fmul+0x114>
   135ec:	e75f      	b.n	134ae <__aeabi_fmul+0x15e>
   135ee:	bf00      	nop

000135f0 <__aeabi_f2uiz>:
__aeabi_f2uiz():
   135f0:	0042      	lsls	r2, r0, #1
   135f2:	d20e      	bcs.n	13612 <__aeabi_f2uiz+0x22>
   135f4:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   135f8:	d30b      	bcc.n	13612 <__aeabi_f2uiz+0x22>
   135fa:	f04f 039e 	mov.w	r3, #158	; 0x9e
   135fe:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   13602:	d409      	bmi.n	13618 <__aeabi_f2uiz+0x28>
   13604:	ea4f 2300 	mov.w	r3, r0, lsl #8
   13608:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1360c:	fa23 f002 	lsr.w	r0, r3, r2
   13610:	4770      	bx	lr
   13612:	f04f 0000 	mov.w	r0, #0
   13616:	4770      	bx	lr
   13618:	f112 0f61 	cmn.w	r2, #97	; 0x61
   1361c:	d101      	bne.n	13622 <__aeabi_f2uiz+0x32>
   1361e:	0242      	lsls	r2, r0, #9
   13620:	d102      	bne.n	13628 <__aeabi_f2uiz+0x38>
   13622:	f04f 30ff 	mov.w	r0, #4294967295
   13626:	4770      	bx	lr
   13628:	f04f 0000 	mov.w	r0, #0
   1362c:	4770      	bx	lr
   1362e:	bf00      	nop

00013630 <__aeabi_uldivmod>:
$t():
   13630:	b94b      	cbnz	r3, 13646 <__aeabi_uldivmod+0x16>
   13632:	b942      	cbnz	r2, 13646 <__aeabi_uldivmod+0x16>
   13634:	2900      	cmp	r1, #0
   13636:	bf08      	it	eq
   13638:	2800      	cmpeq	r0, #0
   1363a:	d002      	beq.n	13642 <__aeabi_uldivmod+0x12>
   1363c:	f04f 31ff 	mov.w	r1, #4294967295
   13640:	4608      	mov	r0, r1
   13642:	f000 b83b 	b.w	136bc <__aeabi_idiv0>
   13646:	b082      	sub	sp, #8
   13648:	46ec      	mov	ip, sp
   1364a:	e92d 5000 	stmdb	sp!, {ip, lr}
   1364e:	f000 f81d 	bl	1368c <__gnu_uldivmod_helper>
   13652:	f8dd e004 	ldr.w	lr, [sp, #4]
   13656:	b002      	add	sp, #8
   13658:	bc0c      	pop	{r2, r3}
   1365a:	4770      	bx	lr

0001365c <__gnu_ldivmod_helper>:
__gnu_ldivmod_helper():
   1365c:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   13660:	9e08      	ldr	r6, [sp, #32]
   13662:	4614      	mov	r4, r2
   13664:	461d      	mov	r5, r3
   13666:	4680      	mov	r8, r0
   13668:	4689      	mov	r9, r1
   1366a:	f000 f829 	bl	136c0 <__divdi3>
   1366e:	fb04 f301 	mul.w	r3, r4, r1
   13672:	fba4 ab00 	umull	sl, fp, r4, r0
   13676:	fb00 3205 	mla	r2, r0, r5, r3
   1367a:	4493      	add	fp, r2
   1367c:	ebb8 080a 	subs.w	r8, r8, sl
   13680:	eb69 090b 	sbc.w	r9, r9, fp
   13684:	e9c6 8900 	strd	r8, r9, [r6]
   13688:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

0001368c <__gnu_uldivmod_helper>:
__gnu_uldivmod_helper():
   1368c:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   13690:	9e08      	ldr	r6, [sp, #32]
   13692:	4614      	mov	r4, r2
   13694:	461d      	mov	r5, r3
   13696:	4680      	mov	r8, r0
   13698:	4689      	mov	r9, r1
   1369a:	f000 f961 	bl	13960 <__udivdi3>
   1369e:	fb00 f505 	mul.w	r5, r0, r5
   136a2:	fba0 ab04 	umull	sl, fp, r0, r4
   136a6:	fb04 5401 	mla	r4, r4, r1, r5
   136aa:	44a3      	add	fp, r4
   136ac:	ebb8 080a 	subs.w	r8, r8, sl
   136b0:	eb69 090b 	sbc.w	r9, r9, fp
   136b4:	e9c6 8900 	strd	r8, r9, [r6]
   136b8:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

000136bc <__aeabi_idiv0>:
__aeabi_ldiv0():
   136bc:	4770      	bx	lr
   136be:	bf00      	nop

000136c0 <__divdi3>:
__divdi3():
   136c0:	2900      	cmp	r1, #0
   136c2:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   136c6:	f2c0 80a1 	blt.w	1380c <__divdi3+0x14c>
   136ca:	2400      	movs	r4, #0
   136cc:	2b00      	cmp	r3, #0
   136ce:	f2c0 8098 	blt.w	13802 <__divdi3+0x142>
   136d2:	4615      	mov	r5, r2
   136d4:	4606      	mov	r6, r0
   136d6:	460f      	mov	r7, r1
   136d8:	2b00      	cmp	r3, #0
   136da:	d13f      	bne.n	1375c <__divdi3+0x9c>
   136dc:	428a      	cmp	r2, r1
   136de:	d958      	bls.n	13792 <__divdi3+0xd2>
   136e0:	fab2 f382 	clz	r3, r2
   136e4:	b14b      	cbz	r3, 136fa <__divdi3+0x3a>
   136e6:	f1c3 0220 	rsb	r2, r3, #32
   136ea:	fa01 f703 	lsl.w	r7, r1, r3
   136ee:	fa20 f202 	lsr.w	r2, r0, r2
   136f2:	409d      	lsls	r5, r3
   136f4:	fa00 f603 	lsl.w	r6, r0, r3
   136f8:	4317      	orrs	r7, r2
   136fa:	0c29      	lsrs	r1, r5, #16
   136fc:	fbb7 f2f1 	udiv	r2, r7, r1
   13700:	fb01 7712 	mls	r7, r1, r2, r7
   13704:	b2a8      	uxth	r0, r5
   13706:	fb00 f302 	mul.w	r3, r0, r2
   1370a:	ea4f 4c16 	mov.w	ip, r6, lsr #16
   1370e:	ea4c 4707 	orr.w	r7, ip, r7, lsl #16
   13712:	42bb      	cmp	r3, r7
   13714:	d909      	bls.n	1372a <__divdi3+0x6a>
   13716:	197f      	adds	r7, r7, r5
   13718:	f102 3cff 	add.w	ip, r2, #4294967295
   1371c:	f080 8105 	bcs.w	1392a <__divdi3+0x26a>
   13720:	42bb      	cmp	r3, r7
   13722:	f240 8102 	bls.w	1392a <__divdi3+0x26a>
   13726:	3a02      	subs	r2, #2
   13728:	442f      	add	r7, r5
   1372a:	1aff      	subs	r7, r7, r3
   1372c:	fbb7 f3f1 	udiv	r3, r7, r1
   13730:	fb01 7113 	mls	r1, r1, r3, r7
   13734:	fb00 f003 	mul.w	r0, r0, r3
   13738:	b2b6      	uxth	r6, r6
   1373a:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
   1373e:	4288      	cmp	r0, r1
   13740:	d908      	bls.n	13754 <__divdi3+0x94>
   13742:	1949      	adds	r1, r1, r5
   13744:	f103 37ff 	add.w	r7, r3, #4294967295
   13748:	f080 80f1 	bcs.w	1392e <__divdi3+0x26e>
   1374c:	4288      	cmp	r0, r1
   1374e:	f240 80ee 	bls.w	1392e <__divdi3+0x26e>
   13752:	3b02      	subs	r3, #2
   13754:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   13758:	2300      	movs	r3, #0
   1375a:	e003      	b.n	13764 <__divdi3+0xa4>
   1375c:	428b      	cmp	r3, r1
   1375e:	d90a      	bls.n	13776 <__divdi3+0xb6>
   13760:	2300      	movs	r3, #0
   13762:	461a      	mov	r2, r3
   13764:	4610      	mov	r0, r2
   13766:	4619      	mov	r1, r3
   13768:	b114      	cbz	r4, 13770 <__divdi3+0xb0>
   1376a:	4240      	negs	r0, r0
   1376c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   13770:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   13774:	4770      	bx	lr
   13776:	fab3 f883 	clz	r8, r3
   1377a:	f1b8 0f00 	cmp.w	r8, #0
   1377e:	f040 8088 	bne.w	13892 <__divdi3+0x1d2>
   13782:	428b      	cmp	r3, r1
   13784:	d302      	bcc.n	1378c <__divdi3+0xcc>
   13786:	4282      	cmp	r2, r0
   13788:	f200 80e2 	bhi.w	13950 <__divdi3+0x290>
   1378c:	2300      	movs	r3, #0
   1378e:	2201      	movs	r2, #1
   13790:	e7e8      	b.n	13764 <__divdi3+0xa4>
   13792:	b912      	cbnz	r2, 1379a <__divdi3+0xda>
   13794:	2301      	movs	r3, #1
   13796:	fbb3 f5f2 	udiv	r5, r3, r2
   1379a:	fab5 f285 	clz	r2, r5
   1379e:	2a00      	cmp	r2, #0
   137a0:	d13a      	bne.n	13818 <__divdi3+0x158>
   137a2:	1b7f      	subs	r7, r7, r5
   137a4:	0c28      	lsrs	r0, r5, #16
   137a6:	fa1f fc85 	uxth.w	ip, r5
   137aa:	2301      	movs	r3, #1
   137ac:	fbb7 f1f0 	udiv	r1, r7, r0
   137b0:	fb00 7711 	mls	r7, r0, r1, r7
   137b4:	fb0c f201 	mul.w	r2, ip, r1
   137b8:	ea4f 4816 	mov.w	r8, r6, lsr #16
   137bc:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   137c0:	42ba      	cmp	r2, r7
   137c2:	d907      	bls.n	137d4 <__divdi3+0x114>
   137c4:	197f      	adds	r7, r7, r5
   137c6:	f101 38ff 	add.w	r8, r1, #4294967295
   137ca:	d202      	bcs.n	137d2 <__divdi3+0x112>
   137cc:	42ba      	cmp	r2, r7
   137ce:	f200 80c4 	bhi.w	1395a <__divdi3+0x29a>
   137d2:	4641      	mov	r1, r8
   137d4:	1abf      	subs	r7, r7, r2
   137d6:	fbb7 f2f0 	udiv	r2, r7, r0
   137da:	fb00 7012 	mls	r0, r0, r2, r7
   137de:	fb0c fc02 	mul.w	ip, ip, r2
   137e2:	b2b6      	uxth	r6, r6
   137e4:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
   137e8:	4584      	cmp	ip, r0
   137ea:	d907      	bls.n	137fc <__divdi3+0x13c>
   137ec:	1940      	adds	r0, r0, r5
   137ee:	f102 37ff 	add.w	r7, r2, #4294967295
   137f2:	d202      	bcs.n	137fa <__divdi3+0x13a>
   137f4:	4584      	cmp	ip, r0
   137f6:	f200 80ae 	bhi.w	13956 <__divdi3+0x296>
   137fa:	463a      	mov	r2, r7
   137fc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   13800:	e7b0      	b.n	13764 <__divdi3+0xa4>
   13802:	43e4      	mvns	r4, r4
   13804:	4252      	negs	r2, r2
   13806:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   1380a:	e762      	b.n	136d2 <__divdi3+0x12>
   1380c:	4240      	negs	r0, r0
   1380e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   13812:	f04f 34ff 	mov.w	r4, #4294967295
   13816:	e759      	b.n	136cc <__divdi3+0xc>
   13818:	4095      	lsls	r5, r2
   1381a:	f1c2 0920 	rsb	r9, r2, #32
   1381e:	fa27 f109 	lsr.w	r1, r7, r9
   13822:	fa26 f909 	lsr.w	r9, r6, r9
   13826:	4097      	lsls	r7, r2
   13828:	0c28      	lsrs	r0, r5, #16
   1382a:	fbb1 f8f0 	udiv	r8, r1, r0
   1382e:	fb00 1118 	mls	r1, r0, r8, r1
   13832:	fa1f fc85 	uxth.w	ip, r5
   13836:	fb0c f308 	mul.w	r3, ip, r8
   1383a:	ea49 0907 	orr.w	r9, r9, r7
   1383e:	ea4f 4719 	mov.w	r7, r9, lsr #16
   13842:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
   13846:	428b      	cmp	r3, r1
   13848:	fa06 f602 	lsl.w	r6, r6, r2
   1384c:	d908      	bls.n	13860 <__divdi3+0x1a0>
   1384e:	1949      	adds	r1, r1, r5
   13850:	f108 32ff 	add.w	r2, r8, #4294967295
   13854:	d27a      	bcs.n	1394c <__divdi3+0x28c>
   13856:	428b      	cmp	r3, r1
   13858:	d978      	bls.n	1394c <__divdi3+0x28c>
   1385a:	f1a8 0802 	sub.w	r8, r8, #2
   1385e:	4429      	add	r1, r5
   13860:	1ac9      	subs	r1, r1, r3
   13862:	fbb1 f3f0 	udiv	r3, r1, r0
   13866:	fb00 1713 	mls	r7, r0, r3, r1
   1386a:	fb0c f203 	mul.w	r2, ip, r3
   1386e:	fa1f f989 	uxth.w	r9, r9
   13872:	ea49 4707 	orr.w	r7, r9, r7, lsl #16
   13876:	42ba      	cmp	r2, r7
   13878:	d907      	bls.n	1388a <__divdi3+0x1ca>
   1387a:	197f      	adds	r7, r7, r5
   1387c:	f103 31ff 	add.w	r1, r3, #4294967295
   13880:	d260      	bcs.n	13944 <__divdi3+0x284>
   13882:	42ba      	cmp	r2, r7
   13884:	d95e      	bls.n	13944 <__divdi3+0x284>
   13886:	3b02      	subs	r3, #2
   13888:	442f      	add	r7, r5
   1388a:	1abf      	subs	r7, r7, r2
   1388c:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   13890:	e78c      	b.n	137ac <__divdi3+0xec>
   13892:	f1c8 0220 	rsb	r2, r8, #32
   13896:	fa25 f102 	lsr.w	r1, r5, r2
   1389a:	fa03 fc08 	lsl.w	ip, r3, r8
   1389e:	fa27 f302 	lsr.w	r3, r7, r2
   138a2:	fa20 f202 	lsr.w	r2, r0, r2
   138a6:	fa07 f708 	lsl.w	r7, r7, r8
   138aa:	ea41 0c0c 	orr.w	ip, r1, ip
   138ae:	ea4f 491c 	mov.w	r9, ip, lsr #16
   138b2:	fbb3 f1f9 	udiv	r1, r3, r9
   138b6:	fb09 3311 	mls	r3, r9, r1, r3
   138ba:	fa1f fa8c 	uxth.w	sl, ip
   138be:	fb0a fb01 	mul.w	fp, sl, r1
   138c2:	4317      	orrs	r7, r2
   138c4:	0c3a      	lsrs	r2, r7, #16
   138c6:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   138ca:	459b      	cmp	fp, r3
   138cc:	fa05 f008 	lsl.w	r0, r5, r8
   138d0:	d908      	bls.n	138e4 <__divdi3+0x224>
   138d2:	eb13 030c 	adds.w	r3, r3, ip
   138d6:	f101 32ff 	add.w	r2, r1, #4294967295
   138da:	d235      	bcs.n	13948 <__divdi3+0x288>
   138dc:	459b      	cmp	fp, r3
   138de:	d933      	bls.n	13948 <__divdi3+0x288>
   138e0:	3902      	subs	r1, #2
   138e2:	4463      	add	r3, ip
   138e4:	ebcb 0303 	rsb	r3, fp, r3
   138e8:	fbb3 f2f9 	udiv	r2, r3, r9
   138ec:	fb09 3312 	mls	r3, r9, r2, r3
   138f0:	fb0a fa02 	mul.w	sl, sl, r2
   138f4:	b2bf      	uxth	r7, r7
   138f6:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
   138fa:	45ba      	cmp	sl, r7
   138fc:	d908      	bls.n	13910 <__divdi3+0x250>
   138fe:	eb17 070c 	adds.w	r7, r7, ip
   13902:	f102 33ff 	add.w	r3, r2, #4294967295
   13906:	d21b      	bcs.n	13940 <__divdi3+0x280>
   13908:	45ba      	cmp	sl, r7
   1390a:	d919      	bls.n	13940 <__divdi3+0x280>
   1390c:	3a02      	subs	r2, #2
   1390e:	4467      	add	r7, ip
   13910:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
   13914:	fba5 0100 	umull	r0, r1, r5, r0
   13918:	ebca 0707 	rsb	r7, sl, r7
   1391c:	428f      	cmp	r7, r1
   1391e:	f04f 0300 	mov.w	r3, #0
   13922:	d30a      	bcc.n	1393a <__divdi3+0x27a>
   13924:	d005      	beq.n	13932 <__divdi3+0x272>
   13926:	462a      	mov	r2, r5
   13928:	e71c      	b.n	13764 <__divdi3+0xa4>
   1392a:	4662      	mov	r2, ip
   1392c:	e6fd      	b.n	1372a <__divdi3+0x6a>
   1392e:	463b      	mov	r3, r7
   13930:	e710      	b.n	13754 <__divdi3+0x94>
   13932:	fa06 f608 	lsl.w	r6, r6, r8
   13936:	4286      	cmp	r6, r0
   13938:	d2f5      	bcs.n	13926 <__divdi3+0x266>
   1393a:	1e6a      	subs	r2, r5, #1
   1393c:	2300      	movs	r3, #0
   1393e:	e711      	b.n	13764 <__divdi3+0xa4>
   13940:	461a      	mov	r2, r3
   13942:	e7e5      	b.n	13910 <__divdi3+0x250>
   13944:	460b      	mov	r3, r1
   13946:	e7a0      	b.n	1388a <__divdi3+0x1ca>
   13948:	4611      	mov	r1, r2
   1394a:	e7cb      	b.n	138e4 <__divdi3+0x224>
   1394c:	4690      	mov	r8, r2
   1394e:	e787      	b.n	13860 <__divdi3+0x1a0>
   13950:	4643      	mov	r3, r8
   13952:	4642      	mov	r2, r8
   13954:	e706      	b.n	13764 <__divdi3+0xa4>
   13956:	3a02      	subs	r2, #2
   13958:	e750      	b.n	137fc <__divdi3+0x13c>
   1395a:	3902      	subs	r1, #2
   1395c:	442f      	add	r7, r5
   1395e:	e739      	b.n	137d4 <__divdi3+0x114>

00013960 <__udivdi3>:
__udivdi3():
   13960:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   13964:	4614      	mov	r4, r2
   13966:	4605      	mov	r5, r0
   13968:	460e      	mov	r6, r1
   1396a:	2b00      	cmp	r3, #0
   1396c:	d143      	bne.n	139f6 <__udivdi3+0x96>
   1396e:	428a      	cmp	r2, r1
   13970:	d953      	bls.n	13a1a <__udivdi3+0xba>
   13972:	fab2 f782 	clz	r7, r2
   13976:	b157      	cbz	r7, 1398e <__udivdi3+0x2e>
   13978:	f1c7 0620 	rsb	r6, r7, #32
   1397c:	fa20 f606 	lsr.w	r6, r0, r6
   13980:	fa01 f307 	lsl.w	r3, r1, r7
   13984:	fa02 f407 	lsl.w	r4, r2, r7
   13988:	fa00 f507 	lsl.w	r5, r0, r7
   1398c:	431e      	orrs	r6, r3
   1398e:	0c21      	lsrs	r1, r4, #16
   13990:	fbb6 f2f1 	udiv	r2, r6, r1
   13994:	fb01 6612 	mls	r6, r1, r2, r6
   13998:	b2a0      	uxth	r0, r4
   1399a:	fb00 f302 	mul.w	r3, r0, r2
   1399e:	0c2f      	lsrs	r7, r5, #16
   139a0:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
   139a4:	42b3      	cmp	r3, r6
   139a6:	d909      	bls.n	139bc <__udivdi3+0x5c>
   139a8:	1936      	adds	r6, r6, r4
   139aa:	f102 37ff 	add.w	r7, r2, #4294967295
   139ae:	f080 80fd 	bcs.w	13bac <__udivdi3+0x24c>
   139b2:	42b3      	cmp	r3, r6
   139b4:	f240 80fa 	bls.w	13bac <__udivdi3+0x24c>
   139b8:	3a02      	subs	r2, #2
   139ba:	4426      	add	r6, r4
   139bc:	1af6      	subs	r6, r6, r3
   139be:	fbb6 f3f1 	udiv	r3, r6, r1
   139c2:	fb01 6113 	mls	r1, r1, r3, r6
   139c6:	fb00 f003 	mul.w	r0, r0, r3
   139ca:	b2ad      	uxth	r5, r5
   139cc:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
   139d0:	4288      	cmp	r0, r1
   139d2:	d908      	bls.n	139e6 <__udivdi3+0x86>
   139d4:	1909      	adds	r1, r1, r4
   139d6:	f103 36ff 	add.w	r6, r3, #4294967295
   139da:	f080 80e9 	bcs.w	13bb0 <__udivdi3+0x250>
   139de:	4288      	cmp	r0, r1
   139e0:	f240 80e6 	bls.w	13bb0 <__udivdi3+0x250>
   139e4:	3b02      	subs	r3, #2
   139e6:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   139ea:	2300      	movs	r3, #0
   139ec:	4610      	mov	r0, r2
   139ee:	4619      	mov	r1, r3
   139f0:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   139f4:	4770      	bx	lr
   139f6:	428b      	cmp	r3, r1
   139f8:	d84c      	bhi.n	13a94 <__udivdi3+0x134>
   139fa:	fab3 f683 	clz	r6, r3
   139fe:	2e00      	cmp	r6, #0
   13a00:	d14f      	bne.n	13aa2 <__udivdi3+0x142>
   13a02:	428b      	cmp	r3, r1
   13a04:	d302      	bcc.n	13a0c <__udivdi3+0xac>
   13a06:	4282      	cmp	r2, r0
   13a08:	f200 80dd 	bhi.w	13bc6 <__udivdi3+0x266>
   13a0c:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   13a10:	2300      	movs	r3, #0
   13a12:	2201      	movs	r2, #1
   13a14:	4610      	mov	r0, r2
   13a16:	4619      	mov	r1, r3
   13a18:	4770      	bx	lr
   13a1a:	b912      	cbnz	r2, 13a22 <__udivdi3+0xc2>
   13a1c:	2401      	movs	r4, #1
   13a1e:	fbb4 f4f2 	udiv	r4, r4, r2
   13a22:	fab4 f284 	clz	r2, r4
   13a26:	2a00      	cmp	r2, #0
   13a28:	f040 8082 	bne.w	13b30 <__udivdi3+0x1d0>
   13a2c:	1b09      	subs	r1, r1, r4
   13a2e:	0c26      	lsrs	r6, r4, #16
   13a30:	b2a7      	uxth	r7, r4
   13a32:	2301      	movs	r3, #1
   13a34:	fbb1 f0f6 	udiv	r0, r1, r6
   13a38:	fb06 1110 	mls	r1, r6, r0, r1
   13a3c:	fb07 f200 	mul.w	r2, r7, r0
   13a40:	ea4f 4c15 	mov.w	ip, r5, lsr #16
   13a44:	ea4c 4101 	orr.w	r1, ip, r1, lsl #16
   13a48:	428a      	cmp	r2, r1
   13a4a:	d907      	bls.n	13a5c <__udivdi3+0xfc>
   13a4c:	1909      	adds	r1, r1, r4
   13a4e:	f100 3cff 	add.w	ip, r0, #4294967295
   13a52:	d202      	bcs.n	13a5a <__udivdi3+0xfa>
   13a54:	428a      	cmp	r2, r1
   13a56:	f200 80c8 	bhi.w	13bea <__udivdi3+0x28a>
   13a5a:	4660      	mov	r0, ip
   13a5c:	1a89      	subs	r1, r1, r2
   13a5e:	fbb1 f2f6 	udiv	r2, r1, r6
   13a62:	fb06 1112 	mls	r1, r6, r2, r1
   13a66:	fb07 f702 	mul.w	r7, r7, r2
   13a6a:	b2ad      	uxth	r5, r5
   13a6c:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
   13a70:	42af      	cmp	r7, r5
   13a72:	d908      	bls.n	13a86 <__udivdi3+0x126>
   13a74:	192c      	adds	r4, r5, r4
   13a76:	f102 31ff 	add.w	r1, r2, #4294967295
   13a7a:	f080 809b 	bcs.w	13bb4 <__udivdi3+0x254>
   13a7e:	42a7      	cmp	r7, r4
   13a80:	f240 8098 	bls.w	13bb4 <__udivdi3+0x254>
   13a84:	3a02      	subs	r2, #2
   13a86:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
   13a8a:	4610      	mov	r0, r2
   13a8c:	4619      	mov	r1, r3
   13a8e:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   13a92:	4770      	bx	lr
   13a94:	2300      	movs	r3, #0
   13a96:	461a      	mov	r2, r3
   13a98:	4610      	mov	r0, r2
   13a9a:	4619      	mov	r1, r3
   13a9c:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   13aa0:	4770      	bx	lr
   13aa2:	f1c6 0520 	rsb	r5, r6, #32
   13aa6:	fa22 f705 	lsr.w	r7, r2, r5
   13aaa:	fa03 f406 	lsl.w	r4, r3, r6
   13aae:	fa21 f305 	lsr.w	r3, r1, r5
   13ab2:	fa01 fb06 	lsl.w	fp, r1, r6
   13ab6:	fa20 f505 	lsr.w	r5, r0, r5
   13aba:	433c      	orrs	r4, r7
   13abc:	ea4f 4814 	mov.w	r8, r4, lsr #16
   13ac0:	fbb3 fcf8 	udiv	ip, r3, r8
   13ac4:	fb08 331c 	mls	r3, r8, ip, r3
   13ac8:	fa1f f984 	uxth.w	r9, r4
   13acc:	fb09 fa0c 	mul.w	sl, r9, ip
   13ad0:	ea45 0b0b 	orr.w	fp, r5, fp
   13ad4:	ea4f 451b 	mov.w	r5, fp, lsr #16
   13ad8:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
   13adc:	459a      	cmp	sl, r3
   13ade:	fa02 f206 	lsl.w	r2, r2, r6
   13ae2:	d904      	bls.n	13aee <__udivdi3+0x18e>
   13ae4:	191b      	adds	r3, r3, r4
   13ae6:	f10c 35ff 	add.w	r5, ip, #4294967295
   13aea:	d36f      	bcc.n	13bcc <__udivdi3+0x26c>
   13aec:	46ac      	mov	ip, r5
   13aee:	ebca 0303 	rsb	r3, sl, r3
   13af2:	fbb3 f5f8 	udiv	r5, r3, r8
   13af6:	fb08 3315 	mls	r3, r8, r5, r3
   13afa:	fb09 f905 	mul.w	r9, r9, r5
   13afe:	fa1f fb8b 	uxth.w	fp, fp
   13b02:	ea4b 4703 	orr.w	r7, fp, r3, lsl #16
   13b06:	45b9      	cmp	r9, r7
   13b08:	d904      	bls.n	13b14 <__udivdi3+0x1b4>
   13b0a:	193f      	adds	r7, r7, r4
   13b0c:	f105 33ff 	add.w	r3, r5, #4294967295
   13b10:	d362      	bcc.n	13bd8 <__udivdi3+0x278>
   13b12:	461d      	mov	r5, r3
   13b14:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
   13b18:	fbac 2302 	umull	r2, r3, ip, r2
   13b1c:	ebc9 0707 	rsb	r7, r9, r7
   13b20:	429f      	cmp	r7, r3
   13b22:	f04f 0500 	mov.w	r5, #0
   13b26:	d34a      	bcc.n	13bbe <__udivdi3+0x25e>
   13b28:	d046      	beq.n	13bb8 <__udivdi3+0x258>
   13b2a:	4662      	mov	r2, ip
   13b2c:	462b      	mov	r3, r5
   13b2e:	e75d      	b.n	139ec <__udivdi3+0x8c>
   13b30:	4094      	lsls	r4, r2
   13b32:	f1c2 0920 	rsb	r9, r2, #32
   13b36:	fa21 fc09 	lsr.w	ip, r1, r9
   13b3a:	4091      	lsls	r1, r2
   13b3c:	fa20 f909 	lsr.w	r9, r0, r9
   13b40:	0c26      	lsrs	r6, r4, #16
   13b42:	fbbc f8f6 	udiv	r8, ip, r6
   13b46:	fb06 cc18 	mls	ip, r6, r8, ip
   13b4a:	b2a7      	uxth	r7, r4
   13b4c:	fb07 f308 	mul.w	r3, r7, r8
   13b50:	ea49 0901 	orr.w	r9, r9, r1
   13b54:	ea4f 4119 	mov.w	r1, r9, lsr #16
   13b58:	ea41 4c0c 	orr.w	ip, r1, ip, lsl #16
   13b5c:	4563      	cmp	r3, ip
   13b5e:	fa00 f502 	lsl.w	r5, r0, r2
   13b62:	d909      	bls.n	13b78 <__udivdi3+0x218>
   13b64:	eb1c 0c04 	adds.w	ip, ip, r4
   13b68:	f108 32ff 	add.w	r2, r8, #4294967295
   13b6c:	d23b      	bcs.n	13be6 <__udivdi3+0x286>
   13b6e:	4563      	cmp	r3, ip
   13b70:	d939      	bls.n	13be6 <__udivdi3+0x286>
   13b72:	f1a8 0802 	sub.w	r8, r8, #2
   13b76:	44a4      	add	ip, r4
   13b78:	ebc3 0c0c 	rsb	ip, r3, ip
   13b7c:	fbbc f3f6 	udiv	r3, ip, r6
   13b80:	fb06 c113 	mls	r1, r6, r3, ip
   13b84:	fb07 f203 	mul.w	r2, r7, r3
   13b88:	fa1f f989 	uxth.w	r9, r9
   13b8c:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
   13b90:	428a      	cmp	r2, r1
   13b92:	d907      	bls.n	13ba4 <__udivdi3+0x244>
   13b94:	1909      	adds	r1, r1, r4
   13b96:	f103 30ff 	add.w	r0, r3, #4294967295
   13b9a:	d222      	bcs.n	13be2 <__udivdi3+0x282>
   13b9c:	428a      	cmp	r2, r1
   13b9e:	d920      	bls.n	13be2 <__udivdi3+0x282>
   13ba0:	3b02      	subs	r3, #2
   13ba2:	4421      	add	r1, r4
   13ba4:	1a89      	subs	r1, r1, r2
   13ba6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   13baa:	e743      	b.n	13a34 <__udivdi3+0xd4>
   13bac:	463a      	mov	r2, r7
   13bae:	e705      	b.n	139bc <__udivdi3+0x5c>
   13bb0:	4633      	mov	r3, r6
   13bb2:	e718      	b.n	139e6 <__udivdi3+0x86>
   13bb4:	460a      	mov	r2, r1
   13bb6:	e766      	b.n	13a86 <__udivdi3+0x126>
   13bb8:	40b0      	lsls	r0, r6
   13bba:	4290      	cmp	r0, r2
   13bbc:	d2b5      	bcs.n	13b2a <__udivdi3+0x1ca>
   13bbe:	f10c 32ff 	add.w	r2, ip, #4294967295
   13bc2:	2300      	movs	r3, #0
   13bc4:	e712      	b.n	139ec <__udivdi3+0x8c>
   13bc6:	4633      	mov	r3, r6
   13bc8:	4632      	mov	r2, r6
   13bca:	e70f      	b.n	139ec <__udivdi3+0x8c>
   13bcc:	459a      	cmp	sl, r3
   13bce:	d98d      	bls.n	13aec <__udivdi3+0x18c>
   13bd0:	f1ac 0c02 	sub.w	ip, ip, #2
   13bd4:	4423      	add	r3, r4
   13bd6:	e78a      	b.n	13aee <__udivdi3+0x18e>
   13bd8:	45b9      	cmp	r9, r7
   13bda:	d99a      	bls.n	13b12 <__udivdi3+0x1b2>
   13bdc:	3d02      	subs	r5, #2
   13bde:	4427      	add	r7, r4
   13be0:	e798      	b.n	13b14 <__udivdi3+0x1b4>
   13be2:	4603      	mov	r3, r0
   13be4:	e7de      	b.n	13ba4 <__udivdi3+0x244>
   13be6:	4690      	mov	r8, r2
   13be8:	e7c6      	b.n	13b78 <__udivdi3+0x218>
   13bea:	3802      	subs	r0, #2
   13bec:	4421      	add	r1, r4
   13bee:	e735      	b.n	13a5c <__udivdi3+0xfc>

00013bf0 <exit>:
exit():
   13bf0:	b508      	push	{r3, lr}
   13bf2:	2100      	movs	r1, #0
   13bf4:	4604      	mov	r4, r0
   13bf6:	f000 f887 	bl	13d08 <__call_exitprocs>
   13bfa:	4b04      	ldr	r3, [pc, #16]	; (13c0c <exit+0x1c>)
   13bfc:	6818      	ldr	r0, [r3, #0]
   13bfe:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
   13c00:	b103      	cbz	r3, 13c04 <exit+0x14>
   13c02:	4798      	blx	r3
   13c04:	4620      	mov	r0, r4
   13c06:	f000 f969 	bl	13edc <_exit>
   13c0a:	bf00      	nop
   13c0c:	0001afe0 	.word	0x0001afe0

00013c10 <__libc_init_array>:
__libc_init_array():
   13c10:	b570      	push	{r4, r5, r6, lr}
   13c12:	4e0f      	ldr	r6, [pc, #60]	; (13c50 <__libc_init_array+0x40>)
   13c14:	4d0f      	ldr	r5, [pc, #60]	; (13c54 <__libc_init_array+0x44>)
   13c16:	1b76      	subs	r6, r6, r5
   13c18:	10b6      	asrs	r6, r6, #2
   13c1a:	d007      	beq.n	13c2c <__libc_init_array+0x1c>
   13c1c:	3d04      	subs	r5, #4
   13c1e:	2400      	movs	r4, #0
   13c20:	3401      	adds	r4, #1
   13c22:	f855 3f04 	ldr.w	r3, [r5, #4]!
   13c26:	4798      	blx	r3
   13c28:	42a6      	cmp	r6, r4
   13c2a:	d1f9      	bne.n	13c20 <__libc_init_array+0x10>
   13c2c:	4e0a      	ldr	r6, [pc, #40]	; (13c58 <__libc_init_array+0x48>)
   13c2e:	4d0b      	ldr	r5, [pc, #44]	; (13c5c <__libc_init_array+0x4c>)
   13c30:	f000 f956 	bl	13ee0 <_init>
   13c34:	1b76      	subs	r6, r6, r5
   13c36:	10b6      	asrs	r6, r6, #2
   13c38:	d008      	beq.n	13c4c <__libc_init_array+0x3c>
   13c3a:	3d04      	subs	r5, #4
   13c3c:	2400      	movs	r4, #0
   13c3e:	3401      	adds	r4, #1
   13c40:	f855 3f04 	ldr.w	r3, [r5, #4]!
   13c44:	4798      	blx	r3
   13c46:	42a6      	cmp	r6, r4
   13c48:	d1f9      	bne.n	13c3e <__libc_init_array+0x2e>
   13c4a:	bd70      	pop	{r4, r5, r6, pc}
   13c4c:	bd70      	pop	{r4, r5, r6, pc}
   13c4e:	bf00      	nop
   13c50:	1000070c 	.word	0x1000070c
   13c54:	1000070c 	.word	0x1000070c
   13c58:	10000714 	.word	0x10000714
   13c5c:	1000070c 	.word	0x1000070c

00013c60 <memset>:
memset():
   13c60:	b4f0      	push	{r4, r5, r6, r7}
   13c62:	0784      	lsls	r4, r0, #30
   13c64:	d043      	beq.n	13cee <memset+0x8e>
   13c66:	1e54      	subs	r4, r2, #1
   13c68:	2a00      	cmp	r2, #0
   13c6a:	d03e      	beq.n	13cea <memset+0x8a>
   13c6c:	b2cd      	uxtb	r5, r1
   13c6e:	4603      	mov	r3, r0
   13c70:	e003      	b.n	13c7a <memset+0x1a>
   13c72:	1e62      	subs	r2, r4, #1
   13c74:	2c00      	cmp	r4, #0
   13c76:	d038      	beq.n	13cea <memset+0x8a>
   13c78:	4614      	mov	r4, r2
   13c7a:	f803 5b01 	strb.w	r5, [r3], #1
   13c7e:	079a      	lsls	r2, r3, #30
   13c80:	d1f7      	bne.n	13c72 <memset+0x12>
   13c82:	2c03      	cmp	r4, #3
   13c84:	d92a      	bls.n	13cdc <memset+0x7c>
   13c86:	b2cd      	uxtb	r5, r1
   13c88:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   13c8c:	2c0f      	cmp	r4, #15
   13c8e:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   13c92:	d915      	bls.n	13cc0 <memset+0x60>
   13c94:	f1a4 0710 	sub.w	r7, r4, #16
   13c98:	093f      	lsrs	r7, r7, #4
   13c9a:	f103 0610 	add.w	r6, r3, #16
   13c9e:	eb06 1607 	add.w	r6, r6, r7, lsl #4
   13ca2:	461a      	mov	r2, r3
   13ca4:	6015      	str	r5, [r2, #0]
   13ca6:	6055      	str	r5, [r2, #4]
   13ca8:	6095      	str	r5, [r2, #8]
   13caa:	60d5      	str	r5, [r2, #12]
   13cac:	3210      	adds	r2, #16
   13cae:	42b2      	cmp	r2, r6
   13cb0:	d1f8      	bne.n	13ca4 <memset+0x44>
   13cb2:	f004 040f 	and.w	r4, r4, #15
   13cb6:	3701      	adds	r7, #1
   13cb8:	2c03      	cmp	r4, #3
   13cba:	eb03 1307 	add.w	r3, r3, r7, lsl #4
   13cbe:	d90d      	bls.n	13cdc <memset+0x7c>
   13cc0:	461e      	mov	r6, r3
   13cc2:	4622      	mov	r2, r4
   13cc4:	3a04      	subs	r2, #4
   13cc6:	2a03      	cmp	r2, #3
   13cc8:	f846 5b04 	str.w	r5, [r6], #4
   13ccc:	d8fa      	bhi.n	13cc4 <memset+0x64>
   13cce:	1f22      	subs	r2, r4, #4
   13cd0:	f022 0203 	bic.w	r2, r2, #3
   13cd4:	3204      	adds	r2, #4
   13cd6:	4413      	add	r3, r2
   13cd8:	f004 0403 	and.w	r4, r4, #3
   13cdc:	b12c      	cbz	r4, 13cea <memset+0x8a>
   13cde:	b2c9      	uxtb	r1, r1
   13ce0:	441c      	add	r4, r3
   13ce2:	f803 1b01 	strb.w	r1, [r3], #1
   13ce6:	42a3      	cmp	r3, r4
   13ce8:	d1fb      	bne.n	13ce2 <memset+0x82>
   13cea:	bcf0      	pop	{r4, r5, r6, r7}
   13cec:	4770      	bx	lr
   13cee:	4614      	mov	r4, r2
   13cf0:	4603      	mov	r3, r0
   13cf2:	e7c6      	b.n	13c82 <memset+0x22>

00013cf4 <register_fini>:
register_fini():
   13cf4:	4b02      	ldr	r3, [pc, #8]	; (13d00 <register_fini+0xc>)
   13cf6:	b113      	cbz	r3, 13cfe <register_fini+0xa>
   13cf8:	4802      	ldr	r0, [pc, #8]	; (13d04 <register_fini+0x10>)
   13cfa:	f000 b87d 	b.w	13df8 <atexit>
   13cfe:	4770      	bx	lr
   13d00:	00000000 	.word	0x00000000
   13d04:	00013e05 	.word	0x00013e05

00013d08 <__call_exitprocs>:
__call_exitprocs():
   13d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d0c:	4b38      	ldr	r3, [pc, #224]	; (13df0 <__call_exitprocs+0xe8>)
   13d0e:	b085      	sub	sp, #20
   13d10:	681b      	ldr	r3, [r3, #0]
   13d12:	9002      	str	r0, [sp, #8]
   13d14:	f503 72a4 	add.w	r2, r3, #328	; 0x148
   13d18:	9301      	str	r3, [sp, #4]
   13d1a:	460f      	mov	r7, r1
   13d1c:	9203      	str	r2, [sp, #12]
   13d1e:	9b01      	ldr	r3, [sp, #4]
   13d20:	f8d3 8148 	ldr.w	r8, [r3, #328]	; 0x148
   13d24:	f1b8 0f00 	cmp.w	r8, #0
   13d28:	d01c      	beq.n	13d64 <__call_exitprocs+0x5c>
   13d2a:	f8dd b00c 	ldr.w	fp, [sp, #12]
   13d2e:	f04f 0901 	mov.w	r9, #1
   13d32:	46da      	mov	sl, fp
   13d34:	f8d8 3004 	ldr.w	r3, [r8, #4]
   13d38:	1e5c      	subs	r4, r3, #1
   13d3a:	d411      	bmi.n	13d60 <__call_exitprocs+0x58>
   13d3c:	f108 0588 	add.w	r5, r8, #136	; 0x88
   13d40:	1c9e      	adds	r6, r3, #2
   13d42:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   13d46:	eb08 0686 	add.w	r6, r8, r6, lsl #2
   13d4a:	b177      	cbz	r7, 13d6a <__call_exitprocs+0x62>
   13d4c:	6feb      	ldr	r3, [r5, #124]	; 0x7c
   13d4e:	42bb      	cmp	r3, r7
   13d50:	d00b      	beq.n	13d6a <__call_exitprocs+0x62>
   13d52:	3c01      	subs	r4, #1
   13d54:	1c63      	adds	r3, r4, #1
   13d56:	f1a5 0504 	sub.w	r5, r5, #4
   13d5a:	f1a6 0604 	sub.w	r6, r6, #4
   13d5e:	d1f4      	bne.n	13d4a <__call_exitprocs+0x42>
   13d60:	4a24      	ldr	r2, [pc, #144]	; (13df4 <__call_exitprocs+0xec>)
   13d62:	bb7a      	cbnz	r2, 13dc4 <__call_exitprocs+0xbc>
   13d64:	b005      	add	sp, #20
   13d66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d6a:	f8d8 2004 	ldr.w	r2, [r8, #4]
   13d6e:	f856 3c04 	ldr.w	r3, [r6, #-4]
   13d72:	3a01      	subs	r2, #1
   13d74:	42a2      	cmp	r2, r4
   13d76:	bf16      	itet	ne
   13d78:	2200      	movne	r2, #0
   13d7a:	f8c8 4004 	streq.w	r4, [r8, #4]
   13d7e:	f846 2c04 	strne.w	r2, [r6, #-4]
   13d82:	2b00      	cmp	r3, #0
   13d84:	d0e5      	beq.n	13d52 <__call_exitprocs+0x4a>
   13d86:	fa09 f204 	lsl.w	r2, r9, r4
   13d8a:	f8d8 1188 	ldr.w	r1, [r8, #392]	; 0x188
   13d8e:	f8d8 b004 	ldr.w	fp, [r8, #4]
   13d92:	420a      	tst	r2, r1
   13d94:	d010      	beq.n	13db8 <__call_exitprocs+0xb0>
   13d96:	f8d8 118c 	ldr.w	r1, [r8, #396]	; 0x18c
   13d9a:	420a      	tst	r2, r1
   13d9c:	d10e      	bne.n	13dbc <__call_exitprocs+0xb4>
   13d9e:	9802      	ldr	r0, [sp, #8]
   13da0:	f855 1c04 	ldr.w	r1, [r5, #-4]
   13da4:	4798      	blx	r3
   13da6:	f8d8 3004 	ldr.w	r3, [r8, #4]
   13daa:	455b      	cmp	r3, fp
   13dac:	d1b7      	bne.n	13d1e <__call_exitprocs+0x16>
   13dae:	f8da 3000 	ldr.w	r3, [sl]
   13db2:	4543      	cmp	r3, r8
   13db4:	d0cd      	beq.n	13d52 <__call_exitprocs+0x4a>
   13db6:	e7b2      	b.n	13d1e <__call_exitprocs+0x16>
   13db8:	4798      	blx	r3
   13dba:	e7f4      	b.n	13da6 <__call_exitprocs+0x9e>
   13dbc:	f855 0c04 	ldr.w	r0, [r5, #-4]
   13dc0:	4798      	blx	r3
   13dc2:	e7f0      	b.n	13da6 <__call_exitprocs+0x9e>
   13dc4:	f8d8 3004 	ldr.w	r3, [r8, #4]
   13dc8:	b96b      	cbnz	r3, 13de6 <__call_exitprocs+0xde>
   13dca:	f8d8 3000 	ldr.w	r3, [r8]
   13dce:	b163      	cbz	r3, 13dea <__call_exitprocs+0xe2>
   13dd0:	4640      	mov	r0, r8
   13dd2:	f8ca 3000 	str.w	r3, [sl]
   13dd6:	f3af 8000 	nop.w
   13dda:	f8da 8000 	ldr.w	r8, [sl]
   13dde:	f1b8 0f00 	cmp.w	r8, #0
   13de2:	d1a7      	bne.n	13d34 <__call_exitprocs+0x2c>
   13de4:	e7be      	b.n	13d64 <__call_exitprocs+0x5c>
   13de6:	f8d8 3000 	ldr.w	r3, [r8]
   13dea:	46c2      	mov	sl, r8
   13dec:	4698      	mov	r8, r3
   13dee:	e7f6      	b.n	13dde <__call_exitprocs+0xd6>
   13df0:	0001afe0 	.word	0x0001afe0
   13df4:	00000000 	.word	0x00000000

00013df8 <atexit>:
atexit():
   13df8:	4601      	mov	r1, r0
   13dfa:	2000      	movs	r0, #0
   13dfc:	4602      	mov	r2, r0
   13dfe:	4603      	mov	r3, r0
   13e00:	f000 b818 	b.w	13e34 <__register_exitproc>

00013e04 <__libc_fini_array>:
__libc_fini_array():
   13e04:	b538      	push	{r3, r4, r5, lr}
   13e06:	4d09      	ldr	r5, [pc, #36]	; (13e2c <__libc_fini_array+0x28>)
   13e08:	4c09      	ldr	r4, [pc, #36]	; (13e30 <__libc_fini_array+0x2c>)
   13e0a:	1b64      	subs	r4, r4, r5
   13e0c:	10a4      	asrs	r4, r4, #2
   13e0e:	bf18      	it	ne
   13e10:	eb05 0584 	addne.w	r5, r5, r4, lsl #2
   13e14:	d005      	beq.n	13e22 <__libc_fini_array+0x1e>
   13e16:	3c01      	subs	r4, #1
   13e18:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   13e1c:	4798      	blx	r3
   13e1e:	2c00      	cmp	r4, #0
   13e20:	d1f9      	bne.n	13e16 <__libc_fini_array+0x12>
   13e22:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   13e26:	f000 b861 	b.w	13eec <_fini>
   13e2a:	bf00      	nop
   13e2c:	10000714 	.word	0x10000714
   13e30:	10000718 	.word	0x10000718

00013e34 <__register_exitproc>:
__register_exitproc():
   13e34:	b5f0      	push	{r4, r5, r6, r7, lr}
   13e36:	4c27      	ldr	r4, [pc, #156]	; (13ed4 <__register_exitproc+0xa0>)
   13e38:	b085      	sub	sp, #20
   13e3a:	6826      	ldr	r6, [r4, #0]
   13e3c:	4607      	mov	r7, r0
   13e3e:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
   13e42:	2c00      	cmp	r4, #0
   13e44:	d040      	beq.n	13ec8 <__register_exitproc+0x94>
   13e46:	6865      	ldr	r5, [r4, #4]
   13e48:	2d1f      	cmp	r5, #31
   13e4a:	dd1e      	ble.n	13e8a <__register_exitproc+0x56>
   13e4c:	4822      	ldr	r0, [pc, #136]	; (13ed8 <__register_exitproc+0xa4>)
   13e4e:	b918      	cbnz	r0, 13e58 <__register_exitproc+0x24>
   13e50:	f04f 30ff 	mov.w	r0, #4294967295
   13e54:	b005      	add	sp, #20
   13e56:	bdf0      	pop	{r4, r5, r6, r7, pc}
   13e58:	f44f 70c8 	mov.w	r0, #400	; 0x190
   13e5c:	9103      	str	r1, [sp, #12]
   13e5e:	9202      	str	r2, [sp, #8]
   13e60:	9301      	str	r3, [sp, #4]
   13e62:	f3af 8000 	nop.w
   13e66:	9903      	ldr	r1, [sp, #12]
   13e68:	4604      	mov	r4, r0
   13e6a:	9a02      	ldr	r2, [sp, #8]
   13e6c:	9b01      	ldr	r3, [sp, #4]
   13e6e:	2800      	cmp	r0, #0
   13e70:	d0ee      	beq.n	13e50 <__register_exitproc+0x1c>
   13e72:	f8d6 5148 	ldr.w	r5, [r6, #328]	; 0x148
   13e76:	2000      	movs	r0, #0
   13e78:	6025      	str	r5, [r4, #0]
   13e7a:	6060      	str	r0, [r4, #4]
   13e7c:	4605      	mov	r5, r0
   13e7e:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   13e82:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
   13e86:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
   13e8a:	b93f      	cbnz	r7, 13e9c <__register_exitproc+0x68>
   13e8c:	1c6b      	adds	r3, r5, #1
   13e8e:	2000      	movs	r0, #0
   13e90:	3502      	adds	r5, #2
   13e92:	6063      	str	r3, [r4, #4]
   13e94:	f844 1025 	str.w	r1, [r4, r5, lsl #2]
   13e98:	b005      	add	sp, #20
   13e9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   13e9c:	2601      	movs	r6, #1
   13e9e:	40ae      	lsls	r6, r5
   13ea0:	eb04 0085 	add.w	r0, r4, r5, lsl #2
   13ea4:	f8c0 2088 	str.w	r2, [r0, #136]	; 0x88
   13ea8:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   13eac:	2f02      	cmp	r7, #2
   13eae:	ea42 0206 	orr.w	r2, r2, r6
   13eb2:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   13eb6:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108
   13eba:	d1e7      	bne.n	13e8c <__register_exitproc+0x58>
   13ebc:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   13ec0:	431e      	orrs	r6, r3
   13ec2:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
   13ec6:	e7e1      	b.n	13e8c <__register_exitproc+0x58>
   13ec8:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
   13ecc:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   13ed0:	e7b9      	b.n	13e46 <__register_exitproc+0x12>
   13ed2:	bf00      	nop
   13ed4:	0001afe0 	.word	0x0001afe0
   13ed8:	00000000 	.word	0x00000000

00013edc <_exit>:
_exit():
   13edc:	e7fe      	b.n	13edc <_exit>
   13ede:	bf00      	nop

00013ee0 <_init>:
$t():
   13ee0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   13ee2:	bf00      	nop
   13ee4:	bcf8      	pop	{r3, r4, r5, r6, r7}
   13ee6:	bc08      	pop	{r3}
   13ee8:	469e      	mov	lr, r3
   13eea:	4770      	bx	lr

00013eec <_fini>:
   13eec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   13eee:	bf00      	nop
   13ef0:	bcf8      	pop	{r3, r4, r5, r6, r7}
   13ef2:	bc08      	pop	{r3}
   13ef4:	469e      	mov	lr, r3
   13ef6:	4770      	bx	lr

00013ef8 <fnet_eth_null_addr>:
	...

00013f00 <fnet_eth_broadcast>:
$d():
   13f00:	ffff ffff ffff 0000 3025 5832 253a 3230     ........%02X:%02
   13f10:	3a58 3025 5832 253a 3230 3a58 3025 5832     X:%02X:%02X:%02X
   13f20:	253a 3230 0058 0000 5445 2048 202d 6843     :%02X...ETH - Ch
   13f30:	6e61 6567 4920 3450 7420 3a6f 2520 0a78     ange IP4 to: %x.
   13f40:	0000 0000                                   ....

00013f44 <fnet_eth_prot_if_list>:
   13f44:	0608 0000 0691 0000 0008 0000 1b31 0000     ............1...
   13f54:	6425 252e 2e64 6425 252e 0064 3030 303a     %d.%d.%d.%d.00:0
   13f64:	3a34 4639 313a 3a33 3734 313a 0033 0000     4:9F:13:47:13...
   13f74:	1100 3322 5544 0000 5445 2048 202d 6e49     .."3DU..ETH - In
   13f84:	7469 6169 696c 617a 6974 6e6f 203a 7325     itialization: %s
   13f94:	202c 4449 253a 0a64 0000 0000 2009 202d     , ID:%d...... - 
   13fa4:	5049 203a 7825 202c 5747 203a 7825 000a     IP: %x, GW: %x..
   13fb4:	2009 202d 414d 4b53 203a 7825 202c 4844     . - MASK: %x, DH
   13fc4:	5043 3a3f 2520 0a64 0000 0000 2009 202d     CP?: %d...... - 
   13fd4:	544d 3a55 2520 0a64 0000 0000 2009 202d     MTU: %d...... - 
   13fe4:	544d 3a55 2520 0a78 0000 0000               MTU: %x.....

00013ff0 <fnet_prot_if_list>:
   13ff0:	0004 1000 0058 1000 007c 1000 002c 1000     ....X...|...,...

00014000 <fnet_raw_socket_api>:
   14000:	0000 0000 3f29 0000 3f61 0000 3fd1 0000     ....)?..a?...?..
   14010:	0000 0000 40e5 0000 4019 0000 3f89 0000     .....@...@...?..
   14020:	1e29 0000 1ec9 0000 0000 0000               )...........

0001402c <fnet_tcp_socket_api>:
   1402c:	0001 0000 6745 0000 67cd 0000 6911 0000     ....Eg...g...i..
   1403c:	6a01 0000 6a5d 0000 6bf1 0000 6e61 0000     .j..]j...k..an..
   1404c:	6ed5 0000 7009 0000 711d 0000               .n...p...q..

00014058 <fnet_udp_socket_api>:
   14058:	0000 0000 a3b1 0000 a3e9 0000 a459 0000     ............Y...
   14068:	0000 0000 a58d 0000 a491 0000 a411 0000     ................
   14078:	1e29 0000 1ec9 0000 0000 0000 0001 0004     )...............
   14088:	7325 0000 7245 6f72 3a72 4920 766e 6c61     %s..Error: Inval
   14098:	6469 7320 6e79 6174 2078 6f66 3a72 2520     id syntax for: %
   140a8:	0073 0000 7245 6f72 3a72 4e20 206f 7573     s...Error: No su
   140b8:	6863 6320 6d6f 616d 646e 203a 7325 0000     ch command: %s..
   140c8:	000a 0000 253e 7337 2520 332d 7332 202d     ....>%7s %-32s- 
   140d8:	7325 0000                                   %s..

000140dc <fnet_serial_stream_port0>:
   140dc:	0000 0000 e921 0000 e965 0000 0000 0000     ....!...e.......

000140ec <fnet_serial_stream_port1>:
   140ec:	0001 0000 e921 0000 e965 0000 0000 0000     ....!...e.......

000140fc <fnet_serial_stream_port2>:
   140fc:	0002 0000 e921 0000 e965 0000 0000 0000     ....!...e.......

0001410c <fnet_serial_stream_port3>:
   1410c:	0003 0000 e921 0000 e965 0000 0000 0000     ....!...e.......

0001411c <fnet_serial_stream_port4>:
   1411c:	0004 0000 e921 0000 e965 0000 0000 0000     ....!...e.......

0001412c <fnet_serial_stream_port5>:
   1412c:	0005 0000 e921 0000 e965 0000 0000 0000     ....!...e.......
   1413c:	000a 0000 0000 0000 7363 0073 6574 7478     ........css.text
   1414c:	632f 7373 0000 0000 706a 0067 6d69 6761     /css....jpg.imag
   1415c:	2f65 706a 6765 0000 6967 0066 6d69 6761     e/jpeg..gif.imag
   1416c:	2f65 6967 0066 0000 736a 0000 7061 6c70     e/gif...js..appl
   1417c:	6369 7461 6f69 2f6e 616a 6176 6373 6972     ication/javascri
   1418c:	7470 0000 4b4f 0000 7243 6165 6574 0064     pt..OK..Created.
   1419c:	6341 6563 7470 6465 0000 0000 6f4e 4320     Accepted....No C
   141ac:	6e6f 6574 746e 0000 6f4d 6576 2064 6550     ontent..Moved Pe
   141bc:	6d72 6e61 6e65 6c74 0079 0000 6f4d 6576     rmanently...Move
   141cc:	2064 6554 706d 726f 7261 6c69 0079 0000     d Temporarily...
   141dc:	6f4e 2074 6f4d 6964 6966 6465 0000 0000     Not Modified....
   141ec:	6142 2064 6552 7571 7365 0074 6e55 7561     Bad Request.Unau
   141fc:	6874 726f 7a69 6465 0000 0000 6f46 6272     thorized....Forb
   1420c:	6469 6564 006e 0000 6f4e 2074 6f46 6e75     idden...Not Foun
   1421c:	0064 0000 6e49 6574 6e72 6c61 5320 7265     d...Internal Ser
   1422c:	6576 2072 7245 6f72 0072 0000 6f4e 2074     ver Error...Not 
   1423c:	6d49 6c70 6d65 6e65 6574 0064 6142 2064     Implemented.Bad 
   1424c:	6147 6574 6177 0079 6553 7672 6369 2065     Gateway.Service 
   1425c:	6e55 7661 6961 616c 6c62 0065 0072 0000     Unavailable.r...
   1426c:	0001 0004 7325 6425 252e 2064 6425 2520     ....%s%d.%d %d %
   1427c:	2573 0073 5448 5054 002f 0000 0a0d 0000     s%s.HTTP/.......
   1428c:	7325 2520 2564 0073 6f43 746e 6e65 2d74     %s %d%s.Content-
   1429c:	654c 676e 6874 003a 7325 2520 2573 0073     Length:.%s %s%s.
   142ac:	6f43 746e 6e65 2d74 7954 6570 003a 0000     Content-Type:...
   142bc:	7325 0000 002f 0000                         %s../...

000142c4 <fnet_http_default_handler>:
   142c4:	4140 0001 d165 0000 d205 0000 d235 0000     @A..e.......5...

000142d4 <fnet_http_content_css>:
   142d4:	4144 0001 4148 0001                         DA..HA..

000142dc <fnet_http_content_jpg>:
   142dc:	4154 0001 4158 0001                         TA..XA..

000142e4 <fnet_http_content_gif>:
   142e4:	4164 0001 4168 0001                         dA..hA..

000142ec <fnet_http_content_js>:
   142ec:	4174 0001 4178 0001 6763 0069               tA..xA..cgi.

000142f8 <fnet_http_cgi_handler>:
   142f8:	42f4 0001 d561 0000 d629 0000 0000 0000     .B..a...).......
   14308:	4547 0054                                   GET.

0001430c <fnet_http_method_get>:
   1430c:	4308 0001 d681 0000 0000 0000 d6d9 0000     .C..............
   1431c:	d71d 0000                                   ....

00014320 <fnet_http_ssi_head>:
   14320:	213c 2d2d 0023 0000                         <!--#...

00014328 <fnet_http_ssi_tail>:
   14328:	2d2d 003e 6873 6d74 006c 0000               -->.shtml...

00014334 <fnet_http_ssi_handler>:
   14334:	432c 0001 d755 0000 d781 0000 d235 0000     ,C..U.......5...
   14344:	6f72 746f 0000 0000 0000 0000               root........

00014350 <fnet_fs_rom_dir_operations>:
   14350:	e431 0000 e4c5 0000                         1.......

00014358 <fnet_fs_rom_file_operations>:
   14358:	e55d 0000 e5d9 0000 e679 0000 e711 0000     ].......y.......

00014368 <fnet_fs_rom_operations>:
   14368:	e33d 0000 0000 0000 6e66 7465 725f 6d6f     =.......fnet_rom
   14378:	0000 0000                                   ....

0001437c <fnet_fs_root_dir_operations>:
   1437c:	e799 0000 e7d1 0000 6f72 746f 0000 0000     ........root....
   1438c:	2e0a 2e2e 2e2e 2e2e 2e2e 2e2e 2e2e 492e     ...............I
   1439c:	5152 453a 414e 202e 564e 5349 492e 4553     RQ:ENA. NVIS.ISE
   143ac:	3a52 2520 0a64 0000                         R: %d...

000143b4 <fnet_lpceth_api>:
   143b4:	0001 0000 0006 0000 ed35 0000 f041 0000     ........5...A...
   143c4:	10a5 0000 1031 0000 101d 0000 f2f9 0000     ....1...........
   143d4:	f36d 0000 f3f5 0000 f3c5 0000 2e2e 452e     m..............E
   143e4:	7478 7265 616e 206c 5445 2048 4850 3a59     xternal ETH PHY:
   143f4:	5720 6961 6974 676e 6620 726f 6320 6e6f      Waiting for con
   14404:	656e 7463 6520 6874 6320 6261 656c 2d20     nect eth cable -
   14414:	5720 6961 6e74 6e69 2067 2e2e 2e2e 2520      Waitning .... %
   14424:	2075 2020 000d 0000 764f 7265 7572 0a6e     u   ....Overrun.
   14434:	0000 0000 6f43 6c75 2064 6f6e 2074 6c61     ....Could not al
   14444:	6f6c 6163 6574 6e20 7465 7562 2066 6f66     locate netbuf fo
   14454:	2072 5852 7020 6361 656b 0a74 0000 0000     r RX packet.....
   14464:	5854 4420 7365 7263 7069 6f74 2072 6425     TX Descriptor %d
   14474:	6220 7375 0079 0000 7852 764f 7265 7572      busy...RxOverru
   14484:	216e 000a 7854 6e55 6564 7272 6e75 0a21     n!..TxUnderrun!.
   14494:	0000 0000                                   ....

00014498 <node_2>:
   14498:	213c 4f44 5443 5059 2045 7468 6c6d 5020     <!DOCTYPE html P
   144a8:	4255 494c 2043 2d22 2f2f 3357 2f43 442f     UBLIC "-//W3C//D
   144b8:	4454 5820 5448 4c4d 3120 302e 5420 6172     TD XHTML 1.0 Tra
   144c8:	736e 7469 6f69 616e 2f6c 452f 224e 2220     nsitional//EN" "
   144d8:	7468 7074 2f3a 772f 7777 772e 2e33 726f     http://www.w3.or
   144e8:	2f67 5254 782f 7468 6c6d 2f31 5444 2f44     g/TR/xhtml1/DTD/
   144f8:	6878 6d74 316c 742d 6172 736e 7469 6f69     xhtml1-transitio
   14508:	616e 2e6c 7464 2264 0d3e 3c0a 7468 6c6d     nal.dtd">..<html
   14518:	7820 6c6d 736e 223d 7468 7074 2f3a 772f      xmlns="http://w
   14528:	7777 772e 2e33 726f 2f67 3931 3939 782f     ww.w3.org/1999/x
   14538:	7468 6c6d 3e22 0a0d 683c 6165 3e64 0a0d     html">..<head>..
   14548:	3c09 656d 6174 6820 7474 2d70 7165 6975     .<meta http-equi
   14558:	3d76 4322 6e6f 6574 746e 542d 7079 2265     v="Content-Type"
   14568:	6320 6e6f 6574 746e 223d 6574 7478 682f      content="text/h
   14578:	6d74 3b6c 6320 6168 7372 7465 753d 6674     tml; charset=utf
   14588:	382d 2022 3e2f 0a0d 3c09 6974 6c74 3e65     -8" />...<title>
   14598:	4e46 5445 4120 7475 6568 746e 6369 7461     FNET Authenticat
   145a8:	6f69 206e 6544 6f6d 2f3c 6974 6c74 3e65     ion Demo</title>
   145b8:	0a0d 2020 2020 6c3c 6e69 206b 6572 3d6c     ..    <link rel=
   145c8:	7322 6f68 7472 7563 2074 6369 6e6f 2022     "shortcut icon" 
   145d8:	7268 6665 223d 662f 7661 6369 6e6f 692e     href="/favicon.i
   145e8:	6f63 2f22 0d3e 090a 6c3c 6e69 206b 6572     co"/>...<link re
   145f8:	3d6c 5322 7974 656c 6873 6565 2274 6820     l="Stylesheet" h
   14608:	6572 3d66 2f22 6e66 7465 632e 7373 2022     ref="/fnet.css" 
   14618:	7974 6570 223d 6574 7478 632f 7373 2022     type="text/css" 
   14628:	656d 6964 3d61 7322 7263 6565 226e 3e2f     media="screen"/>
   14638:	0a0d 3c09 6373 6972 7470 7320 6372 223d     ...<script src="
   14648:	662f 656e 2e74 736a 2022 7974 6570 223d     /fnet.js" type="
   14658:	6574 7478 6a2f 7661 7361 7263 7069 2274     text/javascript"
   14668:	3c3e 732f 7263 7069 3e74 0a0d 2f3c 6568     ></script>..</he
   14678:	6461 0d3e 3c0a 6f62 7964 0d3e 200a 2020     ad>..<body>..   
   14688:	3c20 6373 6972 7470 7420 7079 3d65 7422      <script type="t
   14698:	7865 2f74 616a 6176 6373 6972 7470 3e22     ext/javascript">
   146a8:	0a0d 0909 6e66 7465 7250 6e69 4874 6165     ....fnetPrintHea
   146b8:	6564 2872 4122 7475 6568 746e 6369 7461     der("Authenticat
   146c8:	6f69 206e 7369 7320 6375 6563 7373 7566     ion is successfu
   146d8:	226c 3b29 0a0d 3c09 732f 7263 7069 3e74     l");...</script>
   146e8:	0a0d 2020 2020 4f4e 4554 203a 7845 7369     ..    NOTE: Exis
   146f8:	6974 676e 6220 6f72 7377 7265 2073 6572     ting browsers re
   14708:	6174 6e69 6120 7475 6568 746e 6369 7461     tain authenticat
   14718:	6f69 206e 6e69 6f66 6d72 7461 6f69 206e     ion information 
   14728:	6e69 7420 6568 6320 6361 6568 7520 746e     in the cache unt
   14738:	6c69 7420 6568 6220 6f72 7377 7265 6920     il the browser i
   14748:	2073 6c63 736f 6465 0d2e 200a 2020 3c20     s closed...    <
   14758:	7262 3c3e 7262 0d3e 200a 2020 3c20 7473     br><br>..    <st
   14768:	6f72 676e 483e 5454 2050 7541 6874 6e65     rong>HTTP Authen
   14778:	6974 6163 6974 6e6f 2820 6957 696b 6570     tication (Wikipe
   14788:	6964 2961 3c3a 732f 7274 6e6f 3e67 0a0d     dia):</strong>..
   14798:	3c09 6c75 0d3e 090a 6c3c 3e69 613c 6820     .<ul>...<li><a h
   147a8:	6572 3d66 6822 7474 3a70 2f2f 6e65 772e     ref="http://en.w
   147b8:	6b69 7069 6465 6169 6f2e 6772 772f 6b69     ikipedia.org/wik
   147c8:	2f69 6142 6973 5f63 6361 6563 7373 615f     i/Basic_access_a
   147d8:	7475 6568 746e 6369 7461 6f69 226e 423e     uthentication">B
   147e8:	7361 6369 4120 6363 7365 2073 7541 6874     asic Access Auth
   147f8:	6e65 6974 6163 6974 6e6f 2f3c 3e61 2f3c     entication</a></
   14808:	696c 0d3e 090a 6c3c 3e69 613c 6820 6572     li>...<li><a hre
   14818:	3d66 6822 7474 3a70 2f2f 6e65 772e 6b69     f="http://en.wik
   14828:	7069 6465 6169 6f2e 6772 772f 6b69 2f69     ipedia.org/wiki/
   14838:	6944 6567 7473 615f 6363 7365 5f73 7561     Digest_access_au
   14848:	6874 6e65 6974 6163 6974 6e6f 3e22 6944     thentication">Di
   14858:	6567 7473 4120 6363 7365 2073 7541 6874     gest Access Auth
   14868:	6e65 6974 6163 6974 6e6f 2820 6f4e 2074     entication (Not 
   14878:	6579 2074 6d69 6c70 6d65 6e65 6574 2064     yet implemented 
   14888:	7962 4620 454e 2954 2f3c 3e61 2f3c 696c     by FNET)</a></li
   14898:	0d3e 090a 2f3c 6c75 0d3e 200a 2020 3c20     >...</ul>..    <
   148a8:	6373 6972 7470 7420 7079 3d65 7422 7865     script type="tex
   148b8:	2f74 616a 6176 6373 6972 7470 3e22 0a0d     t/javascript">..
   148c8:	0909 6e66 7465 7250 6e69 4674 6f6f 6574     ..fnetPrintFoote
   148d8:	2872 3b29 0a0d 3c09 732f 7263 7069 3e74     r();...</script>
   148e8:	0a0d 2f3c 6f62 7964 0d3e 3c0a 682f 6d74     ..</body>..</htm
   148f8:	3e6c 0a0d                                   l>..

000148fc <node_3>:
   148fc:	0000 0001 0001 1010 0000 0000 0000 0568     ..............h.
   1490c:	0000 0016 0000 0028 0000 0010 0000 0020     ......(....... .
   1491c:	0000 0001 0008 0000 0000 0100 0000 0000     ................
   1492c:	0000 0000 0000 0100 0000 0000 0000 0000     ................
   1493c:	0000 5f7a 002a 3948 001b abc3 007b 7d9c     ..z_*.H9....{..}
   1494c:	0040 7ea0 003d 3c4d 001b 7c9a 0043 485b     @..~=.M<...|C.[H
   1495c:	0022 5e71 0036 a9c2 0079 6480 002d 6b88     ".q^6...y..d-..k
   1496c:	0032 83a5 0040 3545 0017 4d62 0025 d7df     2...@.E5..bM%...
   1497c:	00c6 485b 0023 f8f9 00f5 6f8b 0038 4659     ..[H#......o8.YF
   1498c:	0021 4e5b 0034 4d60 0026 4153 001f 4d62     !.[N4.`M&.SA..bM
   1499c:	0026 4b5b 002c f8fa 00f6 81a3 003f 3a4a     &.[K,.......?.J:
   149ac:	001b 6783 002f 7a9b 003b 3848 0019 4456     ...g/..z;.H8..VD
   149bc:	0020 7896 0041 f4f5 00f2 81a3 0040 5a6e      ..xA.......@.nZ
   149cc:	0034 7898 0039 607c 002b eff3 00e8 4457     4..x9.|`+.....WD
   149dc:	0021 7490 003d cdd1 00c5 718f 0035 546c     !..t=......q5.lT
   149ec:	0025 84a6 0041 3d4e 001d 7a99 003d 5e79     %...A.N=...z=.y^
   149fc:	002a 6a87 0031 4051 001d 4c62 0024 d6de     *..j1.Q@..bL$...
   14a0c:	00c5 84a6 0042 3645 0019 c1c6 00b7 8aaa     ....B.E6........
   14a1c:	004a 7b9c 003b f9f9 00f7 3949 0019 4353     J..{;.....I9..SC
   14a2c:	0026 ffff 00ff 4c60 0025 ccd6 00b9 617d     &.....`L%.....}a
   14a3c:	002b 7493 0037 7494 0037 3e4f 001c f0f4     +..t7..t7.O>....
   14a4c:	00e8 4a5e 0023 5166 0028 ced3 00c5 4051     ..^J#.fQ(.....Q@
   14a5c:	001f 7999 003a 6d8b 0033 7793 0040 0000     ...y:..m3..w@...
	...
   14d38:	0000 2f00 1f0e 1f1f 1f1f 1f1f 1f1f 0e1f     .../............
   14d48:	002f 2c2f 0130 0101 0101 0101 0101 3001     /./,0..........0
   14d58:	2f2c 263b 4040 4040 4040 4040 4040 4040     ,/;&@@@@@@@@@@@@
   14d68:	3b26 0b06 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b     &;..............
   14d78:	060b 1d43 1d1d 1d1d 1d1d 1d1d 1d1d 1d1d     ..C.............
   14d88:	431d 3132 1331 3d12 3f3d 3131 3131 3131     .C211..==?111111
   14d98:	3231 4a17 0c4a 3602 2215 294a 4a34 4a4a     12.JJ..6."J)4JJJ
   14da8:	174a 2b20 2b2b 3d10 373d 4b2b 2b22 2b2b     J. +++.==7+K"+++
   14db8:	202b 4214 0742 3c3a 331c 2142 4222 4242     + .BB.:<.3B!"BBB
   14dc8:	1442 2508 4125 3d2a 273d 1a04 3d3d 2527     B..%%A*=='..=='%
   14dd8:	0825 3945 3939 2e0f 282e 1949 2e22 3928     %.E999...(I.".(9
   14de8:	4539 053e 0505 0505 0505 1e05 3d47 0544     9E>.........G=D.
   14df8:	3e05 1b18 1b23 1b1b 1b1b 1b1b 4846 2311     .>..#.......FH.#
   14e08:	181b 0d16 3538 2d2d 2d2d 2d2d 2d2d 3835     ....85--------58
   14e18:	160d 2f2f 030a 0303 0303 0303 0303 0a03     ..//............
   14e28:	2f2f 2f00 0924 0909 0909 0909 0909 2409     //./$..........$
   14e38:	002f 0180 0000 0000 0000 0000 0000 0000     /...............
	...
   14e74:	0000 0180 0000 0000                         ........

00014e7c <node_4>:
   14e7c:	2a2f 0d21 2a0a 4020 6966 656c 6620 656e     /*!..* @file fne
   14e8c:	2e74 7363 0d73 2a0a 4020 7561 6874 726f     t.css..* @author
   14e9c:	4120 646e 6572 2079 7542 6f74 0d6b 2a0a      Andrey Butok..*
   14eac:	4020 6164 6574 4120 6775 322d 2d34 3032      @date Aug-24-20
   14ebc:	3930 0a0d 202a 7640 7265 6973 6e6f 3020     09..* @version 0
   14ecc:	312e 332e 302e 0a0d 202a 6240 6972 6665     .1.3.0..* @brief
   14edc:	4620 454e 2054 6170 6567 2073 5343 2053      FNET pages CSS 
   14eec:	6966 656c 0d2e 2a0a 2f2a 0a0d 6f62 7964     file...**/..body
   14efc:	7b20 0a0d 7009 6461 6964 676e 203a 7030      {...padding: 0p
   14f0c:	3b78 0a0d 6d09 7261 6967 3a6e 3020 7870     x;...margin: 0px
   14f1c:	0d3b 090a 6162 6b63 7267 756f 646e 632d     ;...background-c
   14f2c:	6c6f 726f 203a 4623 4646 0d3b 090a 6f66     olor: #FFF;...fo
   14f3c:	746e 662d 6d61 6c69 3a79 4820 6c65 6576     nt-family: Helve
   14f4c:	6974 6163 202c 7241 6169 2c6c 7320 6e61     tica, Arial, san
   14f5c:	2d73 6573 6972 3b66 0a0d 6609 6e6f 2d74     s-serif;...font-
   14f6c:	6973 657a 203a 3537 3b25 0a0d 6609 6e6f     size: 75%;...fon
   14f7c:	2d74 6577 6769 7468 203a 6f6e 6d72 6c61     t-weight: normal
   14f8c:	0d3b 090a 6f63 6f6c 3a72 2320 3135 3236     ;...color: #5162
   14f9c:	4636 0d3b 7d0a 0a0d 0a0d 7b61 0a0d 6309     6F;..}....a{...c
   14fac:	6c6f 726f 203a 3023 3731 6262 3b61 0a0d     olor: #017bba;..
   14fbc:	7409 7865 2d74 6564 6f63 6172 6974 6e6f     .text-decoration
   14fcc:	203a 6f6e 656e 0d3b 7d0a 0a0d 0a0d 3a61     : none;..}....a:
   14fdc:	6f68 6576 7b72 0a0d 6309 6c6f 726f 203a     hover{...color: 
   14fec:	3023 3731 6262 3b61 0a0d 7409 7865 2d74     #017bba;...text-
   14ffc:	6564 6f63 6172 6974 6e6f 203a 6e75 6564     decoration: unde
   1500c:	6c72 6e69 3b65 0a0d 0d7d 0d0a 680a 2031     rline;..}....h1 
   1501c:	0d7b 090a 696c 656e 682d 6965 6867 3a74     {...line-height:
   1502c:	3220 7038 3b78 0a0d 6609 6e6f 2d74 6973      28px;...font-si
   1503c:	657a 203a 2e31 6532 3b6d 0a0d 6609 6e6f     ze: 1.2em;...fon
   1504c:	2d74 6577 6769 7468 203a 6f62 646c 0d3b     t-weight: bold;.
   1505c:	090a 616d 6772 6e69 203a 7030 3b78 0a0d     ..margin: 0px;..
   1506c:	7009 6461 6964 676e 203a 7030 3b78 0a0d     .padding: 0px;..
   1507c:	7409 7865 2d74 6e69 6564 746e 203a 7030     .text-indent: 0p
   1508c:	3b78 0a0d 0d7d 0d0a 740a 6261 656c 7b20     x;..}....table {
   1509c:	0a0d 7009 6461 6964 676e 722d 6769 7468     ...padding-right
   150ac:	203a 7030 3b78 0a0d 7009 6461 6964 676e     : 0px;...padding
   150bc:	6c2d 6665 3a74 3020 7870 0d3b 090a 6f66     -left: 0px;...fo
   150cc:	746e 772d 6965 6867 3a74 6e20 726f 616d     nt-weight: norma
   150dc:	3b6c 0d20 090a 6f66 746e 732d 7a69 3a65     l; ...font-size:
   150ec:	3120 6d65 0d3b 090a 6170 6464 6e69 2d67      1em;...padding-
   150fc:	6f62 7474 6d6f 203a 7030 3b78 0d20 090a     bottom: 0px; ...
   1510c:	616d 6772 6e69 203a 7030 3b78 0a0d 6309     margin: 0px;...c
   1511c:	6c6f 726f 203a 3523 3631 3632 3b66 0d20     olor: #51626f; .
   1512c:	090a 6170 6464 6e69 2d67 6f74 3a70 3020     ..padding-top: 0
   1513c:	7870 203b 0a0d 6609 6e6f 2d74 6166 696d     px; ...font-fami
   1514c:	796c 203a 6548 766c 7465 6369 2c61 4120     ly: Helvetica, A
   1515c:	6972 6c61 202c 6173 736e 732d 7265 6669     rial, sans-serif
   1516c:	203b 0a0d 6209 726f 6564 2d72 6f63 6c6c     ; ...border-coll
   1517c:	7061 6573 203a 6f63 6c6c 7061 6573 203b     apse: collapse; 
   1518c:	0a0d 6509 706d 7974 632d 6c65 736c 203a     ...empty-cells: 
   1519c:	6873 776f 0d3b 090a 6f62 6472 7265 732d     show;...border-s
   151ac:	6170 6963 676e 203a 7030 0d78 7d0a 0a0d     pacing: 0px..}..
   151bc:	0a0d 6874 7b20 0a0d 6209 726f 6564 2d72     ..th {...border-
   151cc:	6972 6867 3a74 2320 6666 6666 6666 3120     right: #ffffff 1
   151dc:	7870 7320 6c6f 6469 0d3b 090a 6170 6464     px solid;...padd
   151ec:	6e69 2d67 6972 6867 3a74 3320 7870 0d3b     ing-right: 3px;.
   151fc:	090a 6f62 6472 7265 742d 706f 203a 6623     ..border-top: #f
   1520c:	6666 6666 2066 7031 2078 6f73 696c 3b64     fffff 1px solid;
   1521c:	0a0d 7009 6461 6964 676e 6c2d 6665 3a74     ...padding-left:
   1522c:	3320 7870 0d3b 090a 6f66 746e 772d 6965      3px;...font-wei
   1523c:	6867 3a74 6220 6c6f 3b64 0a0d 7009 6461     ght: bold;...pad
   1524c:	6964 676e 622d 746f 6f74 3a6d 3220 7870     ding-bottom: 2px
   1525c:	203b 0a0d 6209 726f 6564 2d72 656c 7466     ; ...border-left
   1526c:	203a 6623 6666 6666 2066 7031 2078 6f73     : #ffffff 1px so
   1527c:	696c 3b64 0d20 090a 6170 6464 6e69 2d67     lid; ...padding-
   1528c:	6f74 3a70 3120 7870 0d3b 090a 6f62 6472     top: 1px;...bord
   1529c:	7265 622d 746f 6f74 3a6d 2320 6666 6666     er-bottom: #ffff
   152ac:	6666 3120 7870 7320 6c6f 6469 0d3b 090a     ff 1px solid;...
   152bc:	6162 6b63 7267 756f 646e 632d 6c6f 726f     background-color
   152cc:	203a 6323 6334 6466 3b31 0a0d 7409 7865     : #c4cfd1;...tex
   152dc:	2d74 6c61 6769 3a6e 6c20 6665 0d74 7d0a     t-align: left..}
   152ec:	0a0d 0a0d 6474 7b20 0a0d 6209 726f 6564     ....td {...borde
   152fc:	2d72 6972 6867 3a74 3020 7870 0d3b 090a     r-right: 0px;...
   1530c:	6170 6464 6e69 2d67 6972 6867 3a74 3020     padding-right: 0
   1531c:	7870 0d3b 090a 6f62 6472 7265 742d 706f     px;...border-top
   1532c:	203a 656d 6964 6d75 6e20 6e6f 3b65 0a0d     : medium none;..
   1533c:	7009 6461 6964 676e 6c2d 6665 3a74 3020     .padding-left: 0
   1534c:	7870 0d3b 090a 6170 6464 6e69 2d67 6f62     px;...padding-bo
   1535c:	7474 6d6f 203a 7030 3b78 0a0d 6209 726f     ttom: 0px;...bor
   1536c:	6564 2d72 656c 7466 203a 7030 3b78 0a0d     der-left: 0px;..
   1537c:	7009 6461 6964 676e 742d 706f 203a 7030     .padding-top: 0p
   1538c:	3b78 0a0d 6209 726f 6564 2d72 6f62 7474     x;...border-bott
   1539c:	6d6f 203a 656d 6964 6d75 6e20 6e6f 0d65     om: medium none.
   153ac:	7d0a 0a0d 0a0d 662e 656e 5f74 6474 675f     .}.....fnet_td_g
   153bc:	6572 2079 0d7b 090a 6f62 6472 7265 722d     rey {...border-r
   153cc:	6769 7468 203a 6623 6666 6666 2066 7031     ight: #ffffff 1p
   153dc:	2078 6f73 696c 3b64 0a0d 7009 6461 6964     x solid;...paddi
   153ec:	676e 722d 6769 7468 203a 7032 3b78 0a0d     ng-right: 2px;..
   153fc:	6209 726f 6564 2d72 6f74 3a70 6d20 6465     .border-top: med
   1540c:	7569 206d 6f6e 656e 0d3b 090a 6170 6464     ium none;...padd
   1541c:	6e69 2d67 656c 7466 203a 7032 3b78 0a0d     ing-left: 2px;..
   1542c:	6209 6361 676b 6f72 6e75 3a64 2320 4345     .background: #EC
   1543c:	3046 3146 0d3b 090a 6170 6464 6e69 2d67     F0F1;...padding-
   1544c:	6f62 7474 6d6f 203a 7031 3b78 0a0d 6209     bottom: 1px;...b
   1545c:	726f 6564 2d72 656c 7466 203a 6623 6666     order-left: #fff
   1546c:	6666 2066 7031 2078 6f73 696c 3b64 0a0d     fff 1px solid;..
   1547c:	7009 6461 6964 676e 742d 706f 203a 7031     .padding-top: 1p
   1548c:	3b78 0a0d 6209 726f 6564 2d72 6f62 7474     x;...border-bott
   1549c:	6d6f 203a 656d 6964 6d75 6e20 6e6f 0d65     om: medium none.
   154ac:	7d0a 0a0d 0a0d 6623 656e 5f74 616d 6e69     .}....#fnet_main
   154bc:	635f 6e6f 6574 746e 7b20 0a0d 7009 6461     _content {...pad
   154cc:	6964 676e 203a 7030 2078 7030 2078 7030     ding: 0px 0px 0p
   154dc:	2078 7031 3b78 0a0d 6d09 7261 6967 2d6e     x 1px;...margin-
   154ec:	6972 6867 3a74 3031 7870 0d3b 090a 696d     right:10px;...mi
   154fc:	2d6e 6977 7464 3a68 3420 3039 7870 0a0d     n-width: 490px..
   1550c:	0d7d 0d0a 2e0a 6e66 7465 635f 6e6f 6574     }.....fnet_conte
   1551c:	746e 665f 6172 656d 0d7b 090a 616d 6772     nt_frame{...marg
   1552c:	6e69 203a 7030 2078 7030 2078 7030 2078     in: 0px 0px 0px 
   1553c:	3731 7038 3b78 0a0d 0d7d 0d0a 2e0a 6e66     178px;..}.....fn
   1554c:	7465 705f 6461 6964 676e 7b20 0a0d 6409     et_padding {...d
   1555c:	7369 6c70 7961 203a 6c62 636f 3b6b 0a0d     isplay: block;..
   1556c:	6d09 7261 6967 3a6e 3020 7870 0d3b 090a     .margin: 0px;...
   1557c:	6170 6464 6e69 3a67 3120 7032 2078 7030     padding: 12px 0p
   1558c:	2078 7030 2078 7030 3b78 0a0d 0d7d 0d0a     x 0px 0px;..}...
   1559c:	2e0a 6e66 7465 685f 2072 0d7b 090a 6162     ..fnet_hr {...ba
   155ac:	6b63 7267 756f 646e 203a 6123 6161 6161     ckground: #aaaaa
   155bc:	2061 6572 6570 7461 782d 7320 7263 6c6f     a repeat-x scrol
   155cc:	206c 6563 746e 7265 0d3b 090a 616d 6772     l center;...marg
   155dc:	6e69 203a 3b30 0a0d 7009 6461 6964 676e     in: 0;...padding
   155ec:	203a 3b30 0a0d 6809 6965 6867 3a74 3120     : 0;...height: 1
   155fc:	7870 0d3b 7d0a 0a0d 0a0d 662e 656e 5f74     px;..}.....fnet_
   1560c:	7268 6820 2072 0d7b 090a 6964 7073 616c     hr hr {...displa
   1561c:	3a79 6e20 6e6f 3b65 0a0d 0d7d 0d0a 230a     y: none;..}....#
   1562c:	6e66 7465 6d5f 6e65 5f75 6f63 746e 6e65     fnet_menu_conten
   1563c:	2074 0d7b 090a 6c66 616f 3a74 6c20 6665     t {...float: lef
   1564c:	3b74 0a0d 7709 6469 6874 203a 3631 7031     t;...width: 161p
   1565c:	3b78 0a0d 6d09 7261 6967 3a6e 3120 7030     x;...margin: 10p
   1566c:	3b78 0a0d 7009 6461 6964 676e 203a 7030     x;...padding: 0p
   1567c:	3b78 0a0d 0d7d 0d0a 230a 6e66 7465 6d5f     x;..}....#fnet_m
   1568c:	6e65 2c75 2320 6e66 7465 6d5f 6e65 2075     enu, #fnet_menu 
   1569c:	6c75 7b20 2f20 202a 6c61 206c 656c 7466     ul { /* all left
   156ac:	6e20 7661 6c20 7369 7374 2a20 0d2f 090a      nav lists */...
   156bc:	6170 6464 6e69 3a67 3020 7870 3020 7870     padding: 0px 0px
   156cc:	3120 7870 3120 7870 0d3b 090a 616d 6772      1px 1px;...marg
   156dc:	6e69 203a 7030 2078 7033 2078 7030 2078     in: 0px 3px 0px 
   156ec:	7030 3b78 0a0d 6c09 7369 2d74 7473 6c79     0px;...list-styl
   156fc:	3a65 6e20 6e6f 3b65 0a0d 6609 6f6c 7461     e: none;...float
   1570c:	3a20 6c20 6665 3b74 0a0d 7709 6469 6874      : left;...width
   1571c:	3a20 3120 3935 7870 0d3b 090a 6964 7073      : 159px;...disp
   1572c:	616c 3a79 6220 6f6c 6b63 0d3b 090a 6f66     lay: block;...fo
   1573c:	746e 732d 7a69 3a65 2e20 6539 3b6d 0a0d     nt-size: .9em;..
   1574c:	0d7d 0d0a 230a 6e66 7465 6d5f 6e65 2075     }....#fnet_menu 
   1575c:	2061 0d7b 090a 6f63 6f6c 3a72 2320 3135     a {...color: #51
   1576c:	3236 4636 0d3b 090a 6574 7478 642d 6365     626F;...text-dec
   1577c:	726f 7461 6f69 3a6e 6e20 6e6f 3b65 0a0d     oration: none;..
   1578c:	0d7d 0d0a 230a 6e66 7465 6d5f 6e65 2075     }....#fnet_menu 
   1579c:	3a61 6f68 6576 2072 0d7b 090a 6f63 6f6c     a:hover {...colo
   157ac:	3a72 2320 3135 3236 4636 0d3b 090a 6574     r: #51626F;...te
   157bc:	7478 642d 6365 726f 7461 6f69 3a6e 7520     xt-decoration: u
   157cc:	646e 7265 696c 656e 0d3b 7d0a 0a0d 0a0d     nderline;..}....
   157dc:	6623 656e 5f74 656d 756e 6c20 2069 207b     #fnet_menu li { 
   157ec:	2a2f 6120 6c6c 6c20 7369 2074 7469 6d65     /* all list item
   157fc:	2073 2f2a 0a0d 7009 736f 7469 6f69 206e     s */...position 
   1580c:	203a 6572 616c 6974 6576 0d3b 090a 6c66     : relative;...fl
   1581c:	616f 2074 203a 656c 7466 0d3b 090a 696c     oat : left;...li
   1582c:	656e 682d 6965 6867 2074 203a 3631 7870     ne-height : 16px
   1583c:	0d3b 090a 616d 6772 6e69 203a 7030 3b78     ;...margin: 0px;
   1584c:	0a0d 7009 6461 6964 676e 203a 7030 3b78     ...padding: 0px;
   1585c:	0a0d 7709 6469 6874 203a 3431 7039 3b78     ...width: 149px;
   1586c:	0a0d 6209 6361 676b 6f72 6e75 2d64 6f63     ...background-co
   1587c:	6f6c 3a72 2320 4646 3b46 0a0d 7a09 692d     lor: #FFF;...z-i
   1588c:	646e 7865 203a 3035 0d3b 090a 6f74 3a70     ndex: 50;...top:
   1589c:	3020 7870 0d3b 090a 656c 7466 203a 7030      0px;...left: 0p
   158ac:	3b78 0a0d 0d7d 090a 0a0d 6623 656e 5f74     x;..}.....#fnet_
   158bc:	656d 756e 6c20 2069 6c75 7b20 2f20 202a     menu li ul { /* 
   158cc:	6573 6f63 646e 6c2d 7665 6c65 6c20 7369     second-level lis
   158dc:	7374 2a20 0d2f 090a 6f70 6973 6974 6e6f     ts */...position
   158ec:	3a20 6120 7362 6c6f 7475 3b65 0a0d 6c09      : absolute;...l
   158fc:	6665 3a74 2d20 3939 6539 3b6d 0a0d 6d09     eft: -999em;...m
   1590c:	7261 6967 2d6e 656c 7466 3a20 3120 3036     argin-left : 160
   1591c:	7870 0d3b 090a 616d 6772 6e69 742d 706f     px;...margin-top
   1592c:	3a20 2d20 3432 7870 0d3b 090a 6f66 746e      : -24px;...font
   1593c:	732d 7a69 3a65 3120 6d65 0d3b 7d0a 0a0d     -size: 1em;..}..
   1594c:	0d09 230a 6e66 7465 6d5f 6e65 2075 696c     ...#fnet_menu li
   1595c:	6120 7b20 0a0d 7709 6469 6874 3a20 3120      a {...width : 1
   1596c:	3334 7870 0d3b 090a 6964 7073 616c 2079     43px;...display 
   1597c:	203a 6c62 636f 3b6b 0a0d 6609 6e6f 2d74     : block;...font-
   1598c:	6577 6769 7468 3a20 6e20 726f 616d 3b6c     weight : normal;
   1599c:	0a0d 7409 7865 2d74 6564 6f63 6172 6974     ...text-decorati
   159ac:	6e6f 3a20 6e20 6e6f 3b65 0a0d 6209 6361     on : none;...bac
   159bc:	676b 6f72 6e75 2d64 6f63 6f6c 3a72 2320     kground-color: #
   159cc:	3045 3645 3645 0d3b 090a 616d 6772 6e69     E0E6E6;...margin
   159dc:	3a20 3020 7870 0d3b 090a 6170 6464 6e69      : 0px;...paddin
   159ec:	3a67 3320 7870 3120 7032 2078 7033 2078     g: 3px 12px 3px 
   159fc:	7035 3b78 0a0d 6209 726f 6564 2d72 6f74     5px;...border-to
   15a0c:	3a70 3120 7870 7320 6c6f 6469 2320 4646     p: 1px solid #FF
   15a1c:	3b46 0a0d 0d7d 090a 0a0d 6623 656e 5f74     F;..}.....#fnet_
   15a2c:	656d 756e 6c20 2069 3a61 6f68 6576 2072     menu li a:hover 
   15a3c:	0d7b 090a 6162 6b63 7267 756f 646e 632d     {...background-c
   15a4c:	6c6f 726f 3a20 2320 3443 4643 3144 0d3b     olor : #C4CFD1;.
   15a5c:	7d0a 0a0d 0d09 230a 6e66 7465 6d5f 6e65     .}.....#fnet_men
   15a6c:	2075 696c 683a 766f 7265 7520 206c 6c75     u li:hover ul ul
   15a7c:	202c 6623 656e 5f74 656d 756e 6c20 3a69     , #fnet_menu li:
   15a8c:	6f68 6576 2072 6c75 7520 206c 6c75 0d7b     hover ul ul ul{.
   15a9c:	090a 656c 7466 203a 392d 3939 6d65 0d3b     ..left: -999em;.
   15aac:	090a 6162 6b63 7267 756f 646e 632d 6c6f     ..background-col
   15abc:	726f 203a 4623 4646 0d3b 7d0a 0a0d 0d09     or: #FFF;..}....
   15acc:	230a 6e66 7465 6d5f 6e65 2075 696c 683a     .#fnet_menu li:h
   15adc:	766f 7265 7520 2c6c 2320 6e66 7465 6d5f     over ul, #fnet_m
   15aec:	6e65 2075 696c 6c20 3a69 6f68 6576 2072     enu li li:hover 
   15afc:	6c75 207b 2a2f 6c20 7369 7374 6e20 7365     ul{ /* lists nes
   15b0c:	6574 2064 6e75 6564 2072 6f68 6576 6572     ted under hovere
   15b1c:	2064 696c 7473 6920 6574 736d 2a20 0d2f     d list items */.
   15b2c:	090a 656c 7466 203a 7561 6f74 0d3b 090a     ..left: auto;...
   15b3c:	6162 6b63 7267 756f 646e 632d 6c6f 726f     background-color
   15b4c:	203a 4623 4646 0d3b 7d0a 0a0d 0d09 230a     : #FFF;..}.....#
   15b5c:	6e66 7465 665f 6f6f 6574 7b72 0a0d 7009     fnet_footer{...p
   15b6c:	736f 7469 6f69 3a6e 7220 6c65 7461 7669     osition: relativ
   15b7c:	3b65 0a0d 6309 656c 7261 203a 6f62 6874     e;...clear: both
   15b8c:	0d3b 090a 6964 7073 616c 3a79 6220 6f6c     ;...display: blo
   15b9c:	6b63 0d3b 090a 696d 2d6e 6977 7464 3a68     ck;...min-width:
   15bac:	2020 3636 7030 3b78 0d09 090a 6568 6769       660px;....heig
   15bbc:	7468 203a 3332 7870 0d3b 090a 696c 656e     ht: 23px;...line
   15bcc:	682d 6965 6867 3a74 3220 7033 3b78 0a0d     -height: 23px;..
   15bdc:	6209 726f 6564 3a72 3120 7870 7320 6c6f     .border: 1px sol
   15bec:	6469 2320 3343 4643 3144 0d3b 090a 616d     id #C3CFD1;...ma
   15bfc:	6772 6e69 722d 6769 7468 313a 7030 3b78     rgin-right:10px;
   15c0c:	0a0d 6d09 7261 6967 2d6e 656c 7466 313a     ...margin-left:1
   15c1c:	7030 3b78 0a0d 0d7d 0d0a 230a 6e66 7465     0px;..}....#fnet
   15c2c:	625f 6e61 656e 5f72 6f62 7474 6d6f 6f62     _banner_bottombo
   15c3c:	7b78 0a0d 6809 6965 6867 3a74 3220 7035     x{...height: 25p
   15c4c:	3b78 0a0d 6209 6361 676b 6f72 6e75 2d64     x;...background-
   15c5c:	6f63 6f6c 3a72 2320 4646 4646 4646 0d3b     color: #FFFFFF;.
   15c6c:	090a 6f62 6472 7265 203a 7031 2078 6f73     ..border: 1px so
   15c7c:	696c 2064 4323 4334 4446 3b31 0a0d 6209     lid #C4CFD1;...b
   15c8c:	726f 6564 2d72 6f74 3a70 6e20 6e6f 3b65     order-top: none;
   15c9c:	0a0d 7a09 692d 646e 7865 203a 3031 0d3b     ...z-index: 10;.
   15cac:	090a 616d 6772 6e69 203a 7030 3b78 0a0d     ..margin: 0px;..
   15cbc:	0d7d 0d0a 230a 6e66 7465 625f 6e61 656e     }....#fnet_banne
   15ccc:	5f72 7277 7061 6570 7b72 0a0d 7009 6461     r_wrapper{...pad
   15cdc:	6964 676e 303a 7870 0d3b 090a 6568 6769     ding:0px;...heig
   15cec:	7468 353a 7035 3b78 0a0d 7409 706f 313a     ht:55px;...top:1
   15cfc:	7030 3b78 0a0d 6c09 6665 3a74 3031 7870     0px;...left:10px
   15d0c:	0d3b 090a 6f70 6973 6974 6e6f 723a 6c65     ;...position:rel
   15d1c:	7461 7669 3b65 0a0d 7709 6469 6874 393a     ative;...width:9
   15d2c:	2539 0d3b 7d0a 0a0d 6623 656e 5f74 6162     9%;..}..#fnet_ba
   15d3c:	6e6e 7265 6c5f 676f 7b6f 0a0d 6609 6f6c     nner_logo{...flo
   15d4c:	7461 6c3a 6665 3b74 0a0d 7409 706f 203a     at:left;...top: 
   15d5c:	3031 7870 0d3b 090a 656c 7466 203a 3031     10px;...left: 10
   15d6c:	7870 0d3b 090a 2d7a 6e69 6564 3a78 3037     px;...z-index:70
   15d7c:	0d3b 7d0a 0a0d 0a0d 6623 656e 5f74 6162     ;..}....#fnet_ba
   15d8c:	6e6e 7265 635f 6e65 6574 2072 0d7b 090a     nner_center {...
   15d9c:	616d 6772 6e69 722d 6769 7468 313a 7030     margin-right:10p
   15dac:	3b78 0a0d 6d09 7261 6967 2d6e 656c 7466     x;...margin-left
   15dbc:	313a 3037 7870 0d3b 090a 6162 6b63 7267     :170px;...backgr
   15dcc:	756f 646e 632d 6c6f 726f 543a 4152 534e     ound-color:TRANS
   15ddc:	4150 4552 544e 0d3b 090a 696d 2d6e 6977     PARENT;...min-wi
   15dec:	7464 3a68 3420 3039 7870 0a0d 0d7d 0d0a     dth: 490px..}...
   15dfc:	230a 6e66 7465 625f 6e61 656e 5f72 6f74     .#fnet_banner_to
   15e0c:	6270 786f 0d7b 090a 6568 6769 7468 203a     pbox{...height: 
   15e1c:	3232 7870 0d3b 090a 6162 6b63 7267 756f     22px;...backgrou
   15e2c:	646e 632d 6c6f 726f 203a 4623 4646 4646     nd-color: #FFFFF
   15e3c:	3b46 0a0d 6209 726f 6564 3a72 3120 7870     F;...border: 1px
   15e4c:	7320 6c6f 6469 2320 3443 4643 3144 0d3b      solid #C4CFD1;.
   15e5c:	090a 2d7a 6e69 6564 3a78 3220 3b30 0a0d     ..z-index: 20;..
   15e6c:	0d7d 0d0a 2e0a 6e66 7465 625f 6e61 656e     }.....fnet_banne
   15e7c:	5f72 6974 6c74 7b65 0a0d 7009 736f 7469     r_title{...posit
   15e8c:	6f69 3a6e 7220 6c65 7461 7669 3b65 0a0d     ion: relative;..
   15e9c:	7409 706f 203a 7032 3b78 0a0d 6c09 6665     .top: 2px;...lef
   15eac:	3a74 3520 7870 0d3b 090a 6162 6b63 7267     t: 5px;...backgr
   15ebc:	756f 646e 632d 6c6f 726f 203a 5254 4e41     ound-color: TRAN
   15ecc:	5053 5241 4e45 3b54 0a0d 6609 6e6f 2d74     SPARENT;...font-
   15edc:	6166 696d 796c 203a 7241 6169 2c6c 4820     family: Arial, H
   15eec:	6c65 6576 6974 6163 202c 6173 736e 732d     elvetica, sans-s
   15efc:	7265 6669 0d3b 090a 6f63 6f6c 3a72 2320     erif;...color: #
   15f0c:	3135 3236 4636 0d3b 090a 6f66 746e 772d     51626F;...font-w
   15f1c:	6965 6867 3a74 6f62 646c 0d3b 090a 6f66     eight:bold;...fo
   15f2c:	746e 732d 7a69 3a65 3631 7870 0d3b 090a     nt-size:16px;...
   15f3c:	2d7a 6e69 6564 3a78 3320 3b30 0a0d 7409     z-index: 30;...t
   15f4c:	7865 2d74 6c61 6769 3a6e 6c20 6665 3b74     ext-align: left;
   15f5c:	0a0d 7009 6461 6964 676e 313a 7870 3020     ...padding:1px 0
   15f6c:	7870 3220 7870 0d3b 7d0a 0a0d 0a0d 662e     px 2px;..}.....f
   15f7c:	656e 5f74 6162 6e6e 7265 695f 746e 7265     net_banner_inter
   15f8c:	616e 7b6c 0a0d 6209 6361 676b 6f72 6e75     nal{...backgroun
   15f9c:	2d64 6f63 6f6c 3a72 5420 4152 534e 4150     d-color: TRANSPA
   15fac:	4552 544e 0d3b 090a 6f66 746e 662d 6d61     RENT;...font-fam
   15fbc:	6c69 3a79 7241 6169 2c6c 4820 6c65 6576     ily:Arial, Helve
   15fcc:	6974 6163 202c 6173 736e 732d 7265 6669     tica, sans-serif
   15fdc:	0d3b 090a 6f66 746e 772d 6965 6867 3a74     ;...font-weight:
   15fec:	6f62 646c 0d3b 090a 6f66 746e 732d 7a69     bold;...font-siz
   15ffc:	3a65 7039 3b78 0a0d 6309 6c6f 726f 233a     e:9px;...color:#
   1600c:	3135 3236 4636 0d3b 090a 2d7a 6e69 6564     51626F;...z-inde
   1601c:	3a78 3320 3b30 0a0d 7409 7865 2d74 6c61     x: 30;...text-al
   1602c:	6769 3a6e 6c20 6665 3b74 0a0d 0d7d 0d0a     ign: left;..}...
   1603c:	2e0a 6e66 7465 625f 6e61 656e 5f72 6f62     ..fnet_banner_bo
   1604c:	7474 6d6f 6762 0d7b 090a 6f70 6973 6974     ttombg{...positi
   1605c:	6e6f 203a 6572 616c 6974 6576 0d3b 090a     on: relative;...
   1606c:	6f74 3a70 3120 7870 0d3b 090a 656c 7466     top: 1px;...left
   1607c:	203a 7031 3b78 0a0d 6d09 7261 6967 2d6e     : 1px;...margin-
   1608c:	6972 6867 3a74 3220 7870 0d3b 090a 6568     right: 2px;...he
   1609c:	6769 7468 203a 3332 7870 0d3b 090a 6162     ight: 23px;...ba
   160ac:	6b63 7267 756f 646e 632d 6c6f 726f 203a     ckground-color: 
   160bc:	4323 4334 4446 3b31 0a0d 7a09 692d 646e     #C4CFD1;...z-ind
   160cc:	7865 203a 3533 0d3b 090a 6170 6464 6e69     ex: 35;...paddin
   160dc:	3a67 7030 3b78 0a0d 0d7d 0d0a 0d0a 0d0a     g:0px;..}.......
   160ec:	000a 0000                                   ....

000160f0 <node_5>:
   160f0:	7566 636e 6974 6e6f 6620 656e 5074 6972     function fnetPri
   16100:	746e 6548 6461 7265 7428 7469 656c 7b29     ntHeader(title){
   16110:	0a0d 6409 636f 6d75 6e65 2e74 7277 7469     ...document.writ
   16120:	2865 2027 0d5c 090a 3c09 6964 2076 6469     e(' \....<div id
   16130:	223d 6e66 7465 625f 6e61 656e 5f72 7277     ="fnet_banner_wr
   16140:	7061 6570 2272 5c3e 0a0d 0909 3c09 6964     apper">\.....<di
   16150:	2076 6469 223d 6e66 7465 625f 6e61 656e     v id="fnet_banne
   16160:	5f72 6f6c 6f67 3e22 0d5c 090a 0909 613c     r_logo">\.....<a
   16170:	6820 6572 3d66 6822 7474 3a70 2f2f 6e66      href="http://fn
   16180:	7465 732e 2e66 656e 2274 7420 7261 6567     et.sf.net" targe
   16190:	3d74 5f22 6c62 6e61 226b 5c3e 0a0d 0909     t="_blank">\....
   161a0:	3c09 6d69 2067 7273 3d63 2f22 6e66 7465     .<img src="/fnet
   161b0:	6c5f 676f 2e6f 6967 2266 6220 726f 6564     _logo.gif" borde
   161c0:	3d72 3022 2022 6c61 3d74 4622 454e 2254     r="0" alt="FNET"
   161d0:	3e2f 0d5c 200a 0909 3c09 612f 5c3e 0a0d     />\.. ...</a>\..
   161e0:	0909 3c09 642f 7669 5c3e 0a0d 0909 3c09     ...</div>\.....<
   161f0:	6964 2076 6469 223d 6e66 7465 625f 6e61     div id="fnet_ban
   16200:	656e 5f72 6563 746e 7265 2022 6f6e 7277     ner_center" nowr
   16210:	7061 5c3e 0a0d 0909 0909 643c 7669 6920     ap>\......<div i
   16220:	3d64 6622 656e 5f74 6162 6e6e 7265 745f     d="fnet_banner_t
   16230:	706f 6f62 2278 6e20 776f 6172 3e70 0d5c     opbox" nowrap>\.
   16240:	090a 0909 0909 643c 7669 6320 616c 7373     ......<div class
   16250:	223d 6e66 7465 625f 6e61 656e 5f72 6974     ="fnet_banner_ti
   16260:	6c74 2265 6e20 776f 6172 3e70 4e46 5445     tle" nowrap>FNET
   16270:	0d5c 090a 0909 0909 3c09 7073 6e61 6320     \........<span c
   16280:	616c 7373 223d 6e66 7465 625f 6e61 656e     lass="fnet_banne
   16290:	5f72 6e69 6574 6e72 6c61 3e22 613c 6820     r_internal"><a h
   162a0:	6572 3d66 6822 7474 3a70 2f2f 6e66 7465     ref="http://fnet
   162b0:	732e 2e66 656e 2f74 3e22 6d45 6562 6464     .sf.net/">Embedd
   162c0:	6465 5420 5043 492f 2050 7473 6361 3c6b     ed TCP/IP stack<
   162d0:	612f 3c3e 732f 6170 3e6e 0d5c 090a 0909     /a></span>\.....
   162e0:	0909 2f3c 6964 3e76 0d5c 090a 0909 3c09     ..</div>\......<
   162f0:	642f 7669 5c3e 0a0d 0909 0909 643c 7669     /div>\......<div
   16300:	6920 3d64 6622 656e 5f74 6162 6e6e 7265      id="fnet_banner
   16310:	625f 746f 6f74 626d 786f 3e22 0d5c 090a     _bottombox">\...
   16320:	0909 0909 643c 7669 6320 616c 7373 223d     ....<div class="
   16330:	6e66 7465 625f 6e61 656e 5f72 6f62 7474     fnet_banner_bott
   16340:	6d6f 6762 3e22 0d5c 090a 0909 0909 2f3c     ombg">\.......</
   16350:	6964 3e76 0d5c 090a 0909 3c09 642f 7669     div>\......</div
   16360:	5c3e 0a0d 0909 3c09 642f 7669 5c3e 0a0d     >\.....</div>\..
   16370:	0909 2f3c 6964 3e76 2927 0d3b 200a 2020     ..</div>');..   
   16380:	6609 656e 5074 6972 746e 654d 756e 2928     .fnetPrintMenu()
   16390:	0d3b 090a 6f64 7563 656d 746e 772e 6972     ;...document.wri
   163a0:	6574 2728 5c20 0a0d 0909 643c 7669 6920     te(' \....<div i
   163b0:	3d64 6622 656e 5f74 616d 6e69 635f 6e6f     d="fnet_main_con
   163c0:	6574 746e 2022 6c63 7361 3d73 6622 656e     tent" class="fne
   163d0:	5f74 6f63 746e 6e65 5f74 7266 6d61 2265     t_content_frame"
   163e0:	5c3e 0a0d 0909 643c 7669 6320 616c 7373     >\....<div class
   163f0:	223d 6e66 7465 685f 2272 5c3e 0a0d 0909     ="fnet_hr">\....
   16400:	3c09 7268 3e2f 0d5c 090a 3c09 642f 7669     .<hr/>\....</div
   16410:	5c3e 0a0d 0909 683c 3e31 0d5c 090a 0909     >\....<h1>\.....
   16420:	733c 7274 6e6f 3e67 2c27 7420 7469 656c     <strong>', title
   16430:	202c 3c27 732f 7274 6e6f 3e67 0d5c 090a     , '</strong>\...
   16440:	3c09 682f 3e31 0d5c 090a 3c09 6964 2076     .</h1>\....<div 
   16450:	6c63 7361 3d73 6622 656e 5f74 7268 3e22     class="fnet_hr">
   16460:	0d5c 090a 0909 683c 2f72 5c3e 0a0d 0909     \.....<hr/>\....
   16470:	2f3c 6964 3e76 0d5c 090a 3c09 6964 2076     </div>\....<div 
   16480:	6c63 7361 3d73 6622 656e 5f74 6170 6464     class="fnet_padd
   16490:	6e69 2267 5c3e 0a0d 0909 2f3c 6964 3e76     ing">\....</div>
   164a0:	2927 0d3b 7d0a 0a0d 7566 636e 6974 6e6f     ');..}..function
   164b0:	6620 656e 5074 6972 746e 654d 756e 2928      fnetPrintMenu()
   164c0:	0d7b 090a 6f64 7563 656d 746e 772e 6972     {...document.wri
   164d0:	6574 2728 0d5c 090a 2609 626e 7073 5c3b     te('\....&nbsp;\
   164e0:	0a0d 0909 643c 7669 6920 3d64 6622 656e     ....<div id="fne
   164f0:	5f74 656d 756e 635f 6e6f 6574 746e 3e22     t_menu_content">
   16500:	0d5c 090a 0909 753c 206c 6469 223d 6e66     \.....<ul id="fn
   16510:	7465 6d5f 6e65 2275 5c3e 0a0d 0909 0909     et_menu">\......
   16520:	6c3c 3e69 613c 6820 6572 3d66 2f22 6e69     <li><a href="/in
   16530:	6564 2e78 7468 6c6d 3e22 4e46 5445 4f20     dex.html">FNET O
   16540:	6576 7672 6569 3c77 612f 3c3e 6c2f 3e69     verview</a></li>
   16550:	0d5c 090a 0909 3c09 696c 3c3e 2061 7268     \......<li><a hr
   16560:	6665 223d 662f 656e 5f74 6573 2e74 6873     ef="/fnet_set.sh
   16570:	6d74 226c 463e 454e 2054 6553 7474 6e69     tml">FNET Settin
   16580:	7367 2f3c 3e61 2f3c 696c 5c3e 0a0d 0909     gs</a></li>\....
   16590:	0909 6c3c 3e69 613c 6820 6572 3d66 2f22     ..<li><a href="/
   165a0:	6e66 7465 735f 6174 2e74 7468 6c6d 3e22     fnet_stat.html">
   165b0:	4e46 5445 5320 6174 6974 7473 6369 3c73     FNET Statistics<
   165c0:	612f 3c3e 6c2f 3e69 0d5c 090a 0909 3c09     /a></li>\......<
   165d0:	696c 3c3e 2061 7268 6665 223d 662f 656e     li><a href="/fne
   165e0:	5f74 7573 2e70 7468 6c6d 3e22 4e46 5445     t_sup.html">FNET
   165f0:	5320 7075 6f70 7472 2f3c 3e61 2f3c 696c      Support</a></li
   16600:	5c3e 0a0d 0909 0909 6c3c 3e69 613c 463e     >\......<li><a>F
   16610:	454e 2054 6544 6f6d 2e73 2e2e 2f3c 3e61     NET Demos...</a>
   16620:	0d5c 090a 0909 3c09 6c75 5c3e 0a0d 0909     \......<ul>\....
   16630:	0909 3c09 696c 3c3e 2061 7268 6665 223d     ...<li><a href="
   16640:	662f 656e 5f74 7267 7061 2e68 7468 6c6d     /fnet_graph.html
   16650:	3e22 7247 7061 2f68 4a41 5841 4420 6d65     ">Graph/AJAX Dem
   16660:	3c6f 612f 3c3e 6c2f 3e69 0d5c 090a 0909     o</a></li>\.....
   16670:	0909 6c3c 3e69 613c 6820 6572 3d66 2f22     ..<li><a href="/
   16680:	6e66 7465 705f 736f 2e74 7468 6c6d 3e22     fnet_post.html">
   16690:	4f50 5453 4420 6d65 3c6f 612f 3c3e 6c2f     POST Demo</a></l
   166a0:	3e69 0d5c 090a 0909 0909 6c3c 3e69 613c     i>\.......<li><a
   166b0:	6820 6572 3d66 2f22 7561 6874 662f 656e      href="/auth/fne
   166c0:	5f74 7561 6874 682e 6d74 226c 413e 7475     t_auth.html">Aut
   166d0:	6568 746e 6369 7461 6f69 206e 6544 6f6d     hentication Demo
   166e0:	623c 2f72 3c3e 6f66 746e 7320 7a69 3d65     <br/><font size=
   166f0:	3122 3e22 7355 7265 616e 656d 3c3a 7473     "1">Username:<st
   16700:	6f72 676e 203e 6e66 7465 2f3c 7473 6f72     rong> fnet</stro
   16710:	676e 3c3e 7262 3e2f 6150 7373 6177 6472     ng><br/>Passward
   16720:	3c3a 7473 6f72 676e 203e 7266 6565 6373     :<strong> freesc
   16730:	6c61 3c65 732f 7274 6e6f 3e67 2f3c 6f66     ale</strong></fo
   16740:	746e 3c3e 612f 3c3e 6c2f 3e69 0d5c 090a     nt></a></li>\...
   16750:	0909 3c09 752f 3e6c 0d5c 090a 0909 3c09     ...</ul>\......<
   16760:	6c2f 3e69 0d5c 090a 0909 2f3c 6c75 5c3e     /li>\.....</ul>\
   16770:	0a0d 0909 2f3c 6964 3e76 2927 0d3b 7d0a     ....</div>');..}
   16780:	0a0d 7566 636e 6974 6e6f 6620 656e 5074     ..function fnetP
   16790:	6972 746e 6f46 746f 7265 2928 0d7b 090a     rintFooter(){...
   167a0:	6f64 7563 656d 746e 772e 6972 6574 2728     document.write('
   167b0:	5c20 0a0d 0909 2f3c 6964 3e76 0d5c 090a      \....</div>\...
   167c0:	3c09 7262 3e2f 0d5c 090a 3c09 6964 2076     .<br/>\....<div 
   167d0:	6469 223d 6e66 7465 665f 6f6f 6574 2272     id="fnet_footer"
   167e0:	5c3e 0a0d 0909 3c09 6563 746e 7265 263e     >\.....<center>&
   167f0:	6f63 7970 203b 3032 3530 322d 3130 2033     copy; 2005-2013 
   16800:	7962 4120 646e 6572 2079 7542 6f74 2c6b     by Andrey Butok,
   16810:	4620 454e 2054 6f43 6d6d 6e75 7469 2e79      FNET Community.
   16820:	2f3c 6563 746e 7265 5c3e 0a0d 0909 2f3c     </center>\....</
   16830:	6964 3e76 2927 0d3b 7d0a 0a0d 7566 636e     div>');..}..func
   16840:	6974 6e6f 7320 4866 766f 7265 2928 0d7b     tion sfHover(){.
   16850:	090a 6176 2072 616e 7476 7268 6565 3d20     ..var navthree =
   16860:	6420 636f 6d75 6e65 2e74 6567 4574 656c      document.getEle
   16870:	656d 746e 7942 6449 2228 6e66 7465 6d5f     mentById("fnet_m
   16880:	6e65 2275 3b29 0a0d 6909 2066 6e28 7661     enu");...if (nav
   16890:	6874 6572 2965 0d7b 090a 7609 7261 7320     three){....var s
   168a0:	4566 736c 3d20 6420 636f 6d75 6e65 2e74     fEls = document.
   168b0:	6567 4574 656c 656d 746e 7942 6449 2228     getElementById("
   168c0:	6e66 7465 6d5f 6e65 2275 2e29 6567 4574     fnet_menu").getE
   168d0:	656c 656d 746e 4273 5479 6761 614e 656d     lementsByTagName
   168e0:	2228 696c 2922 0d3b 090a 6609 726f 2820     ("li");....for (
   168f0:	6176 2072 3d69 3b30 6920 733c 4566 736c     var i=0; i<sfEls
   16900:	6c2e 6e65 7467 3b68 6920 2b2b 2029 0d7b     .length; i++) {.
   16910:	090a 0909 6673 6c45 5b73 5d69 6f2e 6d6e     ....sfEls[i].onm
   16920:	756f 6573 766f 7265 663d 6e75 7463 6f69     ouseover=functio
   16930:	286e 2029 0d7b 090a 0909 7409 6968 2e73     n() {......this.
   16940:	6c63 7361 4e73 6d61 2b65 223d 7320 6866     className+=" sfh
   16950:	766f 7265 3b22 0a0d 0909 7d09 0a0d 0909     over";.....}....
   16960:	7309 4566 736c 695b 2e5d 6e6f 6f6d 7375     .sfEls[i].onmous
   16970:	6f65 7475 663d 6e75 7463 6f69 286e 2029     eout=function() 
   16980:	0d7b 090a 0909 7409 6968 2e73 6c63 7361     {......this.clas
   16990:	4e73 6d61 3d65 6874 7369 632e 616c 7373     sName=this.class
   169a0:	614e 656d 722e 7065 616c 6563 6e28 7765     Name.replace(new
   169b0:	5220 6765 7845 2870 2022 6673 6f68 6576      RegExp(" sfhove
   169c0:	5c72 625c 2922 202c 2222 3b29 0a0d 0909     r\\b"), "");....
   169d0:	7d09 0a0d 0909 0d7d 090a 0d7d 7d0a 0a0d     .}....}...}..}..
   169e0:	6669 2820 6977 646e 776f 612e 7474 6361     if (window.attac
   169f0:	4568 6576 746e 0d29 090a 6977 646e 776f     hEvent)...window
   16a00:	612e 7474 6361 4568 6576 746e 2228 6e6f     .attachEvent("on
   16a10:	6f6c 6461 2c22 7320 4866 766f 7265 3b29     load", sfHover);
   16a20:	0a0d 7566 636e 6974 6e6f 6620 656e 5874     ..function fnetX
   16a30:	4c4d 7448 7074 6552 7571 7365 2874 7b29     MLHttpRequest(){
   16a40:	0a0d 7609 7261 7820 6c6d 5448 5054 3d20     ...var xmlHTTP =
   16a50:	6620 6c61 6573 0d3b 090a 6669 2820 6977      false;...if (wi
   16a60:	646e 776f 412e 7463 7669 5865 624f 656a     ndow.ActiveXObje
   16a70:	7463 0d29 090a 7809 6c6d 5448 5054 3d20     ct)....xmlHTTP =
   16a80:	6e20 7765 4120 7463 7669 5865 624f 656a      new ActiveXObje
   16a90:	7463 2228 694d 7263 736f 666f 2e74 4d58     ct("Microsoft.XM
   16aa0:	484c 5454 2250 3b29 0a0d 6509 736c 2065     LHTTP");...else 
   16ab0:	6669 2820 6977 646e 776f 582e 4c4d 7448     if (window.XMLHt
   16ac0:	7074 6552 7571 7365 2974 0a0d 0909 6d78     tpRequest)....xm
   16ad0:	486c 5454 2050 203d 656e 2077 4d58 484c     lHTTP = new XMLH
   16ae0:	7474 5270 7165 6575 7473 2928 0d3b 090a     ttpRequest();...
   16af0:	6669 2820 7821 6c6d 5448 5054 0d29 090a     if (!xmlHTTP)...
   16b00:	6109 656c 7472 2228 6143 6e6e 746f 6320     .alert("Cannot c
   16b10:	6572 7461 2065 6e61 5820 4c4d 5448 5054     reate an XMLHTTP
   16b20:	6920 736e 6174 636e 2165 2922 0d3b 090a      instance!");...
   16b30:	6572 7574 6e72 7820 6c6d 5448 5054 0d3b     return xmlHTTP;.
   16b40:	7d0a 0000                                   .}..

00016b44 <node_6>:
   16b44:	213c 4f44 5443 5059 2045 7468 6c6d 5020     <!DOCTYPE html P
   16b54:	4255 494c 2043 2d22 2f2f 3357 2f43 442f     UBLIC "-//W3C//D
   16b64:	4454 5820 5448 4c4d 3120 302e 5420 6172     TD XHTML 1.0 Tra
   16b74:	736e 7469 6f69 616e 2f6c 452f 224e 2220     nsitional//EN" "
   16b84:	7468 7074 2f3a 772f 7777 772e 2e33 726f     http://www.w3.or
   16b94:	2f67 5254 782f 7468 6c6d 2f31 5444 2f44     g/TR/xhtml1/DTD/
   16ba4:	6878 6d74 316c 742d 6172 736e 7469 6f69     xhtml1-transitio
   16bb4:	616e 2e6c 7464 2264 0d3e 3c0a 7468 6c6d     nal.dtd">..<html
   16bc4:	7820 6c6d 736e 223d 7468 7074 2f3a 772f      xmlns="http://w
   16bd4:	7777 772e 2e33 726f 2f67 3931 3939 782f     ww.w3.org/1999/x
   16be4:	7468 6c6d 3e22 0a0d 683c 6165 3e64 0a0d     html">..<head>..
   16bf4:	3c09 656d 6174 6820 7474 2d70 7165 6975     .<meta http-equi
   16c04:	3d76 4322 6e6f 6574 746e 542d 7079 2265     v="Content-Type"
   16c14:	6320 6e6f 6574 746e 223d 6574 7478 682f      content="text/h
   16c24:	6d74 3b6c 6320 6168 7372 7465 753d 6674     tml; charset=utf
   16c34:	382d 2022 3e2f 0d20 090a 6c3c 6e69 206b     -8" /> ...<link 
   16c44:	6572 3d6c 5322 7974 656c 6873 6565 2274     rel="Stylesheet"
   16c54:	6820 6572 3d66 6622 656e 2e74 7363 2273      href="fnet.css"
   16c64:	7420 7079 3d65 7422 7865 2f74 7363 2273      type="text/css"
   16c74:	6d20 6465 6169 223d 6373 6572 6e65 2f22      media="screen"/
   16c84:	0d3e 090a 743c 7469 656c 463e 454e 2054     >...<title>FNET 
   16c94:	7247 7061 2f68 4a41 5841 4420 6d65 3c6f     Graph/AJAX Demo<
   16ca4:	742f 7469 656c 0d3e 090a 733c 7263 7069     /title>...<scrip
   16cb4:	2074 7974 6570 223d 6574 7478 6a2f 7661     t type="text/jav
   16cc4:	7361 7263 7069 2274 7320 6372 223d 6e66     ascript" src="fn
   16cd4:	7465 6a2e 2273 203e 2f3c 6373 6972 7470     et.js"> </script
   16ce4:	0d3e 090a 6c3c 6e69 206b 6572 3d6c 7322     >...<link rel="s
   16cf4:	6f68 7472 7563 2074 6369 6e6f 2022 7268     hortcut icon" hr
   16d04:	6665 223d 6166 6976 6f63 2e6e 6369 226f     ef="favicon.ico"
   16d14:	3e2f 2020 2020 0a0d 3c09 7473 6c79 2065     />    ...<style 
   16d24:	7974 6570 223d 6574 7478 632f 7373 3e22     type="text/css">
   16d34:	0a0d 0909 6723 6172 6870 7b20 0a0d 0909     ....#graph {....
   16d44:	7709 6469 6874 203a 3833 7030 3b78 6820     .width: 380px; h
   16d54:	6965 6867 3a74 3320 3034 7870 203b 6f70     eight: 340px; po
   16d64:	6973 6974 6e6f 203a 6572 616c 6974 6576     sition: relative
   16d74:	203b 6162 6b63 7267 756f 646e 203a 4523     ; background: #E
   16d84:	4530 4536 3b36 0a0d 0909 6c09 6e69 2d65     0E6E6;.....line-
   16d94:	6568 6769 7468 203a 3332 7870 203b 6f62     height: 23px; bo
   16da4:	6472 7265 203a 7031 2078 6f73 696c 2064     rder: 1px solid 
   16db4:	4323 4333 4446 3b31 6d20 7261 6967 2d6e     #C3CFD1; margin-
   16dc4:	6972 6867 3a74 3031 7870 0d3b 090a 0909     right:10px;.....
   16dd4:	616d 6772 6e69 6c2d 6665 3a74 3031 7870     margin-left:10px
   16de4:	0d3b 090a 7d09 0a0d 0909 6723 6172 6870     ;....}....#graph
   16df4:	7520 206c 0d7b 090a 0909 616d 6772 6e69      ul {.....margin
   16e04:	203a 3b30 7020 6461 6964 676e 203a 3b30     : 0; padding: 0;
   16e14:	6c20 7369 2d74 7473 6c79 3a65 6e20 6e6f      list-style: non
   16e24:	3b65 0a0d 0909 0d7d 090a 2309 7267 7061     e;....}....#grap
   16e34:	2068 6c75 6c20 2069 0d7b 090a 0909 6f70     h ul li {.....po
   16e44:	6973 6974 6e6f 203a 6261 6f73 756c 6574     sition: absolute
   16e54:	203b 6977 7464 3a68 3220 7038 3b78 6220     ; width: 28px; b
   16e64:	746f 6f74 3a6d 3120 7035 3b78 7020 6461     ottom: 15px; pad
   16e74:	6964 676e 203a 3b30 0a0d 0909 6d09 7261     ding: 0;.....mar
   16e84:	6967 3a6e 3020 203b 6574 7478 612d 696c     gin: 0; text-ali
   16e94:	6e67 203a 6563 746e 7265 203b 6f66 746e     gn: center; font
   16ea4:	772d 6965 6867 3a74 6220 6c6f 3b64 0a0d     -weight: bold;..
   16eb4:	0909 6309 6c6f 726f 203a 6877 7469 3b65     ...color: white;
   16ec4:	6c20 6e69 2d65 6568 6769 7468 203a 2e32      line-height: 2.
   16ed4:	6535 3b6d 0a0d 0909 0d7d 090a 2309 7267     5em;....}....#gr
   16ee4:	7061 2068 696c 7123 2031 6c7b 6665 3a74     aph li#q1 {left:
   16ef4:	3220 7034 3b78 6220 6361 676b 6f72 6e75      24px; backgroun
   16f04:	2d64 6f70 6973 6974 6e6f 203a 7030 2078     d-position: 0px 
   16f14:	6f62 7474 6d6f 203b 6162 6b63 7267 756f     bottom; backgrou
   16f24:	646e 233a 3030 3036 4238 7d3b 0a0d 0909     nd:#00608B;}....
   16f34:	6723 6172 6870 6c20 2369 3271 7b20 656c     #graph li#q2 {le
   16f44:	7466 203a 3031 7031 3b78 6220 6361 676b     ft: 101px; backg
   16f54:	6f72 6e75 2d64 6f70 6973 6974 6e6f 203a     round-position: 
   16f64:	322d 7038 2078 6f62 7474 6d6f 203b 6162     -28px bottom; ba
   16f74:	6b63 7267 756f 646e 233a 3337 4642 3744     ckground:#73BFD7
   16f84:	7d3b 0a0d 0909 6723 6172 6870 6c20 2369     ;}....#graph li#
   16f94:	3371 7b20 656c 7466 203a 3731 7036 3b78     q3 {left: 176px;
   16fa4:	6220 6361 676b 6f72 6e75 2d64 6f70 6973      background-posi
   16fb4:	6974 6e6f 203a 352d 7036 2078 6f62 7474     tion: -56px bott
   16fc4:	6d6f 203b 6162 6b63 7267 756f 646e 233a     om; background:#
   16fd4:	3939 3838 3537 7d3b 0a0d 0909 6723 6172     998875;}....#gra
   16fe4:	6870 6c20 2369 3471 7b20 656c 7466 203a     ph li#q4 {left: 
   16ff4:	3532 7031 3b78 6220 6361 676b 6f72 6e75     251px; backgroun
   17004:	2d64 6f70 6973 6974 6e6f 203a 382d 7034     d-position: -84p
   17014:	2078 6f62 7474 6d6f 203b 6162 6b63 7267     x bottom; backgr
   17024:	756f 646e 233a 3343 4343 3135 7d3b 0a0d     ound:#C3CC51;}..
   17034:	0909 6723 6172 6870 6c20 2369 3571 7b20     ..#graph li#q5 {
   17044:	656c 7466 203a 3233 7037 3b78 6220 6361     left: 327px; bac
   17054:	676b 6f72 6e75 2d64 6f70 6973 6974 6e6f     kground-position
   17064:	203a 312d 3231 7870 6220 746f 6f74 3b6d     : -112px bottom;
   17074:	6220 6361 676b 6f72 6e75 3a64 3423 3444      background:#4D4
   17084:	3444 3b44 0d7d 090a 2f3c 7473 6c79 3e65     D4D;}...</style>
   17094:	0a0d 3c09 6373 6972 7470 7420 7079 3d65     ...<script type=
   170a4:	7422 7865 2f74 616a 6176 6373 6972 7470     "text/javascript
   170b4:	3e22 0a0d 0909 6176 2072 6e66 7465 6144     ">....var fnetDa
   170c4:	6174 6552 6563 7669 6465 3d20 3020 0d3b     taReceived = 0;.
   170d4:	090a 6609 6e75 7463 6f69 206e 6e66 7465     ...function fnet
   170e4:	6552 7571 7365 2874 7b29 0a0d 0909 6909     Request(){.....i
   170f4:	2066 2128 6e66 7465 6144 6174 6552 6563     f (!fnetDataRece
   17104:	7669 6465 7b29 0a0d 0909 2020 2020 2020     ived){....      
   17114:	2020 6176 2072 6d78 486c 5454 2050 203d       var xmlHTTP = 
   17124:	6e66 7465 4d58 484c 7474 5270 7165 6575     fnetXMLHttpReque
   17134:	7473 2928 0d3b 200a 0909 0909 6e66 7465     st();.. ....fnet
   17144:	6144 6174 6552 6563 7669 6465 3d20 3120     DataReceived = 1
   17154:	0d3b 090a 0909 6909 2866 7820 6c6d 5448     ;......if( xmlHT
   17164:	5054 2120 203d 756e 6c6c 7b29 0a0d 0909     TP != null){....
   17174:	0909 7809 6c6d 5448 5054 6f2e 726e 6165     ...xmlHTTP.onrea
   17184:	7964 7473 7461 6365 6168 676e 2065 203d     dystatechange = 
   17194:	7566 636e 6974 6e6f 2928 0d7b 090a 0909     function(){.....
   171a4:	2009 0920 6909 2066 7828 6c6d 5448 5054     .  ..if (xmlHTTP
   171b4:	722e 6165 7964 7453 7461 2065 3d3d 3420     .readyState == 4
   171c4:	7b29 0a0d 0909 0909 0909 6909 2066 7828     ){.........if (x
   171d4:	6c6d 5448 5054 732e 6174 7574 2073 3d3d     mlHTTP.status ==
   171e4:	3220 3030 0d29 090a 0909 0909 0909 0909      200)...........
   171f4:	6e66 7465 6148 646e 656c 2872 6d78 486c     fnetHandler(xmlH
   17204:	5454 2e50 6572 7073 6e6f 6573 6554 7478     TTP.responseText
   17214:	3b29 0a0d 0909 0909 2020 0909 6609 656e     );......  ...fne
   17224:	4474 7461 5261 6365 6965 6576 2064 203d     tDataReceived = 
   17234:	3b30 0a0d 0909 2009 0920 0909 0d7d 090a     0;.....  ...}...
   17244:	0909 0909 3b7d 0a0d 0909 0909 7809 6c6d     ....};.......xml
   17254:	5448 5054 6f2e 6570 286e 4722 5445 2c22     HTTP.open("GET",
   17264:	2220 7267 7061 2e68 6763 2269 202c 7274      "graph.cgi", tr
   17274:	6575 3b29 0a0d 0909 0909 7809 6c6d 5448     ue);.......xmlHT
   17284:	5054 732e 7465 6552 7571 7365 4874 6165     TP.setRequestHea
   17294:	6564 2872 4922 2d66 6f4d 6964 6966 6465     der("If-Modified
   172a4:	532d 6e69 6563 2c22 6420 636f 6d75 6e65     -Since", documen
   172b4:	2e74 616c 7473 6f4d 6964 6966 6465 3b29     t.lastModified);
   172c4:	0a0d 0909 0909 7809 6c6d 5448 5054 732e     .......xmlHTTP.s
   172d4:	6e65 2864 756e 6c6c 3b29 0a0d 0909 0909     end(null);......
   172e4:	0d7d 090a 0909 0d7d 090a 7d09 0a0d 0909     }.....}....}....
   172f4:	7566 636e 6974 6e6f 6620 656e 4874 6e61     function fnetHan
   17304:	6c64 7265 6428 7461 2961 0d7b 090a 0909     dler(data){.....
   17314:	6176 2072 6572 2073 203d 7665 6c61 6428     var res = eval(d
   17324:	7461 2961 0d3b 090a 0909 6f64 7563 656d     ata);.....docume
   17334:	746e 672e 7465 6c45 6d65 6e65 4274 4979     nt.getElementByI
   17344:	2864 7122 2231 2e29 7473 6c79 2e65 6568     d("q1").style.he
   17354:	6769 7468 3d20 7220 7365 712e 2b31 7022     ight = res.q1+"p
   17364:	2278 0d3b 090a 0909 6f64 7563 656d 746e     x";.....document
   17374:	672e 7465 6c45 6d65 6e65 4274 4979 2864     .getElementById(
   17384:	7122 2231 2e29 6e69 656e 4872 4d54 204c     "q1").innerHTML 
   17394:	203d 6572 2e73 3171 0d3b 090a 0909 6f64     = res.q1;.....do
   173a4:	7563 656d 746e 672e 7465 6c45 6d65 6e65     cument.getElemen
   173b4:	4274 4979 2864 7122 2232 2e29 7473 6c79     tById("q2").styl
   173c4:	2e65 6568 6769 7468 3d20 7220 7365 712e     e.height = res.q
   173d4:	2b32 7022 2278 0d3b 090a 0909 6f64 7563     2+"px";.....docu
   173e4:	656d 746e 672e 7465 6c45 6d65 6e65 4274     ment.getElementB
   173f4:	4979 2864 7122 2232 2e29 6e69 656e 4872     yId("q2").innerH
   17404:	4d54 204c 203d 6572 2e73 3271 0d3b 090a     TML = res.q2;...
   17414:	0909 6f64 7563 656d 746e 672e 7465 6c45     ..document.getEl
   17424:	6d65 6e65 4274 4979 2864 7122 2233 2e29     ementById("q3").
   17434:	7473 6c79 2e65 6568 6769 7468 3d20 7220     style.height = r
   17444:	7365 712e 2b33 7022 2278 0d3b 090a 0909     es.q3+"px";.....
   17454:	6f64 7563 656d 746e 672e 7465 6c45 6d65     document.getElem
   17464:	6e65 4274 4979 2864 7122 2233 2e29 6e69     entById("q3").in
   17474:	656e 4872 4d54 204c 203d 6572 2e73 3371     nerHTML = res.q3
   17484:	0d3b 090a 0909 6f64 7563 656d 746e 672e     ;.....document.g
   17494:	7465 6c45 6d65 6e65 4274 4979 2864 7122     etElementById("q
   174a4:	2234 2e29 7473 6c79 2e65 6568 6769 7468     4").style.height
   174b4:	3d20 7220 7365 712e 2b34 7022 2278 0d3b      = res.q4+"px";.
   174c4:	090a 0909 6f64 7563 656d 746e 672e 7465     ....document.get
   174d4:	6c45 6d65 6e65 4274 4979 2864 7122 2234     ElementById("q4"
   174e4:	2e29 6e69 656e 4872 4d54 204c 203d 6572     ).innerHTML = re
   174f4:	2e73 3471 0d3b 090a 0909 6f64 7563 656d     s.q4;.....docume
   17504:	746e 672e 7465 6c45 6d65 6e65 4274 4979     nt.getElementByI
   17514:	2864 7122 2235 2e29 7473 6c79 2e65 6568     d("q5").style.he
   17524:	6769 7468 3d20 7220 7365 712e 2b35 7022     ight = res.q5+"p
   17534:	2278 0d3b 090a 0909 6f64 7563 656d 746e     x";.....document
   17544:	672e 7465 6c45 6d65 6e65 4274 4979 2864     .getElementById(
   17554:	7122 2235 2e29 6e69 656e 4872 4d54 204c     "q5").innerHTML 
   17564:	203d 6572 2e73 3571 093b 0909 0909 0909     = res.q5;.......
   17574:	0d09 090a 7d09 0a0d 0909 6977 646e 776f     .....}....window
   17584:	732e 7465 6e49 6574 7672 6c61 2228 6e66     .setInterval("fn
   17594:	7465 6552 7571 7365 2874 2229 202c 3031     etRequest()", 10
   175a4:	3030 3b29 0a0d 3c09 732f 7263 7069 3e74     00);...</script>
   175b4:	0a0d 2f3c 6568 6461 0d3e 3c0a 6f62 7964     ..</head>..<body
   175c4:	0d3e 090a 733c 7263 7069 2074 7974 6570     >...<script type
   175d4:	223d 6574 7478 6a2f 7661 7361 7263 7069     ="text/javascrip
   175e4:	2274 0d3e 090a 6609 656e 5074 6972 746e     t">....fnetPrint
   175f4:	6548 6461 7265 2228 7247 7061 2f68 4a41     Header("Graph/AJ
   17604:	5841 4420 6d65 226f 3b29 0a0d 3c09 732f     AX Demo");...</s
   17614:	7263 7069 3e74 0a0d 0920 643c 7669 6920     cript>.. .<div i
   17624:	3d64 6722 6172 6870 3e22 0a0d 0909 753c     d="graph">....<u
   17634:	3e6c 0a0d 0909 3c09 696c 6920 3d64 7122     l>.....<li id="q
   17644:	2231 3c3e 6c2f 3e69 0a0d 0909 3c09 696c     1"></li>.....<li
   17654:	6920 3d64 7122 2232 3c3e 6c2f 3e69 0a0d      id="q2"></li>..
   17664:	0909 3c09 696c 6920 3d64 7122 2233 3c3e     ...<li id="q3"><
   17674:	6c2f 3e69 0a0d 0909 3c09 696c 6920 3d64     /li>.....<li id=
   17684:	7122 2234 3c3e 6c2f 3e69 0a0d 0909 3c09     "q4"></li>.....<
   17694:	696c 6920 3d64 7122 2235 3c3e 6c2f 3e69     li id="q5"></li>
   176a4:	0a0d 0909 2f3c 6c75 0d3e 090a 2f3c 6964     ....</ul>...</di
   176b4:	3e76 0a0d 3c09 7262 3e2f 0a0d 3c09 7262     v>...<br/>...<br
   176c4:	3e2f 0a0d 3c09 3e69 4f4e 4554 203a 6854     />...<i>NOTE: Th
   176d4:	7369 7020 6761 2065 6567 7374 7420 6568     is page gets the
   176e4:	6420 7461 2061 7266 6d6f 7420 6568 7320      data from the s
   176f4:	7265 6576 2072 6570 6972 646f 6369 6c61     erver periodical
   17704:	796c 7720 7469 2068 6568 706c 0d20 090a     ly with help ...
   17714:	666f 4120 414a 2e58 4920 e274 9980 2073     of AJAX. It...s 
   17724:	7375 6465 4a20 7661 5361 7263 7069 2c74     used JavaScript,
   17734:	4320 4947 6120 646e 4a20 4f53 204e 6164      CGI and JSON da
   17744:	6174 6620 726f 616d 2e74 2f3c 3e69 0d09     ta format.</i>..
   17754:	200a 3c09 6373 6972 7470 7420 7079 3d65     . .<script type=
   17764:	7422 7865 2f74 616a 6176 6373 6972 7470     "text/javascript
   17774:	3e22 0a0d 0909 6609 656e 5074 6972 746e     ">.....fnetPrint
   17784:	6f46 746f 7265 2928 0d3b 090a 2f3c 6373     Footer();...</sc
   17794:	6972 7470 0d3e 3c0a 622f 646f 3e79 0a0d     ript>..</body>..
   177a4:	2f3c 7468 6c6d 093e 0d09 000a               </html>.....

000177b0 <node_7>:
   177b0:	4947 3846 6139 00a2 0032 00f7 0000 0000     GIF89a..2.......
   177c0:	0707 1507 1515 1717 1d17 1d1d 2727 2d27     ............'''-
   177d0:	2d2d 3636 3b36 3b3b 4141 4641 4646 4949     --666;;;AAAFFFII
   177e0:	4f49 4f4f 5d5d 635d 6363 6a6a 6f6a 6f6f     IOOO]]]cccjjjooo
   177f0:	7575 7b75 7b7b 8181 8b81 8b8b 9191 9791     uuu{{{..........
   17800:	9797 9b9b 9e9b 9e9e a4a4 a8a4 a8a8 b2b2     ................
   17810:	b6b2 b6b6 baba beba bebe c1c1 c6c1 c6c6     ................
   17820:	caca d1ca d1d1 d5d5 d9d5 d9d9 dbdb dcdb     ................
   17830:	dcdc dddd dfdd dfdf e4e4 e8e4 e8e8 f1f1     ................
   17840:	f2f1 f2f2 fafd fef6 f7fb fdff fbf5 fbfb     ................
   17850:	fafe fff8 fafc fdfe fefc fdfd feff fefd     ................
   17860:	fefe ffff 00ff 0000 0000 0000 0000 0000     ................
	...
   17abc:	2c00 0000 0000 00a2 0032 0800 00ff 086f     .,......2.....o.
   17acc:	481c a0b0 83c1 1308 5c2a b0c8 c3a1 1087     .H......*\......
   17adc:	4a23 489c a2b1 8bc5 3318 dc6a b1c8 c7a3     #J.H.....3j.....
   17aec:	208f 8a43 491c a4b2 93c9 5328 5caa 12c9     . C..I....(S.\..
   17afc:	8da1 3096 ca63 499c 6433 9a8d 7338 7c32     ...0c..I3d..8s2|
   17b0c:	b3a9 4a67 0517 fa79 4a1c 2154 0b8b 040a     ..gJ..y..JT!....
   17b1c:	5800 e08a 8606 50a5 2c01 6840 6a22 8253     .X.....P.,@h"jS.
   17b2c:	b351 8d6a e09a 8446 60ad 16b9 286d e0f4     Q.j...F..`..m(..
   17b3c:	0085 215a 80dc f5b0 41c4 510f 0ed5 1aac     ..Z!.....A.Q....
   17b4c:	6c36 1b84 ea09 2dda b40a d7e2 16ad 206e     6l.....-......n 
   17b5c:	5ad8 6cc1 0c54 e104 ddea 788a 62c0 63c6     .Z.lT......x.b.c
   17b6c:	7e2b bb08 06e1 01d8 d907 fd42 d040 63c2     +~........B.@..c
   17b7c:	1fad 7c54 1d06 6139 8359 c20b a086 15bb     ..T|..9aY.......
   17b8c:	c184 5103 1051 307c 763a da88 4d51 9694     ...QQ.|0:v..QM..
   17b9c:	a2b8 8a2e 610e 141d 1184 4035 d841 01b8     .....a....5@A...
   17bac:	d0dc 7c90 6ee9 3482 4e1a 4a8e 44a0 b0e7     ...|.n.4.N.J.D..
   17bbc:	5601 2410 7621 f120 17ac 522a c8ff e05a     .V.$!v ...*R..Z.
   17bcc:	c1b9 0fbe 473d 50cd 7690 f658 8103 9d43     ....=G.P.vX...C.
   17bdc:	9db0 c534 5906 981b d8a7 eebb 8101 81c8     ..4..Y..........
   17bec:	9575 ea40 a52d 4101 681b 42a5 0545 4564     u.@.-..A.h.BE.dE
   17bfc:	7ec1 c507 d030 0269 a089 03d7 7c37 54b7     .~..0.i.....7|.T
   17c0c:	8300 3565 40c2 41f8 0215 e341 8545 4519     ..e5.@.A..A.E..E
   17c1c:	65a2 01d5 1284 17c9 6056 4216 0095 5a07     .e......V`.B...Z
   17c2c:	27d1 8350 2d50 6208 157e 96dd 0915 1e2c     .'P.P-.b~.....,.
   17c3c:	42d4 0542 5582 8259 4550 8300 2663 70c2     .BB..UY.PE..c&.p
   17c4c:	7f43 9d4b 1038 9f8e 9769 7310 3959 2419     C.K.8...i..sY9.$
   17c5c:	3c41 7851 7b83 8961 4370 4b89 2621 5681     A<Qx.{a.pC.K!&.V
   17c6c:	dc1c e310 fa52 040d 63e5 29e5 17f4 ff54     ....R....c.)..T.
   17c7c:	e799 9765 150a 4009 0465 b885 88d4 6823     ..e....@e.....#h
   17c8c:	1c25 4b96 383d 8f90 319f 50b0 715e 2799     %..K=8...1.P^q.'
   17c9c:	4583 2e7e 2625 5441 a002 6a63 a559 4130     .E~.%&AT..cjY.0A
   17cac:	7c54 440a 63e8 2636 5684 e154 196d a551     T|.D.c6&.VT.m.Q.
   17cbc:	6800 5029 518a f40e 52e9 3017 10ff a4d5     .h)P.Q...R.0....
   17ccc:	6d02 1a3a 0962 b6b1 a999 bd10 4009 879d     .m:.b........@..
   17cdc:	a546 40a8 8c2b 950a 4c01 652e 40a5 8eb2     F..@+....L.e.@..
   17cec:	59c6 8a42 f6c5 979c 210f 14ba 0486 6a7d     .YB......!....}j
   17cfc:	40a8 8667 ac05 c940 752e 4517 6417 5c65     .@g...@..u.E.de\
   17d0c:	3690 8b50 abd0 0ea5 eb64 9d52 59aa b617     .6P.....d.R..Y..
   17d1c:	a102 d5a0 1481 b981 b0d4 aaa6 d05b 4bbb     ............[..K
   17d2c:	5079 b350 1692 c064 048b 174d 9015 0514     yPP...d...M.....
   17d3c:	54b8 41a8 70be 4dc3 310c 950a 046c 0b19     .T.A.p.M.1..l...
   17d4c:	b2c0 6502 d610 038a 553d 455c 421a ef85     ...e....=U\E.B..
   17d5c:	fe6e a432 b9f1 d903 a74b c541 c582 40b0     n.2.....K.A....@
   17d6c:	ee73 d15b 509a cad1 432b cb2e 9058 00c2     s.[..P..+C..X...
   17d7c:	4bd0 0390 1560 f164 df68 a822 c715 4544     .K..`.d.h."...DE
   17d8c:	5177 0fb4 2417 52f2 1981 c204 0356 d40a     wQ...$.R....V...
   17d9c:	9b5c 9106 54b9 fb9c 2ba5 b951 9d51 734c     \....T...+Q.Q.Ls
   17dac:	0254 741f 5670 0972 eba4 db68 cc0e 9da3     T..tpVr...h.....
   17dbc:	e433 d59b 0488 b875 6e94 8186 9753 7358     3.....u..n..S.Xs
   17dcc:	12f1 2e14 5500 958f 43b2 6f0e 505c 0956     .....U...C.o\PV.
   17ddc:	60a5 409f e364 f3a6 ac40 0542 cef2 950c     .`.@d...@.B.....
   17dec:	000c 6ed8 8777 d110 0ed2 efa4 3a68 acfe     ...nw.......h:..
   17dfc:	ccd5 a1fb f987 acea eeb7 ebfa c7b0 fb2e     ................
   17e0c:	b4ec 6ed7 edfb e7b8 fbae bcee 8ef7 407b     ...n..........{@
   17e1c:	3b00 0000                                   .;..

00017e20 <node_8>:
   17e20:	213c 4f44 5443 5059 2045 7468 6c6d 5020     <!DOCTYPE html P
   17e30:	4255 494c 2043 2d22 2f2f 3357 2f43 442f     UBLIC "-//W3C//D
   17e40:	4454 5820 5448 4c4d 3120 302e 5420 6172     TD XHTML 1.0 Tra
   17e50:	736e 7469 6f69 616e 2f6c 452f 224e 2220     nsitional//EN" "
   17e60:	7468 7074 2f3a 772f 7777 772e 2e33 726f     http://www.w3.or
   17e70:	2f67 5254 782f 7468 6c6d 2f31 5444 2f44     g/TR/xhtml1/DTD/
   17e80:	6878 6d74 316c 742d 6172 736e 7469 6f69     xhtml1-transitio
   17e90:	616e 2e6c 7464 2264 0d3e 3c0a 7468 6c6d     nal.dtd">..<html
   17ea0:	7820 6c6d 736e 223d 7468 7074 2f3a 772f      xmlns="http://w
   17eb0:	7777 772e 2e33 726f 2f67 3931 3939 782f     ww.w3.org/1999/x
   17ec0:	7468 6c6d 3e22 0a0d 683c 6165 3e64 0a0d     html">..<head>..
   17ed0:	3c09 656d 6174 6820 7474 2d70 7165 6975     .<meta http-equi
   17ee0:	3d76 4322 6e6f 6574 746e 542d 7079 2265     v="Content-Type"
   17ef0:	6320 6e6f 6574 746e 223d 6574 7478 682f      content="text/h
   17f00:	6d74 3b6c 6320 6168 7372 7465 753d 6674     tml; charset=utf
   17f10:	382d 2022 3e2f 0d20 090a 6c3c 6e69 206b     -8" /> ...<link 
   17f20:	6572 3d6c 5322 7974 656c 6873 6565 2274     rel="Stylesheet"
   17f30:	6820 6572 3d66 6622 656e 2e74 7363 2273      href="fnet.css"
   17f40:	7420 7079 3d65 7422 7865 2f74 7363 2273      type="text/css"
   17f50:	6d20 6465 6169 223d 6373 6572 6e65 2f22      media="screen"/
   17f60:	0d3e 090a 743c 7469 656c 463e 454e 2054     >...<title>FNET 
   17f70:	4f50 5453 4420 6d65 3c6f 742f 7469 656c     POST Demo</title
   17f80:	0d3e 090a 733c 7263 7069 2074 7974 6570     >...<script type
   17f90:	223d 6574 7478 6a2f 7661 7361 7263 7069     ="text/javascrip
   17fa0:	2274 7320 6372 223d 6e66 7465 6a2e 2273     t" src="fnet.js"
   17fb0:	203e 2f3c 6373 6972 7470 0d3e 090a 6c3c     > </script>...<l
   17fc0:	6e69 206b 6572 3d6c 7322 6f68 7472 7563     ink rel="shortcu
   17fd0:	2074 6369 6e6f 2022 7268 6665 223d 6166     t icon" href="fa
   17fe0:	6976 6f63 2e6e 6369 226f 3e2f 2020 2020     vicon.ico"/>    
   17ff0:	0a0d 3c09 6373 6972 7470 7420 7079 3d65     ...<script type=
   18000:	7422 7865 2f74 616a 6176 6373 6972 7470     "text/javascript
   18010:	3e22 0a0d 0909 7566 636e 6974 6e6f 6620     ">....function f
   18020:	656e 5074 736f 5274 7165 6575 7473 2928     netPostRequest()
   18030:	0d7b 090a 2009 0909 6176 2072 6d78 486c     {.... ..var xmlH
   18040:	5454 2050 203d 6e66 7465 4d58 484c 7474     TTP = fnetXMLHtt
   18050:	5270 7165 6575 7473 2928 0d3b 200a 2020     pRequest();..   
   18060:	2020 2020 2020 2020 2020 2020 7620 7261                  var
   18070:	6420 7461 3b61 0a0d 0909 0909 6164 6174      data;......data
   18080:	643d 636f 6d75 6e65 2e74 6567 4574 656c     =document.getEle
   18090:	656d 746e 7942 6449 2228 6f70 7473 645f     mentById("post_d
   180a0:	7461 2261 2e29 6176 756c 3b65 0a0d 0909     ata").value;....
   180b0:	0909 6669 7828 6c6d 5448 5054 2120 203d     ..if(xmlHTTP != 
   180c0:	756e 6c6c 7b29 0a0d 0909 0909 2020 0920     null){......   .
   180d0:	6d78 486c 5454 2e50 6e6f 6572 6461 7379     xmlHTTP.onreadys
   180e0:	6174 6574 6863 6e61 6567 3d20 6620 6e75     tatechange = fun
   180f0:	7463 6f69 286e 7b29 0a0d 0909 0909 0909     ction(){........
   18100:	6909 2066 7828 6c6d 5448 5054 722e 6165     .if (xmlHTTP.rea
   18110:	7964 7453 7461 2065 3d3d 3420 0d29 090a     dyState == 4)...
   18120:	0909 0909 0909 6909 2066 7828 6c6d 5448     .......if (xmlHT
   18130:	5054 732e 6174 7574 2073 3d21 3220 3030     TP.status != 200
   18140:	0d29 090a 0909 2020 2020 2020 2020 2020     ).....          
   18150:	2020 0909 6109 656c 7472 2228 7553 6d62       ...alert("Subm
   18160:	7469 6974 676e 6920 2073 6166 6c69 6465     itting is failed
   18170:	222e 3b29 0a0d 0909 0909 7d09 0d3b 090a     .");.......};...
   18180:	0909 0909 6d78 486c 5454 2e50 706f 6e65     ....xmlHTTP.open
   18190:	2228 4f50 5453 2c22 2220 6f70 7473 632e     ("POST", "post.c
   181a0:	6967 2c22 7420 7572 2965 0d3b 090a 0909     gi", true);.....
   181b0:	0909 6d78 486c 5454 2e50 6573 5274 7165     ..xmlHTTP.setReq
   181c0:	6575 7473 6548 6461 7265 2228 6f43 746e     uestHeader("Cont
   181d0:	6e65 2d74 656c 676e 6874 2c22 6420 7461     ent-length", dat
   181e0:	2e61 656c 676e 6874 3b29 0a0d 0909 0909     a.length);......
   181f0:	7809 6c6d 5448 5054 732e 6e65 2864 6164     .xmlHTTP.send(da
   18200:	6174 3b29 0a0d 0909 0909 0d7d 090a 7d09     ta);......}....}
   18210:	0a0d 0909 7566 636e 6974 6e6f 6620 656e     ....function fne
   18220:	4774 7465 6552 7571 7365 2874 7b29 0a0d     tGetRequest(){..
   18230:	0909 7609 7261 7820 6c6d 5448 5054 3d20     ...var xmlHTTP =
   18240:	6620 656e 5874 4c4d 7448 7074 6552 7571      fnetXMLHttpRequ
   18250:	7365 2874 3b29 0a0d 0909 6909 2866 6d78     est();.....if(xm
   18260:	486c 5454 2050 3d21 6e20 6c75 296c 0a0d     lHTTP != null)..
   18270:	0909 7b09 0a0d 0909 0909 6d78 486c 5454     ...{......xmlHTT
   18280:	2e50 6e6f 6572 6461 7379 6174 6574 6863     P.onreadystatech
   18290:	6e61 6567 3d20 6620 6e75 7463 6f69 286e     ange = function(
   182a0:	7b29 0a0d 0909 0909 6909 2066 7828 6c6d     ){.......if (xml
   182b0:	5448 5054 722e 6165 7964 7453 7461 2065     HTTP.readyState 
   182c0:	3d3d 3420 7b29 0a0d 0909 0909 0909 6669     == 4){........if
   182d0:	2820 6d78 486c 5454 2e50 7473 7461 7375      (xmlHTTP.status
   182e0:	3d20 203d 3032 2930 0a0d 0909 0909 2020      == 200)......  
   182f0:	0920 0909 6f64 7563 656d 746e 672e 7465      ...document.get
   18300:	6c45 6d65 6e65 4274 4979 2864 7622 6569     ElementById("vie
   18310:	5f77 6164 6174 2922 762e 6c61 6575 3d20     w_data").value =
   18320:	7820 6c6d 5448 5054 722e 7365 6f70 736e      xmlHTTP.respons
   18330:	5465 7865 3b74 0a0d 0909 0909 0909 6c65     eText;........el
   18340:	6573 0a0d 0909 0920 0909 0909 6c61 7265     se.... .....aler
   18350:	2874 5622 6569 6977 676e 6920 2073 6166     t("Viewing is fa
   18360:	6c69 6465 222e 3b29 0a0d 0909 0909 7d09     iled.");.......}
   18370:	0a0d 0909 0909 3b7d 0a0d 0920 0909 2020     ......};.. ...  
   18380:	0920 6d78 486c 5454 2e50 706f 6e65 2228      .xmlHTTP.open("
   18390:	4547 2254 202c 7022 736f 2e74 6763 2269     GET", "post.cgi"
   183a0:	202c 7274 6575 3b29 0a0d 0909 2009 2020     , true);.....   
   183b0:	7809 6c6d 5448 5054 732e 7465 6552 7571     .xmlHTTP.setRequ
   183c0:	7365 4874 6165 6564 2872 4922 2d66 6f4d     estHeader("If-Mo
   183d0:	6964 6966 6465 532d 6e69 6563 2c22 6420     dified-Since", d
   183e0:	636f 6d75 6e65 2e74 616c 7473 6f4d 6964     ocument.lastModi
   183f0:	6966 6465 3b29 0a0d 0909 0909 6d78 486c     fied);......xmlH
   18400:	5454 2e50 6573 646e 6e28 6c75 296c 0d3b     TTP.send(null);.
   18410:	090a 0909 0d7d 090a 7d09 0a0d 2020 2020     ....}....}..    
   18420:	2020 2020 7566 636e 6974 6e6f 6c20 6d69         function lim
   18430:	7469 6554 7478 2928 0d7b 200a 2020 2020     itText(){..     
   18440:	2020 0920 6176 2072 696c 696d 4674 6569        .var limitFie
   18450:	646c 3d20 6420 636f 6d75 6e65 2e74 6567     ld = document.ge
   18460:	4574 656c 656d 746e 7942 6449 2228 6f70     tElementById("po
   18470:	7473 645f 7461 2261 3b29 0a0d 2020 2020     st_data");..    
   18480:	2020 2020 2020 2020 6176 2072 696c 696d             var limi
   18490:	4e74 6d75 3d20 3520 3b30 0a0d 0909 6909     tNum = 50;.....i
   184a0:	2066 6c28 6d69 7469 6946 6c65 2e64 6176     f (limitField.va
   184b0:	756c 2e65 656c 676e 6874 3e20 6c20 6d69     lue.length > lim
   184c0:	7469 754e 296d 7b20 0a0d 0909 0909 696c     itNum) {......li
   184d0:	696d 4674 6569 646c 762e 6c61 6575 3d20     mitField.value =
   184e0:	6c20 6d69 7469 6946 6c65 2e64 6176 756c      limitField.valu
   184f0:	2e65 7573 7362 7274 6e69 2867 2c30 6c20     e.substring(0, l
   18500:	6d69 7469 754e 296d 0d3b 090a 0909 207d     imitNum);.....} 
   18510:	6c65 6573 7b20 0a0d 0909 0909 6f64 7563     else {......docu
   18520:	656d 746e 672e 7465 6c45 6d65 6e65 4274     ment.getElementB
   18530:	4979 2864 6322 756f 746e 7265 2922 692e     yId("counter").i
   18540:	6e6e 7265 5448 4c4d 3d20 6c20 6d69 7469     nnerHTML = limit
   18550:	754e 206d 202d 696c 696d 4674 6569 646c     Num - limitField
   18560:	762e 6c61 6575 6c2e 6e65 7467 3b68 0a0d     .value.length;..
   18570:	0909 7d09 0a0d 0909 0d7d 090a 2f3c 6373     ...}....}...</sc
   18580:	6972 7470 0d3e 3c0a 682f 6165 3e64 0a0d     ript>..</head>..
   18590:	623c 646f 3e79 0a0d 3c09 6373 6972 7470     <body>...<script
   185a0:	7420 7079 3d65 7422 7865 2f74 616a 6176      type="text/java
   185b0:	6373 6972 7470 3e22 0a0d 0909 6e66 7465     script">....fnet
   185c0:	7250 6e69 4874 6165 6564 2872 4622 454e     PrintHeader("FNE
   185d0:	2054 4f50 5453 4420 6d65 226f 3b29 0a0d     T POST Demo");..
   185e0:	3c09 732f 7263 7069 3e74 0a0d 0a0d 2020     .</script>....  
   185f0:	2020 743c 6261 656c 6320 6c65 736c 6170       <table cellspa
   18600:	6963 676e 223d 2232 0d3e 090a 743c 2068     cing="2">...<th 
   18610:	6977 7464 3d68 3222 3030 3e22 7553 6d62     width="200">Subm
   18620:	7469 6974 676e 7920 756f 2072 6e69 7570     itting your inpu
   18630:	2074 6164 6174 3c3a 742f 3e68 0a0d 3c09     t data:</th>...<
   18640:	6874 7720 6469 6874 223d 3032 2230 433e     th width="200">C
   18650:	6568 6b63 6e69 2067 6f79 7275 7320 6275     hecking your sub
   18660:	696d 7474 6465 6420 7461 3a61 2f3c 6874     mitted data:</th
   18670:	0d3e 090a 743c 3e72 0a0d 0909 743c 3e64     >...<tr>....<td>
   18680:	0a0d 0920 0909 743c 7865 6174 6572 2061     .. ...<textarea 
   18690:	6469 223d 6f70 7473 645f 7461 2261 7220     id="post_data" r
   186a0:	776f 3d73 3322 2022 6f63 736c 223d 3532     ows="3" cols="25
   186b0:	2022 7277 7061 223d 6f73 7466 2022 6e6f     " wrap="soft" on
   186c0:	6170 7473 3d65 6c22 6d69 7469 6554 7478     paste="limitText
   186d0:	2928 223b 6f20 6b6e 7965 6f64 6e77 223d     ();" onkeydown="
   186e0:	696c 696d 5474 7865 2874 3b29 2022 6e6f     limitText();" on
   186f0:	656b 7579 3d70 6c22 6d69 7469 6554 7478     keyup="limitText
   18700:	2928 223b 3c3e 742f 7865 6174 6572 3e61     ();"></textarea>
   18710:	623c 2f72 0d3e 090a 0909 693c 706e 7475     <br/>.....<input
   18720:	7420 7079 3d65 6222 7475 6f74 226e 7620      type="button" v
   18730:	6c61 6575 223d 7553 6d62 7469 2022 6e6f     alue="Submit" on
   18740:	6c63 6369 3d6b 6622 656e 5074 736f 5274     click="fnetPostR
   18750:	7165 6575 7473 2928 223b 3e2f 0a0d 0909     equest();"/>....
   18760:	3c09 6f66 746e 7320 7a69 3d65 3122 3e22     .<font size="1">
   18770:	5920 756f 6820 7661 2065 733c 6170 206e      You have <span 
   18780:	6469 223d 6f63 6e75 6574 2272 353e 3c30     id="counter">50<
   18790:	732f 6170 3e6e 6320 6168 6172 7463 7265     /span> character
   187a0:	2073 656c 7466 3c2e 662f 6e6f 3e74 0a0d     s left.</font>..
   187b0:	0909 2f3c 6474 0d3e 090a 3c09 6474 0d3e     ..</td>....<td>.
   187c0:	200a 2020 2020 2020 0920 743c 7865 6174     .        .<texta
   187d0:	6572 2061 6469 223d 6976 7765 645f 7461     rea id="view_dat
   187e0:	2261 7220 776f 3d73 3322 2022 6f63 736c     a" rows="3" cols
   187f0:	223d 3532 2022 6572 6461 6e6f 796c 223d     ="25" readonly="
   18800:	6572 6461 6e6f 796c 2022 7277 7061 223d     readonly" wrap="
   18810:	6f73 7466 3e22 2f3c 6574 7478 7261 6165     soft"></textarea
   18820:	3c3e 7262 3e2f 0a0d 2020 2020 2020 2020     ><br/>..        
   18830:	2020 2020 693c 706e 7475 7420 7079 3d65         <input type=
   18840:	6222 7475 6f74 226e 7620 6c61 6575 223d     "button" value="
   18850:	6956 7765 2022 6e6f 6c63 6369 3d6b 6622     View" onclick="f
   18860:	656e 4774 7465 6552 7571 7365 2874 3b29     netGetRequest();
   18870:	2f22 0d3e 090a 3c09 742f 3e64 0a0d 3c09     "/>....</td>...<
   18880:	742f 3e72 0a0d 3c09 742f 6261 656c 0d3e     /tr>...</table>.
   18890:	200a 2020 3c20 7262 3e2f 0a0d 3c09 3e69     .    <br/>...<i>
   188a0:	4f4e 4554 203a 6854 7369 7020 6761 2065     NOTE: This page 
   188b0:	7573 6d62 7469 2073 6874 2065 6e69 7570     submits the inpu
   188c0:	2074 6164 6174 7420 206f 6874 2065 6573     t data to the se
   188d0:	7672 7265 7520 6973 676e 7420 6568 5020     rver using the P
   188e0:	534f 2054 656d 6874 646f 6f20 2066 5448     OST method of HT
   188f0:	5054 7020 6f72 6f74 6f63 2e6c 2f3c 3e69     TP protocol.</i>
   18900:	0a0d 2020 0920 733c 7263 7069 2074 7974     ..   .<script ty
   18910:	6570 223d 6574 7478 6a2f 7661 7361 7263     pe="text/javascr
   18920:	7069 2274 0d3e 200a 2020 2020 2020 6620     ipt">..        f
   18930:	656e 5074 6972 746e 6f46 746f 7265 2928     netPrintFooter()
   18940:	0d3b 090a 2f3c 6373 6972 7470 0d3e 3c0a     ;...</script>..<
   18950:	622f 646f 3e79 0a0d 2f3c 7468 6c6d 0d3e     /body>..</html>.
   18960:	000a 0000                                   ....

00018964 <node_9>:
   18964:	213c 4f44 5443 5059 2045 7468 6c6d 5020     <!DOCTYPE html P
   18974:	4255 494c 2043 2d22 2f2f 3357 2f43 442f     UBLIC "-//W3C//D
   18984:	4454 5820 5448 4c4d 3120 302e 5420 6172     TD XHTML 1.0 Tra
   18994:	736e 7469 6f69 616e 2f6c 452f 224e 2220     nsitional//EN" "
   189a4:	7468 7074 2f3a 772f 7777 772e 2e33 726f     http://www.w3.or
   189b4:	2f67 5254 782f 7468 6c6d 2f31 5444 2f44     g/TR/xhtml1/DTD/
   189c4:	6878 6d74 316c 742d 6172 736e 7469 6f69     xhtml1-transitio
   189d4:	616e 2e6c 7464 2264 0d3e 3c0a 7468 6c6d     nal.dtd">..<html
   189e4:	7820 6c6d 736e 223d 7468 7074 2f3a 772f      xmlns="http://w
   189f4:	7777 772e 2e33 726f 2f67 3931 3939 782f     ww.w3.org/1999/x
   18a04:	7468 6c6d 3e22 0a0d 683c 6165 3e64 0a0d     html">..<head>..
   18a14:	3c09 656d 6174 6820 7474 2d70 7165 6975     .<meta http-equi
   18a24:	3d76 4322 6e6f 6574 746e 542d 7079 2265     v="Content-Type"
   18a34:	6320 6e6f 6574 746e 223d 6574 7478 682f      content="text/h
   18a44:	6d74 3b6c 6320 6168 7372 7465 753d 6674     tml; charset=utf
   18a54:	382d 2022 3e2f 0d20 090a 6c3c 6e69 206b     -8" /> ...<link 
   18a64:	6572 3d6c 5322 7974 656c 6873 6565 2274     rel="Stylesheet"
   18a74:	6820 6572 3d66 6622 656e 2e74 7363 2273      href="fnet.css"
   18a84:	7420 7079 3d65 7422 7865 2f74 7363 2273      type="text/css"
   18a94:	6d20 6465 6169 223d 6373 6572 6e65 2f22      media="screen"/
   18aa4:	0d3e 090a 743c 7469 656c 463e 454e 2054     >...<title>FNET 
   18ab4:	6553 7474 6e69 7367 2f3c 6974 6c74 3e65     Settings</title>
   18ac4:	0a0d 3c09 6373 6972 7470 7420 7079 3d65     ...<script type=
   18ad4:	7422 7865 2f74 616a 6176 6373 6972 7470     "text/javascript
   18ae4:	2022 7273 3d63 6622 656e 2e74 736a 3e22     " src="fnet.js">
   18af4:	3c20 732f 7263 7069 3e74 0a0d 3c09 696c      </script>...<li
   18b04:	6b6e 7220 6c65 223d 6873 726f 6374 7475     nk rel="shortcut
   18b14:	6920 6f63 226e 6820 6572 3d66 6622 7661      icon" href="fav
   18b24:	6369 6e6f 692e 6f63 2f22 203e 2020 0d20     icon.ico"/>    .
   18b34:	3c0a 682f 6165 3e64 0a0d 623c 646f 3e79     .</head>..<body>
   18b44:	0a0d 3c09 6373 6972 7470 7420 7079 3d65     ...<script type=
   18b54:	7422 7865 2f74 616a 6176 6373 6972 7470     "text/javascript
   18b64:	3e22 0a0d 0909 6e66 7465 7250 6e69 4874     ">....fnetPrintH
   18b74:	6165 6564 2872 4622 454e 2054 6553 7474     eader("FNET Sett
   18b84:	6e69 7367 2922 0d3b 090a 2f3c 6373 6972     ings");...</scri
   18b94:	7470 0d3e 090a 743c 6261 656c 7720 6469     pt>...<table wid
   18ba4:	6874 223d 3034 2230 0d3e 090a 743c 3e72     th="400">...<tr>
   18bb4:	0a0d 0909 743c 2068 6977 7464 3d68 3122     ....<th width="1
   18bc4:	3030 3e22 6946 6d72 6177 6572 2f3c 6874     00">Firmware</th
   18bd4:	0d3e 090a 3c09 6874 3c3e 742f 3e68 0a0d     >....<th></th>..
   18be4:	3c09 742f 3e72 0a0d 3c09 7274 0d3e 090a     .</tr>...<tr>...
   18bf4:	3c09 6474 6320 616c 7373 223d 6e66 7465     .<td class="fnet
   18c04:	745f 5f64 7267 7965 3e22 7453 6361 206b     _td_grey">Stack 
   18c14:	616e 656d 2f3c 6474 0d3e 090a 3c09 6474     name</td>....<td
   18c24:	6120 696c 6e67 223d 6972 6867 2274 3c3e      align="right"><
   18c34:	7473 6f72 676e 3c3e 2d21 232d 6365 6f68     strong><!--#echo
   18c44:	4e20 4d41 2d45 3e2d 2f3c 7473 6f72 676e      NAME--></strong
   18c54:	3c3e 742f 3e64 0a0d 3c09 742f 3e72 0a0d     ></td>...</tr>..
   18c64:	3c09 7274 0d3e 090a 3c09 6474 6320 616c     .<tr>....<td cla
   18c74:	7373 223d 6e66 7465 745f 5f64 7267 7965     ss="fnet_td_grey
   18c84:	3e22 5043 3c55 742f 3e64 0a0d 0909 743c     ">CPU</td>....<t
   18c94:	2064 6c61 6769 3d6e 7222 6769 7468 3e22     d align="right">
   18ca4:	733c 7274 6e6f 3e67 213c 2d2d 6523 6863     <strong><!--#ech
   18cb4:	206f 5043 2d55 3e2d 2f3c 7473 6f72 676e     o CPU--></strong
   18cc4:	3c3e 742f 3e64 0a0d 3c09 742f 3e72 0a0d     ></td>...</tr>..
   18cd4:	3c09 7274 0d3e 090a 3c09 6474 6320 616c     .<tr>....<td cla
   18ce4:	7373 223d 6e66 7465 745f 5f64 7267 7965     ss="fnet_td_grey
   18cf4:	3e22 6556 7372 6f69 3c6e 742f 3e64 0a0d     ">Version</td>..
   18d04:	0909 743c 2064 6c61 6769 3d6e 7222 6769     ..<td align="rig
   18d14:	7468 3e22 213c 2d2d 6523 6863 206f 4556     ht"><!--#echo VE
   18d24:	5352 4f49 2d4e 3e2d 2f3c 6474 0d3e 090a     RSION--></td>...
   18d34:	2f3c 7274 0d3e 090a 743c 3e72 0a0d 0909     </tr>...<tr>....
   18d44:	743c 2064 6c63 7361 3d73 6622 656e 5f74     <td class="fnet_
   18d54:	6474 675f 6572 2279 423e 6975 646c 6420     td_grey">Build d
   18d64:	7461 3c65 742f 3e64 0a0d 0909 743c 2064     ate</td>....<td 
   18d74:	6c61 6769 3d6e 7222 6769 7468 3e22 213c     align="right"><!
   18d84:	2d2d 6523 6863 206f 4144 4554 2d2d 3c3e     --#echo DATE--><
   18d94:	742f 3e64 0a0d 3c09 742f 3e72 0a0d 3c09     /td>...</tr>...<
   18da4:	7274 0d3e 090a 3c09 6474 6320 616c 7373     tr>....<td class
   18db4:	223d 6e66 7465 745f 5f64 7267 7965 3e22     ="fnet_td_grey">
   18dc4:	6f43 7970 6972 6867 3c74 742f 3e64 0a0d     Copyright</td>..
   18dd4:	0909 743c 2064 6c61 6769 3d6e 7222 6769     ..<td align="rig
   18de4:	7468 3e22 213c 2d2d 6523 6863 206f 4f43     ht"><!--#echo CO
   18df4:	5950 4952 4847 2d54 3e2d 2f3c 6474 0d3e     PYRIGHT--></td>.
   18e04:	090a 2f3c 7274 0d3e 090a 743c 3e72 0a0d     ..</tr>...<tr>..
   18e14:	0909 743c 2064 6c63 7361 3d73 6622 656e     ..<td class="fne
   18e24:	5f74 6474 675f 6572 2279 4c3e 6369 6e65     t_td_grey">Licen
   18e34:	6573 2f3c 6474 0d3e 090a 3c09 6474 6120     se</td>....<td a
   18e44:	696c 6e67 223d 6972 6867 2274 3c3e 2d21     lign="right"><!-
   18e54:	232d 6365 6f68 4c20 4349 4e45 4553 2d2d     -#echo LICENSE--
   18e64:	3c3e 742f 3e64 0a0d 3c09 742f 3e72 0a0d     ></td>...</tr>..
   18e74:	3c09 742f 6261 656c 0d3e 090a 623c 2f72     .</table>...<br/
   18e84:	0d3e 090a 743c 6261 656c 7720 6469 6874     >...<table width
   18e94:	223d 3034 2230 0d3e 090a 743c 3e72 0a0d     ="400">...<tr>..
   18ea4:	0909 743c 2068 6977 7464 3d68 3122 3030     ..<th width="100
   18eb4:	3e22 5049 5320 7465 6974 676e 3c73 742f     ">IP Settings</t
   18ec4:	3e68 0a0d 0909 743c 3e68 2f3c 6874 0d3e     h>....<th></th>.
   18ed4:	090a 2f3c 7274 0d3e 090a 743c 3e72 0a0d     ..</tr>...<tr>..
   18ee4:	0909 743c 2064 6c63 7361 3d73 6622 656e     ..<td class="fne
   18ef4:	5f74 6474 675f 6572 2279 493e 2050 6441     t_td_grey">IP Ad
   18f04:	7264 7365 3c73 742f 3e64 0a0d 0909 743c     dress</td>....<t
   18f14:	2064 6c61 6769 3d6e 7222 6769 7468 3e22     d align="right">
   18f24:	733c 7274 6e6f 3e67 213c 2d2d 6523 6863     <strong><!--#ech
   18f34:	206f 5049 415f 4444 4552 5353 2d2d 3c3e     o IP_ADDRESS--><
   18f44:	732f 7274 6e6f 3e67 2f3c 6474 0d3e 090a     /strong></td>...
   18f54:	2f3c 7274 0d3e 090a 743c 3e72 0a0d 0909     </tr>...<tr>....
   18f64:	743c 2064 6c63 7361 3d73 6622 656e 5f74     <td class="fnet_
   18f74:	6474 675f 6572 2279 533e 6275 656e 2074     td_grey">Subnet 
   18f84:	614d 6b73 2f3c 6474 0d3e 090a 3c09 6474     Mask</td>....<td
   18f94:	6120 696c 6e67 223d 6972 6867 2274 3c3e      align="right"><
   18fa4:	2d21 232d 6365 6f68 5320 4255 454e 5f54     !--#echo SUBNET_
   18fb4:	414d 4b53 2d2d 3c3e 742f 3e64 0a0d 3c09     MASK--></td>...<
   18fc4:	742f 3e72 0a0d 3c09 7274 0d3e 090a 3c09     /tr>...<tr>....<
   18fd4:	6474 6320 616c 7373 223d 6e66 7465 745f     td class="fnet_t
   18fe4:	5f64 7267 7965 3e22 6147 6574 6177 2079     d_grey">Gateway 
   18ff4:	6441 7264 7365 3c73 742f 3e64 0a0d 0909     Address</td>....
   19004:	743c 2064 6c61 6769 3d6e 7222 6769 7468     <td align="right
   19014:	3e22 213c 2d2d 6523 6863 206f 4147 4554     "><!--#echo GATE
   19024:	4157 2d59 3e2d 2f3c 6474 0d3e 090a 2f3c     WAY--></td>...</
   19034:	7274 0d3e 090a 743c 3e72 0a0d 0909 743c     tr>...<tr>....<t
   19044:	2064 6c63 7361 3d73 6622 656e 5f74 6474     d class="fnet_td
   19054:	675f 6572 2279 4d3e 4341 4120 6464 6572     _grey">MAC Addre
   19064:	7373 2f3c 6474 0d3e 090a 3c09 6474 6120     ss</td>....<td a
   19074:	696c 6e67 223d 6972 6867 2274 3c3e 2d21     lign="right"><!-
   19084:	232d 6365 6f68 4d20 4341 2d2d 3c3e 742f     -#echo MAC--></t
   19094:	3e64 0a0d 3c09 742f 3e72 0a0d 3c09 742f     d>...</tr>...</t
   190a4:	6261 656c 0d3e 090a 623c 2f72 0d3e 090a     able>...<br/>...
   190b4:	623c 2f72 0d3e 090a 693c 4e3e 544f 3a45     <br/>...<i>NOTE:
   190c4:	5420 6968 2073 6170 6567 6920 2073 6567      This page is ge
   190d4:	656e 6172 6574 2064 7962 7420 6568 7320     nerated by the s
   190e4:	7265 6576 2072 7964 616e 696d 6163 6c6c     erver dynamicall
   190f4:	2079 6977 6874 6820 6c65 2070 666f 5320     y with help of S
   19104:	7265 6576 2072 6953 6564 4920 636e 756c     erver Side Inclu
   19114:	6564 2073 5328 4953 2e29 2f3c 3e69 0a0d     des (SSI).</i>..
   19124:	3c09 6373 6972 7470 7420 7079 3d65 7422     .<script type="t
   19134:	7865 2f74 616a 6176 6373 6972 7470 3e22     ext/javascript">
   19144:	0a0d 2020 2020 2020 2020 6e66 7465 7250     ..        fnetPr
   19154:	6e69 4674 6f6f 6574 2872 3b29 0a0d 3c09     intFooter();...<
   19164:	732f 7263 7069 3e74 0a0d 2f3c 6f62 7964     /script>..</body
   19174:	0d3e 3c0a 682f 6d74 3e6c 0909 0a0d 0000     >..</html>......

00019184 <node_10>:
   19184:	213c 4f44 5443 5059 2045 7468 6c6d 5020     <!DOCTYPE html P
   19194:	4255 494c 2043 2d22 2f2f 3357 2f43 442f     UBLIC "-//W3C//D
   191a4:	4454 5820 5448 4c4d 3120 302e 5420 6172     TD XHTML 1.0 Tra
   191b4:	736e 7469 6f69 616e 2f6c 452f 224e 2220     nsitional//EN" "
   191c4:	7468 7074 2f3a 772f 7777 772e 2e33 726f     http://www.w3.or
   191d4:	2f67 5254 782f 7468 6c6d 2f31 5444 2f44     g/TR/xhtml1/DTD/
   191e4:	6878 6d74 316c 742d 6172 736e 7469 6f69     xhtml1-transitio
   191f4:	616e 2e6c 7464 2264 0d3e 3c0a 7468 6c6d     nal.dtd">..<html
   19204:	7820 6c6d 736e 223d 7468 7074 2f3a 772f      xmlns="http://w
   19214:	7777 772e 2e33 726f 2f67 3931 3939 782f     ww.w3.org/1999/x
   19224:	7468 6c6d 3e22 0a0d 683c 6165 3e64 0a0d     html">..<head>..
   19234:	3c09 656d 6174 6820 7474 2d70 7165 6975     .<meta http-equi
   19244:	3d76 4322 6e6f 6574 746e 542d 7079 2265     v="Content-Type"
   19254:	6320 6e6f 6574 746e 223d 6574 7478 682f      content="text/h
   19264:	6d74 3b6c 6320 6168 7372 7465 753d 6674     tml; charset=utf
   19274:	382d 2022 3e2f 0d20 090a 6c3c 6e69 206b     -8" /> ...<link 
   19284:	6572 3d6c 5322 7974 656c 6873 6565 2274     rel="Stylesheet"
   19294:	6820 6572 3d66 6622 656e 2e74 7363 2273      href="fnet.css"
   192a4:	7420 7079 3d65 7422 7865 2f74 7363 2273      type="text/css"
   192b4:	6d20 6465 6169 223d 6373 6572 6e65 2f22      media="screen"/
   192c4:	0d3e 090a 743c 7469 656c 463e 454e 2054     >...<title>FNET 
   192d4:	7453 7461 7369 6974 7363 2f3c 6974 6c74     Statistics</titl
   192e4:	3e65 0a0d 3c09 6373 6972 7470 7420 7079     e>...<script typ
   192f4:	3d65 7422 7865 2f74 616a 6176 6373 6972     e="text/javascri
   19304:	7470 2022 7273 3d63 6622 656e 2e74 736a     pt" src="fnet.js
   19314:	3e22 3c20 732f 7263 7069 3e74 0a0d 3c09     "> </script>...<
   19324:	696c 6b6e 7220 6c65 223d 6873 726f 6374     link rel="shortc
   19334:	7475 6920 6f63 226e 6820 6572 3d66 6622     ut icon" href="f
   19344:	7661 6369 6e6f 692e 6f63 2f22 203e 2020     avicon.ico"/>   
   19354:	0d20 090a 733c 7263 7069 2074 7974 6570      ...<script type
   19364:	223d 6574 7478 6a2f 7661 7361 7263 7069     ="text/javascrip
   19374:	2274 0d3e 090a 7609 7261 6620 656e 4474     t">....var fnetD
   19384:	7461 5261 6365 6965 6576 2064 203d 3b30     ataReceived = 0;
   19394:	0a0d 0909 7566 636e 6974 6e6f 6620 656e     ....function fne
   193a4:	5274 7165 6575 7473 2928 0d7b 090a 0909     tRequest(){.....
   193b4:	6669 2820 6621 656e 4474 7461 5261 6365     if (!fnetDataRec
   193c4:	6965 6576 2964 0d7b 090a 2009 2020 2020     eived){....     
   193d4:	2020 7620 7261 7820 6c6d 5448 5054 3d20        var xmlHTTP =
   193e4:	6620 656e 5874 4c4d 7448 7074 6552 7571      fnetXMLHttpRequ
   193f4:	7365 2874 3b29 0a0d 0909 0909 6e66 7465     est();......fnet
   19404:	6144 6174 6552 6563 7669 6465 3d20 3120     DataReceived = 1
   19414:	0d3b 090a 0909 6909 2866 7820 6c6d 5448     ;......if( xmlHT
   19424:	5054 2120 203d 756e 6c6c 7b29 0a0d 0909     TP != null){....
   19434:	0909 7809 6c6d 5448 5054 6f2e 726e 6165     ...xmlHTTP.onrea
   19444:	7964 7473 7461 6365 6168 676e 2065 203d     dystatechange = 
   19454:	7566 636e 6974 6e6f 2928 0d7b 090a 0909     function(){.....
   19464:	2009 0920 6909 2066 7828 6c6d 5448 5054     .  ..if (xmlHTTP
   19474:	722e 6165 7964 7453 7461 2065 3d3d 3420     .readyState == 4
   19484:	7b29 0a0d 0909 0909 0909 6909 2066 7828     ){.........if (x
   19494:	6c6d 5448 5054 732e 6174 7574 2073 3d3d     mlHTTP.status ==
   194a4:	3220 3030 0d29 090a 0909 0909 0909 0909      200)...........
   194b4:	6e66 7465 6148 646e 656c 2872 6d78 486c     fnetHandler(xmlH
   194c4:	5454 2e50 6572 7073 6e6f 6573 6554 7478     TTP.responseText
   194d4:	3b29 0a0d 0909 0909 2020 0909 6609 656e     );......  ...fne
   194e4:	4474 7461 5261 6365 6965 6576 2064 203d     tDataReceived = 
   194f4:	3b30 0a0d 0909 2009 0920 0909 0d7d 090a     0;.....  ...}...
   19504:	0909 0909 3b7d 0a0d 0909 0909 7809 6c6d     ....};.......xml
   19514:	5448 5054 6f2e 6570 286e 4722 5445 2c22     HTTP.open("GET",
   19524:	2220 7473 6164 6174 632e 6967 2c22 7420      "stdata.cgi", t
   19534:	7572 2965 0d3b 090a 0909 0909 6d78 486c     rue);.......xmlH
   19544:	5454 2e50 6573 5274 7165 6575 7473 6548     TTP.setRequestHe
   19554:	6461 7265 2228 6649 4d2d 646f 6669 6569     ader("If-Modifie
   19564:	2d64 6953 636e 2265 202c 6f64 7563 656d     d-Since", docume
   19574:	746e 6c2e 7361 4d74 646f 6669 6569 2964     nt.lastModified)
   19584:	0d3b 090a 0909 0909 6d78 486c 5454 2e50     ;.......xmlHTTP.
   19594:	6573 646e 6e28 6c75 296c 0d3b 090a 0909     send(null);.....
   195a4:	7d09 0a0d 0909 7d09 0a0d 0909 0d7d 090a     .}.....}....}...
   195b4:	6609 6e75 7463 6f69 206e 6e66 7465 6148     .function fnetHa
   195c4:	646e 656c 2872 6164 6174 7b29 0a0d 0909     ndler(data){....
   195d4:	7609 7261 7320 6174 6974 7473 6369 2073     .var statistics 
   195e4:	203d 7665 6c61 6428 7461 2961 0d3b 090a     = eval(data);...
   195f4:	0909 6f64 7563 656d 746e 672e 7465 6c45     ..document.getEl
   19604:	6d65 6e65 4274 4979 2864 7222 6374 2922     ementById("rtc")
   19614:	692e 6e6e 7265 5448 4c4d 3d20 7320 6174     .innerHTML = sta
   19624:	6974 7473 6369 2e73 6974 656d 0d3b 090a     tistics.time;...
   19634:	0909 6f64 7563 656d 746e 672e 7465 6c45     ..document.getEl
   19644:	6d65 6e65 4274 4979 2864 7422 2278 2e29     ementById("tx").
   19654:	6e69 656e 4872 4d54 204c 203d 7473 7461     innerHTML = stat
   19664:	7369 6974 7363 742e 3b78 0a0d 0909 6409     istics.tx;.....d
   19674:	636f 6d75 6e65 2e74 6567 4574 656c 656d     ocument.getEleme
   19684:	746e 7942 6449 2228 7872 2922 692e 6e6e     ntById("rx").inn
   19694:	7265 5448 4c4d 3d20 7320 6174 6974 7473     erHTML = statist
   196a4:	6369 2e73 7872 0d3b 090a 7d09 0a0d 2009     ics.rx;....}... 
   196b4:	2020 7720 6e69 6f64 2e77 6573 4974 746e        window.setInt
   196c4:	7265 6176 286c 6622 656e 5274 7165 6575     erval("fnetReque
   196d4:	7473 2928 2c22 3120 3030 2930 0d3b 090a     st()", 1000);...
   196e4:	2f3c 6373 6972 7470 0d3e 3c0a 682f 6165     </script>..</hea
   196f4:	3e64 0a0d 623c 646f 3e79 0a0d 3c09 6373     d>..<body>...<sc
   19704:	6972 7470 7420 7079 3d65 7422 7865 2f74     ript type="text/
   19714:	616a 6176 6373 6972 7470 3e22 0a0d 0909     javascript">....
   19724:	6e66 7465 7250 6e69 4874 6165 6564 2872     fnetPrintHeader(
   19734:	4622 454e 2054 7453 7461 7369 6974 7363     "FNET Statistics
   19744:	2922 0d3b 090a 2f3c 6373 6972 7470 0d3e     ");...</script>.
   19754:	090a 743c 6261 656c 7720 6469 6874 3d20     ..<table width =
   19764:	2220 3032 2230 0d3e 090a 743c 3e72 0a0d      "200">...<tr>..
   19774:	0909 743c 3e68 6150 6172 656d 6574 3c72     ..<th>Parameter<
   19784:	742f 3e68 0a0d 0909 743c 3e68 6156 756c     /th>....<th>Valu
   19794:	3c65 742f 3e68 0a0d 3c09 742f 3e72 0a0d     e</th>...</tr>..
   197a4:	3c09 7274 0d3e 090a 3c09 6474 6320 616c     .<tr>....<td cla
   197b4:	7373 223d 6e66 7465 745f 5f64 7267 7965     ss="fnet_td_grey
   197c4:	3e22 6f57 6b72 7420 6d69 3c65 742f 3e64     ">Work time</td>
   197d4:	0a0d 0909 743c 2064 6c61 6769 3d6e 7222     ....<td align="r
   197e4:	6769 7468 3e22 683c 3e31 643c 7669 6920     ight"><h1><div i
   197f4:	3d64 7222 6374 3e22 3c30 642f 7669 3c3e     d="rtc">0</div><
   19804:	682f 3e31 2f3c 6474 0d3e 090a 2f3c 7274     /h1></td>...</tr
   19814:	0d3e 090a 743c 3e72 0a0d 0909 743c 2064     >...<tr>....<td 
   19824:	6c63 7361 3d73 6622 656e 5f74 6474 675f     class="fnet_td_g
   19834:	6572 2279 543e 2078 6170 6b63 7465 6320     rey">Tx packet c
   19844:	756f 746e 2f3c 6474 0d3e 090a 3c09 6474     ount</td>....<td
   19854:	6120 696c 6e67 223d 6972 6867 2274 3c3e      align="right"><
   19864:	3168 3c3e 6964 2076 6469 223d 7874 3e22     h1><div id="tx">
   19874:	3c30 642f 7669 3c3e 682f 3e31 2f3c 6474     0</div></h1></td
   19884:	0d3e 090a 2f3c 7274 0d3e 090a 743c 3e72     >...</tr>...<tr>
   19894:	0a0d 0909 743c 2064 6c63 7361 3d73 6622     ....<td class="f
   198a4:	656e 5f74 6474 675f 6572 2279 523e 2078     net_td_grey">Rx 
   198b4:	6170 6b63 7465 6320 756f 746e 2f3c 6474     packet count</td
   198c4:	0d3e 090a 3c09 6474 6120 696c 6e67 223d     >....<td align="
   198d4:	6972 6867 2274 3c3e 3168 3c3e 6964 2076     right"><h1><div 
   198e4:	6469 223d 7872 3e22 3c30 642f 7669 3c3e     id="rx">0</div><
   198f4:	682f 3e31 2f3c 6474 0d3e 090a 2f3c 7274     /h1></td>...</tr
   19904:	0d3e 090a 2f3c 6174 6c62 3e65 0a0d 3c09     >...</table>...<
   19914:	7262 3e2f 0a0d 3c09 7262 3e2f 0a0d 3c09     br/>...<br/>...<
   19924:	3e69 4f4e 4554 203a 6854 7369 7020 6761     i>NOTE: This pag
   19934:	2065 6567 7374 7420 6568 6420 7461 2061     e gets the data 
   19944:	7266 6d6f 7420 6568 7320 7265 6576 2072     from the server 
   19954:	6570 6972 646f 6369 6c61 796c 7720 7469     periodically wit
   19964:	2068 6568 706c 6f20 2066 4a41 5841 202e     h help of AJAX. 
   19974:	7449 80e2 7399 7520 6573 2064 614a 6176     It...s used Java
   19984:	6353 6972 7470 202c 4743 2049 6e61 2064     Script, CGI and 
   19994:	534a 4e4f 6420 7461 2061 6f66 6d72 7461     JSON data format
   199a4:	3c2e 692f 0d3e 090a 733c 7263 7069 2074     .</i>...<script 
   199b4:	7974 6570 223d 6574 7478 6a2f 7661 7361     type="text/javas
   199c4:	7263 7069 2274 0d3e 200a 2020 2020 2020     cript">..       
   199d4:	6620 656e 5074 6972 746e 6f46 746f 7265      fnetPrintFooter
   199e4:	2928 0d3b 090a 2f3c 6373 6972 7470 0d3e     ();...</script>.
   199f4:	3c0a 622f 646f 3e79 0a0d 2f3c 7468 6c6d     .</body>..</html
   19a04:	093e 0d09 000a 0000                         >.......

00019a0c <node_11>:
   19a0c:	213c 4f44 5443 5059 2045 7468 6c6d 5020     <!DOCTYPE html P
   19a1c:	4255 494c 2043 2d22 2f2f 3357 2f43 442f     UBLIC "-//W3C//D
   19a2c:	4454 5820 5448 4c4d 3120 302e 5420 6172     TD XHTML 1.0 Tra
   19a3c:	736e 7469 6f69 616e 2f6c 452f 224e 2220     nsitional//EN" "
   19a4c:	7468 7074 2f3a 772f 7777 772e 2e33 726f     http://www.w3.or
   19a5c:	2f67 5254 782f 7468 6c6d 2f31 5444 2f44     g/TR/xhtml1/DTD/
   19a6c:	6878 6d74 316c 742d 6172 736e 7469 6f69     xhtml1-transitio
   19a7c:	616e 2e6c 7464 2264 0d3e 3c0a 7468 6c6d     nal.dtd">..<html
   19a8c:	7820 6c6d 736e 223d 7468 7074 2f3a 772f      xmlns="http://w
   19a9c:	7777 772e 2e33 726f 2f67 3931 3939 782f     ww.w3.org/1999/x
   19aac:	7468 6c6d 3e22 0a0d 683c 6165 3e64 0a0d     html">..<head>..
   19abc:	3c09 656d 6174 6820 7474 2d70 7165 6975     .<meta http-equi
   19acc:	3d76 4322 6e6f 6574 746e 542d 7079 2265     v="Content-Type"
   19adc:	6320 6e6f 6574 746e 223d 6574 7478 682f      content="text/h
   19aec:	6d74 3b6c 6320 6168 7372 7465 753d 6674     tml; charset=utf
   19afc:	382d 2022 3e2f 0a0d 3c09 6974 6c74 3e65     -8" />...<title>
   19b0c:	4e46 5445 5320 7075 6f70 7472 2f3c 6974     FNET Support</ti
   19b1c:	6c74 3e65 0a0d 3c09 696c 6b6e 7220 6c65     tle>...<link rel
   19b2c:	223d 6873 726f 6374 7475 6920 6f63 226e     ="shortcut icon"
   19b3c:	6820 6572 3d66 6622 7661 6369 6e6f 692e      href="favicon.i
   19b4c:	6f63 2f22 0d3e 090a 6c3c 6e69 206b 6572     co"/>...<link re
   19b5c:	3d6c 5322 7974 656c 6873 6565 2274 6820     l="Stylesheet" h
   19b6c:	6572 3d66 6622 656e 2e74 7363 2273 7420     ref="fnet.css" t
   19b7c:	7079 3d65 7422 7865 2f74 7363 2273 6d20     ype="text/css" m
   19b8c:	6465 6169 223d 6373 6572 6e65 2f22 0d3e     edia="screen"/>.
   19b9c:	090a 733c 7263 7069 2074 7273 3d63 6622     ..<script src="f
   19bac:	656e 2e74 736a 2022 7974 6570 223d 6574     net.js" type="te
   19bbc:	7478 6a2f 7661 7361 7263 7069 2274 3c3e     xt/javascript"><
   19bcc:	732f 7263 7069 3e74 0a0d 2f3c 6568 6461     /script>..</head
   19bdc:	0d3e 3c0a 6f62 7964 0d3e 090a 733c 7263     >..<body>...<scr
   19bec:	7069 2074 7974 6570 223d 6574 7478 6a2f     ipt type="text/j
   19bfc:	7661 7361 7263 7069 2274 0d3e 090a 6609     avascript">....f
   19c0c:	656e 5074 6972 746e 6548 6461 7265 2228     netPrintHeader("
   19c1c:	7553 7070 726f 2274 3b29 0a0d 3c09 732f     Support");...</s
   19c2c:	7263 7069 3e74 0a0d 3c09 6c75 0d3e 090a     cript>...<ul>...
   19c3c:	6c3c 3e69 613c 6820 6572 3d66 6822 7474     <li><a href="htt
   19c4c:	3a70 2f2f 6e66 7465 732e 756f 6372 6665     p://fnet.sourcef
   19c5c:	726f 6567 6e2e 7465 3e22 4e46 5445 4820     orge.net">FNET H
   19c6c:	6d6f 7065 6761 3c65 612f 3c3e 6c2f 3e69     omepage</a></li>
   19c7c:	0a0d 3c09 696c 3c3e 2061 7268 6665 223d     ...<li><a href="
   19c8c:	7468 7074 2f3a 732f 756f 6372 6665 726f     http://sourcefor
   19c9c:	6567 6e2e 7465 702f 6f72 656a 7463 2f73     ge.net/projects/
   19cac:	6e66 7465 3e22 4e46 5445 5320 2046 7250     fnet">FNET SF Pr
   19cbc:	6a6f 6365 2d74 6170 6567 2f3c 3e61 2f3c     oject-page</a></
   19ccc:	696c 0d3e 090a 6c3c 3e69 613c 6820 6572     li>...<li><a hre
   19cdc:	3d66 6822 7474 3a70 2f2f 6f73 7275 6563     f="http://source
   19cec:	6f66 6772 2e65 656e 2f74 7270 6a6f 6365     forge.net/projec
   19cfc:	7374 662f 656e 2f74 6f66 7572 736d 662f     ts/fnet/forums/f
   19d0c:	726f 6d75 392f 3032 3433 2236 463e 454e     orum/920346">FNE
   19d1c:	2054 704f 6e65 4620 726f 6d75 2f3c 3e61     T Open Forum</a>
   19d2c:	2f3c 696c 0d3e 090a 6c3c 3e69 613c 6820     </li>...<li><a h
   19d3c:	6572 3d66 6822 7474 7370 2f3a 732f 756f     ref="https://sou
   19d4c:	6372 6665 726f 6567 6e2e 7465 742f 6172     rceforge.net/tra
   19d5c:	6b63 7265 3f2f 7267 756f 5f70 6469 323d     cker/?group_id=2
   19d6c:	3335 3938 2632 7461 6469 313d 3231 3936     53892&atid=11269
   19d7c:	3032 3e22 4e46 5445 4220 6775 5220 7065     20">FNET Bug Rep
   19d8c:	726f 7374 2f3c 3e61 2f3c 696c 0d3e 200a     orts</a></li>.. 
   19d9c:	2020 3c20 696c 3c3e 2061 7268 6665 223d        <li><a href="
   19dac:	7468 7074 3a73 2f2f 6f73 7275 6563 6f66     https://sourcefo
   19dbc:	6772 2e65 656e 2f74 7274 6361 656b 2f72     rge.net/tracker/
   19dcc:	673f 6f72 7075 695f 3d64 3532 3833 3239     ?group_id=253892
   19ddc:	6126 6974 3d64 3131 3632 3239 2231 463e     &atid=1126921">F
   19dec:	454e 2054 6546 7461 7275 2065 6552 7571     NET Feature Requ
   19dfc:	7365 7374 2f3c 3e61 2f3c 696c 0d3e 090a     ests</a></li>...
   19e0c:	2f3c 6c75 0d3e 090a 733c 7263 7069 2074     </ul>...<script 
   19e1c:	7974 6570 223d 6574 7478 6a2f 7661 7361     type="text/javas
   19e2c:	7263 7069 2274 0d3e 090a 6609 656e 5074     cript">....fnetP
   19e3c:	6972 746e 6f46 746f 7265 2928 203b 2a2f     rintFooter(); /*
   19e4c:	4620 6f6f 6574 2072 2f2a 0a0d 3c09 732f      Footer */...</s
   19e5c:	7263 7069 3e74 0a0d 2f3c 6f62 7964 0d3e     cript>..</body>.
   19e6c:	3c0a 682f 6d74 3e6c 0a0d 0000               .</html>....

00019e78 <node_12>:
   19e78:	213c 4f44 5443 5059 2045 7468 6c6d 5020     <!DOCTYPE html P
   19e88:	4255 494c 2043 2d22 2f2f 3357 2f43 442f     UBLIC "-//W3C//D
   19e98:	4454 5820 5448 4c4d 3120 302e 5420 6172     TD XHTML 1.0 Tra
   19ea8:	736e 7469 6f69 616e 2f6c 452f 224e 2220     nsitional//EN" "
   19eb8:	7468 7074 2f3a 772f 7777 772e 2e33 726f     http://www.w3.or
   19ec8:	2f67 5254 782f 7468 6c6d 2f31 5444 2f44     g/TR/xhtml1/DTD/
   19ed8:	6878 6d74 316c 742d 6172 736e 7469 6f69     xhtml1-transitio
   19ee8:	616e 2e6c 7464 2264 0d3e 3c0a 7468 6c6d     nal.dtd">..<html
   19ef8:	7820 6c6d 736e 223d 7468 7074 2f3a 772f      xmlns="http://w
   19f08:	7777 772e 2e33 726f 2f67 3931 3939 782f     ww.w3.org/1999/x
   19f18:	7468 6c6d 3e22 0a0d 683c 6165 3e64 0a0d     html">..<head>..
   19f28:	3c09 656d 6174 6820 7474 2d70 7165 6975     .<meta http-equi
   19f38:	3d76 4322 6e6f 6574 746e 542d 7079 2265     v="Content-Type"
   19f48:	6320 6e6f 6574 746e 223d 6574 7478 682f      content="text/h
   19f58:	6d74 3b6c 6320 6168 7372 7465 753d 6674     tml; charset=utf
   19f68:	382d 2022 3e2f 0a0d 3c09 6974 6c74 3e65     -8" />...<title>
   19f78:	4e46 5445 4f20 6576 7672 6569 3c77 742f     FNET Overview</t
   19f88:	7469 656c 0d3e 090a 6c3c 6e69 206b 6572     itle>...<link re
   19f98:	3d6c 7322 6f68 7472 7563 2074 6369 6e6f     l="shortcut icon
   19fa8:	2022 7268 6665 223d 6166 6976 6f63 2e6e     " href="favicon.
   19fb8:	6369 226f 3e2f 0a0d 3c09 696c 6b6e 7220     ico"/>...<link r
   19fc8:	6c65 223d 7453 6c79 7365 6568 7465 2022     el="Stylesheet" 
   19fd8:	7268 6665 223d 6e66 7465 632e 7373 2022     href="fnet.css" 
   19fe8:	7974 6570 223d 6574 7478 632f 7373 2022     type="text/css" 
   19ff8:	656d 6964 3d61 7322 7263 6565 226e 3e2f     media="screen"/>
   1a008:	0a0d 3c09 6373 6972 7470 7320 6372 223d     ...<script src="
   1a018:	6e66 7465 6a2e 2273 7420 7079 3d65 7422     fnet.js" type="t
   1a028:	7865 2f74 616a 6176 6373 6972 7470 3e22     ext/javascript">
   1a038:	2f3c 6373 6972 7470 0d3e 3c0a 682f 6165     </script>..</hea
   1a048:	3e64 0a0d 623c 646f 3e79 0a0d 3c09 6373     d>..<body>...<sc
   1a058:	6972 7470 7420 7079 3d65 7422 7865 2f74     ript type="text/
   1a068:	616a 6176 6373 6972 7470 3e22 0a0d 0909     javascript">....
   1a078:	6e66 7465 7250 6e69 4874 6165 6564 2872     fnetPrintHeader(
   1a088:	4622 454e 2054 764f 7265 6976 7765 2922     "FNET Overview")
   1a098:	0d3b 090a 2f3c 6373 6972 7470 0d3e 200a     ;...</script>.. 
   1a0a8:	5409 6568 4620 454e 2054 7369 4420 6175     .The FNET is Dua
   1a0b8:	206c 4354 2f50 5049 3476 492f 7650 2036     l TCP/IPv4/IPv6 
   1a0c8:	7473 6361 206b 7528 646e 7265 4720 554e     stack (under GNU
   1a0d8:	4c20 5047 764c 2033 696c 6563 736e 2965      LGPLv3 license)
   1a0e8:	6620 726f 6220 6975 646c 6e69 0d67 090a      for building...
   1a0f8:	6d65 6562 6464 6465 6320 6d6f 756d 696e     embedded communi
   1a108:	6163 6974 6e6f 7320 666f 7774 7261 2065     cation software 
   1a118:	6e6f 3320 6232 7469 4d20 5543 2e73 0a0d     on 32bit MCUs...
   1a128:	2020 2020 623c 2072 3e2f 3c20 7262 2f20         <br /> <br /
   1a138:	0d3e 090a 733c 7274 6e6f 3e67 6854 2065     >...<strong>The 
   1a148:	7473 6361 206b 7270 766f 6469 7365 6620     stack provides f
   1a158:	6c6f 6f6c 6977 676e 7020 6f72 6f74 6f63     ollowing protoco
   1a168:	736c 6120 646e 7320 7265 6976 6563 3a73     ls and services:
   1a178:	2f3c 7473 6f72 676e 0d3e 090a 753c 3e6c     </strong>...<ul>
   1a188:	0a0d 0909 6c3c 3e69 7553 7070 726f 6574     ....<li>Supporte
   1a198:	2064 6c50 7461 6f66 6d72 3a73 0a0d 0909     d Platforms:....
   1a1a8:	753c 3e6c 0a0d 0909 3c09 696c 413e 4d52     <ul>.....<li>ARM
   1a1b8:	4320 726f 6574 2d78 344d 202c 694b 656e      Cortex-M4, Kine
   1a1c8:	6974 3a73 2f3c 696c 0d3e 090a 0909 753c     tis:</li>.....<u
   1a1d8:	3e6c 0a0d 0909 0909 6c3c 3e69 4d20 364b     l>......<li> MK6
   1a1e8:	4e30 3135 2032 5428 5257 4b2d 3036 354e     0N512 (TWR-K60N5
   1a1f8:	3231 2e29 2f3c 696c 0d3e 090a 0909 3c09     12).</li>......<
   1a208:	696c 203e 4b4d 3037 4e46 4d31 2820 5754     li> MK70FN1M (TW
   1a218:	2d52 374b 4630 3231 4d30 2e29 2f3c 696c     R-K70F120M).</li
   1a228:	0d3e 090a 0909 2f3c 6c75 0d3e 200a 2020     >.....</ul>..   
   1a238:	2020 2020 2020 2020 3c20 696c 433e 6c6f              <li>Col
   1a248:	4664 7269 3a65 2f3c 696c 0d3e 090a 0909     dFire:</li>.....
   1a258:	753c 3e6c 0a0d 2020 2020 2020 2020 2020     <ul>..          
   1a268:	2020 2020 2020 6c3c 3e69 6f4d 6564 6f6c           <li>Modelo
   1a278:	2d20 4d20 4643 3435 3134 2038 5428 5257      - MCF54418 (TWR
   1a288:	4d2d 4643 3435 3134 2978 3c2e 6c2f 3e69     -MCF5441x).</li>
   1a298:	0a0d 0909 0909 6c3c 3e69 6552 6e69 6564     ......<li>Reinde
   1a2a8:	7265 2d20 4d20 4643 3235 3238 2820 354d     er - MCF5282 (M5
   1a2b8:	3832 4532 4256 2e29 2f3c 696c 0d3e 090a     282EVB).</li>...
   1a2c8:	0909 3c09 696c 4b3e 7269 6e69 2032 202d     ...<li>Kirin2 - 
   1a2d8:	434d 3546 3232 3533 2820 354d 3232 3533     MCF52235 (M52235
   1a2e8:	5645 2942 3c2e 6c2f 3e69 0a0d 0909 0909     EVB).</li>......
   1a2f8:	6c3c 3e69 694b 6972 336e 2d20 4d20 4643     <li>Kirin3 - MCF
   1a308:	3235 3532 2039 4d28 3235 3532 4539 4256     52259 (M52259EVB
   1a318:	202c 354d 3232 3935 4544 4f4d 202c 5754     , M52259DEMO, TW
   1a328:	2d52 434d 3546 3232 3935 2e29 2f3c 696c     R-MCF52259).</li
   1a338:	0d3e 090a 0909 3c09 696c 4c3e 7361 6f6b     >......<li>Lasko
   1a348:	2d20 4d20 4643 3135 4e43 3231 2038 5428      - MCF51CN128 (T
   1a358:	5257 4d2d 4643 3135 4e43 2e29 2f3c 696c     WR-MCF51CN).</li
   1a368:	0d3e 090a 0909 2f3c 6c75 0d3e 200a 2020     >.....</ul>..   
   1a378:	2020 2020 2020 2020 3c20 696c 513e 726f              <li>Qor
   1a388:	7669 6176 5020 776f 7265 4120 6372 6968     ivva Power Archi
   1a398:	6574 7463 7275 3a65 2f3c 696c 0d3e 090a     tecture:</li>...
   1a3a8:	0909 753c 3e6c 0a0d 0909 0909 6c3c 3e69     ..<ul>......<li>
   1a3b8:	6146 6f64 2d20 4d20 4350 3635 3836 2047     Fado - MPC5668G 
   1a3c8:	4d28 4350 3635 3836 4b47 5449 2e29 2f3c     (MPC5668GKIT).</
   1a3d8:	696c 0d3e 090a 0909 2f3c 6c75 0d3e 090a     li>.....</ul>...
   1a3e8:	3c09 752f 3e6c 0a0d 0909 2f3c 696c 0d3e     .</ul>....</li>.
   1a3f8:	090a 3c09 696c 533e 7075 6f70 7472 6465     ...<li>Supported
   1a408:	4320 6d6f 6970 656c 7372 0d3a 090a 3c09      Compilers:....<
   1a418:	6c75 0d3e 090a 0909 6c3c 3e69 5241 3a4d     ul>.....<li>ARM:
   1a428:	2f3c 696c 0d3e 090a 0909 753c 3e6c 0a0d     </li>.....<ul>..
   1a438:	0909 0909 6c3c 3e69 654b 6c69 7520 6956     ....<li>Keil uVi
   1a448:	6973 6e6f 2076 3476 372e 2820 4b4d 3036     sionv v4.7 (MK60
   1a458:	354e 3231 2e29 2f3c 696c 0d3e 090a 0909     N512).</li>.....
   1a468:	2f3c 6c75 0d3e 090a 0909 6c3c 3e69 4149     </ul>.....<li>IA
   1a478:	3a52 2f3c 696c 0d3e 090a 0909 753c 3e6c     R:</li>.....<ul>
   1a488:	0a0d 0909 0909 6c3c 3e69 6d45 6562 6464     ......<li>Embedd
   1a498:	6465 5720 726f 626b 6e65 6863 6620 726f     ed Workbench for
   1a4a8:	4120 4d52 7620 2e36 2035 4d28 364b 4e30      ARM v6.5 (MK60N
   1a4b8:	3135 2932 3c2e 6c2f 3e69 0a0d 0909 3c09     512).</li>.....<
   1a4c8:	752f 3e6c 0a0d 0909 3c09 696c 463e 6572     /ul>.....<li>Fre
   1a4d8:	7365 6163 656c 3c3a 6c2f 3e69 0a0d 0909     escale:</li>....
   1a4e8:	3c09 6c75 0d3e 200a 2020 2020 2020 2020     .<ul>..         
   1a4f8:	2020 2020 2020 3c20 696c 433e 646f 5765            <li>CodeW
   1a508:	7261 6972 726f 4420 7665 6c65 706f 656d     arrior Developme
   1a518:	746e 5320 7574 6964 206f 6f66 2072 694d     nt Studio for Mi
   1a528:	7263 636f 6e6f 7274 6c6f 656c 7372 7620     crocontrollers v
   1a538:	3031 342e 2820 4b4d 3036 354e 3231 202c     10.4 (MK60N512, 
   1a548:	4b4d 3037 4e46 4d31 202c 434d 3546 3232     MK70FN1M, MCF522
   1a558:	3935 2e29 2f3c 696c 0d3e 090a 0909 3c09     59).</li>......<
   1a568:	696c 433e 646f 5765 7261 6972 726f 6620     li>CodeWarrior f
   1a578:	726f 4320 6c6f 4664 7269 2065 3776 322e     or ColdFire v7.2
   1a588:	322e 2820 434d 3546 3832 2c32 4d20 4643     .2 (MCF5282, MCF
   1a598:	3235 3332 2c35 4d20 4643 3235 3532 2939     52235, MCF52259)
   1a5a8:	3c2e 6c2f 3e69 0a0d 2020 2020 2020 2020     .</li>..        
   1a5b8:	2020 2020 2020 2020 6c3c 3e69 6f43 6564             <li>Code
   1a5c8:	6157 7272 6f69 2072 6f66 2072 694d 7263     Warrior for Micr
   1a5d8:	636f 6e6f 7274 6c6f 656c 7372 7620 2e36     ocontrollers v6.
   1a5e8:	2033 4d28 4643 3135 4e43 3231 2938 3c2e     3 (MCF51CN128).<
   1a5f8:	6c2f 3e69 0a0d 2020 2020 2020 2020 2020     /li>..          
   1a608:	2020 2020 2020 6c3c 3e69 6f43 6564 6157           <li>CodeWa
   1a618:	7272 6f69 2072 6544 6576 6f6c 6d70 6e65     rrior Developmen
   1a628:	2074 7453 6475 6f69 6620 726f 4d20 4350     t Studio for MPC
   1a638:	3535 7878 4d2f 4350 3635 7878 7620 2e32     55xx/MPC56xx v2.
   1a648:	3031 2820 504d 3543 3636 4738 2e29 2f3c     10 (MPC5668G).</
   1a658:	696c 0d3e 090a 0909 2f3c 6c75 0d3e 090a     li>.....</ul>...
   1a668:	3c09 752f 3e6c 0a0d 0909 2f3c 696c 0d3e     .</ul>....</li>.
   1a678:	090a 3c09 696c 423e 7261 2d65 656d 6174     ...<li>Bare-meta
   1a688:	206c 4354 2f50 5049 7320 6174 6b63 3c2e     l TCP/IP stack.<
   1a698:	6c2f 3e69 0a0d 0909 6c3c 3e69 6f4e 2d6e     /li>....<li>Non-
   1a6a8:	6c62 636f 696b 676e 5320 636f 656b 2074     blocking Socket 
   1a6b8:	616c 6579 2072 5041 2049 5328 5254 4145     layer API (STREA
   1a6c8:	2c4d 4420 5247 4d41 202c 4152 2957 3c2e     M, DGRAM, RAW).<
   1a6d8:	6c2f 3e69 0a0d 0909 6c3c 3e69 6f43 6572     /li>....<li>Core
   1a6e8:	5020 6f72 6f74 6f63 736c 0d3a 090a 3c09      Protocols:....<
   1a6f8:	6c75 0d3e 200a 2020 2020 2020 2020 2020     ul>..           
   1a708:	3c20 696c 543e 5043 3c2e 6c2f 3e69 0a0d      <li>TCP.</li>..
   1a718:	0909 3c09 696c 553e 5044 3c2e 6c2f 3e69     ...<li>UDP.</li>
   1a728:	0a0d 0909 3c09 696c 493e 7650 2c34 4920     .....<li>IPv4, I
   1a738:	4d43 7650 2c34 4920 4d47 2c50 4120 5052     CMPv4, IGMP, ARP
   1a748:	3c2e 6c2f 3e69 0a0d 0909 3c09 696c 493e     .</li>.....<li>I
   1a758:	7650 2c36 4920 4d43 7650 2c36 4e20 2e44     Pv6, ICMPv6, ND.
   1a768:	2f3c 696c 0d3e 090a 3c09 752f 3e6c 0a0d     </li>....</ul>..
   1a778:	0909 2f3c 696c 0d3e 090a 3c09 696c 4e3e     ..</li>....<li>N
   1a788:	7465 6f77 6b72 4920 746e 7265 6166 6563     etwork Interface
   1a798:	3a73 0a0d 0909 753c 3e6c 0a0d 0909 3c09     s:....<ul>.....<
   1a7a8:	696c 453e 6874 7265 656e 2e74 2f3c 696c     li>Ethernet.</li
   1a7b8:	0d3e 090a 0909 6c3c 3e69 6f4c 706f 6162     >.....<li>Loopba
   1a7c8:	6b63 3c2e 6c2f 3e69 0a0d 0909 2f3c 6c75     ck.</li>....</ul
   1a7d8:	0d3e 090a 3c09 6c2f 3e69 0a0d 0909 6c3c     >....</li>....<l
   1a7e8:	3e69 6553 7672 6369 7365 0d3a 090a 3c09     i>Services:....<
   1a7f8:	6c75 0d3e 200a 2020 2020 2020 2020 2020     ul>..           
   1a808:	3c20 696c 483e 5454 2050 2e31 2f30 2e30      <li>HTTP 1.0/0.
   1a818:	2039 6553 7672 7265 0d3a 090a 0909 753c     9 Server:.....<u
   1a828:	3e6c 0a0d 0909 0909 6c3c 3e69 4547 2c54     l>......<li>GET,
   1a838:	5020 534f 2054 6572 7571 7365 7374 3c2e      POST requests.<
   1a848:	6c2f 3e69 0a0d 0909 0909 6c3c 3e69 4743     /li>......<li>CG
   1a858:	2c49 5320 4953 3c2e 6c2f 3e69 0a0d 0909     I, SSI.</li>....
   1a868:	0909 6c3c 3e69 6142 6973 2063 6341 6563     ..<li>Basic Acce
   1a878:	7373 4120 7475 6568 746e 6369 7461 6f69     ss Authenticatio
   1a888:	2e6e 2f3c 696c 0d3e 090a 0909 2f3c 6c75     n.</li>.....</ul
   1a898:	0d3e 090a 0909 2f3c 696c 0d3e 090a 0909     >.....</li>.....
   1a8a8:	6c3c 3e69 4554 4e4c 5445 5320 7265 6576     <li>TELNET Serve
   1a8b8:	2e72 2f3c 696c 0d3e 090a 0909 6c3c 3e69     r.</li>.....<li>
   1a8c8:	4e44 2053 6c43 6569 746e 3c2e 6c2f 3e69     DNS Client.</li>
   1a8d8:	0a0d 0909 3c09 696c 443e 4348 2050 6c43     .....<li>DHCP Cl
   1a8e8:	6569 746e 3c2e 6c2f 3e69 0a0d 0909 3c09     ient.</li>.....<
   1a8f8:	696c 543e 5446 2050 6553 7672 7265 432f     li>TFTP Server/C
   1a908:	696c 6e65 2e74 2f3c 696c 0d3e 090a 0909     lient.</li>.....
   1a918:	6c3c 3e69 4950 474e 5320 7265 6976 6563     <li>PING Service
   1a928:	3c2e 6c2f 3e69 0a0d 0909 3c09 696c 523e     .</li>.....<li>R
   1a938:	4d4f 4620 6c69 2065 7953 7473 6d65 3c2e     OM File System.<
   1a948:	6c2f 3e69 0a0d 0909 3c09 696c 463e 616c     /li>.....<li>Fla
   1a958:	6873 4d20 6d65 726f 2079 7244 7669 7265     sh Memory Driver
   1a968:	3c2e 6c2f 3e69 0a0d 0909 3c09 696c 433e     .</li>.....<li>C
   1a978:	6d6f 616d 646e 4c20 6e69 2065 6853 6c65     ommand Line Shel
   1a988:	2e6c 2f3c 696c 0d3e 090a 0909 6c3c 3e69     l.</li>.....<li>
   1a998:	6553 6972 6c61 4420 6972 6576 2e72 2f3c     Serial Driver.</
   1a9a8:	696c 0d3e 090a 3c09 752f 3e6c 0a0d 0909     li>....</ul>....
   1a9b8:	2f3c 696c 0d3e 090a 3c09 696c 543e 6f6f     </li>....<li>Too
   1a9c8:	736c 0d3a 090a 3c09 6c75 0d3e 090a 0909     ls:....<ul>.....
   1a9d8:	6c3c 3e69 5547 2049 6946 656c 5320 7379     <li>GUI File Sys
   1a9e8:	6574 206d 6547 656e 6172 6974 6e6f 5420     tem Generation T
   1a9f8:	6f6f 2e6c 2f3c 696c 0d3e 090a 0909 6c3c     ool.</li>.....<l
   1aa08:	3e69 5547 2049 6854 6f72 6775 7068 7475     i>GUI Throughput
   1aa18:	4220 6e65 6863 616d 6b72 5420 6f6f 2e6c      Benchmark Tool.
   1aa28:	2f3c 696c 0d3e 090a 3c09 752f 3e6c 0a0d     </li>....</ul>..
   1aa38:	0909 2f3c 696c 0d3e 090a 3c09 696c 413e     ..</li>....<li>A
   1aa48:	7070 696c 6163 6974 6e6f 3a73 0a0d 2020     pplications:..  
   1aa58:	2020 0920 753c 3e6c 0a0d 2020 2020 2020        .<ul>..      
   1aa68:	2020 3c09 696c 543e 5446 2050 6f42 746f       .<li>TFTP Boot
   1aa78:	6f6c 6461 7265 3c2e 6c2f 3e69 0a0d 0909     loader.</li>....
   1aa88:	3c09 696c 533e 6568 6c6c 4120 7070 696c     .<li>Shell Appli
   1aa98:	6163 6974 6e6f 3c2e 6c2f 3e69 0a0d 0909     cation.</li>....
   1aaa8:	3c09 696c 543e 7268 756f 6867 7570 2074     .<li>Throughput 
   1aab8:	6542 636e 6d68 7261 206b 7041 6c70 6369     Benchmark Applic
   1aac8:	7461 6f69 2e6e 2f3c 696c 0d3e 090a 3c09     ation.</li>....<
   1aad8:	752f 3e6c 0a0d 0909 2f3c 696c 0d3e 090a     /ul>....</li>...
   1aae8:	2f3c 6c75 0d3e 090a 733c 7263 7069 2074     </ul>...<script 
   1aaf8:	7974 6570 223d 6574 7478 6a2f 7661 7361     type="text/javas
   1ab08:	7263 7069 2274 0d3e 090a 6609 656e 5074     cript">....fnetP
   1ab18:	6972 746e 6f46 746f 7265 2928 0d3b 090a     rintFooter();...
   1ab28:	2f3c 6373 6972 7470 0d3e 3c0a 622f 646f     </script>..</bod
   1ab38:	3e79 0a0d 2f3c 7468 6c6d 0d3e 000a 0000     y>..</html>.....
   1ab48:	0000 0000 7561 6874 0000 0000 6e66 7465     ....auth....fnet
   1ab58:	615f 7475 2e68 7468 6c6d 0000 6166 6976     _auth.html..favi
   1ab68:	6f63 2e6e 6369 006f 6e66 7465 632e 7373     con.ico.fnet.css
   1ab78:	0000 0000 6e66 7465 6a2e 0073 6e66 7465     ....fnet.js.fnet
   1ab88:	675f 6172 6870 682e 6d74 006c 6e66 7465     _graph.html.fnet
   1ab98:	6c5f 676f 2e6f 6967 0066 0000 6e66 7465     _logo.gif...fnet
   1aba8:	705f 736f 2e74 7468 6c6d 0000 6e66 7465     _post.html..fnet
   1abb8:	735f 7465 732e 7468 6c6d 0000 6e66 7465     _set.shtml..fnet
   1abc8:	735f 6174 2e74 7468 6c6d 0000 6e66 7465     _stat.html..fnet
   1abd8:	735f 7075 682e 6d74 006c 0000 6e69 6564     _sup.html...inde
   1abe8:	2e78 7468 6c6d 0000 6e66 7465 725f 6d6f     x.html..fnet_rom
   1abf8:	0000 0000                                   ....

0001abfc <fnet_fs_image_nodes>:
   1abfc:	ab48 0001 0000 0000 0000 0000 0000 0000     H...............
   1ac0c:	ab4c 0001 0000 0000 0000 0000 abfc 0001     L...............
   1ac1c:	ab54 0001 4498 0001 0464 0000 ac0c 0001     T....D..d.......
   1ac2c:	ab64 0001 48fc 0001 057e 0000 abfc 0001     d....H..~.......
   1ac3c:	ab70 0001 4e7c 0001 1271 0000 abfc 0001     p...|N..q.......
   1ac4c:	ab7c 0001 60f0 0001 0a52 0000 abfc 0001     |....`..R.......
   1ac5c:	ab84 0001 6b44 0001 0c6b 0000 abfc 0001     ....Dk..k.......
   1ac6c:	ab94 0001 77b0 0001 066e 0000 abfc 0001     .....w..n.......
   1ac7c:	aba4 0001 7e20 0001 0b41 0000 abfc 0001     .... ~..A.......
   1ac8c:	abb4 0001 8964 0001 081e 0000 abfc 0001     ....d...........
   1ac9c:	abc4 0001 9184 0001 0885 0000 abfc 0001     ................
   1acac:	abd4 0001 9a0c 0001 046a 0000 abfc 0001     ........j.......
   1acbc:	abe4 0001 9e78 0001 0ccd 0000 abfc 0001     ....x...........
	...

0001acdc <fnet_fs_image>:
   1acdc:	abf0 0001 0002 0000 abfc 0001 7473 6164     ............stda
   1acec:	6174 632e 6967 0000 7267 7061 2e68 6763     ta.cgi..graph.cg
   1acfc:	0069 0000 6f72 006d 6e69 6564 2e78 7468     i...rom.index.ht
   1ad0c:	6c6d 0000 7468 7074 0020 0000 6b6f 0000     ml..http ...ok..
   1ad1c:	6166 6c69 0000 0000 7b28 2220 6974 656d     fail....({ "time
   1ad2c:	3a22 2522 3230 3a64 3025 6432 253a 3230     ":"%02d:%02d:%02
   1ad3c:	2264 222c 7874 3a22 6425 222c 7872 3a22     d","tx":%d,"rx":
   1ad4c:	6425 297d 0000 0000 7b28 7122 2231 253a     %d})....({"q1":%
   1ad5c:	2c64 7122 2232 253a 2c64 7122 2233 253a     d,"q2":%d,"q3":%
   1ad6c:	2c64 7122 2234 253a 2c64 7122 2235 253a     d,"q4":%d,"q5":%
   1ad7c:	7d64 0029                                   d}).

0001ad80 <fapp_cgi_table>:
   1ad80:	ace8 0001 f5f5 0000 f749 0000 acf4 0001     ........I.......
   1ad90:	f6e1 0000 f749 0000 0000 0000 0000 0000     ....I...........
   1ada0:	0000 0000 4155 5452 2520 2069 6e69 7469     ....UART %i init
   1adb0:	4020 7525 000a 0000 460a 454e 2054 4e49      @%u.....FNET IN
   1adc0:	5449 6920 2073 6f64 656e 000d 460a 454e     IT is done...FNE
   1add0:	2054 4e49 5449 6620 6961 656c 0d64 0000     T INIT failed...
   1ade0:	5346 6920 696e 2074 0000 0000 7573 6363     FS init ....succ
   1adf0:	7365 0a73 0000 0000 6e66 7465 725f 6d6f     ess.....fnet_rom
   1ae00:	0000 0000 6f72 006d 5245 4f52 3a52 4620     ....rom.ERROR: F
   1ae10:	2053 6d69 6761 2065 6f6d 6e75 2074 7369     S image mount is
   1ae20:	6620 6961 656c 2164 0000 0000 6166 6c69      failed!....fail
   1ae30:	000a 0000 7953 7473 6d65 7220 6765 203a     ....System reg: 
   1ae40:	000a 0000 4350 4e4f 2e50 4350 4e45 5445     ....PCONP.PCENET
   1ae50:	203a 6425 0020 0000 202c 4343 4b4c 4553     : %d ..., CCLKSE
   1ae60:	2e4c 4350 4e45 5445 203a 6425 0020 0000     L.PCENET: %d ...
   1ae70:	202c 564e 4349 322e 3a38 2520 2064 000a     , NVIC.28: %d ..
   1ae80:	5445 2048 6572 3a67 0a20 0000 4d20 4341     ETH reg: ... MAC
   1ae90:	3a31 3020 2578 3430 0058 0000 2c20 414d     1: 0x%04X... ,MA
   1aea0:	3243 203a 7830 3025 5834 0000 2c20 414d     C2: 0x%04X.. ,MA
   1aeb0:	4658 203a 6425 0000 2c20 5553 5050 203a     XF: %d.. ,SUPP: 
   1aec0:	7830 3025 5834 0000 2c20 494d 444e 203a     0x%04X.. ,MIND: 
   1aed0:	7830 3025 5834 0a20 0000 0000 4320 6d6f     0x%04X ..... Com
   1aee0:	616d 646e 203a 7830 3025 5834 0000 0000     mand: 0x%04X....
   1aef0:	2c20 7453 7461 7375 203a 7830 3025 5834      ,Status: 0x%04X
   1af00:	0a20 0000 5220 4478 7365 7263 7069 6f74      ... RxDescripto
   1af10:	3a72 3020 2578 3430 0058 0000 2c20 5352     r: 0x%04X... ,RS
   1af20:	3a56 3020 2578 3430 0058 0000 2c20 7852     V: 0x%04X... ,Rx
   1af30:	6544 6373 6972 7470 726f 754e 626d 7265     DescriptorNumber
   1af40:	203a 7830 3025 5834 0a20 0000 5420 4478     : 0x%04X ... TxD
   1af50:	7365 7263 7069 6f74 3a72 3020 2578 3430     escriptor: 0x%04
   1af60:	0058 0000 2c20 5354 3156 203a 7830 3025     X... ,TSV1: 0x%0
   1af70:	5834 0000 2c20 5254 4478 7365 7263 7069     4X.. ,TRxDescrip
   1af80:	6f74 4e72 6d75 6562 3a72 3020 2578 3430     torNumber: 0x%04
   1af90:	2058 000a 4520 414d 2e43 6e49 5374 6174     X .. EMAC.IntSta
   1afa0:	7574 3a73 3020 2578 3430 0058 4520 414d     tus: 0x%04X. EMA
   1afb0:	2e43 6e49 4574 616e 6c62 3a65 3020 2578     C.IntEnable: 0x%
   1afc0:	3430 2058 0a0a 0000 6f47 6f74 6d20 6961     04X ....Goto mai
   1afd0:	206e 6f6c 706f 2e2e 0a2e 0000 0043 0000     n loop......C...

0001afe0 <_global_impure_ptr>:
   1afe0:	02e0 1000                                   ....

0001afe4 <__EH_FRAME_BEGIN__>:
   1afe4:	0000 0000                                   ....
